{
  "display brain entities": "::relations",
  "display brain columns": "::columns particle",
  "ipfs: list pins": "?[cid, type] := *pin{cid, type}",
  "particle: pin | ls": [
    "r[cid,  pin] := *particle{cid}, not *pin{cid: cid, type}, pin=0",
    "r[cid, pin] := *particle{cid}, *pin{cid: cid, type}, pin=1",
    "?[pinned, cid, mime, text, size] := r[cid, pinned], *particle{cid:cid, mime, text, size}",
    ":order -size"
  ],
  "particle: filter": "?[cid, text] := *particle{cid, mime, text, blocks, size, sizeLocal, type}, mime=\"text/plain\"",
  "particle: stats": "?[mime, sum(size), count(mime), sum(blocks)] := *particle{mime, blocks, size}\r\n :order -sum(size)\r\n:limit 10",
  "link: stats": [
    "r[from, count(to), side] := *link{from, to}, side=\"from\"",
    "r[to, count(from), side] := *link{from, to}, side=\"to\"",
    "?[side, lnk, cnt] := r[lnk, cnt, side]",
    ":order -cnt"
  ],
  "link: list text-to-text": [
    "rt[text, from] := *link{from, to}, *particle{cid: from, text}",
    "rf[text, to] := *link{from, to}, *particle{cid: to, text}",
    "?[text_from, text_to]  := rt[text_from, from] , rf[text_to, to], text_from != '', text_to != ''"
  ],
  "tx: list with trim": [
    "?[type, v_trim, success, t] := *transaction{type, value, success, timestamp}, v_trim = from_substrings(slice(chars(dump_json(value)),0, 100)),  t = format_timestamp(timestamp/1000)",
    ":order -t"
  ],
  "tx: parse delegations": [
    "?[a, d, timestamp] := *transaction{type, value, timestamp}, type = 'cosmos.staking.v1beta1.MsgDelegate', a_ = get(value,'amount'), a = get(a_, 'amount'), d = get(a_, 'denom')",
    ":order -timestamp"
  ],
  "tx: parse cyberlinks": [
    "?[from, to, t] := *transaction{type, value, timestamp}, type = 'cyber.graph.v1beta1.MsgCyberlink', links = get(value, 'links'), l_ = get(links, 0), from =get(l_,'from'), to =get(l_,'to'), t = format_timestamp(timestamp/1000)",
    ":order -t"
  ]
}
