pub async fn react_to_particle(cid, content_type, content) {
    if content_type == "text" {
        if content.contains(".") {
            let items = content.split(".").collect::<Vec>();
            let username = items[0];
            let ext = items[1];
            if username.len() <= 14 && ext == "moon" {
                let result = cyb::get_passport_by_nickname(username).await;
                let particle_cid = result["extension"]["particle"];

                cyb::log(`Change ${cid} to ${particle_cid} based on ${username} particle`);
                return update_cid(particle_cid)
            }
        }

        if content.contains("dasein") {
            cyb::log(`Update ${cid} that contains dasein to Dasein the Great`);

            return update_content(content.replace("dasein", "Dasein the Great"))
        }

        if content.contains("хуярта") {
            cyb::log(`Hide items with хуярта in ${cid}`);
            return hide()
        }

        if content.contains("@NOW") {
            let left_part = content.split("@NOW").next().unwrap();
            let symbol = left_part.split(" ").rev().next().unwrap();
            let response = http::get( `https://api.binance.com/api/v3/ticker?symbol=${symbol}`).await?;
            let json = response.json().await?;
            return update_content(content.replace(`${symbol}@NOW`, json["lastPrice"]))
        }
    }

    pass() // Pass as is
}