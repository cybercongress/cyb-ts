{"version":3,"file":"805.75ee7734.chunk.js","mappings":"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","sources":["webpack://cyb/./node_modules/@assemblyscript/loader/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/@cosmjs/crypto/build/index.js","webpack://cyb/./node_modules/@cosmjs/encoding/build/index.js","webpack://cyb/./node_modules/@cosmjs/math/build/index.js","webpack://cyb/./node_modules/@cybercongress/cyber-js/build/index.js","webpack://cyb/./node_modules/abstract-level/abstract-chained-batch.js","webpack://cyb/./node_modules/abstract-level/abstract-iterator.js","webpack://cyb/./node_modules/abstract-level/abstract-level.js","webpack://cyb/./node_modules/abstract-level/index.js","webpack://cyb/./node_modules/abstract-level/lib/abstract-sublevel-iterator.js","webpack://cyb/./node_modules/abstract-level/lib/abstract-sublevel.js","webpack://cyb/./node_modules/abstract-level/lib/common.js","webpack://cyb/./node_modules/abstract-level/lib/default-chained-batch.js","webpack://cyb/./node_modules/abstract-level/lib/default-kv-iterator.js","webpack://cyb/./node_modules/abstract-level/lib/deferred-iterator.js","webpack://cyb/./node_modules/abstract-level/lib/next-tick-browser.js","webpack://cyb/./node_modules/abstract-level/lib/range-options.js","webpack://cyb/./node_modules/abstract-level/node_modules/buffer/index.js","webpack://cyb/./node_modules/any-signal/index.js","webpack://cyb/./node_modules/bech32/index.js","webpack://cyb/./node_modules/bignumber.js/bignumber.mjs","webpack://cyb/./node_modules/browser-level/index.js","webpack://cyb/./node_modules/browser-level/iterator.js","webpack://cyb/./node_modules/browser-level/util/clear.js","webpack://cyb/./node_modules/browser-level/util/deserialize.js","webpack://cyb/./node_modules/browser-level/util/key-range.js","webpack://cyb/./node_modules/buffer/index.js","webpack://cyb/./node_modules/bytes/index.js","webpack://cyb/./node_modules/catering/index.js","webpack://cyb/./node_modules/catering/next-tick-browser.js","webpack://cyb/./node_modules/comlink/dist/esm/comlink.mjs","webpack://cyb/./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js","webpack://cyb/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js","webpack://cyb/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://cyb/./node_modules/cyb-rune-wasm/cyb_rune_wasm.js","webpack://cyb/./node_modules/dateformat/lib/dateformat.js","webpack://cyb/./node_modules/debug/node_modules/ms/index.js","webpack://cyb/./node_modules/debug/src/browser.js","webpack://cyb/./node_modules/debug/src/common.js","webpack://cyb/./node_modules/delay/index.js","webpack://cyb/./node_modules/denque/index.js","webpack://cyb/./node_modules/detect-browser/es/index.js","webpack://cyb/./node_modules/dlv/dist/dlv.umd.js","webpack://cyb/./node_modules/err-code/index.js","webpack://cyb/./node_modules/event-iterator/lib/dom.js","webpack://cyb/./node_modules/event-iterator/lib/event-iterator.js","webpack://cyb/./node_modules/events/events.js","webpack://cyb/./node_modules/extract-files/public/ReactNativeFile.js","webpack://cyb/./node_modules/extract-files/public/extractFiles.js","webpack://cyb/./node_modules/extract-files/public/isExtractableFile.js","webpack://cyb/./node_modules/fast-fifo/fixed-size.js","webpack://cyb/./node_modules/fast-fifo/index.js","webpack://cyb/./node_modules/fnv1a/index.js","webpack://cyb/./node_modules/graphql-request/node_modules/form-data/lib/browser.js","webpack://cyb/./node_modules/hashlru/index.js","webpack://cyb/./node_modules/helia/node_modules/eventemitter3/index.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/index.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/BurstyRateLimiter.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RLWrapperBlackAndWhite.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterAbstract.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterMemcache.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterMemory.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterMongo.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterMySQL.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterPostgres.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterQueue.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterRedis.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterRes.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterStoreAbstract.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/RateLimiterUnion.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/component/BlockedKeys/BlockedKeys.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/component/BlockedKeys/index.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/component/MemoryStorage/MemoryStorage.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/component/MemoryStorage/Record.js","webpack://cyb/./node_modules/helia/node_modules/rate-limiter-flexible/lib/component/RateLimiterQueueError.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.cjs","webpack://cyb/./node_modules/@apollo/client/utilities/common/canUse.js","webpack://cyb/./node_modules/@apollo/client/utilities/globals/maybe.js","webpack://cyb/./node_modules/@chainsafe/is-ip/lib/is-ip.js","webpack://cyb/./node_modules/@chainsafe/is-ip/lib/parse.js","webpack://cyb/./node_modules/@chainsafe/is-ip/lib/parser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/it-pair/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/constants.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/_assert.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/crypto.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/hmac.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/hkdf.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/_sha2.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@noble/hashes/esm/sha256.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/crypto/js.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/concat.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/encoder.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/from-string.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/equals.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/webcrypto.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/exporter.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/keys.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/util.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/ecdh-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/random-bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/jwk2pem.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/secp256k1.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/crypto/dist/src/keys/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/peer-id/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/proto/payload.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/logger.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/nonce.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/handshakes/abstract-handshake.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/handshakes/xx.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/handshake-xx.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/noise.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/metrics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/node_modules/it-pair/dist/src/duplex.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/crypto/streaming.js","webpack://cyb/./node_modules/@chainsafe/libp2p-noise/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/abortable-iterator/dist/src/abort-error.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/abortable-iterator/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/get-iterator/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/it-pushable/dist/src/fifo.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/constants.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/config.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/frame.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/decode.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/encode.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/node_modules/it-foreach/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/stream.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/muxer.js","webpack://cyb/./node_modules/@chainsafe/libp2p-yamux/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/netmask/dist/src/ip.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-first/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-batch/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-parallel-batch/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/chunker/fixed-size.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs/dist/src/unixfs.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/utils/persist.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dag-builder/buffer-importer.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dag-builder/dir.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dag-builder/file.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dag-builder/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dag-builder/validate-chunks.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/layout/balanced.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dir.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dir-flat.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/node_modules/@multiformats/murmur3/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/dir-sharded.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/flat-to-shard.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/utils/to-path-components.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/tree-builder.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-importer/dist/src/chunker/rabin.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/add.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-last/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/dag-cbor.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/utils/extract-data-from-block.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/utils/validate-offset-and-length.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/identity.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/raw.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/node_modules/@multiformats/murmur3/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/utils/find-cid-in-shard.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-filter/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/it-map/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/unixfs-v1/content/directory.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/unixfs-v1/content/file.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/unixfs-v1/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/resolvers/index.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/ipfs-unixfs-exporter/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/errors.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/consumable-hash.js","webpack://cyb/./node_modules/@helia/unixfs/node_modules/@multiformats/murmur3/src/index.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/hamt-constants.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/persist.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/dir-sharded.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/hamt-utils.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/is-over-shard-threshold.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/add-link.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/cid-to-directory.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/cid-to-pblink.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/resolve.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/cat.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/constants.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/chmod.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/cp.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/ls.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/mkdir.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/utils/remove-link.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/rm.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/stat.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/commands/touch.js","webpack://cyb/./node_modules/@helia/unixfs/dist/src/index.js","webpack://cyb/./node_modules/@huggingface/jinja/dist/index.js","webpack://cyb/./node_modules/abortable-iterator/dist/src/abort-error.js","webpack://cyb/./node_modules/abortable-iterator/dist/src/index.js","webpack://cyb/./node_modules/abortable-iterator/node_modules/get-iterator/dist/src/index.js","webpack://cyb/./node_modules/array-shuffle/index.js","webpack://cyb/./node_modules/blob-to-it/dist/src/index.js","webpack://cyb/./node_modules/blockstore-core/dist/src/errors.js","webpack://cyb/./node_modules/blockstore-core/dist/src/base.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/blockstore-core/dist/src/memory.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/blockstore-core/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/blockstore-core/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/blockstore-core/node_modules/it-merge/node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/blockstore-core/dist/src/tiered.js","webpack://cyb/./node_modules/blockstore-core/dist/src/index.js","webpack://cyb/./node_modules/blockstore-datastore-adapter/node_modules/blockstore-core/src/base.js","webpack://cyb/./node_modules/blockstore-datastore-adapter/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/blockstore-datastore-adapter/src/index.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/blockstore-idb/dist/src/index.js","webpack://cyb/./node_modules/blockstore-idb/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/browser-readablestream-to-it/dist/src/index.js","webpack://cyb/./node_modules/byte-access/dist/src/index.js","webpack://cyb/./node_modules/cborg/esm/lib/0uint.js","webpack://cyb/./node_modules/cborg/esm/lib/1negint.js","webpack://cyb/./node_modules/cborg/esm/lib/2bytes.js","webpack://cyb/./node_modules/cborg/esm/lib/3string.js","webpack://cyb/./node_modules/cborg/esm/lib/4array.js","webpack://cyb/./node_modules/cborg/esm/lib/5map.js","webpack://cyb/./node_modules/cborg/esm/lib/6tag.js","webpack://cyb/./node_modules/cborg/esm/lib/7float.js","webpack://cyb/./node_modules/cborg/esm/lib/byte-utils.js","webpack://cyb/./node_modules/cborg/esm/lib/common.js","webpack://cyb/./node_modules/cborg/esm/lib/decode.js","webpack://cyb/./node_modules/cborg/esm/lib/is.js","webpack://cyb/./node_modules/cborg/esm/lib/bl.js","webpack://cyb/./node_modules/cborg/esm/lib/encode.js","webpack://cyb/./node_modules/cborg/esm/lib/json/encode.js","webpack://cyb/./node_modules/cborg/esm/lib/json/decode.js","webpack://cyb/./node_modules/cborg/esm/lib/jump.js","webpack://cyb/./node_modules/cborg/esm/lib/token.js","webpack://cyb/./node_modules/dag-jose/lib/utils.js","webpack://cyb/./node_modules/dag-jose/lib/signing.js","webpack://cyb/./node_modules/dag-jose/lib/encryption.js","webpack://cyb/./node_modules/dag-jose/lib/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-drain/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-filter/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-sort/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-take/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/dist/src/base.js","webpack://cyb/./node_modules/datastore-core/dist/src/errors.js","webpack://cyb/./node_modules/datastore-core/dist/src/shard.js","webpack://cyb/./node_modules/datastore-core/dist/src/sharding.js","webpack://cyb/./node_modules/datastore-core/node_modules/it-merge/node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/datastore-core/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/datastore-core/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/datastore-core/dist/src/tiered.js","webpack://cyb/./node_modules/datastore-core/dist/src/memory.js","webpack://cyb/./node_modules/datastore-core/node_modules/interface-datastore/dist/src/key.js","webpack://cyb/./node_modules/datastore-idb/node_modules/interface-datastore/dist/src/key.js","webpack://cyb/./node_modules/datastore-idb/node_modules/it-filter/dist/src/index.js","webpack://cyb/./node_modules/datastore-idb/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/datastore-idb/node_modules/it-sort/dist/src/index.js","webpack://cyb/./node_modules/datastore-idb/dist/src/index.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/errors.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/shard.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/utils.js","webpack://cyb/./node_modules/datastore-level/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/base.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/sharding.js","webpack://cyb/./node_modules/datastore-level/node_modules/datastore-core/src/tiered.js","webpack://cyb/./node_modules/datastore-level/src/index.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/datastore-core/src/shard.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/datastore-core/src/utils.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/datastore-core/src/base.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/datastore-core/src/sharding.js","webpack://cyb/./node_modules/datastore-pubsub/node_modules/datastore-core/src/tiered.js","webpack://cyb/./node_modules/datastore-pubsub/src/utils.js","webpack://cyb/./node_modules/datastore-pubsub/src/index.js","webpack://cyb/./node_modules/dns-over-http-resolver/node_modules/native-fetch/esm/src/index.js","webpack://cyb/./node_modules/dns-over-http-resolver/dist/src/utils.js","webpack://cyb/./node_modules/dns-over-http-resolver/dist/src/index.js","webpack://cyb/./node_modules/engine.io-parser/build/esm/commons.js","webpack://cyb/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://cyb/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://cyb/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://cyb/./node_modules/engine.io-parser/build/esm/index.js","webpack://cyb/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://cyb/./node_modules/engine.io-client/build/esm/util.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transport.js","webpack://cyb/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://cyb/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://cyb/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://cyb/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://cyb/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://cyb/./node_modules/engine.io-client/build/esm/socket.js","webpack://cyb/./node_modules/engine.io-client/build/esm/index.js","webpack://cyb/./node_modules/file-type/util.js","webpack://cyb/./node_modules/file-type/core.js","webpack://cyb/./node_modules/graphql-request/build/esm/defaultJsonSerializer.js","webpack://cyb/./node_modules/graphql-request/build/esm/createRequestBody.js","webpack://cyb/./node_modules/graphql-request/build/esm/resolveRequestDocument.js","webpack://cyb/./node_modules/graphql-request/build/esm/types.js","webpack://cyb/./node_modules/graphql-request/build/esm/index.js","webpack://cyb/./node_modules/graphql-request/build/esm/helpers.js","webpack://cyb/./node_modules/graphql-request/build/esm/parseArgs.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/bucket.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/consumable-buffer.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/consumable-hash.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/it-drain/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/is.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/token.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/byte-utils.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/bl.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/common.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/0uint.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/1negint.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/2bytes.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/3string.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/4array.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/5map.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/6tag.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/7float.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/jump.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/encode.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/decode.js","webpack://cyb/./node_modules/helia/node_modules/interface-datastore/dist/src/key.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/helia/node_modules/p-queue/dist/priority-queue.js","webpack://cyb/./node_modules/helia/node_modules/p-queue/dist/index.js","webpack://cyb/./node_modules/helia/node_modules/p-queue/dist/lower-bound.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/json/encode.js","webpack://cyb/./node_modules/helia/node_modules/cborg/lib/json/decode.js","webpack://cyb/./node_modules/helia/node_modules/@ipld/dag-json/src/index.js","webpack://cyb/./node_modules/helia/node_modules/@ipld/dag-pb/src/pb-decode.js","webpack://cyb/./node_modules/helia/node_modules/@ipld/dag-pb/src/pb-encode.js","webpack://cyb/./node_modules/helia/node_modules/@ipld/dag-pb/src/util.js","webpack://cyb/./node_modules/helia/node_modules/@ipld/dag-pb/src/index.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/helia/dist/src/utils/dag-walkers.js","webpack://cyb/./node_modules/helia/dist/src/pins.js","webpack://cyb/./node_modules/helia/dist/src/storage.js","webpack://cyb/./node_modules/helia/dist/src/utils/datastore-version.js","webpack://cyb/./node_modules/helia/node_modules/it-filter/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/it-foreach/dist/src/index.js","webpack://cyb/./node_modules/helia/dist/src/utils/networked-storage.js","webpack://cyb/./node_modules/helia/dist/src/helia.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/equals.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/peer-id/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/logger/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/message-cache.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/constants.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/shuffle.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/messageIdToString.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/from-string.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/dist/src/concat.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/webcrypto.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/exporter.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/keys.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/util.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/ecdh-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@noble/hashes/esm/crypto.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@noble/hashes/esm/utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/random-bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/jwk2pem.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/secp256k1.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/crypto/dist/src/keys/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/types.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/constants.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score-params.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score-thresholds.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/compute-score.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/message-deliveries.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/set.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/tracer.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/time-cache.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/metrics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@libp2p/pubsub/dist/src/utils.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/scoreMetrics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/it-pushable/dist/src/fifo.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/abortable-iterator/dist/src/abort-error.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/abortable-iterator/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/get-iterator/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/stream.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/decodeRpc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/multiaddr.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js","webpack://cyb/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js","webpack://cyb/./node_modules/helia/node_modules/abortable-iterator/dist/src/abort-error.js","webpack://cyb/./node_modules/helia/node_modules/abortable-iterator/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/get-iterator/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/it-pushable/dist/src/fifo.js","webpack://cyb/./node_modules/helia/node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/helia/node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/node_modules/uint8arrays/dist/src/from-string.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/message-types.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/decode.js","webpack://cyb/./node_modules/helia/node_modules/it-batched-bytes/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/alloc-unsafe-browser.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/encode.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/stream.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/mplex.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/mplex/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/from-string.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/equals.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/concat.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/webcrypto.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/exporter.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/keys.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/util.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/ecdh-browser.js","webpack://cyb/./node_modules/helia/node_modules/@noble/hashes/esm/crypto.js","webpack://cyb/./node_modules/helia/node_modules/@noble/hashes/esm/utils.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/random-bytes.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/jwk2pem.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/secp256k1.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/crypto/dist/src/keys/index.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/peer-id/node_modules/uint8arrays/dist/src/equals.js","webpack://cyb/./node_modules/helia/node_modules/@libp2p/peer-id/dist/src/index.js","webpack://cyb/./node_modules/helia/node_modules/ipns/dist/src/errors.js","webpack://cyb/./node_modules/helia/node_modules/ipns/dist/src/pb/ipns.js","webpack://cyb/./node_modules/helia/node_modules/ipns/dist/src/utils.js","webpack://cyb/./node_modules/helia/node_modules/ipns/dist/src/selector.js","webpack://cyb/./node_modules/helia/node_modules/ipns/dist/src/validator.js","webpack://cyb/./node_modules/helia/dist/src/utils/bootstrappers.js","webpack://cyb/./node_modules/helia/dist/src/utils/libp2p.js","webpack://cyb/./node_modules/helia/dist/src/utils/libp2p-defaults.browser.js","webpack://cyb/./node_modules/helia/dist/src/version.js","webpack://cyb/./node_modules/helia/dist/src/index.js","webpack://cyb/./node_modules/idb/build/wrap-idb-value.js","webpack://cyb/./node_modules/idb/build/index.js"],"sourcesContent":["\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;\nvar bip39_1 = require(\"./bip39\");\nObject.defineProperty(exports, \"Bip39\", { enumerable: true, get: function () { return bip39_1.Bip39; } });\nObject.defineProperty(exports, \"EnglishMnemonic\", { enumerable: true, get: function () { return bip39_1.EnglishMnemonic; } });\nvar hmac_1 = require(\"./hmac\");\nObject.defineProperty(exports, \"Hmac\", { enumerable: true, get: function () { return hmac_1.Hmac; } });\nvar keccak_1 = require(\"./keccak\");\nObject.defineProperty(exports, \"Keccak256\", { enumerable: true, get: function () { return keccak_1.Keccak256; } });\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak_1.keccak256; } });\nvar libsodium_1 = require(\"./libsodium\");\nObject.defineProperty(exports, \"Argon2id\", { enumerable: true, get: function () { return libsodium_1.Argon2id; } });\nObject.defineProperty(exports, \"Ed25519\", { enumerable: true, get: function () { return libsodium_1.Ed25519; } });\nObject.defineProperty(exports, \"Ed25519Keypair\", { enumerable: true, get: function () { return libsodium_1.Ed25519Keypair; } });\nObject.defineProperty(exports, \"isArgon2idOptions\", { enumerable: true, get: function () { return libsodium_1.isArgon2idOptions; } });\nObject.defineProperty(exports, \"xchacha20NonceLength\", { enumerable: true, get: function () { return libsodium_1.xchacha20NonceLength; } });\nObject.defineProperty(exports, \"Xchacha20poly1305Ietf\", { enumerable: true, get: function () { return libsodium_1.Xchacha20poly1305Ietf; } });\nvar random_1 = require(\"./random\");\nObject.defineProperty(exports, \"Random\", { enumerable: true, get: function () { return random_1.Random; } });\nvar ripemd_1 = require(\"./ripemd\");\nObject.defineProperty(exports, \"Ripemd160\", { enumerable: true, get: function () { return ripemd_1.Ripemd160; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return ripemd_1.ripemd160; } });\nvar secp256k1_1 = require(\"./secp256k1\");\nObject.defineProperty(exports, \"Secp256k1\", { enumerable: true, get: function () { return secp256k1_1.Secp256k1; } });\nvar secp256k1signature_1 = require(\"./secp256k1signature\");\nObject.defineProperty(exports, \"ExtendedSecp256k1Signature\", { enumerable: true, get: function () { return secp256k1signature_1.ExtendedSecp256k1Signature; } });\nObject.defineProperty(exports, \"Secp256k1Signature\", { enumerable: true, get: function () { return secp256k1signature_1.Secp256k1Signature; } });\nvar sha_1 = require(\"./sha\");\nObject.defineProperty(exports, \"Sha256\", { enumerable: true, get: function () { return sha_1.Sha256; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha_1.sha256; } });\nObject.defineProperty(exports, \"Sha512\", { enumerable: true, get: function () { return sha_1.Sha512; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha_1.sha512; } });\nvar slip10_1 = require(\"./slip10\");\nObject.defineProperty(exports, \"pathToString\", { enumerable: true, get: function () { return slip10_1.pathToString; } });\nObject.defineProperty(exports, \"Slip10\", { enumerable: true, get: function () { return slip10_1.Slip10; } });\nObject.defineProperty(exports, \"Slip10Curve\", { enumerable: true, get: function () { return slip10_1.Slip10Curve; } });\nObject.defineProperty(exports, \"slip10CurveFromString\", { enumerable: true, get: function () { return slip10_1.slip10CurveFromString; } });\nObject.defineProperty(exports, \"Slip10RawIndex\", { enumerable: true, get: function () { return slip10_1.Slip10RawIndex; } });\nObject.defineProperty(exports, \"stringToPath\", { enumerable: true, get: function () { return slip10_1.stringToPath; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.Bech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;\nvar ascii_1 = require(\"./ascii\");\nObject.defineProperty(exports, \"fromAscii\", { enumerable: true, get: function () { return ascii_1.fromAscii; } });\nObject.defineProperty(exports, \"toAscii\", { enumerable: true, get: function () { return ascii_1.toAscii; } });\nvar base64_1 = require(\"./base64\");\nObject.defineProperty(exports, \"fromBase64\", { enumerable: true, get: function () { return base64_1.fromBase64; } });\nObject.defineProperty(exports, \"toBase64\", { enumerable: true, get: function () { return base64_1.toBase64; } });\nvar bech32_1 = require(\"./bech32\");\nObject.defineProperty(exports, \"Bech32\", { enumerable: true, get: function () { return bech32_1.Bech32; } });\nObject.defineProperty(exports, \"fromBech32\", { enumerable: true, get: function () { return bech32_1.fromBech32; } });\nObject.defineProperty(exports, \"normalizeBech32\", { enumerable: true, get: function () { return bech32_1.normalizeBech32; } });\nObject.defineProperty(exports, \"toBech32\", { enumerable: true, get: function () { return bech32_1.toBech32; } });\nvar hex_1 = require(\"./hex\");\nObject.defineProperty(exports, \"fromHex\", { enumerable: true, get: function () { return hex_1.fromHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return hex_1.toHex; } });\nvar rfc3339_1 = require(\"./rfc3339\");\nObject.defineProperty(exports, \"fromRfc3339\", { enumerable: true, get: function () { return rfc3339_1.fromRfc3339; } });\nObject.defineProperty(exports, \"toRfc3339\", { enumerable: true, get: function () { return rfc3339_1.toRfc3339; } });\nvar utf8_1 = require(\"./utf8\");\nObject.defineProperty(exports, \"fromUtf8\", { enumerable: true, get: function () { return utf8_1.fromUtf8; } });\nObject.defineProperty(exports, \"toUtf8\", { enumerable: true, get: function () { return utf8_1.toUtf8; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;\nvar decimal_1 = require(\"./decimal\");\nObject.defineProperty(exports, \"Decimal\", { enumerable: true, get: function () { return decimal_1.Decimal; } });\nvar integers_1 = require(\"./integers\");\nObject.defineProperty(exports, \"Int53\", { enumerable: true, get: function () { return integers_1.Int53; } });\nObject.defineProperty(exports, \"Uint32\", { enumerable: true, get: function () { return integers_1.Uint32; } });\nObject.defineProperty(exports, \"Uint53\", { enumerable: true, get: function () { return integers_1.Uint53; } });\nObject.defineProperty(exports, \"Uint64\", { enumerable: true, get: function () { return integers_1.Uint64; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OfflineDappWallet = exports.SigningCyberClient = exports.CyberClient = void 0;\nvar cyberclient_1 = require(\"./cyberclient\");\nObject.defineProperty(exports, \"CyberClient\", { enumerable: true, get: function () { return cyberclient_1.CyberClient; } });\nvar signingcyberclient_1 = require(\"./signingcyberclient\");\nObject.defineProperty(exports, \"SigningCyberClient\", { enumerable: true, get: function () { return signingcyberclient_1.SigningCyberClient; } });\nObject.defineProperty(exports, \"OfflineDappWallet\", { enumerable: true, get: function () { return signingcyberclient_1.OfflineDappWallet; } });\n__exportStar(require(\"./registryTypes\"), exports);\n//# sourceMappingURL=index.js.map","'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getCallback, getOptions } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kStatus = Symbol('status')\nconst kOperations = Symbol('operations')\nconst kFinishClose = Symbol('finishClose')\nconst kCloseCallbacks = Symbol('closeCallbacks')\n\nclass AbstractChainedBatch {\n  constructor (db) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    this[kOperations] = []\n    this[kCloseCallbacks] = []\n    this[kStatus] = 'open'\n    this[kFinishClose] = this[kFinishClose].bind(this)\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get length () {\n    return this[kOperations].length\n  }\n\n  put (key, value, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call put() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key) || this.db._checkValue(value)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = db.valueEncoding(options && options.valueEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat, valueEncoding: valueEncoding.format }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    const mappedKey = db.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options)\n    this[kOperations].push({ ...original, type: 'put', key, value })\n\n    return this\n  }\n\n  _put (key, value, options) {}\n\n  del (key, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call del() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    this._del(db.prefixKey(keyEncoding.encode(key), keyFormat), options)\n    this[kOperations].push({ ...original, type: 'del', key })\n\n    return this\n  }\n\n  _del (key, options) {}\n\n  clear () {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call clear() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    this._clear()\n    this[kOperations] = []\n\n    return this\n  }\n\n  _clear () {}\n\n  write (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options)\n\n    if (this[kStatus] !== 'open') {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    } else if (this.length === 0) {\n      this.close(callback)\n    } else {\n      this[kStatus] = 'writing'\n      this._write(options, (err) => {\n        this[kStatus] = 'closing'\n        this[kCloseCallbacks].push(() => callback(err))\n\n        // Emit after setting 'closing' status, because event may trigger a\n        // db close which in turn triggers (idempotently) closing this batch.\n        if (!err) this.db.emit('batch', this[kOperations])\n\n        this._close(this[kFinishClose])\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _write (options, callback) {}\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kStatus] === 'closing') {\n      this[kCloseCallbacks].push(callback)\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(callback)\n    } else {\n      this[kCloseCallbacks].push(callback)\n\n      if (this[kStatus] !== 'writing') {\n        this[kStatus] = 'closing'\n        this._close(this[kFinishClose])\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kFinishClose] () {\n    this[kStatus] = 'closed'\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n}\n\nexports.AbstractChainedBatch = AbstractChainedBatch\n","'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getOptions, getCallback } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kCallback = Symbol('callback')\nconst kWorking = Symbol('working')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kAutoClose = Symbol('autoClose')\nconst kFinishWork = Symbol('finishWork')\nconst kReturnMany = Symbol('returnMany')\nconst kClosing = Symbol('closing')\nconst kHandleClose = Symbol('handleClose')\nconst kClosed = Symbol('closed')\nconst kCloseCallbacks = Symbol('closeCallbacks')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst kAbortOnClose = Symbol('abortOnClose')\nconst kLegacy = Symbol('legacy')\nconst kKeys = Symbol('keys')\nconst kValues = Symbol('values')\nconst kLimit = Symbol('limit')\nconst kCount = Symbol('count')\n\nconst emptyOptions = Object.freeze({})\nconst noop = () => {}\nlet warnedEnd = false\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor (db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object')\n    }\n\n    this[kClosed] = false\n    this[kCloseCallbacks] = []\n    this[kWorking] = false\n    this[kClosing] = false\n    this[kAutoClose] = false\n    this[kCallback] = null\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kHandleClose] = this[kHandleClose].bind(this)\n    this[kKeyEncoding] = options[kKeyEncoding]\n    this[kValueEncoding] = options[kValueEncoding]\n    this[kLegacy] = legacy\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity\n    this[kCount] = 0\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get count () {\n    return this[kCount]\n  }\n\n  get limit () {\n    return this[kLimit]\n  }\n\n  next (callback) {\n    let promise\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err)\n          else if (!this[kLegacy]) resolve(key)\n          else if (key === undefined && value === undefined) resolve()\n          else resolve([key, value])\n        }\n      })\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function')\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null)\n      else this._next(this[kHandleOne])\n    }\n\n    return promise\n  }\n\n  _next (callback) {\n    this.nextTick(callback)\n  }\n\n  nextv (size, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"))\n      return callback[kPromise]\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      if (size < 1) size = 1\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount])\n\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (size <= 0) this.nextTick(this[kHandleMany], null, [])\n      else this._nextv(size, options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _nextv (size, options, callback) {\n    const acc = []\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err)\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc)\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key)\n\n      if (acc.length === size) {\n        callback(null, acc)\n      } else {\n        this._next(onnext)\n      }\n    }\n\n    this._next(onnext)\n  }\n\n  all (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n      this[kAutoClose] = true\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, [])\n      else this._all(options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _all (options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount]\n    const acc = []\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc)\n      } else {\n        this._nextv(size, emptyOptions, onnextv)\n      }\n    }\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err)\n      } else if (items.length === 0) {\n        callback(null, acc)\n      } else {\n        acc.push.apply(acc, items)\n        count += items.length\n        nextv()\n      }\n    }\n\n    nextv()\n  }\n\n  [kFinishWork] () {\n    const cb = this[kCallback]\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop\n\n    this[kWorking] = false\n    this[kCallback] = null\n\n    if (this[kClosing]) this._close(this[kHandleClose])\n\n    return cb\n  }\n\n  [kReturnMany] (cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items))\n    } else {\n      cb(err, items)\n    }\n  }\n\n  seek (target, options) {\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      })\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding])\n      const keyFormat = keyEncoding.format\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options, keyEncoding: keyFormat }\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat)\n      this._seek(mapped, options)\n    }\n  }\n\n  _seek (target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    })\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kClosed]) {\n      this.nextTick(callback)\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback)\n    } else {\n      this[kClosing] = true\n      this[kCloseCallbacks].push(callback)\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose])\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]()\n\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }))\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kHandleClose] () {\n    this[kClosed] = true\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n\n  async * [Symbol.asyncIterator] () {\n    try {\n      let item\n\n      while ((item = (await this.next())) !== undefined) {\n        yield item\n      }\n    } finally {\n      if (!this[kClosed]) await this.close()\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, true)\n    this[kKeys] = options.keys !== false\n    this[kValues] = options.values !== false\n  }\n\n  [kHandleOne] (err, key, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err))\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++\n    }\n\n    cb(null, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0]\n        const value = entry[1]\n\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err))\n    }\n\n    this[kCount] += entries.length\n    this[kReturnMany](cb, null, entries)\n  }\n\n  end (callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true\n      console.warn(new ModuleError(\n        'The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version',\n        { code: 'LEVEL_LEGACY' }\n      ))\n    }\n\n    return this.close(callback)\n  }\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, key) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err))\n    }\n\n    if (key !== undefined) this[kCount]++\n    cb(null, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err))\n    }\n\n    this[kCount] += keys.length\n    this[kReturnMany](cb, null, keys)\n  }\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err))\n    }\n\n    if (value !== undefined) this[kCount]++\n    cb(null, value)\n  }\n\n  [kHandleMany] (err, values) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err))\n    }\n\n    this[kCount] += values.length\n    this[kReturnMany](cb, null, values)\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor (subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    })\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) },\n    set () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) }\n  })\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding\nAbstractIterator.valueEncoding = kValueEncoding\n\nexports.AbstractIterator = AbstractIterator\nexports.AbstractKeyIterator = AbstractKeyIterator\nexports.AbstractValueIterator = AbstractValueIterator\n","'use strict'\n\nconst { supports } = require('level-supports')\nconst { Transcoder } = require('level-transcoder')\nconst { EventEmitter } = require('events')\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { AbstractIterator } = require('./abstract-iterator')\nconst { DefaultKeyIterator, DefaultValueIterator } = require('./lib/default-kv-iterator')\nconst { DeferredIterator, DeferredKeyIterator, DeferredValueIterator } = require('./lib/deferred-iterator')\nconst { DefaultChainedBatch } = require('./lib/default-chained-batch')\nconst { getCallback, getOptions } = require('./lib/common')\nconst rangeOptions = require('./lib/range-options')\n\nconst kPromise = Symbol('promise')\nconst kLanded = Symbol('landed')\nconst kResources = Symbol('resources')\nconst kCloseResources = Symbol('closeResources')\nconst kOperations = Symbol('operations')\nconst kUndefer = Symbol('undefer')\nconst kDeferOpen = Symbol('deferOpen')\nconst kOptions = Symbol('options')\nconst kStatus = Symbol('status')\nconst kDefaultOptions = Symbol('defaultOptions')\nconst kTranscoder = Symbol('transcoder')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst noop = () => {}\n\nclass AbstractLevel extends EventEmitter {\n  constructor (manifest, options) {\n    super()\n\n    if (typeof manifest !== 'object' || manifest === null) {\n      throw new TypeError(\"The first argument 'manifest' must be an object\")\n    }\n\n    options = getOptions(options)\n    const { keyEncoding, valueEncoding, passive, ...forward } = options\n\n    this[kResources] = new Set()\n    this[kOperations] = []\n    this[kDeferOpen] = true\n    this[kOptions] = forward\n    this[kStatus] = 'opening'\n\n    this.supports = supports(manifest, {\n      status: true,\n      promises: true,\n      clear: true,\n      getMany: true,\n      deferredOpen: true,\n\n      // TODO (next major): add seek\n      snapshots: manifest.snapshots !== false,\n      permanence: manifest.permanence !== false,\n\n      // TODO: remove from level-supports because it's always supported\n      keyIterator: true,\n      valueIterator: true,\n      iteratorNextv: true,\n      iteratorAll: true,\n\n      encodings: manifest.encodings || {},\n      events: Object.assign({}, manifest.events, {\n        opening: true,\n        open: true,\n        closing: true,\n        closed: true,\n        put: true,\n        del: true,\n        batch: true,\n        clear: true\n      })\n    })\n\n    this[kTranscoder] = new Transcoder(formats(this))\n    this[kKeyEncoding] = this[kTranscoder].encoding(keyEncoding || 'utf8')\n    this[kValueEncoding] = this[kTranscoder].encoding(valueEncoding || 'utf8')\n\n    // Add custom and transcoder encodings to manifest\n    for (const encoding of this[kTranscoder].encodings()) {\n      if (!this.supports.encodings[encoding.commonName]) {\n        this.supports.encodings[encoding.commonName] = true\n      }\n    }\n\n    this[kDefaultOptions] = {\n      empty: Object.freeze({}),\n      entry: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName,\n        valueEncoding: this[kValueEncoding].commonName\n      }),\n      key: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName\n      })\n    }\n\n    // Let subclass finish its constructor\n    this.nextTick(() => {\n      if (this[kDeferOpen]) {\n        this.open({ passive: false }, noop)\n      }\n    })\n  }\n\n  get status () {\n    return this[kStatus]\n  }\n\n  keyEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kKeyEncoding])\n  }\n\n  valueEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kValueEncoding])\n  }\n\n  open (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n\n    options = { ...this[kOptions], ...getOptions(options) }\n\n    options.createIfMissing = options.createIfMissing !== false\n    options.errorIfExists = !!options.errorIfExists\n\n    const maybeOpened = (err) => {\n      if (this[kStatus] === 'closing' || this[kStatus] === 'opening') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? () => maybeOpened(err) : maybeOpened)\n      } else if (this[kStatus] !== 'open') {\n        callback(new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (options.passive) {\n      if (this[kStatus] === 'opening') {\n        this.once(kLanded, maybeOpened)\n      } else {\n        this.nextTick(maybeOpened)\n      }\n    } else if (this[kStatus] === 'closed' || this[kDeferOpen]) {\n      this[kDeferOpen] = false\n      this[kStatus] = 'opening'\n      this.emit('opening')\n\n      this._open(options, (err) => {\n        if (err) {\n          this[kStatus] = 'closed'\n\n          // Resources must be safe to close in any db state\n          this[kCloseResources](() => {\n            this.emit(kLanded)\n            maybeOpened(err)\n          })\n\n          this[kUndefer]()\n          return\n        }\n\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n\n        // Only emit public event if pending state changes are done\n        if (this[kStatus] === 'open') this.emit('open')\n\n        // TODO (next major): remove this alias\n        if (this[kStatus] === 'open') this.emit('ready')\n\n        maybeOpened()\n      })\n    } else if (this[kStatus] === 'open') {\n      this.nextTick(maybeOpened)\n    } else {\n      this.once(kLanded, () => this.open(options, callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  _open (options, callback) {\n    this.nextTick(callback)\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    const maybeClosed = (err) => {\n      if (this[kStatus] === 'opening' || this[kStatus] === 'closing') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? maybeClosed(err) : maybeClosed)\n      } else if (this[kStatus] !== 'closed') {\n        callback(new ModuleError('Database is not closed', {\n          code: 'LEVEL_DATABASE_NOT_CLOSED',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (this[kStatus] === 'open') {\n      this[kStatus] = 'closing'\n      this.emit('closing')\n\n      const cancel = (err) => {\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n        maybeClosed(err)\n      }\n\n      this[kCloseResources](() => {\n        this._close((err) => {\n          if (err) return cancel(err)\n\n          this[kStatus] = 'closed'\n          this[kUndefer]()\n          this.emit(kLanded)\n\n          // Only emit public event if pending state changes are done\n          if (this[kStatus] === 'closed') this.emit('closed')\n\n          maybeClosed()\n        })\n      })\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(maybeClosed)\n    } else {\n      this.once(kLanded, () => this.close(callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  [kCloseResources] (callback) {\n    if (this[kResources].size === 0) {\n      return this.nextTick(callback)\n    }\n\n    let pending = this[kResources].size\n    let sync = true\n\n    const next = () => {\n      if (--pending === 0) {\n        // We don't have tests for generic resources, so dezalgo\n        if (sync) this.nextTick(callback)\n        else callback()\n      }\n    }\n\n    // In parallel so that all resources know they are closed\n    for (const resource of this[kResources]) {\n      resource.close(next)\n    }\n\n    sync = false\n    this[kResources].clear()\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  get (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.get(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options to the underlying store\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      // Avoid spread operator because of https://bugs.chromium.org/p/chromium/issues/detail?id=1204540\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    this._get(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err, value) => {\n      if (err) {\n        // Normalize not found error for backwards compatibility with abstract-leveldown and level(up)\n        if (err.code === 'LEVEL_NOT_FOUND' || err.notFound || /NotFound/i.test(err)) {\n          if (!err.code) err.code = 'LEVEL_NOT_FOUND' // Preferred way going forward\n          if (!err.notFound) err.notFound = true // Same as level-errors\n          if (!err.status) err.status = 404 // Same as level-errors\n        }\n\n        return callback(err)\n      }\n\n      try {\n        value = valueEncoding.decode(value)\n      } catch (err) {\n        return callback(new ModuleError('Could not decode value', {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, value)\n    })\n\n    return callback[kPromise]\n  }\n\n  _get (key, options, callback) {\n    this.nextTick(callback, new Error('NotFound'))\n  }\n\n  getMany (keys, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.getMany(keys, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(keys)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'keys' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (keys.length === 0) {\n      this.nextTick(callback, null, [])\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKeys = new Array(keys.length)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const err = this._checkKey(key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      mappedKeys[i] = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    }\n\n    this._getMany(mappedKeys, options, (err, values) => {\n      if (err) return callback(err)\n\n      try {\n        for (let i = 0; i < values.length; i++) {\n          if (values[i] !== undefined) {\n            values[i] = valueEncoding.decode(values[i])\n          }\n        }\n      } catch (err) {\n        return callback(new ModuleError(`Could not decode one or more of ${values.length} value(s)`, {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, values)\n    })\n\n    return callback[kPromise]\n  }\n\n  _getMany (keys, options, callback) {\n    this.nextTick(callback, null, new Array(keys.length).fill(undefined))\n  }\n\n  put (key, value, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.put(key, value, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key) || this._checkValue(value)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKey = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options, (err) => {\n      if (err) return callback(err)\n      this.emit('put', key, value)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _put (key, value, options, callback) {\n    this.nextTick(callback)\n  }\n\n  del (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].key)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.del(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat })\n    }\n\n    this._del(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err) => {\n      if (err) return callback(err)\n      this.emit('del', key)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _del (key, options, callback) {\n    this.nextTick(callback)\n  }\n\n  batch (operations, options, callback) {\n    if (!arguments.length) {\n      if (this[kStatus] === 'opening') return new DefaultChainedBatch(this)\n      if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        })\n      }\n      return this._chainedBatch()\n    }\n\n    if (typeof operations === 'function') callback = operations\n    else callback = getCallback(options, callback)\n\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.batch(operations, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(operations)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'operations' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (operations.length === 0) {\n      this.nextTick(callback)\n      return callback[kPromise]\n    }\n\n    const mapped = new Array(operations.length)\n    const { keyEncoding: ke, valueEncoding: ve, ...forward } = options\n\n    for (let i = 0; i < operations.length; i++) {\n      if (typeof operations[i] !== 'object' || operations[i] === null) {\n        this.nextTick(callback, new TypeError('A batch operation must be an object'))\n        return callback[kPromise]\n      }\n\n      const op = Object.assign({}, operations[i])\n\n      if (op.type !== 'put' && op.type !== 'del') {\n        this.nextTick(callback, new TypeError(\"A batch operation must have a type property that is 'put' or 'del'\"))\n        return callback[kPromise]\n      }\n\n      const err = this._checkKey(op.key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      const db = op.sublevel != null ? op.sublevel : this\n      const keyEncoding = db.keyEncoding(op.keyEncoding || ke)\n      const keyFormat = keyEncoding.format\n\n      op.key = db.prefixKey(keyEncoding.encode(op.key), keyFormat)\n      op.keyEncoding = keyFormat\n\n      if (op.type === 'put') {\n        const valueErr = this._checkValue(op.value)\n\n        if (valueErr) {\n          this.nextTick(callback, valueErr)\n          return callback[kPromise]\n        }\n\n        const valueEncoding = db.valueEncoding(op.valueEncoding || ve)\n\n        op.value = valueEncoding.encode(op.value)\n        op.valueEncoding = valueEncoding.format\n      }\n\n      // Prevent double prefixing\n      if (db !== this) {\n        op.sublevel = null\n      }\n\n      mapped[i] = op\n    }\n\n    this._batch(mapped, forward, (err) => {\n      if (err) return callback(err)\n      this.emit('batch', operations)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _batch (operations, options, callback) {\n    this.nextTick(callback)\n  }\n\n  sublevel (name, options) {\n    return this._sublevel(name, AbstractSublevel.defaults(options))\n  }\n\n  _sublevel (name, options) {\n    return new AbstractSublevel(this, name, options)\n  }\n\n  prefixKey (key, keyFormat) {\n    return key\n  }\n\n  clear (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.clear(options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const original = options\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keyEncoding = keyEncoding.format\n\n    if (options.limit === 0) {\n      this.nextTick(callback)\n    } else {\n      this._clear(options, (err) => {\n        if (err) return callback(err)\n        this.emit('clear', original)\n        callback()\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _clear (options, callback) {\n    this.nextTick(callback)\n  }\n\n  iterator (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keys = options.keys !== false\n    options.values = options.values !== false\n\n    // We need the original encoding options in AbstractIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._iterator(options)\n  }\n\n  _iterator (options) {\n    return new AbstractIterator(this, options)\n  }\n\n  keys (options) {\n    // Also include valueEncoding (though unused) because we may fallback to _iterator()\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractKeyIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredKeyIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._keys(options)\n  }\n\n  _keys (options) {\n    return new DefaultKeyIterator(this, options)\n  }\n\n  values (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractValueIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredValueIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._values(options)\n  }\n\n  _values (options) {\n    return new DefaultValueIterator(this, options)\n  }\n\n  defer (fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('The first argument must be a function')\n    }\n\n    this[kOperations].push(fn)\n  }\n\n  [kUndefer] () {\n    if (this[kOperations].length === 0) {\n      return\n    }\n\n    const operations = this[kOperations]\n    this[kOperations] = []\n\n    for (const op of operations) {\n      op()\n    }\n  }\n\n  // TODO: docs and types\n  attachResource (resource) {\n    if (typeof resource !== 'object' || resource === null ||\n      typeof resource.close !== 'function') {\n      throw new TypeError('The first argument must be a resource object')\n    }\n\n    this[kResources].add(resource)\n  }\n\n  // TODO: docs and types\n  detachResource (resource) {\n    this[kResources].delete(resource)\n  }\n\n  _chainedBatch () {\n    return new DefaultChainedBatch(this)\n  }\n\n  _checkKey (key) {\n    if (key === null || key === undefined) {\n      return new ModuleError('Key cannot be null or undefined', {\n        code: 'LEVEL_INVALID_KEY'\n      })\n    }\n  }\n\n  _checkValue (value) {\n    if (value === null || value === undefined) {\n      return new ModuleError('Value cannot be null or undefined', {\n        code: 'LEVEL_INVALID_VALUE'\n      })\n    }\n  }\n}\n\n// Expose browser-compatible nextTick for dependents\n// TODO: after we drop node 10, also use queueMicrotask in node\nAbstractLevel.prototype.nextTick = require('./lib/next-tick')\n\nconst { AbstractSublevel } = require('./lib/abstract-sublevel')({ AbstractLevel })\n\nexports.AbstractLevel = AbstractLevel\nexports.AbstractSublevel = AbstractSublevel\n\nconst maybeError = function (db, callback) {\n  if (db[kStatus] !== 'open') {\n    db.nextTick(callback, new ModuleError('Database is not open', {\n      code: 'LEVEL_DATABASE_NOT_OPEN'\n    }))\n    return true\n  }\n\n  return false\n}\n\nconst formats = function (db) {\n  return Object.keys(db.supports.encodings)\n    .filter(k => !!db.supports.encodings[k])\n}\n","'use strict'\n\nexports.AbstractLevel = require('./abstract-level').AbstractLevel\nexports.AbstractSublevel = require('./abstract-level').AbstractSublevel\nexports.AbstractIterator = require('./abstract-iterator').AbstractIterator\nexports.AbstractKeyIterator = require('./abstract-iterator').AbstractKeyIterator\nexports.AbstractValueIterator = require('./abstract-iterator').AbstractValueIterator\nexports.AbstractChainedBatch = require('./abstract-chained-batch').AbstractChainedBatch\n","'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kUnfix = Symbol('unfix')\nconst kIterator = Symbol('iterator')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kCallback = Symbol('callback')\n\n// TODO: unfix natively if db supports it\nclass AbstractSublevelIterator extends AbstractIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key, value) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (const entry of entries) {\n      const key = entry[0]\n      if (key !== undefined) entry[0] = this[kUnfix](key)\n    }\n\n    callback(err, entries)\n  }\n}\n\nclass AbstractSublevelKeyIterator extends AbstractKeyIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (key !== undefined) keys[i] = this[kUnfix](key)\n    }\n\n    callback(err, keys)\n  }\n}\n\nclass AbstractSublevelValueIterator extends AbstractValueIterator {\n  constructor (db, options, iterator) {\n    super(db, options)\n    this[kIterator] = iterator\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n}\n\nfor (const Iterator of [AbstractSublevelValueIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kIterator].next(callback)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kIterator].nextv(size, options, callback)\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kIterator].all(options, callback)\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator, AbstractSublevelValueIterator]) {\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\nexports.AbstractSublevelIterator = AbstractSublevelIterator\nexports.AbstractSublevelKeyIterator = AbstractSublevelKeyIterator\nexports.AbstractSublevelValueIterator = AbstractSublevelValueIterator\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst { Buffer } = require('buffer') || {}\nconst {\n  AbstractSublevelIterator,\n  AbstractSublevelKeyIterator,\n  AbstractSublevelValueIterator\n} = require('./abstract-sublevel-iterator')\n\nconst kPrefix = Symbol('prefix')\nconst kUpperBound = Symbol('upperBound')\nconst kPrefixRange = Symbol('prefixRange')\nconst kParent = Symbol('parent')\nconst kUnfix = Symbol('unfix')\n\nconst textEncoder = new TextEncoder()\nconst defaults = { separator: '!' }\n\n// Wrapped to avoid circular dependency\nmodule.exports = function ({ AbstractLevel }) {\n  class AbstractSublevel extends AbstractLevel {\n    static defaults (options) {\n      // To help migrating from subleveldown to abstract-level\n      if (typeof options === 'string') {\n        throw new ModuleError('The subleveldown string shorthand for { separator } has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      } else if (options && options.open) {\n        throw new ModuleError('The subleveldown open option has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      }\n\n      if (options == null) {\n        return defaults\n      } else if (!options.separator) {\n        return { ...options, separator: '!' }\n      } else {\n        return options\n      }\n    }\n\n    // TODO: add autoClose option, which if true, does parent.attachResource(this)\n    constructor (db, name, options) {\n      // Don't forward AbstractSublevel options to AbstractLevel\n      const { separator, manifest, ...forward } = AbstractSublevel.defaults(options)\n      name = trim(name, separator)\n\n      // Reserve one character between separator and name to give us an upper bound\n      const reserved = separator.charCodeAt(0) + 1\n      const parent = db[kParent] || db\n\n      // Keys should sort like ['!a!', '!a!!a!', '!a\"', '!aa!', '!b!'].\n      // Use ASCII for consistent length between string, Buffer and Uint8Array\n      if (!textEncoder.encode(name).every(x => x > reserved && x < 127)) {\n        throw new ModuleError(`Prefix must use bytes > ${reserved} < ${127}`, {\n          code: 'LEVEL_INVALID_PREFIX'\n        })\n      }\n\n      super(mergeManifests(parent, manifest), forward)\n\n      const prefix = (db.prefix || '') + separator + name + separator\n      const upperBound = prefix.slice(0, -1) + String.fromCharCode(reserved)\n\n      this[kParent] = parent\n      this[kPrefix] = new MultiFormat(prefix)\n      this[kUpperBound] = new MultiFormat(upperBound)\n      this[kUnfix] = new Unfixer()\n\n      this.nextTick = parent.nextTick\n    }\n\n    prefixKey (key, keyFormat) {\n      if (keyFormat === 'utf8') {\n        return this[kPrefix].utf8 + key\n      } else if (key.byteLength === 0) {\n        // Fast path for empty key (no copy)\n        return this[kPrefix][keyFormat]\n      } else if (keyFormat === 'view') {\n        const view = this[kPrefix].view\n        const result = new Uint8Array(view.byteLength + key.byteLength)\n\n        result.set(view, 0)\n        result.set(key, view.byteLength)\n\n        return result\n      } else {\n        const buffer = this[kPrefix].buffer\n        return Buffer.concat([buffer, key], buffer.byteLength + key.byteLength)\n      }\n    }\n\n    // Not exposed for now.\n    [kPrefixRange] (range, keyFormat) {\n      if (range.gte !== undefined) {\n        range.gte = this.prefixKey(range.gte, keyFormat)\n      } else if (range.gt !== undefined) {\n        range.gt = this.prefixKey(range.gt, keyFormat)\n      } else {\n        range.gte = this[kPrefix][keyFormat]\n      }\n\n      if (range.lte !== undefined) {\n        range.lte = this.prefixKey(range.lte, keyFormat)\n      } else if (range.lt !== undefined) {\n        range.lt = this.prefixKey(range.lt, keyFormat)\n      } else {\n        range.lte = this[kUpperBound][keyFormat]\n      }\n    }\n\n    get prefix () {\n      return this[kPrefix].utf8\n    }\n\n    get db () {\n      return this[kParent]\n    }\n\n    _open (options, callback) {\n      // The parent db must open itself or be (re)opened by the user because\n      // a sublevel should not initiate state changes on the rest of the db.\n      this[kParent].open({ passive: true }, callback)\n    }\n\n    _put (key, value, options, callback) {\n      this[kParent].put(key, value, options, callback)\n    }\n\n    _get (key, options, callback) {\n      this[kParent].get(key, options, callback)\n    }\n\n    _getMany (keys, options, callback) {\n      this[kParent].getMany(keys, options, callback)\n    }\n\n    _del (key, options, callback) {\n      this[kParent].del(key, options, callback)\n    }\n\n    _batch (operations, options, callback) {\n      this[kParent].batch(operations, options, callback)\n    }\n\n    _clear (options, callback) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      this[kParent].clear(options, callback)\n    }\n\n    _iterator (options) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].iterator(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelIterator(this, options, iterator, unfix)\n    }\n\n    _keys (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].keys(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelKeyIterator(this, options, iterator, unfix)\n    }\n\n    _values (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].values(options)\n      return new AbstractSublevelValueIterator(this, options, iterator)\n    }\n  }\n\n  return { AbstractSublevel }\n}\n\nconst mergeManifests = function (parent, manifest) {\n  return {\n    // Inherit manifest of parent db\n    ...parent.supports,\n\n    // Disable unsupported features\n    createIfMissing: false,\n    errorIfExists: false,\n\n    // Unset additional events because we're not forwarding them\n    events: {},\n\n    // Unset additional methods (like approximateSize) which we can't support here unless\n    // the AbstractSublevel class is overridden by an implementation of `abstract-level`.\n    additionalMethods: {},\n\n    // Inherit manifest of custom AbstractSublevel subclass. Such a class is not\n    // allowed to override encodings.\n    ...manifest,\n\n    encodings: {\n      utf8: supportsEncoding(parent, 'utf8'),\n      buffer: supportsEncoding(parent, 'buffer'),\n      view: supportsEncoding(parent, 'view')\n    }\n  }\n}\n\nconst supportsEncoding = function (parent, encoding) {\n  // Prefer a non-transcoded encoding for optimal performance\n  return parent.supports.encodings[encoding]\n    ? parent.keyEncoding(encoding).name === encoding\n    : false\n}\n\nclass MultiFormat {\n  constructor (key) {\n    this.utf8 = key\n    this.view = textEncoder.encode(key)\n    this.buffer = Buffer ? Buffer.from(this.view.buffer, 0, this.view.byteLength) : {}\n  }\n}\n\nclass Unfixer {\n  constructor () {\n    this.cache = new Map()\n  }\n\n  get (prefixLength, keyFormat) {\n    let unfix = this.cache.get(keyFormat)\n\n    if (unfix === undefined) {\n      if (keyFormat === 'view') {\n        unfix = function (prefixLength, key) {\n          // Avoid Uint8Array#slice() because it copies\n          return key.subarray(prefixLength)\n        }.bind(null, prefixLength)\n      } else {\n        unfix = function (prefixLength, key) {\n          // Avoid Buffer#subarray() because it's slow\n          return key.slice(prefixLength)\n        }.bind(null, prefixLength)\n      }\n\n      this.cache.set(keyFormat, unfix)\n    }\n\n    return unfix\n  }\n}\n\nconst trim = function (str, char) {\n  let start = 0\n  let end = str.length\n\n  while (start < end && str[start] === char) start++\n  while (end > start && str[end - 1] === char) end--\n\n  return str.slice(start, end)\n}\n","'use strict'\n\nexports.getCallback = function (options, callback) {\n  return typeof options === 'function' ? options : callback\n}\n\nexports.getOptions = function (options, def) {\n  if (typeof options === 'object' && options !== null) {\n    return options\n  }\n\n  if (def !== undefined) {\n    return def\n  }\n\n  return {}\n}\n","'use strict'\n\nconst { AbstractChainedBatch } = require('../abstract-chained-batch')\nconst ModuleError = require('module-error')\nconst kEncoded = Symbol('encoded')\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor (db) {\n    super(db)\n    this[kEncoded] = []\n  }\n\n  _put (key, value, options) {\n    this[kEncoded].push({ ...options, type: 'put', key, value })\n  }\n\n  _del (key, options) {\n    this[kEncoded].push({ ...options, type: 'del', key })\n  }\n\n  _clear () {\n    this[kEncoded] = []\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write (options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback))\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback)\n      else this.db._batch(this[kEncoded], options, callback)\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    }\n  }\n}\n\nexports.DefaultChainedBatch = DefaultChainedBatch\n","'use strict'\n\nconst { AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kIterator = Symbol('iterator')\nconst kCallback = Symbol('callback')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\n\nclass DefaultKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: true, values: false })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nclass DefaultValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: false, values: true })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nfor (const Iterator of [DefaultKeyIterator, DefaultValueIterator]) {\n  const keys = Iterator === DefaultKeyIterator\n  const mapEntry = keys ? (entry) => entry[0] : (entry) => entry[1]\n\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype[kHandleOne] = function (err, key, value) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, keys ? key : value)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n\n  Iterator.prototype[kHandleMany] = function (err, entries) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, entries.map(mapEntry))\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\n// Internal utilities, should be typed as AbstractKeyIterator and AbstractValueIterator\nexports.DefaultKeyIterator = DefaultKeyIterator\nexports.DefaultValueIterator = DefaultValueIterator\n","'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\nconst ModuleError = require('module-error')\n\nconst kNut = Symbol('nut')\nconst kUndefer = Symbol('undefer')\nconst kFactory = Symbol('factory')\n\nclass DeferredIterator extends AbstractIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.iterator(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.keys(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.values(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nfor (const Iterator of [DeferredIterator, DeferredKeyIterator, DeferredValueIterator]) {\n  Iterator.prototype[kUndefer] = function () {\n    if (this.db.status === 'open') {\n      this[kNut] = this[kFactory]()\n    }\n  }\n\n  Iterator.prototype._next = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].next(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._next(callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].nextv(size, options, callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._nextv(size, options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].all(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._all(options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    if (this[kNut] !== null) {\n      // TODO: explain why we need _seek() rather than seek() here\n      this[kNut]._seek(target, options)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._seek(target, options))\n    }\n  }\n\n  Iterator.prototype._close = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].close(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._close(callback))\n    } else {\n      this.nextTick(callback)\n    }\n  }\n}\n\nexports.DeferredIterator = DeferredIterator\nexports.DeferredKeyIterator = DeferredKeyIterator\nexports.DeferredValueIterator = DeferredValueIterator\n","'use strict'\n\nconst queueMicrotask = require('queue-microtask')\n\nmodule.exports = function (fn, ...args) {\n  if (args.length === 0) {\n    queueMicrotask(fn)\n  } else {\n    queueMicrotask(() => fn(...args))\n  }\n}\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst rangeOptions = new Set(['lt', 'lte', 'gt', 'gte'])\n\nmodule.exports = function (options, keyEncoding) {\n  const result = {}\n\n  for (const k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n    if (k === 'keyEncoding' || k === 'valueEncoding') continue\n\n    if (k === 'start' || k === 'end') {\n      throw new ModuleError(`The legacy range option '${k}' has been removed`, {\n        code: 'LEVEL_LEGACY'\n      })\n    } else if (k === 'encoding') {\n      // To help migrating to abstract-level\n      throw new ModuleError(\"The levelup-style 'encoding' alias has been removed, use 'valueEncoding' instead\", {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    if (rangeOptions.has(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      result[k] = keyEncoding.encode(options[k])\n    } else {\n      result[k] = options[k]\n    }\n  }\n\n  result.reverse = !!result.reverse\n  result.limit = Number.isInteger(result.limit) && result.limit >= 0 ? result.limit : -1\n\n  return result\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new globalThis.AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","/* global indexedDB */\n\n'use strict'\n\nconst { AbstractLevel } = require('abstract-level')\nconst ModuleError = require('module-error')\nconst parallel = require('run-parallel-limit')\nconst { fromCallback } = require('catering')\nconst { Iterator } = require('./iterator')\nconst deserialize = require('./util/deserialize')\nconst clear = require('./util/clear')\nconst createKeyRange = require('./util/key-range')\n\n// Keep as-is for compatibility with existing level-js databases\nconst DEFAULT_PREFIX = 'level-js-'\n\nconst kIDB = Symbol('idb')\nconst kNamePrefix = Symbol('namePrefix')\nconst kLocation = Symbol('location')\nconst kVersion = Symbol('version')\nconst kStore = Symbol('store')\nconst kOnComplete = Symbol('onComplete')\nconst kPromise = Symbol('promise')\n\nclass BrowserLevel extends AbstractLevel {\n  constructor (location, options, _) {\n    // To help migrating to abstract-level\n    if (typeof options === 'function' || typeof _ === 'function') {\n      throw new ModuleError('The levelup-style callback argument has been removed', {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    const { prefix, version, ...forward } = options || {}\n\n    super({\n      encodings: { view: true },\n      snapshots: false,\n      createIfMissing: false,\n      errorIfExists: false,\n      seek: true\n    }, forward)\n\n    if (typeof location !== 'string') {\n      throw new Error('constructor requires a location string argument')\n    }\n\n    // TODO (next major): remove default prefix\n    this[kLocation] = location\n    this[kNamePrefix] = prefix == null ? DEFAULT_PREFIX : prefix\n    this[kVersion] = parseInt(version || 1, 10)\n    this[kIDB] = null\n  }\n\n  get location () {\n    return this[kLocation]\n  }\n\n  get namePrefix () {\n    return this[kNamePrefix]\n  }\n\n  get version () {\n    return this[kVersion]\n  }\n\n  // Exposed for backwards compat and unit tests\n  get db () {\n    return this[kIDB]\n  }\n\n  get type () {\n    return 'browser-level'\n  }\n\n  _open (options, callback) {\n    const req = indexedDB.open(this[kNamePrefix] + this[kLocation], this[kVersion])\n\n    req.onerror = function () {\n      callback(req.error || new Error('unknown error'))\n    }\n\n    req.onsuccess = () => {\n      this[kIDB] = req.result\n      callback()\n    }\n\n    req.onupgradeneeded = (ev) => {\n      const db = ev.target.result\n\n      if (!db.objectStoreNames.contains(this[kLocation])) {\n        db.createObjectStore(this[kLocation])\n      }\n    }\n  }\n\n  [kStore] (mode) {\n    const transaction = this[kIDB].transaction([this[kLocation]], mode)\n    return transaction.objectStore(this[kLocation])\n  }\n\n  [kOnComplete] (request, callback) {\n    const transaction = request.transaction\n\n    // Take advantage of the fact that a non-canceled request error aborts\n    // the transaction. I.e. no need to listen for \"request.onerror\".\n    transaction.onabort = function () {\n      callback(transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback(null, request.result)\n    }\n  }\n\n  _get (key, options, callback) {\n    const store = this[kStore]('readonly')\n    let req\n\n    try {\n      req = store.get(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, function (err, value) {\n      if (err) return callback(err)\n\n      if (value === undefined) {\n        return callback(new ModuleError('Entry not found', {\n          code: 'LEVEL_NOT_FOUND'\n        }))\n      }\n\n      callback(null, deserialize(value))\n    })\n  }\n\n  _getMany (keys, options, callback) {\n    const store = this[kStore]('readonly')\n    const tasks = keys.map((key) => (next) => {\n      let request\n\n      try {\n        request = store.get(key)\n      } catch (err) {\n        return next(err)\n      }\n\n      request.onsuccess = () => {\n        const value = request.result\n        next(null, value === undefined ? value : deserialize(value))\n      }\n\n      request.onerror = (ev) => {\n        ev.stopPropagation()\n        next(request.error)\n      }\n    })\n\n    parallel(tasks, 16, callback)\n  }\n\n  _del (key, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      req = store.delete(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _put (key, value, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      // Will throw a DataError or DataCloneError if the environment\n      // does not support serializing the key or value respectively.\n      req = store.put(value, key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  // TODO: implement key and value iterators\n  _iterator (options) {\n    return new Iterator(this, this[kLocation], options)\n  }\n\n  _batch (operations, options, callback) {\n    const store = this[kStore]('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    let error\n\n    transaction.onabort = function () {\n      callback(error || transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback()\n    }\n\n    // Wait for a request to complete before making the next, saving CPU.\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      } else if (typeof transaction.commit === 'function') {\n        // Commit now instead of waiting for auto-commit\n        transaction.commit()\n      }\n    }\n\n    loop()\n  }\n\n  _clear (options, callback) {\n    let keyRange\n    let req\n\n    try {\n      keyRange = createKeyRange(options)\n    } catch (e) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just do nothing.\n      return this.nextTick(callback)\n    }\n\n    if (options.limit >= 0) {\n      // IDBObjectStore#delete(range) doesn't have such an option.\n      // Fall back to cursor-based implementation.\n      return clear(this, this[kLocation], keyRange, options, callback)\n    }\n\n    try {\n      const store = this[kStore]('readwrite')\n      req = keyRange ? store.delete(keyRange) : store.clear()\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _close (callback) {\n    this[kIDB].close()\n    this.nextTick(callback)\n  }\n}\n\nBrowserLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n\n  callback = fromCallback(callback, kPromise)\n  const request = indexedDB.deleteDatabase(prefix + location)\n\n  request.onsuccess = function () {\n    callback()\n  }\n\n  request.onerror = function (err) {\n    callback(err)\n  }\n\n  return callback[kPromise]\n}\n\nexports.BrowserLevel = BrowserLevel\n","'use strict'\n\nconst { AbstractIterator } = require('abstract-level')\nconst createKeyRange = require('./util/key-range')\nconst deserialize = require('./util/deserialize')\n\nconst kCache = Symbol('cache')\nconst kFinished = Symbol('finished')\nconst kOptions = Symbol('options')\nconst kCurrentOptions = Symbol('currentOptions')\nconst kPosition = Symbol('position')\nconst kLocation = Symbol('location')\nconst kFirst = Symbol('first')\nconst emptyOptions = {}\n\nclass Iterator extends AbstractIterator {\n  constructor (db, location, options) {\n    super(db, options)\n\n    this[kCache] = []\n    this[kFinished] = this.limit === 0\n    this[kOptions] = options\n    this[kCurrentOptions] = { ...options }\n    this[kPosition] = undefined\n    this[kLocation] = location\n    this[kFirst] = true\n  }\n\n  // Note: if called by _all() then size can be Infinity. This is an internal\n  // detail; by design AbstractIterator.nextv() does not support Infinity.\n  _nextv (size, options, callback) {\n    this[kFirst] = false\n\n    if (this[kFinished]) {\n      return this.nextTick(callback, null, [])\n    } else if (this[kCache].length > 0) {\n      // TODO: mixing next and nextv is not covered by test suite\n      size = Math.min(size, this[kCache].length)\n      return this.nextTick(callback, null, this[kCache].splice(0, size))\n    }\n\n    // Adjust range by what we already visited\n    if (this[kPosition] !== undefined) {\n      if (this[kOptions].reverse) {\n        this[kCurrentOptions].lt = this[kPosition]\n        this[kCurrentOptions].lte = undefined\n      } else {\n        this[kCurrentOptions].gt = this[kPosition]\n        this[kCurrentOptions].gte = undefined\n      }\n    }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kCurrentOptions])\n    } catch (_) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just return 0 results.\n      this[kFinished] = true\n      return this.nextTick(callback, null, [])\n    }\n\n    const transaction = this.db.db.transaction([this[kLocation]], 'readonly')\n    const store = transaction.objectStore(this[kLocation])\n    const entries = []\n\n    if (!this[kOptions].reverse) {\n      let keys\n      let values\n\n      const complete = () => {\n        // Wait for both requests to complete\n        if (keys === undefined || values === undefined) return\n\n        const length = Math.max(keys.length, values.length)\n\n        if (length === 0 || size === Infinity) {\n          this[kFinished] = true\n        } else {\n          this[kPosition] = keys[length - 1]\n        }\n\n        // Resize\n        entries.length = length\n\n        // Merge keys and values\n        for (let i = 0; i < length; i++) {\n          const key = keys[i]\n          const value = values[i]\n\n          entries[i] = [\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ]\n        }\n\n        maybeCommit(transaction)\n      }\n\n      // If keys were not requested and size is Infinity, we don't have to keep\n      // track of position and can thus skip getting keys.\n      if (this[kOptions].keys || size < Infinity) {\n        store.getAllKeys(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          keys = ev.target.result\n          complete()\n        }\n      } else {\n        keys = []\n        this.nextTick(complete)\n      }\n\n      if (this[kOptions].values) {\n        store.getAll(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          values = ev.target.result\n          complete()\n        }\n      } else {\n        values = []\n        this.nextTick(complete)\n      }\n    } else {\n      // Can't use getAll() in reverse, so use a slower cursor that yields one item at a time\n      // TODO: test if all target browsers support openKeyCursor\n      const method = !this[kOptions].values && store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n\n      store[method](keyRange, 'prev').onsuccess = (ev) => {\n        const cursor = ev.target.result\n\n        if (cursor) {\n          const { key, value } = cursor\n          this[kPosition] = key\n\n          entries.push([\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ])\n\n          if (entries.length < size) {\n            cursor.continue()\n          } else {\n            maybeCommit(transaction)\n          }\n        } else {\n          this[kFinished] = true\n        }\n      }\n    }\n\n    // If an error occurs (on the request), the transaction will abort.\n    transaction.onabort = () => {\n      callback(transaction.error || new Error('aborted by user'))\n      callback = null\n    }\n\n    transaction.oncomplete = () => {\n      callback(null, entries)\n      callback = null\n    }\n  }\n\n  _next (callback) {\n    if (this[kCache].length > 0) {\n      const [key, value] = this[kCache].shift()\n      this.nextTick(callback, null, key, value)\n    } else if (this[kFinished]) {\n      this.nextTick(callback)\n    } else {\n      let size = Math.min(100, this.limit - this.count)\n\n      if (this[kFirst]) {\n        // It's common to only want one entry initially or after a seek()\n        this[kFirst] = false\n        size = 1\n      }\n\n      this._nextv(size, emptyOptions, (err, entries) => {\n        if (err) return callback(err)\n        this[kCache] = entries\n        this._next(callback)\n      })\n    }\n  }\n\n  _all (options, callback) {\n    this[kFirst] = false\n\n    // TODO: mixing next and all is not covered by test suite\n    const cache = this[kCache].splice(0, this[kCache].length)\n    const size = this.limit - this.count - cache.length\n\n    if (size <= 0) {\n      return this.nextTick(callback, null, cache)\n    }\n\n    this._nextv(size, emptyOptions, (err, entries) => {\n      if (err) return callback(err)\n      if (cache.length > 0) entries = cache.concat(entries)\n      callback(null, entries)\n    })\n  }\n\n  _seek (target, options) {\n    this[kFirst] = true\n    this[kCache] = []\n    this[kFinished] = false\n    this[kPosition] = undefined\n\n    // TODO: not covered by test suite\n    this[kCurrentOptions] = { ...this[kOptions] }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kOptions])\n    } catch (_) {\n      this[kFinished] = true\n      return\n    }\n\n    if (keyRange !== null && !keyRange.includes(target)) {\n      this[kFinished] = true\n    } else if (this[kOptions].reverse) {\n      this[kCurrentOptions].lte = target\n    } else {\n      this[kCurrentOptions].gte = target\n    }\n  }\n}\n\nexports.Iterator = Iterator\n\nfunction maybeCommit (transaction) {\n  // Commit (meaning close) now instead of waiting for auto-commit\n  if (typeof transaction.commit === 'function') {\n    transaction.commit()\n  }\n}\n","'use strict'\n\nmodule.exports = function clear (db, location, keyRange, options, callback) {\n  if (options.limit === 0) return db.nextTick(callback)\n\n  const transaction = db.db.transaction([location], 'readwrite')\n  const store = transaction.objectStore(location)\n  let count = 0\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  // A key cursor is faster (skips reading values) but not supported by IE\n  // TODO: we no longer support IE. Test others\n  const method = store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n  const direction = options.reverse ? 'prev' : 'next'\n\n  store[method](keyRange, direction).onsuccess = function (ev) {\n    const cursor = ev.target.result\n\n    if (cursor) {\n      // Wait for a request to complete before continuing, saving CPU.\n      store.delete(cursor.key).onsuccess = function () {\n        if (options.limit <= 0 || ++count < options.limit) {\n          cursor.continue()\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nconst textEncoder = new TextEncoder()\n\nmodule.exports = function (data) {\n  if (data instanceof Uint8Array) {\n    return data\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  } else {\n    // Non-binary data stored with an old version (level-js < 5.0.0)\n    return textEncoder.encode(data)\n  }\n}\n","/* global IDBKeyRange */\n\n'use strict'\n\nmodule.exports = function createKeyRange (options) {\n  const lower = options.gte !== undefined ? options.gte : options.gt !== undefined ? options.gt : undefined\n  const upper = options.lte !== undefined ? options.lte : options.lt !== undefined ? options.lt : undefined\n  const lowerExclusive = options.gte === undefined\n  const upperExclusive = options.lte === undefined\n\n  if (lower !== undefined && upper !== undefined) {\n    return IDBKeyRange.bound(lower, upper, lowerExclusive, upperExclusive)\n  } else if (lower !== undefined) {\n    return IDBKeyRange.lowerBound(lower, lowerExclusive)\n  } else if (upper !== undefined) {\n    return IDBKeyRange.upperBound(upper, upperExclusive)\n  } else {\n    return null\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict'\n\nvar nextTick = require('./next-tick')\n\nexports.fromCallback = function (callback, symbol) {\n  if (callback === undefined) {\n    var promise = new Promise(function (resolve, reject) {\n      callback = function (err, res) {\n        if (err) reject(err)\n        else resolve(res)\n      }\n    })\n\n    callback[symbol !== undefined ? symbol : 'promise'] = promise\n  } else if (typeof callback !== 'function') {\n    throw new TypeError('Callback must be a function')\n  }\n\n  return callback\n}\n\nexports.fromPromise = function (promise, callback) {\n  if (callback === undefined) return promise\n\n  promise\n    .then(function (res) { nextTick(() => callback(null, res)) })\n    .catch(function (err) { nextTick(() => callback(err)) })\n}\n","module.exports = typeof queueMicrotask === 'function' ? queueMicrotask : (fn) => Promise.resolve().then(fn)\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgSetSendEnabledResponse = exports.MsgSetSendEnabled = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst bank_1 = require(\"./bank\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseMsgSend() {\n    return {\n        fromAddress: \"\",\n        toAddress: \"\",\n        amount: [],\n    };\n}\nexports.MsgSend = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSend\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSend();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSend();\n        if ((0, helpers_1.isSet)(object.fromAddress))\n            obj.fromAddress = String(object.fromAddress);\n        if ((0, helpers_1.isSet)(object.toAddress))\n            obj.toAddress = String(object.toAddress);\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSend();\n        message.fromAddress = object.fromAddress ?? \"\";\n        message.toAddress = object.toAddress ?? \"\";\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgSendResponse() {\n    return {};\n}\nexports.MsgSendResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSendResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSendResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSendResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSendResponse();\n        return message;\n    },\n};\nfunction createBaseMsgMultiSend() {\n    return {\n        inputs: [],\n        outputs: [],\n    };\n}\nexports.MsgMultiSend = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.inputs) {\n            bank_1.Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            bank_1.Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMultiSend();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgMultiSend();\n        if (Array.isArray(object?.inputs))\n            obj.inputs = object.inputs.map((e) => bank_1.Input.fromJSON(e));\n        if (Array.isArray(object?.outputs))\n            obj.outputs = object.outputs.map((e) => bank_1.Output.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? bank_1.Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? bank_1.Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgMultiSend();\n        message.inputs = object.inputs?.map((e) => bank_1.Input.fromPartial(e)) || [];\n        message.outputs = object.outputs?.map((e) => bank_1.Output.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseMsgMultiSendResponse() {\n    return {};\n}\nexports.MsgMultiSendResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSendResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgMultiSendResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgMultiSendResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgMultiSendResponse();\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParams() {\n    return {\n        authority: \"\",\n        params: bank_1.Params.fromPartial({}),\n    };\n}\nexports.MsgUpdateParams = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgUpdateParams\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        if (message.params !== undefined) {\n            bank_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.params = bank_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgUpdateParams();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if ((0, helpers_1.isSet)(object.params))\n            obj.params = bank_1.Params.fromJSON(object.params);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgUpdateParams();\n        message.authority = object.authority ?? \"\";\n        if (object.params !== undefined && object.params !== null) {\n            message.params = bank_1.Params.fromPartial(object.params);\n        }\n        return message;\n    },\n};\nfunction createBaseMsgUpdateParamsResponse() {\n    return {};\n}\nexports.MsgUpdateParamsResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgUpdateParamsResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgUpdateParamsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgUpdateParamsResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgUpdateParamsResponse();\n        return message;\n    },\n};\nfunction createBaseMsgSetSendEnabled() {\n    return {\n        authority: \"\",\n        sendEnabled: [],\n        useDefaultFor: [],\n    };\n}\nexports.MsgSetSendEnabled = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSetSendEnabled\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.authority !== \"\") {\n            writer.uint32(10).string(message.authority);\n        }\n        for (const v of message.sendEnabled) {\n            bank_1.SendEnabled.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.useDefaultFor) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetSendEnabled();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authority = reader.string();\n                    break;\n                case 2:\n                    message.sendEnabled.push(bank_1.SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.useDefaultFor.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseMsgSetSendEnabled();\n        if ((0, helpers_1.isSet)(object.authority))\n            obj.authority = String(object.authority);\n        if (Array.isArray(object?.sendEnabled))\n            obj.sendEnabled = object.sendEnabled.map((e) => bank_1.SendEnabled.fromJSON(e));\n        if (Array.isArray(object?.useDefaultFor))\n            obj.useDefaultFor = object.useDefaultFor.map((e) => String(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authority !== undefined && (obj.authority = message.authority);\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? bank_1.SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        if (message.useDefaultFor) {\n            obj.useDefaultFor = message.useDefaultFor.map((e) => e);\n        }\n        else {\n            obj.useDefaultFor = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseMsgSetSendEnabled();\n        message.authority = object.authority ?? \"\";\n        message.sendEnabled = object.sendEnabled?.map((e) => bank_1.SendEnabled.fromPartial(e)) || [];\n        message.useDefaultFor = object.useDefaultFor?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseMsgSetSendEnabledResponse() {\n    return {};\n}\nexports.MsgSetSendEnabledResponse = {\n    typeUrl: \"/cosmos.bank.v1beta1.MsgSetSendEnabledResponse\",\n    encode(_, writer = binary_1.BinaryWriter.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMsgSetSendEnabledResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const obj = createBaseMsgSetSendEnabledResponse();\n        return obj;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = createBaseMsgSetSendEnabledResponse();\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Send = this.Send.bind(this);\n        this.MultiSend = this.MultiSend.bind(this);\n        this.UpdateParams = this.UpdateParams.bind(this);\n        this.SetSendEnabled = this.SetSendEnabled.bind(this);\n    }\n    Send(request) {\n        const data = exports.MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => exports.MsgSendResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    MultiSend(request) {\n        const data = exports.MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => exports.MsgMultiSendResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    UpdateParams(request) {\n        const data = exports.MsgUpdateParams.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"UpdateParams\", data);\n        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));\n    }\n    SetSendEnabled(request) {\n        const data = exports.MsgSetSendEnabled.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"SetSendEnabled\", data);\n        return promise.then((data) => exports.MsgSetSendEnabledResponse.decode(new binary_1.BinaryReader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\n//# sourceMappingURL=tx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuxSignerData = exports.Tip = exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDocDirectAux = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst signing_1 = require(\"../signing/v1beta1/signing\");\nconst multisig_1 = require(\"../../crypto/multisig/v1beta1/multisig\");\nconst coin_1 = require(\"../../base/v1beta1/coin\");\nconst binary_1 = require(\"../../../binary\");\nconst helpers_1 = require(\"../../../helpers\");\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nfunction createBaseTx() {\n    return {\n        body: undefined,\n        authInfo: undefined,\n        signatures: [],\n    };\n}\nexports.Tx = {\n    typeUrl: \"/cosmos.tx.v1beta1.Tx\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.body !== undefined) {\n            exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.authInfo !== undefined) {\n            exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.body = exports.TxBody.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTx();\n        if ((0, helpers_1.isSet)(object.body))\n            obj.body = exports.TxBody.fromJSON(object.body);\n        if ((0, helpers_1.isSet)(object.authInfo))\n            obj.authInfo = exports.AuthInfo.fromJSON(object.authInfo);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n        message.authInfo !== undefined &&\n            (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTx();\n        if (object.body !== undefined && object.body !== null) {\n            message.body = exports.TxBody.fromPartial(object.body);\n        }\n        if (object.authInfo !== undefined && object.authInfo !== null) {\n            message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);\n        }\n        message.signatures = object.signatures?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseTxRaw() {\n    return {\n        bodyBytes: new Uint8Array(),\n        authInfoBytes: new Uint8Array(),\n        signatures: [],\n    };\n}\nexports.TxRaw = {\n    typeUrl: \"/cosmos.tx.v1beta1.TxRaw\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxRaw();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxRaw();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.authInfoBytes))\n            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);\n        if (Array.isArray(object?.signatures))\n            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxRaw();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n        message.signatures = object.signatures?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseSignDoc() {\n    return {\n        bodyBytes: new Uint8Array(),\n        authInfoBytes: new Uint8Array(),\n        chainId: \"\",\n        accountNumber: BigInt(0),\n    };\n}\nexports.SignDoc = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignDoc\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(26).string(message.chainId);\n        }\n        if (message.accountNumber !== BigInt(0)) {\n            writer.uint32(32).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignDoc();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.chainId = reader.string();\n                    break;\n                case 4:\n                    message.accountNumber = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignDoc();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.authInfoBytes))\n            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.accountNumber))\n            obj.accountNumber = BigInt(object.accountNumber.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignDoc();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n        message.chainId = object.chainId ?? \"\";\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = BigInt(object.accountNumber.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseSignDocDirectAux() {\n    return {\n        bodyBytes: new Uint8Array(),\n        publicKey: undefined,\n        chainId: \"\",\n        accountNumber: BigInt(0),\n        sequence: BigInt(0),\n        tip: undefined,\n    };\n}\nexports.SignDocDirectAux = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignDocDirectAux\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(26).string(message.chainId);\n        }\n        if (message.accountNumber !== BigInt(0)) {\n            writer.uint32(32).uint64(message.accountNumber);\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(40).uint64(message.sequence);\n        }\n        if (message.tip !== undefined) {\n            exports.Tip.encode(message.tip, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignDocDirectAux();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.chainId = reader.string();\n                    break;\n                case 4:\n                    message.accountNumber = reader.uint64();\n                    break;\n                case 5:\n                    message.sequence = reader.uint64();\n                    break;\n                case 6:\n                    message.tip = exports.Tip.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignDocDirectAux();\n        if ((0, helpers_1.isSet)(object.bodyBytes))\n            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);\n        if ((0, helpers_1.isSet)(object.publicKey))\n            obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n        if ((0, helpers_1.isSet)(object.chainId))\n            obj.chainId = String(object.chainId);\n        if ((0, helpers_1.isSet)(object.accountNumber))\n            obj.accountNumber = BigInt(object.accountNumber.toString());\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        if ((0, helpers_1.isSet)(object.tip))\n            obj.tip = exports.Tip.fromJSON(object.tip);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignDocDirectAux();\n        message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        message.chainId = object.chainId ?? \"\";\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = BigInt(object.accountNumber.toString());\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        if (object.tip !== undefined && object.tip !== null) {\n            message.tip = exports.Tip.fromPartial(object.tip);\n        }\n        return message;\n    },\n};\nfunction createBaseTxBody() {\n    return {\n        messages: [],\n        memo: \"\",\n        timeoutHeight: BigInt(0),\n        extensionOptions: [],\n        nonCriticalExtensionOptions: [],\n    };\n}\nexports.TxBody = {\n    typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.memo !== \"\") {\n            writer.uint32(18).string(message.memo);\n        }\n        if (message.timeoutHeight !== BigInt(0)) {\n            writer.uint32(24).uint64(message.timeoutHeight);\n        }\n        for (const v of message.extensionOptions) {\n            any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();\n        }\n        for (const v of message.nonCriticalExtensionOptions) {\n            any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxBody();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.memo = reader.string();\n                    break;\n                case 3:\n                    message.timeoutHeight = reader.uint64();\n                    break;\n                case 1023:\n                    message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2047:\n                    message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTxBody();\n        if (Array.isArray(object?.messages))\n            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.memo))\n            obj.memo = String(object.memo);\n        if ((0, helpers_1.isSet)(object.timeoutHeight))\n            obj.timeoutHeight = BigInt(object.timeoutHeight.toString());\n        if (Array.isArray(object?.extensionOptions))\n            obj.extensionOptions = object.extensionOptions.map((e) => any_1.Any.fromJSON(e));\n        if (Array.isArray(object?.nonCriticalExtensionOptions))\n            obj.nonCriticalExtensionOptions = object.nonCriticalExtensionOptions.map((e) => any_1.Any.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.memo !== undefined && (obj.memo = message.memo);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = (message.timeoutHeight || BigInt(0)).toString());\n        if (message.extensionOptions) {\n            obj.extensionOptions = message.extensionOptions.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.extensionOptions = [];\n        }\n        if (message.nonCriticalExtensionOptions) {\n            obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e) => e ? any_1.Any.toJSON(e) : undefined);\n        }\n        else {\n            obj.nonCriticalExtensionOptions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTxBody();\n        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.memo = object.memo ?? \"\";\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = BigInt(object.timeoutHeight.toString());\n        }\n        message.extensionOptions = object.extensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];\n        message.nonCriticalExtensionOptions =\n            object.nonCriticalExtensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseAuthInfo() {\n    return {\n        signerInfos: [],\n        fee: undefined,\n        tip: undefined,\n    };\n}\nexports.AuthInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.AuthInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.signerInfos) {\n            exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.fee !== undefined) {\n            exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.tip !== undefined) {\n            exports.Tip.encode(message.tip, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAuthInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.fee = exports.Fee.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.tip = exports.Tip.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAuthInfo();\n        if (Array.isArray(object?.signerInfos))\n            obj.signerInfos = object.signerInfos.map((e) => exports.SignerInfo.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.fee))\n            obj.fee = exports.Fee.fromJSON(object.fee);\n        if ((0, helpers_1.isSet)(object.tip))\n            obj.tip = exports.Tip.fromJSON(object.tip);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.signerInfos) {\n            obj.signerInfos = message.signerInfos.map((e) => (e ? exports.SignerInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signerInfos = [];\n        }\n        message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAuthInfo();\n        message.signerInfos = object.signerInfos?.map((e) => exports.SignerInfo.fromPartial(e)) || [];\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = exports.Fee.fromPartial(object.fee);\n        }\n        if (object.tip !== undefined && object.tip !== null) {\n            message.tip = exports.Tip.fromPartial(object.tip);\n        }\n        return message;\n    },\n};\nfunction createBaseSignerInfo() {\n    return {\n        publicKey: undefined,\n        modeInfo: undefined,\n        sequence: BigInt(0),\n    };\n}\nexports.SignerInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.SignerInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.modeInfo !== undefined) {\n            exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.sequence !== BigInt(0)) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSignerInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseSignerInfo();\n        if ((0, helpers_1.isSet)(object.publicKey))\n            obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n        if ((0, helpers_1.isSet)(object.modeInfo))\n            obj.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);\n        if ((0, helpers_1.isSet)(object.sequence))\n            obj.sequence = BigInt(object.sequence.toString());\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.modeInfo !== undefined &&\n            (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseSignerInfo();\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        if (object.modeInfo !== undefined && object.modeInfo !== null) {\n            message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = BigInt(object.sequence.toString());\n        }\n        return message;\n    },\n};\nfunction createBaseModeInfo() {\n    return {\n        single: undefined,\n        multi: undefined,\n    };\n}\nexports.ModeInfo = {\n    typeUrl: \"/cosmos.tx.v1beta1.ModeInfo\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.single !== undefined) {\n            exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.multi !== undefined) {\n            exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo();\n        if ((0, helpers_1.isSet)(object.single))\n            obj.single = exports.ModeInfo_Single.fromJSON(object.single);\n        if ((0, helpers_1.isSet)(object.multi))\n            obj.multi = exports.ModeInfo_Multi.fromJSON(object.multi);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.single !== undefined &&\n            (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n        message.multi !== undefined &&\n            (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo();\n        if (object.single !== undefined && object.single !== null) {\n            message.single = exports.ModeInfo_Single.fromPartial(object.single);\n        }\n        if (object.multi !== undefined && object.multi !== null) {\n            message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);\n        }\n        return message;\n    },\n};\nfunction createBaseModeInfo_Single() {\n    return {\n        mode: 0,\n    };\n}\nexports.ModeInfo_Single = {\n    typeUrl: \"/cosmos.tx.v1beta1.Single\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.mode !== 0) {\n            writer.uint32(8).int32(message.mode);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo_Single();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mode = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo_Single();\n        if ((0, helpers_1.isSet)(object.mode))\n            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo_Single();\n        message.mode = object.mode ?? 0;\n        return message;\n    },\n};\nfunction createBaseModeInfo_Multi() {\n    return {\n        bitarray: undefined,\n        modeInfos: [],\n    };\n}\nexports.ModeInfo_Multi = {\n    typeUrl: \"/cosmos.tx.v1beta1.Multi\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.bitarray !== undefined) {\n            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.modeInfos) {\n            exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseModeInfo_Multi();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseModeInfo_Multi();\n        if ((0, helpers_1.isSet)(object.bitarray))\n            obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n        if (Array.isArray(object?.modeInfos))\n            obj.modeInfos = object.modeInfos.map((e) => exports.ModeInfo.fromJSON(e));\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bitarray !== undefined &&\n            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n        if (message.modeInfos) {\n            obj.modeInfos = message.modeInfos.map((e) => (e ? exports.ModeInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.modeInfos = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseModeInfo_Multi();\n        if (object.bitarray !== undefined && object.bitarray !== null) {\n            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n        }\n        message.modeInfos = object.modeInfos?.map((e) => exports.ModeInfo.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseFee() {\n    return {\n        amount: [],\n        gasLimit: BigInt(0),\n        payer: \"\",\n        granter: \"\",\n    };\n}\nexports.Fee = {\n    typeUrl: \"/cosmos.tx.v1beta1.Fee\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.gasLimit !== BigInt(0)) {\n            writer.uint32(16).uint64(message.gasLimit);\n        }\n        if (message.payer !== \"\") {\n            writer.uint32(26).string(message.payer);\n        }\n        if (message.granter !== \"\") {\n            writer.uint32(34).string(message.granter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFee();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.gasLimit = reader.uint64();\n                    break;\n                case 3:\n                    message.payer = reader.string();\n                    break;\n                case 4:\n                    message.granter = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseFee();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.gasLimit))\n            obj.gasLimit = BigInt(object.gasLimit.toString());\n        if ((0, helpers_1.isSet)(object.payer))\n            obj.payer = String(object.payer);\n        if ((0, helpers_1.isSet)(object.granter))\n            obj.granter = String(object.granter);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || BigInt(0)).toString());\n        message.payer !== undefined && (obj.payer = message.payer);\n        message.granter !== undefined && (obj.granter = message.granter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseFee();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        if (object.gasLimit !== undefined && object.gasLimit !== null) {\n            message.gasLimit = BigInt(object.gasLimit.toString());\n        }\n        message.payer = object.payer ?? \"\";\n        message.granter = object.granter ?? \"\";\n        return message;\n    },\n};\nfunction createBaseTip() {\n    return {\n        amount: [],\n        tipper: \"\",\n    };\n}\nexports.Tip = {\n    typeUrl: \"/cosmos.tx.v1beta1.Tip\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.tipper !== \"\") {\n            writer.uint32(18).string(message.tipper);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTip();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.tipper = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseTip();\n        if (Array.isArray(object?.amount))\n            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));\n        if ((0, helpers_1.isSet)(object.tipper))\n            obj.tipper = String(object.tipper);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.tipper !== undefined && (obj.tipper = message.tipper);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseTip();\n        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];\n        message.tipper = object.tipper ?? \"\";\n        return message;\n    },\n};\nfunction createBaseAuxSignerData() {\n    return {\n        address: \"\",\n        signDoc: undefined,\n        mode: 0,\n        sig: new Uint8Array(),\n    };\n}\nexports.AuxSignerData = {\n    typeUrl: \"/cosmos.tx.v1beta1.AuxSignerData\",\n    encode(message, writer = binary_1.BinaryWriter.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.signDoc !== undefined) {\n            exports.SignDocDirectAux.encode(message.signDoc, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.mode !== 0) {\n            writer.uint32(24).int32(message.mode);\n        }\n        if (message.sig.length !== 0) {\n            writer.uint32(34).bytes(message.sig);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAuxSignerData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.signDoc = exports.SignDocDirectAux.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.mode = reader.int32();\n                    break;\n                case 4:\n                    message.sig = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const obj = createBaseAuxSignerData();\n        if ((0, helpers_1.isSet)(object.address))\n            obj.address = String(object.address);\n        if ((0, helpers_1.isSet)(object.signDoc))\n            obj.signDoc = exports.SignDocDirectAux.fromJSON(object.signDoc);\n        if ((0, helpers_1.isSet)(object.mode))\n            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);\n        if ((0, helpers_1.isSet)(object.sig))\n            obj.sig = (0, helpers_1.bytesFromBase64)(object.sig);\n        return obj;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.signDoc !== undefined &&\n            (obj.signDoc = message.signDoc ? exports.SignDocDirectAux.toJSON(message.signDoc) : undefined);\n        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));\n        message.sig !== undefined &&\n            (obj.sig = (0, helpers_1.base64FromBytes)(message.sig !== undefined ? message.sig : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = createBaseAuxSignerData();\n        message.address = object.address ?? \"\";\n        if (object.signDoc !== undefined && object.signDoc !== null) {\n            message.signDoc = exports.SignDocDirectAux.fromPartial(object.signDoc);\n        }\n        message.mode = object.mode ?? 0;\n        message.sig = object.sig ?? new Uint8Array();\n        return message;\n    },\n};\n//# sourceMappingURL=tx.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import { jsCyberSearch, jsCyberLink, jsGetPassportByNickname, jsGetIpfsTextContent, jsAddContenToIpfs, jsEvalScriptFromIpfs, jsPromptToOpenAI, jsSearchByEmbedding, jsCyberLinksFrom, jsCyberLinksTo } from '../../src/services/scripting/wasmBindings.js';\n\nlet wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedBigInt64Memory0 = null;\n\nfunction getBigInt64Memory0() {\n    if (cachedBigInt64Memory0 === null || cachedBigInt64Memory0.byteLength === 0) {\n        cachedBigInt64Memory0 = new BigInt64Array(wasm.memory.buffer);\n    }\n    return cachedBigInt64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_46(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf4bfcc5d39f18e99(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n* @param {string} input\n* @param {string} scripts\n* @param {any} params\n* @param {any} compiler_params\n* @returns {Promise<any>}\n*/\nexport function compile(input, scripts, params, compiler_params) {\n    const ptr0 = passStringToWasm0(input, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(scripts, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.compile(ptr0, len0, ptr1, len1, addHeapObject(params), addHeapObject(compiler_params));\n    return takeObject(ret);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\nfunction __wbg_adapter_156(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__ha6faf1932adab3a4(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_log_d6d3928c15a332b3 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsCyberSearch_7e27339aa5f7a989 = function(arg0, arg1) {\n        const ret = jsCyberSearch(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsCyberLink_6b02b912deb23510 = function(arg0, arg1, arg2, arg3) {\n        const ret = jsCyberLink(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsGetPassportByNickname_fbf1750b6fa955a5 = function(arg0, arg1) {\n        const ret = jsGetPassportByNickname(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsGetIpfsTextContent_4bffb8096b9cedb0 = function(arg0, arg1) {\n        const ret = jsGetIpfsTextContent(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsAddContenToIpfs_128045b04a01a2f2 = function(arg0, arg1) {\n        const ret = jsAddContenToIpfs(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsEvalScriptFromIpfs_34870c7360a3ac3c = function(arg0, arg1, arg2, arg3, arg4) {\n        const ret = jsEvalScriptFromIpfs(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3), getObject(arg4));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsPromptToOpenAI_269d5645cd0e4b0d = function(arg0, arg1, arg2, arg3, arg4) {\n        const ret = jsPromptToOpenAI(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3), getObject(arg4));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsSearchByEmbedding_c53029ec2c16d0e3 = function(arg0, arg1, arg2) {\n        const ret = jsSearchByEmbedding(getStringFromWasm0(arg0, arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsCyberLinksFrom_e4e1629f31736c22 = function(arg0, arg1) {\n        const ret = jsCyberLinksFrom(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_jsCyberLinksTo_61c41f322fe1b63c = function(arg0, arg1) {\n        const ret = jsCyberLinksTo(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetch_57429b87be3dcc33 = function(arg0) {\n        const ret = fetch(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_e950366c42764a07 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_3774744e221a22ad = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_crypto_70a96de3b6b73dac = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_dd1577445152112e = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_58036bec3add9e6f = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_6a9d28205ed5b0d8 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_require_f05d779769764e82 = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_msCrypto_adbc770ec9eca9c7 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_signal_bcb55e86063f8860 = function(arg0) {\n        const ret = getObject(arg0).signal;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_668956ac1089f8cf = function() { return handleError(function () {\n        const ret = new AbortController();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_abort_de75e4ab5136bcee = function(arg0) {\n        getObject(arg0).abort();\n    };\n    imports.wbg.__wbg_new_143b41b4342650bb = function() { return handleError(function () {\n        const ret = new Headers();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_append_fac652007989b765 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_newwithstrandinit_a4cd16dfaafcf625 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Response_7ade9a5a066d1a55 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Response;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_url_59cb32ef6a837521 = function(arg0, arg1) {\n        const ret = getObject(arg1).url;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_status_d2b2d0889f7e970f = function(arg0) {\n        const ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_headers_2de03c88f895093b = function(arg0) {\n        const ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_arrayBuffer_2693673868da65b7 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_text_65fa1887e8f7b4ac = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).text();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_fetch_621998933558ad27 = function(arg0, arg1) {\n        const ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_self_742dd6eab3e9211e = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c409e731db53a0e2 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_b70c095388441f2d = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_1c72617491ed7194 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_c9e6043b8ad84109 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_f4bc0e96ea67da68 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_value_2f4ef2036bfad28e = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_7c7e58f62eb84700 = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_2b6fea4ea03b1b95 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_7303ed2ef026b2f5 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_isArray_04e59fb73f78ab5b = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_length_820c786973abdd8a = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_ef2632aa0d4bfff8 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_call_557a2f2deacc4912 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_587b30eea3e09332 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_next_ec061e48a0e72a96 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_b6abb27d42b63867 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_isSafeInteger_2088b01008075470 = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_entries_13e011453776468f = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_f53c921291c381bd = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_has_40b8c976775c8ead = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_07da13cc24b69217 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_buffer_55ba7a6b1b92e2ac = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_parse_76a8a18ca3f8730b = function() { return handleError(function (arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_stringify_d06ad2addc54d51e = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_2b55e405e4af4986 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_156(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_resolve_ae38ad63c43ff98b = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_8df675b8bb5d5e3c = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_835b073a479138e5 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_88d1d8be5df94b9b = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_09938a7d020f049b = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_1349640af2da2e88 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_89eeca401d8918c2 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_d82be056deb4ad27 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_0aab7ffd65ad19ed = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_set_3698e3ca519b3c3c = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getBigInt64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? BigInt(0) : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper3525 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 717, __wbg_adapter_46);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedBigInt64Memory0 = null;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('cyb_rune_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occurred and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n  this._capacity = options.capacity;\n\n  this._head = 0;\n  this._tail = 0;\n\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  } else {\n    this._capacityMask = 0x3;\n    this._list = new Array(4);\n  }\n}\n\n/**\n * --------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (arguments.length === 0) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (arguments.length === 0) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._list = new Array(this._list.length);\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  var length = array.length;\n  var capacity = this._nextPowerOf2(length);\n\n  this._list = new Array(capacity);\n  this._capacityMask = capacity - 1;\n  this._tail = length;\n\n  for (var i = 0; i < length; i++) this._list[i] = array[i];\n};\n\n/**\n *\n * @param fullCopy\n * @param size Initialize the array with a specific size. Will default to the current list size\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy, size) {\n  var src = this._list;\n  var capacity = src.length;\n  var length = this.length;\n  size = size | length;\n\n  // No prealloc requested and the buffer is contiguous\n  if (size == length && this._head < this._tail) {\n    // Simply do a fast slice copy\n    return this._list.slice(this._head, this._tail);\n  }\n\n  var dest = new Array(size);\n\n  var k = 0;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < capacity; i++) dest[k++] = src[i];\n    for (i = 0; i < this._tail; i++) dest[k++] = src[i];\n  } else {\n    for (i = this._head; i < this._tail; i++) dest[k++] = src[i];\n  }\n\n  return dest;\n}\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head != 0) {\n    // double array size and copy existing data, head to end, then beginning to tail.\n    var newList = this._copyArray(true, this._list.length << 1);\n\n    this._tail = this._list.length;\n    this._head = 0;\n\n    this._list = newList;\n  } else {\n    this._tail = this._list.length;\n    this._list.length <<= 1;\n  }\n\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n/**\n * Find the next power of 2, at least 4\n * @private\n * @param {number} num \n * @returns {number}\n */\nDenque.prototype._nextPowerOf2 = function _nextPowerOf2(num) {\n  var log2 = Math.log(num) / Math.log(2);\n  var nextPow2 = 1 << (log2 + 1);\n\n  return Math.max(nextPow2, 4);\n}\n\nmodule.exports = Denque;\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}:\"function\"==typeof define&&define.amd?define(function(){return function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}):t.dlv=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}(this);\n//# sourceMappingURL=dlv.umd.js.map\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_iterator_1 = require(\"./event-iterator\");\nexports.EventIterator = event_iterator_1.EventIterator;\nfunction subscribe(event, options, evOptions) {\n    return new event_iterator_1.EventIterator(({ push }) => {\n        this.addEventListener(event, push, options);\n        return () => this.removeEventListener(event, push, options);\n    }, evOptions);\n}\nexports.subscribe = subscribe;\nexports.default = event_iterator_1.EventIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventQueue {\n    constructor() {\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.eventHandlers = {};\n        this.isPaused = false;\n        this.isStopped = false;\n    }\n    push(value) {\n        if (this.isStopped)\n            return;\n        const resolution = { value, done: false };\n        if (this.pullQueue.length) {\n            const placeholder = this.pullQueue.shift();\n            if (placeholder)\n                placeholder.resolve(resolution);\n        }\n        else {\n            this.pushQueue.push(Promise.resolve(resolution));\n            if (this.highWaterMark !== undefined &&\n                this.pushQueue.length >= this.highWaterMark &&\n                !this.isPaused) {\n                this.isPaused = true;\n                if (this.eventHandlers.highWater) {\n                    this.eventHandlers.highWater();\n                }\n                else if (console) {\n                    console.warn(`EventIterator queue reached ${this.pushQueue.length} items`);\n                }\n            }\n        }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        for (const placeholder of this.pullQueue) {\n            placeholder.resolve({ value: undefined, done: true });\n        }\n        this.pullQueue.length = 0;\n    }\n    fail(error) {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        if (this.pullQueue.length) {\n            for (const placeholder of this.pullQueue) {\n                placeholder.reject(error);\n            }\n            this.pullQueue.length = 0;\n        }\n        else {\n            const rejection = Promise.reject(error);\n            /* Attach error handler to avoid leaking an unhandled promise rejection. */\n            rejection.catch(() => { });\n            this.pushQueue.push(rejection);\n        }\n    }\n    remove() {\n        Promise.resolve().then(() => {\n            if (this.removeCallback)\n                this.removeCallback();\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return {\n            next: (value) => {\n                const result = this.pushQueue.shift();\n                if (result) {\n                    if (this.lowWaterMark !== undefined &&\n                        this.pushQueue.length <= this.lowWaterMark &&\n                        this.isPaused) {\n                        this.isPaused = false;\n                        if (this.eventHandlers.lowWater) {\n                            this.eventHandlers.lowWater();\n                        }\n                    }\n                    return result;\n                }\n                else if (this.isStopped) {\n                    return Promise.resolve({ value: undefined, done: true });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        this.pullQueue.push({ resolve, reject });\n                    });\n                }\n            },\n            return: () => {\n                this.isStopped = true;\n                this.pushQueue.length = 0;\n                this.remove();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n        };\n    }\n}\nclass EventIterator {\n    constructor(listen, { highWaterMark = 100, lowWaterMark = 1 } = {}) {\n        const queue = new EventQueue();\n        queue.highWaterMark = highWaterMark;\n        queue.lowWaterMark = lowWaterMark;\n        queue.removeCallback =\n            listen({\n                push: value => queue.push(value),\n                stop: () => queue.stop(),\n                fail: error => queue.fail(error),\n                on: (event, fn) => {\n                    queue.eventHandlers[event] = fn;\n                },\n            }) || (() => { });\n        this[Symbol.asyncIterator] = () => queue[Symbol.asyncIterator]();\n        Object.freeze(this);\n    }\n}\nexports.EventIterator = EventIterator;\nexports.default = EventIterator;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n","'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n","'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n","module.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  peek () {\n    return this.buffer[this.btm]\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\n","const FixedFIFO = require('./fixed-size')\n\nmodule.exports = class FastFIFO {\n  constructor (hwm) {\n    this.hwm = hwm || 16\n    this.head = new FixedFIFO(this.hwm)\n    this.tail = this.head\n  }\n\n  push (val) {\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift () {\n    const val = this.tail.shift()\n    if (val === undefined && this.tail.next) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      return this.tail.shift()\n    }\n    return val\n  }\n\n  peek () {\n    return this.tail.peek()\n  }\n\n  isEmpty () {\n    return this.head.isEmpty()\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const RateLimiterRedis = require('./lib/RateLimiterRedis');\nconst RateLimiterMongo = require('./lib/RateLimiterMongo');\nconst RateLimiterMySQL = require('./lib/RateLimiterMySQL');\nconst RateLimiterPostgres = require('./lib/RateLimiterPostgres');\nconst {RateLimiterClusterMaster, RateLimiterClusterMasterPM2, RateLimiterCluster} = require('./lib/RateLimiterCluster');\nconst RateLimiterMemory = require('./lib/RateLimiterMemory');\nconst RateLimiterMemcache = require('./lib/RateLimiterMemcache');\nconst RLWrapperBlackAndWhite = require('./lib/RLWrapperBlackAndWhite');\nconst RateLimiterUnion = require('./lib/RateLimiterUnion');\nconst RateLimiterQueue = require('./lib/RateLimiterQueue');\nconst BurstyRateLimiter = require('./lib/BurstyRateLimiter');\nconst RateLimiterRes = require('./lib/RateLimiterRes');\n\nmodule.exports = {\n  RateLimiterRedis,\n  RateLimiterMongo,\n  RateLimiterMySQL,\n  RateLimiterPostgres,\n  RateLimiterMemory,\n  RateLimiterMemcache,\n  RateLimiterClusterMaster,\n  RateLimiterClusterMasterPM2,\n  RateLimiterCluster,\n  RLWrapperBlackAndWhite,\n  RateLimiterUnion,\n  RateLimiterQueue,\n  BurstyRateLimiter,\n  RateLimiterRes,\n};\n","const RateLimiterRes = require(\"./RateLimiterRes\");\n\n/**\n * Bursty rate limiter exposes only msBeforeNext time and doesn't expose points from bursty limiter by default\n * @type {BurstyRateLimiter}\n */\nmodule.exports = class BurstyRateLimiter {\n  constructor(rateLimiter, burstLimiter) {\n    this._rateLimiter = rateLimiter;\n    this._burstLimiter = burstLimiter\n  }\n\n  /**\n   * Merge rate limiter response objects. Responses can be null\n   *\n   * @param {RateLimiterRes} [rlRes] Rate limiter response\n   * @param {RateLimiterRes} [blRes] Bursty limiter response\n   */\n  _combineRes(rlRes, blRes) {\n    if (!rlRes) {\n      return null\n    }\n\n    return new RateLimiterRes(\n      rlRes.remainingPoints,\n      Math.min(rlRes.msBeforeNext, blRes ? blRes.msBeforeNext : 0),\n      rlRes.consumedPoints,\n      rlRes.isFirstInDuration\n    )\n  }\n\n  /**\n   * @param key\n   * @param pointsToConsume\n   * @param options\n   * @returns {Promise<any>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return this._rateLimiter.consume(key, pointsToConsume, options)\n      .catch((rlRej) => {\n        if (rlRej instanceof RateLimiterRes) {\n          return this._burstLimiter.consume(key, pointsToConsume, options)\n            .then((blRes) => {\n              return Promise.resolve(this._combineRes(rlRej, blRes))\n            })\n            .catch((blRej) => {\n                if (blRej instanceof RateLimiterRes) {\n                  return Promise.reject(this._combineRes(rlRej, blRej))\n                } else {\n                  return Promise.reject(blRej)\n                }\n              }\n            )\n        } else {\n          return Promise.reject(rlRej)\n        }\n      })\n  }\n\n  /**\n   * It doesn't expose available points from burstLimiter\n   *\n   * @param key\n   * @returns {Promise<RateLimiterRes>}\n   */\n  get(key) {\n    return Promise.all([\n      this._rateLimiter.get(key),\n      this._burstLimiter.get(key),\n    ]).then(([rlRes, blRes]) => {\n      return this._combineRes(rlRes, blRes);\n    });\n  }\n\n  get points() {\n    return this._rateLimiter.points;\n  }\n};\n","const RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RLWrapperBlackAndWhite {\n  constructor(opts = {}) {\n    this.limiter = opts.limiter;\n    this.blackList = opts.blackList;\n    this.whiteList = opts.whiteList;\n    this.isBlackListed = opts.isBlackListed;\n    this.isWhiteListed = opts.isWhiteListed;\n    this.runActionAnyway = opts.runActionAnyway;\n  }\n\n  get limiter() {\n    return this._limiter;\n  }\n\n  set limiter(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('limiter is not set');\n    }\n\n    this._limiter = value;\n  }\n\n  get runActionAnyway() {\n    return this._runActionAnyway;\n  }\n\n  set runActionAnyway(value) {\n    this._runActionAnyway = typeof value === 'undefined' ? false : value;\n  }\n\n  get blackList() {\n    return this._blackList;\n  }\n\n  set blackList(value) {\n    this._blackList = Array.isArray(value) ? value : [];\n  }\n\n  get isBlackListed() {\n    return this._isBlackListed;\n  }\n\n  set isBlackListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isBlackListed must be function');\n    }\n    this._isBlackListed = func;\n  }\n\n  get whiteList() {\n    return this._whiteList;\n  }\n\n  set whiteList(value) {\n    this._whiteList = Array.isArray(value) ? value : [];\n  }\n\n  get isWhiteListed() {\n    return this._isWhiteListed;\n  }\n\n  set isWhiteListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isWhiteListed must be function');\n    }\n    this._isWhiteListed = func;\n  }\n\n  isBlackListedSomewhere(key) {\n    return this.blackList.indexOf(key) >= 0 || this.isBlackListed(key);\n  }\n\n  isWhiteListedSomewhere(key) {\n    return this.whiteList.indexOf(key) >= 0 || this.isWhiteListed(key);\n  }\n\n  getBlackRes() {\n    return new RateLimiterRes(0, Number.MAX_SAFE_INTEGER, 0, false);\n  }\n\n  getWhiteRes() {\n    return new RateLimiterRes(Number.MAX_SAFE_INTEGER, 0, 0, false);\n  }\n\n  rejectBlack() {\n    return Promise.reject(this.getBlackRes());\n  }\n\n  resolveBlack() {\n    return Promise.resolve(this.getBlackRes());\n  }\n\n  resolveWhite() {\n    return Promise.resolve(this.getWhiteRes());\n  }\n\n  consume(key, pointsToConsume = 1) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.rejectBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.consume(key, pointsToConsume);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.consume(key, pointsToConsume).catch(() => {});\n    }\n    return res;\n  }\n\n  block(key, secDuration) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.block(key, secDuration);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.block(key, secDuration).catch(() => {});\n    }\n    return res;\n  }\n\n  penalty(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.penalty(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.penalty(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  reward(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.reward(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.reward(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  get(key) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined' || this.runActionAnyway) {\n      return this.limiter.get(key);\n    }\n\n    return res;\n  }\n\n  delete(key) {\n    return this.limiter.delete(key);\n  }\n};\n","module.exports = class RateLimiterAbstract {\n  /**\n   *\n   * @param opts Object Defaults {\n   *   points: 4, // Number of points\n   *   duration: 1, // Per seconds\n   *   blockDuration: 0, // Block if consumed more than points in current duration for blockDuration seconds\n   *   execEvenly: false, // Execute allowed actions evenly over duration\n   *   execEvenlyMinDelayMs: duration * 1000 / points, // ms, works with execEvenly=true option\n   *   keyPrefix: 'rlflx',\n   * }\n   */\n  constructor(opts = {}) {\n    this.points = opts.points;\n    this.duration = opts.duration;\n    this.blockDuration = opts.blockDuration;\n    this.execEvenly = opts.execEvenly;\n    this.execEvenlyMinDelayMs = opts.execEvenlyMinDelayMs;\n    this.keyPrefix = opts.keyPrefix;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  set points(value) {\n    this._points = value >= 0 ? value : 4;\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    this._duration = typeof value === 'undefined' ? 1 : value;\n  }\n\n  get msDuration() {\n    return this.duration * 1000;\n  }\n\n  get blockDuration() {\n    return this._blockDuration;\n  }\n\n  set blockDuration(value) {\n    this._blockDuration = typeof value === 'undefined' ? 0 : value;\n  }\n\n  get msBlockDuration() {\n    return this.blockDuration * 1000;\n  }\n\n  get execEvenly() {\n    return this._execEvenly;\n  }\n\n  set execEvenly(value) {\n    this._execEvenly = typeof value === 'undefined' ? false : Boolean(value);\n  }\n\n  get execEvenlyMinDelayMs() {\n    return this._execEvenlyMinDelayMs;\n  }\n\n  set execEvenlyMinDelayMs(value) {\n    this._execEvenlyMinDelayMs = typeof value === 'undefined' ? Math.ceil(this.msDuration / this.points) : value;\n  }\n\n  get keyPrefix() {\n    return this._keyPrefix;\n  }\n\n  set keyPrefix(value) {\n    if (typeof value === 'undefined') {\n      value = 'rlflx';\n    }\n    if (typeof value !== 'string') {\n      throw new Error('keyPrefix must be string');\n    }\n    this._keyPrefix = value;\n  }\n\n  _getKeySecDuration(options = {}) {\n    return options && options.customDuration >= 0\n      ? options.customDuration\n      : this.duration;\n  }\n\n  getKey(key) {\n    return this.keyPrefix.length > 0 ? `${this.keyPrefix}:${key}` : key;\n  }\n\n  parseKey(rlKey) {\n    return rlKey.substring(this.keyPrefix.length);\n  }\n\n  consume() {\n    throw new Error(\"You have to implement the method 'consume'!\");\n  }\n\n  penalty() {\n    throw new Error(\"You have to implement the method 'penalty'!\");\n  }\n\n  reward() {\n    throw new Error(\"You have to implement the method 'reward'!\");\n  }\n\n  get() {\n    throw new Error(\"You have to implement the method 'get'!\");\n  }\n\n  set() {\n    throw new Error(\"You have to implement the method 'set'!\");\n  }\n\n  block() {\n    throw new Error(\"You have to implement the method 'block'!\");\n  }\n\n  delete() {\n    throw new Error(\"You have to implement the method 'delete'!\");\n  }\n};\n","/**\n * Implements rate limiting in cluster using built-in IPC\n *\n * Two classes are described here: master and worker\n * Master have to be create in the master process without any options.\n * Any number of rate limiters can be created in workers, but each rate limiter must be with unique keyPrefix\n *\n * Workflow:\n * 1. master rate limiter created in master process\n * 2. worker rate limiter sends 'init' message with necessary options during creating\n * 3. master receives options and adds new rate limiter by keyPrefix if it isn't created yet\n * 4. master sends 'init' back to worker's rate limiter\n * 5. worker can process requests immediately,\n *    but they will be postponed by 'workerWaitInit' until master sends 'init' to worker\n * 6. every request to worker rate limiter creates a promise\n * 7. if master doesn't response for 'timeout', promise is rejected\n * 8. master sends 'resolve' or 'reject' command to worker\n * 9. worker resolves or rejects promise depending on message from master\n *\n */\n\nconst cluster = require('cluster');\nconst crypto = require('crypto');\nconst RateLimiterAbstract = require('./RateLimiterAbstract');\nconst RateLimiterMemory = require('./RateLimiterMemory');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nconst channel = 'rate_limiter_flexible';\nlet masterInstance = null;\n\nconst masterSendToWorker = function (worker, msg, type, res) {\n  let data;\n  if (res === null || res === true || res === false) {\n    data = res;\n  } else {\n    data = {\n      remainingPoints: res.remainingPoints,\n      msBeforeNext: res.msBeforeNext,\n      consumedPoints: res.consumedPoints,\n      isFirstInDuration: res.isFirstInDuration,\n    };\n  }\n  worker.send({\n    channel,\n    keyPrefix: msg.keyPrefix, // which rate limiter exactly\n    promiseId: msg.promiseId,\n    type,\n    data,\n  });\n};\n\nconst workerWaitInit = function (payload) {\n  setTimeout(() => {\n    if (this._initiated) {\n      process.send(payload);\n      // Promise will be removed by timeout if too long\n    } else if (typeof this._promises[payload.promiseId] !== 'undefined') {\n      workerWaitInit.call(this, payload);\n    }\n  }, 30);\n};\n\nconst workerSendToMaster = function (func, promiseId, key, arg, opts) {\n  const payload = {\n    channel,\n    keyPrefix: this.keyPrefix,\n    func,\n    promiseId,\n    data: {\n      key,\n      arg,\n      opts,\n    },\n  };\n\n  if (!this._initiated) {\n    // Wait init before sending messages to master\n    workerWaitInit.call(this, payload);\n  } else {\n    process.send(payload);\n  }\n};\n\nconst masterProcessMsg = function (worker, msg) {\n  if (!msg || msg.channel !== channel || typeof this._rateLimiters[msg.keyPrefix] === 'undefined') {\n    return false;\n  }\n\n  let promise;\n\n  switch (msg.func) {\n    case 'consume':\n      promise = this._rateLimiters[msg.keyPrefix].consume(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'penalty':\n      promise = this._rateLimiters[msg.keyPrefix].penalty(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'reward':\n      promise = this._rateLimiters[msg.keyPrefix].reward(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'block':\n      promise = this._rateLimiters[msg.keyPrefix].block(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'get':\n      promise = this._rateLimiters[msg.keyPrefix].get(msg.data.key, msg.data.opts);\n      break;\n    case 'delete':\n      promise = this._rateLimiters[msg.keyPrefix].delete(msg.data.key, msg.data.opts);\n      break;\n    default:\n      return false;\n  }\n\n  if (promise) {\n    promise\n      .then((res) => {\n        masterSendToWorker(worker, msg, 'resolve', res);\n      })\n      .catch((rejRes) => {\n        masterSendToWorker(worker, msg, 'reject', rejRes);\n      });\n  }\n};\n\nconst workerProcessMsg = function (msg) {\n  if (!msg || msg.channel !== channel || msg.keyPrefix !== this.keyPrefix) {\n    return false;\n  }\n\n  if (this._promises[msg.promiseId]) {\n    clearTimeout(this._promises[msg.promiseId].timeoutId);\n    let res;\n    if (msg.data === null || msg.data === true || msg.data === false) {\n      res = msg.data;\n    } else {\n      res = new RateLimiterRes(\n        msg.data.remainingPoints,\n        msg.data.msBeforeNext,\n        msg.data.consumedPoints,\n        msg.data.isFirstInDuration // eslint-disable-line comma-dangle\n      );\n    }\n\n    switch (msg.type) {\n      case 'resolve':\n        this._promises[msg.promiseId].resolve(res);\n        break;\n      case 'reject':\n        this._promises[msg.promiseId].reject(res);\n        break;\n      default:\n        throw new Error(`RateLimiterCluster: no such message type '${msg.type}'`);\n    }\n\n    delete this._promises[msg.promiseId];\n  }\n};\n/**\n * Prepare options to send to master\n * Master will create rate limiter depending on options\n *\n * @returns {{points: *, duration: *, blockDuration: *, execEvenly: *, execEvenlyMinDelayMs: *, keyPrefix: *}}\n */\nconst getOpts = function () {\n  return {\n    points: this.points,\n    duration: this.duration,\n    blockDuration: this.blockDuration,\n    execEvenly: this.execEvenly,\n    execEvenlyMinDelayMs: this.execEvenlyMinDelayMs,\n    keyPrefix: this.keyPrefix,\n  };\n};\n\nconst savePromise = function (resolve, reject) {\n  const hrtime = process.hrtime();\n  let promiseId = hrtime[0].toString() + hrtime[1].toString();\n\n  if (typeof this._promises[promiseId] !== 'undefined') {\n    promiseId += crypto.randomBytes(12).toString('base64');\n  }\n\n  this._promises[promiseId] = {\n    resolve,\n    reject,\n    timeoutId: setTimeout(() => {\n      delete this._promises[promiseId];\n      reject(new Error('RateLimiterCluster timeout: no answer from master in time'));\n    }, this.timeoutMs),\n  };\n\n  return promiseId;\n};\n\nclass RateLimiterClusterMaster {\n  constructor() {\n    if (masterInstance) {\n      return masterInstance;\n    }\n\n    this._rateLimiters = {};\n\n    cluster.setMaxListeners(0);\n\n    cluster.on('message', (worker, msg) => {\n      if (msg && msg.channel === channel && msg.type === 'init') {\n        // If init request, check or create rate limiter by key prefix and send 'init' back to worker\n        if (typeof this._rateLimiters[msg.opts.keyPrefix] === 'undefined') {\n          this._rateLimiters[msg.opts.keyPrefix] = new RateLimiterMemory(msg.opts);\n        }\n\n        worker.send({\n          channel,\n          type: 'init',\n          keyPrefix: msg.opts.keyPrefix,\n        });\n      } else {\n        masterProcessMsg.call(this, worker, msg);\n      }\n    });\n\n    masterInstance = this;\n  }\n}\n\nclass RateLimiterClusterMasterPM2 {\n  constructor(pm2) {\n    if (masterInstance) {\n      return masterInstance;\n    }\n\n    this._rateLimiters = {};\n\n    pm2.launchBus((err, pm2Bus) => {\n      pm2Bus.on('process:msg', (packet) => {\n        const msg = packet.raw;\n        if (msg && msg.channel === channel && msg.type === 'init') {\n          // If init request, check or create rate limiter by key prefix and send 'init' back to worker\n          if (typeof this._rateLimiters[msg.opts.keyPrefix] === 'undefined') {\n            this._rateLimiters[msg.opts.keyPrefix] = new RateLimiterMemory(msg.opts);\n          }\n\n          pm2.sendDataToProcessId(packet.process.pm_id, {\n            data: {},\n            topic: channel,\n            channel,\n            type: 'init',\n            keyPrefix: msg.opts.keyPrefix,\n          }, (sendErr, res) => {\n            if (sendErr) {\n              console.log(sendErr, res);\n            }\n          });\n        } else {\n          const worker = {\n            send: (msgData) => {\n              const pm2Message = msgData;\n              pm2Message.topic = channel;\n              if (typeof pm2Message.data === 'undefined') {\n                pm2Message.data = {};\n              }\n              pm2.sendDataToProcessId(packet.process.pm_id, pm2Message, (sendErr, res) => {\n                if (sendErr) {\n                  console.log(sendErr, res);\n                }\n              });\n            },\n          };\n          masterProcessMsg.call(this, worker, msg);\n        }\n      });\n    });\n\n    masterInstance = this;\n  }\n}\n\nclass RateLimiterClusterWorker extends RateLimiterAbstract {\n  get timeoutMs() {\n    return this._timeoutMs;\n  }\n\n  set timeoutMs(value) {\n    this._timeoutMs = typeof value === 'undefined' ? 5000 : Math.abs(parseInt(value));\n  }\n\n  constructor(opts = {}) {\n    super(opts);\n\n    process.setMaxListeners(0);\n\n    this.timeoutMs = opts.timeoutMs;\n\n    this._initiated = false;\n\n    process.on('message', (msg) => {\n      if (msg && msg.channel === channel && msg.type === 'init' && msg.keyPrefix === this.keyPrefix) {\n        this._initiated = true;\n      } else {\n        workerProcessMsg.call(this, msg);\n      }\n    });\n\n    // Create limiter on master with specific options\n    process.send({\n      channel,\n      type: 'init',\n      opts: getOpts.call(this),\n    });\n\n    this._promises = {};\n  }\n\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'consume', promiseId, key, pointsToConsume, options);\n    });\n  }\n\n  penalty(key, points = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'penalty', promiseId, key, points, options);\n    });\n  }\n\n  reward(key, points = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'reward', promiseId, key, points, options);\n    });\n  }\n\n  block(key, secDuration, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'block', promiseId, key, secDuration, options);\n    });\n  }\n\n  get(key, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'get', promiseId, key, options);\n    });\n  }\n\n  delete(key, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'delete', promiseId, key, options);\n    });\n  }\n}\n\nmodule.exports = {\n  RateLimiterClusterMaster,\n  RateLimiterClusterMasterPM2,\n  RateLimiterCluster: RateLimiterClusterWorker,\n};\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMemcache extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: memcacheClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.client = opts.storeClient;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(result.consumedPoints);\n    res.isFirstInDuration = result.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = result.msBeforeNext;\n\n    return res;\n  }\n\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n      const secDuration = Math.floor(msDuration / 1000);\n\n      if (forceExpire) {\n        this.client.set(rlKey, points, secDuration, (err) => {\n          if (!err) {\n            this.client.set(\n              `${rlKey}_expire`,\n              secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n              secDuration,\n              () => {\n                const res = {\n                  consumedPoints: points,\n                  msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                };\n                resolve(res);\n              }\n            );\n          } else {\n            reject(err);\n          }\n        });\n      } else {\n        this.client.incr(rlKey, points, (err, consumedPoints) => {\n          if (err || consumedPoints === false) {\n            this.client.add(rlKey, points, secDuration, (errAddKey, createdNew) => {\n              if (errAddKey || !createdNew) {\n                // Try to upsert again in case of race condition\n                if (typeof options.attemptNumber === 'undefined' || options.attemptNumber < 3) {\n                  const nextOptions = Object.assign({}, options);\n                  nextOptions.attemptNumber = nextOptions.attemptNumber ? (nextOptions.attemptNumber + 1) : 1;\n\n                  this._upsert(rlKey, points, msDuration, forceExpire, nextOptions)\n                    .then(resUpsert => resolve(resUpsert))\n                    .catch(errUpsert => reject(errUpsert));\n                } else {\n                  reject(new Error('Can not add key'));\n                }\n              } else {\n                this.client.add(\n                  `${rlKey}_expire`,\n                  secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n                  secDuration,\n                  () => {\n                    const res = {\n                      consumedPoints: points,\n                      msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                    };\n                    resolve(res);\n                  }\n                );\n              }\n            });\n          } else {\n            this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n              if (errGetExpire) {\n                reject(errGetExpire);\n              } else {\n                const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n                const res = {\n                  consumedPoints,\n                  msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n                };\n                resolve(res);\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  _get(rlKey) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n\n      this.client.get(rlKey, (err, consumedPoints) => {\n        if (!consumedPoints) {\n          resolve(null);\n        } else {\n          this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n            if (errGetExpire) {\n              reject(errGetExpire);\n            } else {\n              const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n              const res = {\n                consumedPoints,\n                msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n              };\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n\n  _delete(rlKey) {\n    return new Promise((resolve, reject) => {\n      this.client.del(rlKey, (err, res) => {\n        if (err) {\n          reject(err);\n        } else if (res === false) {\n          resolve(res);\n        } else {\n          this.client.del(`${rlKey}_expire`, (errDelExpire) => {\n            if (errDelExpire) {\n              reject(errDelExpire);\n            } else {\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = RateLimiterMemcache;\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\nconst MemoryStorage = require('./component/MemoryStorage/MemoryStorage');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMemory extends RateLimiterAbstract {\n  constructor(opts = {}) {\n    super(opts);\n\n    this._memoryStorage = new MemoryStorage();\n  }\n  /**\n   *\n   * @param key\n   * @param pointsToConsume\n   * @param {Object} options\n   * @returns {Promise<RateLimiterRes>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const rlKey = this.getKey(key);\n      const secDuration = this._getKeySecDuration(options);\n      let res = this._memoryStorage.incrby(rlKey, pointsToConsume, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n\n      if (res.consumedPoints > this.points) {\n        // Block only first time when consumed more than points\n        if (this.blockDuration > 0 && res.consumedPoints <= (this.points + pointsToConsume)) {\n          // Block key\n          res = this._memoryStorage.set(rlKey, res.consumedPoints, this.blockDuration);\n        }\n        reject(res);\n      } else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n        // Execute evenly\n        let delay = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2));\n        if (delay < this.execEvenlyMinDelayMs) {\n          delay = res.consumedPoints * this.execEvenlyMinDelayMs;\n        }\n\n        setTimeout(resolve, delay, res);\n      } else {\n        resolve(res);\n      }\n    });\n  }\n\n  penalty(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve) => {\n      const secDuration = this._getKeySecDuration(options);\n      const res = this._memoryStorage.incrby(rlKey, points, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n      resolve(res);\n    });\n  }\n\n  reward(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve) => {\n      const secDuration = this._getKeySecDuration(options);\n      const res = this._memoryStorage.incrby(rlKey, -points, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n      resolve(res);\n    });\n  }\n\n  /**\n   * Block any key for secDuration seconds\n   *\n   * @param key\n   * @param secDuration\n   */\n  block(key, secDuration) {\n    const msDuration = secDuration * 1000;\n    const initPoints = this.points + 1;\n\n    this._memoryStorage.set(this.getKey(key), initPoints, secDuration);\n    return Promise.resolve(\n      new RateLimiterRes(0, msDuration === 0 ? -1 : msDuration, initPoints)\n    );\n  }\n\n  set(key, points, secDuration) {\n    const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n\n    this._memoryStorage.set(this.getKey(key), points, secDuration);\n    return Promise.resolve(\n      new RateLimiterRes(0, msDuration === 0 ? -1 : msDuration, points)\n    );\n  }\n\n  get(key) {\n    const res = this._memoryStorage.get(this.getKey(key));\n    if (res !== null) {\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    }\n\n    return Promise.resolve(res);\n  }\n\n  delete(key) {\n    return Promise.resolve(this._memoryStorage.delete(this.getKey(key)));\n  }\n}\n\nmodule.exports = RateLimiterMemory;\n\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\n/**\n * Get MongoDB driver version as upsert options differ\n * @params {Object} Client instance\n * @returns {Object} Version Object containing major, feature & minor versions.\n */\nfunction getDriverVersion(client) {\n  try {\n    const _client = client.client ? client.client : client;\n\n    const { version } = _client.topology.s.options.metadata.driver;\n    const _v = version.split('.').map(v => parseInt(v));\n\n    return {\n      major: _v[0],\n      feature: _v[1],\n      patch: _v[2],\n    };\n  } catch (err) {\n    return { major: 0, feature: 0, patch: 0 };\n  }\n}\n\nclass RateLimiterMongo extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   indexKeyPrefix: {attr1: 1, attr2: 1}\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   mongo: MongoClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.dbName = opts.dbName;\n    this.tableName = opts.tableName;\n    this.indexKeyPrefix = opts.indexKeyPrefix;\n\n    if (opts.mongo) {\n      this.client = opts.mongo;\n    } else {\n      this.client = opts.storeClient;\n    }\n    if (typeof this.client.then === 'function') {\n      // If Promise\n      this.client\n        .then((conn) => {\n          this.client = conn;\n          this._initCollection();\n          this._driverVersion = getDriverVersion(this.client);\n        });\n    } else {\n      this._initCollection();\n      this._driverVersion = getDriverVersion(this.client);\n    }\n  }\n\n  get dbName() {\n    return this._dbName;\n  }\n\n  set dbName(value) {\n    this._dbName = typeof value === 'undefined' ? RateLimiterMongo.getDbName() : value;\n  }\n\n  static getDbName() {\n    return 'node-rate-limiter-flexible';\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  set client(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('mongo is not set');\n    }\n    this._client = value;\n  }\n\n  get indexKeyPrefix() {\n    return this._indexKeyPrefix;\n  }\n\n  set indexKeyPrefix(obj) {\n    this._indexKeyPrefix = obj || {};\n  }\n\n  _initCollection() {\n    const db = typeof this.client.db === 'function'\n      ? this.client.db(this.dbName)\n      : this.client;\n\n    const collection = db.collection(this.tableName);\n    collection.createIndex({ expire: -1 }, { expireAfterSeconds: 0 });\n    collection.createIndex(Object.assign({}, this.indexKeyPrefix, { key: 1 }), { unique: true });\n\n    this._collection = collection;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n\n    let doc;\n    if (typeof result.value === 'undefined') {\n      doc = result;\n    } else {\n      doc = result.value;\n    }\n\n    res.isFirstInDuration = doc.points === changedPoints;\n    res.consumedPoints = doc.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = doc.expire !== null\n      ? Math.max(new Date(doc.expire).getTime() - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n\n    let where;\n    let upsertData;\n    if (forceExpire) {\n      where = { key };\n      where = Object.assign(where, docAttrs);\n      upsertData = {\n        $set: {\n          key,\n          points,\n          expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n        },\n      };\n      upsertData.$set = Object.assign(upsertData.$set, docAttrs);\n    } else {\n      where = {\n        $or: [\n          { expire: { $gt: new Date() } },\n          { expire: { $eq: null } },\n        ],\n        key,\n      };\n      where = Object.assign(where, docAttrs);\n      upsertData = {\n        $setOnInsert: {\n          key,\n          expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n        },\n        $inc: { points },\n      };\n      upsertData.$setOnInsert = Object.assign(upsertData.$setOnInsert, docAttrs);\n    }\n\n    // Options for collection updates differ between driver versions\n    const upsertOptions = {\n      upsert: true,\n    };\n    if ((this._driverVersion.major >= 4) ||\n        (this._driverVersion.major === 3 &&\n          (this._driverVersion.feature >=7) || \n          (this._driverVersion.feature >= 6 && \n              this._driverVersion.patch >= 7 ))) \n    {\n      upsertOptions.returnDocument = 'after';\n    } else {\n      upsertOptions.returnOriginal = false;\n    }\n\n    /*\n     * 1. Find actual limit and increment points\n     * 2. If limit expired, but Mongo doesn't clean doc by TTL yet, try to replace limit doc completely\n     * 3. If 2 or more Mongo threads try to insert the new limit doc, only the first succeed\n     * 4. Try to upsert from step 1. Actual limit is created now, points are incremented without problems\n     */\n    return new Promise((resolve, reject) => {\n      this._collection.findOneAndUpdate(\n        where,\n        upsertData,\n        upsertOptions\n      ).then((res) => {\n        resolve(res);\n      }).catch((errUpsert) => {\n        if (errUpsert && errUpsert.code === 11000) { // E11000 duplicate key error collection\n          const replaceWhere = Object.assign({ // try to replace OLD limit doc\n            $or: [\n              { expire: { $lte: new Date() } },\n              { expire: { $eq: null } },\n            ],\n            key,\n          }, docAttrs);\n\n          const replaceTo = {\n            $set: Object.assign({\n              key,\n              points,\n              expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n            }, docAttrs)\n          };\n\n          this._collection.findOneAndUpdate(\n            replaceWhere,\n            replaceTo,\n            upsertOptions\n          ).then((res) => {\n            resolve(res);\n          }).catch((errReplace) => {\n            if (errReplace && errReplace.code === 11000) { // E11000 duplicate key error collection\n              this._upsert(key, points, msDuration, forceExpire)\n                .then(res => resolve(res))\n                .catch(err => reject(err));\n            } else {\n              reject(errReplace);\n            }\n          });\n        } else {\n          reject(errUpsert);\n        }\n      });\n    });\n  }\n\n  _get(rlKey, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n\n    const where = Object.assign({\n      key: rlKey,\n      $or: [\n        { expire: { $gt: new Date() } },\n        { expire: { $eq: null } },\n      ],\n    }, docAttrs);\n\n    return this._collection.findOne(where);\n  }\n\n  _delete(rlKey, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n    const where = Object.assign({ key: rlKey }, docAttrs);\n\n    return this._collection.deleteOne(where)\n      .then(res => res.deletedCount > 0);\n  }\n}\n\nmodule.exports = RateLimiterMongo;\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMySQL extends RateLimiterStoreAbstract {\n  /**\n   * @callback callback\n   * @param {Object} err\n   *\n   * @param {Object} opts\n   * @param {callback} cb\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: anySqlClient,\n   *   storeType: 'knex', // required only for Knex instance\n   *   dbName: 'string',\n   *   tableName: 'string',\n   * }\n   */\n  constructor(opts, cb = null) {\n    super(opts);\n\n    this.client = opts.storeClient;\n    this.clientType = opts.storeType;\n\n    this.dbName = opts.dbName;\n    this.tableName = opts.tableName;\n\n    this.clearExpiredByTimeout = opts.clearExpiredByTimeout;\n\n    this.tableCreated = opts.tableCreated;\n    if (!this.tableCreated) {\n      this._createDbAndTable()\n        .then(() => {\n          this.tableCreated = true;\n          if (this.clearExpiredByTimeout) {\n            this._clearExpiredHourAgo();\n          }\n          if (typeof cb === 'function') {\n            cb();\n          }\n        })\n        .catch((err) => {\n          if (typeof cb === 'function') {\n            cb(err);\n          } else {\n            throw err;\n          }\n        });\n    } else {\n      if (this.clearExpiredByTimeout) {\n        this._clearExpiredHourAgo();\n      }\n      if (typeof cb === 'function') {\n        cb();\n      }\n    }\n  }\n\n  clearExpired(expire) {\n    return new Promise((resolve) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(`DELETE FROM ??.?? WHERE expire < ?`, [this.dbName, this.tableName, expire], () => {\n            this._releaseConnection(conn);\n            resolve();\n          });\n        })\n        .catch(() => {\n          resolve();\n        });\n    });\n  }\n\n  _clearExpiredHourAgo() {\n    if (this._clearExpiredTimeoutId) {\n      clearTimeout(this._clearExpiredTimeoutId);\n    }\n    this._clearExpiredTimeoutId = setTimeout(() => {\n      this.clearExpired(Date.now() - 3600000) // Never rejected\n        .then(() => {\n          this._clearExpiredHourAgo();\n        });\n    }, 300000);\n    this._clearExpiredTimeoutId.unref();\n  }\n\n  /**\n   *\n   * @return Promise<any>\n   * @private\n   */\n  _getConnection() {\n    switch (this.clientType) {\n      case 'pool':\n        return new Promise((resolve, reject) => {\n          this.client.getConnection((errConn, conn) => {\n            if (errConn) {\n              return reject(errConn);\n            }\n\n            resolve(conn);\n          });\n        });\n      case 'sequelize':\n        return this.client.connectionManager.getConnection();\n      case 'knex':\n        return this.client.client.acquireConnection();\n      default:\n        return Promise.resolve(this.client);\n    }\n  }\n\n  _releaseConnection(conn) {\n    switch (this.clientType) {\n      case 'pool':\n        return conn.release();\n      case 'sequelize':\n        return this.client.connectionManager.releaseConnection(conn);\n      case 'knex':\n        return this.client.client.releaseConnection(conn);\n      default:\n        return true;\n    }\n  }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   * @private\n   */\n  _createDbAndTable() {\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(`CREATE DATABASE IF NOT EXISTS \\`${this.dbName}\\`;`, (errDb) => {\n            if (errDb) {\n              this._releaseConnection(conn);\n              return reject(errDb);\n            }\n            conn.query(this._getCreateTableStmt(), (err) => {\n              if (err) {\n                this._releaseConnection(conn);\n                return reject(err);\n              }\n              this._releaseConnection(conn);\n              resolve();\n            });\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _getCreateTableStmt() {\n    return `CREATE TABLE IF NOT EXISTS \\`${this.dbName}\\`.\\`${this.tableName}\\` (` +\n      '`key` VARCHAR(255) CHARACTER SET utf8 NOT NULL,' +\n      '`points` INT(9) NOT NULL default 0,' +\n      '`expire` BIGINT UNSIGNED,' +\n      'PRIMARY KEY (`key`)' +\n      ') ENGINE = INNODB;';\n  }\n\n  get clientType() {\n    return this._clientType;\n  }\n\n  set clientType(value) {\n    if (typeof value === 'undefined') {\n      if (this.client.constructor.name === 'Connection') {\n        value = 'connection';\n      } else if (this.client.constructor.name === 'Pool') {\n        value = 'pool';\n      } else if (this.client.constructor.name === 'Sequelize') {\n        value = 'sequelize';\n      } else {\n        throw new Error('storeType is not defined');\n      }\n    }\n    this._clientType = value.toLowerCase();\n  }\n\n  get dbName() {\n    return this._dbName;\n  }\n\n  set dbName(value) {\n    this._dbName = typeof value === 'undefined' ? 'rtlmtrflx' : value;\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get tableCreated() {\n    return this._tableCreated\n  }\n\n  set tableCreated(value) {\n    this._tableCreated = typeof value === 'undefined' ? false : !!value;\n  }\n\n  get clearExpiredByTimeout() {\n    return this._clearExpiredByTimeout;\n  }\n\n  set clearExpiredByTimeout(value) {\n    this._clearExpiredByTimeout = typeof value === 'undefined' ? true : Boolean(value);\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    const [row] = result;\n\n    res.isFirstInDuration = changedPoints === row.points;\n    res.consumedPoints = res.isFirstInDuration ? changedPoints : row.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = row.expire\n      ? Math.max(row.expire - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _upsertTransaction(conn, key, points, msDuration, forceExpire) {\n    return new Promise((resolve, reject) => {\n      conn.query('BEGIN', (errBegin) => {\n        if (errBegin) {\n          conn.rollback();\n\n          return reject(errBegin);\n        }\n\n        const dateNow = Date.now();\n        const newExpire = msDuration > 0 ? dateNow + msDuration : null;\n\n        let q;\n        let values;\n        if (forceExpire) {\n          q = `INSERT INTO ??.?? VALUES (?, ?, ?)\n          ON DUPLICATE KEY UPDATE \n            points = ?, \n            expire = ?;`;\n          values = [\n            this.dbName, this.tableName, key, points, newExpire,\n            points,\n            newExpire,\n          ];\n        } else {\n          q = `INSERT INTO ??.?? VALUES (?, ?, ?)\n          ON DUPLICATE KEY UPDATE \n            points = IF(expire <= ?, ?, points + (?)), \n            expire = IF(expire <= ?, ?, expire);`;\n          values = [\n            this.dbName, this.tableName, key, points, newExpire,\n            dateNow, points, points,\n            dateNow, newExpire,\n          ];\n        }\n\n        conn.query(q, values, (errUpsert) => {\n          if (errUpsert) {\n            conn.rollback();\n\n            return reject(errUpsert);\n          }\n          conn.query('SELECT points, expire FROM ??.?? WHERE `key` = ?;', [this.dbName, this.tableName, key], (errSelect, res) => {\n            if (errSelect) {\n              conn.rollback();\n\n              return reject(errSelect);\n            }\n\n            conn.query('COMMIT', (err) => {\n              if (err) {\n                conn.rollback();\n\n                return reject(err);\n              }\n\n              resolve(res);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          this._upsertTransaction(conn, key, points, msDuration, forceExpire)\n            .then((res) => {\n              resolve(res);\n              this._releaseConnection(conn);\n            })\n            .catch((err) => {\n              reject(err);\n              this._releaseConnection(conn);\n            });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _get(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(\n            'SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)',\n            [this.dbName, this.tableName, rlKey, Date.now()],\n            (err, res) => {\n              if (err) {\n                reject(err);\n              } else if (res.length === 0) {\n                resolve(null);\n              } else {\n                resolve(res);\n              }\n\n              this._releaseConnection(conn);\n            } // eslint-disable-line\n          );\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _delete(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(\n            'DELETE FROM ??.?? WHERE `key` = ?',\n            [this.dbName, this.tableName, rlKey],\n            (err, res) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(res.affectedRows > 0);\n              }\n\n              this._releaseConnection(conn);\n            } // eslint-disable-line\n          );\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nmodule.exports = RateLimiterMySQL;\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterPostgres extends RateLimiterStoreAbstract {\n  /**\n   * @callback callback\n   * @param {Object} err\n   *\n   * @param {Object} opts\n   * @param {callback} cb\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: postgresClient,\n   *   storeType: 'knex', // required only for Knex instance\n   *   tableName: 'string',\n   * }\n   */\n  constructor(opts, cb = null) {\n    super(opts);\n\n    this.client = opts.storeClient;\n    this.clientType = opts.storeType;\n\n    this.tableName = opts.tableName;\n\n    this.clearExpiredByTimeout = opts.clearExpiredByTimeout;\n\n    this.tableCreated = opts.tableCreated;\n    if (!this.tableCreated) {\n      this._createTable()\n        .then(() => {\n          this.tableCreated = true;\n          if (this.clearExpiredByTimeout) {\n            this._clearExpiredHourAgo();\n          }\n          if (typeof cb === 'function') {\n            cb();\n          }\n        })\n        .catch((err) => {\n          if (typeof cb === 'function') {\n            cb(err);\n          } else {\n            throw err;\n          }\n        });\n    } else {\n      if (typeof cb === 'function') {\n        cb();\n      }\n    }\n  }\n\n  clearExpired(expire) {\n    return new Promise((resolve) => {\n      const q = {\n        name: 'rlflx-clear-expired',\n        text: `DELETE FROM ${this.tableName} WHERE expire < $1`,\n        values: [expire],\n      };\n      this._query(q)\n        .then(() => {\n          resolve();\n        })\n        .catch(() => {\n          // Deleting expired query is not critical\n          resolve();\n        });\n    });\n  }\n\n  /**\n   * Delete all rows expired 1 hour ago once per 5 minutes\n   *\n   * @private\n   */\n  _clearExpiredHourAgo() {\n    if (this._clearExpiredTimeoutId) {\n      clearTimeout(this._clearExpiredTimeoutId);\n    }\n    this._clearExpiredTimeoutId = setTimeout(() => {\n      this.clearExpired(Date.now() - 3600000) // Never rejected\n        .then(() => {\n          this._clearExpiredHourAgo();\n        });\n    }, 300000);\n    this._clearExpiredTimeoutId.unref();\n  }\n\n  /**\n   *\n   * @return Promise<any>\n   * @private\n   */\n  _getConnection() {\n    switch (this.clientType) {\n      case 'pool':\n        return Promise.resolve(this.client);\n      case 'sequelize':\n        return this.client.connectionManager.getConnection();\n      case 'knex':\n        return this.client.client.acquireConnection();\n      case 'typeorm':\n        return Promise.resolve(this.client.driver.master);\n      default:\n        return Promise.resolve(this.client);\n    }\n  }\n\n  _releaseConnection(conn) {\n    switch (this.clientType) {\n      case 'pool':\n        return true;\n      case 'sequelize':\n        return this.client.connectionManager.releaseConnection(conn);\n      case 'knex':\n        return this.client.client.releaseConnection(conn);\n      case 'typeorm':\n        return true;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   * @private\n   */\n  _createTable() {\n    return new Promise((resolve, reject) => {\n      this._query({\n        text: this._getCreateTableStmt(),\n      })\n        .then(() => {\n          resolve();\n        })\n        .catch((err) => {\n          if (err.code === '23505') {\n            // Error: duplicate key value violates unique constraint \"pg_type_typname_nsp_index\"\n            // Postgres doesn't handle concurrent table creation\n            // It is supposed, that table is created by another worker\n            resolve();\n          } else {\n            reject(err);\n          }\n        });\n    });\n  }\n\n  _getCreateTableStmt() {\n    return `CREATE TABLE IF NOT EXISTS ${this.tableName} ( \n      key varchar(255) PRIMARY KEY,\n      points integer NOT NULL DEFAULT 0,\n      expire bigint\n    );`;\n  }\n\n  get clientType() {\n    return this._clientType;\n  }\n\n  set clientType(value) {\n    const constructorName = this.client.constructor.name;\n\n    if (typeof value === 'undefined') {\n      if (constructorName === 'Client') {\n        value = 'client';\n      } else if (\n        constructorName === 'Pool' ||\n        constructorName === 'BoundPool'\n      ) {\n        value = 'pool';\n      } else if (constructorName === 'Sequelize') {\n        value = 'sequelize';\n      } else {\n        throw new Error('storeType is not defined');\n      }\n    }\n\n    this._clientType = value.toLowerCase();\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get tableCreated() {\n    return this._tableCreated\n  }\n\n  set tableCreated(value) {\n    this._tableCreated = typeof value === 'undefined' ? false : !!value;\n  }\n\n  get clearExpiredByTimeout() {\n    return this._clearExpiredByTimeout;\n  }\n\n  set clearExpiredByTimeout(value) {\n    this._clearExpiredByTimeout = typeof value === 'undefined' ? true : Boolean(value);\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    const row = result.rows[0];\n\n    res.isFirstInDuration = changedPoints === row.points;\n    res.consumedPoints = res.isFirstInDuration ? changedPoints : row.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = row.expire\n      ? Math.max(row.expire - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _query(q) {\n    const prefix = this.tableName.toLowerCase();\n    const queryObj = { name: `${prefix}:${q.name}`, text: q.text, values: q.values };\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(queryObj)\n            .then((res) => {\n              resolve(res);\n              this._releaseConnection(conn);\n            })\n            .catch((err) => {\n              reject(err);\n              this._releaseConnection(conn);\n            });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    const newExpire = msDuration > 0 ? Date.now() + msDuration : null;\n    const expireQ = forceExpire\n      ? ' $3 '\n      : ` CASE\n             WHEN ${this.tableName}.expire <= $4 THEN $3\n             ELSE ${this.tableName}.expire\n            END `;\n\n    return this._query({\n      name: forceExpire ? 'rlflx-upsert-force' : 'rlflx-upsert',\n      text: `\n            INSERT INTO ${this.tableName} VALUES ($1, $2, $3)\n              ON CONFLICT(key) DO UPDATE SET\n                points = CASE\n                          WHEN (${this.tableName}.expire <= $4 OR 1=${forceExpire ? 1 : 0}) THEN $2\n                          ELSE ${this.tableName}.points + ($2)\n                         END,\n                expire = ${expireQ}\n            RETURNING points, expire;`,\n      values: [key, points, newExpire, Date.now()],\n    });\n  }\n\n  _get(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._query({\n        name: 'rlflx-get',\n        text: `\n            SELECT points, expire FROM ${this.tableName} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,\n        values: [rlKey, Date.now()],\n      })\n        .then((res) => {\n          if (res.rowCount === 0) {\n            res = null;\n          }\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _delete(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return this._query({\n      name: 'rlflx-delete',\n      text: `DELETE FROM ${this.tableName} WHERE key = $1`,\n      values: [rlKey],\n    })\n      .then(res => res.rowCount > 0);\n  }\n}\n\nmodule.exports = RateLimiterPostgres;\n","const RateLimiterQueueError = require('./component/RateLimiterQueueError')\nconst MAX_QUEUE_SIZE = 4294967295;\nconst KEY_DEFAULT = 'limiter';\n\nmodule.exports = class RateLimiterQueue {\n  constructor(limiterFlexible, opts = {\n    maxQueueSize: MAX_QUEUE_SIZE,\n  }) {\n    this._queueLimiters = {\n      KEY_DEFAULT: new RateLimiterQueueInternal(limiterFlexible, opts)\n    };\n    this._limiterFlexible = limiterFlexible;\n    this._maxQueueSize = opts.maxQueueSize\n  }\n\n  getTokensRemaining(key = KEY_DEFAULT) {\n    if (this._queueLimiters[key]) {\n      return this._queueLimiters[key].getTokensRemaining()\n    } else {\n      return Promise.resolve(this._limiterFlexible.points)\n    }\n  }\n\n  removeTokens(tokens, key = KEY_DEFAULT) {\n    if (!this._queueLimiters[key]) {\n      this._queueLimiters[key] = new RateLimiterQueueInternal(\n        this._limiterFlexible, {\n          key,\n          maxQueueSize: this._maxQueueSize,\n        })\n    }\n\n    return this._queueLimiters[key].removeTokens(tokens)\n  }\n};\n\nclass RateLimiterQueueInternal {\n\n  constructor(limiterFlexible, opts = {\n    maxQueueSize: MAX_QUEUE_SIZE,\n    key: KEY_DEFAULT,\n  }) {\n    this._key = opts.key;\n    this._waitTimeout = null;\n    this._queue = [];\n    this._limiterFlexible = limiterFlexible;\n\n    this._maxQueueSize = opts.maxQueueSize\n  }\n\n  getTokensRemaining() {\n    return this._limiterFlexible.get(this._key)\n      .then((rlRes) => {\n        return rlRes !== null ? rlRes.remainingPoints : this._limiterFlexible.points;\n      })\n  }\n\n  removeTokens(tokens) {\n    const _this = this;\n\n    return new Promise((resolve, reject) => {\n      if (tokens > _this._limiterFlexible.points) {\n        reject(new RateLimiterQueueError(`Requested tokens ${tokens} exceeds maximum ${_this._limiterFlexible.points} tokens per interval`));\n        return\n      }\n\n      if (_this._queue.length > 0) {\n        _this._queueRequest.call(_this, resolve, reject, tokens);\n      } else {\n        _this._limiterFlexible.consume(_this._key, tokens)\n          .then((res) => {\n            resolve(res.remainingPoints);\n          })\n          .catch((rej) => {\n            if (rej instanceof Error) {\n              reject(rej);\n            } else {\n              _this._queueRequest.call(_this, resolve, reject, tokens);\n              if (_this._waitTimeout === null) {\n                _this._waitTimeout = setTimeout(_this._processFIFO.bind(_this), rej.msBeforeNext);\n              }\n            }\n          });\n      }\n    })\n  }\n\n  _queueRequest(resolve, reject, tokens) {\n    const _this = this;\n    if (_this._queue.length < _this._maxQueueSize) {\n      _this._queue.push({resolve, reject, tokens});\n    } else {\n      reject(new RateLimiterQueueError(`Number of requests reached it's maximum ${_this._maxQueueSize}`))\n    }\n  }\n\n  _processFIFO() {\n    const _this = this;\n\n    if (_this._waitTimeout !== null) {\n      clearTimeout(_this._waitTimeout);\n      _this._waitTimeout = null;\n    }\n\n    if (_this._queue.length === 0) {\n      return;\n    }\n\n    const item = _this._queue.shift();\n    _this._limiterFlexible.consume(_this._key, item.tokens)\n      .then((res) => {\n        item.resolve(res.remainingPoints);\n        _this._processFIFO.call(_this);\n      })\n      .catch((rej) => {\n        if (rej instanceof Error) {\n          item.reject(rej);\n          _this._processFIFO.call(_this);\n        } else {\n          _this._queue.unshift(item);\n          if (_this._waitTimeout === null) {\n            _this._waitTimeout = setTimeout(_this._processFIFO.bind(_this), rej.msBeforeNext);\n          }\n        }\n      });\n  }\n}\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nconst incrTtlLuaScript = `redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') \\\nlocal consumed = redis.call('incrby', KEYS[1], ARGV[1]) \\\nlocal ttl = redis.call('pttl', KEYS[1]) \\\nif ttl == -1 then \\\n  redis.call('expire', KEYS[1], ARGV[2]) \\\n  ttl = 1000 * ARGV[2] \\\nend \\\nreturn {consumed, ttl} \\\n`;\n\nclass RateLimiterRedis extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   redis: RedisClient\n   *   rejectIfRedisNotReady: boolean = false - reject / invoke insuranceLimiter immediately when redis connection is not \"ready\"\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n    this.client = opts.storeClient;\n\n    this._rejectIfRedisNotReady = !!opts.rejectIfRedisNotReady;\n\n    this.useRedisPackage = opts.useRedisPackage;\n    this.useRedis3AndLowerPackage = opts.useRedis3AndLowerPackage;\n    if (typeof this.client.defineCommand === 'function') {\n      this.client.defineCommand(\"rlflxIncr\", {\n        numberOfKeys: 1,\n        lua: incrTtlLuaScript,\n      });\n    }\n  }\n\n  /**\n   * Prevent actual redis call if redis connection is not ready\n   * Because of different connection state checks for ioredis and node-redis, only this clients would be actually checked.\n   * For any other clients all the requests would be passed directly to redis client\n   * @return {boolean}\n   * @private\n   */\n  _isRedisReady() {\n    if (!this._rejectIfRedisNotReady) {\n      return true;\n    }\n    // ioredis client\n    if (this.client.status && this.client.status !== 'ready') {\n      return false;\n    }\n    // node-redis client\n    if (typeof this.client.isReady === 'function' && !this.client.isReady()) {\n      return false;\n    }\n    return true;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    let [consumed, resTtlMs] = result;\n    // Support ioredis results format\n    if (Array.isArray(consumed)) {\n      [, consumed] = consumed;\n      [, resTtlMs] = resTtlMs;\n    }\n\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(consumed);\n    res.isFirstInDuration = res.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = resTtlMs;\n\n    return res;\n  }\n\n  async _upsert(rlKey, points, msDuration, forceExpire = false) {\n    if (!this._isRedisReady()) {\n      throw new Error('Redis connection is not ready');\n    }\n\n    const secDuration = Math.floor(msDuration / 1000);\n    const multi = this.client.multi();\n\n    if (forceExpire) {\n      if (secDuration > 0) {\n        if(!this.useRedisPackage && !this.useRedis3AndLowerPackage){\n          multi.set(rlKey, points, \"EX\", secDuration);\n        }else{\n          multi.set(rlKey, points, { EX: secDuration });\n        }\n      } else {\n        multi.set(rlKey, points);\n      }\n\n      if(!this.useRedisPackage && !this.useRedis3AndLowerPackage){\n        return multi.pttl(rlKey).exec(true);\n      }\n      return multi.pTTL(rlKey).exec(true);\n    }\n\n    if (secDuration > 0) {\n      if(!this.useRedisPackage && !this.useRedis3AndLowerPackage){\n        return this.client.rlflxIncr(\n          [rlKey].concat([String(points), String(secDuration)]));\n      }\n      if (this.useRedis3AndLowerPackage) {\n        return new Promise((resolve, reject) => {\n          const incrCallback = function (err, result) {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve(result);\n          };\n\n          if (typeof this.client.rlflxIncr === 'function') {\n            this.client.rlflxIncr(rlKey, points, secDuration, incrCallback);\n          } else {\n            this.client.eval(incrTtlLuaScript, 1, rlKey, points, secDuration, incrCallback);\n          }\n        });\n      } else {\n        return this.client.eval(incrTtlLuaScript, {\n          keys: [rlKey],\n          arguments: [String(points), String(secDuration)],\n        });\n      }\n    } else {\n      if(!this.useRedisPackage && !this.useRedis3AndLowerPackage){\n        return multi.incrby(rlKey, points).pttl(rlKey).exec(true);\n      }\n\n      return multi.incrBy(rlKey, points).pTTL(rlKey).exec(true);\n    }\n  }\n\n  async _get(rlKey) {\n    if (!this._isRedisReady()) {\n      throw new Error('Redis connection is not ready');\n    }\n    if(!this.useRedisPackage && !this.useRedis3AndLowerPackage){\n      return this.client\n        .multi()\n        .get(rlKey)\n        .pttl(rlKey)\n        .exec()\n        .then((result) => {\n          const [[,points]] = result;\n          if (points === null) return null;\n          return result;\n        });\n    }\n\n    return this.client\n      .multi()\n      .get(rlKey)\n      .pTTL(rlKey)\n      .exec(true)\n      .then((result) => {\n        const [points] = result;\n        if (points === null) return null;\n        return result;\n      });\n  }\n\n  _delete(rlKey) {\n    return this.client\n      .del(rlKey)\n      .then(result => result > 0);\n  }\n}\n\nmodule.exports = RateLimiterRedis;\n","module.exports = class RateLimiterRes {\n  constructor(remainingPoints, msBeforeNext, consumedPoints, isFirstInDuration) {\n    this.remainingPoints = typeof remainingPoints === 'undefined' ? 0 : remainingPoints; // Remaining points in current duration\n    this.msBeforeNext = typeof msBeforeNext === 'undefined' ? 0 : msBeforeNext; // Milliseconds before next action\n    this.consumedPoints = typeof consumedPoints === 'undefined' ? 0 : consumedPoints; // Consumed points in current duration\n    this.isFirstInDuration = typeof isFirstInDuration === 'undefined' ? false : isFirstInDuration;\n  }\n\n  get msBeforeNext() {\n    return this._msBeforeNext;\n  }\n\n  set msBeforeNext(ms) {\n    this._msBeforeNext = ms;\n    return this;\n  }\n\n  get remainingPoints() {\n    return this._remainingPoints;\n  }\n\n  set remainingPoints(p) {\n    this._remainingPoints = p;\n    return this;\n  }\n\n  get consumedPoints() {\n    return this._consumedPoints;\n  }\n\n  set consumedPoints(p) {\n    this._consumedPoints = p;\n    return this;\n  }\n\n  get isFirstInDuration() {\n    return this._isFirstInDuration;\n  }\n\n  set isFirstInDuration(value) {\n    this._isFirstInDuration = Boolean(value);\n  }\n\n  _getDecoratedProperties() {\n    return {\n      remainingPoints: this.remainingPoints,\n      msBeforeNext: this.msBeforeNext,\n      consumedPoints: this.consumedPoints,\n      isFirstInDuration: this.isFirstInDuration,\n    };\n  }\n\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    return this._getDecoratedProperties();\n  }\n\n  toString() {\n    return JSON.stringify(this._getDecoratedProperties());\n  }\n\n  toJSON() {\n    return this._getDecoratedProperties();\n  }\n};\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\nconst BlockedKeys = require('./component/BlockedKeys');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RateLimiterStoreAbstract extends RateLimiterAbstract {\n  /**\n   *\n   * @param opts Object Defaults {\n   *   ... see other in RateLimiterAbstract\n   *\n   *   inMemoryBlockOnConsumed: 40, // Number of points when key is blocked\n   *   inMemoryBlockDuration: 10, // Block duration in seconds\n   *   insuranceLimiter: RateLimiterAbstract\n   * }\n   */\n  constructor(opts = {}) {\n    super(opts);\n\n    this.inMemoryBlockOnConsumed = opts.inMemoryBlockOnConsumed;\n    this.inMemoryBlockDuration = opts.inMemoryBlockDuration;\n    this.insuranceLimiter = opts.insuranceLimiter;\n    this._inMemoryBlockedKeys = new BlockedKeys();\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  set client(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('storeClient is not set');\n    }\n    this._client = value;\n  }\n\n  /**\n   * Have to be launched after consume\n   * It blocks key and execute evenly depending on result from store\n   *\n   * It uses _getRateLimiterRes function to prepare RateLimiterRes from store result\n   *\n   * @param resolve\n   * @param reject\n   * @param rlKey\n   * @param changedPoints\n   * @param storeResult\n   * @param {Object} options\n   * @private\n   */\n  _afterConsume(resolve, reject, rlKey, changedPoints, storeResult, options = {}) {\n    const res = this._getRateLimiterRes(rlKey, changedPoints, storeResult);\n\n    if (this.inMemoryBlockOnConsumed > 0 && !(this.inMemoryBlockDuration > 0)\n      && res.consumedPoints >= this.inMemoryBlockOnConsumed\n    ) {\n      this._inMemoryBlockedKeys.addMs(rlKey, res.msBeforeNext);\n      if (res.consumedPoints > this.points) {\n        return reject(res);\n      } else {\n        return resolve(res)\n      }\n    } else if (res.consumedPoints > this.points) {\n      let blockPromise = Promise.resolve();\n      // Block only first time when consumed more than points\n      if (this.blockDuration > 0 && res.consumedPoints <= (this.points + changedPoints)) {\n        res.msBeforeNext = this.msBlockDuration;\n        blockPromise = this._block(rlKey, res.consumedPoints, this.msBlockDuration, options);\n      }\n\n      if (this.inMemoryBlockOnConsumed > 0 && res.consumedPoints >= this.inMemoryBlockOnConsumed) {\n        // Block key for this.inMemoryBlockDuration seconds\n        this._inMemoryBlockedKeys.add(rlKey, this.inMemoryBlockDuration);\n        res.msBeforeNext = this.msInMemoryBlockDuration;\n      }\n\n      blockPromise\n        .then(() => {\n          reject(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    } else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n      let delay = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2));\n      if (delay < this.execEvenlyMinDelayMs) {\n        delay = res.consumedPoints * this.execEvenlyMinDelayMs;\n      }\n\n      setTimeout(resolve, delay, res);\n    } else {\n      resolve(res);\n    }\n  }\n\n  _handleError(err, funcName, resolve, reject, key, data = false, options = {}) {\n    if (!(this.insuranceLimiter instanceof RateLimiterAbstract)) {\n      reject(err);\n    } else {\n      this.insuranceLimiter[funcName](key, data, options)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((res) => {\n          reject(res);\n        });\n    }\n  }\n\n  getInMemoryBlockMsBeforeExpire(rlKey) {\n    if (this.inMemoryBlockOnConsumed > 0) {\n      return this._inMemoryBlockedKeys.msBeforeExpire(rlKey);\n    }\n\n    return 0;\n  }\n\n  get inMemoryBlockOnConsumed() {\n    return this._inMemoryBlockOnConsumed;\n  }\n\n  set inMemoryBlockOnConsumed(value) {\n    this._inMemoryBlockOnConsumed = value ? parseInt(value) : 0;\n    if (this.inMemoryBlockOnConsumed > 0 && this.points > this.inMemoryBlockOnConsumed) {\n      throw new Error('inMemoryBlockOnConsumed option must be greater or equal \"points\" option');\n    }\n  }\n\n  get inMemoryBlockDuration() {\n    return this._inMemoryBlockDuration;\n  }\n\n  set inMemoryBlockDuration(value) {\n    this._inMemoryBlockDuration = value ? parseInt(value) : 0;\n    if (this.inMemoryBlockDuration > 0 && this.inMemoryBlockOnConsumed === 0) {\n      throw new Error('inMemoryBlockOnConsumed option must be set up');\n    }\n  }\n\n  get msInMemoryBlockDuration() {\n    return this._inMemoryBlockDuration * 1000;\n  }\n\n  get insuranceLimiter() {\n    return this._insuranceLimiter;\n  }\n\n  set insuranceLimiter(value) {\n    if (typeof value !== 'undefined' && !(value instanceof RateLimiterAbstract)) {\n      throw new Error('insuranceLimiter must be instance of RateLimiterAbstract');\n    }\n    this._insuranceLimiter = value;\n    if (this._insuranceLimiter) {\n      this._insuranceLimiter.blockDuration = this.blockDuration;\n      this._insuranceLimiter.execEvenly = this.execEvenly;\n    }\n  }\n\n  /**\n   * Block any key for secDuration seconds\n   *\n   * @param key\n   * @param secDuration\n   * @param {Object} options\n   *\n   * @return Promise<RateLimiterRes>\n   */\n  block(key, secDuration, options = {}) {\n    const msDuration = secDuration * 1000;\n    return this._block(this.getKey(key), this.points + 1, msDuration, options);\n  }\n\n  /**\n   * Set points by key for any duration\n   *\n   * @param key\n   * @param points\n   * @param secDuration\n   * @param {Object} options\n   *\n   * @return Promise<RateLimiterRes>\n   */\n  set(key, points, secDuration, options = {}) {\n    const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n    return this._block(this.getKey(key), points, msDuration, options);\n  }\n\n  /**\n   *\n   * @param key\n   * @param pointsToConsume\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const rlKey = this.getKey(key);\n\n      const inMemoryBlockMsBeforeExpire = this.getInMemoryBlockMsBeforeExpire(rlKey);\n      if (inMemoryBlockMsBeforeExpire > 0) {\n        return reject(new RateLimiterRes(0, inMemoryBlockMsBeforeExpire));\n      }\n\n      this._upsert(rlKey, pointsToConsume, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          this._afterConsume(resolve, reject, rlKey, pointsToConsume, res);\n        })\n        .catch((err) => {\n          this._handleError(err, 'consume', resolve, reject, key, pointsToConsume, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param points\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  penalty(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, points, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          resolve(this._getRateLimiterRes(rlKey, points, res));\n        })\n        .catch((err) => {\n          this._handleError(err, 'penalty', resolve, reject, key, points, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param points\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  reward(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, -points, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          resolve(this._getRateLimiterRes(rlKey, -points, res));\n        })\n        .catch((err) => {\n          this._handleError(err, 'reward', resolve, reject, key, points, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>|null\n   */\n  get(key, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._get(rlKey, options)\n        .then((res) => {\n          if (res === null || typeof res === 'undefined') {\n            resolve(null);\n          } else {\n            resolve(this._getRateLimiterRes(rlKey, 0, res));\n          }\n        })\n        .catch((err) => {\n          this._handleError(err, 'get', resolve, reject, key, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param {Object} options\n   * @returns Promise<boolean>\n   */\n  delete(key, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._delete(rlKey, options)\n        .then((res) => {\n          this._inMemoryBlockedKeys.delete(rlKey);\n          resolve(res);\n        })\n        .catch((err) => {\n          this._handleError(err, 'delete', resolve, reject, key, options);\n        });\n    });\n  }\n\n  /**\n   * Cleanup keys no-matter expired or not.\n   */\n  deleteInMemoryBlockedAll() {\n    this._inMemoryBlockedKeys.delete();\n  }\n\n  /**\n   * Get RateLimiterRes object filled depending on storeResult, which specific for exact store\n   *\n   * @param rlKey\n   * @param changedPoints\n   * @param storeResult\n   * @private\n   */\n  _getRateLimiterRes(rlKey, changedPoints, storeResult) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_getRateLimiterRes'!\");\n  }\n\n  /**\n   * Block key for this.msBlockDuration milliseconds\n   * Usually, it just prolongs lifetime of key\n   *\n   * @param rlKey\n   * @param initPoints\n   * @param msDuration\n   * @param {Object} options\n   *\n   * @return Promise<any>\n   */\n  _block(rlKey, initPoints, msDuration, options = {}) {\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, initPoints, msDuration, true, options)\n        .then(() => {\n          resolve(new RateLimiterRes(0, msDuration > 0 ? msDuration : -1, initPoints));\n        })\n        .catch((err) => {\n          this._handleError(err, 'block', resolve, reject, this.parseKey(rlKey), msDuration / 1000, options);\n        });\n    });\n  }\n\n  /**\n   * Have to be implemented in every limiter\n   * Resolve with raw result from Store OR null if rlKey is not set\n   * or Reject with error\n   *\n   * @param rlKey\n   * @param {Object} options\n   * @private\n   *\n   * @return Promise<any>\n   */\n  _get(rlKey, options = {}) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_get'!\");\n  }\n\n  /**\n   * Have to be implemented\n   * Resolve with true OR false if rlKey doesn't exist\n   * or Reject with error\n   *\n   * @param rlKey\n   * @param {Object} options\n   * @private\n   *\n   * @return Promise<any>\n   */\n  _delete(rlKey, options = {}) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_delete'!\");\n  }\n\n  /**\n   * Have to be implemented\n   * Resolve with object used for {@link _getRateLimiterRes} to generate {@link RateLimiterRes}\n   *\n   * @param {string} rlKey\n   * @param {number} points\n   * @param {number} msDuration\n   * @param {boolean} forceExpire\n   * @param {Object} options\n   * @abstract\n   *\n   * @return Promise<Object>\n   */\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    throw new Error(\"You have to implement the method '_upsert'!\");\n  }\n};\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\n\nmodule.exports = class RateLimiterUnion {\n  constructor(...limiters) {\n    if (limiters.length < 1) {\n      throw new Error('RateLimiterUnion: at least one limiter have to be passed');\n    }\n    limiters.forEach((limiter) => {\n      if (!(limiter instanceof RateLimiterAbstract)) {\n        throw new Error('RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract');\n      }\n    });\n\n    this._limiters = limiters;\n  }\n\n  consume(key, points = 1) {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      this._limiters.forEach((limiter) => {\n        promises.push(limiter.consume(key, points).catch(rej => ({ rejected: true, rej })));\n      });\n\n      Promise.all(promises)\n        .then((res) => {\n          const resObj = {};\n          let rejected = false;\n\n          res.forEach((item) => {\n            if (item.rejected === true) {\n              rejected = true;\n            }\n          });\n\n          for (let i = 0; i < res.length; i++) {\n            if (rejected && res[i].rejected === true) {\n              resObj[this._limiters[i].keyPrefix] = res[i].rej;\n            } else if (!rejected) {\n              resObj[this._limiters[i].keyPrefix] = res[i];\n            }\n          }\n\n          if (rejected) {\n            reject(resObj);\n          } else {\n            resolve(resObj);\n          }\n        });\n    });\n  }\n};\n","module.exports = class BlockedKeys {\n  constructor() {\n    this._keys = {}; // {'key': 1526279430331}\n    this._addedKeysAmount = 0;\n  }\n\n  collectExpired() {\n    const now = Date.now();\n\n    Object.keys(this._keys).forEach((key) => {\n      if (this._keys[key] <= now) {\n        delete this._keys[key];\n      }\n    });\n\n    this._addedKeysAmount = Object.keys(this._keys).length;\n  }\n\n  /**\n   * Add new blocked key\n   *\n   * @param key String\n   * @param sec Number\n   */\n  add(key, sec) {\n    this.addMs(key, sec * 1000);\n  }\n\n  /**\n   * Add new blocked key for ms\n   *\n   * @param key String\n   * @param ms Number\n   */\n  addMs(key, ms) {\n    this._keys[key] = Date.now() + ms;\n    this._addedKeysAmount++;\n    if (this._addedKeysAmount > 999) {\n      this.collectExpired();\n    }\n  }\n\n  /**\n   * 0 means not blocked\n   *\n   * @param key\n   * @returns {number}\n   */\n  msBeforeExpire(key) {\n    const expire = this._keys[key];\n\n    if (expire && expire >= Date.now()) {\n      this.collectExpired();\n      const now = Date.now();\n      return expire >= now ? expire - now : 0;\n    }\n\n    return 0;\n  }\n\n  /**\n   * If key is not given, delete all data in memory\n   * \n   * @param {string|undefined} key\n   */\n  delete(key) {\n    if (key) {\n      delete this._keys[key];\n    } else {\n      Object.keys(this._keys).forEach((key) => {\n        delete this._keys[key];\n      });\n    }\n  }\n};\n","const BlockedKeys = require('./BlockedKeys');\n\nmodule.exports = BlockedKeys;\n","const Record = require('./Record');\nconst RateLimiterRes = require('../../RateLimiterRes');\n\nmodule.exports = class MemoryStorage {\n  constructor() {\n    /**\n     * @type {Object.<string, Record>}\n     * @private\n     */\n    this._storage = {};\n  }\n\n  incrby(key, value, durationSec) {\n    if (this._storage[key]) {\n      const msBeforeExpires = this._storage[key].expiresAt\n        ? this._storage[key].expiresAt.getTime() - new Date().getTime()\n        : -1;\n      if (msBeforeExpires !== 0) {\n        // Change value\n        this._storage[key].value = this._storage[key].value + value;\n\n        return new RateLimiterRes(0, msBeforeExpires, this._storage[key].value, false);\n      }\n\n      return this.set(key, value, durationSec);\n    }\n    return this.set(key, value, durationSec);\n  }\n\n  set(key, value, durationSec) {\n    const durationMs = durationSec * 1000;\n\n    if (this._storage[key] && this._storage[key].timeoutId) {\n      clearTimeout(this._storage[key].timeoutId);\n    }\n\n    this._storage[key] = new Record(\n      value,\n      durationMs > 0 ? new Date(Date.now() + durationMs) : null\n    );\n    if (durationMs > 0) {\n      this._storage[key].timeoutId = setTimeout(() => {\n        delete this._storage[key];\n      }, durationMs);\n      if (this._storage[key].timeoutId.unref) {\n        this._storage[key].timeoutId.unref();\n      }\n    }\n\n    return new RateLimiterRes(0, durationMs === 0 ? -1 : durationMs, this._storage[key].value, true);\n  }\n\n  /**\n   *\n   * @param key\n   * @returns {*}\n   */\n  get(key) {\n    if (this._storage[key]) {\n      const msBeforeExpires = this._storage[key].expiresAt\n        ? this._storage[key].expiresAt.getTime() - new Date().getTime()\n        : -1;\n      return new RateLimiterRes(0, msBeforeExpires, this._storage[key].value, false);\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param key\n   * @returns {boolean}\n   */\n  delete(key) {\n    if (this._storage[key]) {\n      if (this._storage[key].timeoutId) {\n        clearTimeout(this._storage[key].timeoutId);\n      }\n      delete this._storage[key];\n      return true;\n    }\n    return false;\n  }\n};\n","module.exports = class Record {\n  /**\n   *\n   * @param value int\n   * @param expiresAt Date|int\n   * @param timeoutId\n   */\n  constructor(value, expiresAt, timeoutId = null) {\n    this.value = value;\n    this.expiresAt = expiresAt;\n    this.timeoutId = timeoutId;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = parseInt(value);\n  }\n\n  get expiresAt() {\n    return this._expiresAt;\n  }\n\n  set expiresAt(value) {\n    if (!(value instanceof Date) && Number.isInteger(value)) {\n      value = new Date(value);\n    }\n    this._expiresAt = value;\n  }\n\n  get timeoutId() {\n    return this._timeoutId;\n  }\n\n  set timeoutId(value) {\n    this._timeoutId = value;\n  }\n};\n","module.exports = class RateLimiterQueueError extends Error {\n  constructor(message, extra) {\n    super();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.name = 'CustomError';\n    this.message = message;\n    if (extra) {\n      this.extra = extra;\n    }\n  }\n};\n","// @ts-nocheck\n/*eslint-disable*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n\n})(this, function($protobuf) {\n    \"use strict\";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n    $root.RPC = (function() {\n\n        /**\n         * Properties of a RPC.\n         * @exports IRPC\n         * @interface IRPC\n         * @property {Array.<RPC.ISubOpts>|null} [subscriptions] RPC subscriptions\n         * @property {Array.<RPC.IMessage>|null} [messages] RPC messages\n         * @property {RPC.IControlMessage|null} [control] RPC control\n         */\n\n        /**\n         * Constructs a new RPC.\n         * @exports RPC\n         * @classdesc Represents a RPC.\n         * @implements IRPC\n         * @constructor\n         * @param {IRPC=} [p] Properties to set\n         */\n        function RPC(p) {\n            this.subscriptions = [];\n            this.messages = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RPC subscriptions.\n         * @member {Array.<RPC.ISubOpts>} subscriptions\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.subscriptions = $util.emptyArray;\n\n        /**\n         * RPC messages.\n         * @member {Array.<RPC.IMessage>} messages\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.messages = $util.emptyArray;\n\n        /**\n         * RPC control.\n         * @member {RPC.IControlMessage|null|undefined} control\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.control = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * RPC _control.\n         * @member {\"control\"|undefined} _control\n         * @memberof RPC\n         * @instance\n         */\n        Object.defineProperty(RPC.prototype, \"_control\", {\n            get: $util.oneOfGetter($oneOfFields = [\"control\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified RPC message. Does not implicitly {@link RPC.verify|verify} messages.\n         * @function encode\n         * @memberof RPC\n         * @static\n         * @param {IRPC} m RPC message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RPC.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.subscriptions != null && m.subscriptions.length) {\n                for (var i = 0; i < m.subscriptions.length; ++i)\n                    $root.RPC.SubOpts.encode(m.subscriptions[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.messages != null && m.messages.length) {\n                for (var i = 0; i < m.messages.length; ++i)\n                    $root.RPC.Message.encode(m.messages[i], w.uint32(18).fork()).ldelim();\n            }\n            if (m.control != null && Object.hasOwnProperty.call(m, \"control\"))\n                $root.RPC.ControlMessage.encode(m.control, w.uint32(26).fork()).ldelim();\n            return w;\n        };\n\n        /**\n         * Decodes a RPC message from the specified reader or buffer.\n         * @function decode\n         * @memberof RPC\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {RPC} RPC\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RPC.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.subscriptions && m.subscriptions.length))\n                        m.subscriptions = [];\n                    m.subscriptions.push($root.RPC.SubOpts.decode(r, r.uint32()));\n                    break;\n                case 2:\n                    if (!(m.messages && m.messages.length))\n                        m.messages = [];\n                    m.messages.push($root.RPC.Message.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    m.control = $root.RPC.ControlMessage.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a RPC message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof RPC\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {RPC} RPC\n         */\n        RPC.fromObject = function fromObject(d) {\n            if (d instanceof $root.RPC)\n                return d;\n            var m = new $root.RPC();\n            if (d.subscriptions) {\n                if (!Array.isArray(d.subscriptions))\n                    throw TypeError(\".RPC.subscriptions: array expected\");\n                m.subscriptions = [];\n                for (var i = 0; i < d.subscriptions.length; ++i) {\n                    if (typeof d.subscriptions[i] !== \"object\")\n                        throw TypeError(\".RPC.subscriptions: object expected\");\n                    m.subscriptions[i] = $root.RPC.SubOpts.fromObject(d.subscriptions[i]);\n                }\n            }\n            if (d.messages) {\n                if (!Array.isArray(d.messages))\n                    throw TypeError(\".RPC.messages: array expected\");\n                m.messages = [];\n                for (var i = 0; i < d.messages.length; ++i) {\n                    if (typeof d.messages[i] !== \"object\")\n                        throw TypeError(\".RPC.messages: object expected\");\n                    m.messages[i] = $root.RPC.Message.fromObject(d.messages[i]);\n                }\n            }\n            if (d.control != null) {\n                if (typeof d.control !== \"object\")\n                    throw TypeError(\".RPC.control: object expected\");\n                m.control = $root.RPC.ControlMessage.fromObject(d.control);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a RPC message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof RPC\n         * @static\n         * @param {RPC} m RPC\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RPC.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.subscriptions = [];\n                d.messages = [];\n            }\n            if (m.subscriptions && m.subscriptions.length) {\n                d.subscriptions = [];\n                for (var j = 0; j < m.subscriptions.length; ++j) {\n                    d.subscriptions[j] = $root.RPC.SubOpts.toObject(m.subscriptions[j], o);\n                }\n            }\n            if (m.messages && m.messages.length) {\n                d.messages = [];\n                for (var j = 0; j < m.messages.length; ++j) {\n                    d.messages[j] = $root.RPC.Message.toObject(m.messages[j], o);\n                }\n            }\n            if (m.control != null && m.hasOwnProperty(\"control\")) {\n                d.control = $root.RPC.ControlMessage.toObject(m.control, o);\n                if (o.oneofs)\n                    d._control = \"control\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this RPC to JSON.\n         * @function toJSON\n         * @memberof RPC\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RPC.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        RPC.SubOpts = (function() {\n\n            /**\n             * Properties of a SubOpts.\n             * @memberof RPC\n             * @interface ISubOpts\n             * @property {boolean|null} [subscribe] SubOpts subscribe\n             * @property {string|null} [topic] SubOpts topic\n             */\n\n            /**\n             * Constructs a new SubOpts.\n             * @memberof RPC\n             * @classdesc Represents a SubOpts.\n             * @implements ISubOpts\n             * @constructor\n             * @param {RPC.ISubOpts=} [p] Properties to set\n             */\n            function SubOpts(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * SubOpts subscribe.\n             * @member {boolean|null|undefined} subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.subscribe = null;\n\n            /**\n             * SubOpts topic.\n             * @member {string|null|undefined} topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.topic = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * SubOpts _subscribe.\n             * @member {\"subscribe\"|undefined} _subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_subscribe\", {\n                get: $util.oneOfGetter($oneOfFields = [\"subscribe\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * SubOpts _topic.\n             * @member {\"topic\"|undefined} _topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_topic\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topic\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified SubOpts message. Does not implicitly {@link RPC.SubOpts.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.ISubOpts} m SubOpts message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SubOpts.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.subscribe != null && Object.hasOwnProperty.call(m, \"subscribe\"))\n                    w.uint32(8).bool(m.subscribe);\n                if (m.topic != null && Object.hasOwnProperty.call(m, \"topic\"))\n                    w.uint32(18).string(m.topic);\n                return w;\n            };\n\n            /**\n             * Decodes a SubOpts message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.SubOpts} SubOpts\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SubOpts.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.SubOpts();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.subscribe = r.bool();\n                        break;\n                    case 2:\n                        m.topic = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a SubOpts message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.SubOpts} SubOpts\n             */\n            SubOpts.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.SubOpts)\n                    return d;\n                var m = new $root.RPC.SubOpts();\n                if (d.subscribe != null) {\n                    m.subscribe = Boolean(d.subscribe);\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a SubOpts message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.SubOpts} m SubOpts\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SubOpts.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.subscribe != null && m.hasOwnProperty(\"subscribe\")) {\n                    d.subscribe = m.subscribe;\n                    if (o.oneofs)\n                        d._subscribe = \"subscribe\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                    if (o.oneofs)\n                        d._topic = \"topic\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this SubOpts to JSON.\n             * @function toJSON\n             * @memberof RPC.SubOpts\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SubOpts.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SubOpts;\n        })();\n\n        RPC.Message = (function() {\n\n            /**\n             * Properties of a Message.\n             * @memberof RPC\n             * @interface IMessage\n             * @property {Uint8Array|null} [from] Message from\n             * @property {Uint8Array|null} [data] Message data\n             * @property {Uint8Array|null} [seqno] Message seqno\n             * @property {string} topic Message topic\n             * @property {Uint8Array|null} [signature] Message signature\n             * @property {Uint8Array|null} [key] Message key\n             */\n\n            /**\n             * Constructs a new Message.\n             * @memberof RPC\n             * @classdesc Represents a Message.\n             * @implements IMessage\n             * @constructor\n             * @param {RPC.IMessage=} [p] Properties to set\n             */\n            function Message(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Message from.\n             * @member {Uint8Array|null|undefined} from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.from = null;\n\n            /**\n             * Message data.\n             * @member {Uint8Array|null|undefined} data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.data = null;\n\n            /**\n             * Message seqno.\n             * @member {Uint8Array|null|undefined} seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.seqno = null;\n\n            /**\n             * Message topic.\n             * @member {string} topic\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.topic = \"\";\n\n            /**\n             * Message signature.\n             * @member {Uint8Array|null|undefined} signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.signature = null;\n\n            /**\n             * Message key.\n             * @member {Uint8Array|null|undefined} key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.key = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Message _from.\n             * @member {\"from\"|undefined} _from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_from\", {\n                get: $util.oneOfGetter($oneOfFields = [\"from\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _data.\n             * @member {\"data\"|undefined} _data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_data\", {\n                get: $util.oneOfGetter($oneOfFields = [\"data\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _seqno.\n             * @member {\"seqno\"|undefined} _seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_seqno\", {\n                get: $util.oneOfGetter($oneOfFields = [\"seqno\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _signature.\n             * @member {\"signature\"|undefined} _signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_signature\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signature\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _key.\n             * @member {\"key\"|undefined} _key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_key\", {\n                get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified Message message. Does not implicitly {@link RPC.Message.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.IMessage} m Message message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Message.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.from != null && Object.hasOwnProperty.call(m, \"from\"))\n                    w.uint32(10).bytes(m.from);\n                if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                    w.uint32(18).bytes(m.data);\n                if (m.seqno != null && Object.hasOwnProperty.call(m, \"seqno\"))\n                    w.uint32(26).bytes(m.seqno);\n                w.uint32(34).string(m.topic);\n                if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n                    w.uint32(42).bytes(m.signature);\n                if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n                    w.uint32(50).bytes(m.key);\n                return w;\n            };\n\n            /**\n             * Decodes a Message message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.Message\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.Message} Message\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Message.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.Message();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.from = r.bytes();\n                        break;\n                    case 2:\n                        m.data = r.bytes();\n                        break;\n                    case 3:\n                        m.seqno = r.bytes();\n                        break;\n                    case 4:\n                        m.topic = r.string();\n                        break;\n                    case 5:\n                        m.signature = r.bytes();\n                        break;\n                    case 6:\n                        m.key = r.bytes();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                if (!m.hasOwnProperty(\"topic\"))\n                    throw $util.ProtocolError(\"missing required 'topic'\", { instance: m });\n                return m;\n            };\n\n            /**\n             * Creates a Message message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.Message\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.Message} Message\n             */\n            Message.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.Message)\n                    return d;\n                var m = new $root.RPC.Message();\n                if (d.from != null) {\n                    if (typeof d.from === \"string\")\n                        $util.base64.decode(d.from, m.from = $util.newBuffer($util.base64.length(d.from)), 0);\n                    else if (d.from.length)\n                        m.from = d.from;\n                }\n                if (d.data != null) {\n                    if (typeof d.data === \"string\")\n                        $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n                    else if (d.data.length)\n                        m.data = d.data;\n                }\n                if (d.seqno != null) {\n                    if (typeof d.seqno === \"string\")\n                        $util.base64.decode(d.seqno, m.seqno = $util.newBuffer($util.base64.length(d.seqno)), 0);\n                    else if (d.seqno.length)\n                        m.seqno = d.seqno;\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                if (d.signature != null) {\n                    if (typeof d.signature === \"string\")\n                        $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n                    else if (d.signature.length)\n                        m.signature = d.signature;\n                }\n                if (d.key != null) {\n                    if (typeof d.key === \"string\")\n                        $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);\n                    else if (d.key.length)\n                        m.key = d.key;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a Message message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.Message} m Message\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Message.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.topic = \"\";\n                }\n                if (m.from != null && m.hasOwnProperty(\"from\")) {\n                    d.from = o.bytes === String ? $util.base64.encode(m.from, 0, m.from.length) : o.bytes === Array ? Array.prototype.slice.call(m.from) : m.from;\n                    if (o.oneofs)\n                        d._from = \"from\";\n                }\n                if (m.data != null && m.hasOwnProperty(\"data\")) {\n                    d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n                    if (o.oneofs)\n                        d._data = \"data\";\n                }\n                if (m.seqno != null && m.hasOwnProperty(\"seqno\")) {\n                    d.seqno = o.bytes === String ? $util.base64.encode(m.seqno, 0, m.seqno.length) : o.bytes === Array ? Array.prototype.slice.call(m.seqno) : m.seqno;\n                    if (o.oneofs)\n                        d._seqno = \"seqno\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                }\n                if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n                    d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n                    if (o.oneofs)\n                        d._signature = \"signature\";\n                }\n                if (m.key != null && m.hasOwnProperty(\"key\")) {\n                    d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n                    if (o.oneofs)\n                        d._key = \"key\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Message to JSON.\n             * @function toJSON\n             * @memberof RPC.Message\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Message.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Message;\n        })();\n\n        RPC.ControlMessage = (function() {\n\n            /**\n             * Properties of a ControlMessage.\n             * @memberof RPC\n             * @interface IControlMessage\n             * @property {Array.<RPC.IControlIHave>|null} [ihave] ControlMessage ihave\n             * @property {Array.<RPC.IControlIWant>|null} [iwant] ControlMessage iwant\n             * @property {Array.<RPC.IControlGraft>|null} [graft] ControlMessage graft\n             * @property {Array.<RPC.IControlPrune>|null} [prune] ControlMessage prune\n             */\n\n            /**\n             * Constructs a new ControlMessage.\n             * @memberof RPC\n             * @classdesc Represents a ControlMessage.\n             * @implements IControlMessage\n             * @constructor\n             * @param {RPC.IControlMessage=} [p] Properties to set\n             */\n            function ControlMessage(p) {\n                this.ihave = [];\n                this.iwant = [];\n                this.graft = [];\n                this.prune = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlMessage ihave.\n             * @member {Array.<RPC.IControlIHave>} ihave\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.ihave = $util.emptyArray;\n\n            /**\n             * ControlMessage iwant.\n             * @member {Array.<RPC.IControlIWant>} iwant\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.iwant = $util.emptyArray;\n\n            /**\n             * ControlMessage graft.\n             * @member {Array.<RPC.IControlGraft>} graft\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.graft = $util.emptyArray;\n\n            /**\n             * ControlMessage prune.\n             * @member {Array.<RPC.IControlPrune>} prune\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.prune = $util.emptyArray;\n\n            /**\n             * Encodes the specified ControlMessage message. Does not implicitly {@link RPC.ControlMessage.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.IControlMessage} m ControlMessage message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlMessage.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.ihave != null && m.ihave.length) {\n                    for (var i = 0; i < m.ihave.length; ++i)\n                        $root.RPC.ControlIHave.encode(m.ihave[i], w.uint32(10).fork()).ldelim();\n                }\n                if (m.iwant != null && m.iwant.length) {\n                    for (var i = 0; i < m.iwant.length; ++i)\n                        $root.RPC.ControlIWant.encode(m.iwant[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.graft != null && m.graft.length) {\n                    for (var i = 0; i < m.graft.length; ++i)\n                        $root.RPC.ControlGraft.encode(m.graft[i], w.uint32(26).fork()).ldelim();\n                }\n                if (m.prune != null && m.prune.length) {\n                    for (var i = 0; i < m.prune.length; ++i)\n                        $root.RPC.ControlPrune.encode(m.prune[i], w.uint32(34).fork()).ldelim();\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlMessage message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlMessage} ControlMessage\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlMessage.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlMessage();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.ihave && m.ihave.length))\n                            m.ihave = [];\n                        m.ihave.push($root.RPC.ControlIHave.decode(r, r.uint32()));\n                        break;\n                    case 2:\n                        if (!(m.iwant && m.iwant.length))\n                            m.iwant = [];\n                        m.iwant.push($root.RPC.ControlIWant.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        if (!(m.graft && m.graft.length))\n                            m.graft = [];\n                        m.graft.push($root.RPC.ControlGraft.decode(r, r.uint32()));\n                        break;\n                    case 4:\n                        if (!(m.prune && m.prune.length))\n                            m.prune = [];\n                        m.prune.push($root.RPC.ControlPrune.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlMessage message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlMessage} ControlMessage\n             */\n            ControlMessage.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlMessage)\n                    return d;\n                var m = new $root.RPC.ControlMessage();\n                if (d.ihave) {\n                    if (!Array.isArray(d.ihave))\n                        throw TypeError(\".RPC.ControlMessage.ihave: array expected\");\n                    m.ihave = [];\n                    for (var i = 0; i < d.ihave.length; ++i) {\n                        if (typeof d.ihave[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.ihave: object expected\");\n                        m.ihave[i] = $root.RPC.ControlIHave.fromObject(d.ihave[i]);\n                    }\n                }\n                if (d.iwant) {\n                    if (!Array.isArray(d.iwant))\n                        throw TypeError(\".RPC.ControlMessage.iwant: array expected\");\n                    m.iwant = [];\n                    for (var i = 0; i < d.iwant.length; ++i) {\n                        if (typeof d.iwant[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.iwant: object expected\");\n                        m.iwant[i] = $root.RPC.ControlIWant.fromObject(d.iwant[i]);\n                    }\n                }\n                if (d.graft) {\n                    if (!Array.isArray(d.graft))\n                        throw TypeError(\".RPC.ControlMessage.graft: array expected\");\n                    m.graft = [];\n                    for (var i = 0; i < d.graft.length; ++i) {\n                        if (typeof d.graft[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.graft: object expected\");\n                        m.graft[i] = $root.RPC.ControlGraft.fromObject(d.graft[i]);\n                    }\n                }\n                if (d.prune) {\n                    if (!Array.isArray(d.prune))\n                        throw TypeError(\".RPC.ControlMessage.prune: array expected\");\n                    m.prune = [];\n                    for (var i = 0; i < d.prune.length; ++i) {\n                        if (typeof d.prune[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.prune: object expected\");\n                        m.prune[i] = $root.RPC.ControlPrune.fromObject(d.prune[i]);\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlMessage message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.ControlMessage} m ControlMessage\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlMessage.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.ihave = [];\n                    d.iwant = [];\n                    d.graft = [];\n                    d.prune = [];\n                }\n                if (m.ihave && m.ihave.length) {\n                    d.ihave = [];\n                    for (var j = 0; j < m.ihave.length; ++j) {\n                        d.ihave[j] = $root.RPC.ControlIHave.toObject(m.ihave[j], o);\n                    }\n                }\n                if (m.iwant && m.iwant.length) {\n                    d.iwant = [];\n                    for (var j = 0; j < m.iwant.length; ++j) {\n                        d.iwant[j] = $root.RPC.ControlIWant.toObject(m.iwant[j], o);\n                    }\n                }\n                if (m.graft && m.graft.length) {\n                    d.graft = [];\n                    for (var j = 0; j < m.graft.length; ++j) {\n                        d.graft[j] = $root.RPC.ControlGraft.toObject(m.graft[j], o);\n                    }\n                }\n                if (m.prune && m.prune.length) {\n                    d.prune = [];\n                    for (var j = 0; j < m.prune.length; ++j) {\n                        d.prune[j] = $root.RPC.ControlPrune.toObject(m.prune[j], o);\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlMessage to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlMessage\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlMessage.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlMessage;\n        })();\n\n        RPC.ControlIHave = (function() {\n\n            /**\n             * Properties of a ControlIHave.\n             * @memberof RPC\n             * @interface IControlIHave\n             * @property {string|null} [topicID] ControlIHave topicID\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIHave messageIDs\n             */\n\n            /**\n             * Constructs a new ControlIHave.\n             * @memberof RPC\n             * @classdesc Represents a ControlIHave.\n             * @implements IControlIHave\n             * @constructor\n             * @param {RPC.IControlIHave=} [p] Properties to set\n             */\n            function ControlIHave(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlIHave topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.topicID = null;\n\n            /**\n             * ControlIHave messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.messageIDs = $util.emptyArray;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlIHave _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            Object.defineProperty(ControlIHave.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlIHave message. Does not implicitly {@link RPC.ControlIHave.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.IControlIHave} m ControlIHave message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIHave.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(18).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlIHave message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIHave} ControlIHave\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIHave.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIHave();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    case 2:\n                        if (!(m.messageIDs && m.messageIDs.length))\n                            m.messageIDs = [];\n                        m.messageIDs.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlIHave message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIHave} ControlIHave\n             */\n            ControlIHave.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIHave)\n                    return d;\n                var m = new $root.RPC.ControlIHave();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIHave.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlIHave message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.ControlIHave} m ControlIHave\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIHave.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlIHave to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIHave\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIHave.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlIHave;\n        })();\n\n        RPC.ControlIWant = (function() {\n\n            /**\n             * Properties of a ControlIWant.\n             * @memberof RPC\n             * @interface IControlIWant\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIWant messageIDs\n             */\n\n            /**\n             * Constructs a new ControlIWant.\n             * @memberof RPC\n             * @classdesc Represents a ControlIWant.\n             * @implements IControlIWant\n             * @constructor\n             * @param {RPC.IControlIWant=} [p] Properties to set\n             */\n            function ControlIWant(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlIWant messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIWant\n             * @instance\n             */\n            ControlIWant.prototype.messageIDs = $util.emptyArray;\n\n            /**\n             * Encodes the specified ControlIWant message. Does not implicitly {@link RPC.ControlIWant.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.IControlIWant} m ControlIWant message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIWant.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(10).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlIWant message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIWant} ControlIWant\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIWant.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIWant();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.messageIDs && m.messageIDs.length))\n                            m.messageIDs = [];\n                        m.messageIDs.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlIWant message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIWant} ControlIWant\n             */\n            ControlIWant.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIWant)\n                    return d;\n                var m = new $root.RPC.ControlIWant();\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIWant.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlIWant message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.ControlIWant} m ControlIWant\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIWant.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlIWant to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIWant\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIWant.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlIWant;\n        })();\n\n        RPC.ControlGraft = (function() {\n\n            /**\n             * Properties of a ControlGraft.\n             * @memberof RPC\n             * @interface IControlGraft\n             * @property {string|null} [topicID] ControlGraft topicID\n             */\n\n            /**\n             * Constructs a new ControlGraft.\n             * @memberof RPC\n             * @classdesc Represents a ControlGraft.\n             * @implements IControlGraft\n             * @constructor\n             * @param {RPC.IControlGraft=} [p] Properties to set\n             */\n            function ControlGraft(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlGraft topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            ControlGraft.prototype.topicID = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlGraft _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            Object.defineProperty(ControlGraft.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlGraft message. Does not implicitly {@link RPC.ControlGraft.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.IControlGraft} m ControlGraft message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlGraft.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                return w;\n            };\n\n            /**\n             * Decodes a ControlGraft message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlGraft} ControlGraft\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlGraft.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlGraft();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlGraft message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlGraft} ControlGraft\n             */\n            ControlGraft.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlGraft)\n                    return d;\n                var m = new $root.RPC.ControlGraft();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlGraft message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.ControlGraft} m ControlGraft\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlGraft.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlGraft to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlGraft\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlGraft.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlGraft;\n        })();\n\n        RPC.ControlPrune = (function() {\n\n            /**\n             * Properties of a ControlPrune.\n             * @memberof RPC\n             * @interface IControlPrune\n             * @property {string|null} [topicID] ControlPrune topicID\n             * @property {Array.<RPC.IPeerInfo>|null} [peers] ControlPrune peers\n             * @property {number|null} [backoff] ControlPrune backoff\n             */\n\n            /**\n             * Constructs a new ControlPrune.\n             * @memberof RPC\n             * @classdesc Represents a ControlPrune.\n             * @implements IControlPrune\n             * @constructor\n             * @param {RPC.IControlPrune=} [p] Properties to set\n             */\n            function ControlPrune(p) {\n                this.peers = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlPrune topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.topicID = null;\n\n            /**\n             * ControlPrune peers.\n             * @member {Array.<RPC.IPeerInfo>} peers\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.peers = $util.emptyArray;\n\n            /**\n             * ControlPrune backoff.\n             * @member {number|null|undefined} backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.backoff = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlPrune _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * ControlPrune _backoff.\n             * @member {\"backoff\"|undefined} _backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_backoff\", {\n                get: $util.oneOfGetter($oneOfFields = [\"backoff\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlPrune message. Does not implicitly {@link RPC.ControlPrune.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.IControlPrune} m ControlPrune message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlPrune.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.peers != null && m.peers.length) {\n                    for (var i = 0; i < m.peers.length; ++i)\n                        $root.RPC.PeerInfo.encode(m.peers[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.backoff != null && Object.hasOwnProperty.call(m, \"backoff\"))\n                    w.uint32(24).uint64(m.backoff);\n                return w;\n            };\n\n            /**\n             * Decodes a ControlPrune message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlPrune} ControlPrune\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlPrune.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlPrune();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    case 2:\n                        if (!(m.peers && m.peers.length))\n                            m.peers = [];\n                        m.peers.push($root.RPC.PeerInfo.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        m.backoff = r.uint64();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlPrune message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlPrune} ControlPrune\n             */\n            ControlPrune.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlPrune)\n                    return d;\n                var m = new $root.RPC.ControlPrune();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.peers) {\n                    if (!Array.isArray(d.peers))\n                        throw TypeError(\".RPC.ControlPrune.peers: array expected\");\n                    m.peers = [];\n                    for (var i = 0; i < d.peers.length; ++i) {\n                        if (typeof d.peers[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlPrune.peers: object expected\");\n                        m.peers[i] = $root.RPC.PeerInfo.fromObject(d.peers[i]);\n                    }\n                }\n                if (d.backoff != null) {\n                    if ($util.Long)\n                        (m.backoff = $util.Long.fromValue(d.backoff)).unsigned = true;\n                    else if (typeof d.backoff === \"string\")\n                        m.backoff = parseInt(d.backoff, 10);\n                    else if (typeof d.backoff === \"number\")\n                        m.backoff = d.backoff;\n                    else if (typeof d.backoff === \"object\")\n                        m.backoff = new $util.LongBits(d.backoff.low >>> 0, d.backoff.high >>> 0).toNumber(true);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlPrune message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.ControlPrune} m ControlPrune\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlPrune.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.peers = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.peers && m.peers.length) {\n                    d.peers = [];\n                    for (var j = 0; j < m.peers.length; ++j) {\n                        d.peers[j] = $root.RPC.PeerInfo.toObject(m.peers[j], o);\n                    }\n                }\n                if (m.backoff != null && m.hasOwnProperty(\"backoff\")) {\n                    if (typeof m.backoff === \"number\")\n                        d.backoff = o.longs === String ? String(m.backoff) : m.backoff;\n                    else\n                        d.backoff = o.longs === String ? $util.Long.prototype.toString.call(m.backoff) : o.longs === Number ? new $util.LongBits(m.backoff.low >>> 0, m.backoff.high >>> 0).toNumber(true) : m.backoff;\n                    if (o.oneofs)\n                        d._backoff = \"backoff\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlPrune to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlPrune\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlPrune.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlPrune;\n        })();\n\n        RPC.PeerInfo = (function() {\n\n            /**\n             * Properties of a PeerInfo.\n             * @memberof RPC\n             * @interface IPeerInfo\n             * @property {Uint8Array|null} [peerID] PeerInfo peerID\n             * @property {Uint8Array|null} [signedPeerRecord] PeerInfo signedPeerRecord\n             */\n\n            /**\n             * Constructs a new PeerInfo.\n             * @memberof RPC\n             * @classdesc Represents a PeerInfo.\n             * @implements IPeerInfo\n             * @constructor\n             * @param {RPC.IPeerInfo=} [p] Properties to set\n             */\n            function PeerInfo(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * PeerInfo peerID.\n             * @member {Uint8Array|null|undefined} peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.peerID = null;\n\n            /**\n             * PeerInfo signedPeerRecord.\n             * @member {Uint8Array|null|undefined} signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.signedPeerRecord = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * PeerInfo _peerID.\n             * @member {\"peerID\"|undefined} _peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_peerID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"peerID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * PeerInfo _signedPeerRecord.\n             * @member {\"signedPeerRecord\"|undefined} _signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_signedPeerRecord\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signedPeerRecord\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified PeerInfo message. Does not implicitly {@link RPC.PeerInfo.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.IPeerInfo} m PeerInfo message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            PeerInfo.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.peerID != null && Object.hasOwnProperty.call(m, \"peerID\"))\n                    w.uint32(10).bytes(m.peerID);\n                if (m.signedPeerRecord != null && Object.hasOwnProperty.call(m, \"signedPeerRecord\"))\n                    w.uint32(18).bytes(m.signedPeerRecord);\n                return w;\n            };\n\n            /**\n             * Decodes a PeerInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.PeerInfo} PeerInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            PeerInfo.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.PeerInfo();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.peerID = r.bytes();\n                        break;\n                    case 2:\n                        m.signedPeerRecord = r.bytes();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.PeerInfo} PeerInfo\n             */\n            PeerInfo.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.PeerInfo)\n                    return d;\n                var m = new $root.RPC.PeerInfo();\n                if (d.peerID != null) {\n                    if (typeof d.peerID === \"string\")\n                        $util.base64.decode(d.peerID, m.peerID = $util.newBuffer($util.base64.length(d.peerID)), 0);\n                    else if (d.peerID.length)\n                        m.peerID = d.peerID;\n                }\n                if (d.signedPeerRecord != null) {\n                    if (typeof d.signedPeerRecord === \"string\")\n                        $util.base64.decode(d.signedPeerRecord, m.signedPeerRecord = $util.newBuffer($util.base64.length(d.signedPeerRecord)), 0);\n                    else if (d.signedPeerRecord.length)\n                        m.signedPeerRecord = d.signedPeerRecord;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.PeerInfo} m PeerInfo\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            PeerInfo.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.peerID != null && m.hasOwnProperty(\"peerID\")) {\n                    d.peerID = o.bytes === String ? $util.base64.encode(m.peerID, 0, m.peerID.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerID) : m.peerID;\n                    if (o.oneofs)\n                        d._peerID = \"peerID\";\n                }\n                if (m.signedPeerRecord != null && m.hasOwnProperty(\"signedPeerRecord\")) {\n                    d.signedPeerRecord = o.bytes === String ? $util.base64.encode(m.signedPeerRecord, 0, m.signedPeerRecord.length) : o.bytes === Array ? Array.prototype.slice.call(m.signedPeerRecord) : m.signedPeerRecord;\n                    if (o.oneofs)\n                        d._signedPeerRecord = \"signedPeerRecord\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this PeerInfo to JSON.\n             * @function toJSON\n             * @memberof RPC.PeerInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            PeerInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return PeerInfo;\n        })();\n\n        return RPC;\n    })();\n\n    return $root;\n});\n","import { maybe } from \"../globals/index.js\";\nexport var canUseWeakMap = typeof WeakMap === \"function\" &&\n    !maybe(function () { return navigator.product == \"ReactNative\" && !global.HermesInternal; });\nexport var canUseWeakSet = typeof WeakSet === \"function\";\nexport var canUseSymbol = typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\nexport var canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\nexport var canUseDOM = typeof maybe(function () { return window.document.createElement; }) === \"function\";\nvar usingJSDOM = \n// Following advice found in this comment from @domenic (maintainer of jsdom):\n// https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n//\n// Since we control the version of Jest and jsdom used when running Apollo\n// Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n// at the end of the user agent string, I believe this case is all we need to\n// check. Testing for \"Node.js\" was recommended for backwards compatibility\n// with older version of jsdom, but we don't have that problem.\nmaybe(function () { return navigator.userAgent.indexOf(\"jsdom\") >= 0; }) || false;\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport var canUseLayoutEffect = canUseDOM && !usingJSDOM;\n//# sourceMappingURL=canUse.js.map","export function maybe(thunk) {\n    try {\n        return thunk();\n    }\n    catch (_a) { }\n}\n//# sourceMappingURL=maybe.js.map","import { parseIP, parseIPv4, parseIPv6 } from \"./parse.js\";\n/** Check if `input` is IPv4. */\nexport function isIPv4(input) {\n    return Boolean(parseIPv4(input));\n}\n/** Check if `input` is IPv6. */\nexport function isIPv6(input) {\n    return Boolean(parseIPv6(input));\n}\n/** Check if `input` is IPv4 or IPv6. */\nexport function isIP(input) {\n    return Boolean(parseIP(input));\n}\n/**\n * @returns `6` if `input` is IPv6, `4` if `input` is IPv4, or `undefined` if `input` is neither.\n */\nexport function ipVersion(input) {\n    if (isIPv4(input)) {\n        return 4;\n    }\n    else if (isIPv6(input)) {\n        return 6;\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=is-ip.js.map","import { Parser } from \"./parser.js\";\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\nconst parser = new Parser();\n/** Parse `input` into IPv4 bytes. */\nexport function parseIPv4(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n/** Parse `input` into IPv6 bytes. */\nexport function parseIPv6(input) {\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n/** Parse `input` into IPv4 or IPv6 bytes. */\nexport function parseIP(input) {\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPAddr());\n}\n//# sourceMappingURL=parse.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\nexport class Parser {\n    index = 0;\n    input = \"\";\n    new(input) {\n        this.index = 0;\n        this.input = input;\n        return this;\n    }\n    /** Run a parser, and restore the pre-parse state if it fails. */\n    readAtomically(fn) {\n        const index = this.index;\n        const result = fn();\n        if (result === undefined) {\n            this.index = index;\n        }\n        return result;\n    }\n    /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n    parseWith(fn) {\n        const result = fn();\n        if (this.index !== this.input.length) {\n            return undefined;\n        }\n        return result;\n    }\n    /** Peek the next character from the input */\n    peekChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index];\n    }\n    /** Read the next character from the input */\n    readChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index++];\n    }\n    /** Read the next character from the input if it matches the target. */\n    readGivenChar(target) {\n        return this.readAtomically(() => {\n            const char = this.readChar();\n            if (char !== target) {\n                return undefined;\n            }\n            return char;\n        });\n    }\n    /**\n     * Helper for reading separators in an indexed loop. Reads the separator\n     * character iff index > 0, then runs the parser. When used in a loop,\n     * the separator character will only be read on index > 0 (see\n     * readIPv4Addr for an example)\n     */\n    readSeparator(sep, index, inner) {\n        return this.readAtomically(() => {\n            if (index > 0) {\n                if (this.readGivenChar(sep) === undefined) {\n                    return undefined;\n                }\n            }\n            return inner();\n        });\n    }\n    /**\n     * Read a number off the front of the input in the given radix, stopping\n     * at the first non-digit character or eof. Fails if the number has more\n     * digits than max_digits or if there is no number.\n     */\n    readNumber(radix, maxDigits, allowZeroPrefix, maxBytes) {\n        return this.readAtomically(() => {\n            let result = 0;\n            let digitCount = 0;\n            const leadingChar = this.peekChar();\n            if (leadingChar === undefined) {\n                return undefined;\n            }\n            const hasLeadingZero = leadingChar === \"0\";\n            const maxValue = 2 ** (8 * maxBytes) - 1;\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const digit = this.readAtomically(() => {\n                    const char = this.readChar();\n                    if (char === undefined) {\n                        return undefined;\n                    }\n                    const num = Number.parseInt(char, radix);\n                    if (Number.isNaN(num)) {\n                        return undefined;\n                    }\n                    return num;\n                });\n                if (digit === undefined) {\n                    break;\n                }\n                result *= radix;\n                result += digit;\n                if (result > maxValue) {\n                    return undefined;\n                }\n                digitCount += 1;\n                if (maxDigits !== undefined) {\n                    if (digitCount > maxDigits) {\n                        return undefined;\n                    }\n                }\n            }\n            if (digitCount === 0) {\n                return undefined;\n            }\n            else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n                return undefined;\n            }\n            else {\n                return result;\n            }\n        });\n    }\n    /** Read an IPv4 address. */\n    readIPv4Addr() {\n        return this.readAtomically(() => {\n            const out = new Uint8Array(4);\n            for (let i = 0; i < out.length; i++) {\n                const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n                if (ix === undefined) {\n                    return undefined;\n                }\n                out[i] = ix;\n            }\n            return out;\n        });\n    }\n    /** Read an IPv6 Address. */\n    readIPv6Addr() {\n        /**\n         * Read a chunk of an IPv6 address into `groups`. Returns the number\n         * of groups read, along with a bool indicating if an embedded\n         * trailing IPv4 address was read. Specifically, read a series of\n         * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n         * trailing embedded IPv4 address.\n         */\n        const readGroups = (groups) => {\n            for (let i = 0; i < groups.length / 2; i++) {\n                const ix = i * 2;\n                // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n                if (i < groups.length - 3) {\n                    const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n                    if (ipv4 !== undefined) {\n                        groups[ix] = ipv4[0];\n                        groups[ix + 1] = ipv4[1];\n                        groups[ix + 2] = ipv4[2];\n                        groups[ix + 3] = ipv4[3];\n                        return [ix + 4, true];\n                    }\n                }\n                const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n                if (group === undefined) {\n                    return [ix, false];\n                }\n                groups[ix] = group >> 8;\n                groups[ix + 1] = group & 255;\n            }\n            return [groups.length, false];\n        };\n        return this.readAtomically(() => {\n            // Read the front part of the address; either the whole thing, or up to the first ::\n            const head = new Uint8Array(16);\n            const [headSize, headIp4] = readGroups(head);\n            if (headSize === 16) {\n                return head;\n            }\n            // IPv4 part is not allowed before `::`\n            if (headIp4) {\n                return undefined;\n            }\n            // Read `::` if previous code parsed less than 8 groups.\n            // `::` indicates one or more groups of 16 bits of zeros.\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            // Read the back part of the address. The :: must contain at least one\n            // set of zeroes, so our max length is 7.\n            const tail = new Uint8Array(14);\n            const limit = 16 - (headSize + 2);\n            const [tailSize] = readGroups(tail.subarray(0, limit));\n            // Concat the head and tail of the IP address\n            head.set(tail.subarray(0, tailSize), 16 - tailSize);\n            return head;\n        });\n    }\n    /** Read an IP Address, either IPv4 or IPv6. */\n    readIPAddr() {\n        return this.readIPv4Addr() ?? this.readIPv6Addr();\n    }\n}\n//# sourceMappingURL=parser.js.map","import defer from 'p-defer';\n/**\n * A pair of streams where one drains from the other\n */\nexport function pair() {\n    const deferred = defer();\n    let piped = false;\n    return {\n        sink: async (source) => {\n            if (piped) {\n                throw new Error('already piped');\n            }\n            piped = true;\n            deferred.resolve(source);\n        },\n        source: (async function* () {\n            const source = await deferred.promise;\n            yield* source;\n        }())\n    };\n}\n//# sourceMappingURL=index.js.map","export const NOISE_MSG_MAX_LENGTH_BYTES = 65535;\nexport const NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = NOISE_MSG_MAX_LENGTH_BYTES - 16;\nexport const DUMP_SESSION_KEYS = Boolean(globalThis.process?.env?.DUMP_SESSION_KEYS);\n//# sourceMappingURL=constants.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash, ikm, salt) {\n    assertHash(hash);\n    // NOTE: some libraries treat zero-length array as 'not provided';\n    // we don't, since we have undefined as 'not provided'\n    // https://github.com/RustCrypto/KDFs/issues/15\n    if (salt === undefined)\n        salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n    return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = /* @__PURE__ */ new Uint8Array([0]);\nconst EMPTY_BUFFER = /* @__PURE__ */ new Uint8Array();\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash, prk, info, length = 32) {\n    assertHash(hash);\n    assertNumber(length);\n    if (length > 255 * hash.outputLen)\n        throw new Error('Length should be <= 255*HashLen');\n    const blocks = Math.ceil(length / hash.outputLen);\n    if (info === undefined)\n        info = EMPTY_BUFFER;\n    // first L(ength) octets of T\n    const okm = new Uint8Array(blocks * hash.outputLen);\n    // Re-use HMAC instance between blocks\n    const HMAC = hmac.create(hash, prk);\n    const HMACTmp = HMAC._cloneInto();\n    const T = new Uint8Array(HMAC.outputLen);\n    for (let counter = 0; counter < blocks; counter++) {\n        HKDF_COUNTER[0] = counter + 1;\n        // T(0) = empty string (zero length)\n        // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n        HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n            .update(info)\n            .update(HKDF_COUNTER)\n            .digestInto(T);\n        okm.set(T, hash.outputLen * counter);\n        HMAC._cloneInto(HMACTmp);\n    }\n    HMAC.destroy();\n    HMACTmp.destroy();\n    T.fill(0);\n    HKDF_COUNTER.fill(0);\n    return okm.slice(0, length);\n}\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (hash, ikm, salt, info, length) => expand(hash, extract(hash, ikm, salt), info, length);\n//# sourceMappingURL=hkdf.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { chacha20poly1305 } from '@noble/ciphers/chacha';\nimport { x25519 } from '@noble/curves/ed25519';\nimport { extract, expand } from '@noble/hashes/hkdf';\nimport { sha256 } from '@noble/hashes/sha256';\nexport const pureJsCrypto = {\n    hashSHA256(data) {\n        return sha256(data);\n    },\n    getHKDF(ck, ikm) {\n        const prk = extract(sha256, ikm, ck);\n        const okmU8Array = expand(sha256, prk, undefined, 96);\n        const okm = okmU8Array;\n        const k1 = okm.subarray(0, 32);\n        const k2 = okm.subarray(32, 64);\n        const k3 = okm.subarray(64, 96);\n        return [k1, k2, k3];\n    },\n    generateX25519KeyPair() {\n        const secretKey = x25519.utils.randomPrivateKey();\n        const publicKey = x25519.getPublicKey(secretKey);\n        return {\n            publicKey,\n            privateKey: secretKey\n        };\n    },\n    generateX25519KeyPairFromSeed(seed) {\n        const publicKey = x25519.getPublicKey(seed);\n        return {\n            publicKey,\n            privateKey: seed\n        };\n    },\n    generateX25519SharedKey(privateKey, publicKey) {\n        return x25519.getSharedSecret(privateKey, publicKey);\n    },\n    chaCha20Poly1305Encrypt(plaintext, nonce, ad, k) {\n        return chacha20poly1305(k, nonce, ad).encrypt(plaintext);\n    },\n    chaCha20Poly1305Decrypt(ciphertext, nonce, ad, k, dst) {\n        return chacha20poly1305(k, nonce, ad).decrypt(ciphertext, dst);\n    }\n};\n//# sourceMappingURL=js.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nconst allocUnsafe = (len) => {\n    if (globalThis.Buffer) {\n        return globalThis.Buffer.allocUnsafe(len);\n    }\n    return new Uint8Array(len);\n};\nexport const uint16BEEncode = (value) => {\n    const target = allocUnsafe(2);\n    new DataView(target.buffer, target.byteOffset, target.byteLength).setUint16(0, value, false);\n    return target;\n};\nuint16BEEncode.bytes = 2;\nexport const uint16BEDecode = (data) => {\n    if (data.length < 2)\n        throw RangeError('Could not decode int16BE');\n    if (data instanceof Uint8Array) {\n        return new DataView(data.buffer, data.byteOffset, data.byteLength).getUint16(0, false);\n    }\n    return data.getUint16(0);\n};\nuint16BEDecode.bytes = 2;\n// Note: IK and XX encoder usage is opposite (XX uses in stages encode0 where IK uses encode1)\nexport function encode0(message) {\n    return uint8ArrayConcat([message.ne, message.ciphertext], message.ne.length + message.ciphertext.length);\n}\nexport function encode1(message) {\n    return uint8ArrayConcat([message.ne, message.ns, message.ciphertext], message.ne.length + message.ns.length + message.ciphertext.length);\n}\nexport function encode2(message) {\n    return uint8ArrayConcat([message.ns, message.ciphertext], message.ns.length + message.ciphertext.length);\n}\nexport function decode0(input) {\n    if (input.length < 32) {\n        throw new Error('Cannot decode stage 0 MessageBuffer: length less than 32 bytes.');\n    }\n    return {\n        ne: input.subarray(0, 32),\n        ciphertext: input.subarray(32, input.length),\n        ns: new Uint8Array(0)\n    };\n}\nexport function decode1(input) {\n    if (input.length < 80) {\n        throw new Error('Cannot decode stage 1 MessageBuffer: length less than 80 bytes.');\n    }\n    return {\n        ne: input.subarray(0, 32),\n        ns: input.subarray(32, 80),\n        ciphertext: input.subarray(80, input.length)\n    };\n}\nexport function decode2(input) {\n    if (input.length < 48) {\n        throw new Error('Cannot decode stage 2 MessageBuffer: length less than 48 bytes.');\n    }\n    return {\n        ne: new Uint8Array(0),\n        ns: input.subarray(0, 48),\n        ciphertext: input.subarray(48, input.length)\n    };\n}\n//# sourceMappingURL=encoder.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","// @ts-check\n\nimport { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import { asUint8Array } from './util/as-uint8array.js';\nimport bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","import { ed25519 as ed } from '@noble/curves/ed25519';\nconst PUBLIC_KEY_BYTE_LENGTH = 32;\nconst PRIVATE_KEY_BYTE_LENGTH = 64; // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport async function generateKey() {\n    // the actual private key (32 bytes)\n    const privateKeyRaw = ed.utils.randomPrivateKey();\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    // concatenated the public key to the private key\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport async function generateKeyFromSeed(seed) {\n    if (seed.length !== KEYS_BYTE_LENGTH) {\n        throw new TypeError('\"seed\" must be 32 bytes in length.');\n    }\n    else if (!(seed instanceof Uint8Array)) {\n        throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.');\n    }\n    // based on node forges algorithm, the seed is used directly as private key\n    const privateKeyRaw = seed;\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nexport async function hashAndSign(privateKey, msg) {\n    const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH);\n    return ed.sign(msg, privateKeyRaw);\n}\nexport async function hashAndVerify(publicKey, sig, msg) {\n    return ed.verify(sig, msg, publicKey);\n}\nfunction concatKeys(privateKeyRaw, publicKey) {\n    const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);\n    for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n        privateKey[i] = privateKeyRaw[i];\n        privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i];\n    }\n    return privateKey;\n}\n//# sourceMappingURL=ed25519-browser.js.map","/* eslint-env browser */\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n    get(win = globalThis) {\n        const nativeCrypto = win.crypto;\n        if (nativeCrypto == null || nativeCrypto.subtle == null) {\n            throw Object.assign(new Error('Missing Web Crypto API. ' +\n                'The most likely cause of this error is that this page is being accessed ' +\n                'from an insecure context (i.e. not HTTPS). For more information and ' +\n                'possible resolutions see ' +\n                'https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api'), { code: 'ERR_MISSING_WEB_CRYPTO' });\n        }\n        return nativeCrypto;\n    }\n};\n//# sourceMappingURL=webcrypto.js.map","import { concat } from 'uint8arrays/concat';\nimport { fromString } from 'uint8arrays/from-string';\nimport webcrypto from '../webcrypto.js';\n// WebKit on Linux does not support deriving a key from an empty PBKDF2 key.\n// So, as a workaround, we provide the generated key as a constant. We test that\n// this generated key is accurate in test/workaround.spec.ts\n// Generated via:\n// await crypto.subtle.exportKey('jwk',\n//   await crypto.subtle.deriveKey(\n//     { name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } },\n//     await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']),\n//     { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt'])\n// )\nexport const derivedEmptyPasswordKey = { alg: 'A128GCM', ext: true, k: 'scm9jmO_4BJAgdwWGVulLg', key_ops: ['encrypt', 'decrypt'], kty: 'oct' };\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\nexport function create(opts) {\n    const algorithm = opts?.algorithm ?? 'AES-GCM';\n    let keyLength = opts?.keyLength ?? 16;\n    const nonceLength = opts?.nonceLength ?? 12;\n    const digest = opts?.digest ?? 'SHA-256';\n    const saltLength = opts?.saltLength ?? 16;\n    const iterations = opts?.iterations ?? 32767;\n    const crypto = webcrypto.get();\n    keyLength *= 8; // Browser crypto uses bits instead of bytes\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to encrypt the data.\n     */\n    async function encrypt(data, password) {\n        const salt = crypto.getRandomValues(new Uint8Array(saltLength));\n        const nonce = crypto.getRandomValues(new Uint8Array(nonceLength));\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['encrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            }\n        }\n        else {\n            // Derive a key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt']);\n        }\n        // Encrypt the string.\n        const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data);\n        return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)]);\n    }\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to decrypt the data. The options used to create\n     * this decryption cipher must be the same as those used to create\n     * the encryption cipher.\n     */\n    async function decrypt(data, password) {\n        const salt = data.subarray(0, saltLength);\n        const nonce = data.subarray(saltLength, saltLength + nonceLength);\n        const ciphertext = data.subarray(saltLength + nonceLength);\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['decrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['decrypt']);\n            }\n        }\n        else {\n            // Derive the key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt']);\n        }\n        // Decrypt the string.\n        const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext);\n        return new Uint8Array(plaintext);\n    }\n    const cipher = {\n        encrypt,\n        decrypt\n    };\n    return cipher;\n}\n//# sourceMappingURL=aes-gcm.browser.js.map","import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter(privateKey, password) {\n    const cipher = ciphers.create();\n    const encryptedKey = await cipher.encrypt(privateKey, password);\n    return base64.encode(encryptedKey);\n}\n//# sourceMappingURL=exporter.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"RSA\"] = \"RSA\";\n    KeyType[\"Ed25519\"] = \"Ed25519\";\n    KeyType[\"Secp256k1\"] = \"Secp256k1\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n    __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n    __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n    __KeyTypeValues[__KeyTypeValues[\"Secp256k1\"] = 2] = \"Secp256k1\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n    KeyType.codec = () => {\n        return enumeration(__KeyTypeValues);\n    };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n    let _codec;\n    PublicKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PublicKey.encode = (obj) => {\n        return encodeMessage(obj, PublicKey.codec());\n    };\n    PublicKey.decode = (buf) => {\n        return decodeMessage(buf, PublicKey.codec());\n    };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n    let _codec;\n    PrivateKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PrivateKey.encode = (obj) => {\n        return encodeMessage(obj, PrivateKey.codec());\n    };\n    PrivateKey.decode = (buf) => {\n        return decodeMessage(buf, PrivateKey.codec());\n    };\n})(PrivateKey || (PrivateKey = {}));\n//# sourceMappingURL=keys.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as crypto from './ed25519.js';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nexport class Ed25519PublicKey {\n    _key;\n    constructor(key) {\n        this._key = ensureKey(key, crypto.publicKeyLength);\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Ed25519PrivateKey {\n    _key;\n    _publicKey;\n    // key       - 64 byte Uint8Array containing private key\n    // publicKey - 32 byte Uint8Array containing public key\n    constructor(key, publicKey) {\n        this._key = ensureKey(key, crypto.privateKeyLength);\n        this._publicKey = ensureKey(publicKey, crypto.publicKeyLength);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Ed25519PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the identity multihash containing its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     *\n     * @returns {Promise<string>}\n     */\n    async id() {\n        const encoding = identity.digest(this.public.bytes);\n        return base58btc.encode(encoding.bytes).substring(1);\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalEd25519PrivateKey(bytes) {\n    // Try the old, redundant public key version\n    if (bytes.length > crypto.privateKeyLength) {\n        bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength);\n        const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n        const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length);\n        return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n    }\n    bytes = ensureKey(bytes, crypto.privateKeyLength);\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n    const publicKeyBytes = bytes.subarray(crypto.publicKeyLength);\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n}\nexport function unmarshalEd25519PublicKey(bytes) {\n    bytes = ensureKey(bytes, crypto.publicKeyLength);\n    return new Ed25519PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const { privateKey, publicKey } = await crypto.generateKey();\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nexport async function generateKeyPairFromSeed(seed) {\n    const { privateKey, publicKey } = await crypto.generateKeyFromSeed(seed);\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nfunction ensureKey(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE');\n    }\n    return key;\n}\n//# sourceMappingURL=ed25519-class.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import 'node-forge/lib/util.js';\nimport 'node-forge/lib/jsbn.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport function bigIntegerToUintBase64url(num, len) {\n    // Call `.abs()` to convert to unsigned\n    let buf = Uint8Array.from(num.abs().toByteArray()); // toByteArray converts to big endian\n    // toByteArray() gives us back a signed array, which will include a leading 0\n    // byte if the most significant bit of the number is 1:\n    // https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-integer\n    // Our number will always be positive so we should remove the leading padding.\n    buf = buf[0] === 0 ? buf.subarray(1) : buf;\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return uint8ArrayToString(buf, 'base64url');\n}\n// Convert a base64url encoded string to a BigInteger\nexport function base64urlToBigInteger(str) {\n    const buf = base64urlToBuffer(str);\n    return new forge.jsbn.BigInteger(uint8ArrayToString(buf, 'base16'), 16);\n}\nexport function base64urlToBuffer(str, len) {\n    let buf = uint8ArrayFromString(str, 'base64urlpad');\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return buf;\n}\n//# sourceMappingURL=util.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64urlToBuffer } from '../util.js';\nimport webcrypto from '../webcrypto.js';\nconst bits = {\n    'P-256': 256,\n    'P-384': 384,\n    'P-521': 521\n};\nconst curveTypes = Object.keys(bits);\nconst names = curveTypes.join(' / ');\nexport async function generateEphmeralKeyPair(curve) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'ECDH',\n        namedCurve: curve\n    }, true, ['deriveBits']);\n    // forcePrivate is used for testing only\n    const genSharedKey = async (theirPub, forcePrivate) => {\n        let privateKey;\n        if (forcePrivate != null) {\n            privateKey = await webcrypto.get().subtle.importKey('jwk', unmarshalPrivateKey(curve, forcePrivate), {\n                name: 'ECDH',\n                namedCurve: curve\n            }, false, ['deriveBits']);\n        }\n        else {\n            privateKey = pair.privateKey;\n        }\n        const key = await webcrypto.get().subtle.importKey('jwk', unmarshalPublicKey(curve, theirPub), {\n            name: 'ECDH',\n            namedCurve: curve\n        }, false, []);\n        const buffer = await webcrypto.get().subtle.deriveBits({\n            name: 'ECDH',\n            // @ts-expect-error namedCurve is missing from the types\n            namedCurve: curve,\n            public: key\n        }, privateKey, bits[curve]);\n        return new Uint8Array(buffer, 0, buffer.byteLength);\n    };\n    const publicKey = await webcrypto.get().subtle.exportKey('jwk', pair.publicKey);\n    const ecdhKey = {\n        key: marshalPublicKey(publicKey),\n        genSharedKey\n    };\n    return ecdhKey;\n}\nconst curveLengths = {\n    'P-256': 32,\n    'P-384': 48,\n    'P-521': 66\n};\n// Marshal converts a jwk encoded ECDH public key into the\n// form specified in section 4.3.6 of ANSI X9.62. (This is the format\n// go-ipfs uses)\nfunction marshalPublicKey(jwk) {\n    if (jwk.crv == null || jwk.x == null || jwk.y == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    if (jwk.crv !== 'P-256' && jwk.crv !== 'P-384' && jwk.crv !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${jwk.crv}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[jwk.crv];\n    return uint8ArrayConcat([\n        Uint8Array.from([4]),\n        base64urlToBuffer(jwk.x, byteLen),\n        base64urlToBuffer(jwk.y, byteLen)\n    ], 1 + byteLen * 2);\n}\n// Unmarshal converts a point, serialized by Marshal, into an jwk encoded key\nfunction unmarshalPublicKey(curve, key) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[curve];\n    if (!uint8ArrayEquals(key.subarray(0, 1), Uint8Array.from([4]))) {\n        throw new CodeError('Cannot unmarshal public key - invalid key format', 'ERR_INVALID_KEY_FORMAT');\n    }\n    return {\n        kty: 'EC',\n        crv: curve,\n        x: uint8ArrayToString(key.subarray(1, byteLen + 1), 'base64url'),\n        y: uint8ArrayToString(key.subarray(1 + byteLen), 'base64url'),\n        ext: true\n    };\n}\nconst unmarshalPrivateKey = (curve, key) => ({\n    ...unmarshalPublicKey(curve, key.public),\n    d: uint8ArrayToString(key.private, 'base64url')\n});\n//# sourceMappingURL=ecdh-browser.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { randomBytes as randB } from '@noble/hashes/utils';\nexport default function randomBytes(length) {\n    if (isNaN(length) || length <= 0) {\n        throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH');\n    }\n    return randB(length);\n}\n//# sourceMappingURL=random-bytes.js.map","import 'node-forge/lib/rsa.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { base64urlToBigInteger } from '../util.js';\nfunction convert(key, types) {\n    return types.map(t => base64urlToBigInteger(key[t]));\n}\nexport function jwk2priv(key) {\n    return forge.pki.setRsaPrivateKey(...convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi']));\n}\nexport function jwk2pub(key) {\n    return forge.pki.setRsaPublicKey(...convert(key, ['n', 'e']));\n}\n//# sourceMappingURL=jwk2pem.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport randomBytes from '../random-bytes.js';\nimport webcrypto from '../webcrypto.js';\nimport { jwk2pub, jwk2priv } from './jwk2pem.js';\nimport * as utils from './rsa-utils.js';\nexport { utils };\nexport async function generateKey(bits) {\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: 'SHA-256' }\n    }, true, ['sign', 'verify']);\n    const keys = await exportKey(pair);\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\n// Takes a jwk key\nexport async function unmarshalPrivateKey(key) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['sign']);\n    const pair = [\n        privateKey,\n        await derivePublicFromPrivate(key)\n    ];\n    const keys = await exportKey({\n        privateKey: pair[0],\n        publicKey: pair[1]\n    });\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\nexport { randomBytes as getRandomValues };\nexport async function hashAndSign(key, msg) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['sign']);\n    const sig = await webcrypto.get().subtle.sign({ name: 'RSASSA-PKCS1-v1_5' }, privateKey, Uint8Array.from(msg));\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg) {\n    const publicKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['verify']);\n    return webcrypto.get().subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, publicKey, sig, msg);\n}\nasync function exportKey(pair) {\n    if (pair.privateKey == null || pair.publicKey == null) {\n        throw new CodeError('Private and public key are required', 'ERR_INVALID_PARAMETERS');\n    }\n    return Promise.all([\n        webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n        webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n    ]);\n}\nasync function derivePublicFromPrivate(jwKey) {\n    return webcrypto.get().subtle.importKey('jwk', {\n        kty: jwKey.kty,\n        n: jwKey.n,\n        e: jwKey.e\n    }, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['verify']);\n}\n/*\n\nRSA encryption/decryption for the browser with webcrypto workaround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg Uint8Array to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our Uint8Array a binary string\n  - Convert resulting nodeForge buffer to Uint8Array: it returns a binary string, turn that into a Uint8Array\n\n*/\nfunction convertKey(key, pub, msg, handle) {\n    const fkey = pub ? jwk2pub(key) : jwk2priv(key);\n    const fmsg = uint8ArrayToString(Uint8Array.from(msg), 'ascii');\n    const fomsg = handle(fmsg, fkey);\n    return uint8ArrayFromString(fomsg, 'ascii');\n}\nexport function encrypt(key, msg) {\n    return convertKey(key, true, msg, (msg, key) => key.encrypt(msg));\n}\nexport function decrypt(key, msg) {\n    return convertKey(key, false, msg, (msg, key) => key.decrypt(msg));\n}\nexport function keySize(jwk) {\n    if (jwk.kty !== 'RSA') {\n        throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE');\n    }\n    else if (jwk.n == null) {\n        throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS');\n    }\n    const bytes = uint8ArrayFromString(jwk.n, 'base64url');\n    return bytes.length * 8;\n}\n//# sourceMappingURL=rsa-browser.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport 'node-forge/lib/sha512.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nimport * as crypto from './rsa.js';\nexport const MAX_KEY_SIZE = 8192;\nexport class RsaPublicKey {\n    _key;\n    constructor(key) {\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkix(this._key);\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    encrypt(bytes) {\n        return crypto.encrypt(this._key, bytes);\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class RsaPrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey;\n    }\n    genSecret() {\n        return crypto.getRandomValues(16);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        if (this._publicKey == null) {\n            throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED');\n        }\n        return new RsaPublicKey(this._publicKey);\n    }\n    decrypt(bytes) {\n        return crypto.decrypt(this._key, bytes);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkcs1(this._key);\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected PEM format\n     */\n    async export(password, format = 'pkcs-8') {\n        if (format === 'pkcs-8') {\n            const buffer = new forge.util.ByteBuffer(this.marshal());\n            const asn1 = forge.asn1.fromDer(buffer);\n            const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n            const options = {\n                algorithm: 'aes256',\n                count: 10000,\n                saltSize: 128 / 8,\n                prfAlgorithm: 'sha512'\n            };\n            return forge.pki.encryptRsaPrivateKey(privateKey, password, options);\n        }\n        else if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport async function unmarshalRsaPrivateKey(bytes) {\n    const jwk = crypto.utils.pkcs1ToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport function unmarshalRsaPublicKey(bytes) {\n    const jwk = crypto.utils.pkixToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    return new RsaPublicKey(jwk);\n}\nexport async function fromJwk(jwk) {\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport async function generateKeyPair(bits) {\n    if (bits > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.generateKey(bits);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\n//# sourceMappingURL=rsa-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/rsa.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { bigIntegerToUintBase64url, base64urlToBigInteger } from './../util.js';\n// Convert a PKCS#1 in ASN1 DER format to a JWK key\nexport function pkcs1ToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n    // https://tools.ietf.org/html/rfc7518#section-6.3.1\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(privateKey.n),\n        e: bigIntegerToUintBase64url(privateKey.e),\n        d: bigIntegerToUintBase64url(privateKey.d),\n        p: bigIntegerToUintBase64url(privateKey.p),\n        q: bigIntegerToUintBase64url(privateKey.q),\n        dp: bigIntegerToUintBase64url(privateKey.dP),\n        dq: bigIntegerToUintBase64url(privateKey.dQ),\n        qi: bigIntegerToUintBase64url(privateKey.qInv),\n        alg: 'RS256'\n    };\n}\n// Convert a JWK key into PKCS#1 in ASN1 DER format\nexport function jwkToPkcs1(jwk) {\n    if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.privateKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e),\n        d: base64urlToBigInteger(jwk.d),\n        p: base64urlToBigInteger(jwk.p),\n        q: base64urlToBigInteger(jwk.q),\n        dP: base64urlToBigInteger(jwk.dp),\n        dQ: base64urlToBigInteger(jwk.dq),\n        qInv: base64urlToBigInteger(jwk.qi)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n// Convert a PKCIX in ASN1 DER format to a JWK key\nexport function pkixToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const publicKey = forge.pki.publicKeyFromAsn1(asn1);\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(publicKey.n),\n        e: bigIntegerToUintBase64url(publicKey.e)\n    };\n}\n// Convert a JWK key to PKCIX in ASN1 DER format\nexport function jwkToPkix(jwk) {\n    if (jwk.n == null || jwk.e == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.publicKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n//# sourceMappingURL=rsa-utils.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function generateKey() {\n    return secp.utils.randomPrivateKey();\n}\n/**\n * Hash and sign message with private key\n */\nexport async function hashAndSign(key, msg) {\n    const { digest } = await sha256.digest(msg);\n    try {\n        const signature = secp.sign(digest, key);\n        return signature.toDERRawBytes();\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\n/**\n * Hash message and verify signature with public key\n */\nexport async function hashAndVerify(key, sig, msg) {\n    try {\n        const { digest } = await sha256.digest(msg);\n        return secp.verify(sig, digest, key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\nexport function compressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true);\n    return point;\n}\nexport function decompressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false);\n    return point;\n}\nexport function validatePrivateKey(key) {\n    try {\n        secp.getPublicKey(key, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\nexport function validatePublicKey(key) {\n    try {\n        secp.ProjectivePoint.fromHex(key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY');\n    }\n}\nexport function computePublicKey(privateKey) {\n    try {\n        return secp.getPublicKey(privateKey, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\n//# sourceMappingURL=secp256k1.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as keysProtobuf from './keys.js';\nimport * as crypto from './secp256k1.js';\nexport class Secp256k1PublicKey {\n    _key;\n    constructor(key) {\n        crypto.validatePublicKey(key);\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.compressPublicKey(this._key);\n    }\n    get bytes() {\n        return keysProtobuf.PublicKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Secp256k1PrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey ?? crypto.computePublicKey(key);\n        crypto.validatePrivateKey(this._key);\n        crypto.validatePublicKey(this._publicKey);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Secp256k1PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return keysProtobuf.PrivateKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalSecp256k1PrivateKey(bytes) {\n    return new Secp256k1PrivateKey(bytes);\n}\nexport function unmarshalSecp256k1PublicKey(bytes) {\n    return new Secp256k1PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const privateKeyBytes = crypto.generateKey();\n    return new Secp256k1PrivateKey(privateKeyBytes);\n}\n//# sourceMappingURL=secp256k1-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/pbe.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport * as Ed25519 from './ed25519-class.js';\nimport generateEphemeralKeyPair from './ephemeral-keys.js';\nimport { importer } from './importer.js';\nimport { keyStretcher } from './key-stretcher.js';\nimport * as keysPBM from './keys.js';\nimport * as RSA from './rsa-class.js';\nimport * as Secp256k1 from './secp256k1-class.js';\nexport { keyStretcher };\nexport { generateEphemeralKeyPair };\nexport { keysPBM };\nexport const supportedKeys = {\n    rsa: RSA,\n    ed25519: Ed25519,\n    secp256k1: Secp256k1\n};\nfunction unsupportedKey(type) {\n    const supported = Object.keys(supportedKeys).join(' / ');\n    return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE');\n}\nfunction typeToKey(type) {\n    type = type.toLowerCase();\n    if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n        return supportedKeys[type];\n    }\n    throw unsupportedKey(type);\n}\n// Generates a keypair of the given type and bitsize\nexport async function generateKeyPair(type, bits) {\n    return typeToKey(type).generateKeyPair(bits ?? 2048);\n}\n// Generates a keypair of the given type and bitsize\n// seed is a 32 byte uint8array\nexport async function generateKeyPairFromSeed(type, seed, bits) {\n    if (type.toLowerCase() !== 'ed25519') {\n        throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE');\n    }\n    return Ed25519.generateKeyPairFromSeed(seed);\n}\n// Converts a protobuf serialized public key into its\n// representative object\nexport function unmarshalPublicKey(buf) {\n    const decoded = keysPBM.PublicKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPublicKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PublicKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'unknown');\n    }\n}\n// Converts a public key object into a protobuf serialized public key\nexport function marshalPublicKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n// Converts a protobuf serialized private key into its\n// representative object\nexport async function unmarshalPrivateKey(buf) {\n    const decoded = keysPBM.PrivateKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPrivateKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'RSA');\n    }\n}\n// Converts a private key object into a protobuf serialized private key\nexport function marshalPrivateKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n/**\n *\n * @param {string} encryptedKey\n * @param {string} password\n */\nexport async function importKey(encryptedKey, password) {\n    try {\n        const key = await importer(encryptedKey, password);\n        return await unmarshalPrivateKey(key);\n    }\n    catch (_) {\n        // Ignore and try the old pem decrypt\n    }\n    // Only rsa supports pem right now\n    const key = forge.pki.decryptRsaPrivateKey(encryptedKey, password);\n    if (key === null) {\n        throw new CodeError('Cannot read the key, most likely the password is wrong or not a RSA key', 'ERR_CANNOT_DECRYPT_PEM');\n    }\n    let der = forge.asn1.toDer(forge.pki.privateKeyToAsn1(key));\n    der = uint8ArrayFromString(der.getBytes(), 'ascii');\n    return supportedKeys.rsa.unmarshalRsaPrivateKey(der);\n}\n//# sourceMappingURL=index.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { symbol } from '@libp2p/interface/peer-id';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst baseDecoder = Object\n    .values(bases)\n    .map(codec => codec.decoder)\n    // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n    .reduce((acc, curr) => acc.or(curr), bases.identity.decoder);\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36;\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37;\nclass PeerIdImpl {\n    type;\n    multihash;\n    privateKey;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        this.privateKey = init.privateKey;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [symbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.multihash.bytes;\n    }\n    /**\n     * Returns Multiaddr as a JSON string\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id instanceof Uint8Array) {\n            return uint8ArrayEquals(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return peerIdFromString(id).equals(this);\n        }\n        else if (id?.multihash?.bytes != null) {\n            return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nclass RSAPeerIdImpl extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nclass Ed25519PeerIdImpl extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nclass Secp256k1PeerIdImpl extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nexport function createPeerId(init) {\n    if (init.type === 'RSA') {\n        return new RSAPeerIdImpl(init);\n    }\n    if (init.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(init);\n    }\n    if (init.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(init);\n    }\n    throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromPeerId(other) {\n    if (other.type === 'RSA') {\n        return new RSAPeerIdImpl(other);\n    }\n    if (other.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(other);\n    }\n    if (other.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(other);\n    }\n    throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromString(str, decoder) {\n    decoder = decoder ?? baseDecoder;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        const multihash = Digest.decode(base58btc.decode(`z${str}`));\n        if (str.startsWith('12D')) {\n            return new Ed25519PeerIdImpl({ multihash });\n        }\n        else if (str.startsWith('16U')) {\n            return new Secp256k1PeerIdImpl({ multihash });\n        }\n        else {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    return peerIdFromBytes(baseDecoder.decode(str));\n}\nexport function peerIdFromBytes(buf) {\n    try {\n        const multihash = Digest.decode(buf);\n        if (multihash.code === identity.code) {\n            if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n                return new Ed25519PeerIdImpl({ multihash });\n            }\n            else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n                return new Secp256k1PeerIdImpl({ multihash });\n            }\n        }\n        if (multihash.code === sha256.code) {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    catch {\n        return peerIdFromCID(CID.decode(buf));\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\nexport function peerIdFromCID(cid) {\n    if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n        throw new Error('Supplied PeerID CID is invalid');\n    }\n    const multihash = cid.multihash;\n    if (multihash.code === sha256.code) {\n        return new RSAPeerIdImpl({ multihash: cid.multihash });\n    }\n    else if (multihash.code === identity.code) {\n        if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n            return new Ed25519PeerIdImpl({ multihash: cid.multihash });\n        }\n        else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n            return new Secp256k1PeerIdImpl({ multihash: cid.multihash });\n        }\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys(publicKey, privateKey) {\n    if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey });\n}\n//# sourceMappingURL=index.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var NoiseExtensions;\n(function (NoiseExtensions) {\n    let _codec;\n    NoiseExtensions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.webtransportCerthashes != null) {\n                    for (const value of obj.webtransportCerthashes) {\n                        w.uint32(10);\n                        w.bytes(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    webtransportCerthashes: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.webtransportCerthashes.push(reader.bytes());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseExtensions.encode = (obj) => {\n        return encodeMessage(obj, NoiseExtensions.codec());\n    };\n    NoiseExtensions.decode = (buf) => {\n        return decodeMessage(buf, NoiseExtensions.codec());\n    };\n})(NoiseExtensions || (NoiseExtensions = {}));\nexport var NoiseHandshakePayload;\n(function (NoiseHandshakePayload) {\n    let _codec;\n    NoiseHandshakePayload.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (opts.writeDefaults === true || (obj.identityKey != null && obj.identityKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.identityKey ?? new Uint8Array(0));\n                }\n                if (opts.writeDefaults === true || (obj.identitySig != null && obj.identitySig.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.identitySig ?? new Uint8Array(0));\n                }\n                if (obj.extensions != null) {\n                    w.uint32(34);\n                    NoiseExtensions.codec().encode(obj.extensions, w, {\n                        writeDefaults: false\n                    });\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    identityKey: new Uint8Array(0),\n                    identitySig: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.identityKey = reader.bytes();\n                            break;\n                        case 2:\n                            obj.identitySig = reader.bytes();\n                            break;\n                        case 4:\n                            obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseHandshakePayload.encode = (obj) => {\n        return encodeMessage(obj, NoiseHandshakePayload.codec());\n    };\n    NoiseHandshakePayload.decode = (buf) => {\n        return decodeMessage(buf, NoiseHandshakePayload.codec());\n    };\n})(NoiseHandshakePayload || (NoiseHandshakePayload = {}));\n//# sourceMappingURL=payload.js.map","import { unmarshalPublicKey, unmarshalPrivateKey } from '@libp2p/crypto/keys';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { NoiseHandshakePayload } from './proto/payload.js';\nexport async function getPayload(localPeer, staticPublicKey, extensions) {\n    const signedPayload = await signPayload(localPeer, getHandshakePayload(staticPublicKey));\n    if (localPeer.publicKey == null) {\n        throw new Error('PublicKey was missing from local PeerId');\n    }\n    return createHandshakePayload(localPeer.publicKey, signedPayload, extensions);\n}\nexport function createHandshakePayload(libp2pPublicKey, signedPayload, extensions) {\n    return NoiseHandshakePayload.encode({\n        identityKey: libp2pPublicKey,\n        identitySig: signedPayload,\n        extensions: extensions ?? { webtransportCerthashes: [] }\n    }).subarray();\n}\nexport async function signPayload(peerId, payload) {\n    if (peerId.privateKey == null) {\n        throw new Error('PrivateKey was missing from PeerId');\n    }\n    const privateKey = await unmarshalPrivateKey(peerId.privateKey);\n    return privateKey.sign(payload);\n}\nexport async function getPeerIdFromPayload(payload) {\n    return peerIdFromKeys(payload.identityKey);\n}\nexport function decodePayload(payload) {\n    return NoiseHandshakePayload.decode(payload);\n}\nexport function getHandshakePayload(publicKey) {\n    const prefix = uint8ArrayFromString('noise-libp2p-static-key:');\n    return uint8ArrayConcat([prefix, publicKey], prefix.length + publicKey.length);\n}\n/**\n * Verifies signed payload, throws on any irregularities.\n *\n * @param {bytes} noiseStaticKey - owner's noise static key\n * @param {bytes} payload - decoded payload\n * @param {PeerId} remotePeer - owner's libp2p peer ID\n * @returns {Promise<PeerId>} - peer ID of payload owner\n */\nexport async function verifySignedPayload(noiseStaticKey, payload, remotePeer) {\n    // Unmarshaling from PublicKey protobuf\n    const payloadPeerId = await peerIdFromKeys(payload.identityKey);\n    if (!payloadPeerId.equals(remotePeer)) {\n        throw new Error(`Payload identity key ${payloadPeerId.toString()} does not match expected remote peer ${remotePeer.toString()}`);\n    }\n    const generatedPayload = getHandshakePayload(noiseStaticKey);\n    if (payloadPeerId.publicKey == null) {\n        throw new Error('PublicKey was missing from PeerId');\n    }\n    if (payload.identitySig == null) {\n        throw new Error('Signature was missing from message');\n    }\n    const publicKey = unmarshalPublicKey(payloadPeerId.publicKey);\n    const valid = await publicKey.verify(generatedPayload, payload.identitySig);\n    if (!valid) {\n        throw new Error(\"Static key doesn't match to peer that signed payload!\");\n    }\n    return payloadPeerId;\n}\nexport function isValidPublicKey(pk) {\n    if (!(pk instanceof Uint8Array)) {\n        return false;\n    }\n    if (pk.length !== 32) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=utils.js.map","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","import { logger } from '@libp2p/logger';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { DUMP_SESSION_KEYS } from './constants.js';\nconst log = logger('libp2p:noise');\nexport { log as logger };\nlet keyLogger;\nif (DUMP_SESSION_KEYS) {\n    keyLogger = log;\n}\nelse {\n    keyLogger = Object.assign(() => { }, {\n        enabled: false,\n        trace: () => { },\n        error: () => { }\n    });\n}\nexport function logLocalStaticKeys(s) {\n    keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${uint8ArrayToString(s.publicKey, 'hex')}`);\n    keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${uint8ArrayToString(s.privateKey, 'hex')}`);\n}\nexport function logLocalEphemeralKeys(e) {\n    if (e) {\n        keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${uint8ArrayToString(e.publicKey, 'hex')}`);\n        keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${uint8ArrayToString(e.privateKey, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing local ephemeral keys.');\n    }\n}\nexport function logRemoteStaticKey(rs) {\n    keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${uint8ArrayToString(rs, 'hex')}`);\n}\nexport function logRemoteEphemeralKey(re) {\n    keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${uint8ArrayToString(re, 'hex')}`);\n}\nexport function logCipherState(session) {\n    if (session.cs1 && session.cs2) {\n        keyLogger(`CIPHER_STATE_1 ${session.cs1.n.getUint64()} ${uint8ArrayToString(session.cs1.k, 'hex')}`);\n        keyLogger(`CIPHER_STATE_2 ${session.cs2.n.getUint64()} ${uint8ArrayToString(session.cs2.k, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing cipher state.');\n    }\n}\n//# sourceMappingURL=logger.js.map","export const MIN_NONCE = 0;\n// For performance reasons, the nonce is represented as a JS `number`\n// Although JS `number` can safely represent integers up to 2 ** 53 - 1, we choose to only use\n// 4 bytes to store the data for performance reason.\n// This is a slight deviation from the noise spec, which describes the max nonce as 2 ** 64 - 2\n// The effect is that this implementation will need a new handshake to be performed after fewer messages are exchanged than other implementations with full uint64 nonces.\n// this MAX_NONCE is still a large number of messages, so the practical effect of this is negligible.\nexport const MAX_NONCE = 0xffffffff;\nconst ERR_MAX_NONCE = 'Cipherstate has reached maximum n, a new handshake must be performed';\n/**\n * The nonce is an uint that's increased over time.\n * Maintaining different representations help improve performance.\n */\nexport class Nonce {\n    n;\n    bytes;\n    view;\n    constructor(n = MIN_NONCE) {\n        this.n = n;\n        this.bytes = new Uint8Array(12);\n        this.view = new DataView(this.bytes.buffer, this.bytes.byteOffset, this.bytes.byteLength);\n        this.view.setUint32(4, n, true);\n    }\n    increment() {\n        this.n++;\n        // Even though we're treating the nonce as 8 bytes, RFC7539 specifies 12 bytes for a nonce.\n        this.view.setUint32(4, this.n, true);\n    }\n    getBytes() {\n        return this.bytes;\n    }\n    getUint64() {\n        return this.n;\n    }\n    assertValue() {\n        if (this.n > MAX_NONCE) {\n            throw new Error(ERR_MAX_NONCE);\n        }\n    }\n}\n//# sourceMappingURL=nonce.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { logger } from '../logger.js';\nimport { Nonce } from '../nonce.js';\nexport class AbstractHandshake {\n    crypto;\n    constructor(crypto) {\n        this.crypto = crypto;\n    }\n    encryptWithAd(cs, ad, plaintext) {\n        const e = this.encrypt(cs.k, cs.n, ad, plaintext);\n        cs.n.increment();\n        return e;\n    }\n    decryptWithAd(cs, ad, ciphertext, dst) {\n        const { plaintext, valid } = this.decrypt(cs.k, cs.n, ad, ciphertext, dst);\n        if (valid)\n            cs.n.increment();\n        return { plaintext, valid };\n    }\n    // Cipher state related\n    hasKey(cs) {\n        return !this.isEmptyKey(cs.k);\n    }\n    createEmptyKey() {\n        return new Uint8Array(32);\n    }\n    isEmptyKey(k) {\n        const emptyKey = this.createEmptyKey();\n        return uint8ArrayEquals(emptyKey, k);\n    }\n    encrypt(k, n, ad, plaintext) {\n        n.assertValue();\n        return this.crypto.chaCha20Poly1305Encrypt(plaintext, n.getBytes(), ad, k);\n    }\n    encryptAndHash(ss, plaintext) {\n        let ciphertext;\n        if (this.hasKey(ss.cs)) {\n            ciphertext = this.encryptWithAd(ss.cs, ss.h, plaintext);\n        }\n        else {\n            ciphertext = plaintext;\n        }\n        this.mixHash(ss, ciphertext);\n        return ciphertext;\n    }\n    decrypt(k, n, ad, ciphertext, dst) {\n        n.assertValue();\n        const encryptedMessage = this.crypto.chaCha20Poly1305Decrypt(ciphertext, n.getBytes(), ad, k, dst);\n        if (encryptedMessage) {\n            return {\n                plaintext: encryptedMessage,\n                valid: true\n            };\n        }\n        else {\n            return {\n                plaintext: new Uint8Array(0),\n                valid: false\n            };\n        }\n    }\n    decryptAndHash(ss, ciphertext) {\n        let plaintext;\n        let valid = true;\n        if (this.hasKey(ss.cs)) {\n            ({ plaintext, valid } = this.decryptWithAd(ss.cs, ss.h, ciphertext));\n        }\n        else {\n            plaintext = ciphertext;\n        }\n        this.mixHash(ss, ciphertext);\n        return { plaintext, valid };\n    }\n    dh(privateKey, publicKey) {\n        try {\n            const derivedU8 = this.crypto.generateX25519SharedKey(privateKey, publicKey);\n            if (derivedU8.length === 32) {\n                return derivedU8;\n            }\n            return derivedU8.subarray(0, 32);\n        }\n        catch (e) {\n            const err = e;\n            logger.error(err);\n            return new Uint8Array(32);\n        }\n    }\n    mixHash(ss, data) {\n        ss.h = this.getHash(ss.h, data);\n    }\n    getHash(a, b) {\n        const u = this.crypto.hashSHA256(uint8ArrayConcat([a, b], a.length + b.length));\n        return u;\n    }\n    mixKey(ss, ikm) {\n        const [ck, tempK] = this.crypto.getHKDF(ss.ck, ikm);\n        ss.cs = this.initializeKey(tempK);\n        ss.ck = ck;\n    }\n    initializeKey(k) {\n        return { k, n: new Nonce() };\n    }\n    // Symmetric state related\n    initializeSymmetric(protocolName) {\n        const protocolNameBytes = uint8ArrayFromString(protocolName, 'utf-8');\n        const h = this.hashProtocolName(protocolNameBytes);\n        const ck = h;\n        const key = this.createEmptyKey();\n        const cs = this.initializeKey(key);\n        return { cs, ck, h };\n    }\n    hashProtocolName(protocolName) {\n        if (protocolName.length <= 32) {\n            const h = new Uint8Array(32);\n            h.set(protocolName);\n            return h;\n        }\n        else {\n            return this.getHash(protocolName, new Uint8Array(0));\n        }\n    }\n    split(ss) {\n        const [tempk1, tempk2] = this.crypto.getHKDF(ss.ck, new Uint8Array(0));\n        const cs1 = this.initializeKey(tempk1);\n        const cs2 = this.initializeKey(tempk2);\n        return { cs1, cs2 };\n    }\n    writeMessageRegular(cs, payload) {\n        const ciphertext = this.encryptWithAd(cs, new Uint8Array(0), payload);\n        const ne = this.createEmptyKey();\n        const ns = new Uint8Array(0);\n        return { ne, ns, ciphertext };\n    }\n    readMessageRegular(cs, message) {\n        return this.decryptWithAd(cs, new Uint8Array(0), message.ciphertext);\n    }\n}\n//# sourceMappingURL=abstract-handshake.js.map","import { isValidPublicKey } from '../utils.js';\nimport { AbstractHandshake } from './abstract-handshake.js';\nexport class XX extends AbstractHandshake {\n    initializeInitiator(prologue, s, rs, psk) {\n        const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n        const ss = this.initializeSymmetric(name);\n        this.mixHash(ss, prologue);\n        const re = new Uint8Array(32);\n        return { ss, s, rs, psk, re };\n    }\n    initializeResponder(prologue, s, rs, psk) {\n        const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n        const ss = this.initializeSymmetric(name);\n        this.mixHash(ss, prologue);\n        const re = new Uint8Array(32);\n        return { ss, s, rs, psk, re };\n    }\n    writeMessageA(hs, payload, e) {\n        const ns = new Uint8Array(0);\n        if (e !== undefined) {\n            hs.e = e;\n        }\n        else {\n            hs.e = this.crypto.generateX25519KeyPair();\n        }\n        const ne = hs.e.publicKey;\n        this.mixHash(hs.ss, ne);\n        const ciphertext = this.encryptAndHash(hs.ss, payload);\n        return { ne, ns, ciphertext };\n    }\n    writeMessageB(hs, payload) {\n        hs.e = this.crypto.generateX25519KeyPair();\n        const ne = hs.e.publicKey;\n        this.mixHash(hs.ss, ne);\n        this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n        const spk = hs.s.publicKey;\n        const ns = this.encryptAndHash(hs.ss, spk);\n        this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n        const ciphertext = this.encryptAndHash(hs.ss, payload);\n        return { ne, ns, ciphertext };\n    }\n    writeMessageC(hs, payload) {\n        const spk = hs.s.publicKey;\n        const ns = this.encryptAndHash(hs.ss, spk);\n        this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n        const ciphertext = this.encryptAndHash(hs.ss, payload);\n        const ne = this.createEmptyKey();\n        const messageBuffer = { ne, ns, ciphertext };\n        const { cs1, cs2 } = this.split(hs.ss);\n        return { h: hs.ss.h, messageBuffer, cs1, cs2 };\n    }\n    readMessageA(hs, message) {\n        if (isValidPublicKey(message.ne)) {\n            hs.re = message.ne;\n        }\n        this.mixHash(hs.ss, hs.re);\n        return this.decryptAndHash(hs.ss, message.ciphertext);\n    }\n    readMessageB(hs, message) {\n        if (isValidPublicKey(message.ne)) {\n            hs.re = message.ne;\n        }\n        this.mixHash(hs.ss, hs.re);\n        if (!hs.e) {\n            throw new Error('Handshake state `e` param is missing.');\n        }\n        this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n        const { plaintext: ns, valid: valid1 } = this.decryptAndHash(hs.ss, message.ns);\n        if (valid1 && isValidPublicKey(ns)) {\n            hs.rs = ns;\n        }\n        this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n        const { plaintext, valid: valid2 } = this.decryptAndHash(hs.ss, message.ciphertext);\n        return { plaintext, valid: (valid1 && valid2) };\n    }\n    readMessageC(hs, message) {\n        const { plaintext: ns, valid: valid1 } = this.decryptAndHash(hs.ss, message.ns);\n        if (valid1 && isValidPublicKey(ns)) {\n            hs.rs = ns;\n        }\n        if (!hs.e) {\n            throw new Error('Handshake state `e` param is missing.');\n        }\n        this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n        const { plaintext, valid: valid2 } = this.decryptAndHash(hs.ss, message.ciphertext);\n        const { cs1, cs2 } = this.split(hs.ss);\n        return { h: hs.ss.h, plaintext, valid: (valid1 && valid2), cs1, cs2 };\n    }\n    initSession(initiator, prologue, s) {\n        const psk = this.createEmptyKey();\n        const rs = new Uint8Array(32); // no static key yet\n        let hs;\n        if (initiator) {\n            hs = this.initializeInitiator(prologue, s, rs, psk);\n        }\n        else {\n            hs = this.initializeResponder(prologue, s, rs, psk);\n        }\n        return {\n            hs,\n            i: initiator,\n            mc: 0\n        };\n    }\n    sendMessage(session, message, ephemeral) {\n        let messageBuffer;\n        if (session.mc === 0) {\n            messageBuffer = this.writeMessageA(session.hs, message, ephemeral);\n        }\n        else if (session.mc === 1) {\n            messageBuffer = this.writeMessageB(session.hs, message);\n        }\n        else if (session.mc === 2) {\n            const { h, messageBuffer: resultingBuffer, cs1, cs2 } = this.writeMessageC(session.hs, message);\n            messageBuffer = resultingBuffer;\n            session.h = h;\n            session.cs1 = cs1;\n            session.cs2 = cs2;\n        }\n        else if (session.mc > 2) {\n            if (session.i) {\n                if (!session.cs1) {\n                    throw new Error('CS1 (cipher state) is not defined');\n                }\n                messageBuffer = this.writeMessageRegular(session.cs1, message);\n            }\n            else {\n                if (!session.cs2) {\n                    throw new Error('CS2 (cipher state) is not defined');\n                }\n                messageBuffer = this.writeMessageRegular(session.cs2, message);\n            }\n        }\n        else {\n            throw new Error('Session invalid.');\n        }\n        session.mc++;\n        return messageBuffer;\n    }\n    recvMessage(session, message) {\n        let plaintext = new Uint8Array(0);\n        let valid = false;\n        if (session.mc === 0) {\n            ({ plaintext, valid } = this.readMessageA(session.hs, message));\n        }\n        else if (session.mc === 1) {\n            ({ plaintext, valid } = this.readMessageB(session.hs, message));\n        }\n        else if (session.mc === 2) {\n            const { h, plaintext: resultingPlaintext, valid: resultingValid, cs1, cs2 } = this.readMessageC(session.hs, message);\n            plaintext = resultingPlaintext;\n            valid = resultingValid;\n            session.h = h;\n            session.cs1 = cs1;\n            session.cs2 = cs2;\n        }\n        session.mc++;\n        return { plaintext, valid };\n    }\n}\n//# sourceMappingURL=xx.js.map","import { InvalidCryptoExchangeError, UnexpectedPeerError } from '@libp2p/interface/errors';\nimport { decode0, decode1, decode2, encode0, encode1, encode2 } from './encoder.js';\nimport { XX } from './handshakes/xx.js';\nimport { logger, logLocalStaticKeys, logLocalEphemeralKeys, logRemoteEphemeralKey, logRemoteStaticKey, logCipherState } from './logger.js';\nimport { decodePayload, getPeerIdFromPayload, verifySignedPayload } from './utils.js';\nexport class XXHandshake {\n    isInitiator;\n    session;\n    remotePeer;\n    remoteExtensions = { webtransportCerthashes: [] };\n    payload;\n    connection;\n    xx;\n    staticKeypair;\n    prologue;\n    constructor(isInitiator, payload, prologue, crypto, staticKeypair, connection, remotePeer, handshake) {\n        this.isInitiator = isInitiator;\n        this.payload = payload;\n        this.prologue = prologue;\n        this.staticKeypair = staticKeypair;\n        this.connection = connection;\n        if (remotePeer) {\n            this.remotePeer = remotePeer;\n        }\n        this.xx = handshake ?? new XX(crypto);\n        this.session = this.xx.initSession(this.isInitiator, this.prologue, this.staticKeypair);\n    }\n    // stage 0\n    async propose() {\n        logLocalStaticKeys(this.session.hs.s);\n        if (this.isInitiator) {\n            logger.trace('Stage 0 - Initiator starting to send first message.');\n            const messageBuffer = this.xx.sendMessage(this.session, new Uint8Array(0));\n            await this.connection.write(encode0(messageBuffer));\n            logger.trace('Stage 0 - Initiator finished sending first message.');\n            logLocalEphemeralKeys(this.session.hs.e);\n        }\n        else {\n            logger.trace('Stage 0 - Responder waiting to receive first message...');\n            const receivedMessageBuffer = decode0((await this.connection.read()).subarray());\n            const { valid } = this.xx.recvMessage(this.session, receivedMessageBuffer);\n            if (!valid) {\n                throw new InvalidCryptoExchangeError('xx handshake stage 0 validation fail');\n            }\n            logger.trace('Stage 0 - Responder received first message.');\n            logRemoteEphemeralKey(this.session.hs.re);\n        }\n    }\n    // stage 1\n    async exchange() {\n        if (this.isInitiator) {\n            logger.trace('Stage 1 - Initiator waiting to receive first message from responder...');\n            const receivedMessageBuffer = decode1((await this.connection.read()).subarray());\n            const { plaintext, valid } = this.xx.recvMessage(this.session, receivedMessageBuffer);\n            if (!valid) {\n                throw new InvalidCryptoExchangeError('xx handshake stage 1 validation fail');\n            }\n            logger.trace('Stage 1 - Initiator received the message.');\n            logRemoteEphemeralKey(this.session.hs.re);\n            logRemoteStaticKey(this.session.hs.rs);\n            logger.trace(\"Initiator going to check remote's signature...\");\n            try {\n                const decodedPayload = decodePayload(plaintext);\n                this.remotePeer = this.remotePeer || await getPeerIdFromPayload(decodedPayload);\n                await verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n                this.setRemoteNoiseExtension(decodedPayload.extensions);\n            }\n            catch (e) {\n                const err = e;\n                throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${err.message}`);\n            }\n            logger.trace('All good with the signature!');\n        }\n        else {\n            logger.trace('Stage 1 - Responder sending out first message with signed payload and static key.');\n            const messageBuffer = this.xx.sendMessage(this.session, this.payload);\n            await this.connection.write(encode1(messageBuffer));\n            logger.trace('Stage 1 - Responder sent the second handshake message with signed payload.');\n            logLocalEphemeralKeys(this.session.hs.e);\n        }\n    }\n    // stage 2\n    async finish() {\n        if (this.isInitiator) {\n            logger.trace('Stage 2 - Initiator sending third handshake message.');\n            const messageBuffer = this.xx.sendMessage(this.session, this.payload);\n            await this.connection.write(encode2(messageBuffer));\n            logger.trace('Stage 2 - Initiator sent message with signed payload.');\n        }\n        else {\n            logger.trace('Stage 2 - Responder waiting for third handshake message...');\n            const receivedMessageBuffer = decode2((await this.connection.read()).subarray());\n            const { plaintext, valid } = this.xx.recvMessage(this.session, receivedMessageBuffer);\n            if (!valid) {\n                throw new InvalidCryptoExchangeError('xx handshake stage 2 validation fail');\n            }\n            logger.trace('Stage 2 - Responder received the message, finished handshake.');\n            try {\n                const decodedPayload = decodePayload(plaintext);\n                this.remotePeer = this.remotePeer || await getPeerIdFromPayload(decodedPayload);\n                await verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n                this.setRemoteNoiseExtension(decodedPayload.extensions);\n            }\n            catch (e) {\n                const err = e;\n                throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${err.message}`);\n            }\n        }\n        logCipherState(this.session);\n    }\n    encrypt(plaintext, session) {\n        const cs = this.getCS(session);\n        return this.xx.encryptWithAd(cs, new Uint8Array(0), plaintext);\n    }\n    decrypt(ciphertext, session, dst) {\n        const cs = this.getCS(session, false);\n        return this.xx.decryptWithAd(cs, new Uint8Array(0), ciphertext, dst);\n    }\n    getRemoteStaticKey() {\n        return this.session.hs.rs;\n    }\n    getCS(session, encryption = true) {\n        if (!session.cs1 || !session.cs2) {\n            throw new InvalidCryptoExchangeError('Handshake not completed properly, cipher state does not exist.');\n        }\n        if (this.isInitiator) {\n            return encryption ? session.cs1 : session.cs2;\n        }\n        else {\n            return encryption ? session.cs2 : session.cs1;\n        }\n    }\n    setRemoteNoiseExtension(e) {\n        if (e) {\n            this.remoteExtensions = e;\n        }\n    }\n}\n//# sourceMappingURL=handshake-xx.js.map","import { decode } from 'it-length-prefixed';\nimport { lpStream } from 'it-length-prefixed-stream';\nimport { duplexPair } from 'it-pair/duplex';\nimport { pipe } from 'it-pipe';\nimport { NOISE_MSG_MAX_LENGTH_BYTES } from './constants.js';\nimport { pureJsCrypto } from './crypto/js.js';\nimport { decryptStream, encryptStream } from './crypto/streaming.js';\nimport { uint16BEDecode, uint16BEEncode } from './encoder.js';\nimport { XXHandshake } from './handshake-xx.js';\nimport { registerMetrics } from './metrics.js';\nimport { getPayload } from './utils.js';\nexport class Noise {\n    protocol = '/noise';\n    crypto;\n    prologue;\n    staticKeys;\n    extensions;\n    metrics;\n    constructor(init = {}) {\n        const { staticNoiseKey, extensions, crypto, prologueBytes, metrics } = init;\n        this.crypto = crypto ?? pureJsCrypto;\n        this.extensions = extensions;\n        this.metrics = metrics ? registerMetrics(metrics) : undefined;\n        if (staticNoiseKey) {\n            // accepts x25519 private key of length 32\n            this.staticKeys = this.crypto.generateX25519KeyPairFromSeed(staticNoiseKey);\n        }\n        else {\n            this.staticKeys = this.crypto.generateX25519KeyPair();\n        }\n        this.prologue = prologueBytes ?? new Uint8Array(0);\n    }\n    /**\n     * Encrypt outgoing data to the remote party (handshake as initiator)\n     *\n     * @param {PeerId} localPeer - PeerId of the receiving peer\n     * @param {Duplex<AsyncGenerator<Uint8Array>, AsyncIterable<Uint8Array>, Promise<void>>} connection - streaming iterable duplex that will be encrypted\n     * @param {PeerId} remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer.\n     * @returns {Promise<SecuredConnection>}\n     */\n    async secureOutbound(localPeer, connection, remotePeer) {\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        const handshake = await this.performHandshake({\n            connection: wrappedConnection,\n            isInitiator: true,\n            localPeer,\n            remotePeer\n        });\n        const conn = await this.createSecureConnection(wrappedConnection, handshake);\n        return {\n            conn,\n            remoteExtensions: handshake.remoteExtensions,\n            remotePeer: handshake.remotePeer\n        };\n    }\n    /**\n     * Decrypt incoming data (handshake as responder).\n     *\n     * @param {PeerId} localPeer - PeerId of the receiving peer.\n     * @param {Duplex<AsyncGenerator<Uint8Array>, AsyncIterable<Uint8Array>, Promise<void>>} connection - streaming iterable duplex that will be encryption.\n     * @param {PeerId} remotePeer - optional PeerId of the initiating peer, if known. This may only exist during transport upgrades.\n     * @returns {Promise<SecuredConnection>}\n     */\n    async secureInbound(localPeer, connection, remotePeer) {\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        const handshake = await this.performHandshake({\n            connection: wrappedConnection,\n            isInitiator: false,\n            localPeer,\n            remotePeer\n        });\n        const conn = await this.createSecureConnection(wrappedConnection, handshake);\n        return {\n            conn,\n            remotePeer: handshake.remotePeer,\n            remoteExtensions: handshake.remoteExtensions\n        };\n    }\n    /**\n     * If Noise pipes supported, tries IK handshake first with XX as fallback if it fails.\n     * If noise pipes disabled or remote peer static key is unknown, use XX.\n     *\n     * @param {HandshakeParams} params\n     */\n    async performHandshake(params) {\n        const payload = await getPayload(params.localPeer, this.staticKeys.publicKey, this.extensions);\n        // run XX handshake\n        return this.performXXHandshake(params, payload);\n    }\n    async performXXHandshake(params, payload) {\n        const { isInitiator, remotePeer, connection } = params;\n        const handshake = new XXHandshake(isInitiator, payload, this.prologue, this.crypto, this.staticKeys, connection, remotePeer);\n        try {\n            await handshake.propose();\n            await handshake.exchange();\n            await handshake.finish();\n            this.metrics?.xxHandshakeSuccesses.increment();\n        }\n        catch (e) {\n            this.metrics?.xxHandshakeErrors.increment();\n            if (e instanceof Error) {\n                e.message = `Error occurred during XX handshake: ${e.message}`;\n                throw e;\n            }\n        }\n        return handshake;\n    }\n    async createSecureConnection(connection, handshake) {\n        // Create encryption box/unbox wrapper\n        const [secure, user] = duplexPair();\n        const network = connection.unwrap();\n        await pipe(secure, // write to wrapper\n        encryptStream(handshake, this.metrics), // encrypt data + prefix with message length\n        network, // send to the remote peer\n        (source) => decode(source, { lengthDecoder: uint16BEDecode }), // read message length prefix\n        decryptStream(handshake, this.metrics), // decrypt the incoming data\n        secure // pipe to the wrapper\n        );\n        return user;\n    }\n}\n//# sourceMappingURL=noise.js.map","export function registerMetrics(metrics) {\n    return {\n        xxHandshakeSuccesses: metrics.registerCounter('libp2p_noise_xxhandshake_successes_total', {\n            help: 'Total count of noise xxHandshakes successes_'\n        }),\n        xxHandshakeErrors: metrics.registerCounter('libp2p_noise_xxhandshake_error_total', {\n            help: 'Total count of noise xxHandshakes errors'\n        }),\n        encryptedPackets: metrics.registerCounter('libp2p_noise_encrypted_packets_total', {\n            help: 'Total count of noise encrypted packets successfully'\n        }),\n        decryptedPackets: metrics.registerCounter('libp2p_noise_decrypted_packets_total', {\n            help: 'Total count of noise decrypted packets'\n        }),\n        decryptErrors: metrics.registerCounter('libp2p_noise_decrypt_errors_total', {\n            help: 'Total count of noise decrypt errors'\n        })\n    };\n}\n//# sourceMappingURL=metrics.js.map","import { pair } from './index.js';\n/**\n * Two duplex streams that are attached to each other\n */\nexport function duplexPair() {\n    const a = pair();\n    const b = pair();\n    return [\n        {\n            source: a.source,\n            sink: b.sink\n        },\n        {\n            source: b.source,\n            sink: a.sink\n        }\n    ];\n}\n//# sourceMappingURL=duplex.js.map","import { NOISE_MSG_MAX_LENGTH_BYTES, NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG } from '../constants.js';\nimport { uint16BEEncode } from '../encoder.js';\nconst CHACHA_TAG_LENGTH = 16;\n// Returns generator that encrypts payload from the user\nexport function encryptStream(handshake, metrics) {\n    return async function* (source) {\n        for await (const chunk of source) {\n            for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {\n                let end = i + NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;\n                if (end > chunk.length) {\n                    end = chunk.length;\n                }\n                const data = handshake.encrypt(chunk.subarray(i, end), handshake.session);\n                metrics?.encryptedPackets.increment();\n                yield uint16BEEncode(data.byteLength);\n                yield data;\n            }\n        }\n    };\n}\n// Decrypt received payload to the user\nexport function decryptStream(handshake, metrics) {\n    return async function* (source) {\n        for await (const chunk of source) {\n            for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES) {\n                let end = i + NOISE_MSG_MAX_LENGTH_BYTES;\n                if (end > chunk.length) {\n                    end = chunk.length;\n                }\n                if (end - CHACHA_TAG_LENGTH < i) {\n                    throw new Error('Invalid chunk');\n                }\n                const encrypted = chunk.subarray(i, end);\n                // memory allocation is not cheap so reuse the encrypted Uint8Array\n                // see https://github.com/ChainSafe/js-libp2p-noise/pull/242#issue-1422126164\n                // this is ok because chacha20 reads bytes one by one and don't reread after that\n                // it's also tested in https://github.com/ChainSafe/as-chacha20poly1305/pull/1/files#diff-25252846b58979dcaf4e41d47b3eadd7e4f335e7fb98da6c049b1f9cd011f381R48\n                const dst = chunk.subarray(i, end - CHACHA_TAG_LENGTH);\n                const { plaintext: decrypted, valid } = handshake.decrypt(encrypted, handshake.session, dst);\n                if (!valid) {\n                    metrics?.decryptErrors.increment();\n                    throw new Error('Failed to validate decrypted chunk');\n                }\n                metrics?.decryptedPackets.increment();\n                yield decrypted;\n            }\n        }\n    };\n}\n//# sourceMappingURL=streaming.js.map","import { Noise } from './noise.js';\nexport { pureJsCrypto } from './crypto/js.js';\nexport function noise(init = {}) {\n    return () => new Noise(init);\n}\n//# sourceMappingURL=index.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","/**\n * @packageDocumentation\n *\n * @example\n *\n * ```js\n * import { abortableSource } from 'abortable-iterator'\n *\n * async function main () {\n *   // An example function that creates an async iterator that yields an increasing\n *   // number every x milliseconds and NEVER ENDS!\n *   const asyncCounter = async function * (start, delay) {\n *     let i = start\n *     while (true) {\n *       yield new Promise(resolve => setTimeout(() => resolve(i++), delay))\n *     }\n *   }\n *\n *   // Create a counter that'll yield numbers from 0 upwards every second\n *   const everySecond = asyncCounter(0, 1000)\n *\n *   // Make everySecond abortable!\n *   const controller = new AbortController()\n *   const abortableEverySecond = abortableSource(everySecond, controller.signal)\n *\n *   // Abort after 5 seconds\n *   setTimeout(() => controller.abort(), 5000)\n *\n *   try {\n *     // Start the iteration, which will throw after 5 seconds when it is aborted\n *     for await (const n of abortableEverySecond) {\n *       console.log(n)\n *     }\n *   } catch (err) {\n *     if (err.code === 'ERR_ABORTED') {\n *       // Expected - all ok :D\n *     } else {\n *       throw err\n *     }\n *   }\n * }\n *\n * main()\n * ```\n */\nimport { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n/**\n * Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\n */\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","// Protocol violation errors\nexport const ERR_INVALID_FRAME = 'ERR_INVALID_FRAME';\nexport const ERR_UNREQUESTED_PING = 'ERR_UNREQUESTED_PING';\nexport const ERR_NOT_MATCHING_PING = 'ERR_NOT_MATCHING_PING';\nexport const ERR_STREAM_ALREADY_EXISTS = 'ERR_STREAM_ALREADY_EXISTS';\nexport const ERR_DECODE_INVALID_VERSION = 'ERR_DECODE_INVALID_VERSION';\nexport const ERR_BOTH_CLIENTS = 'ERR_BOTH_CLIENTS';\nexport const ERR_RECV_WINDOW_EXCEEDED = 'ERR_RECV_WINDOW_EXCEEDED';\nexport const PROTOCOL_ERRORS = new Set([\n    ERR_INVALID_FRAME,\n    ERR_UNREQUESTED_PING,\n    ERR_NOT_MATCHING_PING,\n    ERR_STREAM_ALREADY_EXISTS,\n    ERR_DECODE_INVALID_VERSION,\n    ERR_BOTH_CLIENTS,\n    ERR_RECV_WINDOW_EXCEEDED\n]);\n// local errors\nexport const ERR_INVALID_CONFIG = 'ERR_INVALID_CONFIG';\nexport const ERR_MUXER_LOCAL_CLOSED = 'ERR_MUXER_LOCAL_CLOSED';\nexport const ERR_MUXER_REMOTE_CLOSED = 'ERR_MUXER_REMOTE_CLOSED';\nexport const ERR_STREAM_RESET = 'ERR_STREAM_RESET';\nexport const ERR_STREAM_ABORT = 'ERR_STREAM_ABORT';\nexport const ERR_MAX_OUTBOUND_STREAMS_EXCEEDED = 'ERROR_MAX_OUTBOUND_STREAMS_EXCEEDED';\nexport const ERR_DECODE_IN_PROGRESS = 'ERR_DECODE_IN_PROGRESS';\n/**\n * INITIAL_STREAM_WINDOW is the initial stream window size.\n *\n * Not an implementation choice, this is defined in the specification\n */\nexport const INITIAL_STREAM_WINDOW = 256 * 1024;\n/**\n * Default max stream window\n */\nexport const MAX_STREAM_WINDOW = 16 * 1024 * 1024;\n//# sourceMappingURL=constants.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { logger } from '@libp2p/logger';\nimport { ERR_INVALID_CONFIG, INITIAL_STREAM_WINDOW, MAX_STREAM_WINDOW } from './constants.js';\nexport const defaultConfig = {\n    log: logger('libp2p:yamux'),\n    enableKeepAlive: true,\n    keepAliveInterval: 30000,\n    maxInboundStreams: 1000,\n    maxOutboundStreams: 1000,\n    initialStreamWindowSize: INITIAL_STREAM_WINDOW,\n    maxStreamWindowSize: MAX_STREAM_WINDOW,\n    maxMessageSize: 64 * 1024\n};\nexport function verifyConfig(config) {\n    if (config.keepAliveInterval <= 0) {\n        throw new CodeError('keep-alive interval must be positive', ERR_INVALID_CONFIG);\n    }\n    if (config.maxInboundStreams < 0) {\n        throw new CodeError('max inbound streams must be larger or equal 0', ERR_INVALID_CONFIG);\n    }\n    if (config.maxOutboundStreams < 0) {\n        throw new CodeError('max outbound streams must be larger or equal 0', ERR_INVALID_CONFIG);\n    }\n    if (config.initialStreamWindowSize < INITIAL_STREAM_WINDOW) {\n        throw new CodeError('InitialStreamWindowSize must be larger or equal 256 kB', ERR_INVALID_CONFIG);\n    }\n    if (config.maxStreamWindowSize < config.initialStreamWindowSize) {\n        throw new CodeError('MaxStreamWindowSize must be larger than the InitialStreamWindowSize', ERR_INVALID_CONFIG);\n    }\n    if (config.maxStreamWindowSize > 2 ** 32 - 1) {\n        throw new CodeError('MaxStreamWindowSize must be less than equal MAX_UINT32', ERR_INVALID_CONFIG);\n    }\n    if (config.maxMessageSize < 1024) {\n        throw new CodeError('MaxMessageSize must be greater than a kilobyte', ERR_INVALID_CONFIG);\n    }\n}\n//# sourceMappingURL=config.js.map","export var FrameType;\n(function (FrameType) {\n    /** Used to transmit data. May transmit zero length payloads depending on the flags. */\n    FrameType[FrameType[\"Data\"] = 0] = \"Data\";\n    /** Used to updated the senders receive window size. This is used to implement per-session flow control. */\n    FrameType[FrameType[\"WindowUpdate\"] = 1] = \"WindowUpdate\";\n    /** Used to measure RTT. It can also be used to heart-beat and do keep-alives over TCP. */\n    FrameType[FrameType[\"Ping\"] = 2] = \"Ping\";\n    /** Used to close a session. */\n    FrameType[FrameType[\"GoAway\"] = 3] = \"GoAway\";\n})(FrameType || (FrameType = {}));\nexport var Flag;\n(function (Flag) {\n    /** Signals the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate outbound. */\n    Flag[Flag[\"SYN\"] = 1] = \"SYN\";\n    /** Acknowledges the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate response. */\n    Flag[Flag[\"ACK\"] = 2] = \"ACK\";\n    /** Performs a half-close of a stream. May be sent with a data message or window update. */\n    Flag[Flag[\"FIN\"] = 4] = \"FIN\";\n    /** Reset a stream immediately. May be sent with a data or window update message. */\n    Flag[Flag[\"RST\"] = 8] = \"RST\";\n})(Flag || (Flag = {}));\nconst flagCodes = Object.values(Flag).filter((x) => typeof x !== 'string');\nexport const YAMUX_VERSION = 0;\nexport var GoAwayCode;\n(function (GoAwayCode) {\n    GoAwayCode[GoAwayCode[\"NormalTermination\"] = 0] = \"NormalTermination\";\n    GoAwayCode[GoAwayCode[\"ProtocolError\"] = 1] = \"ProtocolError\";\n    GoAwayCode[GoAwayCode[\"InternalError\"] = 2] = \"InternalError\";\n})(GoAwayCode || (GoAwayCode = {}));\nexport const HEADER_LENGTH = 12;\nexport function stringifyHeader(header) {\n    const flags = flagCodes.filter(f => (header.flag & f) === f).map(f => Flag[f]).join('|');\n    return `streamID=${header.streamID} type=${FrameType[header.type]} flag=${flags} length=${header.length}`;\n}\n//# sourceMappingURL=frame.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { ERR_DECODE_INVALID_VERSION, ERR_DECODE_IN_PROGRESS } from './constants.js';\nimport { FrameType, HEADER_LENGTH, YAMUX_VERSION } from './frame.js';\n// used to bitshift in decoding\n// native bitshift can overflow into a negative number, so we bitshift by multiplying by a power of 2\nconst twoPow24 = 2 ** 24;\n/**\n * Decode a header from the front of a buffer\n *\n * @param data - Assumed to have enough bytes for a header\n */\nexport function decodeHeader(data) {\n    if (data[0] !== YAMUX_VERSION) {\n        throw new CodeError('Invalid frame version', ERR_DECODE_INVALID_VERSION);\n    }\n    return {\n        type: data[1],\n        flag: (data[2] << 8) + data[3],\n        streamID: (data[4] * twoPow24) + (data[5] << 16) + (data[6] << 8) + data[7],\n        length: (data[8] * twoPow24) + (data[9] << 16) + (data[10] << 8) + data[11]\n    };\n}\n/**\n * Decodes yamux frames from a source\n */\nexport class Decoder {\n    source;\n    /** Buffer for in-progress frames */\n    buffer;\n    /** Used to sanity check against decoding while in an inconsistent state */\n    frameInProgress;\n    constructor(source) {\n        // Normally, when entering a for-await loop with an iterable/async iterable, the only ways to exit the loop are:\n        // 1. exhaust the iterable\n        // 2. throw an error - slow, undesirable if there's not actually an error\n        // 3. break or return - calls the iterable's `return` method, finalizing the iterable, no more iteration possible\n        //\n        // In this case, we want to enter (and exit) a for-await loop per chunked data frame and continue processing the iterable.\n        // To do this, we strip the `return` method from the iterator and can now `break` early and continue iterating.\n        // Exiting the main for-await is still possible via 1. and 2.\n        this.source = returnlessSource(source);\n        this.buffer = new Uint8ArrayList();\n        this.frameInProgress = false;\n    }\n    /**\n     * Emits frames from the decoder source.\n     *\n     * Note: If `readData` is emitted, it _must_ be called before the next iteration\n     * Otherwise an error is thrown\n     */\n    async *emitFrames() {\n        for await (const chunk of this.source) {\n            this.buffer.append(chunk);\n            // Loop to consume as many bytes from the buffer as possible\n            // Eg: when a single chunk contains several frames\n            while (true) {\n                const header = this.readHeader();\n                if (header === undefined) {\n                    break;\n                }\n                const { type, length } = header;\n                if (type === FrameType.Data) {\n                    // This is a data frame, the frame body must still be read\n                    // `readData` must be called before the next iteration here\n                    this.frameInProgress = true;\n                    yield {\n                        header,\n                        readData: this.readBytes.bind(this, length)\n                    };\n                }\n                else {\n                    yield { header };\n                }\n            }\n        }\n    }\n    readHeader() {\n        // Sanity check to ensure a header isn't read when another frame is partially decoded\n        // In practice this shouldn't happen\n        if (this.frameInProgress) {\n            throw new CodeError('decoding frame already in progress', ERR_DECODE_IN_PROGRESS);\n        }\n        if (this.buffer.length < HEADER_LENGTH) {\n            // not enough data yet\n            return;\n        }\n        const header = decodeHeader(this.buffer.subarray(0, HEADER_LENGTH));\n        this.buffer.consume(HEADER_LENGTH);\n        return header;\n    }\n    async readBytes(length) {\n        if (this.buffer.length < length) {\n            for await (const chunk of this.source) {\n                this.buffer.append(chunk);\n                if (this.buffer.length >= length) {\n                    // see note above, the iterator is not `return`ed here\n                    break;\n                }\n            }\n        }\n        const out = this.buffer.sublist(0, length);\n        this.buffer.consume(length);\n        // The next frame can now be decoded\n        this.frameInProgress = false;\n        return out;\n    }\n}\n/**\n * Strip the `return` method from a `Source`\n */\nexport function returnlessSource(source) {\n    if (source[Symbol.iterator] !== undefined) {\n        const iterator = source[Symbol.iterator]();\n        iterator.return = undefined;\n        return {\n            [Symbol.iterator]() { return iterator; }\n        };\n    }\n    else if (source[Symbol.asyncIterator] !== undefined) {\n        const iterator = source[Symbol.asyncIterator]();\n        iterator.return = undefined;\n        return {\n            [Symbol.asyncIterator]() { return iterator; }\n        };\n    }\n    else {\n        throw new Error('a source must be either an iterable or an async iterable');\n    }\n}\n//# sourceMappingURL=decode.js.map","import { HEADER_LENGTH } from './frame.js';\nexport function encodeHeader(header) {\n    const frame = new Uint8Array(HEADER_LENGTH);\n    // always assume version 0\n    // frameView.setUint8(0, header.version)\n    frame[1] = header.type;\n    frame[2] = header.flag >>> 8;\n    frame[3] = header.flag;\n    frame[4] = header.streamID >>> 24;\n    frame[5] = header.streamID >>> 16;\n    frame[6] = header.streamID >>> 8;\n    frame[7] = header.streamID;\n    frame[8] = header.length >>> 24;\n    frame[9] = header.length >>> 16;\n    frame[10] = header.length >>> 8;\n    frame[11] = header.length;\n    return frame;\n}\n//# sourceMappingURL=encode.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction forEach(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const thing of source) {\n                await fn(thing);\n                yield thing;\n            }\n        })();\n    }\n    // if fn function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    if (typeof res?.then === 'function') {\n        return (async function* () {\n            yield value;\n            for await (const val of peekable) {\n                await fn(val);\n                yield val;\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        yield value;\n        for (const val of peekable) {\n            func(val);\n            yield val;\n        }\n    })();\n}\nexport default forEach;\n//# sourceMappingURL=index.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { AbstractStream } from '@libp2p/interface/stream-muxer/stream';\nimport each from 'it-foreach';\nimport { ERR_RECV_WINDOW_EXCEEDED, ERR_STREAM_ABORT, INITIAL_STREAM_WINDOW } from './constants.js';\nimport { Flag, FrameType, HEADER_LENGTH } from './frame.js';\nexport var StreamState;\n(function (StreamState) {\n    StreamState[StreamState[\"Init\"] = 0] = \"Init\";\n    StreamState[StreamState[\"SYNSent\"] = 1] = \"SYNSent\";\n    StreamState[StreamState[\"SYNReceived\"] = 2] = \"SYNReceived\";\n    StreamState[StreamState[\"Established\"] = 3] = \"Established\";\n    StreamState[StreamState[\"Finished\"] = 4] = \"Finished\";\n})(StreamState || (StreamState = {}));\n/** YamuxStream is used to represent a logical stream within a session */\nexport class YamuxStream extends AbstractStream {\n    name;\n    state;\n    config;\n    _id;\n    /** The number of available bytes to send */\n    sendWindowCapacity;\n    /** Callback to notify that the sendWindowCapacity has been updated */\n    sendWindowCapacityUpdate;\n    /** The number of bytes available to receive in a full window */\n    recvWindow;\n    /** The number of available bytes to receive */\n    recvWindowCapacity;\n    /**\n     * An 'epoch' is the time it takes to process and read data\n     *\n     * Used in conjunction with RTT to determine whether to increase the recvWindow\n     */\n    epochStart;\n    getRTT;\n    sendFrame;\n    constructor(init) {\n        super({\n            ...init,\n            onEnd: (err) => {\n                this.state = StreamState.Finished;\n                init.onEnd?.(err);\n            }\n        });\n        this.config = init.config;\n        this._id = parseInt(init.id, 10);\n        this.name = init.name;\n        this.state = init.state;\n        this.sendWindowCapacity = INITIAL_STREAM_WINDOW;\n        this.recvWindow = this.config.initialStreamWindowSize;\n        this.recvWindowCapacity = this.recvWindow;\n        this.epochStart = Date.now();\n        this.getRTT = init.getRTT;\n        this.sendFrame = init.sendFrame;\n        this.source = each(this.source, () => {\n            this.sendWindowUpdate();\n        });\n    }\n    /**\n     * Send a message to the remote muxer informing them a new stream is being\n     * opened.\n     *\n     * This is a noop for Yamux because the first window update is sent when\n     * .newStream is called on the muxer which opens the stream on the remote.\n     */\n    async sendNewStream() {\n    }\n    /**\n     * Send a data message to the remote muxer\n     */\n    async sendData(buf, options = {}) {\n        buf = buf.sublist();\n        // send in chunks, waiting for window updates\n        while (buf.byteLength !== 0) {\n            // wait for the send window to refill\n            if (this.sendWindowCapacity === 0) {\n                await this.waitForSendWindowCapacity(options);\n            }\n            // check we didn't close while waiting for send window capacity\n            if (this.status !== 'open') {\n                return;\n            }\n            // send as much as we can\n            const toSend = Math.min(this.sendWindowCapacity, this.config.maxMessageSize - HEADER_LENGTH, buf.length);\n            const flags = this.getSendFlags();\n            this.sendFrame({\n                type: FrameType.Data,\n                flag: flags,\n                streamID: this._id,\n                length: toSend\n            }, buf.subarray(0, toSend));\n            this.sendWindowCapacity -= toSend;\n            buf.consume(toSend);\n        }\n    }\n    /**\n     * Send a reset message to the remote muxer\n     */\n    async sendReset() {\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: Flag.RST,\n            streamID: this._id,\n            length: 0\n        });\n    }\n    /**\n     * Send a message to the remote muxer, informing them no more data messages\n     * will be sent by this end of the stream\n     */\n    async sendCloseWrite() {\n        const flags = this.getSendFlags() | Flag.FIN;\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: flags,\n            streamID: this._id,\n            length: 0\n        });\n    }\n    /**\n     * Send a message to the remote muxer, informing them no more data messages\n     * will be read by this end of the stream\n     */\n    async sendCloseRead() {\n    }\n    /**\n     * Wait for the send window to be non-zero\n     *\n     * Will throw with ERR_STREAM_ABORT if the stream gets aborted\n     */\n    async waitForSendWindowCapacity(options = {}) {\n        if (this.sendWindowCapacity > 0) {\n            return;\n        }\n        let resolve;\n        let reject;\n        const abort = () => {\n            if (this.status === 'open') {\n                reject(new CodeError('stream aborted', ERR_STREAM_ABORT));\n            }\n            else {\n                // the stream was closed already, ignore the failure to send\n                resolve();\n            }\n        };\n        options.signal?.addEventListener('abort', abort);\n        try {\n            await new Promise((_resolve, _reject) => {\n                this.sendWindowCapacityUpdate = () => {\n                    _resolve();\n                };\n                reject = _reject;\n                resolve = _resolve;\n            });\n        }\n        finally {\n            options.signal?.removeEventListener('abort', abort);\n        }\n    }\n    /**\n     * handleWindowUpdate is called when the stream receives a window update frame\n     */\n    handleWindowUpdate(header) {\n        this.log?.trace('stream received window update id=%s', this._id);\n        this.processFlags(header.flag);\n        // increase send window\n        const available = this.sendWindowCapacity;\n        this.sendWindowCapacity += header.length;\n        // if the update increments a 0 availability, notify the stream that sending can resume\n        if (available === 0 && header.length > 0) {\n            this.sendWindowCapacityUpdate?.();\n        }\n    }\n    /**\n     * handleData is called when the stream receives a data frame\n     */\n    async handleData(header, readData) {\n        this.log?.trace('stream received data id=%s', this._id);\n        this.processFlags(header.flag);\n        // check that our recv window is not exceeded\n        if (this.recvWindowCapacity < header.length) {\n            throw new CodeError('receive window exceeded', ERR_RECV_WINDOW_EXCEEDED, { available: this.recvWindowCapacity, recv: header.length });\n        }\n        const data = await readData();\n        this.recvWindowCapacity -= header.length;\n        this.sourcePush(data);\n    }\n    /**\n     * processFlags is used to update the state of the stream based on set flags, if any.\n     */\n    processFlags(flags) {\n        if ((flags & Flag.ACK) === Flag.ACK) {\n            if (this.state === StreamState.SYNSent) {\n                this.state = StreamState.Established;\n            }\n        }\n        if ((flags & Flag.FIN) === Flag.FIN) {\n            this.remoteCloseWrite();\n        }\n        if ((flags & Flag.RST) === Flag.RST) {\n            this.reset();\n        }\n    }\n    /**\n     * getSendFlags determines any flags that are appropriate\n     * based on the current stream state.\n     *\n     * The state is updated as a side-effect.\n     */\n    getSendFlags() {\n        switch (this.state) {\n            case StreamState.Init:\n                this.state = StreamState.SYNSent;\n                return Flag.SYN;\n            case StreamState.SYNReceived:\n                this.state = StreamState.Established;\n                return Flag.ACK;\n            default:\n                return 0;\n        }\n    }\n    /**\n     * potentially sends a window update enabling further writes to take place.\n     */\n    sendWindowUpdate() {\n        // determine the flags if any\n        const flags = this.getSendFlags();\n        // If the stream has already been established\n        // and we've processed data within the time it takes for 4 round trips\n        // then we (up to) double the recvWindow\n        const now = Date.now();\n        const rtt = this.getRTT();\n        if (flags === 0 && rtt > 0 && now - this.epochStart < rtt * 4) {\n            // we've already validated that maxStreamWindowSize can't be more than MAX_UINT32\n            this.recvWindow = Math.min(this.recvWindow * 2, this.config.maxStreamWindowSize);\n        }\n        if (this.recvWindowCapacity >= this.recvWindow && flags === 0) {\n            // a window update isn't needed\n            return;\n        }\n        // update the receive window\n        const delta = this.recvWindow - this.recvWindowCapacity;\n        this.recvWindowCapacity = this.recvWindow;\n        // update the epoch start\n        this.epochStart = now;\n        // send window update\n        this.sendFrame({\n            type: FrameType.WindowUpdate,\n            flag: flags,\n            streamID: this._id,\n            length: delta\n        });\n    }\n}\n//# sourceMappingURL=stream.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { logger } from '@libp2p/logger';\nimport { abortableSource } from 'abortable-iterator';\nimport { pipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport { defaultConfig, verifyConfig } from './config.js';\nimport { ERR_BOTH_CLIENTS, ERR_INVALID_FRAME, ERR_MAX_OUTBOUND_STREAMS_EXCEEDED, ERR_MUXER_LOCAL_CLOSED, ERR_MUXER_REMOTE_CLOSED, ERR_NOT_MATCHING_PING, ERR_STREAM_ALREADY_EXISTS, ERR_UNREQUESTED_PING, PROTOCOL_ERRORS } from './constants.js';\nimport { Decoder } from './decode.js';\nimport { encodeHeader } from './encode.js';\nimport { Flag, FrameType, GoAwayCode, stringifyHeader } from './frame.js';\nimport { StreamState, YamuxStream } from './stream.js';\nconst YAMUX_PROTOCOL_ID = '/yamux/1.0.0';\nconst CLOSE_TIMEOUT = 500;\nexport class Yamux {\n    protocol = YAMUX_PROTOCOL_ID;\n    _init;\n    constructor(init = {}) {\n        this._init = init;\n    }\n    createStreamMuxer(init) {\n        return new YamuxMuxer({\n            ...this._init,\n            ...init\n        });\n    }\n}\nexport class YamuxMuxer {\n    protocol = YAMUX_PROTOCOL_ID;\n    source;\n    sink;\n    config;\n    log;\n    /** Used to close the muxer from either the sink or source */\n    closeController;\n    /** The next stream id to be used when initiating a new stream */\n    nextStreamID;\n    /** Primary stream mapping, streamID => stream */\n    _streams;\n    /** The next ping id to be used when pinging */\n    nextPingID;\n    /** Tracking info for the currently active ping */\n    activePing;\n    /** Round trip time */\n    rtt;\n    /** True if client, false if server */\n    client;\n    localGoAway;\n    remoteGoAway;\n    /** Number of tracked inbound streams */\n    numInboundStreams;\n    /** Number of tracked outbound streams */\n    numOutboundStreams;\n    onIncomingStream;\n    onStreamEnd;\n    constructor(init) {\n        this.client = init.direction === 'outbound';\n        this.config = { ...defaultConfig, ...init };\n        this.log = this.config.log;\n        verifyConfig(this.config);\n        this.closeController = new AbortController();\n        this.onIncomingStream = init.onIncomingStream;\n        this.onStreamEnd = init.onStreamEnd;\n        this._streams = new Map();\n        this.source = pushable({\n            onEnd: () => {\n                this.log?.trace('muxer source ended');\n                this._streams.forEach(stream => {\n                    stream.destroy();\n                });\n            }\n        });\n        this.sink = async (source) => {\n            source = abortableSource(source, this.closeController.signal, { returnOnAbort: true });\n            let reason, error;\n            try {\n                const decoder = new Decoder(source);\n                await pipe(decoder.emitFrames.bind(decoder), async (source) => {\n                    for await (const { header, readData } of source) {\n                        await this.handleFrame(header, readData);\n                    }\n                });\n                reason = GoAwayCode.NormalTermination;\n            }\n            catch (err) {\n                // either a protocol or internal error\n                const errCode = err.code;\n                if (PROTOCOL_ERRORS.has(errCode)) {\n                    this.log?.error('protocol error in sink', err);\n                    reason = GoAwayCode.ProtocolError;\n                }\n                else {\n                    this.log?.error('internal error in sink', err);\n                    reason = GoAwayCode.InternalError;\n                }\n                error = err;\n            }\n            this.log?.trace('muxer sink ended');\n            if (error != null) {\n                this.abort(error, reason);\n            }\n            else {\n                await this.close({ reason });\n            }\n        };\n        this.numInboundStreams = 0;\n        this.numOutboundStreams = 0;\n        // client uses odd streamIDs, server uses even streamIDs\n        this.nextStreamID = this.client ? 1 : 2;\n        this.nextPingID = 0;\n        this.rtt = 0;\n        this.log?.trace('muxer created');\n        if (this.config.enableKeepAlive) {\n            this.keepAliveLoop().catch(e => this.log?.error('keepalive error: %s', e));\n        }\n    }\n    get streams() {\n        return Array.from(this._streams.values());\n    }\n    newStream(name) {\n        if (this.remoteGoAway !== undefined) {\n            throw new CodeError('muxer closed remotely', ERR_MUXER_REMOTE_CLOSED);\n        }\n        if (this.localGoAway !== undefined) {\n            throw new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED);\n        }\n        const id = this.nextStreamID;\n        this.nextStreamID += 2;\n        // check against our configured maximum number of outbound streams\n        if (this.numOutboundStreams >= this.config.maxOutboundStreams) {\n            throw new CodeError('max outbound streams exceeded', ERR_MAX_OUTBOUND_STREAMS_EXCEEDED);\n        }\n        this.log?.trace('new outgoing stream id=%s', id);\n        const stream = this._newStream(id, name, StreamState.Init, 'outbound');\n        this._streams.set(id, stream);\n        this.numOutboundStreams++;\n        // send a window update to open the stream on the receiver end\n        stream.sendWindowUpdate();\n        return stream;\n    }\n    /**\n     * Initiate a ping and wait for a response\n     *\n     * Note: only a single ping will be initiated at a time.\n     * If a ping is already in progress, a new ping will not be initiated.\n     *\n     * @returns the round-trip-time in milliseconds\n     */\n    async ping() {\n        if (this.remoteGoAway !== undefined) {\n            throw new CodeError('muxer closed remotely', ERR_MUXER_REMOTE_CLOSED);\n        }\n        if (this.localGoAway !== undefined) {\n            throw new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED);\n        }\n        // An active ping does not yet exist, handle the process here\n        if (this.activePing === undefined) {\n            // create active ping\n            let _resolve = () => { };\n            this.activePing = {\n                id: this.nextPingID++,\n                // this promise awaits resolution or the close controller aborting\n                promise: new Promise((resolve, reject) => {\n                    const closed = () => {\n                        reject(new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED));\n                    };\n                    this.closeController.signal.addEventListener('abort', closed, { once: true });\n                    _resolve = () => {\n                        this.closeController.signal.removeEventListener('abort', closed);\n                        resolve();\n                    };\n                }),\n                resolve: _resolve\n            };\n            // send ping\n            const start = Date.now();\n            this.sendPing(this.activePing.id);\n            // await pong\n            try {\n                await this.activePing.promise;\n            }\n            finally {\n                // clean-up active ping\n                delete this.activePing;\n            }\n            // update rtt\n            const end = Date.now();\n            this.rtt = end - start;\n        }\n        else {\n            // an active ping is already in progress, piggyback off that\n            await this.activePing.promise;\n        }\n        return this.rtt;\n    }\n    /**\n     * Get the ping round trip time\n     *\n     * Note: Will return 0 if no successful ping has yet been completed\n     *\n     * @returns the round-trip-time in milliseconds\n     */\n    getRTT() {\n        return this.rtt;\n    }\n    /**\n     * Close the muxer\n     */\n    async close(options = {}) {\n        if (this.closeController.signal.aborted) {\n            // already closed\n            return;\n        }\n        const reason = options?.reason ?? GoAwayCode.NormalTermination;\n        this.log?.trace('muxer close reason=%s', reason);\n        options.signal = options.signal ?? AbortSignal.timeout(CLOSE_TIMEOUT);\n        try {\n            await Promise.all([...this._streams.values()].map(async (s) => s.close(options)));\n            // send reason to the other side, allow the other side to close gracefully\n            this.sendGoAway(reason);\n            this._closeMuxer();\n        }\n        catch (err) {\n            this.abort(err);\n        }\n    }\n    abort(err, reason) {\n        if (this.closeController.signal.aborted) {\n            // already closed\n            return;\n        }\n        reason = reason ?? GoAwayCode.InternalError;\n        // If reason was provided, use that, otherwise use the presence of `err` to determine the reason\n        this.log?.error('muxer abort reason=%s error=%s', reason, err);\n        // Abort all underlying streams\n        for (const stream of this._streams.values()) {\n            stream.abort(err);\n        }\n        // send reason to the other side, allow the other side to close gracefully\n        this.sendGoAway(reason);\n        this._closeMuxer();\n    }\n    isClosed() {\n        return this.closeController.signal.aborted;\n    }\n    /**\n     * Called when either the local or remote shuts down the muxer\n     */\n    _closeMuxer() {\n        // stop the sink and any other processes\n        this.closeController.abort();\n        // stop the source\n        this.source.end();\n    }\n    /** Create a new stream */\n    _newStream(id, name, state, direction) {\n        if (this._streams.get(id) != null) {\n            throw new CodeError('Stream already exists', ERR_STREAM_ALREADY_EXISTS, { id });\n        }\n        const stream = new YamuxStream({\n            id: id.toString(),\n            name,\n            state,\n            direction,\n            sendFrame: this.sendFrame.bind(this),\n            onEnd: () => {\n                this.closeStream(id);\n                this.onStreamEnd?.(stream);\n            },\n            log: logger(`libp2p:yamux:${direction}:${id}`),\n            config: this.config,\n            getRTT: this.getRTT.bind(this)\n        });\n        return stream;\n    }\n    /**\n     * closeStream is used to close a stream once both sides have\n     * issued a close.\n     */\n    closeStream(id) {\n        if (this.client === (id % 2 === 0)) {\n            this.numInboundStreams--;\n        }\n        else {\n            this.numOutboundStreams--;\n        }\n        this._streams.delete(id);\n    }\n    async keepAliveLoop() {\n        const abortPromise = new Promise((_resolve, reject) => { this.closeController.signal.addEventListener('abort', reject, { once: true }); });\n        this.log?.trace('muxer keepalive enabled interval=%s', this.config.keepAliveInterval);\n        while (true) {\n            let timeoutId;\n            try {\n                await Promise.race([\n                    abortPromise,\n                    new Promise((resolve) => {\n                        timeoutId = setTimeout(resolve, this.config.keepAliveInterval);\n                    })\n                ]);\n                this.ping().catch(e => this.log?.error('ping error: %s', e));\n            }\n            catch (e) {\n                // closed\n                clearInterval(timeoutId);\n                return;\n            }\n        }\n    }\n    async handleFrame(header, readData) {\n        const { streamID, type, length } = header;\n        this.log?.trace('received frame %s', stringifyHeader(header));\n        if (streamID === 0) {\n            switch (type) {\n                case FrameType.Ping:\n                    {\n                        this.handlePing(header);\n                        return;\n                    }\n                case FrameType.GoAway:\n                    {\n                        this.handleGoAway(length);\n                        return;\n                    }\n                default:\n                    // Invalid state\n                    throw new CodeError('Invalid frame type', ERR_INVALID_FRAME, { header });\n            }\n        }\n        else {\n            switch (header.type) {\n                case FrameType.Data:\n                case FrameType.WindowUpdate:\n                    {\n                        await this.handleStreamMessage(header, readData);\n                        return;\n                    }\n                default:\n                    // Invalid state\n                    throw new CodeError('Invalid frame type', ERR_INVALID_FRAME, { header });\n            }\n        }\n    }\n    handlePing(header) {\n        // If the ping  is initiated by the sender, send a response\n        if (header.flag === Flag.SYN) {\n            this.log?.trace('received ping request pingId=%s', header.length);\n            this.sendPing(header.length, Flag.ACK);\n        }\n        else if (header.flag === Flag.ACK) {\n            this.log?.trace('received ping response pingId=%s', header.length);\n            this.handlePingResponse(header.length);\n        }\n        else {\n            // Invalid state\n            throw new CodeError('Invalid frame flag', ERR_INVALID_FRAME, { header });\n        }\n    }\n    handlePingResponse(pingId) {\n        if (this.activePing === undefined) {\n            // this ping was not requested\n            throw new CodeError('ping not requested', ERR_UNREQUESTED_PING);\n        }\n        if (this.activePing.id !== pingId) {\n            // this ping doesn't match our active ping request\n            throw new CodeError('ping doesn\\'t match our id', ERR_NOT_MATCHING_PING);\n        }\n        // valid ping response\n        this.activePing.resolve();\n    }\n    handleGoAway(reason) {\n        this.log?.trace('received GoAway reason=%s', GoAwayCode[reason] ?? 'unknown');\n        this.remoteGoAway = reason;\n        // If the other side is friendly, they would have already closed all streams before sending a GoAway\n        // In case they weren't, reset all streams\n        for (const stream of this._streams.values()) {\n            stream.reset();\n        }\n        this._closeMuxer();\n    }\n    async handleStreamMessage(header, readData) {\n        const { streamID, flag, type } = header;\n        if ((flag & Flag.SYN) === Flag.SYN) {\n            this.incomingStream(streamID);\n        }\n        const stream = this._streams.get(streamID);\n        if (stream === undefined) {\n            if (type === FrameType.Data) {\n                this.log?.('discarding data for stream id=%s', streamID);\n                if (readData === undefined) {\n                    throw new Error('unreachable');\n                }\n                await readData();\n            }\n            else {\n                this.log?.('frame for missing stream id=%s', streamID);\n            }\n            return;\n        }\n        switch (type) {\n            case FrameType.WindowUpdate: {\n                stream.handleWindowUpdate(header);\n                return;\n            }\n            case FrameType.Data: {\n                if (readData === undefined) {\n                    throw new Error('unreachable');\n                }\n                await stream.handleData(header, readData);\n                return;\n            }\n            default:\n                throw new Error('unreachable');\n        }\n    }\n    incomingStream(id) {\n        if (this.client !== (id % 2 === 0)) {\n            throw new CodeError('both endpoints are clients', ERR_BOTH_CLIENTS);\n        }\n        if (this._streams.has(id)) {\n            return;\n        }\n        this.log?.trace('new incoming stream id=%s', id);\n        if (this.localGoAway !== undefined) {\n            // reject (reset) immediately if we are doing a go away\n            this.sendFrame({\n                type: FrameType.WindowUpdate,\n                flag: Flag.RST,\n                streamID: id,\n                length: 0\n            });\n            return;\n        }\n        // check against our configured maximum number of inbound streams\n        if (this.numInboundStreams >= this.config.maxInboundStreams) {\n            this.log?.('maxIncomingStreams exceeded, forcing stream reset');\n            this.sendFrame({\n                type: FrameType.WindowUpdate,\n                flag: Flag.RST,\n                streamID: id,\n                length: 0\n            });\n            return;\n        }\n        // allocate a new stream\n        const stream = this._newStream(id, undefined, StreamState.SYNReceived, 'inbound');\n        this.numInboundStreams++;\n        // the stream should now be tracked\n        this._streams.set(id, stream);\n        this.onIncomingStream?.(stream);\n    }\n    sendFrame(header, data) {\n        this.log?.trace('sending frame %s', stringifyHeader(header));\n        if (header.type === FrameType.Data) {\n            if (data === undefined) {\n                throw new CodeError('invalid frame', ERR_INVALID_FRAME);\n            }\n            this.source.push(encodeHeader(header));\n            this.source.push(data);\n        }\n        else {\n            this.source.push(encodeHeader(header));\n        }\n    }\n    sendPing(pingId, flag = Flag.SYN) {\n        if (flag === Flag.SYN) {\n            this.log?.trace('sending ping request pingId=%s', pingId);\n        }\n        else {\n            this.log?.trace('sending ping response pingId=%s', pingId);\n        }\n        this.sendFrame({\n            type: FrameType.Ping,\n            flag,\n            streamID: 0,\n            length: pingId\n        });\n    }\n    sendGoAway(reason = GoAwayCode.NormalTermination) {\n        this.log?.('sending GoAway reason=%s', GoAwayCode[reason]);\n        this.localGoAway = reason;\n        this.sendFrame({\n            type: FrameType.GoAway,\n            flag: 0,\n            streamID: 0,\n            length: reason\n        });\n    }\n}\n//# sourceMappingURL=muxer.js.map","import { Yamux } from './muxer.js';\nexport { GoAwayCode } from './frame.js';\nexport function yamux(init = {}) {\n    return () => new Yamux(init);\n}\n//# sourceMappingURL=index.js.map","import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { allFF, deepEqual } from \"./util.js\";\nexport const IPv4Len = 4;\nexport const IPv6Len = 16;\nexport const maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nexport const ipv4Prefix = new Uint8Array([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\nexport function maskIp(ip, mask) {\n    if (mask.length === IPv6Len && ip.length === IPv4Len && allFF(mask, 0, 11)) {\n        mask = mask.slice(12);\n    }\n    if (mask.length === IPv4Len &&\n        ip.length === IPv6Len &&\n        deepEqual(ip, ipv4Prefix, 0, 11)) {\n        ip = ip.slice(12);\n    }\n    const n = ip.length;\n    if (n != mask.length) {\n        throw new Error(\"Failed to mask ip\");\n    }\n    const out = new Uint8Array(n);\n    for (let i = 0; i < n; i++) {\n        out[i] = ip[i] & mask[i];\n    }\n    return out;\n}\nexport function containsIp(net, ip) {\n    if (typeof ip === \"string\") {\n        ip = parseIP(ip);\n    }\n    if (ip == null)\n        throw new Error(\"Invalid ip\");\n    if (ip.length !== net.network.length) {\n        return false;\n    }\n    for (let i = 0; i < ip.length; i++) {\n        if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function iPv4FromIPv6(ip) {\n    if (!isIPv4mappedIPv6(ip)) {\n        throw new Error(\"Must have 0xffff prefix\");\n    }\n    return ip.slice(12);\n}\nexport function isIPv4mappedIPv6(ip) {\n    return deepEqual(ip, ipv4Prefix, 0, 11);\n}\n//# sourceMappingURL=ip.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction first(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n                return entry;\n            }\n            return undefined;\n        })();\n    }\n    for (const entry of source) { // eslint-disable-line no-unreachable-loop\n        return entry;\n    }\n    return undefined;\n}\nexport default first;\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction batch(source, size = 1) {\n    size = Number(size);\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            let things = [];\n            if (size < 1) {\n                size = 1;\n            }\n            if (size !== Math.round(size)) {\n                throw new Error('Batch size must be an integer');\n            }\n            for await (const thing of source) {\n                things.push(thing);\n                while (things.length >= size) {\n                    yield things.slice(0, size);\n                    things = things.slice(size);\n                }\n            }\n            while (things.length > 0) {\n                yield things.slice(0, size);\n                things = things.slice(size);\n            }\n        }());\n    }\n    return (function* () {\n        let things = [];\n        if (size < 1) {\n            size = 1;\n        }\n        if (size !== Math.round(size)) {\n            throw new Error('Batch size must be an integer');\n        }\n        for (const thing of source) {\n            things.push(thing);\n            while (things.length >= size) {\n                yield things.slice(0, size);\n                things = things.slice(size);\n            }\n        }\n        while (things.length > 0) {\n            yield things.slice(0, size);\n            things = things.slice(size);\n        }\n    }());\n}\nexport default batch;\n//# sourceMappingURL=index.js.map","import batch from 'it-batch';\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function* parallelBatch(source, size = 1) {\n    for await (const tasks of batch(source, size)) {\n        const things = tasks.map(async (p) => {\n            return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }));\n        });\n        for (let i = 0; i < things.length; i++) {\n            const result = await things[i];\n            if (result.ok) {\n                yield result.value;\n            }\n            else {\n                throw result.err;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nconst DEFAULT_CHUNK_SIZE = 262144;\nexport const fixedSize = (options = {}) => {\n    const chunkSize = options.chunkSize ?? DEFAULT_CHUNK_SIZE;\n    return async function* fixedSizeChunker(source) {\n        let list = new Uint8ArrayList();\n        let currentLength = 0;\n        let emitted = false;\n        for await (const buffer of source) {\n            list.append(buffer);\n            currentLength += buffer.length;\n            while (currentLength >= chunkSize) {\n                yield list.slice(0, chunkSize);\n                emitted = true;\n                // throw away consumed bytes\n                if (chunkSize === list.length) {\n                    list = new Uint8ArrayList();\n                    currentLength = 0;\n                }\n                else {\n                    const newBl = new Uint8ArrayList();\n                    newBl.append(list.sublist(chunkSize));\n                    list = newBl;\n                    // update our offset\n                    currentLength -= chunkSize;\n                }\n            }\n        }\n        if (!emitted || currentLength > 0) {\n            // return any remaining bytes\n            yield list.subarray(0, currentLength);\n        }\n    };\n};\n//# sourceMappingURL=fixed-size.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Data;\n(function (Data) {\n    let DataType;\n    (function (DataType) {\n        DataType[\"Raw\"] = \"Raw\";\n        DataType[\"Directory\"] = \"Directory\";\n        DataType[\"File\"] = \"File\";\n        DataType[\"Metadata\"] = \"Metadata\";\n        DataType[\"Symlink\"] = \"Symlink\";\n        DataType[\"HAMTShard\"] = \"HAMTShard\";\n    })(DataType = Data.DataType || (Data.DataType = {}));\n    let __DataTypeValues;\n    (function (__DataTypeValues) {\n        __DataTypeValues[__DataTypeValues[\"Raw\"] = 0] = \"Raw\";\n        __DataTypeValues[__DataTypeValues[\"Directory\"] = 1] = \"Directory\";\n        __DataTypeValues[__DataTypeValues[\"File\"] = 2] = \"File\";\n        __DataTypeValues[__DataTypeValues[\"Metadata\"] = 3] = \"Metadata\";\n        __DataTypeValues[__DataTypeValues[\"Symlink\"] = 4] = \"Symlink\";\n        __DataTypeValues[__DataTypeValues[\"HAMTShard\"] = 5] = \"HAMTShard\";\n    })(__DataTypeValues || (__DataTypeValues = {}));\n    (function (DataType) {\n        DataType.codec = () => {\n            return enumeration(__DataTypeValues);\n        };\n    })(DataType = Data.DataType || (Data.DataType = {}));\n    let _codec;\n    Data.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    Data.DataType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (obj.filesize != null) {\n                    w.uint32(24);\n                    w.uint64(obj.filesize);\n                }\n                if (obj.blocksizes != null) {\n                    for (const value of obj.blocksizes) {\n                        w.uint32(32);\n                        w.uint64(value);\n                    }\n                }\n                if (obj.hashType != null) {\n                    w.uint32(40);\n                    w.uint64(obj.hashType);\n                }\n                if (obj.fanout != null) {\n                    w.uint32(48);\n                    w.uint64(obj.fanout);\n                }\n                if (obj.mode != null) {\n                    w.uint32(56);\n                    w.uint32(obj.mode);\n                }\n                if (obj.mtime != null) {\n                    w.uint32(66);\n                    UnixTime.codec().encode(obj.mtime, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    blocksizes: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = Data.DataType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        case 3:\n                            obj.filesize = reader.uint64();\n                            break;\n                        case 4:\n                            obj.blocksizes.push(reader.uint64());\n                            break;\n                        case 5:\n                            obj.hashType = reader.uint64();\n                            break;\n                        case 6:\n                            obj.fanout = reader.uint64();\n                            break;\n                        case 7:\n                            obj.mode = reader.uint32();\n                            break;\n                        case 8:\n                            obj.mtime = UnixTime.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Data.encode = (obj) => {\n        return encodeMessage(obj, Data.codec());\n    };\n    Data.decode = (buf) => {\n        return decodeMessage(buf, Data.codec());\n    };\n})(Data || (Data = {}));\nexport var UnixTime;\n(function (UnixTime) {\n    let _codec;\n    UnixTime.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Seconds != null) {\n                    w.uint32(8);\n                    w.int64(obj.Seconds);\n                }\n                if (obj.FractionalNanoseconds != null) {\n                    w.uint32(21);\n                    w.fixed32(obj.FractionalNanoseconds);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Seconds = reader.int64();\n                            break;\n                        case 2:\n                            obj.FractionalNanoseconds = reader.fixed32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    UnixTime.encode = (obj) => {\n        return encodeMessage(obj, UnixTime.codec());\n    };\n    UnixTime.decode = (buf) => {\n        return decodeMessage(buf, UnixTime.codec());\n    };\n})(UnixTime || (UnixTime = {}));\nexport var Metadata;\n(function (Metadata) {\n    let _codec;\n    Metadata.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.MimeType != null) {\n                    w.uint32(10);\n                    w.string(obj.MimeType);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.MimeType = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Metadata.encode = (obj) => {\n        return encodeMessage(obj, Metadata.codec());\n    };\n    Metadata.decode = (buf) => {\n        return decodeMessage(buf, Metadata.codec());\n    };\n})(Metadata || (Metadata = {}));\n//# sourceMappingURL=unixfs.js.map","import errcode from 'err-code';\nimport { Data as PBData } from './unixfs.js';\nconst types = {\n    Raw: 'raw',\n    Directory: 'directory',\n    File: 'file',\n    Metadata: 'metadata',\n    Symlink: 'symlink',\n    HAMTShard: 'hamt-sharded-directory'\n};\nconst dirTypes = [\n    'directory',\n    'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nclass UnixFS {\n    /**\n     * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n     */\n    static unmarshal(marshaled) {\n        const message = PBData.decode(marshaled);\n        const data = new UnixFS({\n            type: types[message.Type != null ? message.Type.toString() : 'File'],\n            data: message.Data,\n            blockSizes: message.blocksizes,\n            mode: message.mode,\n            mtime: message.mtime != null\n                ? {\n                    secs: message.mtime.Seconds ?? 0n,\n                    nsecs: message.mtime.FractionalNanoseconds\n                }\n                : undefined,\n            fanout: message.fanout\n        });\n        // make sure we honour the original mode\n        data._originalMode = message.mode ?? 0;\n        return data;\n    }\n    type;\n    data;\n    blockSizes;\n    hashType;\n    fanout;\n    mtime;\n    _mode;\n    _originalMode;\n    constructor(options = {\n        type: 'file'\n    }) {\n        const { type, data, blockSizes, hashType, fanout, mtime, mode } = options;\n        if (type != null && !Object.values(types).includes(type)) {\n            throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n        }\n        this.type = type ?? 'file';\n        this.data = data;\n        this.hashType = hashType;\n        this.fanout = fanout;\n        this.blockSizes = blockSizes ?? [];\n        this._originalMode = 0;\n        this.mode = mode;\n        this.mtime = mtime;\n    }\n    set mode(mode) {\n        if (mode == null) {\n            this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n        }\n        else {\n            this._mode = (mode & 0xFFF);\n        }\n    }\n    get mode() {\n        return this._mode;\n    }\n    isDirectory() {\n        return dirTypes.includes(this.type);\n    }\n    addBlockSize(size) {\n        this.blockSizes.push(size);\n    }\n    removeBlockSize(index) {\n        this.blockSizes.splice(index, 1);\n    }\n    /**\n     * Returns `0n` for directories or `data.length + sum(blockSizes)` for everything else\n     */\n    fileSize() {\n        if (this.isDirectory()) {\n            // dirs don't have file size\n            return 0n;\n        }\n        let sum = 0n;\n        this.blockSizes.forEach((size) => {\n            sum += size;\n        });\n        if (this.data != null) {\n            sum += BigInt(this.data.length);\n        }\n        return sum;\n    }\n    /**\n     * encode to protobuf Uint8Array\n     */\n    marshal() {\n        let type;\n        switch (this.type) {\n            case 'raw':\n                type = PBData.DataType.Raw;\n                break;\n            case 'directory':\n                type = PBData.DataType.Directory;\n                break;\n            case 'file':\n                type = PBData.DataType.File;\n                break;\n            case 'metadata':\n                type = PBData.DataType.Metadata;\n                break;\n            case 'symlink':\n                type = PBData.DataType.Symlink;\n                break;\n            case 'hamt-sharded-directory':\n                type = PBData.DataType.HAMTShard;\n                break;\n            default:\n                throw errcode(new Error(`Type: ${type} is not valid`), 'ERR_INVALID_TYPE');\n        }\n        let data = this.data;\n        if (this.data == null || this.data.length === 0) {\n            data = undefined;\n        }\n        let mode;\n        if (this.mode != null) {\n            mode = (this._originalMode & 0xFFFFF000) | (this.mode ?? 0);\n            if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n                mode = undefined;\n            }\n            if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n                mode = undefined;\n            }\n        }\n        let mtime;\n        if (this.mtime != null) {\n            mtime = {\n                Seconds: this.mtime.secs,\n                FractionalNanoseconds: this.mtime.nsecs\n            };\n        }\n        return PBData.encode({\n            Type: type,\n            Data: data,\n            filesize: this.isDirectory() ? undefined : this.fileSize(),\n            blocksizes: this.blockSizes,\n            hashType: this.hashType,\n            fanout: this.fanout,\n            mode,\n            mtime\n        });\n    }\n}\nexport { UnixFS };\n//# sourceMappingURL=index.js.map","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import * as dagPb from '@ipld/dag-pb';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nexport const persist = async (buffer, blockstore, options) => {\n    if (options.codec == null) {\n        options.codec = dagPb;\n    }\n    const multihash = await sha256.digest(buffer);\n    const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n    await blockstore.put(cid, buffer, options);\n    return cid;\n};\n//# sourceMappingURL=persist.js.map","import * as dagPb from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CustomProgressEvent } from 'progress-events';\nimport { persist } from '../utils/persist.js';\nexport function defaultBufferImporter(options) {\n    return async function* bufferImporter(file, blockstore) {\n        let bytesWritten = 0n;\n        for await (let block of file.content) {\n            yield async () => {\n                let unixfs;\n                const opts = {\n                    codec: dagPb,\n                    cidVersion: options.cidVersion,\n                    onProgress: options.onProgress\n                };\n                if (options.rawLeaves) {\n                    opts.codec = raw;\n                    opts.cidVersion = 1;\n                }\n                else {\n                    unixfs = new UnixFS({\n                        type: options.leafType,\n                        data: block\n                    });\n                    block = dagPb.encode({\n                        Data: unixfs.marshal(),\n                        Links: []\n                    });\n                }\n                const cid = await persist(block, blockstore, opts);\n                bytesWritten += BigInt(block.byteLength);\n                options.onProgress?.(new CustomProgressEvent('unixfs:importer:progress:file:write', {\n                    bytesWritten,\n                    cid,\n                    path: file.path\n                }));\n                return {\n                    cid,\n                    unixfs,\n                    size: BigInt(block.length),\n                    block\n                };\n            };\n        }\n    };\n}\n//# sourceMappingURL=buffer-importer.js.map","import { encode, prepare } from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { persist } from '../utils/persist.js';\nexport const dirBuilder = async (dir, blockstore, options) => {\n    const unixfs = new UnixFS({\n        type: 'directory',\n        mtime: dir.mtime,\n        mode: dir.mode\n    });\n    const block = encode(prepare({ Data: unixfs.marshal() }));\n    const cid = await persist(block, blockstore, options);\n    const path = dir.path;\n    return {\n        cid,\n        path,\n        unixfs,\n        size: BigInt(block.length),\n        originalPath: dir.originalPath,\n        block\n    };\n};\n//# sourceMappingURL=dir.js.map","import { encode, prepare } from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport parallelBatch from 'it-parallel-batch';\nimport * as rawCodec from 'multiformats/codecs/raw';\nimport { CustomProgressEvent } from 'progress-events';\nimport { persist } from '../utils/persist.js';\nasync function* buildFileBatch(file, blockstore, options) {\n    let count = -1;\n    let previous;\n    for await (const entry of parallelBatch(options.bufferImporter(file, blockstore), options.blockWriteConcurrency)) {\n        count++;\n        if (count === 0) {\n            // cache the first entry if case there aren't any more\n            previous = {\n                ...entry,\n                single: true\n            };\n            continue;\n        }\n        else if (count === 1 && (previous != null)) {\n            // we have the second block of a multiple block import so yield the first\n            yield {\n                ...previous,\n                block: undefined,\n                single: undefined\n            };\n            previous = undefined;\n        }\n        // yield the second or later block of a multiple block import\n        yield {\n            ...entry,\n            block: undefined\n        };\n    }\n    if (previous != null) {\n        yield previous;\n    }\n}\nfunction isSingleBlockImport(result) {\n    return result.single === true;\n}\nconst reduce = (file, blockstore, options) => {\n    const reducer = async function (leaves) {\n        if (leaves.length === 1 && isSingleBlockImport(leaves[0]) && options.reduceSingleLeafToSelf) {\n            const leaf = leaves[0];\n            let node = leaf.block;\n            if (isSingleBlockImport(leaf) && (file.mtime !== undefined || file.mode !== undefined)) {\n                // only one leaf node which is a raw leaf - we have metadata so convert it into a\n                // UnixFS entry otherwise we'll have nowhere to store the metadata\n                leaf.unixfs = new UnixFS({\n                    type: 'file',\n                    mtime: file.mtime,\n                    mode: file.mode,\n                    data: leaf.block\n                });\n                node = { Data: leaf.unixfs.marshal(), Links: [] };\n                leaf.block = encode(prepare(node));\n                leaf.cid = await persist(leaf.block, blockstore, {\n                    ...options,\n                    cidVersion: options.cidVersion\n                });\n                leaf.size = BigInt(leaf.block.length);\n            }\n            options.onProgress?.(new CustomProgressEvent('unixfs:importer:progress:file:layout', {\n                cid: leaf.cid,\n                path: leaf.originalPath\n            }));\n            return {\n                cid: leaf.cid,\n                path: file.path,\n                unixfs: leaf.unixfs,\n                size: leaf.size,\n                originalPath: leaf.originalPath\n            };\n        }\n        // create a parent node and add all the leaves\n        const f = new UnixFS({\n            type: 'file',\n            mtime: file.mtime,\n            mode: file.mode\n        });\n        const links = leaves\n            .filter(leaf => {\n            if (leaf.cid.code === rawCodec.code && leaf.size > 0) {\n                return true;\n            }\n            if ((leaf.unixfs != null) && (leaf.unixfs.data == null) && leaf.unixfs.fileSize() > 0n) {\n                return true;\n            }\n            return Boolean(leaf.unixfs?.data?.length);\n        })\n            .map((leaf) => {\n            if (leaf.cid.code === rawCodec.code) {\n                // node is a leaf buffer\n                f.addBlockSize(leaf.size);\n                return {\n                    Name: '',\n                    Tsize: Number(leaf.size),\n                    Hash: leaf.cid\n                };\n            }\n            if ((leaf.unixfs == null) || (leaf.unixfs.data == null)) {\n                // node is an intermediate node\n                f.addBlockSize(leaf.unixfs?.fileSize() ?? 0n);\n            }\n            else {\n                // node is a unixfs 'file' leaf node\n                f.addBlockSize(BigInt(leaf.unixfs.data.length));\n            }\n            return {\n                Name: '',\n                Tsize: Number(leaf.size),\n                Hash: leaf.cid\n            };\n        });\n        const node = {\n            Data: f.marshal(),\n            Links: links\n        };\n        const block = encode(prepare(node));\n        const cid = await persist(block, blockstore, options);\n        options.onProgress?.(new CustomProgressEvent('unixfs:importer:progress:file:layout', {\n            cid,\n            path: file.originalPath\n        }));\n        return {\n            cid,\n            path: file.path,\n            unixfs: f,\n            size: BigInt(block.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0)),\n            originalPath: file.originalPath,\n            block\n        };\n    };\n    return reducer;\n};\nexport const fileBuilder = async (file, block, options) => {\n    return options.layout(buildFileBatch(file, block, options), reduce(file, block, options));\n};\n//# sourceMappingURL=file.js.map","import errCode from 'err-code';\nimport { CustomProgressEvent } from 'progress-events';\nimport { dirBuilder } from './dir.js';\nimport { fileBuilder } from './file.js';\nfunction isIterable(thing) {\n    return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n    return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n    try {\n        if (content instanceof Uint8Array) {\n            return (async function* () {\n                yield content;\n            }());\n        }\n        else if (isIterable(content)) {\n            return (async function* () {\n                yield* content;\n            }());\n        }\n        else if (isAsyncIterable(content)) {\n            return content;\n        }\n    }\n    catch {\n        throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nexport function defaultDagBuilder(options) {\n    return async function* dagBuilder(source, blockstore) {\n        for await (const entry of source) {\n            let originalPath;\n            if (entry.path != null) {\n                originalPath = entry.path;\n                entry.path = entry.path\n                    .split('/')\n                    .filter(path => path != null && path !== '.')\n                    .join('/');\n            }\n            if (isFileCandidate(entry)) {\n                const file = {\n                    path: entry.path,\n                    mtime: entry.mtime,\n                    mode: entry.mode,\n                    content: (async function* () {\n                        let bytesRead = 0n;\n                        for await (const chunk of options.chunker(options.chunkValidator(contentAsAsyncIterable(entry.content)))) {\n                            const currentChunkSize = BigInt(chunk.byteLength);\n                            bytesRead += currentChunkSize;\n                            options.onProgress?.(new CustomProgressEvent('unixfs:importer:progress:file:read', {\n                                bytesRead,\n                                chunkSize: currentChunkSize,\n                                path: entry.path\n                            }));\n                            yield chunk;\n                        }\n                    })(),\n                    originalPath\n                };\n                yield async () => fileBuilder(file, blockstore, options);\n            }\n            else if (entry.path != null) {\n                const dir = {\n                    path: entry.path,\n                    mtime: entry.mtime,\n                    mode: entry.mode,\n                    originalPath\n                };\n                yield async () => dirBuilder(dir, blockstore, options);\n            }\n            else {\n                throw new Error('Import candidate must have content or path or both');\n            }\n        }\n    };\n}\nfunction isFileCandidate(entry) {\n    return entry.content != null;\n}\n//# sourceMappingURL=index.js.map","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const defaultChunkValidator = () => {\n    return async function* validateChunks(source) {\n        for await (const content of source) {\n            if (content.length === undefined) {\n                throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n            }\n            if (typeof content === 'string' || content instanceof String) {\n                yield uint8ArrayFromString(content.toString());\n            }\n            else if (Array.isArray(content)) {\n                yield Uint8Array.from(content);\n            }\n            else if (content instanceof Uint8Array) {\n                yield content;\n            }\n            else {\n                throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n            }\n        }\n    };\n};\n//# sourceMappingURL=validate-chunks.js.map","import batch from 'it-batch';\nconst DEFAULT_MAX_CHILDREN_PER_NODE = 174;\nexport function balanced(options) {\n    const maxChildrenPerNode = options?.maxChildrenPerNode ?? DEFAULT_MAX_CHILDREN_PER_NODE;\n    return async function balancedLayout(source, reduce) {\n        const roots = [];\n        for await (const chunked of batch(source, maxChildrenPerNode)) {\n            roots.push(await reduce(chunked));\n        }\n        if (roots.length > 1) {\n            return balancedLayout(roots, reduce);\n        }\n        return roots[0];\n    };\n}\n//# sourceMappingURL=balanced.js.map","import { CID } from 'multiformats/cid';\nexport class Dir {\n    options;\n    root;\n    dir;\n    path;\n    dirty;\n    flat;\n    parent;\n    parentKey;\n    unixfs;\n    mode;\n    mtime;\n    cid;\n    size;\n    nodeSize;\n    constructor(props, options) {\n        this.options = options ?? {};\n        this.root = props.root;\n        this.dir = props.dir;\n        this.path = props.path;\n        this.dirty = props.dirty;\n        this.flat = props.flat;\n        this.parent = props.parent;\n        this.parentKey = props.parentKey;\n        this.unixfs = props.unixfs;\n        this.mode = props.mode;\n        this.mtime = props.mtime;\n    }\n}\n// we use these to calculate the node size to use as a check for whether a directory\n// should be sharded or not. Since CIDs have a constant length and We're only\n// interested in the data length and not the actual content identifier we can use\n// any old CID instead of having to hash the data which is expensive.\nexport const CID_V0 = CID.parse('QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn');\nexport const CID_V1 = CID.parse('zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi');\n//# sourceMappingURL=dir.js.map","import { encode, prepare } from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { Dir, CID_V0, CID_V1 } from './dir.js';\nimport { persist } from './utils/persist.js';\nexport class DirFlat extends Dir {\n    _children;\n    constructor(props, options) {\n        super(props, options);\n        this._children = new Map();\n    }\n    async put(name, value) {\n        this.cid = undefined;\n        this.size = undefined;\n        this.nodeSize = undefined;\n        this._children.set(name, value);\n    }\n    async get(name) {\n        return Promise.resolve(this._children.get(name));\n    }\n    childCount() {\n        return this._children.size;\n    }\n    directChildrenCount() {\n        return this.childCount();\n    }\n    onlyChild() {\n        return this._children.values().next().value;\n    }\n    async *eachChildSeries() {\n        for (const [key, child] of this._children.entries()) {\n            yield {\n                key,\n                child\n            };\n        }\n    }\n    estimateNodeSize() {\n        if (this.nodeSize !== undefined) {\n            return this.nodeSize;\n        }\n        this.nodeSize = 0;\n        // estimate size only based on DAGLink name and CID byte lengths\n        // https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n        for (const [name, child] of this._children.entries()) {\n            if (child.size != null && (child.cid != null)) {\n                this.nodeSize += name.length + (this.options.cidVersion === 1 ? CID_V1.bytes.byteLength : CID_V0.bytes.byteLength);\n            }\n        }\n        return this.nodeSize;\n    }\n    async *flush(block) {\n        const links = [];\n        for (const [name, child] of this._children.entries()) {\n            let result = child;\n            if (child instanceof Dir) {\n                for await (const entry of child.flush(block)) {\n                    result = entry;\n                    yield entry;\n                }\n            }\n            if (result.size != null && (result.cid != null)) {\n                links.push({\n                    Name: name,\n                    Tsize: Number(result.size),\n                    Hash: result.cid\n                });\n            }\n        }\n        const unixfs = new UnixFS({\n            type: 'directory',\n            mtime: this.mtime,\n            mode: this.mode\n        });\n        const node = { Data: unixfs.marshal(), Links: links };\n        const buffer = encode(prepare(node));\n        const cid = await persist(buffer, block, this.options);\n        const size = buffer.length + node.Links.reduce(\n        /**\n         * @param {number} acc\n         * @param {PBLink} curr\n         */\n        (acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n        this.cid = cid;\n        this.size = size;\n        yield {\n            cid,\n            unixfs,\n            path: this.path,\n            size: BigInt(size)\n        };\n    }\n}\n//# sourceMappingURL=dir-flat.js.map","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","import { from } from 'multiformats/hashes/hasher'\nimport { bytes } from 'multiformats'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","import { encode, prepare } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nimport { createHAMT, Bucket } from 'hamt-sharding';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { Dir, CID_V0, CID_V1 } from './dir.js';\nimport { persist } from './utils/persist.js';\nasync function hamtHashFn(buf) {\n    return (await murmur3128.encode(buf))\n        // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n        // implementation only uses the first 64, so we must do the same\n        // for parity..\n        .slice(0, 8)\n        // Invert buffer because that's how Go impl does it\n        .reverse();\n}\nconst HAMT_HASH_CODE = BigInt(0x22);\nconst DEFAULT_FANOUT_BITS = 8;\nclass DirSharded extends Dir {\n    _bucket;\n    constructor(props, options) {\n        super(props, options);\n        this._bucket = createHAMT({\n            hashFn: hamtHashFn,\n            bits: options.shardFanoutBits ?? DEFAULT_FANOUT_BITS\n        });\n    }\n    async put(name, value) {\n        this.cid = undefined;\n        this.size = undefined;\n        this.nodeSize = undefined;\n        await this._bucket.put(name, value);\n    }\n    async get(name) {\n        return this._bucket.get(name);\n    }\n    childCount() {\n        return this._bucket.leafCount();\n    }\n    directChildrenCount() {\n        return this._bucket.childrenCount();\n    }\n    onlyChild() {\n        return this._bucket.onlyChild();\n    }\n    async *eachChildSeries() {\n        for await (const { key, value } of this._bucket.eachLeafSeries()) {\n            yield {\n                key,\n                child: value\n            };\n        }\n    }\n    estimateNodeSize() {\n        if (this.nodeSize !== undefined) {\n            return this.nodeSize;\n        }\n        this.nodeSize = calculateSize(this._bucket, this, this.options);\n        return this.nodeSize;\n    }\n    async *flush(blockstore) {\n        for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n            yield {\n                ...entry,\n                path: this.path\n            };\n        }\n    }\n}\nexport default DirSharded;\nasync function* flush(bucket, blockstore, shardRoot, options) {\n    const children = bucket._children;\n    const padLength = (bucket.tableSize() - 1).toString(16).length;\n    const links = [];\n    let childrenSize = 0n;\n    for (let i = 0; i < children.length; i++) {\n        const child = children.get(i);\n        if (child == null) {\n            continue;\n        }\n        const labelPrefix = i.toString(16).toUpperCase().padStart(padLength, '0');\n        if (child instanceof Bucket) {\n            let shard;\n            for await (const subShard of flush(child, blockstore, null, options)) {\n                shard = subShard;\n            }\n            if (shard == null) {\n                throw new Error('Could not flush sharded directory, no subshard found');\n            }\n            links.push({\n                Name: labelPrefix,\n                Tsize: Number(shard.size),\n                Hash: shard.cid\n            });\n            childrenSize += shard.size;\n        }\n        else if (isDir(child.value)) {\n            const dir = child.value;\n            let flushedDir;\n            for await (const entry of dir.flush(blockstore)) {\n                flushedDir = entry;\n                yield flushedDir;\n            }\n            if (flushedDir == null) {\n                throw new Error('Did not flush dir');\n            }\n            const label = labelPrefix + child.key;\n            links.push({\n                Name: label,\n                Tsize: Number(flushedDir.size),\n                Hash: flushedDir.cid\n            });\n            childrenSize += flushedDir.size;\n        }\n        else {\n            const value = child.value;\n            if (value.cid == null) {\n                continue;\n            }\n            const label = labelPrefix + child.key;\n            const size = value.size;\n            links.push({\n                Name: label,\n                Tsize: Number(size),\n                Hash: value.cid\n            });\n            childrenSize += BigInt(size ?? 0);\n        }\n    }\n    // go-ipfs uses little endian, that's why we have to\n    // reverse the bit field before storing it\n    const data = Uint8Array.from(children.bitField().reverse());\n    const dir = new UnixFS({\n        type: 'hamt-sharded-directory',\n        data,\n        fanout: BigInt(bucket.tableSize()),\n        hashType: HAMT_HASH_CODE,\n        mtime: shardRoot?.mtime,\n        mode: shardRoot?.mode\n    });\n    const node = {\n        Data: dir.marshal(),\n        Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    const size = BigInt(buffer.byteLength) + childrenSize;\n    yield {\n        cid,\n        unixfs: dir,\n        size\n    };\n}\nfunction isDir(obj) {\n    return typeof obj.flush === 'function';\n}\nfunction calculateSize(bucket, shardRoot, options) {\n    const children = bucket._children;\n    const padLength = (bucket.tableSize() - 1).toString(16).length;\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n        const child = children.get(i);\n        if (child == null) {\n            continue;\n        }\n        const labelPrefix = i.toString(16).toUpperCase().padStart(padLength, '0');\n        if (child instanceof Bucket) {\n            const size = calculateSize(child, null, options);\n            links.push({\n                Name: labelPrefix,\n                Tsize: Number(size),\n                Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n            });\n        }\n        else if (typeof child.value.flush === 'function') {\n            const dir = child.value;\n            const size = dir.nodeSize();\n            links.push({\n                Name: labelPrefix + child.key,\n                Tsize: Number(size),\n                Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n            });\n        }\n        else {\n            const value = child.value;\n            if (value.cid == null) {\n                continue;\n            }\n            const label = labelPrefix + child.key;\n            const size = value.size;\n            links.push({\n                Name: label,\n                Tsize: Number(size),\n                Hash: value.cid\n            });\n        }\n    }\n    // go-ipfs uses little endian, that's why we have to\n    // reverse the bit field before storing it\n    const data = Uint8Array.from(children.bitField().reverse());\n    const dir = new UnixFS({\n        type: 'hamt-sharded-directory',\n        data,\n        fanout: BigInt(bucket.tableSize()),\n        hashType: HAMT_HASH_CODE,\n        mtime: shardRoot?.mtime,\n        mode: shardRoot?.mode\n    });\n    const buffer = encode(prepare({\n        Data: dir.marshal(),\n        Links: links\n    }));\n    return buffer.length;\n}\n//# sourceMappingURL=dir-sharded.js.map","import { DirFlat } from './dir-flat.js';\nimport DirSharded, {} from './dir-sharded.js';\nexport async function flatToShard(child, dir, threshold, options) {\n    let newDir = dir;\n    if (dir instanceof DirFlat && dir.estimateNodeSize() > threshold) {\n        newDir = await convertToShard(dir, options);\n    }\n    const parent = newDir.parent;\n    if (parent != null) {\n        if (newDir !== dir) {\n            if (child != null) {\n                child.parent = newDir;\n            }\n            if (newDir.parentKey == null) {\n                throw new Error('No parent key found');\n            }\n            await parent.put(newDir.parentKey, newDir);\n        }\n        return flatToShard(newDir, parent, threshold, options);\n    }\n    return newDir;\n}\nasync function convertToShard(oldDir, options) {\n    const newDir = new DirSharded({\n        root: oldDir.root,\n        dir: true,\n        parent: oldDir.parent,\n        parentKey: oldDir.parentKey,\n        path: oldDir.path,\n        dirty: oldDir.dirty,\n        flat: false,\n        mtime: oldDir.mtime,\n        mode: oldDir.mode\n    }, options);\n    for await (const { key, child } of oldDir.eachChildSeries()) {\n        await newDir.put(key, child);\n    }\n    return newDir;\n}\n//# sourceMappingURL=flat-to-shard.js.map","export const toPathComponents = (path = '') => {\n    // split on / unless escaped with \\\n    return path.split(/(?<!\\\\)\\//).filter(Boolean);\n};\n//# sourceMappingURL=to-path-components.js.map","import { DirFlat } from './dir-flat.js';\nimport { Dir } from './dir.js';\nimport { flatToShard } from './flat-to-shard.js';\nimport { toPathComponents } from './utils/to-path-components.js';\nasync function addToTree(elem, tree, options) {\n    const pathElems = toPathComponents(elem.path ?? '');\n    const lastIndex = pathElems.length - 1;\n    let parent = tree;\n    let currentPath = '';\n    for (let i = 0; i < pathElems.length; i++) {\n        const pathElem = pathElems[i];\n        currentPath += `${currentPath !== '' ? '/' : ''}${pathElem}`;\n        const last = (i === lastIndex);\n        parent.dirty = true;\n        parent.cid = undefined;\n        parent.size = undefined;\n        if (last) {\n            await parent.put(pathElem, elem);\n            tree = await flatToShard(null, parent, options.shardSplitThresholdBytes, options);\n        }\n        else {\n            let dir = await parent.get(pathElem);\n            if ((dir == null) || !(dir instanceof Dir)) {\n                dir = new DirFlat({\n                    root: false,\n                    dir: true,\n                    parent,\n                    parentKey: pathElem,\n                    path: currentPath,\n                    dirty: true,\n                    flat: true,\n                    mtime: dir?.unixfs?.mtime,\n                    mode: dir?.unixfs?.mode\n                }, options);\n            }\n            await parent.put(pathElem, dir);\n            parent = dir;\n        }\n    }\n    return tree;\n}\nasync function* flushAndYield(tree, blockstore) {\n    if (!(tree instanceof Dir)) {\n        if (tree.unixfs?.isDirectory() === true) {\n            yield tree;\n        }\n        return;\n    }\n    yield* tree.flush(blockstore);\n}\nexport function defaultTreeBuilder(options) {\n    return async function* treeBuilder(source, block) {\n        let tree = new DirFlat({\n            root: true,\n            dir: true,\n            path: '',\n            dirty: true,\n            flat: true\n        }, options);\n        let rootDir;\n        let singleRoot = false;\n        for await (const entry of source) {\n            if (entry == null) {\n                continue;\n            }\n            // if all paths are from the same root directory, we should\n            // wrap them all in that root directory\n            const dir = `${entry.originalPath ?? ''}`.split('/')[0];\n            if (dir != null && dir !== '') {\n                if (rootDir == null) {\n                    rootDir = dir;\n                    singleRoot = true;\n                }\n                else if (rootDir !== dir) {\n                    singleRoot = false;\n                }\n            }\n            tree = await addToTree(entry, tree, options);\n            if (entry.unixfs == null || !entry.unixfs.isDirectory()) {\n                yield entry;\n            }\n        }\n        if (options.wrapWithDirectory || (singleRoot && tree.childCount() > 1)) {\n            yield* flushAndYield(tree, block);\n        }\n        else {\n            for await (const unwrapped of tree.eachChildSeries()) {\n                if (unwrapped == null) {\n                    continue;\n                }\n                yield* flushAndYield(unwrapped.child, block);\n            }\n        }\n    };\n}\n//# sourceMappingURL=tree-builder.js.map","import errcode from 'err-code';\nimport first from 'it-first';\nimport parallelBatch from 'it-parallel-batch';\nimport { fixedSize } from './chunker/fixed-size.js';\nimport { defaultBufferImporter } from './dag-builder/buffer-importer.js';\nimport { defaultDagBuilder } from './dag-builder/index.js';\nimport { defaultChunkValidator } from './dag-builder/validate-chunks.js';\nimport { balanced } from './layout/index.js';\nimport { defaultTreeBuilder } from './tree-builder.js';\n/**\n * The importer creates UnixFS DAGs and stores the blocks that make\n * them up in the passed blockstore.\n *\n * @example\n *\n * ```typescript\n * import { importer } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = [{\n *   path: './foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }, {\n *   path: './bar.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }]\n *\n * for await (const entry of importer(input, blockstore)) {\n *   console.info(entry)\n *   // { cid: CID(), ... }\n * }\n * ```\n */\nexport async function* importer(source, blockstore, options = {}) {\n    let candidates;\n    if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n        candidates = source;\n    }\n    else {\n        candidates = [source];\n    }\n    const wrapWithDirectory = options.wrapWithDirectory ?? false;\n    const shardSplitThresholdBytes = options.shardSplitThresholdBytes ?? 262144;\n    const shardFanoutBits = options.shardFanoutBits ?? 8;\n    const cidVersion = options.cidVersion ?? 1;\n    const rawLeaves = options.rawLeaves ?? true;\n    const leafType = options.leafType ?? 'file';\n    const fileImportConcurrency = options.fileImportConcurrency ?? 50;\n    const blockWriteConcurrency = options.blockWriteConcurrency ?? 10;\n    const reduceSingleLeafToSelf = options.reduceSingleLeafToSelf ?? true;\n    const chunker = options.chunker ?? fixedSize();\n    const chunkValidator = options.chunkValidator ?? defaultChunkValidator();\n    const buildDag = options.dagBuilder ?? defaultDagBuilder({\n        chunker,\n        chunkValidator,\n        wrapWithDirectory,\n        layout: options.layout ?? balanced(),\n        bufferImporter: options.bufferImporter ?? defaultBufferImporter({\n            cidVersion,\n            rawLeaves,\n            leafType,\n            onProgress: options.onProgress\n        }),\n        blockWriteConcurrency,\n        reduceSingleLeafToSelf,\n        cidVersion,\n        onProgress: options.onProgress\n    });\n    const buildTree = options.treeBuilder ?? defaultTreeBuilder({\n        wrapWithDirectory,\n        shardSplitThresholdBytes,\n        shardFanoutBits,\n        cidVersion,\n        onProgress: options.onProgress\n    });\n    for await (const entry of buildTree(parallelBatch(buildDag(candidates, blockstore), fileImportConcurrency), blockstore)) {\n        yield {\n            cid: entry.cid,\n            path: entry.path,\n            unixfs: entry.unixfs,\n            size: entry.size\n        };\n    }\n}\n/**\n * `importFile` is similar to `importer` except it accepts a single\n * `FileCandidate` and returns a promise of a single `ImportResult`\n * instead of a stream of results.\n *\n * @example\n *\n * ```typescript\n * import { importFile } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input: FileCandidate = {\n *   path: './foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }\n *\n * const entry = await importFile(input, blockstore)\n * ```\n */\nexport async function importFile(content, blockstore, options = {}) {\n    const result = await first(importer([content], blockstore, options));\n    if (result == null) {\n        throw errcode(new Error('Nothing imported'), 'ERR_INVALID_PARAMS');\n    }\n    return result;\n}\n/**\n * `importDir` is similar to `importer` except it accepts a single\n * `DirectoryCandidate` and returns a promise of a single `ImportResult`\n * instead of a stream of results.\n *\n * @example\n *\n * ```typescript\n * import { importDirectory } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input: DirectoryCandidate = {\n *   path: './foo.txt'\n * }\n *\n * const entry = await importDirectory(input, blockstore)\n * ```\n */\nexport async function importDirectory(content, blockstore, options = {}) {\n    const result = await first(importer([content], blockstore, options));\n    if (result == null) {\n        throw errcode(new Error('Nothing imported'), 'ERR_INVALID_PARAMS');\n    }\n    return result;\n}\n/**\n * `importBytes` accepts a single Uint8Array and returns a promise\n * of a single `ImportResult`.\n *\n * @example\n *\n * ```typescript\n * import { importBytes } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = Uint8Array.from([0, 1, 2, 3, 4])\n *\n * const entry = await importBytes(input, blockstore)\n * ```\n */\nexport async function importBytes(buf, blockstore, options = {}) {\n    return importFile({\n        content: buf\n    }, blockstore, options);\n}\n/**\n * `importByteStream` accepts a single stream of Uint8Arrays and\n * returns a promise of a single `ImportResult`.\n *\n * @example\n *\n * ```typescript\n * import { importByteStream } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = [\n *   Uint8Array.from([0, 1, 2, 3, 4]),\n *   Uint8Array.from([5, 6, 7, 8, 9])\n * ]\n *\n * const entry = await importByteStream(input, blockstore)\n * ```\n */\nexport async function importByteStream(bufs, blockstore, options = {}) {\n    return importFile({\n        content: bufs\n    }, blockstore, options);\n}\n//# sourceMappingURL=index.js.map","import errcode from 'err-code';\n// @ts-expect-error no types\nimport { create } from 'rabin-wasm';\nimport { Uint8ArrayList } from 'uint8arraylist';\nconst DEFAULT_MIN_CHUNK_SIZE = 262144;\nconst DEFAULT_MAX_CHUNK_SIZE = 262144;\nconst DEFAULT_AVG_CHUNK_SIZE = 262144;\nconst DEFAULT_WINDOW = 16;\nasync function* chunker(source, r) {\n    const buffers = new Uint8ArrayList();\n    for await (const chunk of source) {\n        buffers.append(chunk);\n        const sizes = r.fingerprint(chunk);\n        for (let i = 0; i < sizes.length; i++) {\n            const size = sizes[i];\n            const buf = buffers.slice(0, size);\n            buffers.consume(size);\n            yield buf;\n        }\n    }\n    if (buffers.length > 0) {\n        yield buffers.subarray(0);\n    }\n}\nexport const rabin = (options = {}) => {\n    let min = options.minChunkSize ?? DEFAULT_MIN_CHUNK_SIZE;\n    let max = options.maxChunkSize ?? DEFAULT_MAX_CHUNK_SIZE;\n    let avg = options.avgChunkSize ?? DEFAULT_AVG_CHUNK_SIZE;\n    const window = options.window ?? DEFAULT_WINDOW;\n    // if only avg was passed, calculate min/max from that\n    if (options.avgChunkSize != null && options.minChunkSize == null && options.maxChunkSize == null) {\n        min = avg / 3;\n        max = avg + (avg / 2);\n    }\n    const isInvalidChunkSizes = [min, avg, max].some((size) => size == null || isNaN(size));\n    if (isInvalidChunkSizes) {\n        if (options.avgChunkSize != null) {\n            throw errcode(new Error('please specify a valid average chunk size number'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n        }\n        throw errcode(new Error('please specify valid numbers for (min|max|avg)ChunkSize'), 'ERR_INVALID_CHUNK_SIZE');\n    }\n    // validate min/max/avg in the same way as go\n    if (min < 16) {\n        throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n    }\n    if (max < min) {\n        max = min;\n    }\n    if (avg < min) {\n        avg = min;\n    }\n    const sizepow = Math.floor(Math.log2(avg));\n    return async function* rabinChunker(source) {\n        const r = await create(sizepow, min, max, window);\n        for await (const chunk of chunker(source, r)) {\n            yield chunk;\n        }\n    };\n};\n//# sourceMappingURL=rabin.js.map","import { importBytes, importByteStream, importDirectory, importer, importFile } from 'ipfs-unixfs-importer';\nimport { fixedSize } from 'ipfs-unixfs-importer/chunker';\nimport { balanced } from 'ipfs-unixfs-importer/layout';\n/**\n * Default importer settings match Filecoin\n */\nconst defaultImporterSettings = {\n    cidVersion: 1,\n    rawLeaves: true,\n    layout: balanced({\n        maxChildrenPerNode: 1024\n    }),\n    chunker: fixedSize({\n        chunkSize: 1048576\n    })\n};\nexport async function* addAll(source, blockstore, options = {}) {\n    yield* importer(source, blockstore, {\n        ...defaultImporterSettings,\n        ...options\n    });\n}\nexport async function addBytes(bytes, blockstore, options = {}) {\n    const { cid } = await importBytes(bytes, blockstore, {\n        ...defaultImporterSettings,\n        ...options\n    });\n    return cid;\n}\nexport async function addByteStream(bytes, blockstore, options = {}) {\n    const { cid } = await importByteStream(bytes, blockstore, {\n        ...defaultImporterSettings,\n        ...options\n    });\n    return cid;\n}\nexport async function addFile(file, blockstore, options = {}) {\n    const { cid } = await importFile(file, blockstore, {\n        ...defaultImporterSettings,\n        ...options\n    });\n    return cid;\n}\nexport async function addDirectory(dir, blockstore, options = {}) {\n    const { cid } = await importDirectory({\n        ...dir,\n        path: dir.path ?? '-'\n    }, blockstore, {\n        ...defaultImporterSettings,\n        ...options\n    });\n    return cid;\n}\n//# sourceMappingURL=add.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction last(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            let res;\n            for await (const entry of source) {\n                res = entry;\n            }\n            return res;\n        })();\n    }\n    let res;\n    for (const entry of source) {\n        res = entry;\n    }\n    return res;\n}\nexport default last;\n//# sourceMappingURL=index.js.map","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","import * as dagCbor from '@ipld/dag-cbor';\nimport errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n    const block = await blockstore.get(cid, options);\n    const object = dagCbor.decode(block);\n    let subObject = object;\n    let subPath = path;\n    while (toResolve.length > 0) {\n        const prop = toResolve[0];\n        if (prop in subObject) {\n            // remove the bit of the path we have resolved\n            toResolve.shift();\n            subPath = `${subPath}/${prop}`;\n            const subObjectCid = CID.asCID(subObject[prop]);\n            if (subObjectCid != null) {\n                return {\n                    entry: {\n                        type: 'object',\n                        name,\n                        path,\n                        cid,\n                        node: block,\n                        depth,\n                        size: BigInt(block.length),\n                        content: async function* () {\n                            yield object;\n                        }\n                    },\n                    next: {\n                        cid: subObjectCid,\n                        name: prop,\n                        path: subPath,\n                        toResolve\n                    }\n                };\n            }\n            subObject = subObject[prop];\n        }\n        else {\n            // cannot resolve further\n            throw errCode(new Error(`No property named ${prop} found in cbor node ${cid}`), 'ERR_NO_PROP');\n        }\n    }\n    return {\n        entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: BigInt(block.length),\n            content: async function* () {\n                yield object;\n            }\n        }\n    };\n};\nexport default resolve;\n//# sourceMappingURL=dag-cbor.js.map","function extractDataFromBlock(block, blockStart, requestedStart, requestedEnd) {\n    const blockLength = BigInt(block.length);\n    const blockEnd = BigInt(blockStart + blockLength);\n    if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n        // If we are looking for a byte range that is starts after the start of the block,\n        // return an empty block.  This can happen when internal nodes contain data\n        return new Uint8Array(0);\n    }\n    if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n        // If the end byte is in the current block, truncate the block to the end byte\n        block = block.subarray(0, Number(requestedEnd - blockStart));\n    }\n    if (requestedStart >= blockStart && requestedStart < blockEnd) {\n        // If the start byte is in the current block, skip to the start byte\n        block = block.subarray(Number(requestedStart - blockStart));\n    }\n    return block;\n}\nexport default extractDataFromBlock;\n//# sourceMappingURL=extract-data-from-block.js.map","import errCode from 'err-code';\nconst validateOffsetAndLength = (size, offset = 0, length = size) => {\n    const fileSize = BigInt(size);\n    const start = BigInt(offset ?? 0);\n    let end = BigInt(length);\n    if (end !== fileSize) {\n        end = start + end;\n    }\n    if (end > fileSize) {\n        end = fileSize;\n    }\n    if (start < 0n) {\n        throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n    }\n    if (start > fileSize) {\n        throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS');\n    }\n    if (end < 0n) {\n        throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n    }\n    if (end > fileSize) {\n        throw errCode(new Error('Length must be less than the file size'), 'ERR_INVALID_PARAMS');\n    }\n    return {\n        start,\n        end\n    };\n};\nexport default validateOffsetAndLength;\n//# sourceMappingURL=validate-offset-and-length.js.map","import errCode from 'err-code';\nimport * as mh from 'multiformats/hashes/digest';\nimport { CustomProgressEvent } from 'progress-events';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = (node) => {\n    async function* contentGenerator(options = {}) {\n        const { start, end } = validateOffsetAndLength(node.length, options.offset, options.length);\n        const buf = extractDataFromBlock(node, 0n, start, end);\n        options.onProgress?.(new CustomProgressEvent('unixfs:exporter:progress:identity', {\n            bytesRead: BigInt(buf.byteLength),\n            totalBytes: end - start,\n            fileSize: BigInt(node.byteLength)\n        }));\n        yield buf;\n    }\n    return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n    if (toResolve.length > 0) {\n        throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND');\n    }\n    const buf = mh.decode(cid.multihash.bytes);\n    return {\n        entry: {\n            type: 'identity',\n            name,\n            path,\n            cid,\n            content: rawContent(buf.digest),\n            depth,\n            size: BigInt(buf.digest.length),\n            node: buf.digest\n        }\n    };\n};\nexport default resolve;\n//# sourceMappingURL=identity.js.map","import errCode from 'err-code';\nimport { CustomProgressEvent } from 'progress-events';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = (node) => {\n    async function* contentGenerator(options = {}) {\n        const { start, end } = validateOffsetAndLength(node.length, options.offset, options.length);\n        const buf = extractDataFromBlock(node, 0n, start, end);\n        options.onProgress?.(new CustomProgressEvent('unixfs:exporter:progress:raw', {\n            bytesRead: BigInt(buf.byteLength),\n            totalBytes: end - start,\n            fileSize: BigInt(node.byteLength)\n        }));\n        yield buf;\n    }\n    return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n    if (toResolve.length > 0) {\n        throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND');\n    }\n    const block = await blockstore.get(cid, options);\n    return {\n        entry: {\n            type: 'raw',\n            name,\n            path,\n            cid,\n            content: rawContent(block),\n            depth,\n            size: BigInt(block.length),\n            node: block\n        }\n    };\n};\nexport default resolve;\n//# sourceMappingURL=raw.js.map","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","import { from } from 'multiformats/hashes/hasher'\nimport { bytes } from 'multiformats'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","import { decode } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nimport errCode from 'err-code';\nimport { Bucket, createHAMT } from 'hamt-sharding';\nimport { UnixFS } from 'ipfs-unixfs';\n// FIXME: this is copy/pasted from ipfs-unixfs-importer/src/options.js\nconst hashFn = async function (buf) {\n    return (await murmur3128.encode(buf))\n        // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n        // implementation only uses the first 64, so we must do the same\n        // for parity..\n        .slice(0, 8)\n        // Invert buffer because that's how Go impl does it\n        .reverse();\n};\nconst addLinksToHamtBucket = async (links, bucket, rootBucket) => {\n    const padLength = (bucket.tableSize() - 1).toString(16).length;\n    await Promise.all(links.map(async (link) => {\n        if (link.Name == null) {\n            // TODO(@rvagg): what do? this is technically possible\n            throw new Error('Unexpected Link without a Name');\n        }\n        if (link.Name.length === padLength) {\n            const pos = parseInt(link.Name, 16);\n            bucket._putObjectAt(pos, new Bucket({\n                hash: rootBucket._options.hash,\n                bits: rootBucket._options.bits\n            }, bucket, pos));\n            return;\n        }\n        await rootBucket.put(link.Name.substring(2), true);\n    }));\n};\nconst toPrefix = (position, padLength) => {\n    return position\n        .toString(16)\n        .toUpperCase()\n        .padStart(padLength, '0')\n        .substring(0, padLength);\n};\nconst toBucketPath = (position) => {\n    let bucket = position.bucket;\n    const path = [];\n    while (bucket._parent != null) {\n        path.push(bucket);\n        bucket = bucket._parent;\n    }\n    path.push(bucket);\n    return path.reverse();\n};\nconst findShardCid = async (node, name, blockstore, context, options) => {\n    if (context == null) {\n        if (node.Data == null) {\n            throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n        }\n        let dir;\n        try {\n            dir = UnixFS.unmarshal(node.Data);\n        }\n        catch (err) {\n            throw errCode(err, 'ERR_NOT_UNIXFS');\n        }\n        if (dir.type !== 'hamt-sharded-directory') {\n            throw errCode(new Error('not a HAMT'), 'ERR_NOT_UNIXFS');\n        }\n        if (dir.fanout == null) {\n            throw errCode(new Error('missing fanout'), 'ERR_NOT_UNIXFS');\n        }\n        const rootBucket = createHAMT({\n            hashFn,\n            bits: Math.log2(Number(dir.fanout))\n        });\n        context = {\n            rootBucket,\n            hamtDepth: 1,\n            lastBucket: rootBucket\n        };\n    }\n    const padLength = (context.lastBucket.tableSize() - 1).toString(16).length;\n    await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket);\n    const position = await context.rootBucket._findNewBucketAndPos(name);\n    let prefix = toPrefix(position.pos, padLength);\n    const bucketPath = toBucketPath(position);\n    if (bucketPath.length > context.hamtDepth) {\n        context.lastBucket = bucketPath[context.hamtDepth];\n        prefix = toPrefix(context.lastBucket._posAtParent, padLength);\n    }\n    const link = node.Links.find(link => {\n        if (link.Name == null) {\n            return false;\n        }\n        const entryPrefix = link.Name.substring(0, padLength);\n        const entryName = link.Name.substring(padLength);\n        if (entryPrefix !== prefix) {\n            // not the entry or subshard we're looking for\n            return false;\n        }\n        if (entryName !== '' && entryName !== name) {\n            // not the entry we're looking for\n            return false;\n        }\n        return true;\n    });\n    if (link == null) {\n        return;\n    }\n    if (link.Name != null && link.Name.substring(padLength) === name) {\n        return link.Hash;\n    }\n    context.hamtDepth++;\n    const block = await blockstore.get(link.Hash, options);\n    node = decode(block);\n    return findShardCid(node, name, blockstore, context, options);\n};\nexport default findShardCid;\n//# sourceMappingURL=find-cid-in-shard.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for await (const entry of peekable) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction map(source, func) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const val of source) {\n                yield func(val);\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = func(value);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            yield await res;\n            for await (const val of peekable) {\n                yield func(val);\n            }\n        })();\n    }\n    const fn = func;\n    return (function* () {\n        yield res;\n        for (const val of peekable) {\n            yield fn(val);\n        }\n    })();\n}\nexport default map;\n//# sourceMappingURL=index.js.map","import filter from 'it-filter';\nimport map from 'it-map';\nimport parallel from 'it-parallel';\nimport { pipe } from 'it-pipe';\nimport { CustomProgressEvent } from 'progress-events';\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    async function* yieldDirectoryContent(options = {}) {\n        const offset = options.offset ?? 0;\n        const length = options.length ?? node.Links.length;\n        const links = node.Links.slice(offset, length);\n        options.onProgress?.(new CustomProgressEvent('unixfs:exporter:walk:directory', {\n            cid\n        }));\n        yield* pipe(links, source => map(source, link => {\n            return async () => {\n                const linkName = link.Name ?? '';\n                const linkPath = `${path}/${linkName}`;\n                const result = await resolve(link.Hash, linkName, linkPath, [], depth + 1, blockstore, options);\n                return result.entry;\n            };\n        }), source => parallel(source, { ordered: true }), source => filter(source, entry => entry != null));\n    }\n    return yieldDirectoryContent;\n};\nexport default directoryContent;\n//# sourceMappingURL=directory.js.map","import * as dagPb from '@ipld/dag-pb';\nimport errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport map from 'it-map';\nimport parallel from 'it-parallel';\nimport { pipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport * as raw from 'multiformats/codecs/raw';\nimport PQueue from 'p-queue';\nimport { CustomProgressEvent } from 'progress-events';\nimport extractDataFromBlock from '../../../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js';\nasync function walkDAG(blockstore, node, queue, streamPosition, start, end, options) {\n    // a `raw` node\n    if (node instanceof Uint8Array) {\n        const buf = extractDataFromBlock(node, streamPosition, start, end);\n        queue.push(buf);\n        return;\n    }\n    if (node.Data == null) {\n        throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n    }\n    let file;\n    try {\n        file = UnixFS.unmarshal(node.Data);\n    }\n    catch (err) {\n        throw errCode(err, 'ERR_NOT_UNIXFS');\n    }\n    // might be a unixfs `raw` node or have data on intermediate nodes\n    if (file.data != null) {\n        const data = file.data;\n        const buf = extractDataFromBlock(data, streamPosition, start, end);\n        queue.push(buf);\n        streamPosition += BigInt(buf.byteLength);\n    }\n    const childOps = [];\n    if (node.Links.length !== file.blockSizes.length) {\n        throw errCode(new Error('Inconsistent block sizes and dag links'), 'ERR_NOT_UNIXFS');\n    }\n    for (let i = 0; i < node.Links.length; i++) {\n        const childLink = node.Links[i];\n        const childStart = streamPosition; // inclusive\n        const childEnd = childStart + file.blockSizes[i]; // exclusive\n        if ((start >= childStart && start < childEnd) || // child has offset byte\n            (end >= childStart && end <= childEnd) || // child has end byte\n            (start < childStart && end > childEnd)) { // child is between offset and end bytes\n            childOps.push({\n                link: childLink,\n                blockStart: streamPosition\n            });\n        }\n        streamPosition = childEnd;\n        if (streamPosition > end) {\n            break;\n        }\n    }\n    await pipe(childOps, (source) => map(source, (op) => {\n        return async () => {\n            const block = await blockstore.get(op.link.Hash, options);\n            return {\n                ...op,\n                block\n            };\n        };\n    }), (source) => parallel(source, {\n        ordered: true\n    }), async (source) => {\n        for await (const { link, block, blockStart } of source) {\n            let child;\n            switch (link.Hash.code) {\n                case dagPb.code:\n                    child = dagPb.decode(block);\n                    break;\n                case raw.code:\n                    child = block;\n                    break;\n                default:\n                    queue.end(errCode(new Error(`Unsupported codec: ${link.Hash.code}`), 'ERR_NOT_UNIXFS'));\n                    return;\n            }\n            // create a queue for this child - we use a queue instead of recursion\n            // to avoid overflowing the stack\n            const childQueue = new PQueue({\n                concurrency: 1\n            });\n            // if any of the child jobs error, end the read queue with the error\n            childQueue.on('error', error => {\n                queue.end(error);\n            });\n            // if the job rejects the 'error' event will be emitted on the child queue\n            void childQueue.add(async () => {\n                options.onProgress?.(new CustomProgressEvent('unixfs:exporter:walk:file', {\n                    cid: link.Hash\n                }));\n                await walkDAG(blockstore, child, queue, blockStart, start, end, options);\n            });\n            // wait for this child to complete before moving on to the next\n            await childQueue.onIdle();\n        }\n    });\n    if (streamPosition >= end) {\n        queue.end();\n    }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    async function* yieldFileContent(options = {}) {\n        const fileSize = unixfs.fileSize();\n        if (fileSize === undefined) {\n            throw new Error('File was a directory');\n        }\n        const { start, end } = validateOffsetAndLength(fileSize, options.offset, options.length);\n        if (end === 0n) {\n            return;\n        }\n        let read = 0n;\n        const wanted = end - start;\n        const queue = pushable();\n        options.onProgress?.(new CustomProgressEvent('unixfs:exporter:walk:file', {\n            cid\n        }));\n        void walkDAG(blockstore, node, queue, 0n, start, end, options)\n            .catch(err => {\n            queue.end(err);\n        });\n        for await (const buf of queue) {\n            if (buf == null) {\n                continue;\n            }\n            read += BigInt(buf.byteLength);\n            if (read > wanted) {\n                queue.end();\n                throw errCode(new Error('Read too many bytes - the file size reported by the UnixFS data in the root node may be incorrect'), 'ERR_OVER_READ');\n            }\n            if (read === wanted) {\n                queue.end();\n            }\n            options.onProgress?.(new CustomProgressEvent('unixfs:exporter:progress:unixfs:file', {\n                bytesRead: read,\n                totalBytes: wanted,\n                fileSize\n            }));\n            yield buf;\n        }\n        if (read < wanted) {\n            throw errCode(new Error('Traversed entire DAG but did not read enough bytes'), 'ERR_UNDER_READ');\n        }\n    }\n    return yieldFileContent;\n};\nexport default fileContent;\n//# sourceMappingURL=file.js.map","import { decode } from '@ipld/dag-pb';\nimport errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport map from 'it-map';\nimport parallel from 'it-parallel';\nimport { pipe } from 'it-pipe';\nimport { CustomProgressEvent } from 'progress-events';\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    function yieldHamtDirectoryContent(options = {}) {\n        options.onProgress?.(new CustomProgressEvent('unixfs:exporter:walk:hamt-sharded-directory', {\n            cid\n        }));\n        return listDirectory(node, path, resolve, depth, blockstore, options);\n    }\n    return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n    const links = node.Links;\n    if (node.Data == null) {\n        throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n    }\n    let dir;\n    try {\n        dir = UnixFS.unmarshal(node.Data);\n    }\n    catch (err) {\n        throw errCode(err, 'ERR_NOT_UNIXFS');\n    }\n    if (dir.fanout == null) {\n        throw errCode(new Error('missing fanout'), 'ERR_NOT_UNIXFS');\n    }\n    const padLength = (dir.fanout - 1n).toString(16).length;\n    const results = pipe(links, source => map(source, link => {\n        return async () => {\n            const name = link.Name != null ? link.Name.substring(padLength) : null;\n            if (name != null && name !== '') {\n                const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, blockstore, options);\n                return { entries: result.entry == null ? [] : [result.entry] };\n            }\n            else {\n                // descend into subshard\n                const block = await blockstore.get(link.Hash, options);\n                node = decode(block);\n                options.onProgress?.(new CustomProgressEvent('unixfs:exporter:walk:hamt-sharded-directory', {\n                    cid: link.Hash\n                }));\n                return { entries: listDirectory(node, path, resolve, depth, blockstore, options) };\n            }\n        };\n    }), source => parallel(source, { ordered: true }));\n    for await (const { entries } of results) {\n        yield* entries;\n    }\n}\nexport default hamtShardedDirectoryContent;\n//# sourceMappingURL=hamt-sharded-directory.js.map","import { decode } from '@ipld/dag-pb';\nimport errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport findShardCid from '../../utils/find-cid-in-shard.js';\nimport contentDirectory from './content/directory.js';\nimport contentFile from './content/file.js';\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js';\nconst findLinkCid = (node, name) => {\n    const link = node.Links.find(link => link.Name === name);\n    return link?.Hash;\n};\nconst contentExporters = {\n    raw: contentFile,\n    file: contentFile,\n    directory: contentDirectory,\n    'hamt-sharded-directory': contentHamtShardedDirectory,\n    metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n        return () => [];\n    },\n    symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n        return () => [];\n    }\n};\n// @ts-expect-error types are wrong\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n    const block = await blockstore.get(cid, options);\n    const node = decode(block);\n    let unixfs;\n    let next;\n    if (name == null) {\n        name = cid.toString();\n    }\n    if (node.Data == null) {\n        throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n    }\n    try {\n        unixfs = UnixFS.unmarshal(node.Data);\n    }\n    catch (err) {\n        // non-UnixFS dag-pb node? It could happen.\n        throw errCode(err, 'ERR_NOT_UNIXFS');\n    }\n    if (path == null) {\n        path = name;\n    }\n    if (toResolve.length > 0) {\n        let linkCid;\n        if (unixfs?.type === 'hamt-sharded-directory') {\n            // special case - unixfs v1 hamt shards\n            linkCid = await findShardCid(node, toResolve[0], blockstore);\n        }\n        else {\n            linkCid = findLinkCid(node, toResolve[0]);\n        }\n        if (linkCid == null) {\n            throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND');\n        }\n        // remove the path component we have resolved\n        const nextName = toResolve.shift();\n        const nextPath = `${path}/${nextName}`;\n        next = {\n            cid: linkCid,\n            toResolve,\n            name: nextName ?? '',\n            path: nextPath\n        };\n    }\n    const content = contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore);\n    if (content == null) {\n        throw errCode(new Error('could not find content exporter'), 'ERR_NOT_FOUND');\n    }\n    if (unixfs.isDirectory()) {\n        return {\n            entry: {\n                type: 'directory',\n                name,\n                path,\n                cid,\n                content,\n                unixfs,\n                depth,\n                node,\n                size: unixfs.fileSize()\n            },\n            next\n        };\n    }\n    return {\n        entry: {\n            type: 'file',\n            name,\n            path,\n            cid,\n            content,\n            unixfs,\n            depth,\n            node,\n            size: unixfs.fileSize()\n        },\n        next\n    };\n};\nexport default unixFsResolver;\n//# sourceMappingURL=index.js.map","import * as dagCbor from '@ipld/dag-cbor';\nimport * as dagPb from '@ipld/dag-pb';\nimport errCode from 'err-code';\nimport * as raw from 'multiformats/codecs/raw';\nimport { identity } from 'multiformats/hashes/identity';\nimport dagCborResolver from './dag-cbor.js';\nimport identifyResolver from './identity.js';\nimport rawResolver from './raw.js';\nimport dagPbResolver from './unixfs-v1/index.js';\nconst resolvers = {\n    [dagPb.code]: dagPbResolver,\n    [raw.code]: rawResolver,\n    [dagCbor.code]: dagCborResolver,\n    [identity.code]: identifyResolver\n};\nconst resolve = async (cid, name, path, toResolve, depth, blockstore, options) => {\n    const resolver = resolvers[cid.code];\n    if (resolver == null) {\n        throw errCode(new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER');\n    }\n    return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n};\nexport default resolve;\n//# sourceMappingURL=index.js.map","import errCode from 'err-code';\nimport last from 'it-last';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nconst toPathComponents = (path = '') => {\n    // split on / unless escaped with \\\n    return (path\n        .trim()\n        .match(/([^\\\\^/]|\\\\\\/)+/g) ?? [])\n        .filter(Boolean);\n};\nconst cidAndRest = (path) => {\n    if (path instanceof Uint8Array) {\n        return {\n            cid: CID.decode(path),\n            toResolve: []\n        };\n    }\n    const cid = CID.asCID(path);\n    if (cid != null) {\n        return {\n            cid,\n            toResolve: []\n        };\n    }\n    if (typeof path === 'string') {\n        if (path.indexOf('/ipfs/') === 0) {\n            path = path.substring(6);\n        }\n        const output = toPathComponents(path);\n        return {\n            cid: CID.parse(output[0]),\n            toResolve: output.slice(1)\n        };\n    }\n    throw errCode(new Error(`Unknown path type ${path}`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n    let { cid, toResolve } = cidAndRest(path);\n    let name = cid.toString();\n    let entryPath = name;\n    const startingDepth = toResolve.length;\n    while (true) {\n        const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n        if (result.entry == null && result.next == null) {\n            throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND');\n        }\n        if (result.entry != null) {\n            yield result.entry;\n        }\n        if (result.next == null) {\n            return;\n        }\n        // resolve further parts\n        toResolve = result.next.toResolve;\n        cid = result.next.cid;\n        name = result.next.name;\n        entryPath = result.next.path;\n    }\n}\nexport async function exporter(path, blockstore, options = {}) {\n    const result = await last(walkPath(path, blockstore, options));\n    if (result == null) {\n        throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND');\n    }\n    return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n    const node = await exporter(path, blockstore, options);\n    if (node == null) {\n        return;\n    }\n    yield node;\n    if (node.type === 'directory') {\n        for await (const child of recurse(node, options)) {\n            yield child;\n        }\n    }\n    async function* recurse(node, options) {\n        for await (const file of node.content(options)) {\n            yield file;\n            if (file instanceof Uint8Array) {\n                continue;\n            }\n            if (file.type === 'directory') {\n                yield* recurse(file, options);\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export class UnixFSError extends Error {\n    name;\n    code;\n    constructor(message, name, code) {\n        super(message);\n        this.name = name;\n        this.code = code;\n    }\n}\nexport class NotUnixFSError extends UnixFSError {\n    constructor(message = 'not a Unixfs node') {\n        super(message, 'NotUnixFSError', 'ERR_NOT_UNIXFS');\n    }\n}\nexport class InvalidPBNodeError extends UnixFSError {\n    constructor(message = 'invalid PBNode') {\n        super(message, 'InvalidPBNodeError', 'ERR_INVALID_PBNODE');\n    }\n}\nexport class UnknownError extends UnixFSError {\n    constructor(message = 'unknown error') {\n        super(message, 'InvalidPBNodeError', 'ERR_UNKNOWN_ERROR');\n    }\n}\nexport class AlreadyExistsError extends UnixFSError {\n    constructor(message = 'path already exists') {\n        super(message, 'AlreadyExistsError', 'ERR_ALREADY_EXISTS');\n    }\n}\nexport class DoesNotExistError extends UnixFSError {\n    constructor(message = 'path does not exist') {\n        super(message, 'DoesNotExistError', 'ERR_DOES_NOT_EXIST');\n    }\n}\nexport class NoContentError extends UnixFSError {\n    constructor(message = 'no content') {\n        super(message, 'NoContentError', 'ERR_NO_CONTENT');\n    }\n}\nexport class NotAFileError extends UnixFSError {\n    constructor(message = 'not a file') {\n        super(message, 'NotAFileError', 'ERR_NOT_A_FILE');\n    }\n}\nexport class NotADirectoryError extends UnixFSError {\n    constructor(message = 'not a directory') {\n        super(message, 'NotADirectoryError', 'ERR_NOT_A_DIRECTORY');\n    }\n}\nexport class InvalidParametersError extends UnixFSError {\n    constructor(message = 'invalid parameters') {\n        super(message, 'InvalidParametersError', 'ERR_INVALID_PARAMETERS');\n    }\n}\n//# sourceMappingURL=errors.js.map","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function wrapHash(hashFn) {\n    function hashing(value) {\n        if (value instanceof InfiniteHash) {\n            // already a hash. return it\n            return value;\n        }\n        else {\n            return new InfiniteHash(value, hashFn);\n        }\n    }\n    return hashing;\n}\nexport class InfiniteHash {\n    _value;\n    _hashFn;\n    _depth;\n    _availableBits;\n    _currentBufferIndex;\n    _buffers;\n    constructor(value, hashFn) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error('can only hash Uint8Arrays');\n        }\n        this._value = value;\n        this._hashFn = hashFn;\n        this._depth = -1;\n        this._availableBits = 0;\n        this._currentBufferIndex = 0;\n        this._buffers = [];\n    }\n    async take(bits) {\n        let pendingBits = bits;\n        while (this._availableBits < pendingBits) {\n            await this._produceMoreBits();\n        }\n        let result = 0;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const available = Math.min(hash.availableBits(), pendingBits);\n            const took = hash.take(available);\n            result = (result << available) + took;\n            pendingBits -= available;\n            this._availableBits -= available;\n            if (hash.availableBits() === 0) {\n                this._currentBufferIndex++;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        let pendingBits = bits;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits);\n            hash.untake(availableForUntake);\n            pendingBits -= availableForUntake;\n            this._availableBits += availableForUntake;\n            if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n                this._depth--;\n                this._currentBufferIndex--;\n            }\n        }\n    }\n    async _produceMoreBits() {\n        this._depth++;\n        const value = this._depth > 0 ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value;\n        const hashValue = await this._hashFn(value);\n        const buffer = new ConsumableBuffer(hashValue);\n        this._buffers.push(buffer);\n        this._availableBits += buffer.availableBits();\n    }\n}\nconst START_MASKS = [\n    0b11111111,\n    0b11111110,\n    0b11111100,\n    0b11111000,\n    0b11110000,\n    0b11100000,\n    0b11000000,\n    0b10000000\n];\nconst STOP_MASKS = [\n    0b00000001,\n    0b00000011,\n    0b00000111,\n    0b00001111,\n    0b00011111,\n    0b00111111,\n    0b01111111,\n    0b11111111\n];\nexport class ConsumableBuffer {\n    _value;\n    _currentBytePos;\n    _currentBitPos;\n    constructor(value) {\n        this._value = value;\n        this._currentBytePos = value.length - 1;\n        this._currentBitPos = 7;\n    }\n    availableBits() {\n        return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n    totalBits() {\n        return this._value.length * 8;\n    }\n    take(bits) {\n        let pendingBits = bits;\n        let result = 0;\n        while (pendingBits > 0 && this._haveBits()) {\n            const byte = this._value[this._currentBytePos];\n            const availableBits = this._currentBitPos + 1;\n            const taking = Math.min(availableBits, pendingBits);\n            const value = byteBitsToInt(byte, availableBits - taking, taking);\n            result = (result << taking) + value;\n            pendingBits -= taking;\n            this._currentBitPos -= taking;\n            if (this._currentBitPos < 0) {\n                this._currentBitPos = 7;\n                this._currentBytePos--;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        this._currentBitPos += bits;\n        while (this._currentBitPos > 7) {\n            this._currentBitPos -= 8;\n            this._currentBytePos += 1;\n        }\n    }\n    _haveBits() {\n        return this._currentBytePos >= 0;\n    }\n}\nfunction byteBitsToInt(byte, start, length) {\n    const mask = maskFor(start, length);\n    return (byte & mask) >>> start;\n}\nfunction maskFor(start, length) {\n    return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}\n//# sourceMappingURL=consumable-hash.js.map","import { bytes } from 'multiformats'\nimport { from } from 'multiformats/hashes/hasher'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","import { murmur3128 } from '@multiformats/murmur3';\nexport const hamtHashCode = BigInt(murmur3128.code);\nexport const hamtBucketBits = 8;\nexport async function hamtHashFn(buf) {\n    return (await murmur3128.encode(buf))\n        // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n        // implementation only uses the first 64, so we must do the same\n        // for parity..\n        .subarray(0, 8)\n        // Invert buffer because that's how Go impl does it\n        .reverse();\n}\n//# sourceMappingURL=hamt-constants.js.map","import * as dagPb from '@ipld/dag-pb';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nexport const persist = async (buffer, blockstore, options) => {\n    if (options.codec == null) {\n        options.codec = dagPb;\n    }\n    const multihash = await sha256.digest(buffer);\n    const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n    await blockstore.put(cid, buffer, {\n        ...options,\n        signal: options.signal\n    });\n    return cid;\n};\n//# sourceMappingURL=persist.js.map","import { encode, prepare } from '@ipld/dag-pb';\nimport { createHAMT, Bucket } from 'hamt-sharding';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { CID } from 'multiformats/cid';\nimport { hamtHashCode, hamtHashFn } from './hamt-constants.js';\nimport { persist } from './persist.js';\nclass Dir {\n    options;\n    root;\n    dir;\n    path;\n    dirty;\n    flat;\n    parent;\n    parentKey;\n    unixfs;\n    mode;\n    mtime;\n    cid;\n    size;\n    nodeSize;\n    constructor(props, options) {\n        this.options = options ?? {};\n        this.root = props.root;\n        this.dir = props.dir;\n        this.path = props.path;\n        this.dirty = props.dirty;\n        this.flat = props.flat;\n        this.parent = props.parent;\n        this.parentKey = props.parentKey;\n        this.unixfs = props.unixfs;\n        this.mode = props.mode;\n        this.mtime = props.mtime;\n    }\n}\nexport class DirSharded extends Dir {\n    _bucket;\n    constructor(props, options) {\n        super(props, options);\n        this._bucket = createHAMT({\n            hashFn: hamtHashFn,\n            bits: 8\n        });\n    }\n    async put(name, value) {\n        this.cid = undefined;\n        this.size = undefined;\n        this.nodeSize = undefined;\n        await this._bucket.put(name, value);\n    }\n    async get(name) {\n        return this._bucket.get(name);\n    }\n    childCount() {\n        return this._bucket.leafCount();\n    }\n    directChildrenCount() {\n        return this._bucket.childrenCount();\n    }\n    onlyChild() {\n        return this._bucket.onlyChild();\n    }\n    async *eachChildSeries() {\n        for await (const { key, value } of this._bucket.eachLeafSeries()) {\n            yield {\n                key,\n                child: value\n            };\n        }\n    }\n    estimateNodeSize() {\n        if (this.nodeSize !== undefined) {\n            return this.nodeSize;\n        }\n        this.nodeSize = calculateSize(this._bucket, this, this.options);\n        return this.nodeSize;\n    }\n    async *flush(blockstore) {\n        for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n            yield {\n                ...entry,\n                path: this.path\n            };\n        }\n    }\n}\nasync function* flush(bucket, blockstore, shardRoot, options) {\n    const children = bucket._children;\n    const links = [];\n    let childrenSize = 0n;\n    for (let i = 0; i < children.length; i++) {\n        const child = children.get(i);\n        if (child == null) {\n            continue;\n        }\n        const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n        if (child instanceof Bucket) {\n            let shard;\n            for await (const subShard of flush(child, blockstore, null, options)) {\n                shard = subShard;\n            }\n            if (shard == null) {\n                throw new Error('Could not flush sharded directory, no subshard found');\n            }\n            links.push({\n                Name: labelPrefix,\n                Tsize: Number(shard.size),\n                Hash: shard.cid\n            });\n            childrenSize += shard.size;\n        }\n        else if (isDir(child.value)) {\n            const dir = child.value;\n            let flushedDir;\n            for await (const entry of dir.flush(blockstore)) {\n                flushedDir = entry;\n                yield flushedDir;\n            }\n            if (flushedDir == null) {\n                throw new Error('Did not flush dir');\n            }\n            const label = labelPrefix + child.key;\n            links.push({\n                Name: label,\n                Tsize: Number(flushedDir.size),\n                Hash: flushedDir.cid\n            });\n            childrenSize += flushedDir.size;\n        }\n        else {\n            const value = child.value;\n            if (value.cid == null) {\n                continue;\n            }\n            const label = labelPrefix + child.key;\n            const size = value.size;\n            links.push({\n                Name: label,\n                Tsize: Number(size),\n                Hash: value.cid\n            });\n            childrenSize += BigInt(size ?? 0);\n        }\n    }\n    // go-ipfs uses little endian, that's why we have to\n    // reverse the bit field before storing it\n    const data = Uint8Array.from(children.bitField().reverse());\n    const dir = new UnixFS({\n        type: 'hamt-sharded-directory',\n        data,\n        fanout: BigInt(bucket.tableSize()),\n        hashType: hamtHashCode,\n        mtime: shardRoot?.mtime,\n        mode: shardRoot?.mode\n    });\n    const node = {\n        Data: dir.marshal(),\n        Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    const size = BigInt(buffer.byteLength) + childrenSize;\n    yield {\n        cid,\n        unixfs: dir,\n        size\n    };\n}\nfunction isDir(obj) {\n    return typeof obj.flush === 'function';\n}\nfunction calculateSize(bucket, shardRoot, options) {\n    const children = bucket._children;\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n        const child = children.get(i);\n        if (child == null) {\n            continue;\n        }\n        const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n        if (child instanceof Bucket) {\n            const size = calculateSize(child, null, options);\n            links.push({\n                Name: labelPrefix,\n                Tsize: Number(size),\n                Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n            });\n        }\n        else if (typeof child.value.flush === 'function') {\n            const dir = child.value;\n            const size = dir.nodeSize();\n            links.push({\n                Name: labelPrefix + child.key,\n                Tsize: Number(size),\n                Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n            });\n        }\n        else {\n            const value = child.value;\n            if (value.cid == null) {\n                continue;\n            }\n            const label = labelPrefix + child.key;\n            const size = value.size;\n            links.push({\n                Name: label,\n                Tsize: Number(size),\n                Hash: value.cid\n            });\n        }\n    }\n    // go-ipfs uses little endian, that's why we have to\n    // reverse the bit field before storing it\n    const data = Uint8Array.from(children.bitField().reverse());\n    const dir = new UnixFS({\n        type: 'hamt-sharded-directory',\n        data,\n        fanout: BigInt(bucket.tableSize()),\n        hashType: hamtHashCode,\n        mtime: shardRoot?.mtime,\n        mode: shardRoot?.mode\n    });\n    const buffer = encode(prepare({\n        Data: dir.marshal(),\n        Links: links\n    }));\n    return buffer.length;\n}\n// we use these to calculate the node size to use as a check for whether a directory\n// should be sharded or not. Since CIDs have a constant length and We're only\n// interested in the data length and not the actual content identifier we can use\n// any old CID instead of having to hash the data which is expensive.\nexport const CID_V0 = CID.parse('QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn');\nexport const CID_V1 = CID.parse('zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi');\n//# sourceMappingURL=dir-sharded.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport last from 'it-last';\n// @ts-expect-error no types\nimport SparseArray from 'sparse-array';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { wrapHash } from './consumable-hash.js';\nimport { DirSharded } from './dir-sharded.js';\nimport { hamtHashCode, hamtHashFn, hamtBucketBits } from './hamt-constants.js';\nimport { persist } from './persist.js';\nconst log = logger('helia:unixfs:commands:utils:hamt-utils');\nexport const toPrefix = (position) => {\n    return position\n        .toString(16)\n        .toUpperCase()\n        .padStart(2, '0')\n        .substring(0, 2);\n};\nexport const createShard = async (blockstore, contents, options) => {\n    const shard = new DirSharded({\n        root: true,\n        dir: true,\n        parent: undefined,\n        parentKey: undefined,\n        path: '',\n        dirty: true,\n        flat: false,\n        mtime: options.mtime,\n        mode: options.mode\n    }, options);\n    for (let i = 0; i < contents.length; i++) {\n        await shard._bucket.put(contents[i].name, {\n            size: contents[i].size,\n            cid: contents[i].cid\n        });\n    }\n    const res = await last(shard.flush(blockstore));\n    if (res == null) {\n        throw new Error('Flushing shard yielded no result');\n    }\n    return res;\n};\nexport const updateShardedDirectory = async (path, blockstore, options) => {\n    // persist any metadata on the shard root\n    const shardRoot = UnixFS.unmarshal(path[0].node.Data ?? new Uint8Array(0));\n    // this is always the same\n    const fanout = BigInt(Math.pow(2, hamtBucketBits));\n    // start from the leaf and ascend to the root\n    path.reverse();\n    let cid;\n    let node;\n    for (let i = 0; i < path.length; i++) {\n        const isRoot = i === path.length - 1;\n        const segment = path[i];\n        // go-ipfs uses little endian, that's why we have to\n        // reverse the bit field before storing it\n        const data = Uint8Array.from(segment.children.bitField().reverse());\n        const dir = new UnixFS({\n            type: 'hamt-sharded-directory',\n            data,\n            fanout,\n            hashType: hamtHashCode\n        });\n        if (isRoot) {\n            dir.mtime = shardRoot.mtime;\n            dir.mode = shardRoot.mode;\n        }\n        node = {\n            Data: dir.marshal(),\n            Links: segment.node.Links\n        };\n        const block = dagPB.encode(dagPB.prepare(node));\n        cid = await persist(block, blockstore, options);\n        if (!isRoot) {\n            // update link in parent sub-shard\n            const nextSegment = path[i + 1];\n            if (nextSegment == null) {\n                throw new Error('Was not operating on shard root but also had no parent?');\n            }\n            log('updating link in parent sub-shard with prefix %s', nextSegment.prefix);\n            nextSegment.node.Links = nextSegment.node.Links.filter(l => l.Name !== nextSegment.prefix);\n            nextSegment.node.Links.push({\n                Name: nextSegment.prefix,\n                Hash: cid,\n                Tsize: segment.node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), block.byteLength)\n            });\n        }\n    }\n    if (cid == null || node == null) {\n        throw new Error('Noting persisted');\n    }\n    return { cid, node };\n};\nexport const recreateShardedDirectory = async (cid, fileName, blockstore, options) => {\n    const wrapped = wrapHash(hamtHashFn);\n    const hash = wrapped(uint8ArrayFromString(fileName));\n    const path = [];\n    // descend the HAMT, loading each layer as we head towards the target child\n    while (true) {\n        const block = await blockstore.get(cid, options);\n        const node = dagPB.decode(block);\n        const children = new SparseArray();\n        const index = await hash.take(hamtBucketBits);\n        const prefix = toPrefix(index);\n        path.push({\n            prefix,\n            children,\n            node\n        });\n        let childLink;\n        // update sparsearray child layout - the bitfield is used as the data field for the\n        // intermediate DAG node so this is required to generate consistent hashes\n        for (const link of node.Links) {\n            const linkName = link.Name ?? '';\n            if (linkName.length < 2) {\n                throw new Error('Invalid HAMT - link name was too short');\n            }\n            const position = parseInt(linkName.substring(0, 2), 16);\n            children.set(position, true);\n            // we found the child we are looking for\n            if (linkName.startsWith(prefix)) {\n                childLink = link;\n            }\n        }\n        if (childLink == null) {\n            log('no link found with prefix %s for %s', prefix, fileName);\n            // hash.untake(hamtBucketBits)\n            break;\n        }\n        const linkName = childLink.Name ?? '';\n        if (linkName.length < 2) {\n            throw new Error('Invalid HAMT - link name was too short');\n        }\n        if (linkName.length === 2) {\n            // found sub-shard\n            cid = childLink.Hash;\n            log('descend into sub-shard with prefix %s', linkName);\n            continue;\n        }\n        break;\n    }\n    return { path, hash };\n};\n//# sourceMappingURL=hamt-utils.js.map","import * as dagPb from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { CID_V0, CID_V1 } from './dir-sharded.js';\n/**\n * Estimate node size only based on DAGLink name and CID byte lengths\n * https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n *\n * If the node is a hamt sharded directory the calculation is based on if it was a regular directory.\n */\nexport async function isOverShardThreshold(node, blockstore, threshold, options) {\n    if (node.Data == null) {\n        throw new Error('DagPB node had no data');\n    }\n    const unixfs = UnixFS.unmarshal(node.Data);\n    let size;\n    if (unixfs.type === 'directory') {\n        size = estimateNodeSize(node);\n    }\n    else if (unixfs.type === 'hamt-sharded-directory') {\n        size = await estimateShardSize(node, 0, threshold, blockstore, options);\n    }\n    else {\n        throw new Error('Can only estimate the size of directories or shards');\n    }\n    return size > threshold;\n}\nfunction estimateNodeSize(node) {\n    let size = 0;\n    // estimate size only based on DAGLink name and CID byte lengths\n    // https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n    for (const link of node.Links) {\n        size += (link.Name ?? '').length;\n        size += link.Hash.version === 1 ? CID_V1.bytes.byteLength : CID_V0.bytes.byteLength;\n    }\n    return size;\n}\nasync function estimateShardSize(node, current, max, blockstore, options) {\n    if (current > max) {\n        return max;\n    }\n    if (node.Data == null) {\n        return current;\n    }\n    const unixfs = UnixFS.unmarshal(node.Data);\n    if (!unixfs.isDirectory()) {\n        return current;\n    }\n    for (const link of node.Links) {\n        let name = link.Name ?? '';\n        // remove hamt hash prefix from name\n        name = name.substring(2);\n        current += name.length;\n        current += link.Hash.bytes.byteLength;\n        if (link.Hash.code === dagPb.code) {\n            const block = await blockstore.get(link.Hash, options);\n            const node = dagPb.decode(block);\n            current += await estimateShardSize(node, current, max, blockstore, options);\n        }\n    }\n    return current;\n}\n//# sourceMappingURL=is-over-shard-threshold.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\n// @ts-expect-error no types\nimport SparseArray from 'sparse-array';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { AlreadyExistsError, InvalidParametersError, InvalidPBNodeError } from '../../errors.js';\nimport { wrapHash } from './consumable-hash.js';\nimport { hamtBucketBits, hamtHashFn } from './hamt-constants.js';\nimport { createShard, recreateShardedDirectory, toPrefix, updateShardedDirectory } from './hamt-utils.js';\nimport { isOverShardThreshold } from './is-over-shard-threshold.js';\nconst log = logger('helia:unixfs:components:utils:add-link');\nexport async function addLink(parent, child, blockstore, options) {\n    if (parent.node.Data == null) {\n        throw new InvalidParametersError('Invalid parent passed to addLink');\n    }\n    const meta = UnixFS.unmarshal(parent.node.Data);\n    if (meta.type === 'hamt-sharded-directory') {\n        log('adding link to sharded directory');\n        return addToShardedDirectory(parent, child, blockstore, options);\n    }\n    log(`adding ${child.Name} (${child.Hash}) to regular directory`);\n    const result = await addToDirectory(parent, child, blockstore, options);\n    if (await isOverShardThreshold(result.node, blockstore, options.shardSplitThresholdBytes, options)) {\n        log('converting directory to sharded directory');\n        const converted = await convertToShardedDirectory(result, blockstore);\n        result.cid = converted.cid;\n        result.node = dagPB.decode(await blockstore.get(converted.cid, options));\n    }\n    return result;\n}\nconst convertToShardedDirectory = async (parent, blockstore) => {\n    if (parent.node.Data == null) {\n        throw new InvalidParametersError('Invalid parent passed to convertToShardedDirectory');\n    }\n    const unixfs = UnixFS.unmarshal(parent.node.Data);\n    const result = await createShard(blockstore, parent.node.Links.map(link => ({\n        name: (link.Name ?? ''),\n        size: BigInt(link.Tsize ?? 0),\n        cid: link.Hash\n    })), {\n        mode: unixfs.mode,\n        mtime: unixfs.mtime,\n        cidVersion: parent.cid.version\n    });\n    log(`converted directory to sharded directory ${result.cid}`);\n    return result;\n};\nconst addToDirectory = async (parent, child, blockstore, options) => {\n    // Remove existing link if it exists\n    const parentLinks = parent.node.Links.filter((link) => {\n        const matches = link.Name === child.Name;\n        if (matches && !options.allowOverwriting) {\n            throw new AlreadyExistsError();\n        }\n        return !matches;\n    });\n    parentLinks.push(child);\n    if (parent.node.Data == null) {\n        throw new InvalidPBNodeError('Parent node with no data passed to addToDirectory');\n    }\n    const node = UnixFS.unmarshal(parent.node.Data);\n    let data;\n    if (node.mtime != null) {\n        // Update mtime if previously set\n        const ms = Date.now();\n        const secs = Math.floor(ms / 1000);\n        node.mtime = {\n            secs: BigInt(secs),\n            nsecs: (ms - (secs * 1000)) * 1000\n        };\n        data = node.marshal();\n    }\n    else {\n        data = parent.node.Data;\n    }\n    parent.node = dagPB.prepare({\n        Data: data,\n        Links: parentLinks\n    });\n    // Persist the new parent PbNode\n    const buf = dagPB.encode(parent.node);\n    const hash = await sha256.digest(buf);\n    const cid = CID.create(parent.cid.version, dagPB.code, hash);\n    await blockstore.put(cid, buf);\n    return {\n        node: parent.node,\n        cid\n    };\n};\nconst addToShardedDirectory = async (parent, child, blockstore, options) => {\n    const { path, hash } = await recreateShardedDirectory(parent.cid, child.Name, blockstore, options);\n    const finalSegment = path[path.length - 1];\n    if (finalSegment == null) {\n        throw new Error('Invalid HAMT, could not generate path');\n    }\n    // find the next prefix\n    // const index = await hash.take(hamtBucketBits)\n    const prefix = finalSegment.prefix;\n    const index = parseInt(prefix, 16);\n    log('next prefix for %s is %s', child.Name, prefix);\n    const linkName = `${prefix}${child.Name}`;\n    const existingLink = finalSegment.node.Links.find(l => (l.Name ?? '').startsWith(prefix));\n    if (existingLink != null) {\n        log('link %s was present in shard', linkName);\n        // link is already present in shard\n        if (existingLink.Name === linkName) {\n            // file with same name is already present in shard\n            if (!options.allowOverwriting) {\n                throw new AlreadyExistsError();\n            }\n            log('overwriting %s in subshard', child.Name);\n            finalSegment.node.Links = finalSegment.node.Links.filter(l => l.Name !== linkName);\n            finalSegment.node.Links.push({\n                Name: linkName,\n                Hash: child.Hash,\n                Tsize: child.Tsize\n            });\n        }\n        else if (existingLink.Name?.length === 2) {\n            throw new Error('Existing link was subshard?!');\n        }\n        else {\n            // conflict, add a new HAMT segment\n            log('prefix %s already exists, creating new subshard', prefix);\n            // find the sibling we are going to replace\n            const index = finalSegment.node.Links.findIndex(l => l.Name?.startsWith(prefix));\n            const sibling = finalSegment.node.Links.splice(index, 1)[0];\n            // give the sibling a new HAMT prefix\n            const siblingName = (sibling.Name ?? '').substring(2);\n            const wrapped = wrapHash(hamtHashFn);\n            const siblingHash = wrapped(uint8ArrayFromString(siblingName));\n            // discard hash bits until we reach the subshard depth\n            for (let i = 0; i < path.length; i++) {\n                await siblingHash.take(hamtBucketBits);\n            }\n            while (true) {\n                const siblingIndex = await siblingHash.take(hamtBucketBits);\n                const siblingPrefix = toPrefix(siblingIndex);\n                sibling.Name = `${siblingPrefix}${siblingName}`;\n                // calculate the target file's HAMT prefix in the new sub-shard\n                const newIndex = await hash.take(hamtBucketBits);\n                const newPrefix = toPrefix(newIndex);\n                if (siblingPrefix === newPrefix) {\n                    // the two sibling names have caused another conflict - add an intermediate node to\n                    // the HAMT and try again\n                    // create the child locations\n                    const children = new SparseArray();\n                    children.set(newIndex, true);\n                    path.push({\n                        prefix: newPrefix,\n                        children,\n                        node: {\n                            Links: []\n                        }\n                    });\n                    continue;\n                }\n                // create the child locations\n                const children = new SparseArray();\n                children.set(newIndex, true);\n                children.set(siblingIndex, true);\n                // add our new segment\n                path.push({\n                    prefix,\n                    children,\n                    node: {\n                        Links: [\n                            sibling, {\n                                Name: `${newPrefix}${child.Name}`,\n                                Hash: child.Hash,\n                                Tsize: child.Tsize\n                            }\n                        ]\n                    }\n                });\n                break;\n            }\n        }\n    }\n    else {\n        log('link %s was not present in sub-shard', linkName);\n        // add new link to shard\n        child.Name = linkName;\n        finalSegment.node.Links.push(child);\n        finalSegment.children.set(index, true);\n        log('adding %s to existing sub-shard', linkName);\n    }\n    return updateShardedDirectory(path, blockstore, options);\n};\n//# sourceMappingURL=add-link.js.map","import { exporter } from 'ipfs-unixfs-exporter';\nimport { NotADirectoryError } from '../../errors.js';\nexport async function cidToDirectory(cid, blockstore, options = {}) {\n    const entry = await exporter(cid, blockstore, options);\n    if (entry.type !== 'directory') {\n        throw new NotADirectoryError(`${cid.toString()} was not a UnixFS directory`);\n    }\n    return {\n        cid,\n        node: entry.node\n    };\n}\n//# sourceMappingURL=cid-to-directory.js.map","import * as dagPb from '@ipld/dag-pb';\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport { NotUnixFSError } from '../../errors.js';\nexport async function cidToPBLink(cid, name, blockstore, options) {\n    const sourceEntry = await exporter(cid, blockstore, options);\n    if (sourceEntry.type !== 'directory' && sourceEntry.type !== 'file' && sourceEntry.type !== 'raw') {\n        throw new NotUnixFSError(`${cid.toString()} was not a UnixFS node`);\n    }\n    return {\n        Name: name,\n        Tsize: sourceEntry.node instanceof Uint8Array ? sourceEntry.node.byteLength : dagNodeTsize(sourceEntry.node),\n        Hash: cid\n    };\n}\nfunction dagNodeTsize(node) {\n    const linkSizes = node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0);\n    return dagPb.encode(node).byteLength + linkSizes;\n}\n//# sourceMappingURL=cid-to-pblink.js.map","import { logger } from '@libp2p/logger';\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport { DoesNotExistError, InvalidParametersError } from '../../errors.js';\nimport { addLink } from './add-link.js';\nimport { cidToDirectory } from './cid-to-directory.js';\nimport { cidToPBLink } from './cid-to-pblink.js';\nconst log = logger('helia:unixfs:components:utils:resolve');\nexport async function resolve(cid, path, blockstore, options) {\n    if (path == null || path === '') {\n        return { cid };\n    }\n    log('resolve \"%s\" under %c', path, cid);\n    const parts = path.split('/').filter(Boolean);\n    const segments = [{\n            name: '',\n            cid,\n            size: 0n\n        }];\n    for (let i = 0; i < parts.length; i++) {\n        const part = parts[i];\n        const result = await exporter(cid, blockstore, options);\n        log('resolving \"%s\"', part, result);\n        if (result.type === 'file') {\n            if (i < parts.length - 1) {\n                throw new InvalidParametersError('Path was invalid');\n            }\n            cid = result.cid;\n        }\n        else if (result.type === 'directory') {\n            let dirCid;\n            for await (const entry of result.content()) {\n                if (entry.name === part) {\n                    dirCid = entry.cid;\n                    break;\n                }\n            }\n            if (dirCid == null) {\n                throw new DoesNotExistError('Could not find path in directory');\n            }\n            cid = dirCid;\n            segments.push({\n                name: part,\n                cid,\n                size: result.size\n            });\n        }\n        else {\n            throw new InvalidParametersError('Could not resolve path');\n        }\n    }\n    log('resolved %s to %c', path, cid);\n    return {\n        cid,\n        path,\n        segments\n    };\n}\n/**\n * Where we have descended into a DAG to update a child node, ascend up the DAG creating\n * new hashes and blocks for the changed content\n */\nexport async function updatePathCids(cid, result, blockstore, options) {\n    if (result.segments == null || result.segments.length === 0) {\n        return cid;\n    }\n    let child = result.segments.pop();\n    if (child == null) {\n        throw new Error('Insufficient segments');\n    }\n    child.cid = cid;\n    result.segments.reverse();\n    for (const parent of result.segments) {\n        const [directory, pblink] = await Promise.all([\n            cidToDirectory(parent.cid, blockstore, options),\n            cidToPBLink(child.cid, child.name, blockstore, options)\n        ]);\n        const result = await addLink(directory, pblink, blockstore, {\n            ...options,\n            allowOverwriting: true,\n            cidVersion: cid.version\n        });\n        cid = result.cid;\n        parent.cid = cid;\n        child = parent;\n    }\n    return cid;\n}\n//# sourceMappingURL=resolve.js.map","import { exporter } from 'ipfs-unixfs-exporter';\nimport mergeOpts from 'merge-options';\nimport { NoContentError, NotAFileError } from '../errors.js';\nimport { resolve } from './utils/resolve.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst defaultOptions = {};\nexport async function* cat(cid, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    const resolved = await resolve(cid, opts.path, blockstore, opts);\n    const result = await exporter(resolved.cid, blockstore, opts);\n    if (result.type !== 'file' && result.type !== 'raw') {\n        throw new NotAFileError();\n    }\n    if (result.content == null) {\n        throw new NoContentError();\n    }\n    yield* result.content(opts);\n}\n//# sourceMappingURL=cat.js.map","export const SHARD_SPLIT_THRESHOLD_BYTES = 262144;\n//# sourceMappingURL=constants.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { recursive } from 'ipfs-unixfs-exporter';\nimport { importer } from 'ipfs-unixfs-importer';\nimport last from 'it-last';\nimport { pipe } from 'it-pipe';\nimport mergeOpts from 'merge-options';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js';\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js';\nimport { persist } from './utils/persist.js';\nimport { resolve, updatePathCids } from './utils/resolve.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:chmod');\nconst defaultOptions = {\n    recursive: false,\n    shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n};\nexport async function chmod(cid, mode, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    const resolved = await resolve(cid, opts.path, blockstore, options);\n    log('chmod %c %d', resolved.cid, mode);\n    if (opts.recursive) {\n        // recursively export from root CID, change perms of each entry then reimport\n        // but do not reimport files, only manipulate dag-pb nodes\n        const root = await pipe(async function* () {\n            for await (const entry of recursive(resolved.cid, blockstore, options)) {\n                let metadata;\n                let links = [];\n                if (entry.type === 'raw') {\n                    // convert to UnixFS\n                    metadata = new UnixFS({ type: 'file', data: entry.node });\n                }\n                else if (entry.type === 'file' || entry.type === 'directory') {\n                    metadata = entry.unixfs;\n                    links = entry.node.Links;\n                }\n                else {\n                    throw new NotUnixFSError();\n                }\n                metadata.mode = mode;\n                const node = {\n                    Data: metadata.marshal(),\n                    Links: links\n                };\n                yield {\n                    path: entry.path,\n                    content: node\n                };\n            }\n        }, \n        // @ts-expect-error cannot combine progress types\n        (source) => importer(source, blockstore, {\n            ...opts,\n            dagBuilder: async function* (source, block) {\n                for await (const entry of source) {\n                    yield async function () {\n                        // @ts-expect-error cannot derive type\n                        const node = entry.content;\n                        const buf = dagPB.encode(node);\n                        const updatedCid = await persist(buf, block, {\n                            ...opts,\n                            cidVersion: cid.version\n                        });\n                        if (node.Data == null) {\n                            throw new InvalidPBNodeError(`${updatedCid} had no data`);\n                        }\n                        const unixfs = UnixFS.unmarshal(node.Data);\n                        return {\n                            cid: updatedCid,\n                            size: BigInt(buf.length),\n                            path: entry.path,\n                            unixfs\n                        };\n                    };\n                }\n            }\n        }), async (nodes) => last(nodes));\n        if (root == null) {\n            throw new UnknownError(`Could not chmod ${resolved.cid.toString()}`);\n        }\n        return updatePathCids(root.cid, resolved, blockstore, opts);\n    }\n    const block = await blockstore.get(resolved.cid, options);\n    let metadata;\n    let links = [];\n    if (resolved.cid.code === raw.code) {\n        // convert to UnixFS\n        metadata = new UnixFS({ type: 'file', data: block });\n    }\n    else {\n        const node = dagPB.decode(block);\n        if (node.Data == null) {\n            throw new InvalidPBNodeError(`${resolved.cid.toString()} had no data`);\n        }\n        links = node.Links;\n        metadata = UnixFS.unmarshal(node.Data);\n    }\n    metadata.mode = mode;\n    const updatedBlock = dagPB.encode({\n        Data: metadata.marshal(),\n        Links: links\n    });\n    const hash = await sha256.digest(updatedBlock);\n    const updatedCid = CID.create(resolved.cid.version, dagPB.code, hash);\n    await blockstore.put(updatedCid, updatedBlock);\n    return updatePathCids(updatedCid, resolved, blockstore, opts);\n}\n//# sourceMappingURL=chmod.js.map","import { logger } from '@libp2p/logger';\nimport mergeOpts from 'merge-options';\nimport { InvalidParametersError } from '../errors.js';\nimport { addLink } from './utils/add-link.js';\nimport { cidToDirectory } from './utils/cid-to-directory.js';\nimport { cidToPBLink } from './utils/cid-to-pblink.js';\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:cp');\nconst defaultOptions = {\n    force: false,\n    shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n};\nexport async function cp(source, target, name, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    if (name.includes('/')) {\n        throw new InvalidParametersError('Name must not have slashes');\n    }\n    const [directory, pblink] = await Promise.all([\n        cidToDirectory(target, blockstore, opts),\n        cidToPBLink(source, name, blockstore, opts)\n    ]);\n    log('Adding %c as \"%s\" to %c', source, name, target);\n    const result = await addLink(directory, pblink, blockstore, {\n        allowOverwriting: opts.force,\n        cidVersion: target.version,\n        ...opts\n    });\n    return result.cid;\n}\n//# sourceMappingURL=cp.js.map","import { exporter } from 'ipfs-unixfs-exporter';\nimport mergeOpts from 'merge-options';\nimport { NoContentError, NotADirectoryError } from '../errors.js';\nimport { resolve } from './utils/resolve.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst defaultOptions = {};\nexport async function* ls(cid, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    const resolved = await resolve(cid, opts.path, blockstore, opts);\n    const result = await exporter(resolved.cid, blockstore);\n    if (result.type === 'file' || result.type === 'raw') {\n        yield result;\n        return;\n    }\n    if (result.content == null) {\n        throw new NoContentError();\n    }\n    if (result.type !== 'directory') {\n        throw new NotADirectoryError();\n    }\n    yield* result.content({\n        offset: options.offset,\n        length: options.length\n    });\n}\n//# sourceMappingURL=ls.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport mergeOpts from 'merge-options';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { InvalidParametersError, NotADirectoryError } from '../errors.js';\nimport { addLink } from './utils/add-link.js';\nimport { cidToDirectory } from './utils/cid-to-directory.js';\nimport { cidToPBLink } from './utils/cid-to-pblink.js';\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:mkdir');\nconst defaultOptions = {\n    cidVersion: 1,\n    force: false,\n    shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n};\nexport async function mkdir(parentCid, dirname, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    if (dirname.includes('/')) {\n        throw new InvalidParametersError('Path must not have slashes');\n    }\n    const entry = await exporter(parentCid, blockstore, options);\n    if (entry.type !== 'directory') {\n        throw new NotADirectoryError(`${parentCid.toString()} was not a UnixFS directory`);\n    }\n    log('creating %s', dirname);\n    const metadata = new UnixFS({\n        type: 'directory',\n        mode: opts.mode,\n        mtime: opts.mtime\n    });\n    // Persist the new parent PBNode\n    const node = {\n        Data: metadata.marshal(),\n        Links: []\n    };\n    const buf = dagPB.encode(node);\n    const hash = await sha256.digest(buf);\n    const emptyDirCid = CID.create(opts.cidVersion, dagPB.code, hash);\n    await blockstore.put(emptyDirCid, buf);\n    const [directory, pblink] = await Promise.all([\n        cidToDirectory(parentCid, blockstore, opts),\n        cidToPBLink(emptyDirCid, dirname, blockstore, opts)\n    ]);\n    log('adding empty dir called %s to %c', dirname, parentCid);\n    const result = await addLink(directory, pblink, blockstore, {\n        ...opts,\n        allowOverwriting: opts.force\n    });\n    return result.cid;\n}\n//# sourceMappingURL=mkdir.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport { InvalidParametersError, InvalidPBNodeError } from '../../errors.js';\nimport { recreateShardedDirectory, updateShardedDirectory } from './hamt-utils.js';\nimport { isOverShardThreshold } from './is-over-shard-threshold.js';\nimport { persist } from './persist.js';\nconst log = logger('helia:unixfs:utils:remove-link');\nexport async function removeLink(parent, name, blockstore, options) {\n    if (parent.node.Data == null) {\n        throw new InvalidPBNodeError('Parent node had no data');\n    }\n    const meta = UnixFS.unmarshal(parent.node.Data);\n    if (meta.type === 'hamt-sharded-directory') {\n        log(`removing ${name} from sharded directory`);\n        const result = await removeFromShardedDirectory(parent, name, blockstore, options);\n        if (!(await isOverShardThreshold(result.node, blockstore, options.shardSplitThresholdBytes, options))) {\n            log('converting shard to flat directory %c', parent.cid);\n            return convertToFlatDirectory(result, blockstore, options);\n        }\n        return result;\n    }\n    log(`removing link ${name} regular directory`);\n    return removeFromDirectory(parent, name, blockstore, options);\n}\nconst removeFromDirectory = async (parent, name, blockstore, options) => {\n    // Remove existing link if it exists\n    parent.node.Links = parent.node.Links.filter((link) => {\n        return link.Name !== name;\n    });\n    const parentBlock = dagPB.encode(parent.node);\n    const parentCid = await persist(parentBlock, blockstore, {\n        ...options,\n        cidVersion: parent.cid.version\n    });\n    log(`Updated regular directory ${parentCid}`);\n    return {\n        node: parent.node,\n        cid: parentCid\n    };\n};\nconst removeFromShardedDirectory = async (parent, name, blockstore, options) => {\n    const { path } = await recreateShardedDirectory(parent.cid, name, blockstore, options);\n    const finalSegment = path[path.length - 1];\n    if (finalSegment == null) {\n        throw new Error('Invalid HAMT, could not generate path');\n    }\n    const linkName = finalSegment.node.Links.filter(l => (l.Name ?? '').substring(2) === name).map(l => l.Name).pop();\n    if (linkName == null) {\n        throw new Error('File not found');\n    }\n    const prefix = linkName.substring(0, 2);\n    const index = parseInt(prefix, 16);\n    // remove the file from the shard\n    finalSegment.node.Links = finalSegment.node.Links.filter(link => link.Name !== linkName);\n    finalSegment.children.unset(index);\n    if (finalSegment.node.Links.length === 1) {\n        // replace the subshard with the last remaining file in the parent\n        while (true) {\n            if (path.length === 1) {\n                break;\n            }\n            const segment = path[path.length - 1];\n            if (segment == null || segment.node.Links.length > 1) {\n                break;\n            }\n            // remove final segment\n            path.pop();\n            const nextSegment = path[path.length - 1];\n            if (nextSegment == null) {\n                break;\n            }\n            const link = segment.node.Links[0];\n            nextSegment.node.Links = nextSegment.node.Links.filter(l => !(l.Name ?? '').startsWith(nextSegment.prefix));\n            nextSegment.node.Links.push({\n                Hash: link.Hash,\n                Name: `${nextSegment.prefix}${(link.Name ?? '').substring(2)}`,\n                Tsize: link.Tsize\n            });\n        }\n    }\n    return updateShardedDirectory(path, blockstore, options);\n};\nconst convertToFlatDirectory = async (parent, blockstore, options) => {\n    if (parent.node.Data == null) {\n        throw new InvalidParametersError('Invalid parent passed to convertToFlatDirectory');\n    }\n    const rootNode = {\n        Links: []\n    };\n    const dir = await exporter(parent.cid, blockstore);\n    if (dir.type !== 'directory') {\n        throw new Error('Unexpected node type');\n    }\n    for await (const entry of dir.content()) {\n        let tsize = 0;\n        if (entry.node instanceof Uint8Array) {\n            tsize = entry.node.byteLength;\n        }\n        else {\n            tsize = dagPB.encode(entry.node).length;\n        }\n        rootNode.Links.push({\n            Hash: entry.cid,\n            Name: entry.name,\n            Tsize: tsize\n        });\n    }\n    // copy mode/mtime over if set\n    const oldUnixfs = UnixFS.unmarshal(parent.node.Data);\n    rootNode.Data = new UnixFS({ type: 'directory', mode: oldUnixfs.mode, mtime: oldUnixfs.mtime }).marshal();\n    const block = dagPB.encode(dagPB.prepare(rootNode));\n    const cid = await persist(block, blockstore, {\n        codec: dagPB,\n        cidVersion: parent.cid.version,\n        signal: options.signal\n    });\n    return {\n        cid,\n        node: rootNode\n    };\n};\n//# sourceMappingURL=remove-link.js.map","import { logger } from '@libp2p/logger';\nimport mergeOpts from 'merge-options';\nimport { InvalidParametersError } from '../errors.js';\nimport { cidToDirectory } from './utils/cid-to-directory.js';\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js';\nimport { removeLink } from './utils/remove-link.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:rm');\nconst defaultOptions = {\n    shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n};\nexport async function rm(target, name, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    if (name.includes('/')) {\n        throw new InvalidParametersError('Name must not have slashes');\n    }\n    const directory = await cidToDirectory(target, blockstore, opts);\n    log('Removing %s from %c', name, target);\n    const result = await removeLink(directory, name, blockstore, {\n        ...opts,\n        cidVersion: target.version\n    });\n    return result.cid;\n}\n//# sourceMappingURL=rm.js.map","import * as dagPb from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport mergeOpts from 'merge-options';\nimport * as raw from 'multiformats/codecs/raw';\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js';\nimport { resolve } from './utils/resolve.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:stat');\nconst defaultOptions = {};\nexport async function stat(cid, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    const resolved = await resolve(cid, options.path, blockstore, opts);\n    log('stat %c', resolved.cid);\n    const result = await exporter(resolved.cid, blockstore, opts);\n    if (result.type !== 'file' && result.type !== 'directory' && result.type !== 'raw') {\n        throw new NotUnixFSError();\n    }\n    let fileSize = 0n;\n    let dagSize = 0n;\n    let localFileSize = 0n;\n    let localDagSize = 0n;\n    let blocks = 0;\n    let mode;\n    let mtime;\n    const type = result.type;\n    let unixfs;\n    if (result.type === 'raw') {\n        fileSize = BigInt(result.node.byteLength);\n        dagSize = BigInt(result.node.byteLength);\n        localFileSize = BigInt(result.node.byteLength);\n        localDagSize = BigInt(result.node.byteLength);\n        blocks = 1;\n    }\n    if (result.type === 'directory') {\n        fileSize = 0n;\n        dagSize = BigInt(result.unixfs.marshal().byteLength);\n        localFileSize = 0n;\n        localDagSize = dagSize;\n        blocks = 1;\n        mode = result.unixfs.mode;\n        mtime = result.unixfs.mtime;\n        unixfs = result.unixfs;\n    }\n    if (result.type === 'file') {\n        const results = await inspectDag(resolved.cid, blockstore, opts);\n        fileSize = result.unixfs.fileSize();\n        dagSize = BigInt((result.node.Data?.byteLength ?? 0) + result.node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0));\n        localFileSize = BigInt(results.localFileSize);\n        localDagSize = BigInt(results.localDagSize);\n        blocks = results.blocks;\n        mode = result.unixfs.mode;\n        mtime = result.unixfs.mtime;\n        unixfs = result.unixfs;\n    }\n    return {\n        cid: resolved.cid,\n        mode,\n        mtime,\n        fileSize,\n        dagSize,\n        localFileSize,\n        localDagSize,\n        blocks,\n        type,\n        unixfs\n    };\n}\nasync function inspectDag(cid, blockstore, options) {\n    const results = {\n        localFileSize: 0,\n        localDagSize: 0,\n        blocks: 0\n    };\n    if (await blockstore.has(cid, options)) {\n        const block = await blockstore.get(cid, options);\n        results.blocks++;\n        results.localDagSize += block.byteLength;\n        if (cid.code === raw.code) {\n            results.localFileSize += block.byteLength;\n        }\n        else if (cid.code === dagPb.code) {\n            const pbNode = dagPb.decode(block);\n            if (pbNode.Links.length > 0) {\n                // intermediate node\n                for (const link of pbNode.Links) {\n                    const linkResult = await inspectDag(link.Hash, blockstore, options);\n                    results.localFileSize += linkResult.localFileSize;\n                    results.localDagSize += linkResult.localDagSize;\n                    results.blocks += linkResult.blocks;\n                }\n            }\n            else {\n                // leaf node\n                if (pbNode.Data == null) {\n                    throw new InvalidPBNodeError(`PBNode ${cid.toString()} had no data`);\n                }\n                const unixfs = UnixFS.unmarshal(pbNode.Data);\n                if (unixfs.data == null) {\n                    throw new InvalidPBNodeError(`UnixFS node ${cid.toString()} had no data`);\n                }\n                results.localFileSize += unixfs.data.byteLength ?? 0;\n            }\n        }\n        else {\n            throw new UnknownError(`${cid.toString()} was neither DAG_PB nor RAW`);\n        }\n    }\n    return results;\n}\n//# sourceMappingURL=stat.js.map","import * as dagPB from '@ipld/dag-pb';\nimport { logger } from '@libp2p/logger';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { recursive } from 'ipfs-unixfs-exporter';\nimport { importer } from 'ipfs-unixfs-importer';\nimport last from 'it-last';\nimport { pipe } from 'it-pipe';\nimport mergeOpts from 'merge-options';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js';\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js';\nimport { persist } from './utils/persist.js';\nimport { resolve, updatePathCids } from './utils/resolve.js';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = logger('helia:unixfs:touch');\nconst defaultOptions = {\n    recursive: false,\n    shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n};\nexport async function touch(cid, blockstore, options = {}) {\n    const opts = mergeOptions(defaultOptions, options);\n    const resolved = await resolve(cid, opts.path, blockstore, opts);\n    const mtime = opts.mtime ?? {\n        secs: BigInt(Math.round(Date.now() / 1000)),\n        nsecs: 0\n    };\n    log('touch %c %o', resolved.cid, mtime);\n    if (opts.recursive) {\n        // recursively export from root CID, change perms of each entry then reimport\n        // but do not reimport files, only manipulate dag-pb nodes\n        const root = await pipe(async function* () {\n            for await (const entry of recursive(resolved.cid, blockstore)) {\n                let metadata;\n                let links;\n                if (entry.type === 'raw') {\n                    metadata = new UnixFS({ data: entry.node });\n                    links = [];\n                }\n                else if (entry.type === 'file' || entry.type === 'directory') {\n                    metadata = entry.unixfs;\n                    links = entry.node.Links;\n                }\n                else {\n                    throw new NotUnixFSError();\n                }\n                metadata.mtime = mtime;\n                const node = {\n                    Data: metadata.marshal(),\n                    Links: links\n                };\n                yield {\n                    path: entry.path,\n                    content: node\n                };\n            }\n        }, \n        // @ts-expect-error blockstore types are incompatible\n        (source) => importer(source, blockstore, {\n            ...opts,\n            dagBuilder: async function* (source, block) {\n                for await (const entry of source) {\n                    yield async function () {\n                        // @ts-expect-error cannot derive type\n                        const node = entry.content;\n                        const buf = dagPB.encode(node);\n                        const updatedCid = await persist(buf, block, {\n                            ...opts,\n                            cidVersion: cid.version\n                        });\n                        if (node.Data == null) {\n                            throw new InvalidPBNodeError(`${updatedCid} had no data`);\n                        }\n                        const unixfs = UnixFS.unmarshal(node.Data);\n                        return {\n                            cid: updatedCid,\n                            size: BigInt(buf.length),\n                            path: entry.path,\n                            unixfs\n                        };\n                    };\n                }\n            }\n        }), async (nodes) => last(nodes));\n        if (root == null) {\n            throw new UnknownError(`Could not chmod ${resolved.cid.toString()}`);\n        }\n        return updatePathCids(root.cid, resolved, blockstore, opts);\n    }\n    const block = await blockstore.get(resolved.cid, options);\n    let metadata;\n    let links = [];\n    if (resolved.cid.code === raw.code) {\n        metadata = new UnixFS({ data: block });\n    }\n    else {\n        const node = dagPB.decode(block);\n        links = node.Links;\n        if (node.Data == null) {\n            throw new InvalidPBNodeError(`${resolved.cid.toString()} had no data`);\n        }\n        metadata = UnixFS.unmarshal(node.Data);\n    }\n    metadata.mtime = mtime;\n    const updatedBlock = dagPB.encode({\n        Data: metadata.marshal(),\n        Links: links\n    });\n    const hash = await sha256.digest(updatedBlock);\n    const updatedCid = CID.create(resolved.cid.version, dagPB.code, hash);\n    await blockstore.put(updatedCid, updatedBlock);\n    return updatePathCids(updatedCid, resolved, blockstore, opts);\n}\n//# sourceMappingURL=touch.js.map","/**\n * @packageDocumentation\n *\n * `@helia/unixfs` is an implementation of a {@link https://github.com/ipfs/specs/blob/main/UNIXFS.md UnixFS filesystem} compatible with {@link https://github.com/ipfs/helia Helia}.\n *\n * See the {@link UnixFS UnixFS interface} for all available operations.\n *\n * @example\n *\n * ```typescript\n * import { createHelia } from 'helia'\n * import { unixfs } from '@helia/unixfs'\n *\n * const helia = createHelia({\n *   // ... helia config\n * })\n * const fs = unixfs(helia)\n *\n * // create an empty dir and a file, then add the file to the dir\n * const emptyDirCid = await fs.addDirectory()\n * const fileCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n * const updateDirCid = await fs.cp(fileCid, emptyDirCid, 'foo.txt')\n *\n * // or doing the same thing as a stream\n * for await (const entry of fs.addAll([{\n *   path: 'foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3])\n * }])) {\n *   console.info(entry)\n * }\n * ```\n *\n * @example\n *\n * Recursively adding a directory (Node.js-compatibly environments only):\n *\n * ```typescript\n * import { globSource } from '@helia/unixfs'\n *\n * for await (const entry of fs.addAll(globSource('path/to/containing/dir', 'glob-pattern'))) {\n *   console.info(entry)\n * }\n * ```\n */\nimport { addAll, addBytes, addByteStream, addDirectory, addFile } from './commands/add.js';\nimport { cat } from './commands/cat.js';\nimport { chmod } from './commands/chmod.js';\nimport { cp } from './commands/cp.js';\nimport { ls } from './commands/ls.js';\nimport { mkdir } from './commands/mkdir.js';\nimport { rm } from './commands/rm.js';\nimport { stat } from './commands/stat.js';\nimport { touch } from './commands/touch.js';\nclass DefaultUnixFS {\n    components;\n    constructor(components) {\n        this.components = components;\n    }\n    async *addAll(source, options = {}) {\n        yield* addAll(source, this.components.blockstore, options);\n    }\n    async addBytes(bytes, options = {}) {\n        return addBytes(bytes, this.components.blockstore, options);\n    }\n    async addByteStream(bytes, options = {}) {\n        return addByteStream(bytes, this.components.blockstore, options);\n    }\n    async addFile(file, options = {}) {\n        return addFile(file, this.components.blockstore, options);\n    }\n    async addDirectory(dir = {}, options = {}) {\n        return addDirectory(dir, this.components.blockstore, options);\n    }\n    async *cat(cid, options = {}) {\n        yield* cat(cid, this.components.blockstore, options);\n    }\n    async chmod(cid, mode, options = {}) {\n        return chmod(cid, mode, this.components.blockstore, options);\n    }\n    async cp(source, target, name, options = {}) {\n        return cp(source, target, name, this.components.blockstore, options);\n    }\n    async *ls(cid, options = {}) {\n        yield* ls(cid, this.components.blockstore, options);\n    }\n    async mkdir(cid, dirname, options = {}) {\n        return mkdir(cid, dirname, this.components.blockstore, options);\n    }\n    async rm(cid, path, options = {}) {\n        return rm(cid, path, this.components.blockstore, options);\n    }\n    async stat(cid, options = {}) {\n        return stat(cid, this.components.blockstore, options);\n    }\n    async touch(cid, options = {}) {\n        return touch(cid, this.components.blockstore, options);\n    }\n}\n/**\n * Create a {@link UnixFS} instance for use with {@link https://github.com/ipfs/helia Helia}\n */\nexport function unixfs(helia) {\n    return new DefaultUnixFS(helia);\n}\nexport { globSource } from './utils/glob-source.js';\nexport { urlSource } from './utils/url-source.js';\n//# sourceMappingURL=index.js.map","// src/lexer.ts\nvar TOKEN_TYPES = Object.freeze({\n  Text: \"Text\",\n  // The text between Jinja statements or expressions\n  NumericLiteral: \"NumericLiteral\",\n  // e.g., 123\n  BooleanLiteral: \"BooleanLiteral\",\n  // true or false\n  StringLiteral: \"StringLiteral\",\n  // 'string'\n  Identifier: \"Identifier\",\n  // Variables, functions, etc.\n  Equals: \"Equals\",\n  // =\n  OpenParen: \"OpenParen\",\n  // (\n  CloseParen: \"CloseParen\",\n  // )\n  OpenStatement: \"OpenStatement\",\n  // {%\n  CloseStatement: \"CloseStatement\",\n  // %}\n  OpenExpression: \"OpenExpression\",\n  // {{\n  CloseExpression: \"CloseExpression\",\n  // }}\n  OpenSquareBracket: \"OpenSquareBracket\",\n  // [\n  CloseSquareBracket: \"CloseSquareBracket\",\n  // ]\n  OpenCurlyBracket: \"OpenCurlyBracket\",\n  // {\n  CloseCurlyBracket: \"CloseCurlyBracket\",\n  // }\n  Comma: \"Comma\",\n  // ,\n  Dot: \"Dot\",\n  // .\n  Colon: \"Colon\",\n  // :\n  Pipe: \"Pipe\",\n  // |\n  CallOperator: \"CallOperator\",\n  // ()\n  AdditiveBinaryOperator: \"AdditiveBinaryOperator\",\n  // + -\n  MultiplicativeBinaryOperator: \"MultiplicativeBinaryOperator\",\n  // * / %\n  ComparisonBinaryOperator: \"ComparisonBinaryOperator\",\n  // < > <= >= == !=\n  UnaryOperator: \"UnaryOperator\",\n  // ! - +\n  // Keywords\n  Set: \"Set\",\n  If: \"If\",\n  For: \"For\",\n  In: \"In\",\n  Is: \"Is\",\n  NotIn: \"NotIn\",\n  Else: \"Else\",\n  EndIf: \"EndIf\",\n  ElseIf: \"ElseIf\",\n  EndFor: \"EndFor\",\n  And: \"And\",\n  Or: \"Or\",\n  Not: \"UnaryOperator\"\n});\nvar KEYWORDS = Object.freeze({\n  set: TOKEN_TYPES.Set,\n  for: TOKEN_TYPES.For,\n  in: TOKEN_TYPES.In,\n  is: TOKEN_TYPES.Is,\n  if: TOKEN_TYPES.If,\n  else: TOKEN_TYPES.Else,\n  endif: TOKEN_TYPES.EndIf,\n  elif: TOKEN_TYPES.ElseIf,\n  endfor: TOKEN_TYPES.EndFor,\n  and: TOKEN_TYPES.And,\n  or: TOKEN_TYPES.Or,\n  not: TOKEN_TYPES.Not,\n  \"not in\": TOKEN_TYPES.NotIn,\n  // Literals\n  true: TOKEN_TYPES.BooleanLiteral,\n  false: TOKEN_TYPES.BooleanLiteral\n});\nvar Token = class {\n  /**\n   * Constructs a new Token.\n   * @param {string} value The raw value as seen inside the source code.\n   * @param {TokenType} type The type of token.\n   */\n  constructor(value, type) {\n    this.value = value;\n    this.type = type;\n  }\n};\nfunction isWord(char) {\n  return /\\w/.test(char);\n}\nfunction isInteger(char) {\n  return /[0-9]/.test(char);\n}\nvar ORDERED_MAPPING_TABLE = [\n  // Control sequences\n  [\"{%\", TOKEN_TYPES.OpenStatement],\n  [\"%}\", TOKEN_TYPES.CloseStatement],\n  [\"{{\", TOKEN_TYPES.OpenExpression],\n  [\"}}\", TOKEN_TYPES.CloseExpression],\n  // Single character tokens\n  [\"(\", TOKEN_TYPES.OpenParen],\n  [\")\", TOKEN_TYPES.CloseParen],\n  [\"{\", TOKEN_TYPES.OpenCurlyBracket],\n  [\"}\", TOKEN_TYPES.CloseCurlyBracket],\n  [\"[\", TOKEN_TYPES.OpenSquareBracket],\n  [\"]\", TOKEN_TYPES.CloseSquareBracket],\n  [\",\", TOKEN_TYPES.Comma],\n  [\".\", TOKEN_TYPES.Dot],\n  [\":\", TOKEN_TYPES.Colon],\n  [\"|\", TOKEN_TYPES.Pipe],\n  // Comparison operators\n  [\"<=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\">=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"==\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"!=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"<\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\">\", TOKEN_TYPES.ComparisonBinaryOperator],\n  // Arithmetic operators\n  [\"+\", TOKEN_TYPES.AdditiveBinaryOperator],\n  [\"-\", TOKEN_TYPES.AdditiveBinaryOperator],\n  [\"*\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  [\"/\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  [\"%\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  // Assignment operator\n  [\"=\", TOKEN_TYPES.Equals]\n];\nvar ESCAPE_CHARACTERS = /* @__PURE__ */ new Map([\n  [\"n\", \"\\n\"],\n  // New line\n  [\"t\", \"\t\"],\n  // Horizontal tab\n  [\"r\", \"\\r\"],\n  // Carriage return\n  [\"b\", \"\\b\"],\n  // Backspace\n  [\"f\", \"\\f\"],\n  // Form feed\n  [\"v\", \"\\v\"],\n  // Vertical tab\n  [\"'\", \"'\"],\n  // Single quote\n  ['\"', '\"'],\n  // Double quote\n  [\"\\\\\", \"\\\\\"]\n  // Backslash\n]);\nfunction preprocess(template, options = {}) {\n  if (template.endsWith(\"\\n\")) {\n    template = template.slice(0, -1);\n  }\n  template = template.replace(/{#.*?#}/gs, \"{##}\");\n  if (options.lstrip_blocks) {\n    template = template.replace(/^[ \\t]*({[#%])/gm, \"$1\");\n  }\n  if (options.trim_blocks) {\n    template = template.replace(/([#%]})\\n/g, \"$1\");\n  }\n  return template.replace(/{##}/g, \"\").replace(/-%}\\s*/g, \"%}\").replace(/\\s*{%-/g, \"{%\").replace(/-}}\\s*/g, \"}}\").replace(/\\s*{{-/g, \"{{\");\n}\nfunction tokenize(source, options = {}) {\n  const tokens = [];\n  const src = preprocess(source, options);\n  let cursorPosition = 0;\n  const consumeWhile = (predicate) => {\n    let str = \"\";\n    while (predicate(src[cursorPosition])) {\n      if (src[cursorPosition] === \"\\\\\") {\n        ++cursorPosition;\n        if (cursorPosition >= src.length)\n          throw new SyntaxError(\"Unexpected end of input\");\n        const escaped = src[cursorPosition++];\n        const unescaped = ESCAPE_CHARACTERS.get(escaped);\n        if (unescaped === void 0) {\n          throw new SyntaxError(`Unexpected escaped character: ${escaped}`);\n        }\n        str += unescaped;\n        continue;\n      }\n      str += src[cursorPosition++];\n      if (cursorPosition >= src.length)\n        throw new SyntaxError(\"Unexpected end of input\");\n    }\n    return str;\n  };\n  main:\n    while (cursorPosition < src.length) {\n      const lastTokenType = tokens.at(-1)?.type;\n      if (lastTokenType === void 0 || lastTokenType === TOKEN_TYPES.CloseStatement || lastTokenType === TOKEN_TYPES.CloseExpression) {\n        let text = \"\";\n        while (cursorPosition < src.length && // Keep going until we hit the next Jinja statement or expression\n        !(src[cursorPosition] === \"{\" && (src[cursorPosition + 1] === \"%\" || src[cursorPosition + 1] === \"{\"))) {\n          text += src[cursorPosition++];\n        }\n        if (text.length > 0) {\n          tokens.push(new Token(text, TOKEN_TYPES.Text));\n          continue;\n        }\n      }\n      consumeWhile((char2) => /\\s/.test(char2));\n      const char = src[cursorPosition];\n      if (char === \"-\" || char === \"+\") {\n        const lastTokenType2 = tokens.at(-1)?.type;\n        if (lastTokenType2 === TOKEN_TYPES.Text || lastTokenType2 === void 0) {\n          throw new SyntaxError(`Unexpected character: ${char}`);\n        }\n        switch (lastTokenType2) {\n          case TOKEN_TYPES.Identifier:\n          case TOKEN_TYPES.NumericLiteral:\n          case TOKEN_TYPES.BooleanLiteral:\n          case TOKEN_TYPES.StringLiteral:\n          case TOKEN_TYPES.CloseParen:\n          case TOKEN_TYPES.CloseSquareBracket:\n            break;\n          default: {\n            ++cursorPosition;\n            const num = consumeWhile(isInteger);\n            tokens.push(\n              new Token(`${char}${num}`, num.length > 0 ? TOKEN_TYPES.NumericLiteral : TOKEN_TYPES.UnaryOperator)\n            );\n            continue;\n          }\n        }\n      }\n      for (const [char2, token] of ORDERED_MAPPING_TABLE) {\n        const slice2 = src.slice(cursorPosition, cursorPosition + char2.length);\n        if (slice2 === char2) {\n          tokens.push(new Token(char2, token));\n          cursorPosition += char2.length;\n          continue main;\n        }\n      }\n      if (char === \"'\" || char === '\"') {\n        ++cursorPosition;\n        const str = consumeWhile((c) => c !== char);\n        tokens.push(new Token(str, TOKEN_TYPES.StringLiteral));\n        ++cursorPosition;\n        continue;\n      }\n      if (isInteger(char)) {\n        const num = consumeWhile(isInteger);\n        tokens.push(new Token(num, TOKEN_TYPES.NumericLiteral));\n        continue;\n      }\n      if (isWord(char)) {\n        const word = consumeWhile(isWord);\n        const type = Object.hasOwn(KEYWORDS, word) ? KEYWORDS[word] : TOKEN_TYPES.Identifier;\n        if (type === TOKEN_TYPES.In && tokens.at(-1)?.type === TOKEN_TYPES.Not) {\n          tokens.pop();\n          tokens.push(new Token(\"not in\", TOKEN_TYPES.NotIn));\n        } else {\n          tokens.push(new Token(word, type));\n        }\n        continue;\n      }\n      throw new SyntaxError(`Unexpected character: ${char}`);\n    }\n  return tokens;\n}\n\n// src/ast.ts\nvar Statement = class {\n  type = \"Statement\";\n};\nvar Program = class extends Statement {\n  constructor(body) {\n    super();\n    this.body = body;\n  }\n  type = \"Program\";\n};\nvar If = class extends Statement {\n  constructor(test, body, alternate) {\n    super();\n    this.test = test;\n    this.body = body;\n    this.alternate = alternate;\n  }\n  type = \"If\";\n};\nvar For = class extends Statement {\n  constructor(loopvar, iterable, body) {\n    super();\n    this.loopvar = loopvar;\n    this.iterable = iterable;\n    this.body = body;\n  }\n  type = \"For\";\n};\nvar SetStatement = class extends Statement {\n  constructor(assignee, value) {\n    super();\n    this.assignee = assignee;\n    this.value = value;\n  }\n  type = \"Set\";\n};\nvar Expression = class extends Statement {\n  type = \"Expression\";\n};\nvar MemberExpression = class extends Expression {\n  constructor(object, property, computed) {\n    super();\n    this.object = object;\n    this.property = property;\n    this.computed = computed;\n  }\n  type = \"MemberExpression\";\n};\nvar CallExpression = class extends Expression {\n  constructor(callee, args) {\n    super();\n    this.callee = callee;\n    this.args = args;\n  }\n  type = \"CallExpression\";\n};\nvar Identifier = class extends Expression {\n  /**\n   * @param {string} value The name of the identifier\n   */\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  type = \"Identifier\";\n};\nvar Literal = class extends Expression {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  type = \"Literal\";\n};\nvar NumericLiteral = class extends Literal {\n  type = \"NumericLiteral\";\n};\nvar StringLiteral = class extends Literal {\n  type = \"StringLiteral\";\n};\nvar BooleanLiteral = class extends Literal {\n  type = \"BooleanLiteral\";\n};\nvar ArrayLiteral = class extends Literal {\n  type = \"ArrayLiteral\";\n};\nvar TupleLiteral = class extends Literal {\n  type = \"TupleLiteral\";\n};\nvar ObjectLiteral = class extends Literal {\n  type = \"ObjectLiteral\";\n};\nvar BinaryExpression = class extends Expression {\n  constructor(operator, left, right) {\n    super();\n    this.operator = operator;\n    this.left = left;\n    this.right = right;\n  }\n  type = \"BinaryExpression\";\n};\nvar FilterExpression = class extends Expression {\n  constructor(operand, filter) {\n    super();\n    this.operand = operand;\n    this.filter = filter;\n  }\n  type = \"FilterExpression\";\n};\nvar TestExpression = class extends Expression {\n  constructor(operand, negate, test) {\n    super();\n    this.operand = operand;\n    this.negate = negate;\n    this.test = test;\n  }\n  type = \"TestExpression\";\n};\nvar UnaryExpression = class extends Expression {\n  constructor(operator, argument) {\n    super();\n    this.operator = operator;\n    this.argument = argument;\n  }\n  type = \"UnaryExpression\";\n};\nvar SliceExpression = class extends Expression {\n  constructor(start = void 0, stop = void 0, step = void 0) {\n    super();\n    this.start = start;\n    this.stop = stop;\n    this.step = step;\n  }\n  type = \"SliceExpression\";\n};\nvar KeywordArgumentExpression = class extends Expression {\n  constructor(key, value) {\n    super();\n    this.key = key;\n    this.value = value;\n  }\n  type = \"KeywordArgumentExpression\";\n};\n\n// src/parser.ts\nfunction parse(tokens) {\n  const program = new Program([]);\n  let current = 0;\n  function expect(type, error) {\n    const prev = tokens[current++];\n    if (!prev || prev.type !== type) {\n      throw new Error(`Parser Error: ${error}. ${prev.type} !== ${type}.`);\n    }\n    return prev;\n  }\n  function parseAny() {\n    switch (tokens[current].type) {\n      case TOKEN_TYPES.Text:\n        return parseText();\n      case TOKEN_TYPES.OpenStatement:\n        return parseJinjaStatement();\n      case TOKEN_TYPES.OpenExpression:\n        return parseJinjaExpression();\n      default:\n        throw new SyntaxError(`Unexpected token type: ${tokens[current].type}`);\n    }\n  }\n  function not(...types) {\n    return current + types.length <= tokens.length && types.some((type, i) => type !== tokens[current + i].type);\n  }\n  function is(...types) {\n    return current + types.length <= tokens.length && types.every((type, i) => type === tokens[current + i].type);\n  }\n  function parseText() {\n    return new StringLiteral(expect(TOKEN_TYPES.Text, \"Expected text token\").value);\n  }\n  function parseJinjaStatement() {\n    expect(TOKEN_TYPES.OpenStatement, \"Expected opening statement token\");\n    let result;\n    switch (tokens[current].type) {\n      case TOKEN_TYPES.Set:\n        ++current;\n        result = parseSetStatement();\n        expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n        break;\n      case TOKEN_TYPES.If:\n        ++current;\n        result = parseIfStatement();\n        expect(TOKEN_TYPES.OpenStatement, \"Expected {% token\");\n        expect(TOKEN_TYPES.EndIf, \"Expected endif token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected %} token\");\n        break;\n      case TOKEN_TYPES.For:\n        ++current;\n        result = parseForStatement();\n        expect(TOKEN_TYPES.OpenStatement, \"Expected {% token\");\n        expect(TOKEN_TYPES.EndFor, \"Expected endfor token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected %} token\");\n        break;\n      default:\n        throw new SyntaxError(`Unknown statement type: ${tokens[current].type}`);\n    }\n    return result;\n  }\n  function parseJinjaExpression() {\n    expect(TOKEN_TYPES.OpenExpression, \"Expected opening expression token\");\n    const result = parseExpression();\n    expect(TOKEN_TYPES.CloseExpression, \"Expected closing expression token\");\n    return result;\n  }\n  function parseSetStatement() {\n    const left = parseExpression();\n    if (is(TOKEN_TYPES.Equals)) {\n      ++current;\n      const value = parseSetStatement();\n      return new SetStatement(left, value);\n    }\n    return left;\n  }\n  function parseIfStatement() {\n    const test = parseExpression();\n    expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n    const body = [];\n    const alternate = [];\n    while (!(tokens[current]?.type === TOKEN_TYPES.OpenStatement && (tokens[current + 1]?.type === TOKEN_TYPES.ElseIf || tokens[current + 1]?.type === TOKEN_TYPES.Else || tokens[current + 1]?.type === TOKEN_TYPES.EndIf))) {\n      body.push(parseAny());\n    }\n    if (tokens[current]?.type === TOKEN_TYPES.OpenStatement && tokens[current + 1]?.type !== TOKEN_TYPES.EndIf) {\n      ++current;\n      if (is(TOKEN_TYPES.ElseIf)) {\n        expect(TOKEN_TYPES.ElseIf, \"Expected elseif token\");\n        alternate.push(parseIfStatement());\n      } else {\n        expect(TOKEN_TYPES.Else, \"Expected else token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n        while (!(tokens[current]?.type === TOKEN_TYPES.OpenStatement && tokens[current + 1]?.type === TOKEN_TYPES.EndIf)) {\n          alternate.push(parseAny());\n        }\n      }\n    }\n    return new If(test, body, alternate);\n  }\n  function parseExpressionSequence(primary = false) {\n    const fn = primary ? parsePrimaryExpression : parseExpression;\n    const expressions = [fn()];\n    const isTuple = is(TOKEN_TYPES.Comma);\n    while (isTuple) {\n      ++current;\n      expressions.push(fn());\n      if (!is(TOKEN_TYPES.Comma)) {\n        break;\n      }\n    }\n    return isTuple ? new TupleLiteral(expressions) : expressions[0];\n  }\n  function parseForStatement() {\n    const loopVariable = parseExpressionSequence(true);\n    if (!(loopVariable instanceof Identifier || loopVariable instanceof TupleLiteral)) {\n      throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${loopVariable.type} instead`);\n    }\n    expect(TOKEN_TYPES.In, \"Expected `in` keyword following loop variable\");\n    const iterable = parseExpression();\n    expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n    const body = [];\n    while (not(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.EndFor)) {\n      body.push(parseAny());\n    }\n    return new For(loopVariable, iterable, body);\n  }\n  function parseExpression() {\n    return parseTernaryExpression();\n  }\n  function parseTernaryExpression() {\n    const a = parseLogicalOrExpression();\n    if (is(TOKEN_TYPES.If)) {\n      ++current;\n      const predicate = parseLogicalOrExpression();\n      expect(TOKEN_TYPES.Else, \"Expected else token\");\n      const b = parseLogicalOrExpression();\n      return new If(predicate, [a], [b]);\n    }\n    return a;\n  }\n  function parseLogicalOrExpression() {\n    let left = parseLogicalAndExpression();\n    while (is(TOKEN_TYPES.Or)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseLogicalAndExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseLogicalAndExpression() {\n    let left = parseLogicalNegationExpression();\n    while (is(TOKEN_TYPES.And)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseLogicalNegationExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseLogicalNegationExpression() {\n    let right;\n    while (is(TOKEN_TYPES.Not)) {\n      const operator = tokens[current];\n      ++current;\n      const arg = parseLogicalNegationExpression();\n      right = new UnaryExpression(operator, arg);\n    }\n    return right ?? parseComparisonExpression();\n  }\n  function parseComparisonExpression() {\n    let left = parseAdditiveExpression();\n    while (is(TOKEN_TYPES.ComparisonBinaryOperator) || is(TOKEN_TYPES.In) || is(TOKEN_TYPES.NotIn)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseAdditiveExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseAdditiveExpression() {\n    let left = parseMultiplicativeExpression();\n    while (is(TOKEN_TYPES.AdditiveBinaryOperator)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseMultiplicativeExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseCallMemberExpression() {\n    const member = parseMemberExpression();\n    if (is(TOKEN_TYPES.OpenParen)) {\n      return parseCallExpression(member);\n    }\n    return member;\n  }\n  function parseCallExpression(callee) {\n    let callExpression = new CallExpression(callee, parseArgs());\n    if (is(TOKEN_TYPES.OpenParen)) {\n      callExpression = parseCallExpression(callExpression);\n    }\n    return callExpression;\n  }\n  function parseArgs() {\n    expect(TOKEN_TYPES.OpenParen, \"Expected opening parenthesis for arguments list\");\n    const args = parseArgumentsList();\n    expect(TOKEN_TYPES.CloseParen, \"Expected closing parenthesis for arguments list\");\n    return args;\n  }\n  function parseArgumentsList() {\n    const args = [];\n    while (!is(TOKEN_TYPES.CloseParen)) {\n      let argument = parseExpression();\n      if (is(TOKEN_TYPES.Equals)) {\n        ++current;\n        if (!(argument instanceof Identifier)) {\n          throw new SyntaxError(`Expected identifier for keyword argument`);\n        }\n        const value = parseExpression();\n        argument = new KeywordArgumentExpression(argument, value);\n      }\n      args.push(argument);\n      if (is(TOKEN_TYPES.Comma)) {\n        ++current;\n      }\n    }\n    return args;\n  }\n  function parseMemberExpressionArgumentsList() {\n    const slices = [];\n    let isSlice = false;\n    while (!is(TOKEN_TYPES.CloseSquareBracket)) {\n      if (is(TOKEN_TYPES.Colon)) {\n        slices.push(void 0);\n        ++current;\n        isSlice = true;\n      } else {\n        slices.push(parseExpression());\n        if (is(TOKEN_TYPES.Colon)) {\n          ++current;\n          isSlice = true;\n        }\n      }\n    }\n    if (slices.length === 0) {\n      throw new SyntaxError(`Expected at least one argument for member/slice expression`);\n    }\n    if (isSlice) {\n      if (slices.length > 3) {\n        throw new SyntaxError(`Expected 0-3 arguments for slice expression`);\n      }\n      return new SliceExpression(...slices);\n    }\n    return slices[0];\n  }\n  function parseMemberExpression() {\n    let object = parsePrimaryExpression();\n    while (is(TOKEN_TYPES.Dot) || is(TOKEN_TYPES.OpenSquareBracket)) {\n      const operator = tokens[current];\n      ++current;\n      let property;\n      const computed = operator.type !== TOKEN_TYPES.Dot;\n      if (computed) {\n        property = parseMemberExpressionArgumentsList();\n        expect(TOKEN_TYPES.CloseSquareBracket, \"Expected closing square bracket\");\n      } else {\n        property = parsePrimaryExpression();\n        if (property.type !== \"Identifier\") {\n          throw new SyntaxError(`Expected identifier following dot operator`);\n        }\n      }\n      object = new MemberExpression(object, property, computed);\n    }\n    return object;\n  }\n  function parseMultiplicativeExpression() {\n    let left = parseTestExpression();\n    while (is(TOKEN_TYPES.MultiplicativeBinaryOperator)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseTestExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseTestExpression() {\n    let operand = parseFilterExpression();\n    while (is(TOKEN_TYPES.Is)) {\n      ++current;\n      const negate = is(TOKEN_TYPES.Not);\n      if (negate) {\n        ++current;\n      }\n      let filter = parsePrimaryExpression();\n      if (filter instanceof BooleanLiteral) {\n        filter = new Identifier(filter.value.toString());\n      }\n      if (!(filter instanceof Identifier)) {\n        throw new SyntaxError(`Expected identifier for the test`);\n      }\n      operand = new TestExpression(operand, negate, filter);\n    }\n    return operand;\n  }\n  function parseFilterExpression() {\n    let operand = parseCallMemberExpression();\n    while (is(TOKEN_TYPES.Pipe)) {\n      ++current;\n      let filter = parsePrimaryExpression();\n      if (!(filter instanceof Identifier)) {\n        throw new SyntaxError(`Expected identifier for the filter`);\n      }\n      if (is(TOKEN_TYPES.OpenParen)) {\n        filter = parseCallExpression(filter);\n      }\n      operand = new FilterExpression(operand, filter);\n    }\n    return operand;\n  }\n  function parsePrimaryExpression() {\n    const token = tokens[current];\n    switch (token.type) {\n      case TOKEN_TYPES.NumericLiteral:\n        ++current;\n        return new NumericLiteral(Number(token.value));\n      case TOKEN_TYPES.StringLiteral:\n        ++current;\n        return new StringLiteral(token.value);\n      case TOKEN_TYPES.BooleanLiteral:\n        ++current;\n        return new BooleanLiteral(token.value === \"true\");\n      case TOKEN_TYPES.Identifier:\n        ++current;\n        return new Identifier(token.value);\n      case TOKEN_TYPES.OpenParen: {\n        ++current;\n        const expression = parseExpressionSequence();\n        if (tokens[current].type !== TOKEN_TYPES.CloseParen) {\n          throw new SyntaxError(`Expected closing parenthesis, got ${tokens[current].type} instead`);\n        }\n        ++current;\n        return expression;\n      }\n      case TOKEN_TYPES.OpenSquareBracket: {\n        ++current;\n        const values = [];\n        while (!is(TOKEN_TYPES.CloseSquareBracket)) {\n          values.push(parseExpression());\n          if (is(TOKEN_TYPES.Comma)) {\n            ++current;\n          }\n        }\n        ++current;\n        return new ArrayLiteral(values);\n      }\n      case TOKEN_TYPES.OpenCurlyBracket: {\n        ++current;\n        const values = /* @__PURE__ */ new Map();\n        while (!is(TOKEN_TYPES.CloseCurlyBracket)) {\n          const key = parseExpression();\n          expect(TOKEN_TYPES.Colon, \"Expected colon between key and value in object literal\");\n          const value = parseExpression();\n          values.set(key, value);\n          if (is(TOKEN_TYPES.Comma)) {\n            ++current;\n          }\n        }\n        ++current;\n        return new ObjectLiteral(values);\n      }\n      default:\n        throw new SyntaxError(`Unexpected token: ${token.type}`);\n    }\n  }\n  while (current < tokens.length) {\n    program.body.push(parseAny());\n  }\n  return program;\n}\n\n// src/utils.ts\nfunction range(start, stop, step = 1) {\n  if (stop === void 0) {\n    stop = start;\n    start = 0;\n  }\n  const result = [];\n  for (let i = start; i < stop; i += step) {\n    result.push(i);\n  }\n  return result;\n}\nfunction slice(array, start, stop, step = 1) {\n  const direction = Math.sign(step);\n  if (direction >= 0) {\n    start = (start ??= 0) < 0 ? Math.max(array.length + start, 0) : Math.min(start, array.length);\n    stop = (stop ??= array.length) < 0 ? Math.max(array.length + stop, 0) : Math.min(stop, array.length);\n  } else {\n    start = (start ??= array.length - 1) < 0 ? Math.max(array.length + start, -1) : Math.min(start, array.length - 1);\n    stop = (stop ??= -1) < -1 ? Math.max(array.length + stop, -1) : Math.min(stop, array.length - 1);\n  }\n  const result = [];\n  for (let i = start; direction * i < direction * stop; i += step) {\n    result.push(array[i]);\n  }\n  return result;\n}\nfunction titleCase(value) {\n  return value.replace(/\\b\\w/g, (c) => c.toUpperCase());\n}\n\n// src/runtime.ts\nvar RuntimeValue = class {\n  type = \"RuntimeValue\";\n  value;\n  /**\n   * A collection of built-in functions for this type.\n   */\n  builtins = /* @__PURE__ */ new Map();\n  /**\n   * Creates a new RuntimeValue.\n   */\n  constructor(value = void 0) {\n    this.value = value;\n  }\n  /**\n   * Determines truthiness or falsiness of the runtime value.\n   * This function should be overridden by subclasses if it has custom truthiness criteria.\n   * @returns {BooleanValue} BooleanValue(true) if the value is truthy, BooleanValue(false) otherwise.\n   */\n  __bool__() {\n    return new BooleanValue(!!this.value);\n  }\n};\nvar NumericValue = class extends RuntimeValue {\n  type = \"NumericValue\";\n};\nvar StringValue = class extends RuntimeValue {\n  type = \"StringValue\";\n  builtins = /* @__PURE__ */ new Map([\n    [\n      \"upper\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.toUpperCase());\n      })\n    ],\n    [\n      \"lower\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.toLowerCase());\n      })\n    ],\n    [\n      \"strip\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.trim());\n      })\n    ],\n    [\n      \"title\",\n      new FunctionValue(() => {\n        return new StringValue(titleCase(this.value));\n      })\n    ],\n    [\"length\", new NumericValue(this.value.length)]\n  ]);\n};\nvar BooleanValue = class extends RuntimeValue {\n  type = \"BooleanValue\";\n};\nvar ObjectValue = class extends RuntimeValue {\n  type = \"ObjectValue\";\n  /**\n   * NOTE: necessary to override since all JavaScript arrays are considered truthy,\n   * while only non-empty Python arrays are consider truthy.\n   *\n   * e.g.,\n   *  - JavaScript:  {} && 5 -> 5\n   *  - Python:      {} and 5 -> {}\n   */\n  __bool__() {\n    return new BooleanValue(this.value.size > 0);\n  }\n  builtins = /* @__PURE__ */ new Map([\n    [\n      \"get\",\n      new FunctionValue(([key, defaultValue]) => {\n        if (!(key instanceof StringValue)) {\n          throw new Error(`Object key must be a string: got ${key.type}`);\n        }\n        return this.value.get(key.value) ?? defaultValue ?? new NullValue();\n      })\n    ],\n    [\n      \"items\",\n      new FunctionValue(() => {\n        return new ArrayValue(\n          Array.from(this.value.entries()).map(([key, value]) => new ArrayValue([new StringValue(key), value]))\n        );\n      })\n    ]\n  ]);\n};\nvar ArrayValue = class extends RuntimeValue {\n  type = \"ArrayValue\";\n  builtins = /* @__PURE__ */ new Map([[\"length\", new NumericValue(this.value.length)]]);\n  /**\n   * NOTE: necessary to override since all JavaScript arrays are considered truthy,\n   * while only non-empty Python arrays are consider truthy.\n   *\n   * e.g.,\n   *  - JavaScript:  [] && 5 -> 5\n   *  - Python:      [] and 5 -> []\n   */\n  __bool__() {\n    return new BooleanValue(this.value.length > 0);\n  }\n};\nvar TupleValue = class extends ArrayValue {\n  type = \"TupleValue\";\n};\nvar FunctionValue = class extends RuntimeValue {\n  type = \"FunctionValue\";\n};\nvar NullValue = class extends RuntimeValue {\n  type = \"NullValue\";\n};\nvar UndefinedValue = class extends RuntimeValue {\n  type = \"UndefinedValue\";\n};\nvar Environment = class {\n  constructor(parent) {\n    this.parent = parent;\n  }\n  /**\n   * The variables declared in this environment.\n   */\n  variables = /* @__PURE__ */ new Map([\n    [\n      \"namespace\",\n      new FunctionValue((args) => {\n        if (args.length === 0) {\n          return new ObjectValue(/* @__PURE__ */ new Map());\n        }\n        if (args.length !== 1 || !(args[0] instanceof ObjectValue)) {\n          throw new Error(\"`namespace` expects either zero arguments or a single object argument\");\n        }\n        return args[0];\n      })\n    ]\n  ]);\n  /**\n   * The tests available in this environment.\n   */\n  tests = /* @__PURE__ */ new Map([\n    [\"boolean\", (operand) => operand.type === \"BooleanValue\"],\n    [\"callable\", (operand) => operand instanceof FunctionValue],\n    [\n      \"odd\",\n      (operand) => {\n        if (operand.type !== \"NumericValue\") {\n          throw new Error(`Cannot apply test \"odd\" to type: ${operand.type}`);\n        }\n        return operand.value % 2 !== 0;\n      }\n    ],\n    [\n      \"even\",\n      (operand) => {\n        if (operand.type !== \"NumericValue\") {\n          throw new Error(`Cannot apply test \"even\" to type: ${operand.type}`);\n        }\n        return operand.value % 2 === 0;\n      }\n    ],\n    [\"false\", (operand) => operand.type === \"BooleanValue\" && !operand.value],\n    [\"true\", (operand) => operand.type === \"BooleanValue\" && operand.value],\n    [\"number\", (operand) => operand.type === \"NumericValue\"],\n    [\"integer\", (operand) => operand.type === \"NumericValue\" && Number.isInteger(operand.value)],\n    [\"iterable\", (operand) => operand instanceof ArrayValue || operand instanceof StringValue],\n    [\n      \"lower\",\n      (operand) => {\n        const str = operand.value;\n        return operand.type === \"StringValue\" && str === str.toLowerCase();\n      }\n    ],\n    [\n      \"upper\",\n      (operand) => {\n        const str = operand.value;\n        return operand.type === \"StringValue\" && str === str.toUpperCase();\n      }\n    ],\n    [\"none\", (operand) => operand.type === \"NullValue\"],\n    [\"defined\", (operand) => operand.type !== \"UndefinedValue\"],\n    [\"undefined\", (operand) => operand.type === \"UndefinedValue\"],\n    [\"equalto\", (a, b) => a.value === b.value]\n  ]);\n  /**\n   * Set the value of a variable in the current environment.\n   */\n  set(name, value) {\n    return this.declareVariable(name, convertToRuntimeValues(value));\n  }\n  declareVariable(name, value) {\n    if (this.variables.has(name)) {\n      throw new SyntaxError(`Variable already declared: ${name}`);\n    }\n    this.variables.set(name, value);\n    return value;\n  }\n  // private assignVariable(name: string, value: AnyRuntimeValue): AnyRuntimeValue {\n  // \tconst env = this.resolve(name);\n  // \tenv.variables.set(name, value);\n  // \treturn value;\n  // }\n  /**\n   * Set variable in the current scope.\n   * See https://jinja.palletsprojects.com/en/3.0.x/templates/#assignments for more information.\n   */\n  setVariable(name, value) {\n    this.variables.set(name, value);\n    return value;\n  }\n  /**\n   * Resolve the environment in which the variable is declared.\n   * @param {string} name The name of the variable.\n   * @returns {Environment} The environment in which the variable is declared.\n   */\n  resolve(name) {\n    if (this.variables.has(name)) {\n      return this;\n    }\n    if (this.parent) {\n      return this.parent.resolve(name);\n    }\n    throw new Error(`Unknown variable: ${name}`);\n  }\n  lookupVariable(name) {\n    try {\n      return this.resolve(name).variables.get(name) ?? new UndefinedValue();\n    } catch {\n      return new UndefinedValue();\n    }\n  }\n};\nvar Interpreter = class {\n  global;\n  constructor(env) {\n    this.global = env ?? new Environment();\n  }\n  /**\n   * Run the program.\n   */\n  run(program) {\n    return this.evaluate(program, this.global);\n  }\n  /**\n   * Evaluates expressions following the binary operation type.\n   */\n  evaluateBinaryExpression(node, environment) {\n    const left = this.evaluate(node.left, environment);\n    switch (node.operator.value) {\n      case \"and\":\n        return left.__bool__().value ? this.evaluate(node.right, environment) : left;\n      case \"or\":\n        return left.__bool__().value ? left : this.evaluate(node.right, environment);\n    }\n    const right = this.evaluate(node.right, environment);\n    switch (node.operator.value) {\n      case \"==\":\n        return new BooleanValue(left.value == right.value);\n      case \"!=\":\n        return new BooleanValue(left.value != right.value);\n    }\n    if (left instanceof UndefinedValue || right instanceof UndefinedValue) {\n      throw new Error(\"Cannot perform operation on undefined values\");\n    } else if (left instanceof NullValue || right instanceof NullValue) {\n      throw new Error(\"Cannot perform operation on null values\");\n    } else if (left instanceof NumericValue && right instanceof NumericValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new NumericValue(left.value + right.value);\n        case \"-\":\n          return new NumericValue(left.value - right.value);\n        case \"*\":\n          return new NumericValue(left.value * right.value);\n        case \"/\":\n          return new NumericValue(left.value / right.value);\n        case \"%\":\n          return new NumericValue(left.value % right.value);\n        case \"<\":\n          return new BooleanValue(left.value < right.value);\n        case \">\":\n          return new BooleanValue(left.value > right.value);\n        case \">=\":\n          return new BooleanValue(left.value >= right.value);\n        case \"<=\":\n          return new BooleanValue(left.value <= right.value);\n      }\n    } else if (left instanceof ArrayValue && right instanceof ArrayValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new ArrayValue(left.value.concat(right.value));\n      }\n    } else if (right instanceof ArrayValue) {\n      const member = right.value.find((x) => x.value === left.value) !== void 0;\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(member);\n        case \"not in\":\n          return new BooleanValue(!member);\n      }\n    }\n    if (left instanceof StringValue || right instanceof StringValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new StringValue(left.value.toString() + right.value.toString());\n      }\n    }\n    if (left instanceof StringValue && right instanceof StringValue) {\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(right.value.includes(left.value));\n        case \"not in\":\n          return new BooleanValue(!right.value.includes(left.value));\n      }\n    }\n    if (left instanceof StringValue && right instanceof ObjectValue) {\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(right.value.has(left.value));\n        case \"not in\":\n          return new BooleanValue(!right.value.has(left.value));\n      }\n    }\n    throw new SyntaxError(`Unknown operator \"${node.operator.value}\" between ${left.type} and ${right.type}`);\n  }\n  /**\n   * Evaluates expressions following the filter operation type.\n   */\n  evaluateFilterExpression(node, environment) {\n    const operand = this.evaluate(node.operand, environment);\n    if (node.filter.type === \"Identifier\") {\n      const filter = node.filter;\n      if (operand instanceof ArrayValue) {\n        switch (filter.value) {\n          case \"list\":\n            return operand;\n          case \"first\":\n            return operand.value[0];\n          case \"last\":\n            return operand.value[operand.value.length - 1];\n          case \"length\":\n            return new NumericValue(operand.value.length);\n          case \"reverse\":\n            return new ArrayValue(operand.value.reverse());\n          case \"sort\":\n            return new ArrayValue(\n              operand.value.sort((a, b) => {\n                if (a.type !== b.type) {\n                  throw new Error(`Cannot compare different types: ${a.type} and ${b.type}`);\n                }\n                switch (a.type) {\n                  case \"NumericValue\":\n                    return a.value - b.value;\n                  case \"StringValue\":\n                    return a.value.localeCompare(b.value);\n                  default:\n                    throw new Error(`Cannot compare type: ${a.type}`);\n                }\n              })\n            );\n          default:\n            throw new Error(`Unknown ArrayValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof StringValue) {\n        switch (filter.value) {\n          case \"length\":\n            return new NumericValue(operand.value.length);\n          case \"upper\":\n            return new StringValue(operand.value.toUpperCase());\n          case \"lower\":\n            return new StringValue(operand.value.toLowerCase());\n          case \"title\":\n            return new StringValue(titleCase(operand.value));\n          case \"capitalize\":\n            return new StringValue(operand.value.charAt(0).toUpperCase() + operand.value.slice(1));\n          case \"trim\":\n            return new StringValue(operand.value.trim());\n          default:\n            throw new Error(`Unknown StringValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof NumericValue) {\n        switch (filter.value) {\n          case \"abs\":\n            return new NumericValue(Math.abs(operand.value));\n          default:\n            throw new Error(`Unknown NumericValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof ObjectValue) {\n        switch (filter.value) {\n          case \"items\":\n            return new ArrayValue(\n              Array.from(operand.value.entries()).map(([key, value]) => new ArrayValue([new StringValue(key), value]))\n            );\n          case \"length\":\n            return new NumericValue(operand.value.size);\n          default:\n            throw new Error(`Unknown ObjectValue filter: ${filter.value}`);\n        }\n      }\n      throw new Error(`Cannot apply filter \"${filter.value}\" to type: ${operand.type}`);\n    } else if (node.filter.type === \"CallExpression\") {\n      const filter = node.filter;\n      if (filter.callee.type !== \"Identifier\") {\n        throw new Error(`Unknown filter: ${filter.callee.type}`);\n      }\n      const filterName = filter.callee.value;\n      if (operand instanceof ArrayValue) {\n        switch (filterName) {\n          case \"selectattr\": {\n            if (operand.value.some((x) => !(x instanceof ObjectValue))) {\n              throw new Error(\"`selectattr` can only be applied to array of objects\");\n            }\n            if (filter.args.some((x) => x.type !== \"StringLiteral\")) {\n              throw new Error(\"arguments of `selectattr` must be strings\");\n            }\n            const [attr, testName, value] = filter.args.map((x) => this.evaluate(x, environment));\n            let testFunction;\n            if (testName) {\n              const test = environment.tests.get(testName.value);\n              if (!test) {\n                throw new Error(`Unknown test: ${testName.value}`);\n              }\n              testFunction = test;\n            } else {\n              testFunction = (...x) => x[0].__bool__().value;\n            }\n            const filtered = operand.value.filter((item) => {\n              const a = item.value.get(attr.value);\n              if (a) {\n                return testFunction(a, value);\n              }\n              return false;\n            });\n            return new ArrayValue(filtered);\n          }\n        }\n        throw new Error(`Unknown ArrayValue filter: ${filterName}`);\n      } else {\n        throw new Error(`Cannot apply filter \"${filterName}\" to type: ${operand.type}`);\n      }\n    }\n    throw new Error(`Unknown filter: ${node.filter.type}`);\n  }\n  /**\n   * Evaluates expressions following the test operation type.\n   */\n  evaluateTestExpression(node, environment) {\n    const operand = this.evaluate(node.operand, environment);\n    const test = environment.tests.get(node.test.value);\n    if (!test) {\n      throw new Error(`Unknown test: ${node.test.value}`);\n    }\n    const result = test(operand);\n    return new BooleanValue(node.negate ? !result : result);\n  }\n  /**\n   * Evaluates expressions following the unary operation type.\n   */\n  evaluateUnaryExpression(node, environment) {\n    const argument = this.evaluate(node.argument, environment);\n    switch (node.operator.value) {\n      case \"not\":\n        return new BooleanValue(!argument.value);\n      default:\n        throw new SyntaxError(`Unknown operator: ${node.operator.value}`);\n    }\n  }\n  evalProgram(program, environment) {\n    return this.evaluateBlock(program.body, environment);\n  }\n  evaluateBlock(statements, environment) {\n    let result = \"\";\n    for (const statement of statements) {\n      const lastEvaluated = this.evaluate(statement, environment);\n      if (lastEvaluated.type !== \"NullValue\" && lastEvaluated.type !== \"UndefinedValue\") {\n        result += lastEvaluated.value;\n      }\n    }\n    return new StringValue(result);\n  }\n  evaluateIdentifier(node, environment) {\n    return environment.lookupVariable(node.value);\n  }\n  evaluateCallExpression(expr, environment) {\n    const args = [];\n    const kwargs = /* @__PURE__ */ new Map();\n    for (const argument of expr.args) {\n      if (argument.type === \"KeywordArgumentExpression\") {\n        const kwarg = argument;\n        kwargs.set(kwarg.key.value, this.evaluate(kwarg.value, environment));\n      } else {\n        args.push(this.evaluate(argument, environment));\n      }\n    }\n    if (kwargs.size > 0) {\n      args.push(new ObjectValue(kwargs));\n    }\n    const fn = this.evaluate(expr.callee, environment);\n    if (fn.type !== \"FunctionValue\") {\n      throw new Error(`Cannot call something that is not a function: got ${fn.type}`);\n    }\n    return fn.value(args, environment);\n  }\n  evaluateSliceExpression(object, expr, environment) {\n    if (!(object instanceof ArrayValue || object instanceof StringValue)) {\n      throw new Error(\"Slice object must be an array or string\");\n    }\n    const start = this.evaluate(expr.start, environment);\n    const stop = this.evaluate(expr.stop, environment);\n    const step = this.evaluate(expr.step, environment);\n    if (!(start instanceof NumericValue || start instanceof UndefinedValue)) {\n      throw new Error(\"Slice start must be numeric or undefined\");\n    }\n    if (!(stop instanceof NumericValue || stop instanceof UndefinedValue)) {\n      throw new Error(\"Slice stop must be numeric or undefined\");\n    }\n    if (!(step instanceof NumericValue || step instanceof UndefinedValue)) {\n      throw new Error(\"Slice step must be numeric or undefined\");\n    }\n    if (object instanceof ArrayValue) {\n      return new ArrayValue(slice(object.value, start.value, stop.value, step.value));\n    } else {\n      return new StringValue(slice(Array.from(object.value), start.value, stop.value, step.value).join(\"\"));\n    }\n  }\n  evaluateMemberExpression(expr, environment) {\n    const object = this.evaluate(expr.object, environment);\n    let property;\n    if (expr.computed) {\n      if (expr.property.type === \"SliceExpression\") {\n        return this.evaluateSliceExpression(object, expr.property, environment);\n      } else {\n        property = this.evaluate(expr.property, environment);\n      }\n    } else {\n      property = new StringValue(expr.property.value);\n    }\n    let value;\n    if (object instanceof ObjectValue) {\n      if (!(property instanceof StringValue)) {\n        throw new Error(`Cannot access property with non-string: got ${property.type}`);\n      }\n      value = object.value.get(property.value) ?? object.builtins.get(property.value);\n    } else if (object instanceof ArrayValue || object instanceof StringValue) {\n      if (property instanceof NumericValue) {\n        value = object.value.at(property.value);\n        if (object instanceof StringValue) {\n          value = new StringValue(object.value.at(property.value));\n        }\n      } else if (property instanceof StringValue) {\n        value = object.builtins.get(property.value);\n      } else {\n        throw new Error(`Cannot access property with non-string/non-number: got ${property.type}`);\n      }\n    } else {\n      if (!(property instanceof StringValue)) {\n        throw new Error(`Cannot access property with non-string: got ${property.type}`);\n      }\n      value = object.builtins.get(property.value);\n    }\n    return value instanceof RuntimeValue ? value : new UndefinedValue();\n  }\n  evaluateSet(node, environment) {\n    const rhs = this.evaluate(node.value, environment);\n    if (node.assignee.type === \"Identifier\") {\n      const variableName = node.assignee.value;\n      environment.setVariable(variableName, rhs);\n    } else if (node.assignee.type === \"MemberExpression\") {\n      const member = node.assignee;\n      const object = this.evaluate(member.object, environment);\n      if (!(object instanceof ObjectValue)) {\n        throw new Error(\"Cannot assign to member of non-object\");\n      }\n      if (member.property.type !== \"Identifier\") {\n        throw new Error(\"Cannot assign to member with non-identifier property\");\n      }\n      object.value.set(member.property.value, rhs);\n    } else {\n      throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(node.assignee)}`);\n    }\n    return new NullValue();\n  }\n  evaluateIf(node, environment) {\n    const test = this.evaluate(node.test, environment);\n    return this.evaluateBlock(test.__bool__().value ? node.body : node.alternate, environment);\n  }\n  evaluateFor(node, environment) {\n    const scope = new Environment(environment);\n    const iterable = this.evaluate(node.iterable, scope);\n    if (!(iterable instanceof ArrayValue)) {\n      throw new Error(`Expected iterable type in for loop: got ${iterable.type}`);\n    }\n    let result = \"\";\n    for (let i = 0; i < iterable.value.length; ++i) {\n      const loop = /* @__PURE__ */ new Map([\n        [\"index\", new NumericValue(i + 1)],\n        [\"index0\", new NumericValue(i)],\n        [\"revindex\", new NumericValue(iterable.value.length - i)],\n        [\"revindex0\", new NumericValue(iterable.value.length - i - 1)],\n        [\"first\", new BooleanValue(i === 0)],\n        [\"last\", new BooleanValue(i === iterable.value.length - 1)],\n        [\"length\", new NumericValue(iterable.value.length)],\n        [\"previtem\", i > 0 ? iterable.value[i - 1] : new UndefinedValue()],\n        [\"nextitem\", i < iterable.value.length - 1 ? iterable.value[i + 1] : new UndefinedValue()]\n      ]);\n      scope.setVariable(\"loop\", new ObjectValue(loop));\n      const current = iterable.value[i];\n      if (node.loopvar.type === \"Identifier\") {\n        scope.setVariable(node.loopvar.value, current);\n      } else if (node.loopvar.type === \"TupleLiteral\") {\n        const loopvar = node.loopvar;\n        if (current.type !== \"ArrayValue\") {\n          throw new Error(`Cannot unpack non-iterable type: ${current.type}`);\n        }\n        const c = current;\n        if (loopvar.value.length !== c.value.length) {\n          throw new Error(`Too ${loopvar.value.length > c.value.length ? \"few\" : \"many\"} items to unpack`);\n        }\n        for (let j = 0; j < loopvar.value.length; ++j) {\n          if (loopvar.value[j].type !== \"Identifier\") {\n            throw new Error(`Cannot unpack non-identifier type: ${loopvar.value[j].type}`);\n          }\n          scope.setVariable(loopvar.value[j].value, c.value[j]);\n        }\n      }\n      const evaluated = this.evaluateBlock(node.body, scope);\n      result += evaluated.value;\n    }\n    return new StringValue(result);\n  }\n  evaluate(statement, environment) {\n    if (statement === void 0)\n      return new UndefinedValue();\n    switch (statement.type) {\n      case \"Program\":\n        return this.evalProgram(statement, environment);\n      case \"Set\":\n        return this.evaluateSet(statement, environment);\n      case \"If\":\n        return this.evaluateIf(statement, environment);\n      case \"For\":\n        return this.evaluateFor(statement, environment);\n      case \"NumericLiteral\":\n        return new NumericValue(Number(statement.value));\n      case \"StringLiteral\":\n        return new StringValue(statement.value);\n      case \"BooleanLiteral\":\n        return new BooleanValue(statement.value);\n      case \"ArrayLiteral\":\n        return new ArrayValue(statement.value.map((x) => this.evaluate(x, environment)));\n      case \"TupleLiteral\":\n        return new TupleValue(statement.value.map((x) => this.evaluate(x, environment)));\n      case \"ObjectLiteral\": {\n        const mapping = /* @__PURE__ */ new Map();\n        for (const [key, value] of statement.value) {\n          const evaluatedKey = this.evaluate(key, environment);\n          if (!(evaluatedKey instanceof StringValue)) {\n            throw new Error(`Object keys must be strings: got ${evaluatedKey.type}`);\n          }\n          mapping.set(evaluatedKey.value, this.evaluate(value, environment));\n        }\n        return new ObjectValue(mapping);\n      }\n      case \"Identifier\":\n        return this.evaluateIdentifier(statement, environment);\n      case \"CallExpression\":\n        return this.evaluateCallExpression(statement, environment);\n      case \"MemberExpression\":\n        return this.evaluateMemberExpression(statement, environment);\n      case \"UnaryExpression\":\n        return this.evaluateUnaryExpression(statement, environment);\n      case \"BinaryExpression\":\n        return this.evaluateBinaryExpression(statement, environment);\n      case \"FilterExpression\":\n        return this.evaluateFilterExpression(statement, environment);\n      case \"TestExpression\":\n        return this.evaluateTestExpression(statement, environment);\n      default:\n        throw new SyntaxError(`Unknown node type: ${statement.type}`);\n    }\n  }\n};\nfunction convertToRuntimeValues(input) {\n  switch (typeof input) {\n    case \"number\":\n      return new NumericValue(input);\n    case \"string\":\n      return new StringValue(input);\n    case \"boolean\":\n      return new BooleanValue(input);\n    case \"object\":\n      if (input === null) {\n        return new NullValue();\n      } else if (Array.isArray(input)) {\n        return new ArrayValue(input.map(convertToRuntimeValues));\n      } else {\n        return new ObjectValue(\n          new Map(Object.entries(input).map(([key, value]) => [key, convertToRuntimeValues(value)]))\n        );\n      }\n    case \"function\":\n      return new FunctionValue((args, _scope) => {\n        const result = input(...args.map((x) => x.value)) ?? null;\n        return convertToRuntimeValues(result);\n      });\n    default:\n      throw new Error(`Cannot convert to runtime value: ${input}`);\n  }\n}\n\n// src/index.ts\nvar Template = class {\n  parsed;\n  /**\n   * @param {string} template The template string\n   */\n  constructor(template) {\n    const tokens = tokenize(template, {\n      lstrip_blocks: true,\n      trim_blocks: true\n    });\n    this.parsed = parse(tokens);\n  }\n  render(items) {\n    const env = new Environment();\n    env.set(\"false\", false);\n    env.set(\"true\", true);\n    env.set(\"raise_exception\", (args) => {\n      throw new Error(args);\n    });\n    env.set(\"range\", range);\n    for (const [key, value] of Object.entries(items)) {\n      env.set(key, value);\n    }\n    const interpreter = new Interpreter(env);\n    const result = interpreter.run(this.parsed);\n    return result.value;\n  }\n};\nexport {\n  Environment,\n  Interpreter,\n  Template,\n  parse,\n  tokenize\n};\n","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","import { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n// Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    await opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n","/* eslint-env browser */\nimport browserReadableStreamToIt from 'browser-readablestream-to-it';\nexport default function blobToIt(blob) {\n    if (typeof blob.stream === 'function') {\n        return browserReadableStreamToIt(blob.stream());\n    }\n    // firefox < 69 does not support blob.stream()\n    // @ts-expect-error - response.body is optional, but in practice it's a stream.\n    return browserReadableStreamToIt(new Response(blob).body);\n}\n//# sourceMappingURL=index.js.map","import errCode from 'err-code';\nexport function openFailedError(err) {\n    err = err ?? new Error('Open failed');\n    return errCode(err, 'ERR_OPEN_FAILED');\n}\nexport function closeFailedError(err) {\n    err = err ?? new Error('Close failed');\n    return errCode(err, 'ERR_CLOSE_FAILED');\n}\nexport function putFailedError(err) {\n    err = err ?? new Error('Put failed');\n    return errCode(err, 'ERR_PUT_FAILED');\n}\nexport function getFailedError(err) {\n    err = err ?? new Error('Get failed');\n    return errCode(err, 'ERR_GET_FAILED');\n}\nexport function deleteFailedError(err) {\n    err = err ?? new Error('Delete failed');\n    return errCode(err, 'ERR_DELETE_FAILED');\n}\nexport function hasFailedError(err) {\n    err = err ?? new Error('Has failed');\n    return errCode(err, 'ERR_HAS_FAILED');\n}\nexport function notFoundError(err) {\n    err = err ?? new Error('Not Found');\n    return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n    err = err ?? new Error('Aborted');\n    return errCode(err, 'ERR_ABORTED');\n}\n//# sourceMappingURL=errors.js.map","export class BaseBlockstore {\n    has(key, options) {\n        return Promise.reject(new Error('.has is not implemented'));\n    }\n    put(key, val, options) {\n        return Promise.reject(new Error('.put is not implemented'));\n    }\n    async *putMany(source, options) {\n        for await (const { cid, block } of source) {\n            await this.put(cid, block, options);\n            yield cid;\n        }\n    }\n    get(key, options) {\n        return Promise.reject(new Error('.get is not implemented'));\n    }\n    async *getMany(source, options) {\n        for await (const key of source) {\n            yield {\n                cid: key,\n                block: await this.get(key, options)\n            };\n        }\n    }\n    async delete(key, options) {\n        await Promise.reject(new Error('.delete is not implemented'));\n    }\n    async *deleteMany(source, options) {\n        for await (const key of source) {\n            await this.delete(key, options);\n            yield key;\n        }\n    }\n    /**\n     * Extending classes should override `query` or implement this method\n     */\n    async *getAll(options) {\n        throw new Error('.getAll is not implemented');\n    }\n}\n//# sourceMappingURL=base.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","import { base32 } from 'multiformats/bases/base32';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { BaseBlockstore } from './base.js';\nimport * as Errors from './errors.js';\nexport class MemoryBlockstore extends BaseBlockstore {\n    data;\n    constructor() {\n        super();\n        this.data = new Map();\n    }\n    put(key, val) {\n        this.data.set(base32.encode(key.multihash.bytes), val);\n        return key;\n    }\n    get(key) {\n        const buf = this.data.get(base32.encode(key.multihash.bytes));\n        if (buf == null) {\n            throw Errors.notFoundError();\n        }\n        return buf;\n    }\n    has(key) {\n        return this.data.has(base32.encode(key.multihash.bytes));\n    }\n    async delete(key) {\n        this.data.delete(base32.encode(key.multihash.bytes));\n    }\n    async *getAll() {\n        for (const [key, value] of this.data.entries()) {\n            yield {\n                cid: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n                block: value\n            };\n        }\n    }\n}\n//# sourceMappingURL=memory.js.map","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","import { logger } from '@libp2p/logger';\nimport drain from 'it-drain';\nimport filter from 'it-filter';\nimport merge from 'it-merge';\nimport { pushable } from 'it-pushable';\nimport { BaseBlockstore } from './base.js';\nimport * as Errors from './errors.js';\nconst log = logger('blockstore:core:tiered');\n/**\n * A blockstore that can combine multiple stores. Puts and deletes\n * will write through to all blockstores. Has and get will\n * try each store sequentially. getAll will use every store but also\n * deduplicate any yielded pairs.\n */\nexport class TieredBlockstore extends BaseBlockstore {\n    stores;\n    constructor(stores) {\n        super();\n        this.stores = stores.slice();\n    }\n    async put(key, value, options) {\n        try {\n            await Promise.all(this.stores.map(async (store) => { await store.put(key, value, options); }));\n            return key;\n        }\n        catch (err) {\n            throw Errors.putFailedError(err);\n        }\n    }\n    async get(key, options) {\n        for (const store of this.stores) {\n            try {\n                const res = await store.get(key, options);\n                if (res != null)\n                    return res;\n            }\n            catch (err) {\n                log.error(err);\n            }\n        }\n        throw Errors.notFoundError();\n    }\n    async has(key, options) {\n        for (const s of this.stores) {\n            if (await s.has(key, options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async delete(key, options) {\n        try {\n            await Promise.all(this.stores.map(async (store) => { await store.delete(key, options); }));\n        }\n        catch (err) {\n            throw Errors.deleteFailedError(err);\n        }\n    }\n    async *putMany(source, options = {}) {\n        let error;\n        const pushables = this.stores.map(store => {\n            const source = pushable({\n                objectMode: true\n            });\n            drain(store.putMany(source, options))\n                .catch(err => {\n                // store threw while putting, make sure we bubble the error up\n                error = err;\n            });\n            return source;\n        });\n        try {\n            for await (const pair of source) {\n                if (error != null) {\n                    throw error;\n                }\n                pushables.forEach(p => p.push(pair));\n                yield pair.cid;\n            }\n        }\n        finally {\n            pushables.forEach(p => p.end());\n        }\n    }\n    async *deleteMany(source, options = {}) {\n        let error;\n        const pushables = this.stores.map(store => {\n            const source = pushable({\n                objectMode: true\n            });\n            drain(store.deleteMany(source, options))\n                .catch(err => {\n                // store threw while deleting, make sure we bubble the error up\n                error = err;\n            });\n            return source;\n        });\n        try {\n            for await (const key of source) {\n                if (error != null) {\n                    throw error;\n                }\n                pushables.forEach(p => p.push(key));\n                yield key;\n            }\n        }\n        finally {\n            pushables.forEach(p => p.end());\n        }\n    }\n    async *getAll(options) {\n        // deduplicate yielded pairs\n        const seen = new Set();\n        yield* filter(merge(...this.stores.map(s => s.getAll(options))), (pair) => {\n            const cidStr = pair.cid.toString();\n            if (seen.has(cidStr)) {\n                return false;\n            }\n            seen.add(cidStr);\n            return true;\n        });\n    }\n}\n//# sourceMappingURL=tiered.js.map","import * as ErrorsImport from './errors.js';\nexport { BaseBlockstore } from './base.js';\nexport { MemoryBlockstore } from './memory.js';\nexport { BlackHoleBlockstore } from './black-hole.js';\nexport { TieredBlockstore } from './tiered.js';\nexport const Errors = {\n    ...ErrorsImport\n};\n//# sourceMappingURL=index.js.map","import drain from 'it-drain'\nimport filter from 'it-filter'\nimport take from 'it-take'\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @typedef {import('interface-blockstore').Options} Options\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('interface-blockstore').Batch} Batch\n *\n * @typedef {import('multiformats').CID} CID\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Blockstore}\n */\nexport class BaseBlockstore {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {CID[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {Pair} */ e) =>\n        e.key.toString().startsWith(q.prefix || '')\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= (q.offset || 0))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {CID} */ cid) => cid.toString().startsWith(q.prefix || ''))\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","import drain from 'it-drain'\nimport { pushable } from 'it-pushable'\nimport { Key } from 'interface-datastore/key'\nimport { CID } from 'multiformats/cid'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { base32, base32pad } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport errcode from 'err-code'\nimport { BaseBlockstore } from 'blockstore-core/base'\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} cid\n * @returns {Key}\n */\nfunction cidToKey (cid) {\n  const c = CID.asCID(cid)\n\n  if (!c) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  return new Key('/' + base32.encode(c.multihash.bytes).slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n * @returns {CID}\n */\nfunction keyToCid (key) {\n  // Block key is of the form <base32 encoded string>\n  return CID.createV1(raw.code, Digest.decode(base32.decode('b' + key.toString().slice(1).toLowerCase())))\n}\n\n/**\n * Tries to decode a prefix as the first part of a CID and then\n * strip off the version and codec bytes to just leave part of\n * the multihash.\n *\n * Only really works if the prefix length aligns with the byte\n * boundaries of the encoding.\n *\n * @param {string} prefix\n * @returns {string}\n */\nfunction convertPrefix (prefix) {\n  const firstChar = prefix.substring(0, 1)\n\n  if (firstChar === '/') {\n    return convertPrefix(prefix.substring(1))\n  }\n\n  /** @type {(input: string) => Uint8Array } */\n  let decoder\n\n  if (firstChar.toLowerCase() === 'b') {\n    // v1 cid prefix, remove version and codec bytes\n    decoder = (input) => base32.decode(input.toLowerCase()).subarray(2)\n  } else if (firstChar.toLowerCase() === 'c') {\n    // v1 cid prefix, remove version and codec bytes\n    decoder = (input) => base32pad.decode(input.toLowerCase()).subarray(2)\n  } else if (firstChar === 'z') {\n    // v1 cid\n    decoder = (input) => base58btc.decode(input).subarray(2)\n  } else if (firstChar === 'Q') {\n    // v0 cid prefix\n    decoder = (input) => base58btc.decode('z' + input)\n  } else {\n    decoder = (input) => base32.decode('b' + input.toLowerCase()).subarray(2)\n  }\n\n  let bytes\n\n  // find the longest prefix that we can safely decode\n  for (let i = 1; i < prefix.length; i++) {\n    try {\n      bytes = decoder(prefix.substring(0, i))\n    } catch (/** @type {any} */ err) {\n      if (err.message !== 'Unexpected end of data') {\n        throw err\n      }\n    }\n  }\n\n  let str = '/C'\n\n  if (bytes) {\n    // slice one character from the end of the string to ensure we don't end up\n    // with a padded value which could have a non-matching string at the end\n    str = `/${base32.encode(bytes).slice(1, -1).toUpperCase() || 'C'}`\n  }\n\n  return str\n}\n\n/**\n * @param {import('interface-blockstore').Query} query\n * @returns {import('interface-datastore').Query}\n */\nfunction convertQuery (query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters\n      ? query.filters.map(\n        filter => (pair) => {\n          return filter({ key: keyToCid(pair.key), value: pair.value })\n        }\n      )\n      : undefined,\n    orders: query.orders\n      ? query.orders.map(\n        order => (a, b) => {\n          return order({ key: keyToCid(a.key), value: a.value }, { key: keyToCid(b.key), value: b.value })\n        }\n      )\n      : undefined\n  }\n}\n\n/**\n * @param {import('interface-blockstore').KeyQuery} query\n * @returns {import('interface-datastore').KeyQuery}\n */\nfunction convertKeyQuery (query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters\n      ? query.filters.map(\n        filter => (key) => {\n          return filter(keyToCid(key))\n        }\n      )\n      : undefined,\n    orders: query.orders\n      ? query.orders.map(\n        order => (a, b) => {\n          return order(keyToCid(a), keyToCid(b))\n        }\n      )\n      : undefined\n  }\n}\n\n/**\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @implements {Blockstore}\n */\nexport class BlockstoreDatastoreAdapter extends BaseBlockstore {\n  /**\n   * @param {Datastore} datastore\n   */\n  constructor (datastore) {\n    super()\n\n    this.child = datastore\n  }\n\n  open () {\n    return this.child.open()\n  }\n\n  close () {\n    return this.child.close()\n  }\n\n  /**\n   * @param {Query} query\n   * @param {Options} [options]\n   */\n  async * query (query, options) {\n    for await (const { key, value } of this.child.query(convertQuery(query), options)) {\n      yield { key: keyToCid(key), value }\n    }\n  }\n\n  /**\n   * @param {KeyQuery} query\n   * @param {Options} [options]\n   */\n  async * queryKeys (query, options) {\n    for await (const key of this.child.queryKeys(convertKeyQuery(query), options)) {\n      yield keyToCid(key)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   * @returns\n   */\n  async get (cid, options) {\n    return this.child.get(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {Options} [options]\n   */\n  async * getMany (cids, options) {\n    for await (const cid of cids) {\n      yield this.get(cid, options)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (cid, value, options) {\n    await this.child.put(cidToKey(cid), value, options)\n  }\n\n  /**\n   * @param {AsyncIterable<Pair> | Iterable<Pair>} blocks\n   * @param {Options} [options]\n   */\n  async * putMany (blocks, options) { // eslint-disable-line require-await\n    // we cannot simply chain to `store.putMany` because we convert a CID into\n    // a key based on the multihash only, so we lose the version & codec and\n    // cannot give the user back the CID they used to create the block, so yield\n    // to `store.putMany` but return the actual block the user passed in.\n    //\n    // nb. we want to use `store.putMany` here so bitswap can control batching\n    // up block HAVEs to send to the network - if we use multiple `store.put`s\n    // it will not be able to guess we are about to `store.put` more blocks\n    const output = pushable({\n      objectMode: true\n    })\n\n    // process.nextTick runs on the microtask queue, setImmediate runs on the next\n    // event loop iteration so is slower. Use process.nextTick if it is available.\n    const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n    runner(async () => {\n      try {\n        const store = this.child\n\n        await drain(this.child.putMany(async function * () {\n          for await (const block of blocks) {\n            const key = cidToKey(block.key)\n            const exists = await store.has(key, options)\n\n            if (!exists) {\n              yield { key, value: block.value }\n            }\n\n            // there is an assumption here that after the yield has completed\n            // the underlying datastore has finished writing the block\n            output.push(block)\n          }\n        }()))\n\n        output.end()\n      } catch (/** @type {any} */ err) {\n        output.end(err)\n      }\n    })\n\n    yield * output\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   */\n  has (cid, options) {\n    return this.child.has(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   */\n  delete (cid, options) {\n    return this.child.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {Options} [options]\n   */\n  deleteMany (cids, options) {\n    const out = pushable({\n      objectMode: true\n    })\n\n    drain(this.child.deleteMany((async function * () {\n      for await (const cid of cids) {\n        yield cidToKey(cid)\n\n        out.push(cid)\n      }\n\n      out.end()\n    }()), options)).catch(err => {\n      out.end(err)\n    })\n\n    return out\n  }\n}\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","import { BaseBlockstore, Errors } from 'blockstore-core';\nimport { openDB, deleteDB } from 'idb';\nimport { base32upper } from 'multiformats/bases/base32';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as Digest from 'multiformats/hashes/digest';\nexport class IDBBlockstore extends BaseBlockstore {\n    location;\n    version;\n    db;\n    base;\n    constructor(location, init = {}) {\n        super();\n        this.location = `${init.prefix ?? ''}${location}`;\n        this.version = init.version ?? 1;\n        // this.transactionQueue = new PQueue({ concurrency: 1 })\n        this.base = init.base ?? base32upper;\n    }\n    #encode(cid) {\n        return `/${this.base.encoder.encode(cid.multihash.bytes)}`;\n    }\n    #decode(key) {\n        return CID.createV1(raw.code, Digest.decode(this.base.decoder.decode(key.substring(1))));\n    }\n    async open() {\n        try {\n            const location = this.location;\n            this.db = await openDB(location, this.version, {\n                upgrade(db) {\n                    db.createObjectStore(location);\n                }\n            });\n        }\n        catch (err) {\n            throw Errors.openFailedError(err);\n        }\n    }\n    async close() {\n        this.db?.close();\n    }\n    async put(key, val) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        try {\n            await this.db.put(this.location, val, this.#encode(key));\n            return key;\n        }\n        catch (err) {\n            throw Errors.putFailedError(err);\n        }\n    }\n    async get(key) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        let val;\n        try {\n            val = await this.db.get(this.location, this.#encode(key));\n        }\n        catch (err) {\n            throw Errors.putFailedError(err);\n        }\n        if (val === undefined) {\n            throw Errors.notFoundError();\n        }\n        return val;\n    }\n    async delete(key) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        try {\n            await this.db.delete(this.location, this.#encode(key));\n        }\n        catch (err) {\n            throw Errors.putFailedError(err);\n        }\n    }\n    async has(key) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        try {\n            return Boolean(await this.db.getKey(this.location, this.#encode(key)));\n        }\n        catch (err) {\n            throw Errors.putFailedError(err);\n        }\n    }\n    async *getAll(options) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        for (const key of await this.db.getAllKeys(this.location)) {\n            const cid = this.#decode(key.toString()); // eslint-disable-line @typescript-eslint/no-base-to-string\n            const block = await this.get(cid);\n            yield { cid, block };\n        }\n    }\n    async destroy() {\n        await deleteDB(this.location);\n    }\n}\n//# sourceMappingURL=index.js.map","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n */\nexport default async function* browserReadableStreamToIt(stream, options = {}) {\n    const reader = stream.getReader();\n    try {\n        while (true) {\n            const result = await reader.read();\n            if (result.done) {\n                return;\n            }\n            yield result.value;\n        }\n    }\n    finally {\n        if (options.preventCancel !== true) {\n            await reader.cancel();\n        }\n        reader.releaseLock();\n    }\n}\n//# sourceMappingURL=index.js.map","export default function accessor(buf) {\n    if (buf instanceof Uint8Array) {\n        return {\n            get(index) {\n                return buf[index];\n            },\n            set(index, value) {\n                buf[index] = value;\n            }\n        };\n    }\n    return {\n        get(index) {\n            return buf.get(index);\n        },\n        set(index, value) {\n            buf.set(index, value);\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      if (useMaps && m.has(key) || !useMaps && key in obj) {\n        throw new Error(`${ decodeErrPrefix } found repeat map key \"${ key }\"`);\n      }\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","import { base64url } from 'multiformats/bases/base64';\nexport function toBase64url(b) {\n    return base64url.encode(b).slice(1);\n}\nexport function fromBase64url(s) {\n    return base64url.decode(`u${s}`);\n}\n//# sourceMappingURL=utils.js.map","import { fromBase64url, toBase64url } from './utils.js';\nimport { CID } from 'multiformats/cid';\nexport function fromSplit(split) {\n    const [protectedHeader, payload, signature] = split;\n    return {\n        payload,\n        signatures: [{ protected: protectedHeader, signature }],\n        link: CID.decode(fromBase64url(payload)),\n    };\n}\nfunction encodeSignature(signature) {\n    const encoded = {\n        signature: fromBase64url(signature.signature),\n    };\n    if (signature.header)\n        encoded.header = signature.header;\n    if (signature.protected)\n        encoded.protected = fromBase64url(signature.protected);\n    return encoded;\n}\nexport function encode(jws) {\n    const payload = fromBase64url(jws.payload);\n    try {\n        CID.decode(payload);\n    }\n    catch (e) {\n        throw new Error('Not a valid DagJWS');\n    }\n    return {\n        payload,\n        signatures: jws.signatures.map(encodeSignature),\n    };\n}\nfunction decodeSignature(encoded) {\n    const sign = {\n        signature: toBase64url(encoded.signature),\n    };\n    if (encoded.header)\n        sign.header = encoded.header;\n    if (encoded.protected)\n        sign.protected = toBase64url(encoded.protected);\n    return sign;\n}\nexport function decode(encoded) {\n    const decoded = {\n        payload: toBase64url(encoded.payload),\n        signatures: encoded.signatures.map(decodeSignature),\n    };\n    decoded.link = CID.decode(new Uint8Array(encoded.payload));\n    return decoded;\n}\n//# sourceMappingURL=signing.js.map","import { fromBase64url, toBase64url } from './utils.js';\nexport function fromSplit(split) {\n    const [protectedHeader, encrypted_key, iv, ciphertext, tag] = split;\n    const jwe = {\n        ciphertext,\n        iv,\n        protected: protectedHeader,\n        tag,\n    };\n    if (encrypted_key)\n        jwe.recipients = [{ encrypted_key }];\n    return jwe;\n}\nfunction encodeRecipient(recipient) {\n    const encRec = {};\n    if (recipient.encrypted_key)\n        encRec.encrypted_key = fromBase64url(recipient.encrypted_key);\n    if (recipient.header)\n        encRec.header = recipient.header;\n    return encRec;\n}\nexport function encode(jwe) {\n    const encJwe = {\n        ciphertext: fromBase64url(jwe.ciphertext),\n        protected: fromBase64url(jwe.protected),\n        iv: fromBase64url(jwe.iv),\n        tag: fromBase64url(jwe.tag),\n    };\n    if (jwe.aad)\n        encJwe.aad = fromBase64url(jwe.aad);\n    if (jwe.recipients)\n        encJwe.recipients = jwe.recipients.map(encodeRecipient);\n    if (jwe.unprotected)\n        encJwe.unprotected = jwe.unprotected;\n    return encJwe;\n}\nfunction decodeRecipient(encoded) {\n    const recipient = {};\n    if (encoded.encrypted_key)\n        recipient.encrypted_key = toBase64url(encoded.encrypted_key);\n    if (encoded.header)\n        recipient.header = encoded.header;\n    return recipient;\n}\nexport function decode(encoded) {\n    const jwe = {\n        ciphertext: toBase64url(encoded.ciphertext),\n        protected: toBase64url(encoded.protected),\n        iv: toBase64url(encoded.iv),\n        tag: toBase64url(encoded.tag),\n    };\n    if (encoded.aad)\n        jwe.aad = toBase64url(encoded.aad);\n    if (encoded.recipients)\n        jwe.recipients = encoded.recipients.map(decodeRecipient);\n    if (encoded.unprotected)\n        jwe.unprotected = encoded.unprotected;\n    return jwe;\n}\n//# sourceMappingURL=encryption.js.map","import * as signing from './signing.js';\nimport * as encryption from './encryption.js';\nimport * as cbor from '@ipld/dag-cbor';\nexport const name = 'dag-jose';\nexport const code = 133;\nfunction isDagJWS(jose) {\n    return ('payload' in jose &&\n        typeof jose.payload === 'string' &&\n        'signatures' in jose &&\n        Array.isArray(jose.signatures));\n}\nfunction isEncodedJWS(jose) {\n    return ('payload' in jose &&\n        jose.payload instanceof Uint8Array &&\n        'signatures' in jose &&\n        Array.isArray(jose.signatures));\n}\nfunction isEncodedJWE(jose) {\n    return ('ciphertext' in jose &&\n        jose.ciphertext instanceof Uint8Array &&\n        'iv' in jose &&\n        jose.iv instanceof Uint8Array &&\n        'protected' in jose &&\n        jose.protected instanceof Uint8Array &&\n        'tag' in jose &&\n        jose.tag instanceof Uint8Array);\n}\nfunction isDagJWE(jose) {\n    return ('ciphertext' in jose &&\n        typeof jose.ciphertext === 'string' &&\n        'iv' in jose &&\n        typeof jose.iv === 'string' &&\n        'protected' in jose &&\n        typeof jose.protected === 'string' &&\n        'tag' in jose &&\n        typeof jose.tag === 'string');\n}\nexport function toGeneral(jose) {\n    if (typeof jose === 'string') {\n        const split = jose.split('.');\n        if (split.length === 3) {\n            return signing.fromSplit(split);\n        }\n        else if (split.length === 5) {\n            return encryption.fromSplit(split);\n        }\n        throw new Error('Not a valid JOSE string');\n    }\n    if (isDagJWS(jose) || isDagJWE(jose)) {\n        return jose;\n    }\n    throw new Error('Not a valid unencoded JOSE object');\n}\nexport function encode(obj) {\n    if (typeof obj === 'string') {\n        obj = toGeneral(obj);\n    }\n    let encodedJose;\n    if (isDagJWS(obj)) {\n        encodedJose = signing.encode(obj);\n    }\n    else if (isDagJWE(obj)) {\n        encodedJose = encryption.encode(obj);\n    }\n    else {\n        throw new Error('Not a valid JOSE object');\n    }\n    return new Uint8Array(cbor.encode(encodedJose));\n}\nexport function decode(data) {\n    let encoded;\n    try {\n        encoded = cbor.decode(data);\n    }\n    catch (e) {\n        throw new Error('Not a valid DAG-JOSE object');\n    }\n    if (isEncodedJWS(encoded)) {\n        return signing.decode(encoded);\n    }\n    else if (isEncodedJWE(encoded)) {\n        return encryption.decode(encoded);\n    }\n    else {\n        throw new Error('Not a valid DAG-JOSE object');\n    }\n}\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction drain(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n        })();\n    }\n    else {\n        for (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n    }\n}\nexport default drain;\n//# sourceMappingURL=index.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for await (const entry of peekable) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction all(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            const arr = [];\n            for await (const entry of source) {\n                arr.push(entry);\n            }\n            return arr;\n        })();\n    }\n    const arr = [];\n    for (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\nexport default all;\n//# sourceMappingURL=index.js.map","import all from 'it-all';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction sort(source, sorter) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            const arr = await all(source);\n            yield* arr.sort(sorter);\n        })();\n    }\n    return (function* () {\n        const arr = all(source);\n        yield* arr.sort(sorter);\n    })();\n}\nexport default sort;\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction take(source, limit) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            let items = 0;\n            if (limit < 1) {\n                return;\n            }\n            for await (const entry of source) {\n                yield entry;\n                items++;\n                if (items === limit) {\n                    return;\n                }\n            }\n        })();\n    }\n    return (function* () {\n        let items = 0;\n        if (limit < 1) {\n            return;\n        }\n        for (const entry of source) {\n            yield entry;\n            items++;\n            if (items === limit) {\n                return;\n            }\n        }\n    })();\n}\nexport default take;\n//# sourceMappingURL=index.js.map","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport sort from 'it-sort';\nimport take from 'it-take';\nexport class BaseDatastore {\n    put(key, val, options) {\n        return Promise.reject(new Error('.put is not implemented'));\n    }\n    get(key, options) {\n        return Promise.reject(new Error('.get is not implemented'));\n    }\n    has(key, options) {\n        return Promise.reject(new Error('.has is not implemented'));\n    }\n    delete(key, options) {\n        return Promise.reject(new Error('.delete is not implemented'));\n    }\n    async *putMany(source, options = {}) {\n        for await (const { key, value } of source) {\n            await this.put(key, value, options);\n            yield key;\n        }\n    }\n    async *getMany(source, options = {}) {\n        for await (const key of source) {\n            yield {\n                key,\n                value: await this.get(key, options)\n            };\n        }\n    }\n    async *deleteMany(source, options = {}) {\n        for await (const key of source) {\n            await this.delete(key, options);\n            yield key;\n        }\n    }\n    batch() {\n        let puts = [];\n        let dels = [];\n        return {\n            put(key, value) {\n                puts.push({ key, value });\n            },\n            delete(key) {\n                dels.push(key);\n            },\n            commit: async (options) => {\n                await drain(this.putMany(puts, options));\n                puts = [];\n                await drain(this.deleteMany(dels, options));\n                dels = [];\n            }\n        };\n    }\n    /**\n     * Extending classes should override `query` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_all(q, options) {\n        throw new Error('._all is not implemented');\n    }\n    /**\n     * Extending classes should override `queryKeys` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_allKeys(q, options) {\n        throw new Error('._allKeys is not implemented');\n    }\n    query(q, options) {\n        let it = this._all(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (e) => e.key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            let i = 0;\n            const offset = q.offset;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n    queryKeys(q, options) {\n        let it = this._allKeys(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (key) => key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            const offset = q.offset;\n            let i = 0;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n}\n//# sourceMappingURL=base.js.map","import errCode from 'err-code';\nexport function dbOpenFailedError(err) {\n    err = err ?? new Error('Cannot open database');\n    return errCode(err, 'ERR_DB_OPEN_FAILED');\n}\nexport function dbDeleteFailedError(err) {\n    err = err ?? new Error('Delete failed');\n    return errCode(err, 'ERR_DB_DELETE_FAILED');\n}\nexport function dbWriteFailedError(err) {\n    err = err ?? new Error('Write failed');\n    return errCode(err, 'ERR_DB_WRITE_FAILED');\n}\nexport function dbReadFailedError(err) {\n    err = err ?? new Error('Read failed');\n    return errCode(err, 'ERR_DB_READ_FAILED');\n}\nexport function notFoundError(err) {\n    err = err ?? new Error('Not Found');\n    return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n    err = err ?? new Error('Aborted');\n    return errCode(err, 'ERR_ABORTED');\n}\n//# sourceMappingURL=errors.js.map","import { Key } from 'interface-datastore/key';\nexport const PREFIX = '/repo/flatfs/shard/';\nexport const SHARDING_FN = 'SHARDING';\nexport class ShardBase {\n    param;\n    name;\n    _padding;\n    constructor(param) {\n        this.param = param;\n        this.name = 'base';\n        this._padding = '';\n    }\n    fun(s) {\n        return 'implement me';\n    }\n    toString() {\n        return `${PREFIX}v1/${this.name}/${this.param}`;\n    }\n}\nexport class Prefix extends ShardBase {\n    constructor(prefixLen) {\n        super(prefixLen);\n        this._padding = ''.padStart(prefixLen, '_');\n        this.name = 'prefix';\n    }\n    fun(noslash) {\n        return (noslash + this._padding).slice(0, this.param);\n    }\n}\nexport class Suffix extends ShardBase {\n    constructor(suffixLen) {\n        super(suffixLen);\n        this._padding = ''.padStart(suffixLen, '_');\n        this.name = 'suffix';\n    }\n    fun(noslash) {\n        const s = this._padding + noslash;\n        return s.slice(s.length - this.param);\n    }\n}\nexport class NextToLast extends ShardBase {\n    constructor(suffixLen) {\n        super(suffixLen);\n        this._padding = ''.padStart(suffixLen + 1, '_');\n        this.name = 'next-to-last';\n    }\n    fun(noslash) {\n        const s = this._padding + noslash;\n        const offset = s.length - this.param - 1;\n        return s.slice(offset, offset + this.param);\n    }\n}\n/**\n * Convert a given string to the matching sharding function\n */\nexport function parseShardFun(str) {\n    str = str.trim();\n    if (str.length === 0) {\n        throw new Error('empty shard string');\n    }\n    if (!str.startsWith(PREFIX)) {\n        throw new Error(`invalid or no path prefix: ${str}`);\n    }\n    const parts = str.slice(PREFIX.length).split('/');\n    const version = parts[0];\n    if (version !== 'v1') {\n        throw new Error(`expect 'v1' version, got '${version}'`);\n    }\n    const name = parts[1];\n    if (parts[2] == null || parts[2] === '') {\n        throw new Error('missing param');\n    }\n    const param = parseInt(parts[2], 10);\n    switch (name) {\n        case 'prefix':\n            return new Prefix(param);\n        case 'suffix':\n            return new Suffix(param);\n        case 'next-to-last':\n            return new NextToLast(param);\n        default:\n            throw new Error(`unkown sharding function: ${name}`);\n    }\n}\nexport const readShardFun = async (path, store) => {\n    const key = new Key(path).child(new Key(SHARDING_FN));\n    // @ts-expect-error not all stores have this\n    const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store);\n    const res = await get(key);\n    return parseShardFun(new TextDecoder().decode(res ?? '').trim());\n};\n//# sourceMappingURL=shard.js.map","import { Key } from 'interface-datastore';\nimport { BaseDatastore } from './base.js';\nimport * as Errors from './errors.js';\nimport { KeyTransformDatastore } from './keytransform.js';\nimport { readShardFun, SHARDING_FN } from './shard.js';\nconst shardKey = new Key(SHARDING_FN);\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n    child;\n    shard;\n    constructor(store, shard) {\n        super();\n        this.child = new KeyTransformDatastore(store, {\n            convert: this._convertKey.bind(this),\n            invert: this._invertKey.bind(this)\n        });\n        this.shard = shard;\n    }\n    async open() {\n        this.shard = await ShardingDatastore.create(this.child, this.shard);\n    }\n    _convertKey(key) {\n        const s = key.toString();\n        if (s === shardKey.toString()) {\n            return key;\n        }\n        const parent = new Key(this.shard.fun(s));\n        return parent.child(key);\n    }\n    _invertKey(key) {\n        const s = key.toString();\n        if (s === shardKey.toString()) {\n            return key;\n        }\n        return Key.withNamespaces(key.list().slice(1));\n    }\n    static async create(store, shard) {\n        const hasShard = await store.has(shardKey);\n        if (!hasShard) {\n            if (shard == null) {\n                throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'));\n            }\n            await store.put(shardKey, new TextEncoder().encode(shard.toString() + '\\n'));\n        }\n        if (shard == null) {\n            shard = await readShardFun('/', store);\n        }\n        // test shards\n        const diskShard = await readShardFun('/', store);\n        const a = diskShard.toString();\n        const b = shard.toString();\n        if (a !== b) {\n            throw new Error(`specified fun ${b} does not match repo shard fun ${a}`);\n        }\n        return diskShard;\n    }\n    async put(key, val, options) {\n        await this.child.put(key, val, options);\n        return key;\n    }\n    async get(key, options) {\n        return this.child.get(key, options);\n    }\n    async has(key, options) {\n        return this.child.has(key, options);\n    }\n    async delete(key, options) {\n        await this.child.delete(key, options);\n    }\n    async *putMany(source, options = {}) {\n        yield* this.child.putMany(source, options);\n    }\n    async *getMany(source, options = {}) {\n        yield* this.child.getMany(source, options);\n    }\n    async *deleteMany(source, options = {}) {\n        yield* this.child.deleteMany(source, options);\n    }\n    batch() {\n        return this.child.batch();\n    }\n    query(q, options) {\n        const omitShard = ({ key }) => key.toString() !== shardKey.toString();\n        const tq = {\n            ...q,\n            filters: [\n                omitShard\n            ].concat(q.filters ?? [])\n        };\n        return this.child.query(tq, options);\n    }\n    queryKeys(q, options) {\n        const omitShard = (key) => key.toString() !== shardKey.toString();\n        const tq = {\n            ...q,\n            filters: [\n                omitShard\n            ].concat(q.filters ?? [])\n        };\n        return this.child.queryKeys(tq, options);\n    }\n}\n//# sourceMappingURL=sharding.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","import { logger } from '@libp2p/logger';\nimport drain from 'it-drain';\nimport { pushable } from 'it-pushable';\nimport { BaseDatastore } from './base.js';\nimport * as Errors from './errors.js';\nconst log = logger('datastore:core:tiered');\n/**\n * A datastore that can combine multiple stores. Puts and deletes\n * will write through to all datastores. Has and get will\n * try each store sequentially. Query will always try the\n * last one first.\n *\n */\nexport class TieredDatastore extends BaseDatastore {\n    stores;\n    constructor(stores) {\n        super();\n        this.stores = stores.slice();\n    }\n    async put(key, value, options) {\n        try {\n            await Promise.all(this.stores.map(async (store) => { await store.put(key, value, options); }));\n            return key;\n        }\n        catch (err) {\n            throw Errors.dbWriteFailedError(err);\n        }\n    }\n    async get(key, options) {\n        for (const store of this.stores) {\n            try {\n                const res = await store.get(key, options);\n                if (res != null)\n                    return res;\n            }\n            catch (err) {\n                log.error(err);\n            }\n        }\n        throw Errors.notFoundError();\n    }\n    async has(key, options) {\n        for (const s of this.stores) {\n            if (await s.has(key, options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async delete(key, options) {\n        try {\n            await Promise.all(this.stores.map(async (store) => { await store.delete(key, options); }));\n        }\n        catch (err) {\n            throw Errors.dbDeleteFailedError(err);\n        }\n    }\n    async *putMany(source, options = {}) {\n        let error;\n        const pushables = this.stores.map(store => {\n            const source = pushable({\n                objectMode: true\n            });\n            drain(store.putMany(source, options))\n                .catch(err => {\n                // store threw while putting, make sure we bubble the error up\n                error = err;\n            });\n            return source;\n        });\n        try {\n            for await (const pair of source) {\n                if (error != null) {\n                    throw error;\n                }\n                pushables.forEach(p => p.push(pair));\n                yield pair.key;\n            }\n        }\n        finally {\n            pushables.forEach(p => p.end());\n        }\n    }\n    async *deleteMany(source, options = {}) {\n        let error;\n        const pushables = this.stores.map(store => {\n            const source = pushable({\n                objectMode: true\n            });\n            drain(store.deleteMany(source, options))\n                .catch(err => {\n                // store threw while deleting, make sure we bubble the error up\n                error = err;\n            });\n            return source;\n        });\n        try {\n            for await (const key of source) {\n                if (error != null) {\n                    throw error;\n                }\n                pushables.forEach(p => p.push(key));\n                yield key;\n            }\n        }\n        finally {\n            pushables.forEach(p => p.end());\n        }\n    }\n    batch() {\n        const batches = this.stores.map(store => store.batch());\n        return {\n            put: (key, value) => {\n                batches.forEach(b => { b.put(key, value); });\n            },\n            delete: (key) => {\n                batches.forEach(b => { b.delete(key); });\n            },\n            commit: async (options) => {\n                for (const batch of batches) {\n                    await batch.commit(options);\n                }\n            }\n        };\n    }\n    query(q, options) {\n        return this.stores[this.stores.length - 1].query(q, options);\n    }\n    queryKeys(q, options) {\n        return this.stores[this.stores.length - 1].queryKeys(q, options);\n    }\n}\n//# sourceMappingURL=tiered.js.map","import { Key } from 'interface-datastore/key';\nimport { BaseDatastore } from './base.js';\nimport * as Errors from './errors.js';\nexport class MemoryDatastore extends BaseDatastore {\n    data;\n    constructor() {\n        super();\n        this.data = new Map();\n    }\n    put(key, val) {\n        this.data.set(key.toString(), val);\n        return key;\n    }\n    get(key) {\n        const result = this.data.get(key.toString());\n        if (result == null) {\n            throw Errors.notFoundError();\n        }\n        return result;\n    }\n    has(key) {\n        return this.data.has(key.toString());\n    }\n    delete(key) {\n        this.data.delete(key.toString());\n    }\n    *_all() {\n        for (const [key, value] of this.data.entries()) {\n            yield { key: new Key(key), value };\n        }\n    }\n    *_allKeys() {\n        for (const key of this.data.keys()) {\n            yield new Key(key);\n        }\n    }\n}\n//# sourceMappingURL=memory.js.map","import { nanoid } from 'nanoid';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    _buf;\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n     * ```\n     */\n    static random() {\n        return new Key(nanoid().replace(/-/g, ''));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","import { nanoid } from 'nanoid';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n     * ```\n     */\n    static random() {\n        return new Key(nanoid().replace(/-/g, ''));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     *\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for await (const entry of peekable) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction all(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            const arr = [];\n            for await (const entry of source) {\n                arr.push(entry);\n            }\n            return arr;\n        })();\n    }\n    const arr = [];\n    for (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\nexport default all;\n//# sourceMappingURL=index.js.map","import all from 'it-all';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction sort(source, sorter) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            const arr = await all(source);\n            yield* arr.sort(sorter);\n        })();\n    }\n    return (function* () {\n        const arr = all(source);\n        yield* arr.sort(sorter);\n    })();\n}\nexport default sort;\n//# sourceMappingURL=index.js.map","import { Errors, BaseDatastore } from 'datastore-core';\nimport { openDB, deleteDB } from 'idb';\nimport { Key } from 'interface-datastore';\nimport filter from 'it-filter';\nimport sort from 'it-sort';\nexport class IDBDatastore extends BaseDatastore {\n    location;\n    version;\n    db;\n    constructor(location, init = {}) {\n        super();\n        this.location = `${init.prefix ?? ''}${location}`;\n        this.version = init.version ?? 1;\n    }\n    async open() {\n        try {\n            const location = this.location;\n            this.db = await openDB(location, this.version, {\n                upgrade(db) {\n                    db.createObjectStore(location);\n                }\n            });\n        }\n        catch (err) {\n            throw Errors.dbOpenFailedError(err);\n        }\n    }\n    async close() {\n        this.db?.close();\n    }\n    async put(key, val) {\n        if (this.db == null) {\n            throw new Error('Datastore needs to be opened.');\n        }\n        try {\n            await this.db.put(this.location, val, key.toString());\n            return key;\n        }\n        catch (err) {\n            throw Errors.dbWriteFailedError(err);\n        }\n    }\n    async get(key) {\n        if (this.db == null) {\n            throw new Error('Datastore needs to be opened.');\n        }\n        let val;\n        try {\n            val = await this.db.get(this.location, key.toString());\n        }\n        catch (err) {\n            throw Errors.dbReadFailedError(err);\n        }\n        if (val === undefined) {\n            throw Errors.notFoundError();\n        }\n        return val;\n    }\n    async has(key) {\n        if (this.db == null) {\n            throw new Error('Blockstore needs to be opened.');\n        }\n        try {\n            return Boolean(await this.db.getKey(this.location, key.toString()));\n        }\n        catch (err) {\n            throw Errors.dbReadFailedError(err);\n        }\n    }\n    async delete(key) {\n        if (this.db == null) {\n            throw new Error('Datastore needs to be opened.');\n        }\n        try {\n            await this.db.delete(this.location, key.toString());\n        }\n        catch (err) {\n            throw Errors.dbWriteFailedError(err);\n        }\n    }\n    batch() {\n        const puts = [];\n        const dels = [];\n        return {\n            put(key, value) {\n                puts.push({ key, value });\n            },\n            delete(key) {\n                dels.push(key);\n            },\n            commit: async () => {\n                if (this.db == null) {\n                    throw new Error('Datastore needs to be opened.');\n                }\n                const tx = this.db.transaction(this.location, 'readwrite');\n                try {\n                    const ops = puts.filter(({ key }) => {\n                        // don't put a key we are about to delete\n                        return dels.find(delKey => delKey.toString() === key.toString()) == null;\n                    })\n                        .map(put => {\n                        return async () => {\n                            await tx.store.put(put.value, put.key.toString());\n                        };\n                    })\n                        .concat(dels.map(key => {\n                        return async () => {\n                            await tx.store.delete(key.toString());\n                        };\n                    }))\n                        .concat(async () => {\n                        await tx.done;\n                    });\n                    await Promise.all(ops.map(async (op) => { await op(); }));\n                }\n                catch {\n                    tx.abort();\n                }\n            }\n        };\n    }\n    async *query(q) {\n        let it = this.#queryIt(q, (key, value) => {\n            return { key, value };\n        });\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        yield* it;\n    }\n    async *queryKeys(q) {\n        let it = this.#queryIt(q, (key) => key);\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        yield* it;\n    }\n    async *#queryIt(q, transform) {\n        if (this.db == null) {\n            throw new Error('Datastore needs to be opened.');\n        }\n        let yielded = 0;\n        let index = -1;\n        for (const key of await this.db.getAllKeys(this.location)) {\n            if (q.prefix != null && !key.toString().startsWith(q.prefix)) { // eslint-disable-line @typescript-eslint/no-base-to-string\n                continue;\n            }\n            if (q.limit != null && yielded === q.limit) {\n                return;\n            }\n            index++;\n            if (q.offset != null && index < q.offset) {\n                continue;\n            }\n            const k = new Key(key.toString()); // eslint-disable-line @typescript-eslint/no-base-to-string\n            let value;\n            try {\n                value = await this.get(k);\n            }\n            catch (err) {\n                if (err.code !== 'ERR_NOT_FOUND') {\n                    throw err;\n                }\n                continue;\n            }\n            if (value == null) {\n                continue;\n            }\n            yield transform(k, value);\n            yielded++;\n        }\n    }\n    async destroy() {\n        await deleteDB(this.location);\n    }\n}\n//# sourceMappingURL=index.js.map","import errCode from 'err-code'\n\n/**\n * @param {Error} [err]\n */\nexport function dbOpenFailedError (err) {\n  err = err || new Error('Cannot open database')\n  return errCode(err, 'ERR_DB_OPEN_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbDeleteFailedError (err) {\n  err = err || new Error('Delete failed')\n  return errCode(err, 'ERR_DB_DELETE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbWriteFailedError (err) {\n  err = err || new Error('Write failed')\n  return errCode(err, 'ERR_DB_WRITE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function abortedError (err) {\n  err = err || new Error('Aborted')\n  return errCode(err, 'ERR_ABORTED')\n}\n","import { Key } from 'interface-datastore/key'\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/'\nexport const SHARDING_FN = 'SHARDING'\nexport const README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nexport { default as readme } from './shard-readme.js'\n","\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nexport const sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nexport const replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","import { sortAll } from './utils.js'\nimport drain from 'it-drain'\nimport filter from 'it-filter'\nimport take from 'it-take'\n\n/**\n * @typedef {import('interface-store').Options} Options\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\nexport class BaseDatastore {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {Key[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (e) =>\n        e.key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (key) =>\n        key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n","import { Key } from 'interface-datastore'\nimport {\n  readShardFun,\n  SHARDING_FN,\n  README_FN,\n  readme\n} from './shard.js'\nimport { BaseDatastore } from './base.js'\nimport { KeyTransformDatastore } from './keytransform.js'\nimport * as Errors from './errors.js'\n\nconst shardKey = new Key(SHARDING_FN)\nconst shardReadmeKey = new Key(README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeyTransformDatastore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (/** @type {any} */ err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    /** @type {Query} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    /** @type {KeyQuery} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n","import { BaseDatastore } from './base.js'\nimport * as Errors from './errors.js'\nimport { logger } from '@libp2p/logger'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\n\nconst log = logger('datastore:core:tiered')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * A datastore that can combine multiple stores. Puts and deletes\n * will write through to all datastores. Has and get will\n * try each store sequentially. Query will always try the\n * last one first.\n *\n */\nexport class TieredDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore[]} stores\n   */\n  constructor (stores) {\n    super()\n\n    this.stores = stores.slice()\n  }\n\n  async open () {\n    try {\n      await Promise.all(this.stores.map((store) => store.open()))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.put(key, value, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async get (key, options) {\n    for (const store of this.stores) {\n      try {\n        const res = await store.get(key, options)\n        if (res) return res\n      } catch (err) {\n        log.error(err)\n      }\n    }\n    throw Errors.notFoundError()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async has (key, options) {\n    for (const s of this.stores) {\n      if (await s.has(key, options)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async delete (key, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.delete(key, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.putMany(source, options))\n        .catch(err => {\n          // store threw while putting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const pair of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(pair))\n\n        yield pair\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.deleteMany(source, options))\n        .catch(err => {\n          // store threw while deleting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const key of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(key))\n\n        yield key\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  async close () {\n    await Promise.all(this.stores.map(store => store.close()))\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    const batches = this.stores.map(store => store.batch())\n\n    return {\n      put: (key, value) => {\n        batches.forEach(b => b.put(key, value))\n      },\n      delete: (key) => {\n        batches.forEach(b => b.delete(key))\n      },\n      commit: async (options) => {\n        for (const batch of batches) {\n          await batch.commit(options)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    return this.stores[this.stores.length - 1].query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    return this.stores[this.stores.length - 1].queryKeys(q, options)\n  }\n}\n","import { Key } from 'interface-datastore'\nimport { BaseDatastore, Errors } from 'datastore-core'\nimport filter from 'it-filter'\nimport map from 'it-map'\nimport take from 'it-take'\nimport sort from 'it-sort'\nimport { Level } from 'level'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} QueryOptions\n * @typedef {import('abstract-level').AbstractLevel<any, string, Uint8Array>} LevelDb\n */\n\n/**\n * A datastore backed by leveldb\n */\nexport class LevelDatastore extends BaseDatastore {\n  /**\n   * @param {string | LevelDb} path\n   * @param {import('level').DatabaseOptions<string, Uint8Array> & import('level').OpenOptions} [opts]\n   */\n  constructor (path, opts = {}) {\n    super()\n\n    /** @type {LevelDb} */\n    this.db = typeof path === 'string'\n      ? new Level(path, {\n        ...opts,\n        keyEncoding: 'utf8',\n        valueEncoding: 'view'\n      })\n      : path\n\n    /** @type {import('level').OpenOptions} */\n    this.opts = {\n      createIfMissing: true,\n      compression: false, // same default as go\n      ...opts\n    }\n  }\n\n  async open () {\n    try {\n      await this.db.open(this.opts)\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   */\n  async put (key, value) {\n    try {\n      await this.db.put(key.toString(), value)\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<Uint8Array>}\n   */\n  async get (key) {\n    let data\n    try {\n      data = await this.db.get(key.toString())\n    } catch (/** @type {any} */ err) {\n      if (err.notFound) throw Errors.notFoundError(err)\n      throw Errors.dbWriteFailedError(err)\n    }\n    return data\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    try {\n      await this.db.get(key.toString())\n    } catch (/** @type {any} */ err) {\n      if (err.notFound) return false\n      throw err\n    }\n    return true\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<void>}\n   */\n  async delete (key) {\n    try {\n      await this.db.del(key.toString())\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  close () {\n    return this.db && this.db.close()\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Array<{ type: 'put', key: string, value: Uint8Array; } | { type: 'del', key: string }>} */\n    const ops = []\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        })\n      },\n      delete: (key) => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        })\n      },\n      commit: () => {\n        return this.db.batch(ops)\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   */\n  query (q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    })\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   */\n  queryKeys (q) {\n    let it = map(this._query({\n      values: false,\n      prefix: q.prefix\n    }), ({ key }) => key)\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {object} opts\n   * @param {boolean} opts.values\n   * @param {string} [opts.prefix]\n   * @returns {AsyncIterable<Pair>}\n   */\n  _query (opts) {\n    /** @type {import('level').IteratorOptions<string, Uint8Array>} */\n    const iteratorOpts = {\n      keys: true,\n      keyEncoding: 'buffer',\n      values: opts.values\n    }\n\n    // Let the db do the prefix matching\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString()\n      // Match keys greater than or equal to `prefix` and\n      iteratorOpts.gte = prefix\n      // less than `prefix` + \\xFF (hex escape sequence)\n      iteratorOpts.lt = prefix + '\\xFF'\n    }\n\n    const iterator = this.db.iterator(iteratorOpts)\n\n    if (iterator[Symbol.asyncIterator]) {\n      return levelIteratorToIterator(iterator)\n    }\n\n    // @ts-expect-error support older level\n    if (iterator.next != null && iterator.end != null) {\n      // @ts-expect-error support older level\n      return oldLevelIteratorToIterator(iterator)\n    }\n\n    throw new Error('Level returned incompatible iterator')\n  }\n}\n\n/**\n * @param {import('level').Iterator<LevelDb, string, Uint8Array>} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\nasync function * levelIteratorToIterator (li) {\n  for await (const [key, value] of li) {\n    yield { key: new Key(key, false), value }\n  }\n\n  await li.close()\n}\n\n/**\n * @typedef {object} LevelIterator\n * @property {(cb: (err: Error, key: string | Uint8Array | null, value: any)=> void)=>void} next\n * @property {(cb: (err: Error) => void) => void } end\n */\n\n/**\n * @param {LevelIterator} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\nfunction oldLevelIteratorToIterator (li) {\n  return {\n    [Symbol.asyncIterator] () {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err) return reject(err)\n            if (key == null) {\n              return li.end(err => {\n                if (err) return reject(err)\n                resolve({ done: true, value: undefined })\n              })\n            }\n            resolve({ done: false, value: { key: new Key(key, false), value } })\n          })\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err) return reject(err)\n            resolve({ done: true, value: undefined })\n          })\n        })\n      }\n    }\n  }\n}\n","import { Key } from 'interface-datastore/key'\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/'\nexport const SHARDING_FN = 'SHARDING'\nexport const README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nexport { default as readme } from './shard-readme.js'\n","\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nexport const sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nexport const replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","import { sortAll } from './utils.js'\nimport drain from 'it-drain'\nimport filter from 'it-filter'\nimport take from 'it-take'\n\n/**\n * @typedef {import('interface-store').Options} Options\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\nexport class BaseDatastore {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {Key[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (e) =>\n        e.key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (key) =>\n        key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n","import { Key } from 'interface-datastore'\nimport {\n  readShardFun,\n  SHARDING_FN,\n  README_FN,\n  readme\n} from './shard.js'\nimport { BaseDatastore } from './base.js'\nimport { KeyTransformDatastore } from './keytransform.js'\nimport * as Errors from './errors.js'\n\nconst shardKey = new Key(SHARDING_FN)\nconst shardReadmeKey = new Key(README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeyTransformDatastore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (/** @type {any} */ err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    /** @type {Query} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    /** @type {KeyQuery} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n","import { BaseDatastore } from './base.js'\nimport * as Errors from './errors.js'\nimport { logger } from '@libp2p/logger'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\n\nconst log = logger('datastore:core:tiered')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * A datastore that can combine multiple stores. Puts and deletes\n * will write through to all datastores. Has and get will\n * try each store sequentially. Query will always try the\n * last one first.\n *\n */\nexport class TieredDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore[]} stores\n   */\n  constructor (stores) {\n    super()\n\n    this.stores = stores.slice()\n  }\n\n  async open () {\n    try {\n      await Promise.all(this.stores.map((store) => store.open()))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.put(key, value, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async get (key, options) {\n    for (const store of this.stores) {\n      try {\n        const res = await store.get(key, options)\n        if (res) return res\n      } catch (err) {\n        log.error(err)\n      }\n    }\n    throw Errors.notFoundError()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async has (key, options) {\n    for (const s of this.stores) {\n      if (await s.has(key, options)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async delete (key, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.delete(key, options)))\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.putMany(source, options))\n        .catch(err => {\n          // store threw while putting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const pair of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(pair))\n\n        yield pair\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.deleteMany(source, options))\n        .catch(err => {\n          // store threw while deleting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const key of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(key))\n\n        yield key\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  async close () {\n    await Promise.all(this.stores.map(store => store.close()))\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    const batches = this.stores.map(store => store.batch())\n\n    return {\n      put: (key, value) => {\n        batches.forEach(b => b.put(key, value))\n      },\n      delete: (key) => {\n        batches.forEach(b => b.delete(key))\n      },\n      commit: async (options) => {\n        for (const batch of batches) {\n          await batch.commit(options)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    return this.stores[this.stores.length - 1].query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    return this.stores[this.stores.length - 1].queryKeys(q, options)\n  }\n}\n","import { CodeError } from '@libp2p/interfaces/errors'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('interface-datastore').Key} Key\n */\n\nconst namespace = '/record/'\n\n/**\n * @param {Uint8Array} buf\n */\nexport function encodeBase32 (buf) {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n/**\n * converts a binary record key to a pubsub topic key\n *\n * @param {Uint8Array | string} key\n */\nexport function keyToTopic (key) {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString())\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n/**\n * converts a pubsub topic key to a binary record key\n *\n * @param {string} topic\n */\nexport function topicToKey (topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw new CodeError('topic received is not from a record', 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n","import { Key } from 'interface-datastore'\nimport { BaseDatastore } from 'datastore-core'\nimport { encodeBase32, keyToTopic, topicToKey } from './utils.js'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { CodeError } from '@libp2p/interfaces/errors'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('datastore-pubsub:publisher')\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./types').SubscriptionKeyFn} SubscriptionKeyFn\n * @typedef {import('@libp2p/interface-pubsub').Message} PubSubMessage\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// DatastorePubsub is responsible for providing an api for pubsub to be used as a datastore with\n// [TieredDatastore]{@link https://github.com/ipfs/js-datastore-core/blob/master/src/tiered.js}\nexport class PubSubDatastore extends BaseDatastore {\n  /**\n   * Creates an instance of DatastorePubsub.\n   *\n   * @param {import('@libp2p/interface-pubsub').PubSub} pubsub - pubsub implementation\n   * @param {import('interface-datastore').Datastore} datastore - datastore instance\n   * @param {PeerId} peerId - peer-id instance\n   * @param {import('@libp2p/interface-dht').ValidateFn} validator - validator function\n   * @param {import('@libp2p/interface-dht').SelectFn} selector - selector function\n   * @param {SubscriptionKeyFn} [subscriptionKeyFn] - function to manipulate the key topic received before processing it\n   * @memberof DatastorePubsub\n   */\n  constructor (pubsub, datastore, peerId, validator, selector, subscriptionKeyFn) {\n    super()\n\n    if (!validator) {\n      throw new CodeError('missing validator', 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (typeof validator !== 'function') {\n      throw new CodeError('missing validate function', 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (typeof selector !== 'function') {\n      throw new CodeError('missing select function', 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (subscriptionKeyFn && typeof subscriptionKeyFn !== 'function') {\n      throw new CodeError('invalid subscriptionKeyFn received', 'ERR_INVALID_PARAMETERS')\n    }\n\n    this._pubsub = pubsub\n    this._datastore = datastore\n    this._peerId = peerId\n    this._validator = validator\n    this._selector = selector\n    this._handleSubscriptionKeyFn = subscriptionKeyFn\n\n    // Bind _onMessage function, which is called by pubsub.\n    this._onMessage = this._onMessage.bind(this)\n    this._pubsub.addEventListener('message', this._onMessage)\n  }\n\n  /**\n   * Publishes a value through pubsub.\n   *\n   * @param {Uint8Array} key - identifier of the value to be published.\n   * @param {Uint8Array} val - value to be propagated.\n   * @param {AbortOptions} [options]\n   */\n  // @ts-ignore Datastores take keys as Keys, this one takes Uint8Arrays\n  async put (key, val, options) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format'\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_INVALID_DATASTORE_KEY')\n    }\n\n    if (!(val instanceof Uint8Array)) {\n      const errMsg = 'received value is not a Uint8Array'\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_INVALID_VALUE_RECEIVED')\n    }\n\n    const stringifiedTopic = keyToTopic(key)\n\n    log(`publish value for topic ${stringifiedTopic}`)\n\n    // Publish record to pubsub\n    await this._pubsub.publish(stringifiedTopic, val)\n  }\n\n  /**\n   * Try to subscribe a topic with Pubsub and returns the local value if available.\n   *\n   * @param {Uint8Array} key - identifier of the value to be subscribed.\n   * @param {AbortOptions} [options]\n   */\n  // @ts-ignore Datastores take keys as Keys, this one takes Uint8Arrays\n  async get (key, options) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format'\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_INVALID_DATASTORE_KEY')\n    }\n\n    const stringifiedTopic = keyToTopic(key)\n    const subscriptions = await this._pubsub.getTopics()\n\n    // If already subscribed, just try to get it\n    if (subscriptions && Array.isArray(subscriptions) && subscriptions.indexOf(stringifiedTopic) > -1) {\n      return this._getLocal(key, options)\n    }\n\n    // subscribe\n    try {\n      await this._pubsub.subscribe(stringifiedTopic)\n    } catch (/** @type {any} */ err) {\n      const errMsg = `cannot subscribe topic ${stringifiedTopic}`\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_SUBSCRIBING_TOPIC')\n    }\n    log(`subscribed values for key ${stringifiedTopic}`)\n\n    return this._getLocal(key)\n  }\n\n  /**\n   * Unsubscribe topic.\n   *\n   * @param {Uint8Array} key - identifier of the value to unsubscribe.\n   * @returns {void}\n   */\n  unsubscribe (key) {\n    const stringifiedTopic = keyToTopic(key)\n\n    return this._pubsub.unsubscribe(stringifiedTopic)\n  }\n\n  /**\n   * Get record from local datastore\n   *\n   * @private\n   * @param {Uint8Array} key\n   * @param {AbortOptions} [options]\n   */\n  async _getLocal (key, options) {\n    // encode key - base32(/ipns/{cid})\n    const routingKey = new Key('/' + encodeBase32(key), false)\n    let dsVal\n\n    try {\n      dsVal = await this._datastore.get(routingKey, options)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        const errMsg = `unexpected error getting the ipns record for ${routingKey.toString()}`\n\n        log.error(errMsg)\n        throw new CodeError(errMsg, 'ERR_UNEXPECTED_ERROR_GETTING_RECORD')\n      }\n      const errMsg = `local record requested was not found for ${routingKey.toString()}`\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_NOT_FOUND')\n    }\n\n    if (!(dsVal instanceof Uint8Array)) {\n      const errMsg = 'found record that we couldn\\'t convert to a value'\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_INVALID_RECORD_RECEIVED')\n    }\n\n    return dsVal\n  }\n\n  /**\n   * handles pubsub subscription messages\n   *\n   * @param {CustomEvent<PubSubMessage>} evt\n   */\n  async _onMessage (evt) {\n    const msg = evt.detail\n\n    if (msg.type !== 'signed') {\n      log.error('unsigned message received, this module can only work with signed messages')\n      return\n    }\n\n    const { data, from, topic } = msg\n    let key\n    try {\n      key = topicToKey(topic)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      return\n    }\n\n    log(`message received for topic ${topic}`)\n\n    // Stop if the message is from the peer (it already stored it while publishing to pubsub)\n    if (this._peerId.equals(from)) {\n      log('message discarded as it is from the same peer')\n      return\n    }\n\n    if (this._handleSubscriptionKeyFn) {\n      let res\n\n      try {\n        res = await this._handleSubscriptionKeyFn(key)\n      } catch (/** @type {any} */ err) {\n        log.error('message discarded by the subscriptionKeyFn')\n        return\n      }\n\n      key = res\n    }\n\n    try {\n      await this._storeIfSubscriptionIsBetter(key, data)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Store the received record if it is better than the current stored\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} data\n   * @param {AbortOptions} [options]\n   */\n  async _storeIfSubscriptionIsBetter (key, data, options) {\n    let isBetter = false\n\n    try {\n      isBetter = await this._isBetter(key, data)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_VALID_RECORD') {\n        throw err\n      }\n    }\n\n    if (isBetter) {\n      await this._storeRecord(key, data, options)\n    }\n  }\n\n  /**\n   * Validate record according to the received validation function\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} value\n   */\n  async _validateRecord (key, value) { // eslint-disable-line require-await\n    return this._validator(key, value)\n  }\n\n  /**\n   * Select the best record according to the received select function\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array[]} records\n   */\n  async _selectRecord (key, records) {\n    const res = await this._selector(key, records)\n\n    // If the selected was the first (0), it should be stored (true)\n    return res === 0\n  }\n\n  /**\n   * Verify if the record received through pubsub is valid and better than the one currently stored\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} val\n   */\n  async _isBetter (key, val) {\n    try {\n      await this._validateRecord(key, val)\n    } catch (/** @type {any} */ err) {\n      // If not valid, it is not better than the one currently available\n      const errMsg = 'record received through pubsub is not valid'\n\n      log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_NOT_VALID_RECORD')\n    }\n\n    // Get Local record\n    const dsKey = new Key(key)\n    let currentRecord\n\n    try {\n      currentRecord = await this._getLocal(dsKey.uint8Array())\n    } catch (/** @type {any} */ err) {\n      // if the old one is invalid, the new one is *always* better\n      return true\n    }\n\n    // if the same record, do not need to store\n    if (uint8ArrayEquals(currentRecord, val)) {\n      return false\n    }\n\n    // verify if the received record should replace the current one\n    return this._selectRecord(key, [currentRecord, val])\n  }\n\n  /**\n   * add record to datastore\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} data\n   * @param {AbortOptions} [options]\n   */\n  async _storeRecord (key, data, options) {\n    // encode key - base32(/ipns/{cid})\n    const routingKey = new Key('/' + encodeBase32(key), false)\n\n    await this._datastore.put(routingKey, data, options)\n    log(`record for ${keyToTopic(key)} was stored in the datastore`)\n  }\n}\n","const globalFetch = globalThis.fetch;\nconst globalHeaders = globalThis.Headers;\nconst globalRequest = globalThis.Request;\nconst globalResponse = globalThis.Response;\nexport {\n  globalFetch as fetch\n};\nexport {\n  globalHeaders as Headers\n};\nexport {\n  globalRequest as Request\n};\nexport {\n  globalResponse as Response\n};","import { fetch as nativeFetch, Headers } from 'native-fetch';\n/**\n * Build fetch resource for request\n */\nexport function buildResource(serverResolver, hostname, recordType) {\n    return `${serverResolver}?name=${hostname}&type=${recordType}`;\n}\n/**\n * Use fetch to find the record\n */\nexport async function request(resource, signal) {\n    const req = await nativeFetch(resource, {\n        headers: new Headers({\n            accept: 'application/dns-json'\n        }),\n        signal\n    });\n    const res = await req.json();\n    return res;\n}\n/**\n * Creates cache key composed by recordType and hostname\n *\n * @param {string} hostname\n * @param {string} recordType\n */\nexport function getCacheKey(hostname, recordType) {\n    return `${recordType}_${hostname}`;\n}\n//# sourceMappingURL=utils.js.map","import debug from 'debug';\nimport Receptacle from 'receptacle';\nimport * as utils from './utils.js';\nconst log = Object.assign(debug('dns-over-http-resolver'), {\n    error: debug('dns-over-http-resolver:error')\n});\n/**\n * DNS over HTTP resolver.\n * Uses a list of servers to resolve DNS records with HTTP requests.\n */\nclass Resolver {\n    /**\n     * @class\n     * @param {object} [options]\n     * @param {number} [options.maxCache = 100] - maximum number of cached dns records\n     * @param {Request} [options.request] - function to return DNSJSON\n     */\n    constructor(options = {}) {\n        this._cache = new Receptacle({ max: options?.maxCache ?? 100 });\n        this._TXTcache = new Receptacle({ max: options?.maxCache ?? 100 });\n        this._servers = [\n            'https://cloudflare-dns.com/dns-query',\n            'https://dns.google/resolve'\n        ];\n        this._request = options.request ?? utils.request;\n        this._abortControllers = [];\n    }\n    /**\n     * Cancel all outstanding DNS queries made by this resolver. Any outstanding\n     * requests will be aborted and promises rejected.\n     */\n    cancel() {\n        this._abortControllers.forEach(controller => controller.abort());\n    }\n    /**\n     * Get an array of the IP addresses currently configured for DNS resolution.\n     * These addresses are formatted according to RFC 5952. It can include a custom port.\n     */\n    getServers() {\n        return this._servers;\n    }\n    /**\n     * Get a shuffled array of the IP addresses currently configured for DNS resolution.\n     * These addresses are formatted according to RFC 5952. It can include a custom port.\n     */\n    _getShuffledServers() {\n        const newServers = [...this._servers];\n        for (let i = newServers.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i);\n            const temp = newServers[i];\n            newServers[i] = newServers[j];\n            newServers[j] = temp;\n        }\n        return newServers;\n    }\n    /**\n     * Sets the IP address and port of servers to be used when performing DNS resolution.\n     *\n     * @param {string[]} servers - array of RFC 5952 formatted addresses.\n     */\n    setServers(servers) {\n        this._servers = servers;\n    }\n    /**\n     * Uses the DNS protocol to resolve the given host name into the appropriate DNS record\n     *\n     * @param {string} hostname - host name to resolve\n     * @param {string} [rrType = 'A'] - resource record type\n     */\n    async resolve(hostname, rrType = 'A') {\n        switch (rrType) {\n            case 'A':\n                return await this.resolve4(hostname);\n            case 'AAAA':\n                return await this.resolve6(hostname);\n            case 'TXT':\n                return await this.resolveTxt(hostname);\n            default:\n                throw new Error(`${rrType} is not supported`);\n        }\n    }\n    /**\n     * Uses the DNS protocol to resolve the given host name into IPv4 addresses\n     *\n     * @param {string} hostname - host name to resolve\n     */\n    async resolve4(hostname) {\n        const recordType = 'A';\n        const cached = this._cache.get(utils.getCacheKey(hostname, recordType));\n        if (cached != null) {\n            return cached;\n        }\n        let aborted = false;\n        for (const server of this._getShuffledServers()) {\n            const controller = new AbortController();\n            this._abortControllers.push(controller);\n            try {\n                const response = await this._request(utils.buildResource(server, hostname, recordType), controller.signal);\n                const data = response.Answer.map(a => a.data);\n                const ttl = Math.min(...response.Answer.map(a => a.TTL));\n                this._cache.set(utils.getCacheKey(hostname, recordType), data, { ttl });\n                return data;\n            }\n            catch (err) {\n                if (controller.signal.aborted) {\n                    aborted = true;\n                }\n                log.error(`${server} could not resolve ${hostname} record ${recordType}`);\n            }\n            finally {\n                this._abortControllers = this._abortControllers.filter(c => c !== controller);\n            }\n        }\n        if (aborted) {\n            throw Object.assign(new Error('queryA ECANCELLED'), {\n                code: 'ECANCELLED'\n            });\n        }\n        throw new Error(`Could not resolve ${hostname} record ${recordType}`);\n    }\n    /**\n     * Uses the DNS protocol to resolve the given host name into IPv6 addresses\n     *\n     * @param {string} hostname - host name to resolve\n     */\n    async resolve6(hostname) {\n        const recordType = 'AAAA';\n        const cached = this._cache.get(utils.getCacheKey(hostname, recordType));\n        if (cached != null) {\n            return cached;\n        }\n        let aborted = false;\n        for (const server of this._getShuffledServers()) {\n            const controller = new AbortController();\n            this._abortControllers.push(controller);\n            try {\n                const response = await this._request(utils.buildResource(server, hostname, recordType), controller.signal);\n                const data = response.Answer.map(a => a.data);\n                const ttl = Math.min(...response.Answer.map(a => a.TTL));\n                this._cache.set(utils.getCacheKey(hostname, recordType), data, { ttl });\n                return data;\n            }\n            catch (err) {\n                if (controller.signal.aborted) {\n                    aborted = true;\n                }\n                log.error(`${server} could not resolve ${hostname} record ${recordType}`);\n            }\n            finally {\n                this._abortControllers = this._abortControllers.filter(c => c !== controller);\n            }\n        }\n        if (aborted) {\n            throw Object.assign(new Error('queryAaaa ECANCELLED'), {\n                code: 'ECANCELLED'\n            });\n        }\n        throw new Error(`Could not resolve ${hostname} record ${recordType}`);\n    }\n    /**\n     * Uses the DNS protocol to resolve the given host name into a Text record\n     *\n     * @param {string} hostname - host name to resolve\n     */\n    async resolveTxt(hostname) {\n        const recordType = 'TXT';\n        const cached = this._TXTcache.get(utils.getCacheKey(hostname, recordType));\n        if (cached != null) {\n            return cached;\n        }\n        let aborted = false;\n        for (const server of this._getShuffledServers()) {\n            const controller = new AbortController();\n            this._abortControllers.push(controller);\n            try {\n                const response = await this._request(utils.buildResource(server, hostname, recordType), controller.signal);\n                const data = response.Answer.map(a => [a.data.replace(/['\"]+/g, '')]);\n                const ttl = Math.min(...response.Answer.map(a => a.TTL));\n                this._TXTcache.set(utils.getCacheKey(hostname, recordType), data, { ttl });\n                return data;\n            }\n            catch (err) {\n                if (controller.signal.aborted) {\n                    aborted = true;\n                }\n                log.error(`${server} could not resolve ${hostname} record ${recordType}`);\n            }\n            finally {\n                this._abortControllers = this._abortControllers.filter(c => c !== controller);\n            }\n        }\n        if (aborted) {\n            throw Object.assign(new Error('queryTxt ECANCELLED'), {\n                code: 'ECANCELLED'\n            });\n        }\n        throw new Error(`Could not resolve ${hostname} record ${recordType}`);\n    }\n    clearCache() {\n        this._cache.clear();\n        this._TXTcache.clear();\n    }\n}\nexport default Resolver;\n//# sourceMappingURL=index.js.map","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","export function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Buffer} buffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(buffer, offset = 0) {\n\tconst readSum = Number.parseInt(buffer.toString('utf8', 148, 154).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += buffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += buffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n","import {Buffer} from 'node:buffer';\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core'; // eslint-disable-line n/file-extension-in-import\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nconst minimumBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream) {\n\tconst tokenizer = await strtok3.fromStream(stream);\n\ttry {\n\t\treturn await fileTypeFromTokenizer(tokenizer);\n\t} finally {\n\t\tawait tokenizer.close();\n\t}\n}\n\nexport async function fileTypeFromBuffer(input) {\n\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t}\n\n\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\tif (!(buffer?.length > 1)) {\n\t\treturn;\n\t}\n\n\treturn fileTypeFromTokenizer(strtok3.fromBuffer(buffer));\n}\n\nexport async function fileTypeFromBlob(blob) {\n\tconst buffer = await blob.arrayBuffer();\n\treturn fileTypeFromBuffer(new Uint8Array(buffer));\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer) {\n\ttry {\n\t\treturn new FileTypeParser().parse(tokenizer);\n\t} catch (error) {\n\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nclass FileTypeParser {\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\tasync parse(tokenizer) {\n\t\tthis.buffer = Buffer.alloc(minimumBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.parse(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn fileTypeFromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'webp',\n\t\t\t\tmime: 'image/webp',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\ttry {\n\t\t\t\twhile (tokenizer.position + 30 < tokenizer.fileInfo.size) {\n\t\t\t\t\tawait tokenizer.readBuffer(this.buffer, {length: 30});\n\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n\t\t\t\t\tconst zipHeader = {\n\t\t\t\t\t\tcompressedSize: this.buffer.readUInt32LE(18),\n\t\t\t\t\t\tuncompressedSize: this.buffer.readUInt32LE(22),\n\t\t\t\t\t\tfilenameLength: this.buffer.readUInt16LE(26),\n\t\t\t\t\t\textraFieldLength: this.buffer.readUInt16LE(28),\n\t\t\t\t\t};\n\n\t\t\t\t\tzipHeader.filename = await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n\t\t\t\t\tawait tokenizer.ignore(zipHeader.extraFieldLength);\n\n\t\t\t\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\t\t\t\tif (zipHeader.filename === 'META-INF/mozilla.rsa') {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml')) {\n\t\t\t\t\t\tconst type = zipHeader.filename.split('/')[0];\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase '_rels':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'word':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'ppt':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'xl':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.startsWith('xl/')) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model')) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: '3mf',\n\t\t\t\t\t\t\tmime: 'model/3mf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t\t\t\t// We look for:\n\t\t\t\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t\t\t\t// - one entry indicating specific type of file.\n\t\t\t\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\t\t\t\tif (zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize) {\n\t\t\t\t\t\tlet mimeType = await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n\t\t\t\t\t\tmimeType = mimeType.trim();\n\n\t\t\t\t\t\tswitch (mimeType) {\n\t\t\t\t\t\t\tcase 'application/epub+zip':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'epub',\n\t\t\t\t\t\t\t\t\tmime: 'application/epub+zip',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'odt',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.text',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'ods',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\text: 'odp',\n\t\t\t\t\t\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try to find next header manually when current one is corrupted\n\t\t\t\t\tif (zipHeader.compressedSize === 0) {\n\t\t\t\t\t\tlet nextHeaderIndex = -1;\n\n\t\t\t\t\t\twhile (nextHeaderIndex < 0 && (tokenizer.position < tokenizer.fileInfo.size)) {\n\t\t\t\t\t\t\tawait tokenizer.peekBuffer(this.buffer, {mayBeLess: true});\n\n\t\t\t\t\t\t\tnextHeaderIndex = this.buffer.indexOf('504B0304', 0, 'hex');\n\t\t\t\t\t\t\t// Move position to the next header if found, skip the whole buffer otherwise\n\t\t\t\t\t\t\tawait tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : this.buffer.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait tokenizer.ignore(zipHeader.compressedSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = Buffer.alloc(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\t//\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = this.buffer.toString('binary', 8, 12).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/x-flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\ttry {\n\t\t\t\tawait tokenizer.ignore(1350);\n\t\t\t\tconst maxBufferSize = 10 * 1024 * 1024;\n\t\t\t\tconst buffer = Buffer.alloc(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n\t\t\t\tawait tokenizer.readBuffer(buffer, {mayBeLess: true});\n\n\t\t\t\t// Check if this is an Adobe Illustrator file\n\t\t\t\tif (buffer.includes(Buffer.from('AIPrivateData'))) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'ai',\n\t\t\t\t\t\tmime: 'application/postscript',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow end of stream error if file is too small for the Adobe AI check\n\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3\n\t\t\t\t// = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = Buffer.alloc(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst id = await readField();\n\t\t\t\tconst lengthField = await readField();\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\t\t\t\treturn {\n\t\t\t\t\tid: id.readUIntBE(0, id.length),\n\t\t\t\t\tlen: lengthField.readUIntBE(lengthField.length - nrLength, nrLength),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len, 'utf-8'));\n\t\t\t\t\t\treturn rawValue.replace(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst docType = await readChildren(re.len);\n\n\t\t\tswitch (docType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/x-matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/vnd.wave',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/x-parquet',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = this.buffer.toString('binary', 2, 6);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('**ACE', {offset: 7})) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 14, mayBeLess: true});\n\t\t\tif (this.checkString('**', {offset: 12})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ace',\n\t\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'binary')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/x-apache-arrow',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = Buffer.alloc(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = Buffer.alloc(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\t// -- Unsafe signatures --\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = this.buffer.readUInt32LE(12);\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = this.buffer.slice(16, jsonSize + 16).toString();\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif (tarHeaderChecksumMatches(this.buffer)) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= 2 && this.check([0xFF, 0xE0], {offset: 0, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8 && (this.check([0x1C, 0x00, 0xFE, 0x00], {offset: 8}) || this.check([0x1F, 0x00, 0x0B, 0x00], {offset: 8}))) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport async function fileTypeStream(readableStream, {sampleSize = minimumBytes} = {}) {\n\tconst {default: stream} = await import('node:stream');\n\n\treturn new Promise((resolve, reject) => {\n\t\treadableStream.on('error', reject);\n\n\t\treadableStream.once('readable', () => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\t// Set up output stream\n\t\t\t\t\tconst pass = new stream.PassThrough();\n\t\t\t\t\tconst outputStream = stream.pipeline ? stream.pipeline(readableStream, pass, () => {}) : readableStream.pipe(pass);\n\n\t\t\t\t\t// Read the input stream and detect the filetype\n\t\t\t\t\tconst chunk = readableStream.read(sampleSize) ?? readableStream.read() ?? Buffer.alloc(0);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst fileType = await fileTypeFromBuffer(chunk);\n\t\t\t\t\t\tpass.fileType = fileType;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error instanceof strtok3.EndOfStreamError) {\n\t\t\t\t\t\t\tpass.fileType = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(outputStream);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t});\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n","export const defaultJsonSerializer = {\n    parse: JSON.parse,\n    stringify: JSON.stringify,\n};\n//# sourceMappingURL=defaultJsonSerializer.js.map","import { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { extractFiles, isExtractableFile } from 'extract-files';\nimport FormDataNode from 'form-data';\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nconst isExtractableFileEnhanced = (value) => isExtractableFile(value) ||\n    (value !== null && typeof value === `object` && typeof value.pipe === `function`);\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nconst createRequestBody = (query, variables, operationName, jsonSerializer = defaultJsonSerializer) => {\n    const { clone, files } = extractFiles({ query, variables, operationName }, ``, isExtractableFileEnhanced);\n    if (files.size === 0) {\n        if (!Array.isArray(query)) {\n            return jsonSerializer.stringify(clone);\n        }\n        if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n            throw new Error(`Cannot create request body with given variable type, array expected`);\n        }\n        // Batch support\n        const payload = query.reduce((accu, currentQuery, index) => {\n            accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n            return accu;\n        }, []);\n        return jsonSerializer.stringify(payload);\n    }\n    const Form = typeof FormData === `undefined` ? FormDataNode : FormData;\n    const form = new Form();\n    form.append(`operations`, jsonSerializer.stringify(clone));\n    const map = {};\n    let i = 0;\n    files.forEach((paths) => {\n        map[++i] = paths;\n    });\n    form.append(`map`, jsonSerializer.stringify(map));\n    i = 0;\n    files.forEach((paths, file) => {\n        form.append(`${++i}`, file);\n    });\n    return form;\n};\nexport default createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","import { parse, print } from 'graphql';\n/**\n * helpers\n */\nconst extractOperationName = (document) => {\n    let operationName = undefined;\n    const operationDefinitions = document.definitions.filter((definition) => definition.kind === `OperationDefinition`);\n    if (operationDefinitions.length === 1) {\n        operationName = operationDefinitions[0]?.name?.value;\n    }\n    return operationName;\n};\nexport const resolveRequestDocument = (document) => {\n    if (typeof document === `string`) {\n        let operationName = undefined;\n        try {\n            const parsedDocument = parse(document);\n            operationName = extractOperationName(parsedDocument);\n        }\n        catch (err) {\n            // Failed parsing the document, the operationName will be undefined\n        }\n        return { query: document, operationName };\n    }\n    const operationName = extractOperationName(document);\n    return { query: print(document), operationName };\n};\n//# sourceMappingURL=resolveRequestDocument.js.map","export class ClientError extends Error {\n    constructor(response, request) {\n        const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n            response,\n            request,\n        })}`;\n        super(message);\n        Object.setPrototypeOf(this, ClientError.prototype);\n        this.response = response;\n        this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === `function`) {\n            Error.captureStackTrace(this, ClientError);\n        }\n    }\n    static extractMessage(response) {\n        return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;\n    }\n}\n//# sourceMappingURL=types.js.map","import createRequestBody from './createRequestBody.js';\nimport { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js';\nimport { parseBatchRequestArgs, parseRawRequestArgs, parseRawRequestExtendedArgs, parseRequestArgs, parseRequestExtendedArgs, } from './parseArgs.js';\nimport { resolveRequestDocument } from './resolveRequestDocument.js';\nimport { ClientError, } from './types.js';\nimport crossFetch, * as CrossFetch from 'cross-fetch';\nexport { ClientError, };\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers) => {\n    let oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== `undefined` && headers instanceof Headers) ||\n            (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(([name, value]) => {\n                if (name && value !== undefined) {\n                    oHeaders[name] = value;\n                }\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str) => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim();\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = (params) => {\n    if (!Array.isArray(params.query)) {\n        const params_ = params;\n        const search = [`query=${encodeURIComponent(cleanQuery(params_.query))}`];\n        if (params.variables) {\n            search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`);\n        }\n        if (params_.operationName) {\n            search.push(`operationName=${encodeURIComponent(params_.operationName)}`);\n        }\n        return search.join(`&`);\n    }\n    if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n        throw new Error(`Cannot create query with given variable type, array expected`);\n    }\n    // Batch support\n    const params_ = params;\n    const payload = params.query.reduce((acc, currentQuery, index) => {\n        acc.push({\n            query: cleanQuery(currentQuery),\n            variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n        });\n        return acc;\n    }, []);\n    return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;\n};\nconst createHttpMethodFetcher = (method) => async (params) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params;\n    const headers = { ...params.headers };\n    let queryParams = ``;\n    let body = undefined;\n    if (method === `POST`) {\n        body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);\n        if (typeof body === `string`) {\n            // @ts-expect-error todo\n            headers[`Content-Type`] = `application/json`;\n        }\n    }\n    else {\n        // @ts-expect-error todo needs ADT for TS to understand the different states\n        queryParams = buildRequestConfig({\n            query,\n            variables,\n            operationName,\n            jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n        });\n    }\n    const init = {\n        method,\n        headers,\n        body,\n        ...fetchOptions,\n    };\n    let urlResolved = url;\n    let initResolved = init;\n    if (middleware) {\n        const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }));\n        const { url: urlNew, ...initNew } = result;\n        urlResolved = urlNew;\n        initResolved = initNew;\n    }\n    if (queryParams) {\n        urlResolved = `${urlResolved}?${queryParams}`;\n    }\n    return await fetch(urlResolved, initResolved);\n};\n/**\n * GraphQL Client.\n */\nexport class GraphQLClient {\n    constructor(url, requestConfig = {}) {\n        this.url = url;\n        this.requestConfig = requestConfig;\n        /**\n         * Send a GraphQL query to the server.\n         */\n        this.rawRequest = async (...args) => {\n            const [queryOrOptions, variables, requestHeaders] = args;\n            const rawRequestOptions = parseRawRequestArgs(queryOrOptions, variables, requestHeaders);\n            const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n            const { url } = this;\n            if (rawRequestOptions.signal !== undefined) {\n                fetchOptions.signal = rawRequestOptions.signal;\n            }\n            const { operationName } = resolveRequestDocument(rawRequestOptions.query);\n            return makeRequest({\n                url,\n                query: rawRequestOptions.query,\n                variables: rawRequestOptions.variables,\n                headers: {\n                    ...resolveHeaders(callOrIdentity(headers)),\n                    ...resolveHeaders(rawRequestOptions.requestHeaders),\n                },\n                operationName,\n                fetch,\n                method,\n                fetchOptions,\n                middleware: requestMiddleware,\n            })\n                .then((response) => {\n                if (responseMiddleware) {\n                    responseMiddleware(response);\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (responseMiddleware) {\n                    responseMiddleware(error);\n                }\n                throw error;\n            });\n        };\n    }\n    async request(documentOrOptions, ...variablesAndRequestHeaders) {\n        const [variables, requestHeaders] = variablesAndRequestHeaders;\n        const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders);\n        const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n        const { url } = this;\n        if (requestOptions.signal !== undefined) {\n            fetchOptions.signal = requestOptions.signal;\n        }\n        const { query, operationName } = resolveRequestDocument(requestOptions.document);\n        return makeRequest({\n            url,\n            query,\n            variables: requestOptions.variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(requestOptions.requestHeaders),\n            },\n            operationName,\n            fetch,\n            method,\n            fetchOptions,\n            middleware: requestMiddleware,\n        })\n            .then((response) => {\n            if (responseMiddleware) {\n                responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (responseMiddleware) {\n                responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    // prettier-ignore\n    batchRequests(documentsOrOptions, requestHeaders) {\n        const batchRequestOptions = parseBatchRequestArgs(documentsOrOptions, requestHeaders);\n        const { headers, ...fetchOptions } = this.requestConfig;\n        if (batchRequestOptions.signal !== undefined) {\n            fetchOptions.signal = batchRequestOptions.signal;\n        }\n        const queries = batchRequestOptions.documents.map(({ document }) => resolveRequestDocument(document).query);\n        const variables = batchRequestOptions.documents.map(({ variables }) => variables);\n        return makeRequest({\n            url: this.url,\n            query: queries,\n            // @ts-expect-error TODO reconcile batch variables into system.\n            variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(batchRequestOptions.requestHeaders),\n            },\n            operationName: undefined,\n            fetch: this.requestConfig.fetch ?? crossFetch,\n            method: this.requestConfig.method || `POST`,\n            fetchOptions,\n            middleware: this.requestConfig.requestMiddleware,\n        })\n            .then((response) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    setHeaders(headers) {\n        this.requestConfig.headers = headers;\n        return this;\n    }\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    setHeader(key, value) {\n        const { headers } = this.requestConfig;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.requestConfig.headers = { [key]: value };\n        }\n        return this;\n    }\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    setEndpoint(value) {\n        this.url = value;\n        return this;\n    }\n}\nconst makeRequest = async (params) => {\n    const { query, variables, fetchOptions } = params;\n    const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`));\n    const isBatchingQuery = Array.isArray(params.query);\n    const response = await fetcher(params);\n    const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer);\n    const successfullyReceivedData = Array.isArray(result)\n        ? !result.some(({ data }) => !data)\n        : Boolean(result.data);\n    const successfullyPassedErrorPolicy = Array.isArray(result) ||\n        !result.errors ||\n        (Array.isArray(result.errors) && !result.errors.length) ||\n        fetchOptions.errorPolicy === `all` ||\n        fetchOptions.errorPolicy === `ignore`;\n    if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n        // @ts-expect-error TODO fixme\n        const { errors, ...rest } = Array.isArray(result) ? result : result;\n        const data = fetchOptions.errorPolicy === `ignore` ? rest : result;\n        const dataEnvelope = isBatchingQuery ? { data } : data;\n        // @ts-expect-error TODO\n        return {\n            ...dataEnvelope,\n            headers: response.headers,\n            status: response.status,\n        };\n    }\n    else {\n        const errorResult = typeof result === `string`\n            ? {\n                error: result,\n            }\n            : result;\n        throw new ClientError(\n        // @ts-expect-error TODO\n        { ...errorResult, status: response.status, headers: response.headers }, { query, variables });\n    }\n};\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport const rawRequest = async (...args) => {\n    const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;\n    const requestOptions = parseRawRequestExtendedArgs(urlOrOptions, query, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.rawRequest({\n        ...requestOptions,\n    });\n};\nexport async function request(urlOrOptions, \n// @ts-ignore\ndocument, ...variablesAndRequestHeaders) {\n    // @ts-ignore\n    const requestOptions = parseRequestExtendedArgs(urlOrOptions, document, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.request({\n        ...requestOptions,\n    });\n}\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nexport const batchRequests = async (...args) => {\n    const params = parseBatchRequestsArgsExtended(args);\n    const client = new GraphQLClient(params.url);\n    return client.batchRequests(params);\n};\nconst parseBatchRequestsArgsExtended = (args) => {\n    if (args.length === 1) {\n        return args[0];\n    }\n    else {\n        return {\n            url: args[0],\n            documents: args[1],\n            requestHeaders: args[2],\n            signal: undefined,\n        };\n    }\n};\nexport default request;\nconst getResult = async (response, jsonSerializer) => {\n    let contentType;\n    response.headers.forEach((value, key) => {\n        if (key.toLowerCase() === `content-type`) {\n            contentType = value;\n        }\n    });\n    if (contentType &&\n        (contentType.toLowerCase().startsWith(`application/json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {\n        return jsonSerializer.parse(await response.text());\n    }\n    else {\n        return response.text();\n    }\n};\nconst callOrIdentity = (value) => {\n    return typeof value === `function` ? value() : value;\n};\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks, ...variables) => {\n    return chunks.reduce((accumulator, chunk, index) => `${accumulator}${chunk}${index in variables ? variables[index] : ``}`, ``);\n};\nexport { GraphQLWebSocketClient } from './graphql-ws.js';\nexport { resolveRequestDocument } from './resolveRequestDocument.js';\n//# sourceMappingURL=index.js.map","export const uppercase = (str) => str.toUpperCase();\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers) => {\n    const o = {};\n    headers.forEach((v, k) => {\n        o[k] = v;\n    });\n    return o;\n};\n//# sourceMappingURL=helpers.js.map","export const parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {\n    return documentOrOptions.document\n        ? documentOrOptions\n        : {\n            document: documentOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {\n    return queryOrOptions.query\n        ? queryOrOptions\n        : {\n            query: queryOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseBatchRequestArgs = (documentsOrOptions, requestHeaders) => {\n    return documentsOrOptions.documents\n        ? documentsOrOptions\n        : {\n            documents: documentsOrOptions,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRequestExtendedArgs = (urlOrOptions, document, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.document\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            document: document,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.query\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            query: query,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\n//# sourceMappingURL=parseArgs.js.map","// @ts-expect-error\nimport SparseArray from 'sparse-array';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport class Bucket {\n    constructor(options, parent, posAtParent = 0) {\n        this._options = options;\n        this._popCount = 0;\n        this._parent = parent;\n        this._posAtParent = posAtParent;\n        this._children = new SparseArray();\n        this.key = null;\n    }\n    async put(key, value) {\n        const place = await this._findNewBucketAndPos(key);\n        await place.bucket._putAt(place, key, value);\n    }\n    async get(key) {\n        const child = await this._findChild(key);\n        if (child != null) {\n            return child.value;\n        }\n    }\n    async del(key) {\n        const place = await this._findPlace(key);\n        const child = place.bucket._at(place.pos);\n        if (child != null && child.key === key) {\n            place.bucket._delAt(place.pos);\n        }\n    }\n    leafCount() {\n        const children = this._children.compactArray();\n        return children.reduce((acc, child) => {\n            if (child instanceof Bucket) {\n                return acc + child.leafCount();\n            }\n            return acc + 1;\n        }, 0);\n    }\n    childrenCount() {\n        return this._children.length;\n    }\n    onlyChild() {\n        return this._children.get(0);\n    }\n    *eachLeafSeries() {\n        const children = this._children.compactArray();\n        for (const child of children) {\n            if (child instanceof Bucket) {\n                yield* child.eachLeafSeries();\n            }\n            else {\n                yield child;\n            }\n        }\n    }\n    serialize(map, reduce) {\n        const acc = [];\n        // serialize to a custom non-sparse representation\n        return reduce(this._children.reduce((acc, child, index) => {\n            if (child != null) {\n                if (child instanceof Bucket) {\n                    acc.push(child.serialize(map, reduce));\n                }\n                else {\n                    acc.push(map(child, index));\n                }\n            }\n            return acc;\n        }, acc));\n    }\n    async asyncTransform(asyncMap, asyncReduce) {\n        return await asyncTransformBucket(this, asyncMap, asyncReduce);\n    }\n    toJSON() {\n        return this.serialize(mapNode, reduceNodes);\n    }\n    prettyPrint() {\n        return JSON.stringify(this.toJSON(), null, '  ');\n    }\n    tableSize() {\n        return Math.pow(2, this._options.bits);\n    }\n    async _findChild(key) {\n        const result = await this._findPlace(key);\n        const child = result.bucket._at(result.pos);\n        if (child instanceof Bucket) {\n            // should not be possible, this._findPlace should always\n            // return a location for a child, not a bucket\n            return undefined;\n        }\n        if (child != null && child.key === key) {\n            return child;\n        }\n    }\n    async _findPlace(key) {\n        const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key);\n        const index = await hashValue.take(this._options.bits);\n        const child = this._children.get(index);\n        if (child instanceof Bucket) {\n            return await child._findPlace(hashValue);\n        }\n        return {\n            bucket: this,\n            pos: index,\n            hash: hashValue,\n            existingChild: child\n        };\n    }\n    async _findNewBucketAndPos(key) {\n        const place = await this._findPlace(key);\n        if ((place.existingChild != null) && place.existingChild.key !== key) {\n            // conflict\n            const bucket = new Bucket(this._options, place.bucket, place.pos);\n            place.bucket._putObjectAt(place.pos, bucket);\n            // put the previous value\n            const newPlace = await bucket._findPlace(place.existingChild.hash);\n            newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value);\n            return await bucket._findNewBucketAndPos(place.hash);\n        }\n        // no conflict, we found the place\n        return place;\n    }\n    _putAt(place, key, value) {\n        this._putObjectAt(place.pos, {\n            key: key,\n            value: value,\n            hash: place.hash\n        });\n    }\n    _putObjectAt(pos, object) {\n        if (this._children.get(pos) == null) {\n            this._popCount++;\n        }\n        this._children.set(pos, object);\n    }\n    _delAt(pos) {\n        if (pos === -1) {\n            throw new Error('Invalid position');\n        }\n        if (this._children.get(pos) != null) {\n            this._popCount--;\n        }\n        this._children.unset(pos);\n        this._level();\n    }\n    _level() {\n        if (this._parent != null && this._popCount <= 1) {\n            if (this._popCount === 1) {\n                // remove myself from parent, replacing me with my only child\n                const onlyChild = this._children.find(exists);\n                if ((onlyChild != null) && !(onlyChild instanceof Bucket)) {\n                    const hash = onlyChild.hash;\n                    hash.untake(this._options.bits);\n                    const place = {\n                        pos: this._posAtParent,\n                        hash: hash,\n                        bucket: this._parent\n                    };\n                    this._parent._putAt(place, onlyChild.key, onlyChild.value);\n                }\n            }\n            else {\n                this._parent._delAt(this._posAtParent);\n            }\n        }\n    }\n    _at(index) {\n        return this._children.get(index);\n    }\n}\nfunction exists(o) {\n    return Boolean(o);\n}\nfunction mapNode(node, _) {\n    return node.key;\n}\nfunction reduceNodes(nodes) {\n    return nodes;\n}\nasync function asyncTransformBucket(bucket, asyncMap, asyncReduce) {\n    const output = [];\n    for (const child of bucket._children.compactArray()) {\n        if (child instanceof Bucket) {\n            await asyncTransformBucket(child, asyncMap, asyncReduce);\n        }\n        else {\n            const mappedChildren = await asyncMap(child);\n            output.push({\n                bitField: bucket._children.bitField(),\n                children: mappedChildren\n            });\n        }\n    }\n    return await asyncReduce(output);\n}\n//# sourceMappingURL=bucket.js.map","const START_MASKS = [\n    0b11111111,\n    0b11111110,\n    0b11111100,\n    0b11111000,\n    0b11110000,\n    0b11100000,\n    0b11000000,\n    0b10000000\n];\nconst STOP_MASKS = [\n    0b00000001,\n    0b00000011,\n    0b00000111,\n    0b00001111,\n    0b00011111,\n    0b00111111,\n    0b01111111,\n    0b11111111\n];\nexport class ConsumableBuffer {\n    constructor(value) {\n        this._value = value;\n        this._currentBytePos = value.length - 1;\n        this._currentBitPos = 7;\n    }\n    availableBits() {\n        return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n    totalBits() {\n        return this._value.length * 8;\n    }\n    take(bits) {\n        let pendingBits = bits;\n        let result = 0;\n        while (pendingBits > 0 && this._haveBits()) {\n            const byte = this._value[this._currentBytePos];\n            const availableBits = this._currentBitPos + 1;\n            const taking = Math.min(availableBits, pendingBits);\n            const value = byteBitsToInt(byte, availableBits - taking, taking);\n            result = (result << taking) + value;\n            pendingBits -= taking;\n            this._currentBitPos -= taking;\n            if (this._currentBitPos < 0) {\n                this._currentBitPos = 7;\n                this._currentBytePos--;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        this._currentBitPos += bits;\n        while (this._currentBitPos > 7) {\n            this._currentBitPos -= 8;\n            this._currentBytePos += 1;\n        }\n    }\n    _haveBits() {\n        return this._currentBytePos >= 0;\n    }\n}\nfunction byteBitsToInt(byte, start, length) {\n    const mask = maskFor(start, length);\n    return (byte & mask) >>> start;\n}\nfunction maskFor(start, length) {\n    return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}\n//# sourceMappingURL=consumable-buffer.js.map","import { ConsumableBuffer } from './consumable-buffer.js';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function wrapHash(hashFn) {\n    function hashing(value) {\n        if (value instanceof InfiniteHash) {\n            // already a hash. return it\n            return value;\n        }\n        else {\n            return new InfiniteHash(value, hashFn);\n        }\n    }\n    return hashing;\n}\nexport class InfiniteHash {\n    constructor(value, hashFn) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error('can only hash Uint8Arrays');\n        }\n        this._value = value;\n        this._hashFn = hashFn;\n        this._depth = -1;\n        this._availableBits = 0;\n        this._currentBufferIndex = 0;\n        this._buffers = [];\n    }\n    async take(bits) {\n        let pendingBits = bits;\n        while (this._availableBits < pendingBits) {\n            await this._produceMoreBits();\n        }\n        let result = 0;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const available = Math.min(hash.availableBits(), pendingBits);\n            const took = hash.take(available);\n            result = (result << available) + took;\n            pendingBits -= available;\n            this._availableBits -= available;\n            if (hash.availableBits() === 0) {\n                this._currentBufferIndex++;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        let pendingBits = bits;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits);\n            hash.untake(availableForUntake);\n            pendingBits -= availableForUntake;\n            this._availableBits += availableForUntake;\n            if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n                this._depth--;\n                this._currentBufferIndex--;\n            }\n        }\n    }\n    async _produceMoreBits() {\n        this._depth++;\n        const value = this._depth > 0 ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value;\n        const hashValue = await this._hashFn(value);\n        const buffer = new ConsumableBuffer(hashValue);\n        this._buffers.push(buffer);\n        this._availableBits += buffer.availableBits();\n    }\n}\n//# sourceMappingURL=consumable-hash.js.map","import { Bucket } from './bucket.js';\nimport { wrapHash } from './consumable-hash.js';\nexport function createHAMT(options) {\n    if (options == null || options.hashFn == null) {\n        throw new Error('please define an options.hashFn');\n    }\n    const bucketOptions = {\n        bits: options.bits ?? 8,\n        hash: wrapHash(options.hashFn)\n    };\n    return new Bucket(bucketOptions);\n}\nexport { Bucket };\n//# sourceMappingURL=index.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction drain(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n        })();\n    }\n    else {\n        for (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n    }\n}\nexport default drain;\n//# sourceMappingURL=index.js.map","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nexport function is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n","class Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\nexport { Type, Token }\n","// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nexport const useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nexport function asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nexport const toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nexport const fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nexport const fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nexport const slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nexport const concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nexport const alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nexport const toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nexport const fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nexport function decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n","/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\nimport { alloc, concat, slice } from './byte-utils.js'\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nexport class Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = alloc(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = slice(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = concat(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n","const decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n}\n","/* globals BigInt */\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix, assertEnoughData } from './common.js'\n\nexport const uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint8 (data, offset, options) {\n  assertEnoughData(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint16 (data, offset, options) {\n  assertEnoughData(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint32 (data, offset, options) {\n  assertEnoughData(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nexport function readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  assertEnoughData(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint8 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint16 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint32 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint64 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nexport function encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n","/* eslint-env es2020 */\n\nimport { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint8 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint16 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint32 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint64 (data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { compare, fromString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length)\n  const buf = slice(data, pos + prefix, pos + prefix + length)\n  return new Token(Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2)\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { toString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  assertEnoughData(data, pos, totLength)\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nexport const encodeString = encodeBytes\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeArray (buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeMap (buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact (_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag (buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix } from './common.js'\nimport { encodeUint } from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1)\n  }\n  return new Token(Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new Token(Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new Token(Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nexport function encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport * as negint from './1negint.js'\nimport * as bytes from './2bytes.js'\nimport * as string from './3string.js'\nimport * as array from './4array.js'\nimport * as map from './5map.js'\nimport * as tag from './6tag.js'\nimport * as float from './7float.js'\nimport { decodeErrPrefix } from './common.js'\nimport { fromArray } from './byte-utils.js'\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nexport const jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = uint.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = uint.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = uint.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = uint.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = negint.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = negint.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = negint.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = negint.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = bytes.decodeBytesCompact\n}\njump[0x58] = bytes.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = bytes.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = bytes.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = bytes.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = string.decodeStringCompact\n}\njump[0x78] = string.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = string.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = string.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = string.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = array.decodeArrayCompact\n}\njump[0x98] = array.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = array.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = array.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = array.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = array.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = map.decodeMapCompact\n}\njump[0xb8] = map.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = map.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = map.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = map.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = map.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = tag.decodeTagCompact\n}\njump[0xd8] = tag.decodeTag8\njump[0xd9] = tag.decodeTag16\njump[0xda] = tag.decodeTag32\njump[0xdb] = tag.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = float.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = float.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = float.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = float.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = float.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nexport const quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new Token(Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new Token(Type.string, '', 1)\n// empty list\nquick[0x80] = new Token(Type.array, 0, 1)\n// empty map\nquick[0xa0] = new Token(Type.map, 0, 1)\n// false\nquick[0xf4] = new Token(Type.false, false, 1)\n// true\nquick[0xf5] = new Token(Type.true, true, 1)\n// null\nquick[0xf6] = new Token(Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nexport function quickEncodeToken (token) {\n  switch (token.type) {\n    case Type.false:\n      return fromArray([0xf4])\n    case Type.true:\n      return fromArray([0xf5])\n    case Type.null:\n      return fromArray([0xf6])\n    case Type.bytes:\n      if (!token.value.length) {\n        return fromArray([0x40])\n      }\n      return\n    case Type.string:\n      if (token.value === '') {\n        return fromArray([0x60])\n      }\n      return\n    case Type.array:\n      if (token.value === 0) {\n        return fromArray([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.map:\n      if (token.value === 0) {\n        return fromArray([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.uint:\n      if (token.value < 24) {\n        return fromArray([Number(token.value)])\n      }\n      return\n    case Type.negint:\n      if (token.value >= -24) {\n        return fromArray([31 - Number(token.value)])\n      }\n  }\n}\n","import { is } from './is.js'\nimport { Token, Type } from './token.js'\nimport { Bl } from './bl.js'\nimport { encodeErrPrefix } from './common.js'\nimport { quickEncodeToken } from './jump.js'\nimport { asU8A } from './byte-utils.js'\n\nimport { encodeUint } from './0uint.js'\nimport { encodeNegint } from './1negint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { encodeString } from './3string.js'\nimport { encodeArray } from './4array.js'\nimport { encodeMap } from './5map.js'\nimport { encodeTag } from './6tag.js'\nimport { encodeFloat } from './7float.js'\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nexport function makeCborEncoders () {\n  const encoders = []\n  encoders[Type.uint.major] = encodeUint\n  encoders[Type.negint.major] = encodeNegint\n  encoders[Type.bytes.major] = encodeBytes\n  encoders[Type.string.major] = encodeString\n  encoders[Type.array.major] = encodeArray\n  encoders[Type.map.major] = encodeMap\n  encoders[Type.tag.major] = encodeTag\n  encoders[Type.float.major] = encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj)\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new Token(Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new Token(Type.array, obj.length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new Token(Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new Token(Type.map, length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = is(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return asU8A(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\nexport { objectToTokens, encode, encodeCustom, Ref }\n","import { decodeErrPrefix } from './common.js'\nimport { Type } from './token.js'\nimport { jump, quick } from './jump.js'\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = quick[byt]\n    if (token === undefined) {\n      const decoder = jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\nexport { Tokeniser, tokensToObject, decode, decodeFirst }\n","import { nanoid } from 'nanoid';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n     * ```\n     */\n    static random() {\n        return new Key(nanoid().replace(/-/g, ''));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     *\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nclass PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\nexport default PriorityQueue;\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pending, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_throwOnAbort, _PQueue_onEvent;\nimport { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pending.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\"),\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pending, (_b = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    // TODO: Use options.signal?.throwIfAborted() when targeting Node.js 18\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        throw new AbortError('The task was aborted.');\n                    }\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), options.timeout);\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_throwOnAbort).call(this, options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n                }\n            }, options);\n            this.emit('add');\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pending, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pending = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pending, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pending, (_a = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        this.emit('empty');\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0) {\n            this.emit('idle');\n        }\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_throwOnAbort = async function _PQueue_throwOnAbort(signal) {\n    return new Promise((_resolve, reject) => {\n        signal.addEventListener('abort', () => {\n            // TODO: Reject with signal.throwIfAborted() when targeting Node.js 18\n            // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n            reject(new AbortError('The task was aborted.'));\n        }, { once: true });\n    });\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\nexport default PQueue;\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import { Type } from '../token.js'\nimport { encodeCustom } from '../encode.js'\nimport { encodeErrPrefix } from '../common.js'\nimport { asU8A, fromString } from '../byte-utils.js'\n\n/**\n * @typedef {import('../../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../token').Token} Token\n * @typedef {import('../bl').Bl} Bl\n */\n\nclass JSONEncoder extends Array {\n  constructor () {\n    super()\n    /** @type {{type:Type,elements:number}[]} */\n    this.inRecursive = []\n  }\n\n  /**\n   * @param {Bl} buf\n   */\n  prefix (buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1]\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          buf.push([44]) // ','\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          if (recurs.elements % 2 === 1) { // key\n            buf.push([44]) // ','\n          } else {\n            buf.push([58]) // ':'\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.uint.major] (buf, token) {\n    this.prefix(buf)\n    const is = String(token.value)\n    const isa = []\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n    }\n    buf.push(isa)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.negint.major] (buf, token) {\n    // @ts-ignore hack\n    this[Type.uint.major](buf, token)\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [Type.bytes.major] (_buf, _token) {\n    throw new Error(`${encodeErrPrefix} unsupported type: Uint8Array`)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.string.major] (buf, token) {\n    this.prefix(buf)\n    // buf.push(34) // '\"'\n    // encodeUtf8(token.value, byts)\n    // buf.push(34) // '\"'\n    const byts = fromString(JSON.stringify(token.value))\n    buf.push(byts.length > 32 ? asU8A(byts) : byts)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [Type.array.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: Type.array, elements: 0 })\n    buf.push([91]) // '['\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [Type.map.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: Type.map, elements: 0 })\n    buf.push([123]) // '{'\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [Type.tag.major] (_buf, _token) {}\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.float.major] (buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop()\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]) // ']'\n        } else if (recurs.type === Type.map) {\n          buf.push([125]) // '}'\n        /* c8 ignore next 3 */\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!')\n        }\n        return\n      }\n      /* c8 ignore next 2 */\n      throw new Error('Unexpected break; this should not happen!')\n    }\n    if (token.value === undefined) {\n      throw new Error(`${encodeErrPrefix} unsupported type: undefined`)\n    }\n\n    this.prefix(buf)\n    if (token.type.name === 'true') {\n      buf.push([116, 114, 117, 101]) // 'true'\n      return\n    } else if (token.type.name === 'false') {\n      buf.push([102, 97, 108, 115, 101]) // 'false'\n      return\n    } else if (token.type.name === 'null') {\n      buf.push([110, 117, 108, 108]) // 'null'\n      return\n    }\n\n    // number\n    const is = String(token.value)\n    const isa = []\n    let dp = false\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) { // '[.eE]'\n        dp = true\n      }\n    }\n    if (!dp) { // need a decimal point for floats\n      isa.push(46) // '.'\n      isa.push(48) // '0'\n    }\n    buf.push(isa)\n  }\n}\n\n// The below code is mostly taken and modified from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n// function encodeUtf8 (string, byts) {\n//   let codePoint\n//   const length = string.length\n//   let leadSurrogate = null\n\n//   for (let i = 0; i < length; ++i) {\n//     codePoint = string.charCodeAt(i)\n\n//     // is surrogate component\n//     if (codePoint > 0xd7ff && codePoint < 0xe000) {\n//       // last char was a lead\n//       if (!leadSurrogate) {\n//         // no lead yet\n//         /* c8 ignore next 9 */\n//         if (codePoint > 0xdbff) {\n//           // unexpected trail\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         } else if (i + 1 === length) {\n//           // unpaired lead\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         }\n\n//         // valid lead\n//         leadSurrogate = codePoint\n\n//         continue\n//       }\n\n//       // 2 leads in a row\n//       /* c8 ignore next 5 */\n//       if (codePoint < 0xdc00) {\n//         byts.push(0xef, 0xbf, 0xbd)\n//         leadSurrogate = codePoint\n//         continue\n//       }\n\n//       // valid surrogate pair\n//       codePoint = (leadSurrogate - 0xd800 << 10 | codePoint - 0xdc00) + 0x10000\n//     /* c8 ignore next 4 */\n//     } else if (leadSurrogate) {\n//       // valid bmp char, but last char was a lead\n//       byts.push(0xef, 0xbf, 0xbd)\n//     }\n\n//     leadSurrogate = null\n\n//     // encode utf8\n//     if (codePoint < 0x80) {\n//       // special JSON escapes\n//       switch (codePoint) {\n//         case 8: // '\\b'\n//           byts.push(92, 98) // '\\\\b'\n//           continue\n//         case 9: // '\\t'\n//           byts.push(92, 116) // '\\\\t'\n//           continue\n//         case 10: // '\\n'\n//           byts.push(92, 110) // '\\\\n'\n//           continue\n//         case 12: // '\\f'\n//           byts.push(92, 102) // '\\\\f'\n//           continue\n//         case 13: // '\\r'\n//           byts.push(92, 114) // '\\\\r'\n//           continue\n//         case 34: // '\"'\n//           byts.push(92, 34) // '\\\\\"'\n//           continue\n//         case 92: // '\\\\'\n//           byts.push(92, 92) // '\\\\\\\\'\n//           continue\n//       }\n\n//       byts.push(codePoint)\n//     } else if (codePoint < 0x800) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0x6 | 0xc0,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else if (codePoint < 0x10000) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0xc | 0xe0,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     /* c8 ignore next 9 */\n//     } else if (codePoint < 0x110000) {\n//       byts.push(\n//         codePoint >> 0x12 | 0xf0,\n//         codePoint >> 0xc & 0x3f | 0x80,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else {\n//       /* c8 ignore next 2 */\n//       throw new Error('Invalid code point')\n//     }\n//   }\n// }\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${encodeErrPrefix} complex map keys are not supported`)\n  }\n  const keyToken1 = e1[0]\n  const keyToken2 = e2[0]\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${encodeErrPrefix} non-string map keys are not supported`)\n  }\n  if (keyToken1 < keyToken2) {\n    return -1\n  }\n  if (keyToken1 > keyToken2) {\n    return 1\n  }\n  /* c8 ignore next 1 */\n  throw new Error(`${encodeErrPrefix} unexpected duplicate map keys, this is not supported`)\n}\n\nconst defaultEncodeOptions = { addBreakTokens: true, mapSorter }\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, new JSONEncoder(), options)\n}\n\nexport { encode }\n","import { decode as _decode, decodeFirst as _decodeFirst } from '../decode.js'\nimport { Token, Type } from '../token.js'\nimport { decodeCodePointsArray } from '../byte-utils.js'\nimport { decodeErrPrefix } from '../common.js'\n\n/**\n * @typedef {import('../../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../../interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n    /** @type {string[]} */\n    this.modeStack = ['value']\n    this.lastToken = ''\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  /**\n   * @returns {number}\n   */\n  ch () {\n    return this.data[this._pos]\n  }\n\n  /**\n   * @returns {string}\n   */\n  currentMode () {\n    return this.modeStack[this.modeStack.length - 1]\n  }\n\n  skipWhitespace () {\n    let c = this.ch()\n    // @ts-ignore\n    while (c === 32 /* ' ' */ || c === 9 /* '\\t' */ || c === 13 /* '\\r' */ || c === 10 /* '\\n' */) {\n      c = this.data[++this._pos]\n    }\n  }\n\n  /**\n   * @param {number[]} str\n   */\n  expect (str) {\n    if (this.data.length - this._pos < str.length) {\n      throw new Error(`${decodeErrPrefix} unexpected end of input at position ${this._pos}`)\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this._pos++] !== str[i]) {\n        throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...str)}'`)\n      }\n    }\n  }\n\n  parseNumber () {\n    const startPos = this._pos\n    let negative = false\n    let float = false\n\n    /**\n     * @param {number[]} chars\n     */\n    const swallow = (chars) => {\n      while (!this.done()) {\n        const ch = this.ch()\n        if (chars.includes(ch)) {\n          this._pos++\n        } else {\n          break\n        }\n      }\n    }\n\n    // lead\n    if (this.ch() === 45) { // '-'\n      negative = true\n      this._pos++\n    }\n    if (this.ch() === 48) { // '0'\n      this._pos++\n      if (this.ch() === 46) { // '.'\n        this._pos++\n        float = true\n      } else {\n        return new Token(Type.uint, 0, this._pos - startPos)\n      }\n    }\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    if (negative && this._pos === startPos + 1) {\n      throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}`)\n    }\n    if (!this.done() && this.ch() === 46) { // '.'\n      if (float) {\n        throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}`)\n      }\n      float = true\n      this._pos++\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) { // '[eE]'\n      float = true\n      this._pos++\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) { // '+', '-'\n        this._pos++\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    // @ts-ignore\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this._pos))\n    const num = parseFloat(numStr)\n    if (float) {\n      return new Token(Type.float, num, this._pos - startPos)\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this._pos - startPos)\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this._pos - startPos)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseString () {\n    /* c8 ignore next 4 */\n    if (this.ch() !== 34) { // '\"'\n      // this would be a programming error\n      throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}; this shouldn't happen`)\n    }\n    this._pos++\n\n    // check for simple fast-path, all printable ascii, no escapes\n    // >0x10000 elements may fail fn.apply() (http://stackoverflow.com/a/22747272/680742)\n    for (let i = this._pos, l = 0; i < this.data.length && l < 0x10000; i++, l++) {\n      const ch = this.data[i]\n      if (ch === 92 || ch < 32 || ch >= 128) { // '\\', ' ', control-chars or non-trivial\n        break\n      }\n      if (ch === 34) { // '\"'\n        // @ts-ignore\n        const str = String.fromCharCode.apply(null, this.data.subarray(this._pos, i))\n        this._pos = i + 1\n        return new Token(Type.string, str, l)\n      }\n    }\n\n    const startPos = this._pos\n    const chars = []\n\n    const readu4 = () => {\n      if (this._pos + 4 >= this.data.length) {\n        throw new Error(`${decodeErrPrefix} unexpected end of unicode escape sequence at position ${this._pos}`)\n      }\n      let u4 = 0\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch()\n        if (ch >= 48 && ch <= 57) { // '0' && '9'\n          ch -= 48\n        } else if (ch >= 97 && ch <= 102) { // 'a' && 'f'\n          ch = ch - 97 + 10\n        } else if (ch >= 65 && ch <= 70) { // 'A' && 'F'\n          ch = ch - 65 + 10\n        } else {\n          throw new Error(`${decodeErrPrefix} unexpected unicode escape character at position ${this._pos}`)\n        }\n        u4 = u4 * 16 + ch\n        this._pos++\n      }\n      return u4\n    }\n\n    // mostly taken from feross/buffer and adjusted to fit\n    const readUtf8Char = () => {\n      const firstByte = this.ch()\n      let codePoint = null\n      /* c8 ignore next 1 */\n      let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n      if (this._pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${decodeErrPrefix} unexpected unicode sequence at position ${this._pos}`)\n      }\n\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        /* c8 ignore next 6 */\n        // this case is dealt with by the caller function\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = this.data[this._pos + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          fourthByte = this.data[this._pos + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n\n      /* c8 ignore next 5 */\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xfffd\n        bytesPerSequence = 1\n      } else if (codePoint > 0xffff) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        chars.push(codePoint >>> 10 & 0x3ff | 0xd800)\n        codePoint = 0xdc00 | codePoint & 0x3ff\n      }\n\n      chars.push(codePoint)\n      this._pos += bytesPerSequence\n    }\n\n    // TODO: could take the approach of a quick first scan for special chars like encoding/json/decode.go#unquoteBytes\n    // and converting all of the ascii chars from the base array in bulk\n    while (!this.done()) {\n      const ch = this.ch()\n      let ch1\n      switch (ch) {\n        case 92: // '\\'\n          this._pos++\n          if (this.done()) {\n            throw new Error(`${decodeErrPrefix} unexpected string termination at position ${this._pos}`)\n          }\n          ch1 = this.ch()\n          this._pos++\n          switch (ch1) {\n            case 34: // '\"'\n            case 39: // '\\''\n            case 92: // '\\'\n            case 47: // '/'\n              chars.push(ch1)\n              break\n            case 98: // 'b'\n              chars.push(8)\n              break\n            case 116: // 't'\n              chars.push(9)\n              break\n            case 110: // 'n'\n              chars.push(10)\n              break\n            case 102: // 'f'\n              chars.push(12)\n              break\n            case 114: // 'r'\n              chars.push(13)\n              break\n            case 117: // 'u'\n              chars.push(readu4())\n              break\n            default:\n              throw new Error(`${decodeErrPrefix} unexpected string escape character at position ${this._pos}`)\n          }\n          break\n        case 34: // '\"'\n          this._pos++\n          return new Token(Type.string, decodeCodePointsArray(chars), this._pos - startPos)\n        default:\n          if (ch < 32) { // ' '\n            throw new Error(`${decodeErrPrefix} invalid control character at position ${this._pos}`)\n          } else if (ch < 0x80) {\n            chars.push(ch)\n            this._pos++\n          } else {\n            readUtf8Char()\n          }\n      }\n    }\n\n    throw new Error(`${decodeErrPrefix} unexpected end of string at position ${this._pos}`)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseValue () {\n    switch (this.ch()) {\n      case 123: // '{'\n        this.modeStack.push('obj-start')\n        this._pos++\n        return new Token(Type.map, Infinity, 1)\n      case 91: // '['\n        this.modeStack.push('array-start')\n        this._pos++\n        return new Token(Type.array, Infinity, 1)\n      case 34: { // '\"'\n        return this.parseString()\n      }\n      case 110: // 'n' / null\n        this.expect([110, 117, 108, 108]) // 'null'\n        return new Token(Type.null, null, 4)\n      case 102: // 'f' / // false\n        this.expect([102, 97, 108, 115, 101]) // 'false'\n        return new Token(Type.false, false, 5)\n      case 116: // 't' / // true\n        this.expect([116, 114, 117, 101]) // 'true'\n        return new Token(Type.true, true, 4)\n      case 45: // '-'\n      case 48: // '0'\n      case 49: // '1'\n      case 50: // '2'\n      case 51: // '3'\n      case 52: // '4'\n      case 53: // '5'\n      case 54: // '6'\n      case 55: // '7'\n      case 56: // '8'\n      case 57: // '9'\n        return this.parseNumber()\n      default:\n        throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}`)\n    }\n  }\n\n  /**\n   * @returns {Token}\n   */\n  next () {\n    this.skipWhitespace()\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop()\n        return this.parseValue()\n      case 'array-value': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      case 'array-start': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      // @ts-ignore\n      case 'obj-key':\n        if (this.ch() === 125) { // '}'\n          this.modeStack.pop()\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.skipWhitespace()\n      case 'obj-start': { // eslint-disable-line no-fallthrough\n        this.modeStack.pop()\n        if (this.ch() === 125) { // '}'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        const token = this.parseString()\n        this.skipWhitespace()\n        if (this.ch() !== 58) { // ':'\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('obj-value')\n        return token\n      }\n      case 'obj-value': {\n        this.modeStack.pop()\n        this.modeStack.push('obj-key')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      /* c8 ignore next 2 */\n      default:\n        throw new Error(`${decodeErrPrefix} unexpected parse state at position ${this._pos}; this shouldn't happen`)\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return _decode(data, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return _decodeFirst(data, options)\n}\n\nexport { decode, decodeFirst, Tokenizer }\n","/* eslint max-depth: [\"error\", 7] */\nimport { Token, Type } from 'cborg'\nimport * as cborgJson from 'cborg/json'\nimport { CID } from 'multiformats'\nimport { base64 } from 'multiformats/bases/base64'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @template T\n * @typedef {import('multiformats').ToString<T>} ToString\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.string, cidString, cidString.length), // value\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.map, Infinity, 1), // value\n    new Token(Type.string, 'bytes', 5), // inner key\n    new Token(Type.string, bytesString, bytesString.length), // inner value\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * taBytesEncoder wraps bytesEncoder() but for the more exotic typed arrays so\n * that we access the underlying ArrayBuffer data\n *\n * @param {Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|Uint8ClampedArray|BigInt64Array|BigUint64Array} obj\n * @returns {Token[]|null}\n */\nfunction taBytesEncoder (obj) {\n  return bytesEncoder(new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n}\n\n/**\n * abBytesEncoder wraps bytesEncoder() but for plain ArrayBuffers\n *\n * @param {ArrayBuffer} ab\n * @returns {Token[]|null}\n */\nfunction abBytesEncoder (ab) {\n  return bytesEncoder(new Uint8Array(ab))\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Buffer: bytesEncoder,\n    Uint8Array: bytesEncoder,\n    Int8Array: taBytesEncoder,\n    Uint16Array: taBytesEncoder,\n    Int16Array: taBytesEncoder,\n    Uint32Array: taBytesEncoder,\n    Int32Array: taBytesEncoder,\n    Float32Array: taBytesEncoder,\n    Float64Array: taBytesEncoder,\n    Uint8ClampedArray: taBytesEncoder,\n    BigInt64Array: taBytesEncoder,\n    BigUint64Array: taBytesEncoder,\n    DataView: taBytesEncoder,\n    ArrayBuffer: abBytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new Token(Type.tag, 42, 0)\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = base64.decode(`m${innerValueToken.value}`)\n              return new Token(Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = CID.parse\n\nexport const name = 'dag-json'\nexport const code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborgJson.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => {\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) })\n  return cborgJson.decode(data, options)\n}\n\n/**\n * @template T\n * @param {T} node\n * @returns {ToString<T>}\n */\nexport const format = (node) => utf8Decoder.decode(encode(node))\nexport { format as stringify }\nconst utf8Decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {ToString<T>} data\n * @returns {T}\n */\nexport const parse = (data) => decode(utf8Encoder.encode(data))\nconst utf8Encoder = new TextEncoder()\n","const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links = undefined // eslint-disable-line no-undef-init\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data = undefined // eslint-disable-line no-undef-init\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n","const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n","import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n","import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const pbn = decodeNode(bytes)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","/* eslint max-depth: [\"error\", 7] */\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as dagJson from '@ipld/dag-json';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as cborg from 'cborg';\nimport { Type, Token } from 'cborg';\nimport * as cborgJson from 'cborg/json';\nimport { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport * as json from 'multiformats/codecs/json';\nimport * as raw from 'multiformats/codecs/raw';\n/**\n * Dag walker for dag-pb CIDs\n */\nexport const dagPbWalker = {\n    codec: dagPb.code,\n    async *walk(block) {\n        const node = dagPb.decode(block);\n        yield* node.Links.map(l => l.Hash);\n    }\n};\n/**\n * Dag walker for raw CIDs\n */\nexport const rawWalker = {\n    codec: raw.code,\n    async *walk() {\n        // no embedded CIDs in a raw block\n    }\n};\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_TAG = 42;\n/**\n * Dag walker for dag-cbor CIDs. Does not actually use dag-cbor since\n * all we are interested in is extracting the the CIDs from the block\n * so we can just use cborg for that.\n */\nexport const dagCborWalker = {\n    codec: dagCbor.code,\n    async *walk(block) {\n        const cids = [];\n        const tags = [];\n        tags[CID_TAG] = (bytes) => {\n            if (bytes[0] !== 0) {\n                throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n            }\n            const cid = CID.decode(bytes.subarray(1)); // ignore leading 0x00\n            cids.push(cid);\n            return cid;\n        };\n        cborg.decode(block, {\n            tags\n        });\n        yield* cids;\n    }\n};\n/**\n * Borrowed from @ipld/dag-json\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n    tokenBuffer;\n    constructor(data, options) {\n        super(data, options);\n        this.tokenBuffer = [];\n    }\n    done() {\n        return this.tokenBuffer.length === 0 && super.done();\n    }\n    _next() {\n        if (this.tokenBuffer.length > 0) {\n            // @ts-expect-error https://github.com/Microsoft/TypeScript/issues/30406\n            return this.tokenBuffer.pop();\n        }\n        return super.next();\n    }\n    /**\n     * Implements rules outlined in https://github.com/ipld/specs/pull/356\n     */\n    next() {\n        const token = this._next();\n        if (token.type === Type.map) {\n            const keyToken = this._next();\n            if (keyToken.type === Type.string && keyToken.value === '/') {\n                const valueToken = this._next();\n                if (valueToken.type === Type.string) { // *must* be a CID\n                    const breakToken = this._next(); // swallow the end-of-map token\n                    if (breakToken.type !== Type.break) {\n                        throw new Error('Invalid encoded CID form');\n                    }\n                    this.tokenBuffer.push(valueToken); // CID.parse will pick this up after our tag token\n                    return new Token(Type.tag, 42, 0);\n                }\n                if (valueToken.type === Type.map) {\n                    const innerKeyToken = this._next();\n                    if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n                        const innerValueToken = this._next();\n                        if (innerValueToken.type === Type.string) { // *must* be Bytes\n                            for (let i = 0; i < 2; i++) {\n                                const breakToken = this._next(); // swallow two end-of-map tokens\n                                if (breakToken.type !== Type.break) {\n                                    throw new Error('Invalid encoded Bytes form');\n                                }\n                            }\n                            const bytes = base64.decode(`m${innerValueToken.value}`);\n                            return new Token(Type.bytes, bytes, innerValueToken.value.length);\n                        }\n                        this.tokenBuffer.push(innerValueToken); // bail\n                    }\n                    this.tokenBuffer.push(innerKeyToken); // bail\n                }\n                this.tokenBuffer.push(valueToken); // bail\n            }\n            this.tokenBuffer.push(keyToken); // bail\n        }\n        return token;\n    }\n}\n/**\n * Dag walker for dag-json CIDs. Does not actually use dag-json since\n * all we are interested in is extracting the the CIDs from the block\n * so we can just use cborg/json for that.\n */\nexport const dagJsonWalker = {\n    codec: dagJson.code,\n    async *walk(block) {\n        const cids = [];\n        const tags = [];\n        tags[CID_TAG] = (string) => {\n            const cid = CID.parse(string);\n            cids.push(cid);\n            return cid;\n        };\n        cborgJson.decode(block, {\n            tags,\n            tokenizer: new DagJsonTokenizer(block, {\n                tags,\n                allowIndefinite: true,\n                allowUndefined: true,\n                allowNaN: true,\n                allowInfinity: true,\n                allowBigInt: true,\n                strict: false,\n                rejectDuplicateMapKeys: false\n            })\n        });\n        yield* cids;\n    }\n};\n/**\n * Dag walker for json CIDs. JSON has no facility for linking to\n * external blocks so the walker is a no-op.\n */\nexport const jsonWalker = {\n    codec: json.code,\n    async *walk() { }\n};\n//# sourceMappingURL=dag-walkers.js.map","import * as cborg from 'cborg';\nimport { Key } from 'interface-datastore';\nimport { base36 } from 'multiformats/bases/base36';\nimport { CID } from 'multiformats/cid';\nimport defer from 'p-defer';\nimport PQueue from 'p-queue';\nimport { CustomProgressEvent } from 'progress-events';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { dagCborWalker, dagJsonWalker, dagPbWalker, jsonWalker, rawWalker } from './utils/dag-walkers.js';\nconst DEFAULT_DAG_WALKERS = [\n    rawWalker,\n    dagPbWalker,\n    dagCborWalker,\n    dagJsonWalker,\n    jsonWalker\n];\nconst DATASTORE_PIN_PREFIX = '/pin/';\nconst DATASTORE_BLOCK_PREFIX = '/pinned-block/';\nconst DATASTORE_ENCODING = base36;\n// const DAG_WALK_MAX_QUEUE_LENGTH = 10\nconst DAG_WALK_QUEUE_CONCURRENCY = 1;\nfunction toDSKey(cid) {\n    if (cid.version === 0) {\n        cid = cid.toV1();\n    }\n    return new Key(`${DATASTORE_PIN_PREFIX}${cid.toString(DATASTORE_ENCODING)}`);\n}\nexport class PinsImpl {\n    datastore;\n    blockstore;\n    dagWalkers;\n    constructor(datastore, blockstore, dagWalkers) {\n        this.datastore = datastore;\n        this.blockstore = blockstore;\n        this.dagWalkers = {};\n        [...DEFAULT_DAG_WALKERS, ...dagWalkers].forEach(dagWalker => {\n            this.dagWalkers[dagWalker.codec] = dagWalker;\n        });\n    }\n    async add(cid, options = {}) {\n        const pinKey = toDSKey(cid);\n        if (await this.datastore.has(pinKey)) {\n            throw new Error('Already pinned');\n        }\n        const depth = Math.round(options.depth ?? Infinity);\n        if (depth < 0) {\n            throw new Error('Depth must be greater than or equal to 0');\n        }\n        // use a queue to walk the DAG instead of recursion so we can traverse very large DAGs\n        const queue = new PQueue({\n            concurrency: DAG_WALK_QUEUE_CONCURRENCY\n        });\n        void queue.add(async () => {\n            await this.#walkDag(cid, queue, (pinnedBlock) => {\n                // do not update pinned block if this block is already pinned by this CID\n                if (pinnedBlock.pinnedBy.find(c => uint8ArrayEquals(c, cid.bytes)) != null) {\n                    return;\n                }\n                pinnedBlock.pinCount++;\n                pinnedBlock.pinnedBy.push(cid.bytes);\n            }, {\n                ...options,\n                depth\n            });\n        });\n        // if a job in the queue errors, throw that error\n        const deferred = defer();\n        queue.on('error', (err) => {\n            queue.clear();\n            deferred.reject(err);\n        });\n        // wait for the queue to complete or error\n        await Promise.race([\n            queue.onIdle(),\n            deferred.promise\n        ]);\n        const pin = {\n            depth,\n            metadata: options.metadata ?? {}\n        };\n        await this.datastore.put(pinKey, cborg.encode(pin), options);\n        return {\n            cid,\n            ...pin\n        };\n    }\n    /**\n     * Walk the DAG behind the passed CID, ensure all blocks are present in the blockstore\n     * and update the pin count for them\n     */\n    async #walkDag(cid, queue, withPinnedBlock, options) {\n        if (options.depth === -1) {\n            return;\n        }\n        const dagWalker = this.dagWalkers[cid.code];\n        if (dagWalker == null) {\n            throw new Error(`No dag walker found for cid codec ${cid.code}`);\n        }\n        const block = await this.blockstore.get(cid, options);\n        await this.#updatePinnedBlock(cid, withPinnedBlock, options);\n        // walk dag, ensure all blocks are present\n        for await (const cid of dagWalker.walk(block)) {\n            void queue.add(async () => {\n                await this.#walkDag(cid, queue, withPinnedBlock, {\n                    ...options,\n                    depth: options.depth - 1\n                });\n            });\n        }\n    }\n    /**\n     * Update the pin count for the CID\n     */\n    async #updatePinnedBlock(cid, withPinnedBlock, options) {\n        const blockKey = new Key(`${DATASTORE_BLOCK_PREFIX}${DATASTORE_ENCODING.encode(cid.multihash.bytes)}`);\n        let pinnedBlock = {\n            pinCount: 0,\n            pinnedBy: []\n        };\n        try {\n            pinnedBlock = cborg.decode(await this.datastore.get(blockKey, options));\n        }\n        catch (err) {\n            if (err.code !== 'ERR_NOT_FOUND') {\n                throw err;\n            }\n        }\n        withPinnedBlock(pinnedBlock);\n        if (pinnedBlock.pinCount === 0) {\n            if (await this.datastore.has(blockKey)) {\n                await this.datastore.delete(blockKey);\n                return;\n            }\n        }\n        await this.datastore.put(blockKey, cborg.encode(pinnedBlock), options);\n        options.onProgress?.(new CustomProgressEvent('helia:pin:add', { detail: cid }));\n    }\n    async rm(cid, options = {}) {\n        const pinKey = toDSKey(cid);\n        const buf = await this.datastore.get(pinKey, options);\n        const pin = cborg.decode(buf);\n        await this.datastore.delete(pinKey, options);\n        // use a queue to walk the DAG instead of recursion so we can traverse very large DAGs\n        const queue = new PQueue({\n            concurrency: DAG_WALK_QUEUE_CONCURRENCY\n        });\n        void queue.add(async () => {\n            await this.#walkDag(cid, queue, (pinnedBlock) => {\n                pinnedBlock.pinCount--;\n                pinnedBlock.pinnedBy = pinnedBlock.pinnedBy.filter(c => uint8ArrayEquals(c, cid.bytes));\n            }, {\n                ...options,\n                depth: pin.depth\n            });\n        });\n        await queue.onIdle();\n        return {\n            cid,\n            ...pin\n        };\n    }\n    async *ls(options = {}) {\n        for await (const { key, value } of this.datastore.query({\n            prefix: DATASTORE_PIN_PREFIX + (options.cid != null ? `${options.cid.toString(base36)}` : '')\n        }, options)) {\n            const cid = CID.parse(key.toString().substring(5), base36);\n            const pin = cborg.decode(value);\n            yield {\n                cid,\n                ...pin\n            };\n        }\n    }\n    async isPinned(cid, options = {}) {\n        const blockKey = new Key(`${DATASTORE_BLOCK_PREFIX}${DATASTORE_ENCODING.encode(cid.multihash.bytes)}`);\n        return this.datastore.has(blockKey, options);\n    }\n}\n//# sourceMappingURL=pins.js.map","import createMortice from 'mortice';\n/**\n * BlockStorage is a hybrid blockstore that puts/gets blocks from a configured\n * blockstore (that may be on disk, s3, or something else). If the blocks are\n * not present Bitswap will be used to fetch them from network peers.\n */\nexport class BlockStorage {\n    lock;\n    child;\n    pins;\n    /**\n     * Create a new BlockStorage\n     */\n    constructor(blockstore, pins, options = {}) {\n        this.child = blockstore;\n        this.pins = pins;\n        this.lock = createMortice({\n            singleProcess: options.holdGcLock\n        });\n    }\n    unwrap() {\n        return this.child;\n    }\n    /**\n     * Put a block to the underlying datastore\n     */\n    async put(cid, block, options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            return await this.child.put(cid, block, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Put a multiple blocks to the underlying datastore\n     */\n    async *putMany(blocks, options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            yield* this.child.putMany(blocks, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Get a block by cid\n     */\n    async get(cid, options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            return await this.child.get(cid, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Get multiple blocks back from an (async) iterable of cids\n     */\n    async *getMany(cids, options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            yield* this.child.getMany(cids, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Delete a block from the blockstore\n     */\n    async delete(cid, options = {}) {\n        const releaseLock = await this.lock.writeLock();\n        try {\n            if (await this.pins.isPinned(cid)) {\n                throw new Error('CID was pinned');\n            }\n            await this.child.delete(cid, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    /**\n     * Delete multiple blocks from the blockstore\n     */\n    async *deleteMany(cids, options = {}) {\n        const releaseLock = await this.lock.writeLock();\n        try {\n            const storage = this;\n            yield* this.child.deleteMany((async function* () {\n                for await (const cid of cids) {\n                    if (await storage.pins.isPinned(cid)) {\n                        throw new Error('CID was pinned');\n                    }\n                    yield cid;\n                }\n            }()), options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    async has(cid, options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            return await this.child.has(cid, options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n    async *getAll(options = {}) {\n        const releaseLock = await this.lock.readLock();\n        try {\n            yield* this.child.getAll(options);\n        }\n        finally {\n            releaseLock();\n        }\n    }\n}\n//# sourceMappingURL=storage.js.map","import { Key } from 'interface-datastore';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst DS_VERSION_KEY = new Key('/version');\nconst CURRENT_VERSION = 1;\nexport async function assertDatastoreVersionIsCurrent(datastore) {\n    if (!(await datastore.has(DS_VERSION_KEY))) {\n        await datastore.put(DS_VERSION_KEY, uint8ArrayFromString(`${CURRENT_VERSION}`));\n        return;\n    }\n    const buf = await datastore.get(DS_VERSION_KEY);\n    const str = uint8ArrayToString(buf);\n    const version = parseInt(str, 10);\n    if (version !== CURRENT_VERSION) {\n        // TODO: write migrations when we break compatibility - for an example, see https://github.com/ipfs/js-ipfs-repo/tree/master/packages/ipfs-repo-migrations\n        throw new Error('Unknown datastore version, a datastore migration may be required');\n    }\n}\n//# sourceMappingURL=datastore-version.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for await (const entry of peekable) {\n                if (await fn(entry)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","import peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction forEach(source, fn) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const thing of source) {\n                await fn(thing);\n                yield thing;\n            }\n        })();\n    }\n    // if fn function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value);\n    if (typeof res?.then === 'function') {\n        return (async function* () {\n            yield value;\n            for await (const val of peekable) {\n                await fn(val);\n                yield val;\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        yield value;\n        for (const val of peekable) {\n            func(val);\n            yield val;\n        }\n    })();\n}\nexport default forEach;\n//# sourceMappingURL=index.js.map","import filter from 'it-filter';\nimport forEach from 'it-foreach';\nimport { CustomProgressEvent } from 'progress-events';\n/**\n * Networked storage wraps a regular blockstore - when getting blocks if the\n * blocks are not present Bitswap will be used to fetch them from network peers.\n */\nexport class NetworkedStorage {\n    child;\n    bitswap;\n    /**\n     * Create a new BlockStorage\n     */\n    constructor(blockstore, options = {}) {\n        this.child = blockstore;\n        this.bitswap = options.bitswap;\n    }\n    unwrap() {\n        return this.child;\n    }\n    /**\n     * Put a block to the underlying datastore\n     */\n    async put(cid, block, options = {}) {\n        if (await this.child.has(cid)) {\n            options.onProgress?.(new CustomProgressEvent('blocks:put:duplicate', cid));\n            return cid;\n        }\n        if (this.bitswap?.isStarted() === true) {\n            options.onProgress?.(new CustomProgressEvent('blocks:put:bitswap:notify', cid));\n            this.bitswap.notify(cid, block, options);\n        }\n        options.onProgress?.(new CustomProgressEvent('blocks:put:blockstore:put', cid));\n        return this.child.put(cid, block, options);\n    }\n    /**\n     * Put a multiple blocks to the underlying datastore\n     */\n    async *putMany(blocks, options = {}) {\n        const missingBlocks = filter(blocks, async ({ cid }) => {\n            const has = await this.child.has(cid);\n            if (has) {\n                options.onProgress?.(new CustomProgressEvent('blocks:put-many:duplicate', cid));\n            }\n            return !has;\n        });\n        const notifyEach = forEach(missingBlocks, ({ cid, block }) => {\n            options.onProgress?.(new CustomProgressEvent('blocks:put-many:bitswap:notify', cid));\n            this.bitswap?.notify(cid, block, options);\n        });\n        options.onProgress?.(new CustomProgressEvent('blocks:put-many:blockstore:put-many'));\n        yield* this.child.putMany(notifyEach, options);\n    }\n    /**\n     * Get a block by cid\n     */\n    async get(cid, options = {}) {\n        if (options.offline !== true && this.bitswap?.isStarted() != null && !(await this.child.has(cid))) {\n            options.onProgress?.(new CustomProgressEvent('blocks:get:bitswap:get', cid));\n            const block = await this.bitswap.want(cid, options);\n            options.onProgress?.(new CustomProgressEvent('blocks:get:blockstore:put', cid));\n            await this.child.put(cid, block, options);\n            return block;\n        }\n        options.onProgress?.(new CustomProgressEvent('blocks:get:blockstore:get', cid));\n        return this.child.get(cid, options);\n    }\n    /**\n     * Get multiple blocks back from an (async) iterable of cids\n     */\n    async *getMany(cids, options = {}) {\n        options.onProgress?.(new CustomProgressEvent('blocks:get-many:blockstore:get-many'));\n        yield* this.child.getMany(forEach(cids, async (cid) => {\n            if (options.offline !== true && this.bitswap?.isStarted() === true && !(await this.child.has(cid))) {\n                options.onProgress?.(new CustomProgressEvent('blocks:get-many:bitswap:get', cid));\n                const block = await this.bitswap.want(cid, options);\n                options.onProgress?.(new CustomProgressEvent('blocks:get-many:blockstore:put', cid));\n                await this.child.put(cid, block, options);\n            }\n        }));\n    }\n    /**\n     * Delete a block from the blockstore\n     */\n    async delete(cid, options = {}) {\n        options.onProgress?.(new CustomProgressEvent('blocks:delete:blockstore:delete', cid));\n        await this.child.delete(cid, options);\n    }\n    /**\n     * Delete multiple blocks from the blockstore\n     */\n    async *deleteMany(cids, options = {}) {\n        options.onProgress?.(new CustomProgressEvent('blocks:delete-many:blockstore:delete-many'));\n        yield* this.child.deleteMany((async function* () {\n            for await (const cid of cids) {\n                yield cid;\n            }\n        }()), options);\n    }\n    async has(cid, options = {}) {\n        return this.child.has(cid, options);\n    }\n    async *getAll(options = {}) {\n        options.onProgress?.(new CustomProgressEvent('blocks:get-all:blockstore:get-many'));\n        yield* this.child.getAll(options);\n    }\n}\n//# sourceMappingURL=networked-storage.js.map","import { logger } from '@libp2p/logger';\nimport { createBitswap } from 'ipfs-bitswap';\nimport drain from 'it-drain';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256, sha512 } from 'multiformats/hashes/sha2';\nimport { CustomProgressEvent } from 'progress-events';\nimport { PinsImpl } from './pins.js';\nimport { BlockStorage } from './storage.js';\nimport { assertDatastoreVersionIsCurrent } from './utils/datastore-version.js';\nimport { NetworkedStorage } from './utils/networked-storage.js';\nconst log = logger('helia');\nexport class HeliaImpl {\n    libp2p;\n    blockstore;\n    datastore;\n    pins;\n    #bitswap;\n    constructor(init) {\n        const hashers = [\n            sha256,\n            sha512,\n            identity,\n            ...(init.hashers ?? [])\n        ];\n        this.#bitswap = createBitswap(init.libp2p, init.blockstore, {\n            hashLoader: {\n                getHasher: async (codecOrName) => {\n                    const hasher = hashers.find(hasher => {\n                        return hasher.code === codecOrName || hasher.name === codecOrName;\n                    });\n                    if (hasher != null) {\n                        return hasher;\n                    }\n                    throw new Error(`Could not load hasher for code/name \"${codecOrName}\"`);\n                }\n            }\n        });\n        const networkedStorage = new NetworkedStorage(init.blockstore, {\n            bitswap: this.#bitswap\n        });\n        this.pins = new PinsImpl(init.datastore, networkedStorage, init.dagWalkers ?? []);\n        this.libp2p = init.libp2p;\n        this.blockstore = new BlockStorage(networkedStorage, this.pins, {\n            holdGcLock: init.holdGcLock\n        });\n        this.datastore = init.datastore;\n    }\n    async start() {\n        await assertDatastoreVersionIsCurrent(this.datastore);\n        await this.#bitswap?.start();\n        await this.libp2p.start();\n    }\n    async stop() {\n        await this.libp2p.stop();\n        await this.#bitswap?.stop();\n    }\n    async gc(options = {}) {\n        const releaseLock = await this.blockstore.lock.writeLock();\n        try {\n            const helia = this;\n            const blockstore = this.blockstore.unwrap();\n            log('gc start');\n            await drain(blockstore.deleteMany((async function* () {\n                for await (const { cid } of blockstore.getAll()) {\n                    try {\n                        if (await helia.pins.isPinned(cid, options)) {\n                            continue;\n                        }\n                        yield cid;\n                        options.onProgress?.(new CustomProgressEvent('helia:gc:deleted', cid));\n                    }\n                    catch (err) {\n                        log.error('Error during gc', err);\n                        options.onProgress?.(new CustomProgressEvent('helia:gc:error', err));\n                    }\n                }\n            }())));\n        }\n        finally {\n            releaseLock();\n        }\n        log('gc finished');\n    }\n}\n//# sourceMappingURL=helia.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","// @ts-check\n\nimport { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { symbol } from '@libp2p/interface/peer-id';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst baseDecoder = Object\n    .values(bases)\n    .map(codec => codec.decoder)\n    // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n    .reduce((acc, curr) => acc.or(curr), bases.identity.decoder);\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36;\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37;\nclass PeerIdImpl {\n    type;\n    multihash;\n    privateKey;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        this.privateKey = init.privateKey;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [symbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.multihash.bytes;\n    }\n    /**\n     * Returns Multiaddr as a JSON string\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id instanceof Uint8Array) {\n            return uint8ArrayEquals(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return peerIdFromString(id).equals(this);\n        }\n        else if (id?.multihash?.bytes != null) {\n            return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nclass RSAPeerIdImpl extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nclass Ed25519PeerIdImpl extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nclass Secp256k1PeerIdImpl extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nexport function createPeerId(init) {\n    if (init.type === 'RSA') {\n        return new RSAPeerIdImpl(init);\n    }\n    if (init.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(init);\n    }\n    if (init.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(init);\n    }\n    throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromPeerId(other) {\n    if (other.type === 'RSA') {\n        return new RSAPeerIdImpl(other);\n    }\n    if (other.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(other);\n    }\n    if (other.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(other);\n    }\n    throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromString(str, decoder) {\n    decoder = decoder ?? baseDecoder;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        const multihash = Digest.decode(base58btc.decode(`z${str}`));\n        if (str.startsWith('12D')) {\n            return new Ed25519PeerIdImpl({ multihash });\n        }\n        else if (str.startsWith('16U')) {\n            return new Secp256k1PeerIdImpl({ multihash });\n        }\n        else {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    return peerIdFromBytes(baseDecoder.decode(str));\n}\nexport function peerIdFromBytes(buf) {\n    try {\n        const multihash = Digest.decode(buf);\n        if (multihash.code === identity.code) {\n            if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n                return new Ed25519PeerIdImpl({ multihash });\n            }\n            else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n                return new Secp256k1PeerIdImpl({ multihash });\n            }\n        }\n        if (multihash.code === sha256.code) {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    catch {\n        return peerIdFromCID(CID.decode(buf));\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\nexport function peerIdFromCID(cid) {\n    if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n        throw new Error('Supplied PeerID CID is invalid');\n    }\n    const multihash = cid.multihash;\n    if (multihash.code === sha256.code) {\n        return new RSAPeerIdImpl({ multihash: cid.multihash });\n    }\n    else if (multihash.code === identity.code) {\n        if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n            return new Ed25519PeerIdImpl({ multihash: cid.multihash });\n        }\n        else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n            return new Secp256k1PeerIdImpl({ multihash: cid.multihash });\n        }\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys(publicKey, privateKey) {\n    if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey });\n}\n//# sourceMappingURL=index.js.map","import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","export class MessageCache {\n    gossip;\n    msgs = new Map();\n    msgIdToStrFn;\n    history = [];\n    /** Track with accounting of messages in the mcache that are not yet validated */\n    notValidatedCount = 0;\n    /**\n     * Holds history of messages in timebounded history arrays\n     */\n    constructor(\n    /**\n     * The number of indices in the cache history used for gossiping. That means that a message\n     * won't get gossiped anymore when shift got called `gossip` many times after inserting the\n     * message in the cache.\n     */\n    gossip, historyCapacity, msgIdToStrFn) {\n        this.gossip = gossip;\n        this.msgIdToStrFn = msgIdToStrFn;\n        for (let i = 0; i < historyCapacity; i++) {\n            this.history[i] = [];\n        }\n    }\n    get size() {\n        return this.msgs.size;\n    }\n    /**\n     * Adds a message to the current window and the cache\n     * Returns true if the message is not known and is inserted in the cache\n     */\n    put(messageId, msg, validated = false) {\n        const { msgIdStr } = messageId;\n        // Don't add duplicate entries to the cache.\n        if (this.msgs.has(msgIdStr)) {\n            return false;\n        }\n        this.msgs.set(msgIdStr, {\n            message: msg,\n            validated,\n            originatingPeers: new Set(),\n            iwantCounts: new Map()\n        });\n        this.history[0].push({ ...messageId, topic: msg.topic });\n        if (!validated) {\n            this.notValidatedCount++;\n        }\n        return true;\n    }\n    observeDuplicate(msgId, fromPeerIdStr) {\n        const entry = this.msgs.get(msgId);\n        if (entry &&\n            // if the message is already validated, we don't need to store extra peers sending us\n            // duplicates as the message has already been forwarded\n            !entry.validated) {\n            entry.originatingPeers.add(fromPeerIdStr);\n        }\n    }\n    /**\n     * Retrieves a message from the cache by its ID, if it is still present\n     */\n    get(msgId) {\n        return this.msgs.get(this.msgIdToStrFn(msgId))?.message;\n    }\n    /**\n     * Increases the iwant count for the given message by one and returns the message together\n     * with the iwant if the message exists.\n     */\n    getWithIWantCount(msgIdStr, p) {\n        const msg = this.msgs.get(msgIdStr);\n        if (!msg) {\n            return null;\n        }\n        const count = (msg.iwantCounts.get(p) ?? 0) + 1;\n        msg.iwantCounts.set(p, count);\n        return { msg: msg.message, count };\n    }\n    /**\n     * Retrieves a list of message IDs for a set of topics\n     */\n    getGossipIDs(topics) {\n        const msgIdsByTopic = new Map();\n        for (let i = 0; i < this.gossip; i++) {\n            this.history[i].forEach((entry) => {\n                const msg = this.msgs.get(entry.msgIdStr);\n                if (msg && msg.validated && topics.has(entry.topic)) {\n                    let msgIds = msgIdsByTopic.get(entry.topic);\n                    if (!msgIds) {\n                        msgIds = [];\n                        msgIdsByTopic.set(entry.topic, msgIds);\n                    }\n                    msgIds.push(entry.msgId);\n                }\n            });\n        }\n        return msgIdsByTopic;\n    }\n    /**\n     * Gets a message with msgId and tags it as validated.\n     * This function also returns the known peers that have sent us this message. This is used to\n     * prevent us sending redundant messages to peers who have already propagated it.\n     */\n    validate(msgId) {\n        const entry = this.msgs.get(msgId);\n        if (!entry) {\n            return null;\n        }\n        if (!entry.validated) {\n            this.notValidatedCount--;\n        }\n        const { message, originatingPeers } = entry;\n        entry.validated = true;\n        // Clear the known peers list (after a message is validated, it is forwarded and we no\n        // longer need to store the originating peers).\n        entry.originatingPeers = new Set();\n        return { message, originatingPeers };\n    }\n    /**\n     * Shifts the current window, discarding messages older than this.history.length of the cache\n     */\n    shift() {\n        const lastCacheEntries = this.history[this.history.length - 1];\n        lastCacheEntries.forEach((cacheEntry) => {\n            const entry = this.msgs.get(cacheEntry.msgIdStr);\n            if (entry) {\n                this.msgs.delete(cacheEntry.msgIdStr);\n                if (!entry.validated) {\n                    this.notValidatedCount--;\n                }\n            }\n        });\n        this.history.pop();\n        this.history.unshift([]);\n    }\n    remove(msgId) {\n        const entry = this.msgs.get(msgId);\n        if (!entry) {\n            return null;\n        }\n        // Keep the message on the history vector, it will be dropped on a shift()\n        this.msgs.delete(msgId);\n        return entry;\n    }\n}\n//# sourceMappingURL=message-cache.js.map","import cjs from \"./rpc.cjs\"\n\nexport const {RPC} = cjs\n","export const second = 1000;\nexport const minute = 60 * second;\n// Protocol identifiers\nexport const FloodsubID = '/floodsub/1.0.0';\n/**\n * The protocol ID for version 1.0.0 of the Gossipsub protocol\n * It is advertised along with GossipsubIDv11 for backwards compatability\n */\nexport const GossipsubIDv10 = '/meshsub/1.0.0';\n/**\n * The protocol ID for version 1.1.0 of the Gossipsub protocol\n * See the spec for details about how v1.1.0 compares to v1.0.0:\n * https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md\n */\nexport const GossipsubIDv11 = '/meshsub/1.1.0';\n// Overlay parameters\n/**\n * GossipsubD sets the optimal degree for a Gossipsub topic mesh. For example, if GossipsubD == 6,\n * each peer will want to have about six peers in their mesh for each topic they're subscribed to.\n * GossipsubD should be set somewhere between GossipsubDlo and GossipsubDhi.\n */\nexport const GossipsubD = 6;\n/**\n * GossipsubDlo sets the lower bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have fewer than GossipsubDlo peers, we will attempt to graft some more into the mesh at\n * the next heartbeat.\n */\nexport const GossipsubDlo = 4;\n/**\n * GossipsubDhi sets the upper bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have more than GossipsubDhi peers, we will select some to prune from the mesh at the next heartbeat.\n */\nexport const GossipsubDhi = 12;\n/**\n * GossipsubDscore affects how peers are selected when pruning a mesh due to over subscription.\n * At least GossipsubDscore of the retained peers will be high-scoring, while the remainder are\n * chosen randomly.\n */\nexport const GossipsubDscore = 4;\n/**\n * GossipsubDout sets the quota for the number of outbound connections to maintain in a topic mesh.\n * When the mesh is pruned due to over subscription, we make sure that we have outbound connections\n * to at least GossipsubDout of the survivor peers. This prevents sybil attackers from overwhelming\n * our mesh with incoming connections.\n *\n * GossipsubDout must be set below GossipsubDlo, and must not exceed GossipsubD / 2.\n */\nexport const GossipsubDout = 2;\n// Gossip parameters\n/**\n * GossipsubHistoryLength controls the size of the message cache used for gossip.\n * The message cache will remember messages for GossipsubHistoryLength heartbeats.\n */\nexport const GossipsubHistoryLength = 5;\n/**\n * GossipsubHistoryGossip controls how many cached message ids we will advertise in\n * IHAVE gossip messages. When asked for our seen message IDs, we will return\n * only those from the most recent GossipsubHistoryGossip heartbeats. The slack between\n * GossipsubHistoryGossip and GossipsubHistoryLength allows us to avoid advertising messages\n * that will be expired by the time they're requested.\n *\n * GossipsubHistoryGossip must be less than or equal to GossipsubHistoryLength to\n * avoid a runtime panic.\n */\nexport const GossipsubHistoryGossip = 3;\n/**\n * GossipsubDlazy affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to at least GossipsubDlazy peers outside our mesh. The actual\n * number may be more, depending on GossipsubGossipFactor and how many peers we're\n * connected to.\n */\nexport const GossipsubDlazy = 6;\n/**\n * GossipsubGossipFactor affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to GossipsubGossipFactor * (total number of non-mesh peers), or\n * GossipsubDlazy, whichever is greater.\n */\nexport const GossipsubGossipFactor = 0.25;\n/**\n * GossipsubGossipRetransmission controls how many times we will allow a peer to request\n * the same message id through IWANT gossip before we start ignoring them. This is designed\n * to prevent peers from spamming us with requests and wasting our resources.\n */\nexport const GossipsubGossipRetransmission = 3;\n// Heartbeat interval\n/**\n * GossipsubHeartbeatInitialDelay is the short delay before the heartbeat timer begins\n * after the router is initialized.\n */\nexport const GossipsubHeartbeatInitialDelay = 100;\n/**\n * GossipsubHeartbeatInterval controls the time between heartbeats.\n */\nexport const GossipsubHeartbeatInterval = second;\n/**\n * GossipsubFanoutTTL controls how long we keep track of the fanout state. If it's been\n * GossipsubFanoutTTL since we've published to a topic that we're not subscribed to,\n * we'll delete the fanout map for that topic.\n */\nexport const GossipsubFanoutTTL = minute;\n/**\n * GossipsubPrunePeers controls the number of peers to include in prune Peer eXchange.\n * When we prune a peer that's eligible for PX (has a good score, etc), we will try to\n * send them signed peer records for up to GossipsubPrunePeers other peers that we\n * know of.\n */\nexport const GossipsubPrunePeers = 16;\n/**\n * GossipsubPruneBackoff controls the backoff time for pruned peers. This is how long\n * a peer must wait before attempting to graft into our mesh again after being pruned.\n * When pruning a peer, we send them our value of GossipsubPruneBackoff so they know\n * the minimum time to wait. Peers running older versions may not send a backoff time,\n * so if we receive a prune message without one, we will wait at least GossipsubPruneBackoff\n * before attempting to re-graft.\n */\nexport const GossipsubPruneBackoff = minute;\n/**\n * Backoff to use when unsuscribing from a topic. Should not resubscribe to this topic before it expired.\n */\nexport const GossipsubUnsubscribeBackoff = 10 * second;\n/**\n * GossipsubPruneBackoffTicks is the number of heartbeat ticks for attempting to prune expired\n * backoff timers.\n */\nexport const GossipsubPruneBackoffTicks = 15;\n/**\n * GossipsubConnectors controls the number of active connection attempts for peers obtained through PX.\n */\nexport const GossipsubConnectors = 8;\n/**\n * GossipsubMaxPendingConnections sets the maximum number of pending connections for peers attempted through px.\n */\nexport const GossipsubMaxPendingConnections = 128;\n/**\n * GossipsubConnectionTimeout controls the timeout for connection attempts.\n */\nexport const GossipsubConnectionTimeout = 30 * second;\n/**\n * GossipsubDirectConnectTicks is the number of heartbeat ticks for attempting to reconnect direct peers\n * that are not currently connected.\n */\nexport const GossipsubDirectConnectTicks = 300;\n/**\n * GossipsubDirectConnectInitialDelay is the initial delay before opening connections to direct peers\n */\nexport const GossipsubDirectConnectInitialDelay = second;\n/**\n * GossipsubOpportunisticGraftTicks is the number of heartbeat ticks for attempting to improve the mesh\n * with opportunistic grafting. Every GossipsubOpportunisticGraftTicks we will attempt to select some\n * high-scoring mesh peers to replace lower-scoring ones, if the median score of our mesh peers falls\n * below a threshold\n */\nexport const GossipsubOpportunisticGraftTicks = 60;\n/**\n * GossipsubOpportunisticGraftPeers is the number of peers to opportunistically graft.\n */\nexport const GossipsubOpportunisticGraftPeers = 2;\n/**\n * If a GRAFT comes before GossipsubGraftFloodThreshold has elapsed since the last PRUNE,\n * then there is an extra score penalty applied to the peer through P7.\n */\nexport const GossipsubGraftFloodThreshold = 10 * second;\n/**\n * GossipsubMaxIHaveLength is the maximum number of messages to include in an IHAVE message.\n * Also controls the maximum number of IHAVE ids we will accept and request with IWANT from a\n * peer within a heartbeat, to protect from IHAVE floods. You should adjust this value from the\n * default if your system is pushing more than 5000 messages in GossipsubHistoryGossip heartbeats;\n * with the defaults this is 1666 messages/s.\n */\nexport const GossipsubMaxIHaveLength = 5000;\n/**\n * GossipsubMaxIHaveMessages is the maximum number of IHAVE messages to accept from a peer within a heartbeat.\n */\nexport const GossipsubMaxIHaveMessages = 10;\n/**\n * Time to wait for a message requested through IWANT following an IHAVE advertisement.\n * If the message is not received within this window, a broken promise is declared and\n * the router may apply bahavioural penalties.\n */\nexport const GossipsubIWantFollowupTime = 3 * second;\n/**\n * Time in milliseconds to keep message ids in the seen cache\n */\nexport const GossipsubSeenTTL = 2 * minute;\nexport const TimeCacheDuration = 120 * 1000;\nexport const ERR_TOPIC_VALIDATOR_REJECT = 'ERR_TOPIC_VALIDATOR_REJECT';\nexport const ERR_TOPIC_VALIDATOR_IGNORE = 'ERR_TOPIC_VALIDATOR_IGNORE';\n/**\n * If peer score is better than this, we accept messages from this peer\n * within ACCEPT_FROM_WHITELIST_DURATION_MS from the last time computing score.\n **/\nexport const ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE = 0;\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept up to this\n * number of messages from that peer.\n */\nexport const ACCEPT_FROM_WHITELIST_MAX_MESSAGES = 128;\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept messages from\n * this peer up to this time duration.\n */\nexport const ACCEPT_FROM_WHITELIST_DURATION_MS = 1000;\n/**\n * The default MeshMessageDeliveriesWindow to be used in metrics.\n */\nexport const DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS = 1000;\n/** Wait for 1 more heartbeats before clearing a backoff */\nexport const BACKOFF_SLACK = 1;\n//# sourceMappingURL=constants.js.map","/**\n * Pseudo-randomly shuffles an array\n *\n * Mutates the input array\n */\nexport function shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = () => {\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n}\n//# sourceMappingURL=shuffle.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import { toString } from 'uint8arrays/to-string';\n/**\n * Browser friendly function to convert Uint8Array message id to base64 string.\n */\nexport function messageIdToString(msgId) {\n    return toString(msgId, 'base64');\n}\n//# sourceMappingURL=messageIdToString.js.map","import { asUint8Array } from './util/as-uint8array.js';\nimport bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import { ed25519 as ed } from '@noble/curves/ed25519';\nconst PUBLIC_KEY_BYTE_LENGTH = 32;\nconst PRIVATE_KEY_BYTE_LENGTH = 64; // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport async function generateKey() {\n    // the actual private key (32 bytes)\n    const privateKeyRaw = ed.utils.randomPrivateKey();\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    // concatenated the public key to the private key\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport async function generateKeyFromSeed(seed) {\n    if (seed.length !== KEYS_BYTE_LENGTH) {\n        throw new TypeError('\"seed\" must be 32 bytes in length.');\n    }\n    else if (!(seed instanceof Uint8Array)) {\n        throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.');\n    }\n    // based on node forges algorithm, the seed is used directly as private key\n    const privateKeyRaw = seed;\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nexport async function hashAndSign(privateKey, msg) {\n    const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH);\n    return ed.sign(msg, privateKeyRaw);\n}\nexport async function hashAndVerify(publicKey, sig, msg) {\n    return ed.verify(sig, msg, publicKey);\n}\nfunction concatKeys(privateKeyRaw, publicKey) {\n    const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);\n    for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n        privateKey[i] = privateKeyRaw[i];\n        privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i];\n    }\n    return privateKey;\n}\n//# sourceMappingURL=ed25519-browser.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/* eslint-env browser */\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n    get(win = globalThis) {\n        const nativeCrypto = win.crypto;\n        if (nativeCrypto == null || nativeCrypto.subtle == null) {\n            throw Object.assign(new Error('Missing Web Crypto API. ' +\n                'The most likely cause of this error is that this page is being accessed ' +\n                'from an insecure context (i.e. not HTTPS). For more information and ' +\n                'possible resolutions see ' +\n                'https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api'), { code: 'ERR_MISSING_WEB_CRYPTO' });\n        }\n        return nativeCrypto;\n    }\n};\n//# sourceMappingURL=webcrypto.js.map","import { concat } from 'uint8arrays/concat';\nimport { fromString } from 'uint8arrays/from-string';\nimport webcrypto from '../webcrypto.js';\n// WebKit on Linux does not support deriving a key from an empty PBKDF2 key.\n// So, as a workaround, we provide the generated key as a constant. We test that\n// this generated key is accurate in test/workaround.spec.ts\n// Generated via:\n// await crypto.subtle.exportKey('jwk',\n//   await crypto.subtle.deriveKey(\n//     { name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } },\n//     await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']),\n//     { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt'])\n// )\nexport const derivedEmptyPasswordKey = { alg: 'A128GCM', ext: true, k: 'scm9jmO_4BJAgdwWGVulLg', key_ops: ['encrypt', 'decrypt'], kty: 'oct' };\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\nexport function create(opts) {\n    const algorithm = opts?.algorithm ?? 'AES-GCM';\n    let keyLength = opts?.keyLength ?? 16;\n    const nonceLength = opts?.nonceLength ?? 12;\n    const digest = opts?.digest ?? 'SHA-256';\n    const saltLength = opts?.saltLength ?? 16;\n    const iterations = opts?.iterations ?? 32767;\n    const crypto = webcrypto.get();\n    keyLength *= 8; // Browser crypto uses bits instead of bytes\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to encrypt the data.\n     */\n    async function encrypt(data, password) {\n        const salt = crypto.getRandomValues(new Uint8Array(saltLength));\n        const nonce = crypto.getRandomValues(new Uint8Array(nonceLength));\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['encrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            }\n        }\n        else {\n            // Derive a key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt']);\n        }\n        // Encrypt the string.\n        const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data);\n        return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)]);\n    }\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to decrypt the data. The options used to create\n     * this decryption cipher must be the same as those used to create\n     * the encryption cipher.\n     */\n    async function decrypt(data, password) {\n        const salt = data.subarray(0, saltLength);\n        const nonce = data.subarray(saltLength, saltLength + nonceLength);\n        const ciphertext = data.subarray(saltLength + nonceLength);\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['decrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['decrypt']);\n            }\n        }\n        else {\n            // Derive the key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt']);\n        }\n        // Decrypt the string.\n        const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext);\n        return new Uint8Array(plaintext);\n    }\n    const cipher = {\n        encrypt,\n        decrypt\n    };\n    return cipher;\n}\n//# sourceMappingURL=aes-gcm.browser.js.map","import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter(privateKey, password) {\n    const cipher = ciphers.create();\n    const encryptedKey = await cipher.encrypt(privateKey, password);\n    return base64.encode(encryptedKey);\n}\n//# sourceMappingURL=exporter.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"RSA\"] = \"RSA\";\n    KeyType[\"Ed25519\"] = \"Ed25519\";\n    KeyType[\"Secp256k1\"] = \"Secp256k1\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n    __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n    __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n    __KeyTypeValues[__KeyTypeValues[\"Secp256k1\"] = 2] = \"Secp256k1\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n    KeyType.codec = () => {\n        return enumeration(__KeyTypeValues);\n    };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n    let _codec;\n    PublicKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PublicKey.encode = (obj) => {\n        return encodeMessage(obj, PublicKey.codec());\n    };\n    PublicKey.decode = (buf) => {\n        return decodeMessage(buf, PublicKey.codec());\n    };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n    let _codec;\n    PrivateKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PrivateKey.encode = (obj) => {\n        return encodeMessage(obj, PrivateKey.codec());\n    };\n    PrivateKey.decode = (buf) => {\n        return decodeMessage(buf, PrivateKey.codec());\n    };\n})(PrivateKey || (PrivateKey = {}));\n//# sourceMappingURL=keys.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as crypto from './ed25519.js';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nexport class Ed25519PublicKey {\n    _key;\n    constructor(key) {\n        this._key = ensureKey(key, crypto.publicKeyLength);\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Ed25519PrivateKey {\n    _key;\n    _publicKey;\n    // key       - 64 byte Uint8Array containing private key\n    // publicKey - 32 byte Uint8Array containing public key\n    constructor(key, publicKey) {\n        this._key = ensureKey(key, crypto.privateKeyLength);\n        this._publicKey = ensureKey(publicKey, crypto.publicKeyLength);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Ed25519PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the identity multihash containing its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     *\n     * @returns {Promise<string>}\n     */\n    async id() {\n        const encoding = identity.digest(this.public.bytes);\n        return base58btc.encode(encoding.bytes).substring(1);\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalEd25519PrivateKey(bytes) {\n    // Try the old, redundant public key version\n    if (bytes.length > crypto.privateKeyLength) {\n        bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength);\n        const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n        const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length);\n        return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n    }\n    bytes = ensureKey(bytes, crypto.privateKeyLength);\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n    const publicKeyBytes = bytes.subarray(crypto.publicKeyLength);\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n}\nexport function unmarshalEd25519PublicKey(bytes) {\n    bytes = ensureKey(bytes, crypto.publicKeyLength);\n    return new Ed25519PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const { privateKey, publicKey } = await crypto.generateKey();\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nexport async function generateKeyPairFromSeed(seed) {\n    const { privateKey, publicKey } = await crypto.generateKeyFromSeed(seed);\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nfunction ensureKey(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE');\n    }\n    return key;\n}\n//# sourceMappingURL=ed25519-class.js.map","import 'node-forge/lib/util.js';\nimport 'node-forge/lib/jsbn.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport function bigIntegerToUintBase64url(num, len) {\n    // Call `.abs()` to convert to unsigned\n    let buf = Uint8Array.from(num.abs().toByteArray()); // toByteArray converts to big endian\n    // toByteArray() gives us back a signed array, which will include a leading 0\n    // byte if the most significant bit of the number is 1:\n    // https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-integer\n    // Our number will always be positive so we should remove the leading padding.\n    buf = buf[0] === 0 ? buf.subarray(1) : buf;\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return uint8ArrayToString(buf, 'base64url');\n}\n// Convert a base64url encoded string to a BigInteger\nexport function base64urlToBigInteger(str) {\n    const buf = base64urlToBuffer(str);\n    return new forge.jsbn.BigInteger(uint8ArrayToString(buf, 'base16'), 16);\n}\nexport function base64urlToBuffer(str, len) {\n    let buf = uint8ArrayFromString(str, 'base64urlpad');\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return buf;\n}\n//# sourceMappingURL=util.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64urlToBuffer } from '../util.js';\nimport webcrypto from '../webcrypto.js';\nconst bits = {\n    'P-256': 256,\n    'P-384': 384,\n    'P-521': 521\n};\nconst curveTypes = Object.keys(bits);\nconst names = curveTypes.join(' / ');\nexport async function generateEphmeralKeyPair(curve) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'ECDH',\n        namedCurve: curve\n    }, true, ['deriveBits']);\n    // forcePrivate is used for testing only\n    const genSharedKey = async (theirPub, forcePrivate) => {\n        let privateKey;\n        if (forcePrivate != null) {\n            privateKey = await webcrypto.get().subtle.importKey('jwk', unmarshalPrivateKey(curve, forcePrivate), {\n                name: 'ECDH',\n                namedCurve: curve\n            }, false, ['deriveBits']);\n        }\n        else {\n            privateKey = pair.privateKey;\n        }\n        const key = await webcrypto.get().subtle.importKey('jwk', unmarshalPublicKey(curve, theirPub), {\n            name: 'ECDH',\n            namedCurve: curve\n        }, false, []);\n        const buffer = await webcrypto.get().subtle.deriveBits({\n            name: 'ECDH',\n            // @ts-expect-error namedCurve is missing from the types\n            namedCurve: curve,\n            public: key\n        }, privateKey, bits[curve]);\n        return new Uint8Array(buffer, 0, buffer.byteLength);\n    };\n    const publicKey = await webcrypto.get().subtle.exportKey('jwk', pair.publicKey);\n    const ecdhKey = {\n        key: marshalPublicKey(publicKey),\n        genSharedKey\n    };\n    return ecdhKey;\n}\nconst curveLengths = {\n    'P-256': 32,\n    'P-384': 48,\n    'P-521': 66\n};\n// Marshal converts a jwk encoded ECDH public key into the\n// form specified in section 4.3.6 of ANSI X9.62. (This is the format\n// go-ipfs uses)\nfunction marshalPublicKey(jwk) {\n    if (jwk.crv == null || jwk.x == null || jwk.y == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    if (jwk.crv !== 'P-256' && jwk.crv !== 'P-384' && jwk.crv !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${jwk.crv}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[jwk.crv];\n    return uint8ArrayConcat([\n        Uint8Array.from([4]),\n        base64urlToBuffer(jwk.x, byteLen),\n        base64urlToBuffer(jwk.y, byteLen)\n    ], 1 + byteLen * 2);\n}\n// Unmarshal converts a point, serialized by Marshal, into an jwk encoded key\nfunction unmarshalPublicKey(curve, key) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[curve];\n    if (!uint8ArrayEquals(key.subarray(0, 1), Uint8Array.from([4]))) {\n        throw new CodeError('Cannot unmarshal public key - invalid key format', 'ERR_INVALID_KEY_FORMAT');\n    }\n    return {\n        kty: 'EC',\n        crv: curve,\n        x: uint8ArrayToString(key.subarray(1, byteLen + 1), 'base64url'),\n        y: uint8ArrayToString(key.subarray(1 + byteLen), 'base64url'),\n        ext: true\n    };\n}\nconst unmarshalPrivateKey = (curve, key) => ({\n    ...unmarshalPublicKey(curve, key.public),\n    d: uint8ArrayToString(key.private, 'base64url')\n});\n//# sourceMappingURL=ecdh-browser.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { randomBytes as randB } from '@noble/hashes/utils';\nexport default function randomBytes(length) {\n    if (isNaN(length) || length <= 0) {\n        throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH');\n    }\n    return randB(length);\n}\n//# sourceMappingURL=random-bytes.js.map","import 'node-forge/lib/rsa.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { base64urlToBigInteger } from '../util.js';\nfunction convert(key, types) {\n    return types.map(t => base64urlToBigInteger(key[t]));\n}\nexport function jwk2priv(key) {\n    return forge.pki.setRsaPrivateKey(...convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi']));\n}\nexport function jwk2pub(key) {\n    return forge.pki.setRsaPublicKey(...convert(key, ['n', 'e']));\n}\n//# sourceMappingURL=jwk2pem.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport randomBytes from '../random-bytes.js';\nimport webcrypto from '../webcrypto.js';\nimport { jwk2pub, jwk2priv } from './jwk2pem.js';\nimport * as utils from './rsa-utils.js';\nexport { utils };\nexport async function generateKey(bits) {\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: 'SHA-256' }\n    }, true, ['sign', 'verify']);\n    const keys = await exportKey(pair);\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\n// Takes a jwk key\nexport async function unmarshalPrivateKey(key) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['sign']);\n    const pair = [\n        privateKey,\n        await derivePublicFromPrivate(key)\n    ];\n    const keys = await exportKey({\n        privateKey: pair[0],\n        publicKey: pair[1]\n    });\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\nexport { randomBytes as getRandomValues };\nexport async function hashAndSign(key, msg) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['sign']);\n    const sig = await webcrypto.get().subtle.sign({ name: 'RSASSA-PKCS1-v1_5' }, privateKey, Uint8Array.from(msg));\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg) {\n    const publicKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['verify']);\n    return webcrypto.get().subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, publicKey, sig, msg);\n}\nasync function exportKey(pair) {\n    if (pair.privateKey == null || pair.publicKey == null) {\n        throw new CodeError('Private and public key are required', 'ERR_INVALID_PARAMETERS');\n    }\n    return Promise.all([\n        webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n        webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n    ]);\n}\nasync function derivePublicFromPrivate(jwKey) {\n    return webcrypto.get().subtle.importKey('jwk', {\n        kty: jwKey.kty,\n        n: jwKey.n,\n        e: jwKey.e\n    }, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['verify']);\n}\n/*\n\nRSA encryption/decryption for the browser with webcrypto workaround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg Uint8Array to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our Uint8Array a binary string\n  - Convert resulting nodeForge buffer to Uint8Array: it returns a binary string, turn that into a Uint8Array\n\n*/\nfunction convertKey(key, pub, msg, handle) {\n    const fkey = pub ? jwk2pub(key) : jwk2priv(key);\n    const fmsg = uint8ArrayToString(Uint8Array.from(msg), 'ascii');\n    const fomsg = handle(fmsg, fkey);\n    return uint8ArrayFromString(fomsg, 'ascii');\n}\nexport function encrypt(key, msg) {\n    return convertKey(key, true, msg, (msg, key) => key.encrypt(msg));\n}\nexport function decrypt(key, msg) {\n    return convertKey(key, false, msg, (msg, key) => key.decrypt(msg));\n}\nexport function keySize(jwk) {\n    if (jwk.kty !== 'RSA') {\n        throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE');\n    }\n    else if (jwk.n == null) {\n        throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS');\n    }\n    const bytes = uint8ArrayFromString(jwk.n, 'base64url');\n    return bytes.length * 8;\n}\n//# sourceMappingURL=rsa-browser.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport 'node-forge/lib/sha512.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nimport * as crypto from './rsa.js';\nexport const MAX_KEY_SIZE = 8192;\nexport class RsaPublicKey {\n    _key;\n    constructor(key) {\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkix(this._key);\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    encrypt(bytes) {\n        return crypto.encrypt(this._key, bytes);\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class RsaPrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey;\n    }\n    genSecret() {\n        return crypto.getRandomValues(16);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        if (this._publicKey == null) {\n            throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED');\n        }\n        return new RsaPublicKey(this._publicKey);\n    }\n    decrypt(bytes) {\n        return crypto.decrypt(this._key, bytes);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkcs1(this._key);\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected PEM format\n     */\n    async export(password, format = 'pkcs-8') {\n        if (format === 'pkcs-8') {\n            const buffer = new forge.util.ByteBuffer(this.marshal());\n            const asn1 = forge.asn1.fromDer(buffer);\n            const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n            const options = {\n                algorithm: 'aes256',\n                count: 10000,\n                saltSize: 128 / 8,\n                prfAlgorithm: 'sha512'\n            };\n            return forge.pki.encryptRsaPrivateKey(privateKey, password, options);\n        }\n        else if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport async function unmarshalRsaPrivateKey(bytes) {\n    const jwk = crypto.utils.pkcs1ToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport function unmarshalRsaPublicKey(bytes) {\n    const jwk = crypto.utils.pkixToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    return new RsaPublicKey(jwk);\n}\nexport async function fromJwk(jwk) {\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport async function generateKeyPair(bits) {\n    if (bits > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.generateKey(bits);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\n//# sourceMappingURL=rsa-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/rsa.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { bigIntegerToUintBase64url, base64urlToBigInteger } from './../util.js';\n// Convert a PKCS#1 in ASN1 DER format to a JWK key\nexport function pkcs1ToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n    // https://tools.ietf.org/html/rfc7518#section-6.3.1\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(privateKey.n),\n        e: bigIntegerToUintBase64url(privateKey.e),\n        d: bigIntegerToUintBase64url(privateKey.d),\n        p: bigIntegerToUintBase64url(privateKey.p),\n        q: bigIntegerToUintBase64url(privateKey.q),\n        dp: bigIntegerToUintBase64url(privateKey.dP),\n        dq: bigIntegerToUintBase64url(privateKey.dQ),\n        qi: bigIntegerToUintBase64url(privateKey.qInv),\n        alg: 'RS256'\n    };\n}\n// Convert a JWK key into PKCS#1 in ASN1 DER format\nexport function jwkToPkcs1(jwk) {\n    if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.privateKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e),\n        d: base64urlToBigInteger(jwk.d),\n        p: base64urlToBigInteger(jwk.p),\n        q: base64urlToBigInteger(jwk.q),\n        dP: base64urlToBigInteger(jwk.dp),\n        dQ: base64urlToBigInteger(jwk.dq),\n        qInv: base64urlToBigInteger(jwk.qi)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n// Convert a PKCIX in ASN1 DER format to a JWK key\nexport function pkixToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const publicKey = forge.pki.publicKeyFromAsn1(asn1);\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(publicKey.n),\n        e: bigIntegerToUintBase64url(publicKey.e)\n    };\n}\n// Convert a JWK key to PKCIX in ASN1 DER format\nexport function jwkToPkix(jwk) {\n    if (jwk.n == null || jwk.e == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.publicKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n//# sourceMappingURL=rsa-utils.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function generateKey() {\n    return secp.utils.randomPrivateKey();\n}\n/**\n * Hash and sign message with private key\n */\nexport async function hashAndSign(key, msg) {\n    const { digest } = await sha256.digest(msg);\n    try {\n        const signature = secp.sign(digest, key);\n        return signature.toDERRawBytes();\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\n/**\n * Hash message and verify signature with public key\n */\nexport async function hashAndVerify(key, sig, msg) {\n    try {\n        const { digest } = await sha256.digest(msg);\n        return secp.verify(sig, digest, key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\nexport function compressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true);\n    return point;\n}\nexport function decompressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false);\n    return point;\n}\nexport function validatePrivateKey(key) {\n    try {\n        secp.getPublicKey(key, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\nexport function validatePublicKey(key) {\n    try {\n        secp.ProjectivePoint.fromHex(key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY');\n    }\n}\nexport function computePublicKey(privateKey) {\n    try {\n        return secp.getPublicKey(privateKey, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\n//# sourceMappingURL=secp256k1.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as keysProtobuf from './keys.js';\nimport * as crypto from './secp256k1.js';\nexport class Secp256k1PublicKey {\n    _key;\n    constructor(key) {\n        crypto.validatePublicKey(key);\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.compressPublicKey(this._key);\n    }\n    get bytes() {\n        return keysProtobuf.PublicKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Secp256k1PrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey ?? crypto.computePublicKey(key);\n        crypto.validatePrivateKey(this._key);\n        crypto.validatePublicKey(this._publicKey);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Secp256k1PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return keysProtobuf.PrivateKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalSecp256k1PrivateKey(bytes) {\n    return new Secp256k1PrivateKey(bytes);\n}\nexport function unmarshalSecp256k1PublicKey(bytes) {\n    return new Secp256k1PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const privateKeyBytes = crypto.generateKey();\n    return new Secp256k1PrivateKey(privateKeyBytes);\n}\n//# sourceMappingURL=secp256k1-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/pbe.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport * as Ed25519 from './ed25519-class.js';\nimport generateEphemeralKeyPair from './ephemeral-keys.js';\nimport { importer } from './importer.js';\nimport { keyStretcher } from './key-stretcher.js';\nimport * as keysPBM from './keys.js';\nimport * as RSA from './rsa-class.js';\nimport * as Secp256k1 from './secp256k1-class.js';\nexport { keyStretcher };\nexport { generateEphemeralKeyPair };\nexport { keysPBM };\nexport const supportedKeys = {\n    rsa: RSA,\n    ed25519: Ed25519,\n    secp256k1: Secp256k1\n};\nfunction unsupportedKey(type) {\n    const supported = Object.keys(supportedKeys).join(' / ');\n    return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE');\n}\nfunction typeToKey(type) {\n    type = type.toLowerCase();\n    if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n        return supportedKeys[type];\n    }\n    throw unsupportedKey(type);\n}\n// Generates a keypair of the given type and bitsize\nexport async function generateKeyPair(type, bits) {\n    return typeToKey(type).generateKeyPair(bits ?? 2048);\n}\n// Generates a keypair of the given type and bitsize\n// seed is a 32 byte uint8array\nexport async function generateKeyPairFromSeed(type, seed, bits) {\n    if (type.toLowerCase() !== 'ed25519') {\n        throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE');\n    }\n    return Ed25519.generateKeyPairFromSeed(seed);\n}\n// Converts a protobuf serialized public key into its\n// representative object\nexport function unmarshalPublicKey(buf) {\n    const decoded = keysPBM.PublicKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPublicKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PublicKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'unknown');\n    }\n}\n// Converts a public key object into a protobuf serialized public key\nexport function marshalPublicKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n// Converts a protobuf serialized private key into its\n// representative object\nexport async function unmarshalPrivateKey(buf) {\n    const decoded = keysPBM.PrivateKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPrivateKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'RSA');\n    }\n}\n// Converts a private key object into a protobuf serialized private key\nexport function marshalPrivateKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n/**\n *\n * @param {string} encryptedKey\n * @param {string} password\n */\nexport async function importKey(encryptedKey, password) {\n    try {\n        const key = await importer(encryptedKey, password);\n        return await unmarshalPrivateKey(key);\n    }\n    catch (_) {\n        // Ignore and try the old pem decrypt\n    }\n    // Only rsa supports pem right now\n    const key = forge.pki.decryptRsaPrivateKey(encryptedKey, password);\n    if (key === null) {\n        throw new CodeError('Cannot read the key, most likely the password is wrong or not a RSA key', 'ERR_CANNOT_DECRYPT_PEM');\n    }\n    let der = forge.asn1.toDer(forge.pki.privateKeyToAsn1(key));\n    der = uint8ArrayFromString(der.getBytes(), 'ascii');\n    return supportedKeys.rsa.unmarshalRsaPrivateKey(der);\n}\n//# sourceMappingURL=index.js.map","import { TopicValidatorResult } from '@libp2p/interface/pubsub';\nexport var SignaturePolicy;\n(function (SignaturePolicy) {\n    /**\n     * On the producing side:\n     * - Build messages with the signature, key (from may be enough for certain inlineable public key types), from and seqno fields.\n     *\n     * On the consuming side:\n     * - Enforce the fields to be present, reject otherwise.\n     * - Propagate only if the fields are valid and signature can be verified, reject otherwise.\n     */\n    SignaturePolicy[\"StrictSign\"] = \"StrictSign\";\n    /**\n     * On the producing side:\n     * - Build messages without the signature, key, from and seqno fields.\n     * - The corresponding protobuf key-value pairs are absent from the marshalled message, not just empty.\n     *\n     * On the consuming side:\n     * - Enforce the fields to be absent, reject otherwise.\n     * - Propagate only if the fields are absent, reject otherwise.\n     * - A message_id function will not be able to use the above fields, and should instead rely on the data field. A commonplace strategy is to calculate a hash.\n     */\n    SignaturePolicy[\"StrictNoSign\"] = \"StrictNoSign\";\n})(SignaturePolicy || (SignaturePolicy = {}));\nexport var PublishConfigType;\n(function (PublishConfigType) {\n    PublishConfigType[PublishConfigType[\"Signing\"] = 0] = \"Signing\";\n    PublishConfigType[PublishConfigType[\"Anonymous\"] = 1] = \"Anonymous\";\n})(PublishConfigType || (PublishConfigType = {}));\nexport var RejectReason;\n(function (RejectReason) {\n    /**\n     * The message failed the configured validation during decoding.\n     * SelfOrigin is considered a ValidationError\n     */\n    RejectReason[\"Error\"] = \"error\";\n    /**\n     * Custom validator fn reported status IGNORE.\n     */\n    RejectReason[\"Ignore\"] = \"ignore\";\n    /**\n     * Custom validator fn reported status REJECT.\n     */\n    RejectReason[\"Reject\"] = \"reject\";\n    /**\n     * The peer that sent the message OR the source from field is blacklisted.\n     * Causes messages to be ignored, not penalized, neither do score record creation.\n     */\n    RejectReason[\"Blacklisted\"] = \"blacklisted\";\n})(RejectReason || (RejectReason = {}));\nexport var ValidateError;\n(function (ValidateError) {\n    /// The message has an invalid signature,\n    ValidateError[\"InvalidSignature\"] = \"invalid_signature\";\n    /// The sequence number was the incorrect size\n    ValidateError[\"InvalidSeqno\"] = \"invalid_seqno\";\n    /// The PeerId was invalid\n    ValidateError[\"InvalidPeerId\"] = \"invalid_peerid\";\n    /// Signature existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"SignaturePresent\"] = \"signature_present\";\n    /// Sequence number existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"SeqnoPresent\"] = \"seqno_present\";\n    /// Message source existed when validation has been sent to\n    /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n    ValidateError[\"FromPresent\"] = \"from_present\";\n    /// The data transformation failed.\n    ValidateError[\"TransformFailed\"] = \"transform_failed\";\n})(ValidateError || (ValidateError = {}));\nexport var MessageStatus;\n(function (MessageStatus) {\n    MessageStatus[\"duplicate\"] = \"duplicate\";\n    MessageStatus[\"invalid\"] = \"invalid\";\n    MessageStatus[\"valid\"] = \"valid\";\n})(MessageStatus || (MessageStatus = {}));\n/**\n * Typesafe conversion of MessageAcceptance -> RejectReason. TS ensures all values covered\n */\nexport function rejectReasonFromAcceptance(acceptance) {\n    switch (acceptance) {\n        case TopicValidatorResult.Ignore:\n            return RejectReason.Ignore;\n        case TopicValidatorResult.Reject:\n            return RejectReason.Reject;\n    }\n}\n//# sourceMappingURL=types.js.map","export const ERR_INVALID_PEER_SCORE_PARAMS = 'ERR_INVALID_PEER_SCORE_PARAMS';\nexport const ERR_INVALID_PEER_SCORE_THRESHOLDS = 'ERR_INVALID_PEER_SCORE_THRESHOLDS';\n//# sourceMappingURL=constants.js.map","import { ERR_INVALID_PEER_SCORE_PARAMS } from './constants.js';\nimport { CodeError } from '@libp2p/interface/errors';\nexport const defaultPeerScoreParams = {\n    topics: {},\n    topicScoreCap: 10.0,\n    appSpecificScore: () => 0.0,\n    appSpecificWeight: 10.0,\n    IPColocationFactorWeight: -5.0,\n    IPColocationFactorThreshold: 10.0,\n    IPColocationFactorWhitelist: new Set(),\n    behaviourPenaltyWeight: -10.0,\n    behaviourPenaltyThreshold: 0.0,\n    behaviourPenaltyDecay: 0.2,\n    decayInterval: 1000.0,\n    decayToZero: 0.1,\n    retainScore: 3600 * 1000\n};\nexport const defaultTopicScoreParams = {\n    topicWeight: 0.5,\n    timeInMeshWeight: 1,\n    timeInMeshQuantum: 1,\n    timeInMeshCap: 3600,\n    firstMessageDeliveriesWeight: 1,\n    firstMessageDeliveriesDecay: 0.5,\n    firstMessageDeliveriesCap: 2000,\n    meshMessageDeliveriesWeight: -1,\n    meshMessageDeliveriesDecay: 0.5,\n    meshMessageDeliveriesCap: 100,\n    meshMessageDeliveriesThreshold: 20,\n    meshMessageDeliveriesWindow: 10,\n    meshMessageDeliveriesActivation: 5000,\n    meshFailurePenaltyWeight: -1,\n    meshFailurePenaltyDecay: 0.5,\n    invalidMessageDeliveriesWeight: -1,\n    invalidMessageDeliveriesDecay: 0.3\n};\nexport function createPeerScoreParams(p = {}) {\n    return {\n        ...defaultPeerScoreParams,\n        ...p,\n        topics: p.topics\n            ? Object.entries(p.topics).reduce((topics, [topic, topicScoreParams]) => {\n                topics[topic] = createTopicScoreParams(topicScoreParams);\n                return topics;\n            }, {})\n            : {}\n    };\n}\nexport function createTopicScoreParams(p = {}) {\n    return {\n        ...defaultTopicScoreParams,\n        ...p\n    };\n}\n// peer score parameter validation\nexport function validatePeerScoreParams(p) {\n    for (const [topic, params] of Object.entries(p.topics)) {\n        try {\n            validateTopicScoreParams(params);\n        }\n        catch (e) {\n            throw new CodeError(`invalid score parameters for topic ${topic}: ${e.message}`, ERR_INVALID_PEER_SCORE_PARAMS);\n        }\n    }\n    // check that the topic score is 0 or something positive\n    if (p.topicScoreCap < 0) {\n        throw new CodeError('invalid topic score cap; must be positive (or 0 for no cap)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check that we have an app specific score; the weight can be anything (but expected positive)\n    if (p.appSpecificScore === null || p.appSpecificScore === undefined) {\n        throw new CodeError('missing application specific score function', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check the IP colocation factor\n    if (p.IPColocationFactorWeight > 0) {\n        throw new CodeError('invalid IPColocationFactorWeight; must be negative (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.IPColocationFactorWeight !== 0 && p.IPColocationFactorThreshold < 1) {\n        throw new CodeError('invalid IPColocationFactorThreshold; must be at least 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check the behaviour penalty\n    if (p.behaviourPenaltyWeight > 0) {\n        throw new CodeError('invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.behaviourPenaltyWeight !== 0 && (p.behaviourPenaltyDecay <= 0 || p.behaviourPenaltyDecay >= 1)) {\n        throw new CodeError('invalid BehaviourPenaltyDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check the decay parameters\n    if (p.decayInterval < 1000) {\n        throw new CodeError('invalid DecayInterval; must be at least 1s', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.decayToZero <= 0 || p.decayToZero >= 1) {\n        throw new CodeError('invalid DecayToZero; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // no need to check the score retention; a value of 0 means that we don't retain scores\n}\nexport function validateTopicScoreParams(p) {\n    // make sure we have a sane topic weight\n    if (p.topicWeight < 0) {\n        throw new CodeError('invalid topic weight; must be >= 0', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check P1\n    if (p.timeInMeshQuantum === 0) {\n        throw new CodeError('invalid TimeInMeshQuantum; must be non zero', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.timeInMeshWeight < 0) {\n        throw new CodeError('invalid TimeInMeshWeight; must be positive (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.timeInMeshWeight !== 0 && p.timeInMeshQuantum <= 0) {\n        throw new CodeError('invalid TimeInMeshQuantum; must be positive', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.timeInMeshWeight !== 0 && p.timeInMeshCap <= 0) {\n        throw new CodeError('invalid TimeInMeshCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check P2\n    if (p.firstMessageDeliveriesWeight < 0) {\n        throw new CodeError('invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.firstMessageDeliveriesWeight !== 0 &&\n        (p.firstMessageDeliveriesDecay <= 0 || p.firstMessageDeliveriesDecay >= 1)) {\n        throw new CodeError('invalid FirstMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.firstMessageDeliveriesWeight !== 0 && p.firstMessageDeliveriesCap <= 0) {\n        throw new CodeError('invalid FirstMessageDeliveriesCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check P3\n    if (p.meshMessageDeliveriesWeight > 0) {\n        throw new CodeError('invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && (p.meshMessageDeliveriesDecay <= 0 || p.meshMessageDeliveriesDecay >= 1)) {\n        throw new CodeError('invalid MeshMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesCap <= 0) {\n        throw new CodeError('invalid MeshMessageDeliveriesCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesThreshold <= 0) {\n        throw new CodeError('invalid MeshMessageDeliveriesThreshold; must be positive', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshMessageDeliveriesWindow < 0) {\n        throw new CodeError('invalid MeshMessageDeliveriesWindow; must be non-negative', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesActivation < 1000) {\n        throw new CodeError('invalid MeshMessageDeliveriesActivation; must be at least 1s', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check P3b\n    if (p.meshFailurePenaltyWeight > 0) {\n        throw new CodeError('invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.meshFailurePenaltyWeight !== 0 && (p.meshFailurePenaltyDecay <= 0 || p.meshFailurePenaltyDecay >= 1)) {\n        throw new CodeError('invalid MeshFailurePenaltyDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    // check P4\n    if (p.invalidMessageDeliveriesWeight > 0) {\n        throw new CodeError('invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n    if (p.invalidMessageDeliveriesDecay <= 0 || p.invalidMessageDeliveriesDecay >= 1) {\n        throw new CodeError('invalid InvalidMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS);\n    }\n}\n//# sourceMappingURL=peer-score-params.js.map","import { ERR_INVALID_PEER_SCORE_THRESHOLDS } from './constants.js';\nimport { CodeError } from '@libp2p/interface/errors';\nexport const defaultPeerScoreThresholds = {\n    gossipThreshold: -10,\n    publishThreshold: -50,\n    graylistThreshold: -80,\n    acceptPXThreshold: 10,\n    opportunisticGraftThreshold: 20\n};\nexport function createPeerScoreThresholds(p = {}) {\n    return {\n        ...defaultPeerScoreThresholds,\n        ...p\n    };\n}\nexport function validatePeerScoreThresholds(p) {\n    if (p.gossipThreshold > 0) {\n        throw new CodeError('invalid gossip threshold; it must be <= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS);\n    }\n    if (p.publishThreshold > 0 || p.publishThreshold > p.gossipThreshold) {\n        throw new CodeError('invalid publish threshold; it must be <= 0 and <= gossip threshold', ERR_INVALID_PEER_SCORE_THRESHOLDS);\n    }\n    if (p.graylistThreshold > 0 || p.graylistThreshold > p.publishThreshold) {\n        throw new CodeError('invalid graylist threshold; it must be <= 0 and <= publish threshold', ERR_INVALID_PEER_SCORE_THRESHOLDS);\n    }\n    if (p.acceptPXThreshold < 0) {\n        throw new CodeError('invalid accept PX threshold; it must be >= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS);\n    }\n    if (p.opportunisticGraftThreshold < 0) {\n        throw new CodeError('invalid opportunistic grafting threshold; it must be >= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS);\n    }\n}\n//# sourceMappingURL=peer-score-thresholds.js.map","export function computeScore(peer, pstats, params, peerIPs) {\n    let score = 0;\n    // topic stores\n    Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n        // the topic parameters\n        const topicParams = params.topics[topic];\n        if (topicParams === undefined) {\n            // we are not scoring this topic\n            return;\n        }\n        let topicScore = 0;\n        // P1: time in Mesh\n        if (tstats.inMesh) {\n            let p1 = tstats.meshTime / topicParams.timeInMeshQuantum;\n            if (p1 > topicParams.timeInMeshCap) {\n                p1 = topicParams.timeInMeshCap;\n            }\n            topicScore += p1 * topicParams.timeInMeshWeight;\n        }\n        // P2: first message deliveries\n        let p2 = tstats.firstMessageDeliveries;\n        if (p2 > topicParams.firstMessageDeliveriesCap) {\n            p2 = topicParams.firstMessageDeliveriesCap;\n        }\n        topicScore += p2 * topicParams.firstMessageDeliveriesWeight;\n        // P3: mesh message deliveries\n        if (tstats.meshMessageDeliveriesActive &&\n            tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n            const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n            const p3 = deficit * deficit;\n            topicScore += p3 * topicParams.meshMessageDeliveriesWeight;\n        }\n        // P3b:\n        // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n        const p3b = tstats.meshFailurePenalty;\n        topicScore += p3b * topicParams.meshFailurePenaltyWeight;\n        // P4: invalid messages\n        // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n        const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n        topicScore += p4 * topicParams.invalidMessageDeliveriesWeight;\n        // update score, mixing with topic weight\n        score += topicScore * topicParams.topicWeight;\n    });\n    // apply the topic score cap, if any\n    if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n        score = params.topicScoreCap;\n    }\n    // P5: application-specific score\n    const p5 = params.appSpecificScore(peer);\n    score += p5 * params.appSpecificWeight;\n    // P6: IP colocation factor\n    pstats.knownIPs.forEach((ip) => {\n        if (params.IPColocationFactorWhitelist.has(ip)) {\n            return;\n        }\n        // P6 has a cliff (IPColocationFactorThreshold)\n        // It's only applied if at least that many peers are connected to us from that source IP addr.\n        // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n        const peersInIP = peerIPs.get(ip);\n        const numPeersInIP = peersInIP ? peersInIP.size : 0;\n        if (numPeersInIP > params.IPColocationFactorThreshold) {\n            const surplus = numPeersInIP - params.IPColocationFactorThreshold;\n            const p6 = surplus * surplus;\n            score += p6 * params.IPColocationFactorWeight;\n        }\n    });\n    // P7: behavioural pattern penalty\n    if (pstats.behaviourPenalty > params.behaviourPenaltyThreshold) {\n        const excess = pstats.behaviourPenalty - params.behaviourPenaltyThreshold;\n        const p7 = excess * excess;\n        score += p7 * params.behaviourPenaltyWeight;\n    }\n    return score;\n}\n//# sourceMappingURL=compute-score.js.map","import { TimeCacheDuration } from '../constants.js';\nimport Denque from 'denque';\nexport var DeliveryRecordStatus;\n(function (DeliveryRecordStatus) {\n    /**\n     * we don't know (yet) if the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * we know the message is valid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"valid\"] = 1] = \"valid\";\n    /**\n     * we know the message is invalid\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"invalid\"] = 2] = \"invalid\";\n    /**\n     * we were instructed by the validator to ignore the message\n     */\n    DeliveryRecordStatus[DeliveryRecordStatus[\"ignored\"] = 3] = \"ignored\";\n})(DeliveryRecordStatus || (DeliveryRecordStatus = {}));\n/**\n * Map of canonical message ID to DeliveryRecord\n *\n * Maintains an internal queue for efficient gc of old messages\n */\nexport class MessageDeliveries {\n    records;\n    queue;\n    constructor() {\n        this.records = new Map();\n        this.queue = new Denque();\n    }\n    getRecord(msgIdStr) {\n        return this.records.get(msgIdStr);\n    }\n    ensureRecord(msgIdStr) {\n        let drec = this.records.get(msgIdStr);\n        if (drec) {\n            return drec;\n        }\n        // record doesn't exist yet\n        // create record\n        drec = {\n            status: DeliveryRecordStatus.unknown,\n            firstSeenTsMs: Date.now(),\n            validated: 0,\n            peers: new Set()\n        };\n        this.records.set(msgIdStr, drec);\n        // and add msgId to the queue\n        const entry = {\n            msgId: msgIdStr,\n            expire: Date.now() + TimeCacheDuration\n        };\n        this.queue.push(entry);\n        return drec;\n    }\n    gc() {\n        const now = Date.now();\n        // queue is sorted by expiry time\n        // remove expired messages, remove from queue until first un-expired message found\n        let head = this.queue.peekFront();\n        while (head && head.expire < now) {\n            this.records.delete(head.msgId);\n            this.queue.shift();\n            head = this.queue.peekFront();\n        }\n    }\n    clear() {\n        this.records.clear();\n        this.queue.clear();\n    }\n}\n//# sourceMappingURL=message-deliveries.js.map","/**\n * Exclude up to `ineed` items from a set if item meets condition `cond`\n */\nexport function removeItemsFromSet(superSet, ineed, cond = () => true) {\n    const subset = new Set();\n    if (ineed <= 0)\n        return subset;\n    for (const id of superSet) {\n        if (subset.size >= ineed)\n            break;\n        if (cond(id)) {\n            subset.add(id);\n            superSet.delete(id);\n        }\n    }\n    return subset;\n}\n/**\n * Exclude up to `ineed` items from a set\n */\nexport function removeFirstNItemsFromSet(superSet, ineed) {\n    return removeItemsFromSet(superSet, ineed, () => true);\n}\nexport class MapDef extends Map {\n    getDefault;\n    constructor(getDefault) {\n        super();\n        this.getDefault = getDefault;\n    }\n    getOrDefault(key) {\n        let value = super.get(key);\n        if (value === undefined) {\n            value = this.getDefault();\n            this.set(key, value);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=set.js.map","import { validatePeerScoreParams } from './peer-score-params.js';\nimport { computeScore } from './compute-score.js';\nimport { MessageDeliveries, DeliveryRecordStatus } from './message-deliveries.js';\nimport { logger } from '@libp2p/logger';\nimport { RejectReason } from '../types.js';\nimport { MapDef } from '../utils/set.js';\nconst log = logger('libp2p:gossipsub:score');\nexport class PeerScore {\n    params;\n    metrics;\n    /**\n     * Per-peer stats for score calculation\n     */\n    peerStats = new Map();\n    /**\n     * IP colocation tracking; maps IP => set of peers.\n     */\n    peerIPs = new MapDef(() => new Set());\n    /**\n     * Cache score up to decayInterval if topic stats are unchanged.\n     */\n    scoreCache = new Map();\n    /**\n     * Recent message delivery timing/participants\n     */\n    deliveryRecords = new MessageDeliveries();\n    _backgroundInterval;\n    scoreCacheValidityMs;\n    computeScore;\n    constructor(params, metrics, opts) {\n        this.params = params;\n        this.metrics = metrics;\n        validatePeerScoreParams(params);\n        this.scoreCacheValidityMs = opts.scoreCacheValidityMs;\n        this.computeScore = opts.computeScore ?? computeScore;\n    }\n    get size() {\n        return this.peerStats.size;\n    }\n    /**\n     * Start PeerScore instance\n     */\n    start() {\n        if (this._backgroundInterval) {\n            log('Peer score already running');\n            return;\n        }\n        this._backgroundInterval = setInterval(() => this.background(), this.params.decayInterval);\n        log('started');\n    }\n    /**\n     * Stop PeerScore instance\n     */\n    stop() {\n        if (!this._backgroundInterval) {\n            log('Peer score already stopped');\n            return;\n        }\n        clearInterval(this._backgroundInterval);\n        delete this._backgroundInterval;\n        this.peerIPs.clear();\n        this.peerStats.clear();\n        this.deliveryRecords.clear();\n        log('stopped');\n    }\n    /**\n     * Periodic maintenance\n     */\n    background() {\n        this.refreshScores();\n        this.deliveryRecords.gc();\n    }\n    dumpPeerScoreStats() {\n        return Object.fromEntries(Array.from(this.peerStats.entries()).map(([peer, stats]) => [peer, stats]));\n    }\n    messageFirstSeenTimestampMs(msgIdStr) {\n        const drec = this.deliveryRecords.getRecord(msgIdStr);\n        return drec ? drec.firstSeenTsMs : null;\n    }\n    /**\n     * Decays scores, and purges score records for disconnected peers once their expiry has elapsed.\n     */\n    refreshScores() {\n        const now = Date.now();\n        const decayToZero = this.params.decayToZero;\n        this.peerStats.forEach((pstats, id) => {\n            if (!pstats.connected) {\n                // has the retention period expired?\n                if (now > pstats.expire) {\n                    // yes, throw it away (but clean up the IP tracking first)\n                    this.removeIPsForPeer(id, pstats.knownIPs);\n                    this.peerStats.delete(id);\n                    this.scoreCache.delete(id);\n                }\n                // we don't decay retained scores, as the peer is not active.\n                // this way the peer cannot reset a negative score by simply disconnecting and reconnecting,\n                // unless the retention period has elapsed.\n                // similarly, a well behaved peer does not lose its score by getting disconnected.\n                return;\n            }\n            Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n                const tparams = this.params.topics[topic];\n                if (tparams === undefined) {\n                    // we are not scoring this topic\n                    // should be unreachable, we only add scored topics to pstats\n                    return;\n                }\n                // decay counters\n                tstats.firstMessageDeliveries *= tparams.firstMessageDeliveriesDecay;\n                if (tstats.firstMessageDeliveries < decayToZero) {\n                    tstats.firstMessageDeliveries = 0;\n                }\n                tstats.meshMessageDeliveries *= tparams.meshMessageDeliveriesDecay;\n                if (tstats.meshMessageDeliveries < decayToZero) {\n                    tstats.meshMessageDeliveries = 0;\n                }\n                tstats.meshFailurePenalty *= tparams.meshFailurePenaltyDecay;\n                if (tstats.meshFailurePenalty < decayToZero) {\n                    tstats.meshFailurePenalty = 0;\n                }\n                tstats.invalidMessageDeliveries *= tparams.invalidMessageDeliveriesDecay;\n                if (tstats.invalidMessageDeliveries < decayToZero) {\n                    tstats.invalidMessageDeliveries = 0;\n                }\n                // update mesh time and activate mesh message delivery parameter if need be\n                if (tstats.inMesh) {\n                    tstats.meshTime = now - tstats.graftTime;\n                    if (tstats.meshTime > tparams.meshMessageDeliveriesActivation) {\n                        tstats.meshMessageDeliveriesActive = true;\n                    }\n                }\n            });\n            // decay P7 counter\n            pstats.behaviourPenalty *= this.params.behaviourPenaltyDecay;\n            if (pstats.behaviourPenalty < decayToZero) {\n                pstats.behaviourPenalty = 0;\n            }\n        });\n    }\n    /**\n     * Return the score for a peer\n     */\n    score(id) {\n        this.metrics?.scoreFnCalls.inc();\n        const pstats = this.peerStats.get(id);\n        if (!pstats) {\n            return 0;\n        }\n        const now = Date.now();\n        const cacheEntry = this.scoreCache.get(id);\n        // Found cached score within validity period\n        if (cacheEntry && cacheEntry.cacheUntil > now) {\n            return cacheEntry.score;\n        }\n        this.metrics?.scoreFnRuns.inc();\n        const score = this.computeScore(id, pstats, this.params, this.peerIPs);\n        const cacheUntil = now + this.scoreCacheValidityMs;\n        if (cacheEntry) {\n            this.metrics?.scoreCachedDelta.observe(Math.abs(score - cacheEntry.score));\n            cacheEntry.score = score;\n            cacheEntry.cacheUntil = cacheUntil;\n        }\n        else {\n            this.scoreCache.set(id, { score, cacheUntil });\n        }\n        return score;\n    }\n    /**\n     * Apply a behavioural penalty to a peer\n     */\n    addPenalty(id, penalty, penaltyLabel) {\n        const pstats = this.peerStats.get(id);\n        if (pstats) {\n            pstats.behaviourPenalty += penalty;\n            this.metrics?.onScorePenalty(penaltyLabel);\n        }\n    }\n    addPeer(id) {\n        // create peer stats (not including topic stats for each topic to be scored)\n        // topic stats will be added as needed\n        const pstats = {\n            connected: true,\n            expire: 0,\n            topics: {},\n            knownIPs: new Set(),\n            behaviourPenalty: 0\n        };\n        this.peerStats.set(id, pstats);\n    }\n    /** Adds a new IP to a peer, if the peer is not known the update is ignored */\n    addIP(id, ip) {\n        const pstats = this.peerStats.get(id);\n        if (pstats) {\n            pstats.knownIPs.add(ip);\n        }\n        this.peerIPs.getOrDefault(ip).add(id);\n    }\n    /** Remove peer association with IP */\n    removeIP(id, ip) {\n        const pstats = this.peerStats.get(id);\n        if (pstats) {\n            pstats.knownIPs.delete(ip);\n        }\n        const peersWithIP = this.peerIPs.get(ip);\n        if (peersWithIP) {\n            peersWithIP.delete(id);\n            if (peersWithIP.size === 0) {\n                this.peerIPs.delete(ip);\n            }\n        }\n    }\n    removePeer(id) {\n        const pstats = this.peerStats.get(id);\n        if (!pstats) {\n            return;\n        }\n        // decide whether to retain the score; this currently only retains non-positive scores\n        // to dissuade attacks on the score function.\n        if (this.score(id) > 0) {\n            this.removeIPsForPeer(id, pstats.knownIPs);\n            this.peerStats.delete(id);\n            return;\n        }\n        // furthermore, when we decide to retain the score, the firstMessageDelivery counters are\n        // reset to 0 and mesh delivery penalties applied.\n        Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n            tstats.firstMessageDeliveries = 0;\n            const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold;\n            if (tstats.inMesh && tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n                const deficit = threshold - tstats.meshMessageDeliveries;\n                tstats.meshFailurePenalty += deficit * deficit;\n            }\n            tstats.inMesh = false;\n            tstats.meshMessageDeliveriesActive = false;\n        });\n        pstats.connected = false;\n        pstats.expire = Date.now() + this.params.retainScore;\n    }\n    /** Handles scoring functionality as a peer GRAFTs to a topic. */\n    graft(id, topic) {\n        const pstats = this.peerStats.get(id);\n        if (pstats) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats) {\n                // if we are scoring the topic, update the mesh status.\n                tstats.inMesh = true;\n                tstats.graftTime = Date.now();\n                tstats.meshTime = 0;\n                tstats.meshMessageDeliveriesActive = false;\n            }\n        }\n    }\n    /** Handles scoring functionality as a peer PRUNEs from a topic. */\n    prune(id, topic) {\n        const pstats = this.peerStats.get(id);\n        if (pstats) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats) {\n                // sticky mesh delivery rate failure penalty\n                const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold;\n                if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n                    const deficit = threshold - tstats.meshMessageDeliveries;\n                    tstats.meshFailurePenalty += deficit * deficit;\n                }\n                tstats.meshMessageDeliveriesActive = false;\n                tstats.inMesh = false;\n                // TODO: Consider clearing score cache on important penalties\n                // this.scoreCache.delete(id)\n            }\n        }\n    }\n    validateMessage(msgIdStr) {\n        this.deliveryRecords.ensureRecord(msgIdStr);\n    }\n    deliverMessage(from, msgIdStr, topic) {\n        this.markFirstMessageDelivery(from, topic);\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        const now = Date.now();\n        // defensive check that this is the first delivery trace -- delivery status should be unknown\n        if (drec.status !== DeliveryRecordStatus.unknown) {\n            log('unexpected delivery: message from %s was first seen %s ago and has delivery status %s', from, now - drec.firstSeenTsMs, DeliveryRecordStatus[drec.status]);\n            return;\n        }\n        // mark the message as valid and reward mesh peers that have already forwarded it to us\n        drec.status = DeliveryRecordStatus.valid;\n        drec.validated = now;\n        drec.peers.forEach((p) => {\n            // this check is to make sure a peer can't send us a message twice and get a double count\n            // if it is a first delivery.\n            if (p !== from.toString()) {\n                this.markDuplicateMessageDelivery(p, topic);\n            }\n        });\n    }\n    /**\n     * Similar to `rejectMessage` except does not require the message id or reason for an invalid message.\n     */\n    rejectInvalidMessage(from, topic) {\n        this.markInvalidMessageDelivery(from, topic);\n    }\n    rejectMessage(from, msgIdStr, topic, reason) {\n        switch (reason) {\n            // these messages are not tracked, but the peer is penalized as they are invalid\n            case RejectReason.Error:\n                this.markInvalidMessageDelivery(from, topic);\n                return;\n            // we ignore those messages, so do nothing.\n            case RejectReason.Blacklisted:\n                return;\n            // the rest are handled after record creation\n        }\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        // defensive check that this is the first rejection -- delivery status should be unknown\n        if (drec.status !== DeliveryRecordStatus.unknown) {\n            log('unexpected rejection: message from %s was first seen %s ago and has delivery status %d', from, Date.now() - drec.firstSeenTsMs, DeliveryRecordStatus[drec.status]);\n            return;\n        }\n        if (reason === RejectReason.Ignore) {\n            // we were explicitly instructed by the validator to ignore the message but not penalize the peer\n            drec.status = DeliveryRecordStatus.ignored;\n            drec.peers.clear();\n            return;\n        }\n        // mark the message as invalid and penalize peers that have already forwarded it.\n        drec.status = DeliveryRecordStatus.invalid;\n        this.markInvalidMessageDelivery(from, topic);\n        drec.peers.forEach((p) => {\n            this.markInvalidMessageDelivery(p, topic);\n        });\n        // release the delivery time tracking map to free some memory early\n        drec.peers.clear();\n    }\n    duplicateMessage(from, msgIdStr, topic) {\n        const drec = this.deliveryRecords.ensureRecord(msgIdStr);\n        if (drec.peers.has(from)) {\n            // we have already seen this duplicate\n            return;\n        }\n        switch (drec.status) {\n            case DeliveryRecordStatus.unknown:\n                // the message is being validated; track the peer delivery and wait for\n                // the Deliver/Reject/Ignore notification.\n                drec.peers.add(from);\n                break;\n            case DeliveryRecordStatus.valid:\n                // mark the peer delivery time to only count a duplicate delivery once.\n                drec.peers.add(from);\n                this.markDuplicateMessageDelivery(from, topic, drec.validated);\n                break;\n            case DeliveryRecordStatus.invalid:\n                // we no longer track delivery time\n                this.markInvalidMessageDelivery(from, topic);\n                break;\n            case DeliveryRecordStatus.ignored:\n                // the message was ignored; do nothing (we don't know if it was valid)\n                break;\n        }\n    }\n    /**\n     * Increments the \"invalid message deliveries\" counter for all scored topics the message is published in.\n     */\n    markInvalidMessageDelivery(from, topic) {\n        const pstats = this.peerStats.get(from);\n        if (pstats) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats) {\n                tstats.invalidMessageDeliveries += 1;\n            }\n        }\n    }\n    /**\n     * Increments the \"first message deliveries\" counter for all scored topics the message is published in,\n     * as well as the \"mesh message deliveries\" counter, if the peer is in the mesh for the topic.\n     * Messages already known (with the seenCache) are counted with markDuplicateMessageDelivery()\n     */\n    markFirstMessageDelivery(from, topic) {\n        const pstats = this.peerStats.get(from);\n        if (pstats) {\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats) {\n                let cap = this.params.topics[topic].firstMessageDeliveriesCap;\n                tstats.firstMessageDeliveries = Math.min(cap, tstats.firstMessageDeliveries + 1);\n                if (tstats.inMesh) {\n                    cap = this.params.topics[topic].meshMessageDeliveriesCap;\n                    tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1);\n                }\n            }\n        }\n    }\n    /**\n     * Increments the \"mesh message deliveries\" counter for messages we've seen before,\n     * as long the message was received within the P3 window.\n     */\n    markDuplicateMessageDelivery(from, topic, validatedTime) {\n        const pstats = this.peerStats.get(from);\n        if (pstats) {\n            const now = validatedTime !== undefined ? Date.now() : 0;\n            const tstats = this.getPtopicStats(pstats, topic);\n            if (tstats && tstats.inMesh) {\n                const tparams = this.params.topics[topic];\n                // check against the mesh delivery window -- if the validated time is passed as 0, then\n                // the message was received before we finished validation and thus falls within the mesh\n                // delivery window.\n                if (validatedTime !== undefined) {\n                    const deliveryDelayMs = now - validatedTime;\n                    const isLateDelivery = deliveryDelayMs > tparams.meshMessageDeliveriesWindow;\n                    this.metrics?.onDuplicateMsgDelivery(topic, deliveryDelayMs, isLateDelivery);\n                    if (isLateDelivery) {\n                        return;\n                    }\n                }\n                const cap = tparams.meshMessageDeliveriesCap;\n                tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1);\n            }\n        }\n    }\n    /**\n     * Removes an IP list from the tracking list for a peer.\n     */\n    removeIPsForPeer(id, ipsToRemove) {\n        for (const ipToRemove of ipsToRemove) {\n            const peerSet = this.peerIPs.get(ipToRemove);\n            if (peerSet) {\n                peerSet.delete(id);\n                if (peerSet.size === 0) {\n                    this.peerIPs.delete(ipToRemove);\n                }\n            }\n        }\n    }\n    /**\n     * Returns topic stats if they exist, otherwise if the supplied parameters score the\n     * topic, inserts the default stats and returns a reference to those. If neither apply, returns None.\n     */\n    getPtopicStats(pstats, topic) {\n        let topicStats = pstats.topics[topic];\n        if (topicStats !== undefined) {\n            return topicStats;\n        }\n        if (this.params.topics[topic] !== undefined) {\n            topicStats = {\n                inMesh: false,\n                graftTime: 0,\n                meshTime: 0,\n                firstMessageDeliveries: 0,\n                meshMessageDeliveries: 0,\n                meshMessageDeliveriesActive: false,\n                meshFailurePenalty: 0,\n                invalidMessageDeliveries: 0\n            };\n            pstats.topics[topic] = topicStats;\n            return topicStats;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=peer-score.js.map","import { RejectReason } from './types.js';\n/**\n * IWantTracer is an internal tracer that tracks IWANT requests in order to penalize\n * peers who don't follow up on IWANT requests after an IHAVE advertisement.\n * The tracking of promises is probabilistic to avoid using too much memory.\n *\n * Note: Do not confuse these 'promises' with JS Promise objects.\n * These 'promises' are merely expectations of a peer's behavior.\n */\nexport class IWantTracer {\n    gossipsubIWantFollowupMs;\n    msgIdToStrFn;\n    metrics;\n    /**\n     * Promises to deliver a message\n     * Map per message id, per peer, promise expiration time\n     */\n    promises = new Map();\n    /**\n     * First request time by msgId. Used for metrics to track expire times.\n     * Necessary to know if peers are actually breaking promises or simply sending them a bit later\n     */\n    requestMsByMsg = new Map();\n    requestMsByMsgExpire;\n    constructor(gossipsubIWantFollowupMs, msgIdToStrFn, metrics) {\n        this.gossipsubIWantFollowupMs = gossipsubIWantFollowupMs;\n        this.msgIdToStrFn = msgIdToStrFn;\n        this.metrics = metrics;\n        this.requestMsByMsgExpire = 10 * gossipsubIWantFollowupMs;\n    }\n    get size() {\n        return this.promises.size;\n    }\n    get requestMsByMsgSize() {\n        return this.requestMsByMsg.size;\n    }\n    /**\n     * Track a promise to deliver a message from a list of msgIds we are requesting\n     */\n    addPromise(from, msgIds) {\n        // pick msgId randomly from the list\n        const ix = Math.floor(Math.random() * msgIds.length);\n        const msgId = msgIds[ix];\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        let expireByPeer = this.promises.get(msgIdStr);\n        if (!expireByPeer) {\n            expireByPeer = new Map();\n            this.promises.set(msgIdStr, expireByPeer);\n        }\n        const now = Date.now();\n        // If a promise for this message id and peer already exists we don't update the expiry\n        if (!expireByPeer.has(from)) {\n            expireByPeer.set(from, now + this.gossipsubIWantFollowupMs);\n            if (this.metrics) {\n                this.metrics.iwantPromiseStarted.inc(1);\n                if (!this.requestMsByMsg.has(msgIdStr)) {\n                    this.requestMsByMsg.set(msgIdStr, now);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.\n     *\n     * This should be called not too often relative to the expire times, since it iterates over the whole data.\n     */\n    getBrokenPromises() {\n        const now = Date.now();\n        const result = new Map();\n        let brokenPromises = 0;\n        this.promises.forEach((expireByPeer, msgId) => {\n            expireByPeer.forEach((expire, p) => {\n                // the promise has been broken\n                if (expire < now) {\n                    // add 1 to result\n                    result.set(p, (result.get(p) ?? 0) + 1);\n                    // delete from tracked promises\n                    expireByPeer.delete(p);\n                    // for metrics\n                    brokenPromises++;\n                }\n            });\n            // clean up empty promises for a msgId\n            if (!expireByPeer.size) {\n                this.promises.delete(msgId);\n            }\n        });\n        this.metrics?.iwantPromiseBroken.inc(brokenPromises);\n        return result;\n    }\n    /**\n     * Someone delivered a message, stop tracking promises for it\n     */\n    deliverMessage(msgIdStr, isDuplicate = false) {\n        this.trackMessage(msgIdStr);\n        const expireByPeer = this.promises.get(msgIdStr);\n        // Expired promise, check requestMsByMsg\n        if (expireByPeer) {\n            this.promises.delete(msgIdStr);\n            if (this.metrics) {\n                this.metrics.iwantPromiseResolved.inc(1);\n                if (isDuplicate)\n                    this.metrics.iwantPromiseResolvedFromDuplicate.inc(1);\n                this.metrics.iwantPromiseResolvedPeers.inc(expireByPeer.size);\n            }\n        }\n    }\n    /**\n     * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,\n     * unless its an obviously invalid message.\n     */\n    rejectMessage(msgIdStr, reason) {\n        this.trackMessage(msgIdStr);\n        // A message got rejected, so we can stop tracking promises and let the score penalty apply.\n        // With the expection of obvious invalid messages\n        switch (reason) {\n            case RejectReason.Error:\n                return;\n        }\n        this.promises.delete(msgIdStr);\n    }\n    clear() {\n        this.promises.clear();\n    }\n    prune() {\n        const maxMs = Date.now() - this.requestMsByMsgExpire;\n        let count = 0;\n        for (const [k, v] of this.requestMsByMsg.entries()) {\n            if (v < maxMs) {\n                // messages that stay too long in the requestMsByMsg map, delete\n                this.requestMsByMsg.delete(k);\n                count++;\n            }\n            else {\n                // recent messages, keep them\n                // sort by insertion order\n                break;\n            }\n        }\n        this.metrics?.iwantMessagePruned.inc(count);\n    }\n    trackMessage(msgIdStr) {\n        if (this.metrics) {\n            const requestMs = this.requestMsByMsg.get(msgIdStr);\n            if (requestMs !== undefined) {\n                this.metrics.iwantPromiseDeliveryTime.observe((Date.now() - requestMs) / 1000);\n                this.requestMsByMsg.delete(msgIdStr);\n            }\n        }\n    }\n}\n//# sourceMappingURL=tracer.js.map","/**\n * This is similar to https://github.com/daviddias/time-cache/blob/master/src/index.js\n * for our own need, we don't use lodash throttle to improve performance.\n * This gives 4x - 5x performance gain compared to npm TimeCache\n */\nexport class SimpleTimeCache {\n    entries = new Map();\n    validityMs;\n    constructor(opts) {\n        this.validityMs = opts.validityMs;\n        // allow negative validityMs so that this does not cache anything, spec test compliance.spec.js\n        // sends duplicate messages and expect peer to receive all. Application likely uses positive validityMs\n    }\n    get size() {\n        return this.entries.size;\n    }\n    /** Returns true if there was a key collision and the entry is dropped */\n    put(key, value) {\n        if (this.entries.has(key)) {\n            // Key collisions break insertion order in the entries cache, which break prune logic.\n            // prune relies on each iterated entry to have strictly ascending validUntilMs, else it\n            // won't prune expired entries and SimpleTimeCache will grow unexpectedly.\n            // As of Oct 2022 NodeJS v16, inserting the same key twice with different value does not\n            // change the key position in the iterator stream. A unit test asserts this behaviour.\n            return true;\n        }\n        this.entries.set(key, { value, validUntilMs: Date.now() + this.validityMs });\n        return false;\n    }\n    prune() {\n        const now = Date.now();\n        for (const [k, v] of this.entries.entries()) {\n            if (v.validUntilMs < now) {\n                this.entries.delete(k);\n            }\n            else {\n                // Entries are inserted with strictly ascending validUntilMs.\n                // Stop early to save iterations\n                break;\n            }\n        }\n    }\n    has(key) {\n        return this.entries.has(key);\n    }\n    get(key) {\n        const value = this.entries.get(key);\n        return value && value.validUntilMs >= Date.now() ? value.value : undefined;\n    }\n    clear() {\n        this.entries.clear();\n    }\n}\n//# sourceMappingURL=time-cache.js.map","import { TopicValidatorResult } from '@libp2p/interface/pubsub';\nimport { MessageStatus, RejectReason, ValidateError } from './types.js';\nexport var MessageSource;\n(function (MessageSource) {\n    MessageSource[\"forward\"] = \"forward\";\n    MessageSource[\"publish\"] = \"publish\";\n})(MessageSource || (MessageSource = {}));\nexport var InclusionReason;\n(function (InclusionReason) {\n    /** Peer was a fanaout peer. */\n    InclusionReason[\"Fanout\"] = \"fanout\";\n    /** Included from random selection. */\n    InclusionReason[\"Random\"] = \"random\";\n    /** Peer subscribed. */\n    InclusionReason[\"Subscribed\"] = \"subscribed\";\n    /** On heartbeat, peer was included to fill the outbound quota. */\n    InclusionReason[\"Outbound\"] = \"outbound\";\n    /** On heartbeat, not enough peers in mesh */\n    InclusionReason[\"NotEnough\"] = \"not_enough\";\n    /** On heartbeat opportunistic grafting due to low mesh score */\n    InclusionReason[\"Opportunistic\"] = \"opportunistic\";\n})(InclusionReason || (InclusionReason = {}));\n/// Reasons why a peer was removed from the mesh.\nexport var ChurnReason;\n(function (ChurnReason) {\n    /// Peer disconnected.\n    ChurnReason[\"Dc\"] = \"disconnected\";\n    /// Peer had a bad score.\n    ChurnReason[\"BadScore\"] = \"bad_score\";\n    /// Peer sent a PRUNE.\n    ChurnReason[\"Prune\"] = \"prune\";\n    /// Too many peers.\n    ChurnReason[\"Excess\"] = \"excess\";\n})(ChurnReason || (ChurnReason = {}));\n/// Kinds of reasons a peer's score has been penalized\nexport var ScorePenalty;\n(function (ScorePenalty) {\n    /// A peer grafted before waiting the back-off time.\n    ScorePenalty[\"GraftBackoff\"] = \"graft_backoff\";\n    /// A Peer did not respond to an IWANT request in time.\n    ScorePenalty[\"BrokenPromise\"] = \"broken_promise\";\n    /// A Peer did not send enough messages as expected.\n    ScorePenalty[\"MessageDeficit\"] = \"message_deficit\";\n    /// Too many peers under one IP address.\n    ScorePenalty[\"IPColocation\"] = \"IP_colocation\";\n})(ScorePenalty || (ScorePenalty = {}));\nexport var IHaveIgnoreReason;\n(function (IHaveIgnoreReason) {\n    IHaveIgnoreReason[\"LowScore\"] = \"low_score\";\n    IHaveIgnoreReason[\"MaxIhave\"] = \"max_ihave\";\n    IHaveIgnoreReason[\"MaxIasked\"] = \"max_iasked\";\n})(IHaveIgnoreReason || (IHaveIgnoreReason = {}));\nexport var ScoreThreshold;\n(function (ScoreThreshold) {\n    ScoreThreshold[\"graylist\"] = \"graylist\";\n    ScoreThreshold[\"publish\"] = \"publish\";\n    ScoreThreshold[\"gossip\"] = \"gossip\";\n    ScoreThreshold[\"mesh\"] = \"mesh\";\n})(ScoreThreshold || (ScoreThreshold = {}));\n/**\n * A collection of metrics used throughout the Gossipsub behaviour.\n * NOTE: except for special reasons, do not add more than 1 label for frequent metrics,\n * there's a performance penalty as of June 2023.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getMetrics(register, topicStrToLabel, opts) {\n    // Using function style instead of class to prevent having to re-declare all MetricsPrometheus types.\n    return {\n        /* Metrics for static config */\n        protocolsEnabled: register.gauge({\n            name: 'gossipsub_protocol',\n            help: 'Status of enabled protocols',\n            labelNames: ['protocol']\n        }),\n        /* Metrics per known topic */\n        /** Status of our subscription to this topic. This metric allows analyzing other topic metrics\n         *  filtered by our current subscription status.\n         *  = rust-libp2p `topic_subscription_status` */\n        topicSubscriptionStatus: register.gauge({\n            name: 'gossipsub_topic_subscription_status',\n            help: 'Status of our subscription to this topic',\n            labelNames: ['topicStr']\n        }),\n        /** Number of peers subscribed to each topic. This allows us to analyze a topic's behaviour\n         * regardless of our subscription status. */\n        topicPeersCount: register.gauge({\n            name: 'gossipsub_topic_peer_count',\n            help: 'Number of peers subscribed to each topic',\n            labelNames: ['topicStr']\n        }),\n        /* Metrics regarding mesh state */\n        /** Number of peers in our mesh. This metric should be updated with the count of peers for a\n         *  topic in the mesh regardless of inclusion and churn events.\n         *  = rust-libp2p `mesh_peer_counts` */\n        meshPeerCounts: register.gauge({\n            name: 'gossipsub_mesh_peer_count',\n            help: 'Number of peers in our mesh',\n            labelNames: ['topicStr']\n        }),\n        /** Number of times we include peers in a topic mesh for different reasons.\n         *  = rust-libp2p `mesh_peer_inclusion_events` */\n        meshPeerInclusionEventsFanout: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_fanout_total',\n            help: 'Number of times we include peers in a topic mesh for fanout reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsRandom: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_random_total',\n            help: 'Number of times we include peers in a topic mesh for random reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsSubscribed: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_subscribed_total',\n            help: 'Number of times we include peers in a topic mesh for subscribed reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsOutbound: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_outbound_total',\n            help: 'Number of times we include peers in a topic mesh for outbound reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsNotEnough: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_not_enough_total',\n            help: 'Number of times we include peers in a topic mesh for not_enough reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsOpportunistic: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_opportunistic_total',\n            help: 'Number of times we include peers in a topic mesh for opportunistic reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerInclusionEventsUnknown: register.gauge({\n            name: 'gossipsub_mesh_peer_inclusion_events_unknown_total',\n            help: 'Number of times we include peers in a topic mesh for unknown reasons',\n            labelNames: ['topic']\n        }),\n        /** Number of times we remove peers in a topic mesh for different reasons.\n         *  = rust-libp2p `mesh_peer_churn_events` */\n        meshPeerChurnEventsDisconnected: register.gauge({\n            name: 'gossipsub_peer_churn_events_disconnected_total',\n            help: 'Number of times we remove peers in a topic mesh for disconnected reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsBadScore: register.gauge({\n            name: 'gossipsub_peer_churn_events_bad_score_total',\n            help: 'Number of times we remove peers in a topic mesh for bad_score reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsPrune: register.gauge({\n            name: 'gossipsub_peer_churn_events_prune_total',\n            help: 'Number of times we remove peers in a topic mesh for prune reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsExcess: register.gauge({\n            name: 'gossipsub_peer_churn_events_excess_total',\n            help: 'Number of times we remove peers in a topic mesh for excess reasons',\n            labelNames: ['topic']\n        }),\n        meshPeerChurnEventsUnknown: register.gauge({\n            name: 'gossipsub_peer_churn_events_unknown_total',\n            help: 'Number of times we remove peers in a topic mesh for unknown reasons',\n            labelNames: ['topic']\n        }),\n        /* General Metrics */\n        /** Gossipsub supports floodsub, gossipsub v1.0 and gossipsub v1.1. Peers are classified based\n         *  on which protocol they support. This metric keeps track of the number of peers that are\n         *  connected of each type. */\n        peersPerProtocol: register.gauge({\n            name: 'gossipsub_peers_per_protocol_count',\n            help: 'Peers connected for each topic',\n            labelNames: ['protocol']\n        }),\n        /** The time it takes to complete one iteration of the heartbeat. */\n        heartbeatDuration: register.histogram({\n            name: 'gossipsub_heartbeat_duration_seconds',\n            help: 'The time it takes to complete one iteration of the heartbeat',\n            // Should take <10ms, over 1s it's a huge issue that needs debugging, since a heartbeat will be cancelled\n            buckets: [0.01, 0.1, 1]\n        }),\n        /** Heartbeat run took longer than heartbeat interval so next is skipped */\n        heartbeatSkipped: register.gauge({\n            name: 'gossipsub_heartbeat_skipped',\n            help: 'Heartbeat run took longer than heartbeat interval so next is skipped'\n        }),\n        /** Message validation results for each topic.\n         *  Invalid == Reject?\n         *  = rust-libp2p `invalid_messages`, `accepted_messages`, `ignored_messages`, `rejected_messages` */\n        acceptedMessagesTotal: register.gauge({\n            name: 'gossipsub_accepted_messages_total',\n            help: 'Total accepted messages for each topic',\n            labelNames: ['topic']\n        }),\n        ignoredMessagesTotal: register.gauge({\n            name: 'gossipsub_ignored_messages_total',\n            help: 'Total ignored messages for each topic',\n            labelNames: ['topic']\n        }),\n        rejectedMessagesTotal: register.gauge({\n            name: 'gossipsub_rejected_messages_total',\n            help: 'Total rejected messages for each topic',\n            labelNames: ['topic']\n        }),\n        unknownValidationResultsTotal: register.gauge({\n            name: 'gossipsub_unknown_validation_results_total',\n            help: 'Total unknown validation results for each topic',\n            labelNames: ['topic']\n        }),\n        /** When the user validates a message, it tries to re propagate it to its mesh peers. If the\n         *  message expires from the memcache before it can be validated, we count this a cache miss\n         *  and it is an indicator that the memcache size should be increased.\n         *  = rust-libp2p `mcache_misses` */\n        asyncValidationMcacheHit: register.gauge({\n            name: 'gossipsub_async_validation_mcache_hit_total',\n            help: 'Async validation result reported by the user layer',\n            labelNames: ['hit']\n        }),\n        asyncValidationDelayFromFirstSeenSec: register.histogram({\n            name: 'gossipsub_async_validation_delay_from_first_seen',\n            help: 'Async validation report delay from first seen in second',\n            labelNames: ['topic'],\n            buckets: [0.01, 0.03, 0.1, 0.3, 1, 3, 10]\n        }),\n        asyncValidationUnknownFirstSeen: register.gauge({\n            name: 'gossipsub_async_validation_unknown_first_seen_count_total',\n            help: 'Async validation report unknown first seen value for message'\n        }),\n        // peer stream\n        peerReadStreamError: register.gauge({\n            name: 'gossipsub_peer_read_stream_err_count_total',\n            help: 'Peer read stream error'\n        }),\n        // RPC outgoing. Track byte length + data structure sizes\n        rpcRecvBytes: register.gauge({ name: 'gossipsub_rpc_recv_bytes_total', help: 'RPC recv' }),\n        rpcRecvCount: register.gauge({ name: 'gossipsub_rpc_recv_count_total', help: 'RPC recv' }),\n        rpcRecvSubscription: register.gauge({ name: 'gossipsub_rpc_recv_subscription_total', help: 'RPC recv' }),\n        rpcRecvMessage: register.gauge({ name: 'gossipsub_rpc_recv_message_total', help: 'RPC recv' }),\n        rpcRecvControl: register.gauge({ name: 'gossipsub_rpc_recv_control_total', help: 'RPC recv' }),\n        rpcRecvIHave: register.gauge({ name: 'gossipsub_rpc_recv_ihave_total', help: 'RPC recv' }),\n        rpcRecvIWant: register.gauge({ name: 'gossipsub_rpc_recv_iwant_total', help: 'RPC recv' }),\n        rpcRecvGraft: register.gauge({ name: 'gossipsub_rpc_recv_graft_total', help: 'RPC recv' }),\n        rpcRecvPrune: register.gauge({ name: 'gossipsub_rpc_recv_prune_total', help: 'RPC recv' }),\n        rpcDataError: register.gauge({ name: 'gossipsub_rpc_data_err_count_total', help: 'RPC data error' }),\n        rpcRecvError: register.gauge({ name: 'gossipsub_rpc_recv_err_count_total', help: 'RPC recv error' }),\n        /** Total count of RPC dropped because acceptFrom() == false */\n        rpcRecvNotAccepted: register.gauge({\n            name: 'gossipsub_rpc_rcv_not_accepted_total',\n            help: 'Total count of RPC dropped because acceptFrom() == false'\n        }),\n        // RPC incoming. Track byte length + data structure sizes\n        rpcSentBytes: register.gauge({ name: 'gossipsub_rpc_sent_bytes_total', help: 'RPC sent' }),\n        rpcSentCount: register.gauge({ name: 'gossipsub_rpc_sent_count_total', help: 'RPC sent' }),\n        rpcSentSubscription: register.gauge({ name: 'gossipsub_rpc_sent_subscription_total', help: 'RPC sent' }),\n        rpcSentMessage: register.gauge({ name: 'gossipsub_rpc_sent_message_total', help: 'RPC sent' }),\n        rpcSentControl: register.gauge({ name: 'gossipsub_rpc_sent_control_total', help: 'RPC sent' }),\n        rpcSentIHave: register.gauge({ name: 'gossipsub_rpc_sent_ihave_total', help: 'RPC sent' }),\n        rpcSentIWant: register.gauge({ name: 'gossipsub_rpc_sent_iwant_total', help: 'RPC sent' }),\n        rpcSentGraft: register.gauge({ name: 'gossipsub_rpc_sent_graft_total', help: 'RPC sent' }),\n        rpcSentPrune: register.gauge({ name: 'gossipsub_rpc_sent_prune_total', help: 'RPC sent' }),\n        // publish message. Track peers sent to and bytes\n        /** Total count of msg published by topic */\n        msgPublishCount: register.gauge({\n            name: 'gossipsub_msg_publish_count_total',\n            help: 'Total count of msg published by topic',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers that we publish a msg to */\n        msgPublishPeersByTopic: register.gauge({\n            name: 'gossipsub_msg_publish_peers_total',\n            help: 'Total count of peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers (by group) that we publish a msg to */\n        directPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_direct_peers_published_total',\n            help: 'Total direct peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        floodsubPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_floodsub_peers_published_total',\n            help: 'Total floodsub peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        meshPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_mesh_peers_published_total',\n            help: 'Total mesh peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        fanoutPeersPublishedTotal: register.gauge({\n            name: 'gossipsub_fanout_peers_published_total',\n            help: 'Total fanout peers that we publish a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of msg publish data.length bytes */\n        msgPublishBytes: register.gauge({\n            name: 'gossipsub_msg_publish_bytes_total',\n            help: 'Total count of msg publish data.length bytes',\n            labelNames: ['topic']\n        }),\n        /** Total time in seconds to publish a message */\n        msgPublishTime: register.histogram({\n            name: 'gossipsub_msg_publish_seconds',\n            help: 'Total time in seconds to publish a message',\n            buckets: [0.001, 0.002, 0.005, 0.01, 0.1, 0.5, 1],\n            labelNames: ['topic']\n        }),\n        /** Total count of msg forwarded by topic */\n        msgForwardCount: register.gauge({\n            name: 'gossipsub_msg_forward_count_total',\n            help: 'Total count of msg forwarded by topic',\n            labelNames: ['topic']\n        }),\n        /** Total count of peers that we forward a msg to */\n        msgForwardPeers: register.gauge({\n            name: 'gossipsub_msg_forward_peers_total',\n            help: 'Total count of peers that we forward a msg to',\n            labelNames: ['topic']\n        }),\n        /** Total count of recv msgs before any validation */\n        msgReceivedPreValidation: register.gauge({\n            name: 'gossipsub_msg_received_prevalidation_total',\n            help: 'Total count of recv msgs before any validation',\n            labelNames: ['topic']\n        }),\n        /** Total count of recv msgs error */\n        msgReceivedError: register.gauge({\n            name: 'gossipsub_msg_received_error_total',\n            help: 'Total count of recv msgs error',\n            labelNames: ['topic']\n        }),\n        /** Tracks distribution of recv msgs by duplicate, invalid, valid */\n        prevalidationInvalidTotal: register.gauge({\n            name: 'gossipsub_pre_validation_invalid_total',\n            help: 'Total count of invalid messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationValidTotal: register.gauge({\n            name: 'gossipsub_pre_validation_valid_total',\n            help: 'Total count of valid messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationDuplicateTotal: register.gauge({\n            name: 'gossipsub_pre_validation_duplicate_total',\n            help: 'Total count of duplicate messages received',\n            labelNames: ['topic']\n        }),\n        prevalidationUnknownTotal: register.gauge({\n            name: 'gossipsub_pre_validation_unknown_status_total',\n            help: 'Total count of unknown_status messages received',\n            labelNames: ['topic']\n        }),\n        /** Tracks specific reason of invalid */\n        msgReceivedInvalid: register.gauge({\n            name: 'gossipsub_msg_received_invalid_total',\n            help: 'Tracks specific reason of invalid',\n            labelNames: ['error']\n        }),\n        msgReceivedInvalidByTopic: register.gauge({\n            name: 'gossipsub_msg_received_invalid_by_topic_total',\n            help: 'Tracks specific invalid message by topic',\n            labelNames: ['topic']\n        }),\n        /** Track duplicate message delivery time */\n        duplicateMsgDeliveryDelay: register.histogram({\n            name: 'gossisub_duplicate_msg_delivery_delay_seconds',\n            help: 'Time since the 1st duplicated message validated',\n            labelNames: ['topic'],\n            buckets: [\n                0.25 * opts.maxMeshMessageDeliveriesWindowSec,\n                0.5 * opts.maxMeshMessageDeliveriesWindowSec,\n                1 * opts.maxMeshMessageDeliveriesWindowSec,\n                2 * opts.maxMeshMessageDeliveriesWindowSec,\n                4 * opts.maxMeshMessageDeliveriesWindowSec\n            ]\n        }),\n        /** Total count of late msg delivery total by topic */\n        duplicateMsgLateDelivery: register.gauge({\n            name: 'gossisub_duplicate_msg_late_delivery_total',\n            help: 'Total count of late duplicate message delivery by topic, which triggers P3 penalty',\n            labelNames: ['topic']\n        }),\n        duplicateMsgIgnored: register.gauge({\n            name: 'gossisub_ignored_published_duplicate_msgs_total',\n            help: 'Total count of published duplicate message ignored by topic',\n            labelNames: ['topic']\n        }),\n        /* Metrics related to scoring */\n        /** Total times score() is called */\n        scoreFnCalls: register.gauge({\n            name: 'gossipsub_score_fn_calls_total',\n            help: 'Total times score() is called'\n        }),\n        /** Total times score() call actually computed computeScore(), no cache */\n        scoreFnRuns: register.gauge({\n            name: 'gossipsub_score_fn_runs_total',\n            help: 'Total times score() call actually computed computeScore(), no cache'\n        }),\n        scoreCachedDelta: register.histogram({\n            name: 'gossipsub_score_cache_delta',\n            help: 'Delta of score between cached values that expired',\n            buckets: [10, 100, 1000]\n        }),\n        /** Current count of peers by score threshold */\n        peersByScoreThreshold: register.gauge({\n            name: 'gossipsub_peers_by_score_threshold_count',\n            help: 'Current count of peers by score threshold',\n            labelNames: ['threshold']\n        }),\n        score: register.avgMinMax({\n            name: 'gossipsub_score',\n            help: 'Avg min max of gossip scores'\n        }),\n        /**\n         * Separate score weights\n         * Need to use 2-label metrics in this case to debug the score weights\n         **/\n        scoreWeights: register.avgMinMax({\n            name: 'gossipsub_score_weights',\n            help: 'Separate score weights',\n            labelNames: ['topic', 'p']\n        }),\n        /** Histogram of the scores for each mesh topic. */\n        // TODO: Not implemented\n        scorePerMesh: register.avgMinMax({\n            name: 'gossipsub_score_per_mesh',\n            help: 'Histogram of the scores for each mesh topic',\n            labelNames: ['topic']\n        }),\n        /** A counter of the kind of penalties being applied to peers. */\n        // TODO: Not fully implemented\n        scoringPenalties: register.gauge({\n            name: 'gossipsub_scoring_penalties_total',\n            help: 'A counter of the kind of penalties being applied to peers',\n            labelNames: ['penalty']\n        }),\n        behaviourPenalty: register.histogram({\n            name: 'gossipsub_peer_stat_behaviour_penalty',\n            help: 'Current peer stat behaviour_penalty at each scrape',\n            buckets: [\n                0.25 * opts.behaviourPenaltyThreshold,\n                0.5 * opts.behaviourPenaltyThreshold,\n                1 * opts.behaviourPenaltyThreshold,\n                2 * opts.behaviourPenaltyThreshold,\n                4 * opts.behaviourPenaltyThreshold\n            ]\n        }),\n        // TODO:\n        // - iasked per peer (on heartbeat)\n        // - when promise is resolved, track messages from promises\n        /** Total received IHAVE messages that we ignore for some reason */\n        ihaveRcvIgnored: register.gauge({\n            name: 'gossipsub_ihave_rcv_ignored_total',\n            help: 'Total received IHAVE messages that we ignore for some reason',\n            labelNames: ['reason']\n        }),\n        /** Total received IHAVE messages by topic */\n        ihaveRcvMsgids: register.gauge({\n            name: 'gossipsub_ihave_rcv_msgids_total',\n            help: 'Total received IHAVE messages by topic',\n            labelNames: ['topic']\n        }),\n        /** Total messages per topic we don't have. Not actual requests.\n         *  The number of times we have decided that an IWANT control message is required for this\n         *  topic. A very high metric might indicate an underperforming network.\n         *  = rust-libp2p `topic_iwant_msgs` */\n        ihaveRcvNotSeenMsgids: register.gauge({\n            name: 'gossipsub_ihave_rcv_not_seen_msgids_total',\n            help: 'Total messages per topic we do not have, not actual requests',\n            labelNames: ['topic']\n        }),\n        /** Total received IWANT messages by topic */\n        iwantRcvMsgids: register.gauge({\n            name: 'gossipsub_iwant_rcv_msgids_total',\n            help: 'Total received IWANT messages by topic',\n            labelNames: ['topic']\n        }),\n        /** Total requested messageIDs that we don't have */\n        iwantRcvDonthaveMsgids: register.gauge({\n            name: 'gossipsub_iwant_rcv_dont_have_msgids_total',\n            help: 'Total requested messageIDs that we do not have'\n        }),\n        iwantPromiseStarted: register.gauge({\n            name: 'gossipsub_iwant_promise_sent_total',\n            help: 'Total count of started IWANT promises'\n        }),\n        /** Total count of resolved IWANT promises */\n        iwantPromiseResolved: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_total',\n            help: 'Total count of resolved IWANT promises'\n        }),\n        /** Total count of resolved IWANT promises from duplicate messages */\n        iwantPromiseResolvedFromDuplicate: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_from_duplicate_total',\n            help: 'Total count of resolved IWANT promises from duplicate messages'\n        }),\n        /** Total count of peers we have asked IWANT promises that are resolved */\n        iwantPromiseResolvedPeers: register.gauge({\n            name: 'gossipsub_iwant_promise_resolved_peers',\n            help: 'Total count of peers we have asked IWANT promises that are resolved'\n        }),\n        iwantPromiseBroken: register.gauge({\n            name: 'gossipsub_iwant_promise_broken',\n            help: 'Total count of broken IWANT promises'\n        }),\n        iwantMessagePruned: register.gauge({\n            name: 'gossipsub_iwant_message_pruned',\n            help: 'Total count of pruned IWANT messages'\n        }),\n        /** Histogram of delivery time of resolved IWANT promises */\n        iwantPromiseDeliveryTime: register.histogram({\n            name: 'gossipsub_iwant_promise_delivery_seconds',\n            help: 'Histogram of delivery time of resolved IWANT promises',\n            buckets: [\n                0.5 * opts.gossipPromiseExpireSec,\n                1 * opts.gossipPromiseExpireSec,\n                2 * opts.gossipPromiseExpireSec,\n                4 * opts.gossipPromiseExpireSec\n            ]\n        }),\n        iwantPromiseUntracked: register.gauge({\n            name: 'gossip_iwant_promise_untracked',\n            help: 'Total count of untracked IWANT promise'\n        }),\n        /** Backoff time */\n        connectedPeersBackoffSec: register.histogram({\n            name: 'gossipsub_connected_peers_backoff_seconds',\n            help: 'Backoff time in seconds',\n            // Using 1 seconds as minimum as that's close to the heartbeat duration, no need for more resolution.\n            // As per spec, backoff times are 10 seconds for UnsubscribeBackoff and 60 seconds for PruneBackoff.\n            // Higher values of 60 seconds should not occur, but we add 120 seconds just in case\n            // https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#overview-of-new-parameters\n            buckets: [1, 2, 4, 10, 20, 60, 120]\n        }),\n        /* Data structure sizes */\n        /** Unbounded cache sizes */\n        cacheSize: register.gauge({\n            name: 'gossipsub_cache_size',\n            help: 'Unbounded cache sizes',\n            labelNames: ['cache']\n        }),\n        /** Current mcache msg count */\n        mcacheSize: register.gauge({\n            name: 'gossipsub_mcache_size',\n            help: 'Current mcache msg count'\n        }),\n        mcacheNotValidatedCount: register.gauge({\n            name: 'gossipsub_mcache_not_validated_count',\n            help: 'Current mcache msg count not validated'\n        }),\n        fastMsgIdCacheCollision: register.gauge({\n            name: 'gossipsub_fastmsgid_cache_collision_total',\n            help: 'Total count of key collisions on fastmsgid cache put'\n        }),\n        newConnectionCount: register.gauge({\n            name: 'gossipsub_new_connection_total',\n            help: 'Total new connection by status',\n            labelNames: ['status']\n        }),\n        topicStrToLabel: topicStrToLabel,\n        toTopic(topicStr) {\n            return this.topicStrToLabel.get(topicStr) ?? topicStr;\n        },\n        /** We joined a topic */\n        onJoin(topicStr) {\n            this.topicSubscriptionStatus.set({ topicStr }, 1);\n            this.meshPeerCounts.set({ topicStr }, 0); // Reset count\n        },\n        /** We left a topic */\n        onLeave(topicStr) {\n            this.topicSubscriptionStatus.set({ topicStr }, 0);\n            this.meshPeerCounts.set({ topicStr }, 0); // Reset count\n        },\n        /** Register the inclusion of peers in our mesh due to some reason. */\n        onAddToMesh(topicStr, reason, count) {\n            const topic = this.toTopic(topicStr);\n            switch (reason) {\n                case InclusionReason.Fanout:\n                    this.meshPeerInclusionEventsFanout.inc({ topic }, count);\n                    break;\n                case InclusionReason.Random:\n                    this.meshPeerInclusionEventsRandom.inc({ topic }, count);\n                    break;\n                case InclusionReason.Subscribed:\n                    this.meshPeerInclusionEventsSubscribed.inc({ topic }, count);\n                    break;\n                case InclusionReason.Outbound:\n                    this.meshPeerInclusionEventsOutbound.inc({ topic }, count);\n                    break;\n                case InclusionReason.NotEnough:\n                    this.meshPeerInclusionEventsNotEnough.inc({ topic }, count);\n                    break;\n                case InclusionReason.Opportunistic:\n                    this.meshPeerInclusionEventsOpportunistic.inc({ topic }, count);\n                    break;\n                default:\n                    this.meshPeerInclusionEventsUnknown.inc({ topic }, count);\n                    break;\n            }\n        },\n        /** Register the removal of peers in our mesh due to some reason */\n        // - remove_peer_from_mesh()\n        // - heartbeat() Churn::BadScore\n        // - heartbeat() Churn::Excess\n        // - on_disconnect() Churn::Ds\n        onRemoveFromMesh(topicStr, reason, count) {\n            const topic = this.toTopic(topicStr);\n            switch (reason) {\n                case ChurnReason.Dc:\n                    this.meshPeerChurnEventsDisconnected.inc({ topic }, count);\n                    break;\n                case ChurnReason.BadScore:\n                    this.meshPeerChurnEventsBadScore.inc({ topic }, count);\n                    break;\n                case ChurnReason.Prune:\n                    this.meshPeerChurnEventsPrune.inc({ topic }, count);\n                    break;\n                case ChurnReason.Excess:\n                    this.meshPeerChurnEventsExcess.inc({ topic }, count);\n                    break;\n                default:\n                    this.meshPeerChurnEventsUnknown.inc({ topic }, count);\n                    break;\n            }\n        },\n        /**\n         * Update validation result to metrics\n         * @param messageRecord null means the message's mcache record was not known at the time of acceptance report\n         */\n        onReportValidation(messageRecord, acceptance, firstSeenTimestampMs) {\n            this.asyncValidationMcacheHit.inc({ hit: messageRecord != null ? 'hit' : 'miss' });\n            if (messageRecord != null) {\n                const topic = this.toTopic(messageRecord.message.topic);\n                switch (acceptance) {\n                    case TopicValidatorResult.Accept:\n                        this.acceptedMessagesTotal.inc({ topic });\n                        break;\n                    case TopicValidatorResult.Ignore:\n                        this.ignoredMessagesTotal.inc({ topic });\n                        break;\n                    case TopicValidatorResult.Reject:\n                        this.rejectedMessagesTotal.inc({ topic });\n                        break;\n                    default:\n                        this.unknownValidationResultsTotal.inc({ topic });\n                        break;\n                }\n            }\n            if (firstSeenTimestampMs != null) {\n                this.asyncValidationDelayFromFirstSeenSec.observe((Date.now() - firstSeenTimestampMs) / 1000);\n            }\n            else {\n                this.asyncValidationUnknownFirstSeen.inc();\n            }\n        },\n        /**\n         * - in handle_graft() Penalty::GraftBackoff\n         * - in apply_iwant_penalties() Penalty::BrokenPromise\n         * - in metric_score() P3 Penalty::MessageDeficit\n         * - in metric_score() P6 Penalty::IPColocation\n         */\n        onScorePenalty(penalty) {\n            // Can this be labeled by topic too?\n            this.scoringPenalties.inc({ penalty }, 1);\n        },\n        onIhaveRcv(topicStr, ihave, idonthave) {\n            const topic = this.toTopic(topicStr);\n            this.ihaveRcvMsgids.inc({ topic }, ihave);\n            this.ihaveRcvNotSeenMsgids.inc({ topic }, idonthave);\n        },\n        onIwantRcv(iwantByTopic, iwantDonthave) {\n            for (const [topicStr, iwant] of iwantByTopic) {\n                const topic = this.toTopic(topicStr);\n                this.iwantRcvMsgids.inc({ topic }, iwant);\n            }\n            this.iwantRcvDonthaveMsgids.inc(iwantDonthave);\n        },\n        onForwardMsg(topicStr, tosendCount) {\n            const topic = this.toTopic(topicStr);\n            this.msgForwardCount.inc({ topic }, 1);\n            this.msgForwardPeers.inc({ topic }, tosendCount);\n        },\n        onPublishMsg(topicStr, tosendGroupCount, tosendCount, dataLen, ms) {\n            const topic = this.toTopic(topicStr);\n            this.msgPublishCount.inc({ topic }, 1);\n            this.msgPublishBytes.inc({ topic }, tosendCount * dataLen);\n            this.msgPublishPeersByTopic.inc({ topic }, tosendCount);\n            this.directPeersPublishedTotal.inc({ topic }, tosendGroupCount.direct);\n            this.floodsubPeersPublishedTotal.inc({ topic }, tosendGroupCount.floodsub);\n            this.meshPeersPublishedTotal.inc({ topic }, tosendGroupCount.mesh);\n            this.fanoutPeersPublishedTotal.inc({ topic }, tosendGroupCount.fanout);\n            this.msgPublishTime.observe({ topic }, ms / 1000);\n        },\n        onMsgRecvPreValidation(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.msgReceivedPreValidation.inc({ topic }, 1);\n        },\n        onMsgRecvError(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.msgReceivedError.inc({ topic }, 1);\n        },\n        onPrevalidationResult(topicStr, status) {\n            const topic = this.toTopic(topicStr);\n            switch (status) {\n                case MessageStatus.duplicate:\n                    this.prevalidationDuplicateTotal.inc({ topic });\n                    break;\n                case MessageStatus.invalid:\n                    this.prevalidationInvalidTotal.inc({ topic });\n                    break;\n                case MessageStatus.valid:\n                    this.prevalidationValidTotal.inc({ topic });\n                    break;\n                default:\n                    this.prevalidationUnknownTotal.inc({ topic });\n                    break;\n            }\n        },\n        onMsgRecvInvalid(topicStr, reason) {\n            const topic = this.toTopic(topicStr);\n            const error = reason.reason === RejectReason.Error ? reason.error : reason.reason;\n            this.msgReceivedInvalid.inc({ error }, 1);\n            this.msgReceivedInvalidByTopic.inc({ topic }, 1);\n        },\n        onDuplicateMsgDelivery(topicStr, deliveryDelayMs, isLateDelivery) {\n            this.duplicateMsgDeliveryDelay.observe(deliveryDelayMs / 1000);\n            if (isLateDelivery) {\n                const topic = this.toTopic(topicStr);\n                this.duplicateMsgLateDelivery.inc({ topic }, 1);\n            }\n        },\n        onPublishDuplicateMsg(topicStr) {\n            const topic = this.toTopic(topicStr);\n            this.duplicateMsgIgnored.inc({ topic }, 1);\n        },\n        onPeerReadStreamError() {\n            this.peerReadStreamError.inc(1);\n        },\n        onRpcRecvError() {\n            this.rpcRecvError.inc(1);\n        },\n        onRpcDataError() {\n            this.rpcDataError.inc(1);\n        },\n        onRpcRecv(rpc, rpcBytes) {\n            this.rpcRecvBytes.inc(rpcBytes);\n            this.rpcRecvCount.inc(1);\n            if (rpc.subscriptions)\n                this.rpcRecvSubscription.inc(rpc.subscriptions.length);\n            if (rpc.messages)\n                this.rpcRecvMessage.inc(rpc.messages.length);\n            if (rpc.control) {\n                this.rpcRecvControl.inc(1);\n                if (rpc.control.ihave)\n                    this.rpcRecvIHave.inc(rpc.control.ihave.length);\n                if (rpc.control.iwant)\n                    this.rpcRecvIWant.inc(rpc.control.iwant.length);\n                if (rpc.control.graft)\n                    this.rpcRecvGraft.inc(rpc.control.graft.length);\n                if (rpc.control.prune)\n                    this.rpcRecvPrune.inc(rpc.control.prune.length);\n            }\n        },\n        onRpcSent(rpc, rpcBytes) {\n            this.rpcSentBytes.inc(rpcBytes);\n            this.rpcSentCount.inc(1);\n            if (rpc.subscriptions)\n                this.rpcSentSubscription.inc(rpc.subscriptions.length);\n            if (rpc.messages)\n                this.rpcSentMessage.inc(rpc.messages.length);\n            if (rpc.control) {\n                const ihave = rpc.control.ihave?.length ?? 0;\n                const iwant = rpc.control.iwant?.length ?? 0;\n                const graft = rpc.control.graft?.length ?? 0;\n                const prune = rpc.control.prune?.length ?? 0;\n                if (ihave > 0)\n                    this.rpcSentIHave.inc(ihave);\n                if (iwant > 0)\n                    this.rpcSentIWant.inc(iwant);\n                if (graft > 0)\n                    this.rpcSentGraft.inc(graft);\n                if (prune > 0)\n                    this.rpcSentPrune.inc(prune);\n                if (ihave > 0 || iwant > 0 || graft > 0 || prune > 0)\n                    this.rpcSentControl.inc(1);\n            }\n        },\n        registerScores(scores, scoreThresholds) {\n            let graylist = 0;\n            let publish = 0;\n            let gossip = 0;\n            let mesh = 0;\n            for (const score of scores) {\n                if (score >= scoreThresholds.graylistThreshold)\n                    graylist++;\n                if (score >= scoreThresholds.publishThreshold)\n                    publish++;\n                if (score >= scoreThresholds.gossipThreshold)\n                    gossip++;\n                if (score >= 0)\n                    mesh++;\n            }\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.graylist }, graylist);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.publish }, publish);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.gossip }, gossip);\n            this.peersByScoreThreshold.set({ threshold: ScoreThreshold.mesh }, mesh);\n            // Register full score too\n            this.score.set(scores);\n        },\n        registerScoreWeights(sw) {\n            for (const [topic, wsTopic] of sw.byTopic) {\n                this.scoreWeights.set({ topic, p: 'p1' }, wsTopic.p1w);\n                this.scoreWeights.set({ topic, p: 'p2' }, wsTopic.p2w);\n                this.scoreWeights.set({ topic, p: 'p3' }, wsTopic.p3w);\n                this.scoreWeights.set({ topic, p: 'p3b' }, wsTopic.p3bw);\n                this.scoreWeights.set({ topic, p: 'p4' }, wsTopic.p4w);\n            }\n            this.scoreWeights.set({ p: 'p5' }, sw.p5w);\n            this.scoreWeights.set({ p: 'p6' }, sw.p6w);\n            this.scoreWeights.set({ p: 'p7' }, sw.p7w);\n        },\n        registerScorePerMesh(mesh, scoreByPeer) {\n            const peersPerTopicLabel = new Map();\n            mesh.forEach((peers, topicStr) => {\n                // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n                const topicLabel = this.topicStrToLabel.get(topicStr) ?? 'unknown';\n                let peersInMesh = peersPerTopicLabel.get(topicLabel);\n                if (!peersInMesh) {\n                    peersInMesh = new Set();\n                    peersPerTopicLabel.set(topicLabel, peersInMesh);\n                }\n                peers.forEach((p) => peersInMesh?.add(p));\n            });\n            for (const [topic, peers] of peersPerTopicLabel) {\n                const meshScores = [];\n                peers.forEach((peer) => {\n                    meshScores.push(scoreByPeer.get(peer) ?? 0);\n                });\n                this.scorePerMesh.set({ topic }, meshScores);\n            }\n        }\n    };\n}\n//# sourceMappingURL=metrics.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { randomBytes } from '@libp2p/crypto';\nimport { peerIdFromBytes } from '@libp2p/peer-id';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { RPC } from '../message/rpc.js';\nimport { PublishConfigType, ValidateError } from '../types.js';\nimport { StrictSign, StrictNoSign } from '@libp2p/interface/pubsub';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport const SignPrefix = uint8ArrayFromString('libp2p-pubsub:');\nexport async function buildRawMessage(publishConfig, topic, originalData, transformedData) {\n    switch (publishConfig.type) {\n        case PublishConfigType.Signing: {\n            const rpcMsg = {\n                from: publishConfig.author.toBytes(),\n                data: transformedData,\n                seqno: randomBytes(8),\n                topic,\n                signature: undefined,\n                key: undefined // Exclude key field for signing\n            };\n            // Get the message in bytes, and prepend with the pubsub prefix\n            // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n            const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsg).finish()]);\n            rpcMsg.signature = await publishConfig.privateKey.sign(bytes);\n            rpcMsg.key = publishConfig.key;\n            const msg = {\n                type: 'signed',\n                from: publishConfig.author,\n                data: originalData,\n                sequenceNumber: BigInt(`0x${uint8ArrayToString(rpcMsg.seqno, 'base16')}`),\n                topic,\n                signature: rpcMsg.signature,\n                key: rpcMsg.key\n            };\n            return {\n                raw: rpcMsg,\n                msg: msg\n            };\n        }\n        case PublishConfigType.Anonymous: {\n            return {\n                raw: {\n                    from: undefined,\n                    data: transformedData,\n                    seqno: undefined,\n                    topic,\n                    signature: undefined,\n                    key: undefined\n                },\n                msg: {\n                    type: 'unsigned',\n                    data: originalData,\n                    topic\n                }\n            };\n        }\n    }\n}\nexport async function validateToRawMessage(signaturePolicy, msg) {\n    // If strict-sign, verify all\n    // If anonymous (no-sign), ensure no preven\n    switch (signaturePolicy) {\n        case StrictNoSign:\n            if (msg.signature != null)\n                return { valid: false, error: ValidateError.SignaturePresent };\n            if (msg.seqno != null)\n                return { valid: false, error: ValidateError.SeqnoPresent };\n            if (msg.key != null)\n                return { valid: false, error: ValidateError.FromPresent };\n            return { valid: true, message: { type: 'unsigned', topic: msg.topic, data: msg.data ?? new Uint8Array(0) } };\n        case StrictSign: {\n            // Verify seqno\n            if (msg.seqno == null)\n                return { valid: false, error: ValidateError.InvalidSeqno };\n            if (msg.seqno.length !== 8) {\n                return { valid: false, error: ValidateError.InvalidSeqno };\n            }\n            if (msg.signature == null)\n                return { valid: false, error: ValidateError.InvalidSignature };\n            if (msg.from == null)\n                return { valid: false, error: ValidateError.InvalidPeerId };\n            let fromPeerId;\n            try {\n                // TODO: Fix PeerId types\n                fromPeerId = peerIdFromBytes(msg.from);\n            }\n            catch (e) {\n                return { valid: false, error: ValidateError.InvalidPeerId };\n            }\n            // - check from defined\n            // - transform source to PeerId\n            // - parse signature\n            // - get .key, else from source\n            // - check key == source if present\n            // - verify sig\n            let publicKey;\n            if (msg.key) {\n                publicKey = unmarshalPublicKey(msg.key);\n                // TODO: Should `fromPeerId.pubKey` be optional?\n                if (fromPeerId.publicKey !== undefined && !uint8ArrayEquals(publicKey.bytes, fromPeerId.publicKey)) {\n                    return { valid: false, error: ValidateError.InvalidPeerId };\n                }\n            }\n            else {\n                if (fromPeerId.publicKey == null) {\n                    return { valid: false, error: ValidateError.InvalidPeerId };\n                }\n                publicKey = unmarshalPublicKey(fromPeerId.publicKey);\n            }\n            const rpcMsgPreSign = {\n                from: msg.from,\n                data: msg.data,\n                seqno: msg.seqno,\n                topic: msg.topic,\n                signature: undefined,\n                key: undefined // Exclude key field for signing\n            };\n            // Get the message in bytes, and prepend with the pubsub prefix\n            // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n            const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsgPreSign).finish()]);\n            if (!(await publicKey.verify(bytes, msg.signature))) {\n                return { valid: false, error: ValidateError.InvalidSignature };\n            }\n            return {\n                valid: true,\n                message: {\n                    type: 'signed',\n                    from: fromPeerId,\n                    data: msg.data ?? new Uint8Array(0),\n                    sequenceNumber: BigInt(`0x${uint8ArrayToString(msg.seqno, 'base16')}`),\n                    topic: msg.topic,\n                    signature: msg.signature,\n                    key: msg.key ?? marshalPublicKey(publicKey)\n                }\n            };\n        }\n    }\n}\n//# sourceMappingURL=buildRawMessage.js.map","import { sha256 } from 'multiformats/hashes/sha2';\nimport { msgId } from '@libp2p/pubsub/utils';\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport function msgIdFnStrictSign(msg) {\n    if (msg.type !== 'signed') {\n        throw new Error('expected signed message type');\n    }\n    // Should never happen\n    if (msg.sequenceNumber == null)\n        throw Error('missing seqno field');\n    // TODO: Should use .from here or key?\n    return msgId(msg.from.toBytes(), msg.sequenceNumber);\n}\n/**\n * Generate a message id, based on message `data`\n */\nexport async function msgIdFnStrictNoSign(msg) {\n    return await sha256.encode(msg.data);\n}\n//# sourceMappingURL=msgIdFn.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { CodeError } from '@libp2p/interface/errors';\nimport { peerIdFromBytes, peerIdFromKeys } from '@libp2p/peer-id';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { codes } from './errors.js';\n/**\n * Generate a random sequence number\n */\nexport function randomSeqno() {\n    return BigInt(`0x${uint8ArrayToString(randomBytes(8), 'base16')}`);\n}\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport const msgId = (key, seqno) => {\n    const seqnoBytes = uint8ArrayFromString(seqno.toString(16).padStart(16, '0'), 'base16');\n    const msgId = new Uint8Array(key.length + seqnoBytes.length);\n    msgId.set(key, 0);\n    msgId.set(seqnoBytes, key.length);\n    return msgId;\n};\n/**\n * Generate a message id, based on message `data`\n */\nexport const noSignMsgId = (data) => {\n    return sha256.encode(data);\n};\n/**\n * Check if any member of the first set is also a member\n * of the second set\n */\nexport const anyMatch = (a, b) => {\n    let bHas;\n    if (Array.isArray(b)) {\n        bHas = (val) => b.includes(val);\n    }\n    else {\n        bHas = (val) => b.has(val);\n    }\n    for (const val of a) {\n        if (bHas(val)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Make everything an array\n */\nexport const ensureArray = function (maybeArray) {\n    if (!Array.isArray(maybeArray)) {\n        return [maybeArray];\n    }\n    return maybeArray;\n};\nconst isSigned = async (message) => {\n    if ((message.sequenceNumber == null) || (message.from == null) || (message.signature == null)) {\n        return false;\n    }\n    // if a public key is present in the `from` field, the message should be signed\n    const fromID = peerIdFromBytes(message.from);\n    if (fromID.publicKey != null) {\n        return true;\n    }\n    if (message.key != null) {\n        const signingID = await peerIdFromKeys(message.key);\n        return signingID.equals(fromID);\n    }\n    return false;\n};\nexport const toMessage = async (message) => {\n    if (message.from == null) {\n        throw new CodeError('RPC message was missing from', codes.ERR_MISSING_FROM);\n    }\n    if (!await isSigned(message)) {\n        return {\n            type: 'unsigned',\n            topic: message.topic ?? '',\n            data: message.data ?? new Uint8Array(0)\n        };\n    }\n    const from = peerIdFromBytes(message.from);\n    const msg = {\n        type: 'signed',\n        from: peerIdFromBytes(message.from),\n        topic: message.topic ?? '',\n        sequenceNumber: bigIntFromBytes(message.sequenceNumber ?? new Uint8Array(0)),\n        data: message.data ?? new Uint8Array(0),\n        signature: message.signature ?? new Uint8Array(0),\n        key: message.key ?? from.publicKey ?? new Uint8Array(0)\n    };\n    if (msg.key.length === 0) {\n        throw new CodeError('Signed RPC message was missing key', codes.ERR_MISSING_KEY);\n    }\n    return msg;\n};\nexport const toRpcMessage = (message) => {\n    if (message.type === 'signed') {\n        return {\n            from: message.from.multihash.bytes,\n            data: message.data,\n            sequenceNumber: bigIntToBytes(message.sequenceNumber),\n            topic: message.topic,\n            signature: message.signature,\n            key: message.key\n        };\n    }\n    return {\n        data: message.data,\n        topic: message.topic\n    };\n};\nexport const bigIntToBytes = (num) => {\n    let str = num.toString(16);\n    if (str.length % 2 !== 0) {\n        str = `0${str}`;\n    }\n    return uint8ArrayFromString(str, 'base16');\n};\nexport const bigIntFromBytes = (num) => {\n    return BigInt(`0x${uint8ArrayToString(num, 'base16')}`);\n};\n//# sourceMappingURL=utils.js.map","export function computeScoreWeights(peer, pstats, params, peerIPs, topicStrToLabel) {\n    let score = 0;\n    const byTopic = new Map();\n    // topic stores\n    Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n        // the topic parameters\n        // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n        const topicLabel = topicStrToLabel.get(topic) ?? 'unknown';\n        const topicParams = params.topics[topic];\n        if (topicParams === undefined) {\n            // we are not scoring this topic\n            return;\n        }\n        let topicScores = byTopic.get(topicLabel);\n        if (!topicScores) {\n            topicScores = {\n                p1w: 0,\n                p2w: 0,\n                p3w: 0,\n                p3bw: 0,\n                p4w: 0\n            };\n            byTopic.set(topicLabel, topicScores);\n        }\n        let p1w = 0;\n        let p2w = 0;\n        let p3w = 0;\n        let p3bw = 0;\n        let p4w = 0;\n        // P1: time in Mesh\n        if (tstats.inMesh) {\n            const p1 = Math.max(tstats.meshTime / topicParams.timeInMeshQuantum, topicParams.timeInMeshCap);\n            p1w += p1 * topicParams.timeInMeshWeight;\n        }\n        // P2: first message deliveries\n        let p2 = tstats.firstMessageDeliveries;\n        if (p2 > topicParams.firstMessageDeliveriesCap) {\n            p2 = topicParams.firstMessageDeliveriesCap;\n        }\n        p2w += p2 * topicParams.firstMessageDeliveriesWeight;\n        // P3: mesh message deliveries\n        if (tstats.meshMessageDeliveriesActive &&\n            tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n            const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n            const p3 = deficit * deficit;\n            p3w += p3 * topicParams.meshMessageDeliveriesWeight;\n        }\n        // P3b:\n        // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n        const p3b = tstats.meshFailurePenalty;\n        p3bw += p3b * topicParams.meshFailurePenaltyWeight;\n        // P4: invalid messages\n        // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n        const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n        p4w += p4 * topicParams.invalidMessageDeliveriesWeight;\n        // update score, mixing with topic weight\n        score += (p1w + p2w + p3w + p3bw + p4w) * topicParams.topicWeight;\n        topicScores.p1w += p1w;\n        topicScores.p2w += p2w;\n        topicScores.p3w += p3w;\n        topicScores.p3bw += p3bw;\n        topicScores.p4w += p4w;\n    });\n    // apply the topic score cap, if any\n    if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n        score = params.topicScoreCap;\n        // Proportionally apply cap to all individual contributions\n        const capF = params.topicScoreCap / score;\n        for (const ws of byTopic.values()) {\n            ws.p1w *= capF;\n            ws.p2w *= capF;\n            ws.p3w *= capF;\n            ws.p3bw *= capF;\n            ws.p4w *= capF;\n        }\n    }\n    let p5w = 0;\n    let p6w = 0;\n    let p7w = 0;\n    // P5: application-specific score\n    const p5 = params.appSpecificScore(peer);\n    p5w += p5 * params.appSpecificWeight;\n    // P6: IP colocation factor\n    pstats.knownIPs.forEach((ip) => {\n        if (params.IPColocationFactorWhitelist.has(ip)) {\n            return;\n        }\n        // P6 has a cliff (IPColocationFactorThreshold)\n        // It's only applied if at least that many peers are connected to us from that source IP addr.\n        // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n        const peersInIP = peerIPs.get(ip);\n        const numPeersInIP = peersInIP ? peersInIP.size : 0;\n        if (numPeersInIP > params.IPColocationFactorThreshold) {\n            const surplus = numPeersInIP - params.IPColocationFactorThreshold;\n            const p6 = surplus * surplus;\n            p6w += p6 * params.IPColocationFactorWeight;\n        }\n    });\n    // P7: behavioural pattern penalty\n    const p7 = pstats.behaviourPenalty * pstats.behaviourPenalty;\n    p7w += p7 * params.behaviourPenaltyWeight;\n    score += p5w + p6w + p7w;\n    return {\n        byTopic,\n        p5w,\n        p6w,\n        p7w,\n        score\n    };\n}\nexport function computeAllPeersScoreWeights(peerIdStrs, peerStats, params, peerIPs, topicStrToLabel) {\n    const sw = {\n        byTopic: new Map(),\n        p5w: [],\n        p6w: [],\n        p7w: [],\n        score: []\n    };\n    for (const peerIdStr of peerIdStrs) {\n        const pstats = peerStats.get(peerIdStr);\n        if (pstats) {\n            const swPeer = computeScoreWeights(peerIdStr, pstats, params, peerIPs, topicStrToLabel);\n            for (const [topic, swPeerTopic] of swPeer.byTopic) {\n                let swTopic = sw.byTopic.get(topic);\n                if (!swTopic) {\n                    swTopic = {\n                        p1w: [],\n                        p2w: [],\n                        p3w: [],\n                        p3bw: [],\n                        p4w: []\n                    };\n                    sw.byTopic.set(topic, swTopic);\n                }\n                swTopic.p1w.push(swPeerTopic.p1w);\n                swTopic.p2w.push(swPeerTopic.p2w);\n                swTopic.p3w.push(swPeerTopic.p3w);\n                swTopic.p3bw.push(swPeerTopic.p3bw);\n                swTopic.p4w.push(swPeerTopic.p4w);\n            }\n            sw.p5w.push(swPeer.p5w);\n            sw.p6w.push(swPeer.p6w);\n            sw.p7w.push(swPeer.p7w);\n            sw.score.push(swPeer.score);\n        }\n        else {\n            sw.p5w.push(0);\n            sw.p6w.push(0);\n            sw.p7w.push(0);\n            sw.score.push(0);\n        }\n    }\n    return sw;\n}\n//# sourceMappingURL=scoreMetrics.js.map","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","/**\n * @packageDocumentation\n *\n * @example\n *\n * ```js\n * import { abortableSource } from 'abortable-iterator'\n *\n * async function main () {\n *   // An example function that creates an async iterator that yields an increasing\n *   // number every x milliseconds and NEVER ENDS!\n *   const asyncCounter = async function * (start, delay) {\n *     let i = start\n *     while (true) {\n *       yield new Promise(resolve => setTimeout(() => resolve(i++), delay))\n *     }\n *   }\n *\n *   // Create a counter that'll yield numbers from 0 upwards every second\n *   const everySecond = asyncCounter(0, 1000)\n *\n *   // Make everySecond abortable!\n *   const controller = new AbortController()\n *   const abortableEverySecond = abortableSource(everySecond, controller.signal)\n *\n *   // Abort after 5 seconds\n *   setTimeout(() => controller.abort(), 5000)\n *\n *   try {\n *     // Start the iteration, which will throw after 5 seconds when it is aborted\n *     for await (const n of abortableEverySecond) {\n *       console.log(n)\n *     }\n *   } catch (err) {\n *     if (err.code === 'ERR_ABORTED') {\n *       // Expected - all ok :D\n *     } else {\n *       throw err\n *     }\n *   }\n * }\n *\n * main()\n * ```\n */\nimport { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n/**\n * Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\n */\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","import { abortableSource } from 'abortable-iterator';\nimport { pipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport { encode, decode } from 'it-length-prefixed';\nexport class OutboundStream {\n    rawStream;\n    pushable;\n    closeController;\n    maxBufferSize;\n    constructor(rawStream, errCallback, opts) {\n        this.rawStream = rawStream;\n        this.pushable = pushable({ objectMode: false });\n        this.closeController = new AbortController();\n        this.maxBufferSize = opts.maxBufferSize ?? Infinity;\n        pipe(abortableSource(this.pushable, this.closeController.signal, { returnOnAbort: true }), (source) => encode(source), this.rawStream).catch(errCallback);\n    }\n    get protocol() {\n        // TODO remove this non-nullish assertion after https://github.com/libp2p/js-libp2p-interfaces/pull/265 is incorporated\n        return this.rawStream.protocol;\n    }\n    push(data) {\n        if (this.pushable.readableLength > this.maxBufferSize) {\n            throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);\n        }\n        this.pushable.push(data);\n    }\n    close() {\n        this.closeController.abort();\n        // similar to pushable.end() but clear the internal buffer\n        this.pushable.return();\n        this.rawStream.close();\n    }\n}\nexport class InboundStream {\n    source;\n    rawStream;\n    closeController;\n    constructor(rawStream, opts = {}) {\n        this.rawStream = rawStream;\n        this.closeController = new AbortController();\n        this.source = abortableSource(pipe(this.rawStream, (source) => decode(source, opts)), this.closeController.signal, {\n            returnOnAbort: true\n        });\n    }\n    close() {\n        this.closeController.abort();\n        this.rawStream.close();\n    }\n}\n//# sourceMappingURL=stream.js.map","import protobuf from 'protobufjs/minimal.js';\nexport const defaultDecodeRpcLimits = {\n    maxSubscriptions: Infinity,\n    maxMessages: Infinity,\n    maxIhaveMessageIDs: Infinity,\n    maxIwantMessageIDs: Infinity,\n    maxControlMessages: Infinity,\n    maxPeerInfos: Infinity\n};\n/**\n * Copied code from src/message/rpc.cjs but with decode limits to prevent OOM attacks\n */\nexport function decodeRpc(bytes, opts) {\n    // Mutate to use the option as stateful counter. Must limit the total count of messageIDs across all IWANT, IHAVE\n    // else one count put 100 messageIDs into each 100 IWANT and \"get around\" the limit\n    opts = { ...opts };\n    const r = protobuf.Reader.create(bytes);\n    const l = bytes.length;\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                if (!(m.subscriptions && m.subscriptions.length))\n                    m.subscriptions = [];\n                if (m.subscriptions.length < opts.maxSubscriptions)\n                    m.subscriptions.push(decodeSubOpts(r, r.uint32()));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 2:\n                if (!(m.messages && m.messages.length))\n                    m.messages = [];\n                if (m.messages.length < opts.maxMessages)\n                    m.messages.push(decodeMessage(r, r.uint32()));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 3:\n                m.control = decodeControlMessage(r, r.uint32(), opts);\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeSubOpts(r, l) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.subscribe = r.bool();\n                break;\n            case 2:\n                m.topic = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeMessage(r, l) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.from = r.bytes();\n                break;\n            case 2:\n                m.data = r.bytes();\n                break;\n            case 3:\n                m.seqno = r.bytes();\n                break;\n            case 4:\n                m.topic = r.string();\n                break;\n            case 5:\n                m.signature = r.bytes();\n                break;\n            case 6:\n                m.key = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    if (!m.topic)\n        throw Error(\"missing required 'topic'\");\n    return m;\n}\nfunction decodeControlMessage(r, l, opts) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                if (!(m.ihave && m.ihave.length))\n                    m.ihave = [];\n                if (m.ihave.length < opts.maxControlMessages)\n                    m.ihave.push(decodeControlIHave(r, r.uint32(), opts));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 2:\n                if (!(m.iwant && m.iwant.length))\n                    m.iwant = [];\n                if (m.iwant.length < opts.maxControlMessages)\n                    m.iwant.push(decodeControlIWant(r, r.uint32(), opts));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 3:\n                if (!(m.graft && m.graft.length))\n                    m.graft = [];\n                if (m.graft.length < opts.maxControlMessages)\n                    m.graft.push(decodeControlGraft(r, r.uint32()));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 4:\n                if (!(m.prune && m.prune.length))\n                    m.prune = [];\n                if (m.prune.length < opts.maxControlMessages)\n                    m.prune.push(decodeControlPrune(r, r.uint32(), opts));\n                else\n                    r.skipType(t & 7);\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeControlIHave(r, l, opts) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.topicID = r.string();\n                break;\n            case 2:\n                if (!(m.messageIDs && m.messageIDs.length))\n                    m.messageIDs = [];\n                if (opts.maxIhaveMessageIDs-- > 0)\n                    m.messageIDs.push(r.bytes());\n                else\n                    r.skipType(t & 7);\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeControlIWant(r, l, opts) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                if (!(m.messageIDs && m.messageIDs.length))\n                    m.messageIDs = [];\n                if (opts.maxIwantMessageIDs-- > 0)\n                    m.messageIDs.push(r.bytes());\n                else\n                    r.skipType(t & 7);\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeControlGraft(r, l) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.topicID = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodeControlPrune(r, l, opts) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.topicID = r.string();\n                break;\n            case 2:\n                if (!(m.peers && m.peers.length))\n                    m.peers = [];\n                if (opts.maxPeerInfos-- > 0)\n                    m.peers.push(decodePeerInfo(r, r.uint32()));\n                else\n                    r.skipType(t & 7);\n                break;\n            case 3:\n                m.backoff = r.uint64();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\nfunction decodePeerInfo(r, l) {\n    const c = l === undefined ? r.len : r.pos + l;\n    const m = {};\n    while (r.pos < c) {\n        const t = r.uint32();\n        switch (t >>> 3) {\n            case 1:\n                m.peerID = r.bytes();\n                break;\n            case 2:\n                m.signedPeerRecord = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n        }\n    }\n    return m;\n}\n//# sourceMappingURL=decodeRpc.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport { IpNet } from '@chainsafe/netmask';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as varint from 'uint8-varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.encodingLength(size));\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.encodingLength(size));\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.encodingLength(size));\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToString } from '@multiformats/multiaddr/convert';\n// Protocols https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n// code  size  name\n// 4     32    ip4\n// 41    128   ip6\nvar Protocol;\n(function (Protocol) {\n    Protocol[Protocol[\"ip4\"] = 4] = \"ip4\";\n    Protocol[Protocol[\"ip6\"] = 41] = \"ip6\";\n})(Protocol || (Protocol = {}));\nexport function multiaddrToIPStr(multiaddr) {\n    for (const tuple of multiaddr.tuples()) {\n        switch (tuple[0]) {\n            case Protocol.ip4:\n            case Protocol.ip6:\n                return convertToString(tuple[0], tuple[1]);\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=multiaddr.js.map","import { pipe } from 'it-pipe';\nimport { peerIdFromBytes, peerIdFromString } from '@libp2p/peer-id';\nimport { logger } from '@libp2p/logger';\nimport { CustomEvent, EventEmitter } from '@libp2p/interface/events';\nimport { MessageCache } from './message-cache.js';\nimport { RPC } from './message/rpc.js';\nimport * as constants from './constants.js';\nimport { shuffle, messageIdToString } from './utils/index.js';\nimport { PeerScore, createPeerScoreParams, createPeerScoreThresholds } from './score/index.js';\nimport { IWantTracer } from './tracer.js';\nimport { SimpleTimeCache } from './utils/time-cache.js';\nimport { ACCEPT_FROM_WHITELIST_DURATION_MS, ACCEPT_FROM_WHITELIST_MAX_MESSAGES, ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, BACKOFF_SLACK } from './constants.js';\nimport { ChurnReason, getMetrics, IHaveIgnoreReason, InclusionReason, ScorePenalty } from './metrics.js';\nimport { ValidateError, MessageStatus, RejectReason, rejectReasonFromAcceptance } from './types.js';\nimport { buildRawMessage, validateToRawMessage } from './utils/buildRawMessage.js';\nimport { msgIdFnStrictNoSign, msgIdFnStrictSign } from './utils/msgIdFn.js';\nimport { computeAllPeersScoreWeights } from './score/scoreMetrics.js';\nimport { getPublishConfigFromPeerId } from './utils/publishConfig.js';\nimport { StrictSign, StrictNoSign, TopicValidatorResult } from '@libp2p/interface/pubsub';\nimport { removeFirstNItemsFromSet, removeItemsFromSet } from './utils/set.js';\nimport { pushable } from 'it-pushable';\nimport { InboundStream, OutboundStream } from './stream.js';\nimport { decodeRpc, defaultDecodeRpcLimits } from './message/decodeRpc.js';\nimport { multiaddrToIPStr } from './utils/multiaddr.js';\nexport const multicodec = constants.GossipsubIDv11;\nvar GossipStatusCode;\n(function (GossipStatusCode) {\n    GossipStatusCode[GossipStatusCode[\"started\"] = 0] = \"started\";\n    GossipStatusCode[GossipStatusCode[\"stopped\"] = 1] = \"stopped\";\n})(GossipStatusCode || (GossipStatusCode = {}));\nexport class GossipSub extends EventEmitter {\n    /**\n     * The signature policy to follow by default\n     */\n    globalSignaturePolicy;\n    multicodecs = [constants.GossipsubIDv11, constants.GossipsubIDv10];\n    publishConfig;\n    dataTransform;\n    // State\n    peers = new Set();\n    streamsInbound = new Map();\n    streamsOutbound = new Map();\n    /** Ensures outbound streams are created sequentially */\n    outboundInflightQueue = pushable({ objectMode: true });\n    /** Direct peers */\n    direct = new Set();\n    /** Floodsub peers */\n    floodsubPeers = new Set();\n    /** Cache of seen messages */\n    seenCache;\n    /**\n     * Map of peer id and AcceptRequestWhileListEntry\n     */\n    acceptFromWhitelist = new Map();\n    /**\n     * Map of topics to which peers are subscribed to\n     */\n    topics = new Map();\n    /**\n     * List of our subscriptions\n     */\n    subscriptions = new Set();\n    /**\n     * Map of topic meshes\n     * topic => peer id set\n     */\n    mesh = new Map();\n    /**\n     * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership\n     * topic => peer id set\n     */\n    fanout = new Map();\n    /**\n     * Map of last publish time for fanout topics\n     * topic => last publish time\n     */\n    fanoutLastpub = new Map();\n    /**\n     * Map of pending messages to gossip\n     * peer id => control messages\n     */\n    gossip = new Map();\n    /**\n     * Map of control messages\n     * peer id => control message\n     */\n    control = new Map();\n    /**\n     * Number of IHAVEs received from peer in the last heartbeat\n     */\n    peerhave = new Map();\n    /** Number of messages we have asked from peer in the last heartbeat */\n    iasked = new Map();\n    /** Prune backoff map */\n    backoff = new Map();\n    /**\n     * Connection direction cache, marks peers with outbound connections\n     * peer id => direction\n     */\n    outbound = new Map();\n    msgIdFn;\n    /**\n     * A fast message id function used for internal message de-duplication\n     */\n    fastMsgIdFn;\n    msgIdToStrFn;\n    /** Maps fast message-id to canonical message-id */\n    fastMsgIdCache;\n    /**\n     * Short term cache for published message ids. This is used for penalizing peers sending\n     * our own messages back if the messages are anonymous or use a random author.\n     */\n    publishedMessageIds;\n    /**\n     * A message cache that contains the messages for last few heartbeat ticks\n     */\n    mcache;\n    /** Peer score tracking */\n    score;\n    /**\n     * Custom validator function per topic.\n     * Must return or resolve quickly (< 100ms) to prevent causing penalties for late messages.\n     * If you need to apply validation that may require longer times use `asyncValidation` option and callback the\n     * validation result through `Gossipsub.reportValidationResult`\n     */\n    topicValidators = new Map();\n    /**\n     * Make this protected so child class may want to redirect to its own log.\n     */\n    log;\n    /**\n     * Number of heartbeats since the beginning of time\n     * This allows us to amortize some resource cleanup -- eg: backoff cleanup\n     */\n    heartbeatTicks = 0;\n    /**\n     * Tracks IHAVE/IWANT promises broken by peers\n     */\n    gossipTracer;\n    components;\n    directPeerInitial = null;\n    static multicodec = constants.GossipsubIDv11;\n    // Options\n    opts;\n    decodeRpcLimits;\n    metrics;\n    status = { code: GossipStatusCode.stopped };\n    maxInboundStreams;\n    maxOutboundStreams;\n    allowedTopics;\n    heartbeatTimer = null;\n    constructor(components, options = {}) {\n        super();\n        const opts = {\n            fallbackToFloodsub: true,\n            floodPublish: true,\n            doPX: false,\n            directPeers: [],\n            D: constants.GossipsubD,\n            Dlo: constants.GossipsubDlo,\n            Dhi: constants.GossipsubDhi,\n            Dscore: constants.GossipsubDscore,\n            Dout: constants.GossipsubDout,\n            Dlazy: constants.GossipsubDlazy,\n            heartbeatInterval: constants.GossipsubHeartbeatInterval,\n            fanoutTTL: constants.GossipsubFanoutTTL,\n            mcacheLength: constants.GossipsubHistoryLength,\n            mcacheGossip: constants.GossipsubHistoryGossip,\n            seenTTL: constants.GossipsubSeenTTL,\n            gossipsubIWantFollowupMs: constants.GossipsubIWantFollowupTime,\n            prunePeers: constants.GossipsubPrunePeers,\n            pruneBackoff: constants.GossipsubPruneBackoff,\n            unsubcribeBackoff: constants.GossipsubUnsubscribeBackoff,\n            graftFloodThreshold: constants.GossipsubGraftFloodThreshold,\n            opportunisticGraftPeers: constants.GossipsubOpportunisticGraftPeers,\n            opportunisticGraftTicks: constants.GossipsubOpportunisticGraftTicks,\n            directConnectTicks: constants.GossipsubDirectConnectTicks,\n            ...options,\n            scoreParams: createPeerScoreParams(options.scoreParams),\n            scoreThresholds: createPeerScoreThresholds(options.scoreThresholds)\n        };\n        this.components = components;\n        this.decodeRpcLimits = opts.decodeRpcLimits ?? defaultDecodeRpcLimits;\n        this.globalSignaturePolicy = opts.globalSignaturePolicy ?? StrictSign;\n        // Also wants to get notified of peers connected using floodsub\n        if (opts.fallbackToFloodsub) {\n            this.multicodecs.push(constants.FloodsubID);\n        }\n        // From pubsub\n        this.log = logger(opts.debugName ?? 'libp2p:gossipsub');\n        // Gossipsub\n        this.opts = opts;\n        this.direct = new Set(opts.directPeers.map((p) => p.id.toString()));\n        this.seenCache = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        this.publishedMessageIds = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        if (options.msgIdFn) {\n            // Use custom function\n            this.msgIdFn = options.msgIdFn;\n        }\n        else {\n            switch (this.globalSignaturePolicy) {\n                case StrictSign:\n                    this.msgIdFn = msgIdFnStrictSign;\n                    break;\n                case StrictNoSign:\n                    this.msgIdFn = msgIdFnStrictNoSign;\n                    break;\n            }\n        }\n        if (options.fastMsgIdFn) {\n            this.fastMsgIdFn = options.fastMsgIdFn;\n            this.fastMsgIdCache = new SimpleTimeCache({ validityMs: opts.seenTTL });\n        }\n        // By default, gossipsub only provide a browser friendly function to convert Uint8Array message id to string.\n        this.msgIdToStrFn = options.msgIdToStrFn ?? messageIdToString;\n        this.mcache = options.messageCache || new MessageCache(opts.mcacheGossip, opts.mcacheLength, this.msgIdToStrFn);\n        if (options.dataTransform) {\n            this.dataTransform = options.dataTransform;\n        }\n        if (options.metricsRegister) {\n            if (!options.metricsTopicStrToLabel) {\n                throw Error('Must set metricsTopicStrToLabel with metrics');\n            }\n            // in theory, each topic has its own meshMessageDeliveriesWindow param\n            // however in lodestar, we configure it mostly the same so just pick the max of positive ones\n            // (some topics have meshMessageDeliveriesWindow as 0)\n            const maxMeshMessageDeliveriesWindowMs = Math.max(...Object.values(opts.scoreParams.topics).map((topicParam) => topicParam.meshMessageDeliveriesWindow), constants.DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS);\n            const metrics = getMetrics(options.metricsRegister, options.metricsTopicStrToLabel, {\n                gossipPromiseExpireSec: this.opts.gossipsubIWantFollowupMs / 1000,\n                behaviourPenaltyThreshold: opts.scoreParams.behaviourPenaltyThreshold,\n                maxMeshMessageDeliveriesWindowSec: maxMeshMessageDeliveriesWindowMs / 1000\n            });\n            metrics.mcacheSize.addCollect(() => this.onScrapeMetrics(metrics));\n            for (const protocol of this.multicodecs) {\n                metrics.protocolsEnabled.set({ protocol }, 1);\n            }\n            this.metrics = metrics;\n        }\n        else {\n            this.metrics = null;\n        }\n        this.gossipTracer = new IWantTracer(this.opts.gossipsubIWantFollowupMs, this.msgIdToStrFn, this.metrics);\n        /**\n         * libp2p\n         */\n        this.score = new PeerScore(this.opts.scoreParams, this.metrics, {\n            scoreCacheValidityMs: opts.heartbeatInterval\n        });\n        this.maxInboundStreams = options.maxInboundStreams;\n        this.maxOutboundStreams = options.maxOutboundStreams;\n        this.allowedTopics = opts.allowedTopics ? new Set(opts.allowedTopics) : null;\n    }\n    getPeers() {\n        return [...this.peers.keys()].map((str) => peerIdFromString(str));\n    }\n    isStarted() {\n        return this.status.code === GossipStatusCode.started;\n    }\n    // LIFECYCLE METHODS\n    /**\n     * Mounts the gossipsub protocol onto the libp2p node and sends our\n     * our subscriptions to every peer connected\n     */\n    async start() {\n        // From pubsub\n        if (this.isStarted()) {\n            return;\n        }\n        this.log('starting');\n        this.publishConfig = await getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId);\n        // Create the outbound inflight queue\n        // This ensures that outbound stream creation happens sequentially\n        this.outboundInflightQueue = pushable({ objectMode: true });\n        pipe(this.outboundInflightQueue, async (source) => {\n            for await (const { peerId, connection } of source) {\n                await this.createOutboundStream(peerId, connection);\n            }\n        }).catch((e) => this.log.error('outbound inflight queue error', e));\n        // set direct peer addresses in the address book\n        await Promise.all(this.opts.directPeers.map(async (p) => {\n            await this.components.peerStore.merge(p.id, {\n                multiaddrs: p.addrs\n            });\n        }));\n        const registrar = this.components.registrar;\n        // Incoming streams\n        // Called after a peer dials us\n        await Promise.all(this.multicodecs.map((multicodec) => registrar.handle(multicodec, this.onIncomingStream.bind(this), {\n            maxInboundStreams: this.maxInboundStreams,\n            maxOutboundStreams: this.maxOutboundStreams\n        })));\n        // # How does Gossipsub interact with libp2p? Rough guide from Mar 2022\n        //\n        // ## Setup:\n        // Gossipsub requests libp2p to callback, TBD\n        //\n        // `this.libp2p.handle()` registers a handler for `/meshsub/1.1.0` and other Gossipsub protocols\n        // The handler callback is registered in libp2p Upgrader.protocols map.\n        //\n        // Upgrader receives an inbound connection from some transport and (`Upgrader.upgradeInbound`):\n        // - Adds encryption (NOISE in our case)\n        // - Multiplex stream\n        // - Create a muxer and register that for each new stream call Upgrader.protocols handler\n        //\n        // ## Topology\n        // - new instance of Topology (unlinked to libp2p) with handlers\n        // - registar.register(topology)\n        // register protocol with topology\n        // Topology callbacks called on connection manager changes\n        const topology = {\n            onConnect: this.onPeerConnected.bind(this),\n            onDisconnect: this.onPeerDisconnected.bind(this)\n        };\n        const registrarTopologyIds = await Promise.all(this.multicodecs.map((multicodec) => registrar.register(multicodec, topology)));\n        // Schedule to start heartbeat after `GossipsubHeartbeatInitialDelay`\n        const heartbeatTimeout = setTimeout(this.runHeartbeat, constants.GossipsubHeartbeatInitialDelay);\n        // Then, run heartbeat every `heartbeatInterval` offset by `GossipsubHeartbeatInitialDelay`\n        this.status = {\n            code: GossipStatusCode.started,\n            registrarTopologyIds,\n            heartbeatTimeout: heartbeatTimeout,\n            hearbeatStartMs: Date.now() + constants.GossipsubHeartbeatInitialDelay\n        };\n        this.score.start();\n        // connect to direct peers\n        this.directPeerInitial = setTimeout(() => {\n            Promise.resolve()\n                .then(async () => {\n                await Promise.all(Array.from(this.direct).map(async (id) => await this.connect(id)));\n            })\n                .catch((err) => {\n                this.log(err);\n            });\n        }, constants.GossipsubDirectConnectInitialDelay);\n        this.log('started');\n    }\n    /**\n     * Unmounts the gossipsub protocol and shuts down every connection\n     */\n    async stop() {\n        this.log('stopping');\n        // From pubsub\n        if (this.status.code !== GossipStatusCode.started) {\n            return;\n        }\n        const { registrarTopologyIds } = this.status;\n        this.status = { code: GossipStatusCode.stopped };\n        // unregister protocol and handlers\n        const registrar = this.components.registrar;\n        await Promise.all(this.multicodecs.map((multicodec) => registrar.unhandle(multicodec)));\n        registrarTopologyIds.forEach((id) => registrar.unregister(id));\n        this.outboundInflightQueue.end();\n        for (const outboundStream of this.streamsOutbound.values()) {\n            outboundStream.close();\n        }\n        this.streamsOutbound.clear();\n        for (const inboundStream of this.streamsInbound.values()) {\n            inboundStream.close();\n        }\n        this.streamsInbound.clear();\n        this.peers.clear();\n        this.subscriptions.clear();\n        // Gossipsub\n        if (this.heartbeatTimer) {\n            this.heartbeatTimer.cancel();\n            this.heartbeatTimer = null;\n        }\n        this.score.stop();\n        this.mesh.clear();\n        this.fanout.clear();\n        this.fanoutLastpub.clear();\n        this.gossip.clear();\n        this.control.clear();\n        this.peerhave.clear();\n        this.iasked.clear();\n        this.backoff.clear();\n        this.outbound.clear();\n        this.gossipTracer.clear();\n        this.seenCache.clear();\n        if (this.fastMsgIdCache)\n            this.fastMsgIdCache.clear();\n        if (this.directPeerInitial)\n            clearTimeout(this.directPeerInitial);\n        this.log('stopped');\n    }\n    /** FOR DEBUG ONLY - Dump peer stats for all peers. Data is cloned, safe to mutate */\n    dumpPeerScoreStats() {\n        return this.score.dumpPeerScoreStats();\n    }\n    /**\n     * On an inbound stream opened\n     */\n    onIncomingStream({ stream, connection }) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const peerId = connection.remotePeer;\n        // add peer to router\n        this.addPeer(peerId, connection.direction, connection.remoteAddr);\n        // create inbound stream\n        this.createInboundStream(peerId, stream);\n        // attempt to create outbound stream\n        this.outboundInflightQueue.push({ peerId, connection });\n    }\n    /**\n     * Registrar notifies an established connection with pubsub protocol\n     */\n    onPeerConnected(peerId, connection) {\n        this.metrics?.newConnectionCount.inc({ status: connection.status });\n        // libp2p may emit a closed connection and never issue peer:disconnect event\n        // see https://github.com/ChainSafe/js-libp2p-gossipsub/issues/398\n        if (!this.isStarted() || connection.status !== 'open') {\n            return;\n        }\n        this.addPeer(peerId, connection.direction, connection.remoteAddr);\n        this.outboundInflightQueue.push({ peerId, connection });\n    }\n    /**\n     * Registrar notifies a closing connection with pubsub protocol\n     */\n    onPeerDisconnected(peerId) {\n        this.log('connection ended %p', peerId);\n        this.removePeer(peerId);\n    }\n    async createOutboundStream(peerId, connection) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // TODO make this behavior more robust\n        // This behavior is different than for inbound streams\n        // If an outbound stream already exists, don't create a new stream\n        if (this.streamsOutbound.has(id)) {\n            return;\n        }\n        try {\n            const stream = new OutboundStream(await connection.newStream(this.multicodecs), (e) => this.log.error('outbound pipe error', e), { maxBufferSize: this.opts.maxOutboundBufferSize });\n            this.log('create outbound stream %p', peerId);\n            this.streamsOutbound.set(id, stream);\n            const protocol = stream.protocol;\n            if (protocol === constants.FloodsubID) {\n                this.floodsubPeers.add(id);\n            }\n            this.metrics?.peersPerProtocol.inc({ protocol }, 1);\n            // Immediately send own subscriptions via the newly attached stream\n            if (this.subscriptions.size > 0) {\n                this.log('send subscriptions to', id);\n                this.sendSubscriptions(id, Array.from(this.subscriptions), true);\n            }\n        }\n        catch (e) {\n            this.log.error('createOutboundStream error', e);\n        }\n    }\n    async createInboundStream(peerId, stream) {\n        if (!this.isStarted()) {\n            return;\n        }\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // TODO make this behavior more robust\n        // This behavior is different than for outbound streams\n        // If a peer initiates a new inbound connection\n        // we assume that one is the new canonical inbound stream\n        const priorInboundStream = this.streamsInbound.get(id);\n        if (priorInboundStream !== undefined) {\n            this.log('replacing existing inbound steam %s', id);\n            priorInboundStream.close();\n        }\n        this.log('create inbound stream %s', id);\n        const inboundStream = new InboundStream(stream, { maxDataLength: this.opts.maxInboundDataLength });\n        this.streamsInbound.set(id, inboundStream);\n        this.pipePeerReadStream(peerId, inboundStream.source).catch((err) => this.log(err));\n    }\n    /**\n     * Add a peer to the router\n     */\n    addPeer(peerId, direction, addr) {\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            this.log('new peer %p', peerId);\n            this.peers.add(id);\n            // Add to peer scoring\n            this.score.addPeer(id);\n            const currentIP = multiaddrToIPStr(addr);\n            if (currentIP !== null) {\n                this.score.addIP(id, currentIP);\n            }\n            else {\n                this.log('Added peer has no IP in current address %s %s', id, addr.toString());\n            }\n            // track the connection direction. Don't allow to unset outbound\n            if (!this.outbound.has(id)) {\n                this.outbound.set(id, direction === 'outbound');\n            }\n        }\n    }\n    /**\n     * Removes a peer from the router\n     */\n    removePeer(peerId) {\n        const id = peerId.toString();\n        if (!this.peers.has(id)) {\n            return;\n        }\n        // delete peer\n        this.log('delete peer %p', peerId);\n        this.peers.delete(id);\n        const outboundStream = this.streamsOutbound.get(id);\n        const inboundStream = this.streamsInbound.get(id);\n        if (outboundStream) {\n            this.metrics?.peersPerProtocol.inc({ protocol: outboundStream.protocol }, -1);\n        }\n        // close streams\n        outboundStream?.close();\n        inboundStream?.close();\n        // remove streams\n        this.streamsOutbound.delete(id);\n        this.streamsInbound.delete(id);\n        // remove peer from topics map\n        for (const peers of this.topics.values()) {\n            peers.delete(id);\n        }\n        // Remove this peer from the mesh\n        for (const [topicStr, peers] of this.mesh) {\n            if (peers.delete(id) === true) {\n                this.metrics?.onRemoveFromMesh(topicStr, ChurnReason.Dc, 1);\n            }\n        }\n        // Remove this peer from the fanout\n        for (const peers of this.fanout.values()) {\n            peers.delete(id);\n        }\n        // Remove from floodsubPeers\n        this.floodsubPeers.delete(id);\n        // Remove from gossip mapping\n        this.gossip.delete(id);\n        // Remove from control mapping\n        this.control.delete(id);\n        // Remove from backoff mapping\n        this.outbound.delete(id);\n        // Remove from peer scoring\n        this.score.removePeer(id);\n        this.acceptFromWhitelist.delete(id);\n    }\n    // API METHODS\n    get started() {\n        return this.status.code === GossipStatusCode.started;\n    }\n    /**\n     * Get a the peer-ids in a topic mesh\n     */\n    getMeshPeers(topic) {\n        const peersInTopic = this.mesh.get(topic);\n        return peersInTopic ? Array.from(peersInTopic) : [];\n    }\n    /**\n     * Get a list of the peer-ids that are subscribed to one topic.\n     */\n    getSubscribers(topic) {\n        const peersInTopic = this.topics.get(topic);\n        return (peersInTopic ? Array.from(peersInTopic) : []).map((str) => peerIdFromString(str));\n    }\n    /**\n     * Get the list of topics which the peer is subscribed to.\n     */\n    getTopics() {\n        return Array.from(this.subscriptions);\n    }\n    // TODO: Reviewing Pubsub API\n    // MESSAGE METHODS\n    /**\n     * Responsible for processing each RPC message received by other peers.\n     */\n    async pipePeerReadStream(peerId, stream) {\n        try {\n            await pipe(stream, async (source) => {\n                for await (const data of source) {\n                    try {\n                        // TODO: Check max gossip message size, before decodeRpc()\n                        const rpcBytes = data.subarray();\n                        // Note: This function may throw, it must be wrapped in a try {} catch {} to prevent closing the stream.\n                        // TODO: What should we do if the entire RPC is invalid?\n                        const rpc = decodeRpc(rpcBytes, this.decodeRpcLimits);\n                        this.metrics?.onRpcRecv(rpc, rpcBytes.length);\n                        // Since processRpc may be overridden entirely in unsafe ways,\n                        // the simplest/safest option here is to wrap in a function and capture all errors\n                        // to prevent a top-level unhandled exception\n                        // This processing of rpc messages should happen without awaiting full validation/execution of prior messages\n                        if (this.opts.awaitRpcHandler) {\n                            try {\n                                await this.handleReceivedRpc(peerId, rpc);\n                            }\n                            catch (err) {\n                                this.metrics?.onRpcRecvError();\n                                this.log(err);\n                            }\n                        }\n                        else {\n                            this.handleReceivedRpc(peerId, rpc).catch((err) => {\n                                this.metrics?.onRpcRecvError();\n                                this.log(err);\n                            });\n                        }\n                    }\n                    catch (e) {\n                        this.metrics?.onRpcDataError();\n                        this.log(e);\n                    }\n                }\n            });\n        }\n        catch (err) {\n            this.metrics?.onPeerReadStreamError();\n            this.handlePeerReadStreamError(err, peerId);\n        }\n    }\n    /**\n     * Handle error when read stream pipe throws, less of the functional use but more\n     * to for testing purposes to spy on the error handling\n     * */\n    handlePeerReadStreamError(err, peerId) {\n        this.log.error(err);\n        this.onPeerDisconnected(peerId);\n    }\n    /**\n     * Handles an rpc request from a peer\n     */\n    async handleReceivedRpc(from, rpc) {\n        // Check if peer is graylisted in which case we ignore the event\n        if (!this.acceptFrom(from.toString())) {\n            this.log('received message from unacceptable peer %p', from);\n            this.metrics?.rpcRecvNotAccepted.inc();\n            return;\n        }\n        const subscriptions = rpc.subscriptions ? rpc.subscriptions.length : 0;\n        const messages = rpc.messages ? rpc.messages.length : 0;\n        let ihave = 0;\n        let iwant = 0;\n        let graft = 0;\n        let prune = 0;\n        if (rpc.control) {\n            if (rpc.control.ihave)\n                ihave = rpc.control.ihave.length;\n            if (rpc.control.iwant)\n                iwant = rpc.control.iwant.length;\n            if (rpc.control.graft)\n                graft = rpc.control.graft.length;\n            if (rpc.control.prune)\n                prune = rpc.control.prune.length;\n        }\n        this.log(`rpc.from ${from.toString()} subscriptions ${subscriptions} messages ${messages} ihave ${ihave} iwant ${iwant} graft ${graft} prune ${prune}`);\n        // Handle received subscriptions\n        if (rpc.subscriptions && rpc.subscriptions.length > 0) {\n            // update peer subscriptions\n            const subscriptions = [];\n            rpc.subscriptions.forEach((subOpt) => {\n                const topic = subOpt.topic;\n                const subscribe = subOpt.subscribe === true;\n                if (topic != null) {\n                    if (this.allowedTopics && !this.allowedTopics.has(topic)) {\n                        // Not allowed: subscription data-structures are not bounded by topic count\n                        // TODO: Should apply behaviour penalties?\n                        return;\n                    }\n                    this.handleReceivedSubscription(from, topic, subscribe);\n                    subscriptions.push({ topic, subscribe });\n                }\n            });\n            this.dispatchEvent(new CustomEvent('subscription-change', {\n                detail: { peerId: from, subscriptions }\n            }));\n        }\n        // Handle messages\n        // TODO: (up to limit)\n        if (rpc.messages) {\n            for (const message of rpc.messages) {\n                if (this.allowedTopics && !this.allowedTopics.has(message.topic)) {\n                    // Not allowed: message cache data-structures are not bounded by topic count\n                    // TODO: Should apply behaviour penalties?\n                    continue;\n                }\n                const handleReceivedMessagePromise = this.handleReceivedMessage(from, message)\n                    // Should never throw, but handle just in case\n                    .catch((err) => {\n                    this.metrics?.onMsgRecvError(message.topic);\n                    this.log(err);\n                });\n                if (this.opts.awaitRpcMessageHandler) {\n                    await handleReceivedMessagePromise;\n                }\n            }\n        }\n        // Handle control messages\n        if (rpc.control) {\n            await this.handleControlMessage(from.toString(), rpc.control);\n        }\n    }\n    /**\n     * Handles a subscription change from a peer\n     */\n    handleReceivedSubscription(from, topic, subscribe) {\n        this.log('subscription update from %p topic %s', from, topic);\n        let topicSet = this.topics.get(topic);\n        if (topicSet == null) {\n            topicSet = new Set();\n            this.topics.set(topic, topicSet);\n        }\n        if (subscribe) {\n            // subscribe peer to new topic\n            topicSet.add(from.toString());\n        }\n        else {\n            // unsubscribe from existing topic\n            topicSet.delete(from.toString());\n        }\n        // TODO: rust-libp2p has A LOT more logic here\n    }\n    /**\n     * Handles a newly received message from an RPC.\n     * May forward to all peers in the mesh.\n     */\n    async handleReceivedMessage(from, rpcMsg) {\n        this.metrics?.onMsgRecvPreValidation(rpcMsg.topic);\n        const validationResult = await this.validateReceivedMessage(from, rpcMsg);\n        this.metrics?.onPrevalidationResult(rpcMsg.topic, validationResult.code);\n        switch (validationResult.code) {\n            case MessageStatus.duplicate:\n                // Report the duplicate\n                this.score.duplicateMessage(from.toString(), validationResult.msgIdStr, rpcMsg.topic);\n                // due to the collision of fastMsgIdFn, 2 different messages may end up the same fastMsgId\n                // so we need to also mark the duplicate message as delivered or the promise is not resolved\n                // and peer gets penalized. See https://github.com/ChainSafe/js-libp2p-gossipsub/pull/385\n                this.gossipTracer.deliverMessage(validationResult.msgIdStr, true);\n                this.mcache.observeDuplicate(validationResult.msgIdStr, from.toString());\n                return;\n            case MessageStatus.invalid:\n                // invalid messages received\n                // metrics.register_invalid_message(&raw_message.topic)\n                // Tell peer_score about reject\n                // Reject the original source, and any duplicates we've seen from other peers.\n                if (validationResult.msgIdStr) {\n                    const msgIdStr = validationResult.msgIdStr;\n                    this.score.rejectMessage(from.toString(), msgIdStr, rpcMsg.topic, validationResult.reason);\n                    this.gossipTracer.rejectMessage(msgIdStr, validationResult.reason);\n                }\n                else {\n                    this.score.rejectInvalidMessage(from.toString(), rpcMsg.topic);\n                }\n                this.metrics?.onMsgRecvInvalid(rpcMsg.topic, validationResult);\n                return;\n            case MessageStatus.valid:\n                // Tells score that message arrived (but is maybe not fully validated yet).\n                // Consider the message as delivered for gossip promises.\n                this.score.validateMessage(validationResult.messageId.msgIdStr);\n                this.gossipTracer.deliverMessage(validationResult.messageId.msgIdStr);\n                // Add the message to our memcache\n                // if no validation is required, mark the message as validated\n                this.mcache.put(validationResult.messageId, rpcMsg, !this.opts.asyncValidation);\n                // Dispatch the message to the user if we are subscribed to the topic\n                if (this.subscriptions.has(rpcMsg.topic)) {\n                    const isFromSelf = this.components.peerId.equals(from);\n                    if (!isFromSelf || this.opts.emitSelf) {\n                        super.dispatchEvent(new CustomEvent('gossipsub:message', {\n                            detail: {\n                                propagationSource: from,\n                                msgId: validationResult.messageId.msgIdStr,\n                                msg: validationResult.msg\n                            }\n                        }));\n                        // TODO: Add option to switch between emit per topic or all messages in one\n                        super.dispatchEvent(new CustomEvent('message', { detail: validationResult.msg }));\n                    }\n                }\n                // Forward the message to mesh peers, if no validation is required\n                // If asyncValidation is ON, expect the app layer to call reportMessageValidationResult(), then forward\n                if (!this.opts.asyncValidation) {\n                    // TODO: in rust-libp2p\n                    // .forward_msg(&msg_id, raw_message, Some(propagation_source))\n                    this.forwardMessage(validationResult.messageId.msgIdStr, rpcMsg, from.toString());\n                }\n        }\n    }\n    /**\n     * Handles a newly received message from an RPC.\n     * May forward to all peers in the mesh.\n     */\n    async validateReceivedMessage(propagationSource, rpcMsg) {\n        // Fast message ID stuff\n        const fastMsgIdStr = this.fastMsgIdFn?.(rpcMsg);\n        const msgIdCached = fastMsgIdStr !== undefined ? this.fastMsgIdCache?.get(fastMsgIdStr) : undefined;\n        if (msgIdCached) {\n            // This message has been seen previously. Ignore it\n            return { code: MessageStatus.duplicate, msgIdStr: msgIdCached };\n        }\n        // Perform basic validation on message and convert to RawGossipsubMessage for fastMsgIdFn()\n        const validationResult = await validateToRawMessage(this.globalSignaturePolicy, rpcMsg);\n        if (!validationResult.valid) {\n            return { code: MessageStatus.invalid, reason: RejectReason.Error, error: validationResult.error };\n        }\n        const msg = validationResult.message;\n        // Try and perform the data transform to the message. If it fails, consider it invalid.\n        try {\n            if (this.dataTransform) {\n                msg.data = this.dataTransform.inboundTransform(rpcMsg.topic, msg.data);\n            }\n        }\n        catch (e) {\n            this.log('Invalid message, transform failed', e);\n            return { code: MessageStatus.invalid, reason: RejectReason.Error, error: ValidateError.TransformFailed };\n        }\n        // TODO: Check if message is from a blacklisted source or propagation origin\n        // - Reject any message from a blacklisted peer\n        // - Also reject any message that originated from a blacklisted peer\n        // - reject messages claiming to be from ourselves but not locally published\n        // Calculate the message id on the transformed data.\n        const msgId = await this.msgIdFn(msg);\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        const messageId = { msgId, msgIdStr };\n        // Add the message to the duplicate caches\n        if (fastMsgIdStr !== undefined && this.fastMsgIdCache) {\n            const collision = this.fastMsgIdCache.put(fastMsgIdStr, msgIdStr);\n            if (collision) {\n                this.metrics?.fastMsgIdCacheCollision.inc();\n            }\n        }\n        if (this.seenCache.has(msgIdStr)) {\n            return { code: MessageStatus.duplicate, msgIdStr };\n        }\n        else {\n            this.seenCache.put(msgIdStr);\n        }\n        // (Optional) Provide custom validation here with dynamic validators per topic\n        // NOTE: This custom topicValidator() must resolve fast (< 100ms) to allow scores\n        // to not penalize peers for long validation times.\n        const topicValidator = this.topicValidators.get(rpcMsg.topic);\n        if (topicValidator != null) {\n            let acceptance;\n            // Use try {} catch {} in case topicValidator() is synchronous\n            try {\n                acceptance = await topicValidator(propagationSource, msg);\n            }\n            catch (e) {\n                const errCode = e.code;\n                if (errCode === constants.ERR_TOPIC_VALIDATOR_IGNORE)\n                    acceptance = TopicValidatorResult.Ignore;\n                if (errCode === constants.ERR_TOPIC_VALIDATOR_REJECT)\n                    acceptance = TopicValidatorResult.Reject;\n                else\n                    acceptance = TopicValidatorResult.Ignore;\n            }\n            if (acceptance !== TopicValidatorResult.Accept) {\n                return { code: MessageStatus.invalid, reason: rejectReasonFromAcceptance(acceptance), msgIdStr };\n            }\n        }\n        return { code: MessageStatus.valid, messageId, msg };\n    }\n    /**\n     * Return score of a peer.\n     */\n    getScore(peerId) {\n        return this.score.score(peerId);\n    }\n    /**\n     * Send an rpc object to a peer with subscriptions\n     */\n    sendSubscriptions(toPeer, topics, subscribe) {\n        this.sendRpc(toPeer, {\n            subscriptions: topics.map((topic) => ({ topic, subscribe }))\n        });\n    }\n    /**\n     * Handles an rpc control message from a peer\n     */\n    async handleControlMessage(id, controlMsg) {\n        if (controlMsg === undefined) {\n            return;\n        }\n        const iwant = controlMsg.ihave ? this.handleIHave(id, controlMsg.ihave) : [];\n        const ihave = controlMsg.iwant ? this.handleIWant(id, controlMsg.iwant) : [];\n        const prune = controlMsg.graft ? await this.handleGraft(id, controlMsg.graft) : [];\n        controlMsg.prune && (await this.handlePrune(id, controlMsg.prune));\n        if (!iwant.length && !ihave.length && !prune.length) {\n            return;\n        }\n        const sent = this.sendRpc(id, { messages: ihave, control: { iwant, prune } });\n        const iwantMessageIds = iwant[0]?.messageIDs;\n        if (iwantMessageIds) {\n            if (sent) {\n                this.gossipTracer.addPromise(id, iwantMessageIds);\n            }\n            else {\n                this.metrics?.iwantPromiseUntracked.inc(1);\n            }\n        }\n    }\n    /**\n     * Whether to accept a message from a peer\n     */\n    acceptFrom(id) {\n        if (this.direct.has(id)) {\n            return true;\n        }\n        const now = Date.now();\n        const entry = this.acceptFromWhitelist.get(id);\n        if (entry && entry.messagesAccepted < ACCEPT_FROM_WHITELIST_MAX_MESSAGES && entry.acceptUntil >= now) {\n            entry.messagesAccepted += 1;\n            return true;\n        }\n        const score = this.score.score(id);\n        if (score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE) {\n            // peer is unlikely to be able to drop its score to `graylistThreshold`\n            // after 128 messages or 1s\n            this.acceptFromWhitelist.set(id, {\n                messagesAccepted: 0,\n                acceptUntil: now + ACCEPT_FROM_WHITELIST_DURATION_MS\n            });\n        }\n        else {\n            this.acceptFromWhitelist.delete(id);\n        }\n        return score >= this.opts.scoreThresholds.graylistThreshold;\n    }\n    /**\n     * Handles IHAVE messages\n     */\n    handleIHave(id, ihave) {\n        if (!ihave.length) {\n            return [];\n        }\n        // we ignore IHAVE gossip from any peer whose score is below the gossips threshold\n        const score = this.score.score(id);\n        if (score < this.opts.scoreThresholds.gossipThreshold) {\n            this.log('IHAVE: ignoring peer %s with score below threshold [ score = %d ]', id, score);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.LowScore });\n            return [];\n        }\n        // IHAVE flood protection\n        const peerhave = (this.peerhave.get(id) ?? 0) + 1;\n        this.peerhave.set(id, peerhave);\n        if (peerhave > constants.GossipsubMaxIHaveMessages) {\n            this.log('IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring', id, peerhave);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIhave });\n            return [];\n        }\n        const iasked = this.iasked.get(id) ?? 0;\n        if (iasked >= constants.GossipsubMaxIHaveLength) {\n            this.log('IHAVE: peer %s has already advertised too many messages (%d); ignoring', id, iasked);\n            this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIasked });\n            return [];\n        }\n        // string msgId => msgId\n        const iwant = new Map();\n        ihave.forEach(({ topicID, messageIDs }) => {\n            if (!topicID || !messageIDs || !this.mesh.has(topicID)) {\n                return;\n            }\n            let idonthave = 0;\n            messageIDs.forEach((msgId) => {\n                const msgIdStr = this.msgIdToStrFn(msgId);\n                if (!this.seenCache.has(msgIdStr)) {\n                    iwant.set(msgIdStr, msgId);\n                    idonthave++;\n                }\n            });\n            this.metrics?.onIhaveRcv(topicID, messageIDs.length, idonthave);\n        });\n        if (!iwant.size) {\n            return [];\n        }\n        let iask = iwant.size;\n        if (iask + iasked > constants.GossipsubMaxIHaveLength) {\n            iask = constants.GossipsubMaxIHaveLength - iasked;\n        }\n        this.log('IHAVE: Asking for %d out of %d messages from %s', iask, iwant.size, id);\n        let iwantList = Array.from(iwant.values());\n        // ask in random order\n        shuffle(iwantList);\n        // truncate to the messages we are actually asking for and update the iasked counter\n        iwantList = iwantList.slice(0, iask);\n        this.iasked.set(id, iasked + iask);\n        // do not add gossipTracer promise here until a successful sendRpc()\n        return [\n            {\n                messageIDs: iwantList\n            }\n        ];\n    }\n    /**\n     * Handles IWANT messages\n     * Returns messages to send back to peer\n     */\n    handleIWant(id, iwant) {\n        if (!iwant.length) {\n            return [];\n        }\n        // we don't respond to IWANT requests from any per whose score is below the gossip threshold\n        const score = this.score.score(id);\n        if (score < this.opts.scoreThresholds.gossipThreshold) {\n            this.log('IWANT: ignoring peer %s with score below threshold [score = %d]', id, score);\n            return [];\n        }\n        const ihave = new Map();\n        const iwantByTopic = new Map();\n        let iwantDonthave = 0;\n        iwant.forEach(({ messageIDs }) => {\n            messageIDs &&\n                messageIDs.forEach((msgId) => {\n                    const msgIdStr = this.msgIdToStrFn(msgId);\n                    const entry = this.mcache.getWithIWantCount(msgIdStr, id);\n                    if (entry == null) {\n                        iwantDonthave++;\n                        return;\n                    }\n                    iwantByTopic.set(entry.msg.topic, 1 + (iwantByTopic.get(entry.msg.topic) ?? 0));\n                    if (entry.count > constants.GossipsubGossipRetransmission) {\n                        this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId);\n                        return;\n                    }\n                    ihave.set(msgIdStr, entry.msg);\n                });\n        });\n        this.metrics?.onIwantRcv(iwantByTopic, iwantDonthave);\n        if (!ihave.size) {\n            this.log('IWANT: Could not provide any wanted messages to %s', id);\n            return [];\n        }\n        this.log('IWANT: Sending %d messages to %s', ihave.size, id);\n        return Array.from(ihave.values());\n    }\n    /**\n     * Handles Graft messages\n     */\n    async handleGraft(id, graft) {\n        const prune = [];\n        const score = this.score.score(id);\n        const now = Date.now();\n        let doPX = this.opts.doPX;\n        graft.forEach(({ topicID }) => {\n            if (!topicID) {\n                return;\n            }\n            const peersInMesh = this.mesh.get(topicID);\n            if (!peersInMesh) {\n                // don't do PX when there is an unknown topic to avoid leaking our peers\n                doPX = false;\n                // spam hardening: ignore GRAFTs for unknown topics\n                return;\n            }\n            // check if peer is already in the mesh; if so do nothing\n            if (peersInMesh.has(id)) {\n                return;\n            }\n            // we don't GRAFT to/from direct peers; complain loudly if this happens\n            if (this.direct.has(id)) {\n                this.log('GRAFT: ignoring request from direct peer %s', id);\n                // this is possibly a bug from a non-reciprical configuration; send a PRUNE\n                prune.push(topicID);\n                // but don't px\n                doPX = false;\n                return;\n            }\n            // make sure we are not backing off that peer\n            const expire = this.backoff.get(topicID)?.get(id);\n            if (typeof expire === 'number' && now < expire) {\n                this.log('GRAFT: ignoring backed off peer %s', id);\n                // add behavioral penalty\n                this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff);\n                // no PX\n                doPX = false;\n                // check the flood cutoff -- is the GRAFT coming too fast?\n                const floodCutoff = expire + this.opts.graftFloodThreshold - this.opts.pruneBackoff;\n                if (now < floodCutoff) {\n                    // extra penalty\n                    this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff);\n                }\n                // refresh the backoff\n                this.addBackoff(id, topicID);\n                prune.push(topicID);\n                return;\n            }\n            // check the score\n            if (score < 0) {\n                // we don't GRAFT peers with negative score\n                this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID);\n                // we do send them PRUNE however, because it's a matter of protocol correctness\n                prune.push(topicID);\n                // but we won't PX to them\n                doPX = false;\n                // add/refresh backoff so that we don't reGRAFT too early even if the score decays\n                this.addBackoff(id, topicID);\n                return;\n            }\n            // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts\n            // from peers with outbound connections; this is a defensive check to restrict potential\n            // mesh takeover attacks combined with love bombing\n            if (peersInMesh.size >= this.opts.Dhi && !this.outbound.get(id)) {\n                prune.push(topicID);\n                this.addBackoff(id, topicID);\n                return;\n            }\n            this.log('GRAFT: Add mesh link from %s in %s', id, topicID);\n            this.score.graft(id, topicID);\n            peersInMesh.add(id);\n            this.metrics?.onAddToMesh(topicID, InclusionReason.Subscribed, 1);\n        });\n        if (!prune.length) {\n            return [];\n        }\n        const onUnsubscribe = false;\n        return await Promise.all(prune.map((topic) => this.makePrune(id, topic, doPX, onUnsubscribe)));\n    }\n    /**\n     * Handles Prune messages\n     */\n    async handlePrune(id, prune) {\n        const score = this.score.score(id);\n        for (const { topicID, backoff, peers } of prune) {\n            if (topicID == null) {\n                continue;\n            }\n            const peersInMesh = this.mesh.get(topicID);\n            if (!peersInMesh) {\n                return;\n            }\n            this.log('PRUNE: Remove mesh link to %s in %s', id, topicID);\n            this.score.prune(id, topicID);\n            if (peersInMesh.has(id)) {\n                peersInMesh.delete(id);\n                this.metrics?.onRemoveFromMesh(topicID, ChurnReason.Prune, 1);\n            }\n            // is there a backoff specified by the peer? if so obey it\n            if (typeof backoff === 'number' && backoff > 0) {\n                this.doAddBackoff(id, topicID, backoff * 1000);\n            }\n            else {\n                this.addBackoff(id, topicID);\n            }\n            // PX\n            if (peers && peers.length) {\n                // we ignore PX from peers with insufficient scores\n                if (score < this.opts.scoreThresholds.acceptPXThreshold) {\n                    this.log('PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]', id, score, topicID);\n                    continue;\n                }\n                await this.pxConnect(peers);\n            }\n        }\n    }\n    /**\n     * Add standard backoff log for a peer in a topic\n     */\n    addBackoff(id, topic) {\n        this.doAddBackoff(id, topic, this.opts.pruneBackoff);\n    }\n    /**\n     * Add backoff expiry interval for a peer in a topic\n     *\n     * @param id\n     * @param topic\n     * @param intervalMs - backoff duration in milliseconds\n     */\n    doAddBackoff(id, topic, intervalMs) {\n        let backoff = this.backoff.get(topic);\n        if (!backoff) {\n            backoff = new Map();\n            this.backoff.set(topic, backoff);\n        }\n        const expire = Date.now() + intervalMs;\n        const existingExpire = backoff.get(id) ?? 0;\n        if (existingExpire < expire) {\n            backoff.set(id, expire);\n        }\n    }\n    /**\n     * Apply penalties from broken IHAVE/IWANT promises\n     */\n    applyIwantPenalties() {\n        this.gossipTracer.getBrokenPromises().forEach((count, p) => {\n            this.log(\"peer %s didn't follow up in %d IWANT requests; adding penalty\", p, count);\n            this.score.addPenalty(p, count, ScorePenalty.BrokenPromise);\n        });\n    }\n    /**\n     * Clear expired backoff expiries\n     */\n    clearBackoff() {\n        // we only clear once every GossipsubPruneBackoffTicks ticks to avoid iterating over the maps too much\n        if (this.heartbeatTicks % constants.GossipsubPruneBackoffTicks !== 0) {\n            return;\n        }\n        const now = Date.now();\n        this.backoff.forEach((backoff, topic) => {\n            backoff.forEach((expire, id) => {\n                // add some slack time to the expiration, see https://github.com/libp2p/specs/pull/289\n                if (expire + BACKOFF_SLACK * this.opts.heartbeatInterval < now) {\n                    backoff.delete(id);\n                }\n            });\n            if (backoff.size === 0) {\n                this.backoff.delete(topic);\n            }\n        });\n    }\n    /**\n     * Maybe reconnect to direct peers\n     */\n    async directConnect() {\n        const toconnect = [];\n        this.direct.forEach((id) => {\n            if (!this.streamsOutbound.has(id)) {\n                toconnect.push(id);\n            }\n        });\n        await Promise.all(toconnect.map(async (id) => await this.connect(id)));\n    }\n    /**\n     * Maybe attempt connection given signed peer records\n     */\n    async pxConnect(peers) {\n        if (peers.length > this.opts.prunePeers) {\n            shuffle(peers);\n            peers = peers.slice(0, this.opts.prunePeers);\n        }\n        const toconnect = [];\n        await Promise.all(peers.map(async (pi) => {\n            if (!pi.peerID) {\n                return;\n            }\n            const peer = peerIdFromBytes(pi.peerID);\n            const p = peer.toString();\n            if (this.peers.has(p)) {\n                return;\n            }\n            if (!pi.signedPeerRecord) {\n                toconnect.push(p);\n                return;\n            }\n            // The peer sent us a signed record\n            // This is not a record from the peer who sent the record, but another peer who is connected with it\n            // Ensure that it is valid\n            try {\n                if (!(await this.components.peerStore.consumePeerRecord(pi.signedPeerRecord, peer))) {\n                    this.log('bogus peer record obtained through px: could not add peer record to address book');\n                    return;\n                }\n                toconnect.push(p);\n            }\n            catch (e) {\n                this.log('bogus peer record obtained through px: invalid signature or not a peer record');\n            }\n        }));\n        if (!toconnect.length) {\n            return;\n        }\n        await Promise.all(toconnect.map(async (id) => await this.connect(id)));\n    }\n    /**\n     * Connect to a peer using the gossipsub protocol\n     */\n    async connect(id) {\n        this.log('Initiating connection with %s', id);\n        const peerId = peerIdFromString(id);\n        const connection = await this.components.connectionManager.openConnection(peerId);\n        for (const multicodec of this.multicodecs) {\n            for (const topology of this.components.registrar.getTopologies(multicodec)) {\n                topology.onConnect?.(peerId, connection);\n            }\n        }\n    }\n    /**\n     * Subscribes to a topic\n     */\n    subscribe(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Pubsub has not started');\n        }\n        if (!this.subscriptions.has(topic)) {\n            this.subscriptions.add(topic);\n            for (const peerId of this.peers.keys()) {\n                this.sendSubscriptions(peerId, [topic], true);\n            }\n        }\n        this.join(topic);\n    }\n    /**\n     * Unsubscribe to a topic\n     */\n    unsubscribe(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Pubsub is not started');\n        }\n        const wasSubscribed = this.subscriptions.delete(topic);\n        this.log('unsubscribe from %s - am subscribed %s', topic, wasSubscribed);\n        if (wasSubscribed) {\n            for (const peerId of this.peers.keys()) {\n                this.sendSubscriptions(peerId, [topic], false);\n            }\n        }\n        this.leave(topic);\n    }\n    /**\n     * Join topic\n     */\n    join(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        // if we are already in the mesh, return\n        if (this.mesh.has(topic)) {\n            return;\n        }\n        this.log('JOIN %s', topic);\n        this.metrics?.onJoin(topic);\n        const toAdd = new Set();\n        const backoff = this.backoff.get(topic);\n        // check if we have mesh_n peers in fanout[topic] and add them to the mesh if we do,\n        // removing the fanout entry.\n        const fanoutPeers = this.fanout.get(topic);\n        if (fanoutPeers) {\n            // Remove fanout entry and the last published time\n            this.fanout.delete(topic);\n            this.fanoutLastpub.delete(topic);\n            // remove explicit peers, peers with negative scores, and backoffed peers\n            fanoutPeers.forEach((id) => {\n                if (!this.direct.has(id) && this.score.score(id) >= 0 && (!backoff || !backoff.has(id))) {\n                    toAdd.add(id);\n                }\n            });\n            this.metrics?.onAddToMesh(topic, InclusionReason.Fanout, toAdd.size);\n        }\n        // check if we need to get more peers, which we randomly select\n        if (toAdd.size < this.opts.D) {\n            const fanoutCount = toAdd.size;\n            const newPeers = this.getRandomGossipPeers(topic, this.opts.D, (id) => \n            // filter direct peers and peers with negative score\n            !toAdd.has(id) && !this.direct.has(id) && this.score.score(id) >= 0 && (!backoff || !backoff.has(id)));\n            newPeers.forEach((peer) => {\n                toAdd.add(peer);\n            });\n            this.metrics?.onAddToMesh(topic, InclusionReason.Random, toAdd.size - fanoutCount);\n        }\n        this.mesh.set(topic, toAdd);\n        toAdd.forEach((id) => {\n            this.log('JOIN: Add mesh link to %s in %s', id, topic);\n            this.sendGraft(id, topic);\n            // rust-libp2p\n            // - peer_score.graft()\n            // - Self::control_pool_add()\n            // - peer_added_to_mesh()\n        });\n    }\n    /**\n     * Leave topic\n     */\n    leave(topic) {\n        if (this.status.code !== GossipStatusCode.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        this.log('LEAVE %s', topic);\n        this.metrics?.onLeave(topic);\n        // Send PRUNE to mesh peers\n        const meshPeers = this.mesh.get(topic);\n        if (meshPeers) {\n            Promise.all(Array.from(meshPeers).map(async (id) => {\n                this.log('LEAVE: Remove mesh link to %s in %s', id, topic);\n                return await this.sendPrune(id, topic);\n            })).catch((err) => {\n                this.log('Error sending prunes to mesh peers', err);\n            });\n            this.mesh.delete(topic);\n        }\n    }\n    selectPeersToForward(topic, propagationSource, excludePeers) {\n        const tosend = new Set();\n        // Add explicit peers\n        const peersInTopic = this.topics.get(topic);\n        if (peersInTopic) {\n            this.direct.forEach((peer) => {\n                if (peersInTopic.has(peer) && propagationSource !== peer && !excludePeers?.has(peer)) {\n                    tosend.add(peer);\n                }\n            });\n            // As of Mar 2022, spec + golang-libp2p include this while rust-libp2p does not\n            // rust-libp2p: https://github.com/libp2p/rust-libp2p/blob/6cc3b4ec52c922bfcf562a29b5805c3150e37c75/protocols/gossipsub/src/behaviour.rs#L2693\n            // spec: https://github.com/libp2p/specs/blob/10712c55ab309086a52eec7d25f294df4fa96528/pubsub/gossipsub/gossipsub-v1.0.md?plain=1#L361\n            this.floodsubPeers.forEach((peer) => {\n                if (peersInTopic.has(peer) &&\n                    propagationSource !== peer &&\n                    !excludePeers?.has(peer) &&\n                    this.score.score(peer) >= this.opts.scoreThresholds.publishThreshold) {\n                    tosend.add(peer);\n                }\n            });\n        }\n        // add mesh peers\n        const meshPeers = this.mesh.get(topic);\n        if (meshPeers && meshPeers.size > 0) {\n            meshPeers.forEach((peer) => {\n                if (propagationSource !== peer && !excludePeers?.has(peer)) {\n                    tosend.add(peer);\n                }\n            });\n        }\n        return tosend;\n    }\n    selectPeersToPublish(topic) {\n        const tosend = new Set();\n        const tosendCount = {\n            direct: 0,\n            floodsub: 0,\n            mesh: 0,\n            fanout: 0\n        };\n        const peersInTopic = this.topics.get(topic);\n        if (peersInTopic) {\n            // flood-publish behavior\n            // send to direct peers and _all_ peers meeting the publishThreshold\n            if (this.opts.floodPublish) {\n                peersInTopic.forEach((id) => {\n                    if (this.direct.has(id)) {\n                        tosend.add(id);\n                        tosendCount.direct++;\n                    }\n                    else if (this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n                        tosend.add(id);\n                        tosendCount.floodsub++;\n                    }\n                });\n            }\n            else {\n                // non-flood-publish behavior\n                // send to direct peers, subscribed floodsub peers\n                // and some mesh peers above publishThreshold\n                // direct peers (if subscribed)\n                this.direct.forEach((id) => {\n                    if (peersInTopic.has(id)) {\n                        tosend.add(id);\n                        tosendCount.direct++;\n                    }\n                });\n                // floodsub peers\n                // Note: if there are no floodsub peers, we save a loop through peersInTopic Map\n                this.floodsubPeers.forEach((id) => {\n                    if (peersInTopic.has(id) && this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n                        tosend.add(id);\n                        tosendCount.floodsub++;\n                    }\n                });\n                // Gossipsub peers handling\n                const meshPeers = this.mesh.get(topic);\n                if (meshPeers && meshPeers.size > 0) {\n                    meshPeers.forEach((peer) => {\n                        tosend.add(peer);\n                        tosendCount.mesh++;\n                    });\n                }\n                // We are not in the mesh for topic, use fanout peers\n                else {\n                    const fanoutPeers = this.fanout.get(topic);\n                    if (fanoutPeers && fanoutPeers.size > 0) {\n                        fanoutPeers.forEach((peer) => {\n                            tosend.add(peer);\n                            tosendCount.fanout++;\n                        });\n                    }\n                    // We have no fanout peers, select mesh_n of them and add them to the fanout\n                    else {\n                        // If we are not in the fanout, then pick peers in topic above the publishThreshold\n                        const newFanoutPeers = this.getRandomGossipPeers(topic, this.opts.D, (id) => {\n                            return this.score.score(id) >= this.opts.scoreThresholds.publishThreshold;\n                        });\n                        if (newFanoutPeers.size > 0) {\n                            // eslint-disable-line max-depth\n                            this.fanout.set(topic, newFanoutPeers);\n                            newFanoutPeers.forEach((peer) => {\n                                // eslint-disable-line max-depth\n                                tosend.add(peer);\n                                tosendCount.fanout++;\n                            });\n                        }\n                    }\n                    // We are publishing to fanout peers - update the time we published\n                    this.fanoutLastpub.set(topic, Date.now());\n                }\n            }\n        }\n        return { tosend, tosendCount };\n    }\n    /**\n     * Forwards a message from our peers.\n     *\n     * For messages published by us (the app layer), this class uses `publish`\n     */\n    forwardMessage(msgIdStr, rawMsg, propagationSource, excludePeers) {\n        // message is fully validated inform peer_score\n        if (propagationSource) {\n            this.score.deliverMessage(propagationSource, msgIdStr, rawMsg.topic);\n        }\n        const tosend = this.selectPeersToForward(rawMsg.topic, propagationSource, excludePeers);\n        // Note: Don't throw if tosend is empty, we can have a mesh with a single peer\n        // forward the message to peers\n        tosend.forEach((id) => {\n            // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n            this.sendRpc(id, { messages: [rawMsg] });\n        });\n        this.metrics?.onForwardMsg(rawMsg.topic, tosend.size);\n    }\n    /**\n     * App layer publishes a message to peers, return number of peers this message is published to\n     * Note: `async` due to crypto only if `StrictSign`, otherwise it's a sync fn.\n     *\n     * For messages not from us, this class uses `forwardMessage`.\n     */\n    async publish(topic, data, opts) {\n        const startMs = Date.now();\n        const transformedData = this.dataTransform ? this.dataTransform.outboundTransform(topic, data) : data;\n        if (this.publishConfig == null) {\n            throw Error('PublishError.Uninitialized');\n        }\n        // Prepare raw message with user's publishConfig\n        const { raw: rawMsg, msg } = await buildRawMessage(this.publishConfig, topic, data, transformedData);\n        // calculate the message id from the un-transformed data\n        const msgId = await this.msgIdFn(msg);\n        const msgIdStr = this.msgIdToStrFn(msgId);\n        // Current publish opt takes precedence global opts, while preserving false value\n        const ignoreDuplicatePublishError = opts?.ignoreDuplicatePublishError ?? this.opts.ignoreDuplicatePublishError;\n        if (this.seenCache.has(msgIdStr)) {\n            // This message has already been seen. We don't re-publish messages that have already\n            // been published on the network.\n            if (ignoreDuplicatePublishError) {\n                this.metrics?.onPublishDuplicateMsg(topic);\n                return { recipients: [] };\n            }\n            throw Error('PublishError.Duplicate');\n        }\n        const { tosend, tosendCount } = this.selectPeersToPublish(topic);\n        const willSendToSelf = this.opts.emitSelf === true && this.subscriptions.has(topic);\n        // Current publish opt takes precedence global opts, while preserving false value\n        const allowPublishToZeroPeers = opts?.allowPublishToZeroPeers ?? this.opts.allowPublishToZeroPeers;\n        if (tosend.size === 0 && !allowPublishToZeroPeers && !willSendToSelf) {\n            throw Error('PublishError.InsufficientPeers');\n        }\n        // If the message isn't a duplicate and we have sent it to some peers add it to the\n        // duplicate cache and memcache.\n        this.seenCache.put(msgIdStr);\n        // all published messages are valid\n        this.mcache.put({ msgId, msgIdStr }, rawMsg, true);\n        // If the message is anonymous or has a random author add it to the published message ids cache.\n        this.publishedMessageIds.put(msgIdStr);\n        // Send to set of peers aggregated from direct, mesh, fanout\n        for (const id of tosend) {\n            // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n            const sent = this.sendRpc(id, { messages: [rawMsg] });\n            // did not actually send the message\n            if (!sent) {\n                tosend.delete(id);\n            }\n        }\n        const durationMs = Date.now() - startMs;\n        this.metrics?.onPublishMsg(topic, tosendCount, tosend.size, rawMsg.data != null ? rawMsg.data.length : 0, durationMs);\n        // Dispatch the message to the user if we are subscribed to the topic\n        if (willSendToSelf) {\n            tosend.add(this.components.peerId.toString());\n            super.dispatchEvent(new CustomEvent('gossipsub:message', {\n                detail: {\n                    propagationSource: this.components.peerId,\n                    msgId: msgIdStr,\n                    msg\n                }\n            }));\n            // TODO: Add option to switch between emit per topic or all messages in one\n            super.dispatchEvent(new CustomEvent('message', { detail: msg }));\n        }\n        return {\n            recipients: Array.from(tosend.values()).map((str) => peerIdFromString(str))\n        };\n    }\n    /**\n     * This function should be called when `asyncValidation` is `true` after\n     * the message got validated by the caller. Messages are stored in the `mcache` and\n     * validation is expected to be fast enough that the messages should still exist in the cache.\n     * There are three possible validation outcomes and the outcome is given in acceptance.\n     *\n     * If acceptance = `MessageAcceptance.Accept` the message will get propagated to the\n     * network. The `propagation_source` parameter indicates who the message was received by and\n     * will not be forwarded back to that peer.\n     *\n     * If acceptance = `MessageAcceptance.Reject` the message will be deleted from the memcache\n     * and the P₄ penalty will be applied to the `propagationSource`.\n     *\n     * If acceptance = `MessageAcceptance.Ignore` the message will be deleted from the memcache\n     * but no P₄ penalty will be applied.\n     *\n     * This function will return true if the message was found in the cache and false if was not\n     * in the cache anymore.\n     *\n     * This should only be called once per message.\n     */\n    reportMessageValidationResult(msgId, propagationSource, acceptance) {\n        let cacheEntry;\n        if (acceptance === TopicValidatorResult.Accept) {\n            cacheEntry = this.mcache.validate(msgId);\n            if (cacheEntry != null) {\n                const { message: rawMsg, originatingPeers } = cacheEntry;\n                // message is fully validated inform peer_score\n                this.score.deliverMessage(propagationSource, msgId, rawMsg.topic);\n                this.forwardMessage(msgId, cacheEntry.message, propagationSource, originatingPeers);\n            }\n            // else, Message not in cache. Ignoring forwarding\n        }\n        // Not valid\n        else {\n            cacheEntry = this.mcache.remove(msgId);\n            if (cacheEntry) {\n                const rejectReason = rejectReasonFromAcceptance(acceptance);\n                const { message: rawMsg, originatingPeers } = cacheEntry;\n                // Tell peer_score about reject\n                // Reject the original source, and any duplicates we've seen from other peers.\n                this.score.rejectMessage(propagationSource, msgId, rawMsg.topic, rejectReason);\n                for (const peer of originatingPeers) {\n                    this.score.rejectMessage(peer, msgId, rawMsg.topic, rejectReason);\n                }\n            }\n            // else, Message not in cache. Ignoring forwarding\n        }\n        const firstSeenTimestampMs = this.score.messageFirstSeenTimestampMs(msgId);\n        this.metrics?.onReportValidation(cacheEntry, acceptance, firstSeenTimestampMs);\n    }\n    /**\n     * Sends a GRAFT message to a peer\n     */\n    sendGraft(id, topic) {\n        const graft = [\n            {\n                topicID: topic\n            }\n        ];\n        this.sendRpc(id, { control: { graft } });\n    }\n    /**\n     * Sends a PRUNE message to a peer\n     */\n    async sendPrune(id, topic) {\n        // this is only called from leave() function\n        const onUnsubscribe = true;\n        const prune = [await this.makePrune(id, topic, this.opts.doPX, onUnsubscribe)];\n        this.sendRpc(id, { control: { prune } });\n    }\n    /**\n     * Send an rpc object to a peer\n     */\n    sendRpc(id, rpc) {\n        const outboundStream = this.streamsOutbound.get(id);\n        if (!outboundStream) {\n            this.log(`Cannot send RPC to ${id} as there is no open stream to it available`);\n            return false;\n        }\n        // piggyback control message retries\n        const ctrl = this.control.get(id);\n        if (ctrl) {\n            this.piggybackControl(id, rpc, ctrl);\n            this.control.delete(id);\n        }\n        // piggyback gossip\n        const ihave = this.gossip.get(id);\n        if (ihave) {\n            this.piggybackGossip(id, rpc, ihave);\n            this.gossip.delete(id);\n        }\n        const rpcBytes = RPC.encode(rpc).finish();\n        try {\n            outboundStream.push(rpcBytes);\n        }\n        catch (e) {\n            this.log.error(`Cannot send rpc to ${id}`, e);\n            // if the peer had control messages or gossip, re-attach\n            if (ctrl) {\n                this.control.set(id, ctrl);\n            }\n            if (ihave) {\n                this.gossip.set(id, ihave);\n            }\n            return false;\n        }\n        this.metrics?.onRpcSent(rpc, rpcBytes.length);\n        return true;\n    }\n    /** Mutates `outRpc` adding graft and prune control messages */\n    piggybackControl(id, outRpc, ctrl) {\n        if (ctrl.graft) {\n            if (!outRpc.control)\n                outRpc.control = {};\n            if (!outRpc.control.graft)\n                outRpc.control.graft = [];\n            for (const graft of ctrl.graft) {\n                if (graft.topicID && this.mesh.get(graft.topicID)?.has(id)) {\n                    outRpc.control.graft.push(graft);\n                }\n            }\n        }\n        if (ctrl.prune) {\n            if (!outRpc.control)\n                outRpc.control = {};\n            if (!outRpc.control.prune)\n                outRpc.control.prune = [];\n            for (const prune of ctrl.prune) {\n                if (prune.topicID && !this.mesh.get(prune.topicID)?.has(id)) {\n                    outRpc.control.prune.push(prune);\n                }\n            }\n        }\n    }\n    /** Mutates `outRpc` adding ihave control messages */\n    piggybackGossip(id, outRpc, ihave) {\n        if (!outRpc.control)\n            outRpc.control = {};\n        outRpc.control.ihave = ihave;\n    }\n    /**\n     * Send graft and prune messages\n     *\n     * @param tograft - peer id => topic[]\n     * @param toprune - peer id => topic[]\n     */\n    async sendGraftPrune(tograft, toprune, noPX) {\n        const doPX = this.opts.doPX;\n        const onUnsubscribe = false;\n        for (const [id, topics] of tograft) {\n            const graft = topics.map((topicID) => ({ topicID }));\n            let prune = [];\n            // If a peer also has prunes, process them now\n            const pruning = toprune.get(id);\n            if (pruning) {\n                prune = await Promise.all(pruning.map(async (topicID) => await this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)));\n                toprune.delete(id);\n            }\n            this.sendRpc(id, { control: { graft, prune } });\n        }\n        for (const [id, topics] of toprune) {\n            const prune = await Promise.all(topics.map(async (topicID) => await this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)));\n            this.sendRpc(id, { control: { prune } });\n        }\n    }\n    /**\n     * Emits gossip - Send IHAVE messages to a random set of gossip peers\n     */\n    emitGossip(peersToGossipByTopic) {\n        const gossipIDsByTopic = this.mcache.getGossipIDs(new Set(peersToGossipByTopic.keys()));\n        for (const [topic, peersToGossip] of peersToGossipByTopic) {\n            this.doEmitGossip(topic, peersToGossip, gossipIDsByTopic.get(topic) ?? []);\n        }\n    }\n    /**\n     * Send gossip messages to GossipFactor peers above threshold with a minimum of D_lazy\n     * Peers are randomly selected from the heartbeat which exclude mesh + fanout peers\n     * We also exclude direct peers, as there is no reason to emit gossip to them\n     * @param topic\n     * @param candidateToGossip - peers to gossip\n     * @param messageIDs - message ids to gossip\n     */\n    doEmitGossip(topic, candidateToGossip, messageIDs) {\n        if (!messageIDs.length) {\n            return;\n        }\n        // shuffle to emit in random order\n        shuffle(messageIDs);\n        // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list\n        if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n            // we do the truncation (with shuffling) per peer below\n            this.log('too many messages for gossip; will truncate IHAVE list (%d messages)', messageIDs.length);\n        }\n        if (!candidateToGossip.size)\n            return;\n        let target = this.opts.Dlazy;\n        const factor = constants.GossipsubGossipFactor * candidateToGossip.size;\n        let peersToGossip = candidateToGossip;\n        if (factor > target) {\n            target = factor;\n        }\n        if (target > peersToGossip.size) {\n            target = peersToGossip.size;\n        }\n        else {\n            // only shuffle if needed\n            peersToGossip = shuffle(Array.from(peersToGossip)).slice(0, target);\n        }\n        // Emit the IHAVE gossip to the selected peers up to the target\n        peersToGossip.forEach((id) => {\n            let peerMessageIDs = messageIDs;\n            if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n                // shuffle and slice message IDs per peer so that we emit a different set for each peer\n                // we have enough reduncancy in the system that this will significantly increase the message\n                // coverage when we do truncate\n                peerMessageIDs = shuffle(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength);\n            }\n            this.pushGossip(id, {\n                topicID: topic,\n                messageIDs: peerMessageIDs\n            });\n        });\n    }\n    /**\n     * Flush gossip and control messages\n     */\n    flush() {\n        // send gossip first, which will also piggyback control\n        for (const [peer, ihave] of this.gossip.entries()) {\n            this.gossip.delete(peer);\n            this.sendRpc(peer, { control: { ihave } });\n        }\n        // send the remaining control messages\n        for (const [peer, control] of this.control.entries()) {\n            this.control.delete(peer);\n            this.sendRpc(peer, { control: { graft: control.graft, prune: control.prune } });\n        }\n    }\n    /**\n     * Adds new IHAVE messages to pending gossip\n     */\n    pushGossip(id, controlIHaveMsgs) {\n        this.log('Add gossip to %s', id);\n        const gossip = this.gossip.get(id) || [];\n        this.gossip.set(id, gossip.concat(controlIHaveMsgs));\n    }\n    /**\n     * Make a PRUNE control message for a peer in a topic\n     */\n    async makePrune(id, topic, doPX, onUnsubscribe) {\n        this.score.prune(id, topic);\n        if (this.streamsOutbound.get(id).protocol === constants.GossipsubIDv10) {\n            // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway\n            return {\n                topicID: topic,\n                peers: []\n            };\n        }\n        // backoff is measured in seconds\n        // GossipsubPruneBackoff and GossipsubUnsubscribeBackoff are measured in milliseconds\n        // The protobuf has it as a uint64\n        const backoffMs = onUnsubscribe ? this.opts.unsubcribeBackoff : this.opts.pruneBackoff;\n        const backoff = backoffMs / 1000;\n        this.doAddBackoff(id, topic, backoffMs);\n        if (!doPX) {\n            return {\n                topicID: topic,\n                peers: [],\n                backoff: backoff\n            };\n        }\n        // select peers for Peer eXchange\n        const peers = this.getRandomGossipPeers(topic, this.opts.prunePeers, (xid) => {\n            return xid !== id && this.score.score(xid) >= 0;\n        });\n        const px = await Promise.all(Array.from(peers).map(async (peerId) => {\n            // see if we have a signed record to send back; if we don't, just send\n            // the peer ID and let the pruned peer find them in the DHT -- we can't trust\n            // unsigned address records through PX anyways\n            // Finding signed records in the DHT is not supported at the time of writing in js-libp2p\n            const id = peerIdFromString(peerId);\n            let peerInfo;\n            try {\n                peerInfo = await this.components.peerStore.get(id);\n            }\n            catch (err) {\n                if (err.code !== 'ERR_NOT_FOUND') {\n                    throw err;\n                }\n            }\n            return {\n                peerID: id.toBytes(),\n                signedPeerRecord: peerInfo?.peerRecordEnvelope\n            };\n        }));\n        return {\n            topicID: topic,\n            peers: px,\n            backoff: backoff\n        };\n    }\n    runHeartbeat = () => {\n        const timer = this.metrics?.heartbeatDuration.startTimer();\n        this.heartbeat()\n            .catch((err) => {\n            this.log('Error running heartbeat', err);\n        })\n            .finally(() => {\n            if (timer != null) {\n                timer();\n            }\n            // Schedule the next run if still in started status\n            if (this.status.code === GossipStatusCode.started) {\n                // Clear previous timeout before overwriting `status.heartbeatTimeout`, it should be completed tho.\n                clearTimeout(this.status.heartbeatTimeout);\n                // NodeJS setInterval function is innexact, calls drift by a few miliseconds on each call.\n                // To run the heartbeat precisely setTimeout() must be used recomputing the delay on every loop.\n                let msToNextHeartbeat = this.opts.heartbeatInterval - ((Date.now() - this.status.hearbeatStartMs) % this.opts.heartbeatInterval);\n                // If too close to next heartbeat, skip one\n                if (msToNextHeartbeat < this.opts.heartbeatInterval * 0.25) {\n                    msToNextHeartbeat += this.opts.heartbeatInterval;\n                    this.metrics?.heartbeatSkipped.inc();\n                }\n                this.status.heartbeatTimeout = setTimeout(this.runHeartbeat, msToNextHeartbeat);\n            }\n        });\n    };\n    /**\n     * Maintains the mesh and fanout maps in gossipsub.\n     */\n    async heartbeat() {\n        const { D, Dlo, Dhi, Dscore, Dout, fanoutTTL } = this.opts;\n        this.heartbeatTicks++;\n        // cache scores throught the heartbeat\n        const scores = new Map();\n        const getScore = (id) => {\n            let s = scores.get(id);\n            if (s === undefined) {\n                s = this.score.score(id);\n                scores.set(id, s);\n            }\n            return s;\n        };\n        // peer id => topic[]\n        const tograft = new Map();\n        // peer id => topic[]\n        const toprune = new Map();\n        // peer id => don't px\n        const noPX = new Map();\n        // clean up expired backoffs\n        this.clearBackoff();\n        // clean up peerhave/iasked counters\n        this.peerhave.clear();\n        this.metrics?.cacheSize.set({ cache: 'iasked' }, this.iasked.size);\n        this.iasked.clear();\n        // apply IWANT request penalties\n        this.applyIwantPenalties();\n        // ensure direct peers are connected\n        if (this.heartbeatTicks % this.opts.directConnectTicks === 0) {\n            // we only do this every few ticks to allow pending connections to complete and account for restarts/downtime\n            await this.directConnect();\n        }\n        // EXTRA: Prune caches\n        this.fastMsgIdCache?.prune();\n        this.seenCache.prune();\n        this.gossipTracer.prune();\n        this.publishedMessageIds.prune();\n        /**\n         * Instead of calling getRandomGossipPeers multiple times to:\n         *   + get more mesh peers\n         *   + more outbound peers\n         *   + oppportunistic grafting\n         *   + emitGossip\n         *\n         * We want to loop through the topic peers only a single time and prepare gossip peers for all topics to improve the performance\n         */\n        const peersToGossipByTopic = new Map();\n        // maintain the mesh for topics we have joined\n        this.mesh.forEach((peers, topic) => {\n            const peersInTopic = this.topics.get(topic);\n            const candidateMeshPeers = new Set();\n            const peersToGossip = new Set();\n            peersToGossipByTopic.set(topic, peersToGossip);\n            if (peersInTopic) {\n                const shuffledPeers = shuffle(Array.from(peersInTopic));\n                const backoff = this.backoff.get(topic);\n                for (const id of shuffledPeers) {\n                    const peerStreams = this.streamsOutbound.get(id);\n                    if (peerStreams &&\n                        this.multicodecs.includes(peerStreams.protocol) &&\n                        !peers.has(id) &&\n                        !this.direct.has(id)) {\n                        const score = getScore(id);\n                        if ((!backoff || !backoff.has(id)) && score >= 0)\n                            candidateMeshPeers.add(id);\n                        // instead of having to find gossip peers after heartbeat which require another loop\n                        // we prepare peers to gossip in a topic within heartbeat to improve performance\n                        if (score >= this.opts.scoreThresholds.gossipThreshold)\n                            peersToGossip.add(id);\n                    }\n                }\n            }\n            // prune/graft helper functions (defined per topic)\n            const prunePeer = (id, reason) => {\n                this.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic);\n                // no need to update peer score here as we do it in makePrune\n                // add prune backoff record\n                this.addBackoff(id, topic);\n                // remove peer from mesh\n                peers.delete(id);\n                // after pruning a peer from mesh, we want to gossip topic to it if its score meet the gossip threshold\n                if (getScore(id) >= this.opts.scoreThresholds.gossipThreshold)\n                    peersToGossip.add(id);\n                this.metrics?.onRemoveFromMesh(topic, reason, 1);\n                // add to toprune\n                const topics = toprune.get(id);\n                if (!topics) {\n                    toprune.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            const graftPeer = (id, reason) => {\n                this.log('HEARTBEAT: Add mesh link to %s in %s', id, topic);\n                // update peer score\n                this.score.graft(id, topic);\n                // add peer to mesh\n                peers.add(id);\n                // when we add a new mesh peer, we don't want to gossip messages to it\n                peersToGossip.delete(id);\n                this.metrics?.onAddToMesh(topic, reason, 1);\n                // add to tograft\n                const topics = tograft.get(id);\n                if (!topics) {\n                    tograft.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            // drop all peers with negative score, without PX\n            peers.forEach((id) => {\n                const score = getScore(id);\n                // Record the score\n                if (score < 0) {\n                    this.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic);\n                    prunePeer(id, ChurnReason.BadScore);\n                    noPX.set(id, true);\n                }\n            });\n            // do we have enough peers?\n            if (peers.size < Dlo) {\n                const ineed = D - peers.size;\n                // slice up to first `ineed` items and remove them from candidateMeshPeers\n                // same to `const newMeshPeers = candidateMeshPeers.slice(0, ineed)`\n                const newMeshPeers = removeFirstNItemsFromSet(candidateMeshPeers, ineed);\n                newMeshPeers.forEach((p) => {\n                    graftPeer(p, InclusionReason.NotEnough);\n                });\n            }\n            // do we have to many peers?\n            if (peers.size > Dhi) {\n                let peersArray = Array.from(peers);\n                // sort by score\n                peersArray.sort((a, b) => getScore(b) - getScore(a));\n                // We keep the first D_score peers by score and the remaining up to D randomly\n                // under the constraint that we keep D_out peers in the mesh (if we have that many)\n                peersArray = peersArray.slice(0, Dscore).concat(shuffle(peersArray.slice(Dscore)));\n                // count the outbound peers we are keeping\n                let outbound = 0;\n                peersArray.slice(0, D).forEach((p) => {\n                    if (this.outbound.get(p)) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, bubble up some outbound peers from the random selection\n                if (outbound < Dout) {\n                    const rotate = (i) => {\n                        // rotate the peersArray to the right and put the ith peer in the front\n                        const p = peersArray[i];\n                        for (let j = i; j > 0; j--) {\n                            peersArray[j] = peersArray[j - 1];\n                        }\n                        peersArray[0] = p;\n                    };\n                    // first bubble up all outbound peers already in the selection to the front\n                    if (outbound > 0) {\n                        let ihave = outbound;\n                        for (let i = 1; i < D && ihave > 0; i++) {\n                            if (this.outbound.get(peersArray[i])) {\n                                rotate(i);\n                                ihave--;\n                            }\n                        }\n                    }\n                    // now bubble up enough outbound peers outside the selection to the front\n                    let ineed = D - outbound;\n                    for (let i = D; i < peersArray.length && ineed > 0; i++) {\n                        if (this.outbound.get(peersArray[i])) {\n                            rotate(i);\n                            ineed--;\n                        }\n                    }\n                }\n                // prune the excess peers\n                peersArray.slice(D).forEach((p) => {\n                    prunePeer(p, ChurnReason.Excess);\n                });\n            }\n            // do we have enough outbound peers?\n            if (peers.size >= Dlo) {\n                // count the outbound peers we have\n                let outbound = 0;\n                peers.forEach((p) => {\n                    if (this.outbound.get(p)) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, select some peers with outbound connections and graft them\n                if (outbound < Dout) {\n                    const ineed = Dout - outbound;\n                    const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => this.outbound.get(id) === true);\n                    newMeshPeers.forEach((p) => {\n                        graftPeer(p, InclusionReason.Outbound);\n                    });\n                }\n            }\n            // should we try to improve the mesh with opportunistic grafting?\n            if (this.heartbeatTicks % this.opts.opportunisticGraftTicks === 0 && peers.size > 1) {\n                // Opportunistic grafting works as follows: we check the median score of peers in the\n                // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at\n                // random with score over the median.\n                // The intention is to (slowly) improve an underperforming mesh by introducing good\n                // scoring peers that may have been gossiping at us. This allows us to get out of sticky\n                // situations where we are stuck with poor peers and also recover from churn of good peers.\n                // now compute the median peer score in the mesh\n                const peersList = Array.from(peers).sort((a, b) => getScore(a) - getScore(b));\n                const medianIndex = Math.floor(peers.size / 2);\n                const medianScore = getScore(peersList[medianIndex]);\n                // if the median score is below the threshold, select a better peer (if any) and GRAFT\n                if (medianScore < this.opts.scoreThresholds.opportunisticGraftThreshold) {\n                    const ineed = this.opts.opportunisticGraftPeers;\n                    const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => getScore(id) > medianScore);\n                    for (const id of newMeshPeers) {\n                        this.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic);\n                        graftPeer(id, InclusionReason.Opportunistic);\n                    }\n                }\n            }\n        });\n        // expire fanout for topics we haven't published to in a while\n        const now = Date.now();\n        this.fanoutLastpub.forEach((lastpb, topic) => {\n            if (lastpb + fanoutTTL < now) {\n                this.fanout.delete(topic);\n                this.fanoutLastpub.delete(topic);\n            }\n        });\n        // maintain our fanout for topics we are publishing but we have not joined\n        this.fanout.forEach((fanoutPeers, topic) => {\n            // checks whether our peers are still in the topic and have a score above the publish threshold\n            const topicPeers = this.topics.get(topic);\n            fanoutPeers.forEach((id) => {\n                if (!topicPeers.has(id) || getScore(id) < this.opts.scoreThresholds.publishThreshold) {\n                    fanoutPeers.delete(id);\n                }\n            });\n            const peersInTopic = this.topics.get(topic);\n            const candidateFanoutPeers = [];\n            // the fanout map contains topics to which we are not subscribed.\n            const peersToGossip = new Set();\n            peersToGossipByTopic.set(topic, peersToGossip);\n            if (peersInTopic) {\n                const shuffledPeers = shuffle(Array.from(peersInTopic));\n                for (const id of shuffledPeers) {\n                    const peerStreams = this.streamsOutbound.get(id);\n                    if (peerStreams &&\n                        this.multicodecs.includes(peerStreams.protocol) &&\n                        !fanoutPeers.has(id) &&\n                        !this.direct.has(id)) {\n                        const score = getScore(id);\n                        if (score >= this.opts.scoreThresholds.publishThreshold)\n                            candidateFanoutPeers.push(id);\n                        // instead of having to find gossip peers after heartbeat which require another loop\n                        // we prepare peers to gossip in a topic within heartbeat to improve performance\n                        if (score >= this.opts.scoreThresholds.gossipThreshold)\n                            peersToGossip.add(id);\n                    }\n                }\n            }\n            // do we need more peers?\n            if (fanoutPeers.size < D) {\n                const ineed = D - fanoutPeers.size;\n                candidateFanoutPeers.slice(0, ineed).forEach((id) => {\n                    fanoutPeers.add(id);\n                    peersToGossip?.delete(id);\n                });\n            }\n        });\n        this.emitGossip(peersToGossipByTopic);\n        // send coalesced GRAFT/PRUNE messages (will piggyback gossip)\n        await this.sendGraftPrune(tograft, toprune, noPX);\n        // flush pending gossip that wasn't piggybacked above\n        this.flush();\n        // advance the message history window\n        this.mcache.shift();\n        this.dispatchEvent(new CustomEvent('gossipsub:heartbeat'));\n    }\n    /**\n     * Given a topic, returns up to count peers subscribed to that topic\n     * that pass an optional filter function\n     *\n     * @param topic\n     * @param count\n     * @param filter - a function to filter acceptable peers\n     */\n    getRandomGossipPeers(topic, count, filter = () => true) {\n        const peersInTopic = this.topics.get(topic);\n        if (!peersInTopic) {\n            return new Set();\n        }\n        // Adds all peers using our protocol\n        // that also pass the filter function\n        let peers = [];\n        peersInTopic.forEach((id) => {\n            const peerStreams = this.streamsOutbound.get(id);\n            if (!peerStreams) {\n                return;\n            }\n            if (this.multicodecs.includes(peerStreams.protocol) && filter(id)) {\n                peers.push(id);\n            }\n        });\n        // Pseudo-randomly shuffles peers\n        peers = shuffle(peers);\n        if (count > 0 && peers.length > count) {\n            peers = peers.slice(0, count);\n        }\n        return new Set(peers);\n    }\n    onScrapeMetrics(metrics) {\n        /* Data structure sizes */\n        metrics.mcacheSize.set(this.mcache.size);\n        metrics.mcacheNotValidatedCount.set(this.mcache.notValidatedCount);\n        // Arbitrary size\n        metrics.cacheSize.set({ cache: 'direct' }, this.direct.size);\n        metrics.cacheSize.set({ cache: 'seenCache' }, this.seenCache.size);\n        metrics.cacheSize.set({ cache: 'fastMsgIdCache' }, this.fastMsgIdCache?.size ?? 0);\n        metrics.cacheSize.set({ cache: 'publishedMessageIds' }, this.publishedMessageIds.size);\n        metrics.cacheSize.set({ cache: 'mcache' }, this.mcache.size);\n        metrics.cacheSize.set({ cache: 'score' }, this.score.size);\n        metrics.cacheSize.set({ cache: 'gossipTracer.promises' }, this.gossipTracer.size);\n        metrics.cacheSize.set({ cache: 'gossipTracer.requests' }, this.gossipTracer.requestMsByMsgSize);\n        // Bounded by topic\n        metrics.cacheSize.set({ cache: 'topics' }, this.topics.size);\n        metrics.cacheSize.set({ cache: 'subscriptions' }, this.subscriptions.size);\n        metrics.cacheSize.set({ cache: 'mesh' }, this.mesh.size);\n        metrics.cacheSize.set({ cache: 'fanout' }, this.fanout.size);\n        // Bounded by peer\n        metrics.cacheSize.set({ cache: 'peers' }, this.peers.size);\n        metrics.cacheSize.set({ cache: 'streamsOutbound' }, this.streamsOutbound.size);\n        metrics.cacheSize.set({ cache: 'streamsInbound' }, this.streamsInbound.size);\n        metrics.cacheSize.set({ cache: 'acceptFromWhitelist' }, this.acceptFromWhitelist.size);\n        metrics.cacheSize.set({ cache: 'gossip' }, this.gossip.size);\n        metrics.cacheSize.set({ cache: 'control' }, this.control.size);\n        metrics.cacheSize.set({ cache: 'peerhave' }, this.peerhave.size);\n        metrics.cacheSize.set({ cache: 'outbound' }, this.outbound.size);\n        // 2D nested data structure\n        let backoffSize = 0;\n        const now = Date.now();\n        metrics.connectedPeersBackoffSec.reset();\n        for (const backoff of this.backoff.values()) {\n            backoffSize += backoff.size;\n            for (const [peer, expiredMs] of backoff.entries()) {\n                if (this.peers.has(peer)) {\n                    metrics.connectedPeersBackoffSec.observe(Math.max(0, expiredMs - now) / 1000);\n                }\n            }\n        }\n        metrics.cacheSize.set({ cache: 'backoff' }, backoffSize);\n        // Peer counts\n        for (const [topicStr, peers] of this.topics) {\n            metrics.topicPeersCount.set({ topicStr }, peers.size);\n        }\n        for (const [topicStr, peers] of this.mesh) {\n            metrics.meshPeerCounts.set({ topicStr }, peers.size);\n        }\n        // Peer scores\n        const scores = [];\n        const scoreByPeer = new Map();\n        metrics.behaviourPenalty.reset();\n        for (const peerIdStr of this.peers.keys()) {\n            const score = this.score.score(peerIdStr);\n            scores.push(score);\n            scoreByPeer.set(peerIdStr, score);\n            metrics.behaviourPenalty.observe(this.score.peerStats.get(peerIdStr)?.behaviourPenalty ?? 0);\n        }\n        metrics.registerScores(scores, this.opts.scoreThresholds);\n        // Breakdown score per mesh topicLabel\n        metrics.registerScorePerMesh(this.mesh, scoreByPeer);\n        // Breakdown on each score weight\n        const sw = computeAllPeersScoreWeights(this.peers.keys(), this.score.peerStats, this.score.params, this.score.peerIPs, metrics.topicStrToLabel);\n        metrics.registerScoreWeights(sw);\n    }\n}\nexport function gossipsub(init = {}) {\n    return (components) => new GossipSub(components, init);\n}\n//# sourceMappingURL=index.js.map","import { unmarshalPrivateKey } from '@libp2p/crypto/keys';\nimport { StrictSign, StrictNoSign } from '@libp2p/interface/pubsub';\nimport { PublishConfigType } from '../types.js';\n/**\n * Prepare a PublishConfig object from a PeerId.\n */\nexport async function getPublishConfigFromPeerId(signaturePolicy, peerId) {\n    switch (signaturePolicy) {\n        case StrictSign: {\n            if (!peerId) {\n                throw Error('Must provide PeerId');\n            }\n            if (peerId.privateKey == null) {\n                throw Error('Cannot sign message, no private key present');\n            }\n            if (peerId.publicKey == null) {\n                throw Error('Cannot sign message, no public key present');\n            }\n            // Transform privateKey once at initialization time instead of once per message\n            const privateKey = await unmarshalPrivateKey(peerId.privateKey);\n            return {\n                type: PublishConfigType.Signing,\n                author: peerId,\n                key: peerId.publicKey,\n                privateKey\n            };\n        }\n        case StrictNoSign:\n            return {\n                type: PublishConfigType.Anonymous\n            };\n        default:\n            throw new Error(`Unknown signature policy \"${signaturePolicy}\"`);\n    }\n}\n//# sourceMappingURL=publishConfig.js.map","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","/**\n * @packageDocumentation\n *\n * @example\n *\n * ```js\n * import { abortableSource } from 'abortable-iterator'\n *\n * async function main () {\n *   // An example function that creates an async iterator that yields an increasing\n *   // number every x milliseconds and NEVER ENDS!\n *   const asyncCounter = async function * (start, delay) {\n *     let i = start\n *     while (true) {\n *       yield new Promise(resolve => setTimeout(() => resolve(i++), delay))\n *     }\n *   }\n *\n *   // Create a counter that'll yield numbers from 0 upwards every second\n *   const everySecond = asyncCounter(0, 1000)\n *\n *   // Make everySecond abortable!\n *   const controller = new AbortController()\n *   const abortableEverySecond = abortableSource(everySecond, controller.signal)\n *\n *   // Abort after 5 seconds\n *   setTimeout(() => controller.abort(), 5000)\n *\n *   try {\n *     // Start the iteration, which will throw after 5 seconds when it is aborted\n *     for await (const n of abortableEverySecond) {\n *       console.log(n)\n *     }\n *   } catch (err) {\n *     if (err.code === 'ERR_ABORTED') {\n *       // Expected - all ok :D\n *     } else {\n *       throw err\n *     }\n *   }\n * }\n *\n * main()\n * ```\n */\nimport { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n/**\n * Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\n */\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","// @ts-check\n\nimport { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { asUint8Array } from './util/as-uint8array.js';\nimport bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","export var MessageTypes;\n(function (MessageTypes) {\n    MessageTypes[MessageTypes[\"NEW_STREAM\"] = 0] = \"NEW_STREAM\";\n    MessageTypes[MessageTypes[\"MESSAGE_RECEIVER\"] = 1] = \"MESSAGE_RECEIVER\";\n    MessageTypes[MessageTypes[\"MESSAGE_INITIATOR\"] = 2] = \"MESSAGE_INITIATOR\";\n    MessageTypes[MessageTypes[\"CLOSE_RECEIVER\"] = 3] = \"CLOSE_RECEIVER\";\n    MessageTypes[MessageTypes[\"CLOSE_INITIATOR\"] = 4] = \"CLOSE_INITIATOR\";\n    MessageTypes[MessageTypes[\"RESET_RECEIVER\"] = 5] = \"RESET_RECEIVER\";\n    MessageTypes[MessageTypes[\"RESET_INITIATOR\"] = 6] = \"RESET_INITIATOR\";\n})(MessageTypes || (MessageTypes = {}));\nexport const MessageTypeNames = Object.freeze({\n    0: 'NEW_STREAM',\n    1: 'MESSAGE_RECEIVER',\n    2: 'MESSAGE_INITIATOR',\n    3: 'CLOSE_RECEIVER',\n    4: 'CLOSE_INITIATOR',\n    5: 'RESET_RECEIVER',\n    6: 'RESET_INITIATOR'\n});\nexport const InitiatorMessageTypes = Object.freeze({\n    NEW_STREAM: MessageTypes.NEW_STREAM,\n    MESSAGE: MessageTypes.MESSAGE_INITIATOR,\n    CLOSE: MessageTypes.CLOSE_INITIATOR,\n    RESET: MessageTypes.RESET_INITIATOR\n});\nexport const ReceiverMessageTypes = Object.freeze({\n    MESSAGE: MessageTypes.MESSAGE_RECEIVER,\n    CLOSE: MessageTypes.CLOSE_RECEIVER,\n    RESET: MessageTypes.RESET_RECEIVER\n});\n//# sourceMappingURL=message-types.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { MessageTypeNames, MessageTypes } from './message-types.js';\nexport const MAX_MSG_SIZE = 1 << 20; // 1MB\nexport const MAX_MSG_QUEUE_SIZE = 4 << 20; // 4MB\nexport class Decoder {\n    _buffer;\n    _headerInfo;\n    _maxMessageSize;\n    _maxUnprocessedMessageQueueSize;\n    constructor(maxMessageSize = MAX_MSG_SIZE, maxUnprocessedMessageQueueSize = MAX_MSG_QUEUE_SIZE) {\n        this._buffer = new Uint8ArrayList();\n        this._headerInfo = null;\n        this._maxMessageSize = maxMessageSize;\n        this._maxUnprocessedMessageQueueSize = maxUnprocessedMessageQueueSize;\n    }\n    write(chunk) {\n        if (chunk == null || chunk.length === 0) {\n            return [];\n        }\n        this._buffer.append(chunk);\n        if (this._buffer.byteLength > this._maxUnprocessedMessageQueueSize) {\n            throw Object.assign(new Error('unprocessed message queue size too large!'), { code: 'ERR_MSG_QUEUE_TOO_BIG' });\n        }\n        const msgs = [];\n        while (this._buffer.length !== 0) {\n            if (this._headerInfo == null) {\n                try {\n                    this._headerInfo = this._decodeHeader(this._buffer);\n                }\n                catch (err) {\n                    if (err.code === 'ERR_MSG_TOO_BIG') {\n                        throw err;\n                    }\n                    break; // We haven't received enough data yet\n                }\n            }\n            const { id, type, length, offset } = this._headerInfo;\n            const bufferedDataLength = this._buffer.length - offset;\n            if (bufferedDataLength < length) {\n                break; // not enough data yet\n            }\n            const msg = {\n                id,\n                type\n            };\n            if (type === MessageTypes.NEW_STREAM || type === MessageTypes.MESSAGE_INITIATOR || type === MessageTypes.MESSAGE_RECEIVER) {\n                msg.data = this._buffer.sublist(offset, offset + length);\n            }\n            msgs.push(msg);\n            this._buffer.consume(offset + length);\n            this._headerInfo = null;\n        }\n        return msgs;\n    }\n    /**\n     * Attempts to decode the message header from the buffer\n     */\n    _decodeHeader(data) {\n        const { value: h, offset } = readVarInt(data);\n        const { value: length, offset: end } = readVarInt(data, offset);\n        const type = h & 7;\n        // @ts-expect-error h is a number not a CODE\n        if (MessageTypeNames[type] == null) {\n            throw new Error(`Invalid type received: ${type}`);\n        }\n        // test message type varint + data length\n        if (length > this._maxMessageSize) {\n            throw Object.assign(new Error('message size too large!'), { code: 'ERR_MSG_TOO_BIG' });\n        }\n        // @ts-expect-error h is a number not a CODE\n        return { id: h >> 3, type, offset: offset + end, length };\n    }\n}\nconst MSB = 0x80;\nconst REST = 0x7F;\nfunction readVarInt(buf, offset = 0) {\n    let res = 0;\n    let shift = 0;\n    let counter = offset;\n    let b;\n    const l = buf.length;\n    do {\n        if (counter >= l || shift > 49) {\n            offset = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf.get(counter++);\n        res += shift < 28\n            ? (b & REST) << shift\n            : (b & REST) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB);\n    offset = counter - offset;\n    return {\n        value: res,\n        offset\n    };\n}\n//# sourceMappingURL=decode.js.map","import defer from 'p-defer';\nimport { Uint8ArrayList } from 'uint8arraylist';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nconst DEFAULT_BATCH_SIZE = 1024 * 1024;\nconst DEFAULT_SERIALIZE = (buf, list) => { list.append(buf); };\nfunction batchedBytes(source, options) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            let buffer = new Uint8ArrayList();\n            let ended = false;\n            let deferred = defer();\n            let size = Number(options?.size ?? DEFAULT_BATCH_SIZE);\n            if (isNaN(size) || size === 0 || size < 0) {\n                size = DEFAULT_BATCH_SIZE;\n            }\n            if (size !== Math.round(size)) {\n                throw new Error('Batch size must be an integer');\n            }\n            const yieldAfter = options?.yieldAfter ?? 0;\n            const serialize = options?.serialize ?? DEFAULT_SERIALIZE;\n            void Promise.resolve().then(async () => {\n                try {\n                    let timeout;\n                    for await (const buf of source) {\n                        // @ts-expect-error - if buf is not `Uint8Array | Uint8ArrayList` we cannot use the default serializer\n                        serialize(buf, buffer);\n                        if (buffer.byteLength >= size) {\n                            clearTimeout(timeout);\n                            deferred.resolve();\n                            continue;\n                        }\n                        timeout = setTimeout(() => {\n                            deferred.resolve();\n                        }, yieldAfter);\n                    }\n                    clearTimeout(timeout);\n                    deferred.resolve();\n                }\n                catch (err) {\n                    deferred.reject(err);\n                }\n                finally {\n                    ended = true;\n                }\n            });\n            while (!ended) { // eslint-disable-line no-unmodified-loop-condition\n                await deferred.promise;\n                deferred = defer();\n                if (buffer.byteLength > 0) {\n                    const b = buffer;\n                    buffer = new Uint8ArrayList();\n                    yield b.subarray();\n                }\n            }\n        })();\n    }\n    return (function* () {\n        const buffer = new Uint8ArrayList();\n        let size = Number(options?.size ?? DEFAULT_BATCH_SIZE);\n        if (isNaN(size) || size === 0 || size < 0) {\n            size = DEFAULT_BATCH_SIZE;\n        }\n        if (size !== Math.round(size)) {\n            throw new Error('Batch size must be an integer');\n        }\n        const serialize = options?.serialize ?? DEFAULT_SERIALIZE;\n        for (const buf of source) {\n            // @ts-expect-error - if buf is not `Uint8Array | Uint8ArrayList` we cannot use the default serializer\n            serialize(buf, buffer);\n            if (buffer.byteLength >= size) {\n                yield buffer.subarray(0, size);\n                buffer.consume(size);\n            }\n        }\n        if (buffer.byteLength > 0) {\n            yield buffer.subarray();\n        }\n    })();\n}\nexport default batchedBytes;\n//# sourceMappingURL=index.js.map","export function allocUnsafe(size) {\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc-unsafe-browser.js.map","import batchedBytes from 'it-batched-bytes';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { allocUnsafe } from './alloc-unsafe.js';\nimport { MessageTypes } from './message-types.js';\nconst POOL_SIZE = 10 * 1024;\nclass Encoder {\n    _pool;\n    _poolOffset;\n    constructor() {\n        this._pool = allocUnsafe(POOL_SIZE);\n        this._poolOffset = 0;\n    }\n    /**\n     * Encodes the given message and adds it to the passed list\n     */\n    write(msg, list) {\n        const pool = this._pool;\n        let offset = this._poolOffset;\n        varint.encode(msg.id << 3 | msg.type, pool, offset);\n        offset += varint.encodingLength(msg.id << 3 | msg.type);\n        if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n            varint.encode(msg.data.length, pool, offset);\n            offset += varint.encodingLength(msg.data.length);\n        }\n        else {\n            varint.encode(0, pool, offset);\n            offset += varint.encodingLength(0);\n        }\n        const header = pool.subarray(this._poolOffset, offset);\n        if (POOL_SIZE - offset < 100) {\n            this._pool = allocUnsafe(POOL_SIZE);\n            this._poolOffset = 0;\n        }\n        else {\n            this._poolOffset = offset;\n        }\n        list.append(header);\n        if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n            list.append(msg.data);\n        }\n    }\n}\nconst encoder = new Encoder();\n/**\n * Encode and yield one or more messages\n */\nexport async function* encode(source, minSendBytes = 0) {\n    if (minSendBytes == null || minSendBytes === 0) {\n        // just send the messages\n        for await (const messages of source) {\n            const list = new Uint8ArrayList();\n            for (const msg of messages) {\n                encoder.write(msg, list);\n            }\n            yield list.subarray();\n        }\n        return;\n    }\n    // batch messages up for sending\n    yield* batchedBytes(source, {\n        size: minSendBytes,\n        serialize: (obj, list) => {\n            for (const m of obj) {\n                encoder.write(m, list);\n            }\n        }\n    });\n}\n//# sourceMappingURL=encode.js.map","import { AbstractStream } from '@libp2p/interface/stream-muxer/stream';\nimport { logger } from '@libp2p/logger';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_MSG_SIZE } from './decode.js';\nimport { InitiatorMessageTypes, ReceiverMessageTypes } from './message-types.js';\nexport class MplexStream extends AbstractStream {\n    name;\n    streamId;\n    send;\n    types;\n    maxDataSize;\n    constructor(init) {\n        super(init);\n        this.types = init.direction === 'outbound' ? InitiatorMessageTypes : ReceiverMessageTypes;\n        this.send = init.send;\n        this.name = init.name;\n        this.streamId = init.streamId;\n        this.maxDataSize = init.maxDataSize;\n    }\n    async sendNewStream() {\n        await this.send({ id: this.streamId, type: InitiatorMessageTypes.NEW_STREAM, data: new Uint8ArrayList(uint8ArrayFromString(this.name)) });\n    }\n    async sendData(data) {\n        data = data.sublist();\n        while (data.byteLength > 0) {\n            const toSend = Math.min(data.byteLength, this.maxDataSize);\n            await this.send({\n                id: this.streamId,\n                type: this.types.MESSAGE,\n                data: data.sublist(0, toSend)\n            });\n            data.consume(toSend);\n        }\n    }\n    async sendReset() {\n        await this.send({ id: this.streamId, type: this.types.RESET });\n    }\n    async sendCloseWrite() {\n        await this.send({ id: this.streamId, type: this.types.CLOSE });\n    }\n    async sendCloseRead() {\n        // mplex does not support close read, only close write\n    }\n}\nexport function createStream(options) {\n    const { id, name, send, onEnd, type = 'initiator', maxMsgSize = MAX_MSG_SIZE } = options;\n    return new MplexStream({\n        id: type === 'initiator' ? (`i${id}`) : `r${id}`,\n        streamId: id,\n        name: `${name == null ? id : name}`,\n        direction: type === 'initiator' ? 'outbound' : 'inbound',\n        maxDataSize: maxMsgSize,\n        onEnd,\n        send,\n        log: logger(`libp2p:mplex:stream:${type}:${id}`)\n    });\n}\n//# sourceMappingURL=stream.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { logger } from '@libp2p/logger';\nimport { abortableSource } from 'abortable-iterator';\nimport { pipe } from 'it-pipe';\nimport { pushableV } from 'it-pushable';\nimport { RateLimiterMemory } from 'rate-limiter-flexible';\nimport { toString as uint8ArrayToString } from 'uint8arrays';\nimport { Decoder } from './decode.js';\nimport { encode } from './encode.js';\nimport { MessageTypes, MessageTypeNames } from './message-types.js';\nimport { createStream } from './stream.js';\nconst log = logger('libp2p:mplex');\nconst MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION = 1024;\nconst MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION = 1024;\nconst MAX_STREAM_BUFFER_SIZE = 1024 * 1024 * 4; // 4MB\nconst DISCONNECT_THRESHOLD = 5;\nconst CLOSE_TIMEOUT = 500;\nfunction printMessage(msg) {\n    const output = {\n        ...msg,\n        type: `${MessageTypeNames[msg.type]} (${msg.type})`\n    };\n    if (msg.type === MessageTypes.NEW_STREAM) {\n        output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray());\n    }\n    if (msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) {\n        output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray(), 'base16');\n    }\n    return output;\n}\nexport class MplexStreamMuxer {\n    protocol = '/mplex/6.7.0';\n    sink;\n    source;\n    _streamId;\n    _streams;\n    _init;\n    _source;\n    closeController;\n    rateLimiter;\n    closeTimeout;\n    constructor(init) {\n        init = init ?? {};\n        this._streamId = 0;\n        this._streams = {\n            /**\n             * Stream to ids map\n             */\n            initiators: new Map(),\n            /**\n             * Stream to ids map\n             */\n            receivers: new Map()\n        };\n        this._init = init;\n        this.closeTimeout = init.closeTimeout ?? CLOSE_TIMEOUT;\n        /**\n         * An iterable sink\n         */\n        this.sink = this._createSink();\n        /**\n         * An iterable source\n         */\n        this._source = pushableV({\n            objectMode: true,\n            onEnd: () => {\n                // the source has ended, we can't write any more messages to gracefully\n                // close streams so all we can do is destroy them\n                for (const stream of this._streams.initiators.values()) {\n                    stream.destroy();\n                }\n                for (const stream of this._streams.receivers.values()) {\n                    stream.destroy();\n                }\n            }\n        });\n        this.source = pipe(this._source, source => encode(source, this._init.minSendBytes));\n        /**\n         * Close controller\n         */\n        this.closeController = new AbortController();\n        this.rateLimiter = new RateLimiterMemory({\n            points: init.disconnectThreshold ?? DISCONNECT_THRESHOLD,\n            duration: 1\n        });\n    }\n    /**\n     * Returns a Map of streams and their ids\n     */\n    get streams() {\n        // Inbound and Outbound streams may have the same ids, so we need to make those unique\n        const streams = [];\n        for (const stream of this._streams.initiators.values()) {\n            streams.push(stream);\n        }\n        for (const stream of this._streams.receivers.values()) {\n            streams.push(stream);\n        }\n        return streams;\n    }\n    /**\n     * Initiate a new stream with the given name. If no name is\n     * provided, the id of the stream will be used.\n     */\n    newStream(name) {\n        if (this.closeController.signal.aborted) {\n            throw new Error('Muxer already closed');\n        }\n        const id = this._streamId++;\n        name = name == null ? id.toString() : name.toString();\n        const registry = this._streams.initiators;\n        return this._newStream({ id, name, type: 'initiator', registry });\n    }\n    /**\n     * Close or abort all tracked streams and stop the muxer\n     */\n    async close(options) {\n        if (this.closeController.signal.aborted) {\n            return;\n        }\n        const signal = options?.signal ?? AbortSignal.timeout(this.closeTimeout);\n        try {\n            // try to gracefully close all streams\n            await Promise.all(this.streams.map(async (s) => s.close({\n                signal\n            })));\n            this._source.end();\n            // try to gracefully close the muxer\n            await this._source.onEmpty({\n                signal\n            });\n            this.closeController.abort();\n        }\n        catch (err) {\n            this.abort(err);\n        }\n    }\n    abort(err) {\n        if (this.closeController.signal.aborted) {\n            return;\n        }\n        this.streams.forEach(s => { s.abort(err); });\n        this.closeController.abort(err);\n    }\n    /**\n     * Called whenever an inbound stream is created\n     */\n    _newReceiverStream(options) {\n        const { id, name } = options;\n        const registry = this._streams.receivers;\n        return this._newStream({ id, name, type: 'receiver', registry });\n    }\n    _newStream(options) {\n        const { id, name, type, registry } = options;\n        log('new %s stream %s', type, id);\n        if (type === 'initiator' && this._streams.initiators.size === (this._init.maxOutboundStreams ?? MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION)) {\n            throw new CodeError('Too many outbound streams open', 'ERR_TOO_MANY_OUTBOUND_STREAMS');\n        }\n        if (registry.has(id)) {\n            throw new Error(`${type} stream ${id} already exists!`);\n        }\n        const send = async (msg) => {\n            if (log.enabled) {\n                log.trace('%s stream %s send', type, id, printMessage(msg));\n            }\n            this._source.push(msg);\n        };\n        const onEnd = () => {\n            log('%s stream with id %s and protocol %s ended', type, id, stream.protocol);\n            registry.delete(id);\n            if (this._init.onStreamEnd != null) {\n                this._init.onStreamEnd(stream);\n            }\n        };\n        const stream = createStream({ id, name, send, type, onEnd, maxMsgSize: this._init.maxMsgSize });\n        registry.set(id, stream);\n        return stream;\n    }\n    /**\n     * Creates a sink with an abortable source. Incoming messages will\n     * also have their size restricted. All messages will be varint decoded.\n     */\n    _createSink() {\n        const sink = async (source) => {\n            try {\n                source = abortableSource(source, this.closeController.signal, {\n                    returnOnAbort: true\n                });\n                const decoder = new Decoder(this._init.maxMsgSize, this._init.maxUnprocessedMessageQueueSize);\n                for await (const chunk of source) {\n                    for (const msg of decoder.write(chunk)) {\n                        await this._handleIncoming(msg);\n                    }\n                }\n                this._source.end();\n            }\n            catch (err) {\n                log('error in sink', err);\n                this._source.end(err); // End the source with an error\n            }\n        };\n        return sink;\n    }\n    async _handleIncoming(message) {\n        const { id, type } = message;\n        if (log.enabled) {\n            log.trace('incoming message', printMessage(message));\n        }\n        // Create a new stream?\n        if (message.type === MessageTypes.NEW_STREAM) {\n            if (this._streams.receivers.size === (this._init.maxInboundStreams ?? MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION)) {\n                log('too many inbound streams open');\n                // not going to allow this stream, send the reset message manually\n                // instead of setting it up just to tear it down\n                this._source.push({\n                    id,\n                    type: MessageTypes.RESET_RECEIVER\n                });\n                // if we've hit our stream limit, and the remote keeps trying to open\n                // more new streams, if they are doing this very quickly maybe they\n                // are attacking us and we should close the connection\n                try {\n                    await this.rateLimiter.consume('new-stream', 1);\n                }\n                catch {\n                    log('rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection');\n                    // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n                    this.abort(new Error('Too many open streams'));\n                    return;\n                }\n                return;\n            }\n            const stream = this._newReceiverStream({ id, name: uint8ArrayToString(message.data instanceof Uint8Array ? message.data : message.data.subarray()) });\n            if (this._init.onIncomingStream != null) {\n                this._init.onIncomingStream(stream);\n            }\n            return;\n        }\n        const list = (type & 1) === 1 ? this._streams.initiators : this._streams.receivers;\n        const stream = list.get(id);\n        if (stream == null) {\n            log('missing stream %s for message type %s', id, MessageTypeNames[type]);\n            // if the remote keeps sending us messages for streams that have been\n            // closed or were never opened they may be attacking us so if they do\n            // this very quickly all we can do is close the connection\n            try {\n                await this.rateLimiter.consume('missing-stream', 1);\n            }\n            catch {\n                log('rate limit hit when receiving messages for streams that do not exist - closing remote connection');\n                // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n                this.abort(new Error('Too many messages for missing streams'));\n                return;\n            }\n            return;\n        }\n        const maxBufferSize = this._init.maxStreamBufferSize ?? MAX_STREAM_BUFFER_SIZE;\n        try {\n            switch (type) {\n                case MessageTypes.MESSAGE_INITIATOR:\n                case MessageTypes.MESSAGE_RECEIVER:\n                    if (stream.sourceReadableLength() > maxBufferSize) {\n                        // Stream buffer has got too large, reset the stream\n                        this._source.push({\n                            id: message.id,\n                            type: type === MessageTypes.MESSAGE_INITIATOR ? MessageTypes.RESET_RECEIVER : MessageTypes.RESET_INITIATOR\n                        });\n                        // Inform the stream consumer they are not fast enough\n                        throw new CodeError('Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers', 'ERR_STREAM_INPUT_BUFFER_FULL');\n                    }\n                    // We got data from the remote, push it into our local stream\n                    stream.sourcePush(message.data);\n                    break;\n                case MessageTypes.CLOSE_INITIATOR:\n                case MessageTypes.CLOSE_RECEIVER:\n                    // The remote has stopped writing, so we can stop reading\n                    stream.remoteCloseWrite();\n                    break;\n                case MessageTypes.RESET_INITIATOR:\n                case MessageTypes.RESET_RECEIVER:\n                    // The remote has errored, stop reading and writing to the stream immediately\n                    stream.reset();\n                    break;\n                default:\n                    log('unknown message type %s', type);\n            }\n        }\n        catch (err) {\n            log.error('error while processing message', err);\n            stream.abort(err);\n        }\n    }\n}\n//# sourceMappingURL=mplex.js.map","import { MplexStreamMuxer } from './mplex.js';\nclass Mplex {\n    protocol = '/mplex/6.7.0';\n    _init;\n    constructor(init = {}) {\n        this._init = init;\n    }\n    createStreamMuxer(init = {}) {\n        return new MplexStreamMuxer({\n            ...init,\n            ...this._init\n        });\n    }\n}\nexport function mplex(init = {}) {\n    return () => new Mplex(init);\n}\n//# sourceMappingURL=index.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import { asUint8Array } from './util/as-uint8array.js';\nimport bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","import { ed25519 as ed } from '@noble/curves/ed25519';\nconst PUBLIC_KEY_BYTE_LENGTH = 32;\nconst PRIVATE_KEY_BYTE_LENGTH = 64; // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport async function generateKey() {\n    // the actual private key (32 bytes)\n    const privateKeyRaw = ed.utils.randomPrivateKey();\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    // concatenated the public key to the private key\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport async function generateKeyFromSeed(seed) {\n    if (seed.length !== KEYS_BYTE_LENGTH) {\n        throw new TypeError('\"seed\" must be 32 bytes in length.');\n    }\n    else if (!(seed instanceof Uint8Array)) {\n        throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.');\n    }\n    // based on node forges algorithm, the seed is used directly as private key\n    const privateKeyRaw = seed;\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nexport async function hashAndSign(privateKey, msg) {\n    const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH);\n    return ed.sign(msg, privateKeyRaw);\n}\nexport async function hashAndVerify(publicKey, sig, msg) {\n    return ed.verify(sig, msg, publicKey);\n}\nfunction concatKeys(privateKeyRaw, publicKey) {\n    const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);\n    for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n        privateKey[i] = privateKeyRaw[i];\n        privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i];\n    }\n    return privateKey;\n}\n//# sourceMappingURL=ed25519-browser.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/* eslint-env browser */\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n    get(win = globalThis) {\n        const nativeCrypto = win.crypto;\n        if (nativeCrypto == null || nativeCrypto.subtle == null) {\n            throw Object.assign(new Error('Missing Web Crypto API. ' +\n                'The most likely cause of this error is that this page is being accessed ' +\n                'from an insecure context (i.e. not HTTPS). For more information and ' +\n                'possible resolutions see ' +\n                'https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api'), { code: 'ERR_MISSING_WEB_CRYPTO' });\n        }\n        return nativeCrypto;\n    }\n};\n//# sourceMappingURL=webcrypto.js.map","import { concat } from 'uint8arrays/concat';\nimport { fromString } from 'uint8arrays/from-string';\nimport webcrypto from '../webcrypto.js';\n// WebKit on Linux does not support deriving a key from an empty PBKDF2 key.\n// So, as a workaround, we provide the generated key as a constant. We test that\n// this generated key is accurate in test/workaround.spec.ts\n// Generated via:\n// await crypto.subtle.exportKey('jwk',\n//   await crypto.subtle.deriveKey(\n//     { name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } },\n//     await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']),\n//     { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt'])\n// )\nexport const derivedEmptyPasswordKey = { alg: 'A128GCM', ext: true, k: 'scm9jmO_4BJAgdwWGVulLg', key_ops: ['encrypt', 'decrypt'], kty: 'oct' };\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\nexport function create(opts) {\n    const algorithm = opts?.algorithm ?? 'AES-GCM';\n    let keyLength = opts?.keyLength ?? 16;\n    const nonceLength = opts?.nonceLength ?? 12;\n    const digest = opts?.digest ?? 'SHA-256';\n    const saltLength = opts?.saltLength ?? 16;\n    const iterations = opts?.iterations ?? 32767;\n    const crypto = webcrypto.get();\n    keyLength *= 8; // Browser crypto uses bits instead of bytes\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to encrypt the data.\n     */\n    async function encrypt(data, password) {\n        const salt = crypto.getRandomValues(new Uint8Array(saltLength));\n        const nonce = crypto.getRandomValues(new Uint8Array(nonceLength));\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['encrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            }\n        }\n        else {\n            // Derive a key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt']);\n        }\n        // Encrypt the string.\n        const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data);\n        return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)]);\n    }\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to decrypt the data. The options used to create\n     * this decryption cipher must be the same as those used to create\n     * the encryption cipher.\n     */\n    async function decrypt(data, password) {\n        const salt = data.subarray(0, saltLength);\n        const nonce = data.subarray(saltLength, saltLength + nonceLength);\n        const ciphertext = data.subarray(saltLength + nonceLength);\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['decrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['decrypt']);\n            }\n        }\n        else {\n            // Derive the key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt']);\n        }\n        // Decrypt the string.\n        const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext);\n        return new Uint8Array(plaintext);\n    }\n    const cipher = {\n        encrypt,\n        decrypt\n    };\n    return cipher;\n}\n//# sourceMappingURL=aes-gcm.browser.js.map","import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter(privateKey, password) {\n    const cipher = ciphers.create();\n    const encryptedKey = await cipher.encrypt(privateKey, password);\n    return base64.encode(encryptedKey);\n}\n//# sourceMappingURL=exporter.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"RSA\"] = \"RSA\";\n    KeyType[\"Ed25519\"] = \"Ed25519\";\n    KeyType[\"Secp256k1\"] = \"Secp256k1\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n    __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n    __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n    __KeyTypeValues[__KeyTypeValues[\"Secp256k1\"] = 2] = \"Secp256k1\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n    KeyType.codec = () => {\n        return enumeration(__KeyTypeValues);\n    };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n    let _codec;\n    PublicKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PublicKey.encode = (obj) => {\n        return encodeMessage(obj, PublicKey.codec());\n    };\n    PublicKey.decode = (buf) => {\n        return decodeMessage(buf, PublicKey.codec());\n    };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n    let _codec;\n    PrivateKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PrivateKey.encode = (obj) => {\n        return encodeMessage(obj, PrivateKey.codec());\n    };\n    PrivateKey.decode = (buf) => {\n        return decodeMessage(buf, PrivateKey.codec());\n    };\n})(PrivateKey || (PrivateKey = {}));\n//# sourceMappingURL=keys.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as crypto from './ed25519.js';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nexport class Ed25519PublicKey {\n    _key;\n    constructor(key) {\n        this._key = ensureKey(key, crypto.publicKeyLength);\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Ed25519PrivateKey {\n    _key;\n    _publicKey;\n    // key       - 64 byte Uint8Array containing private key\n    // publicKey - 32 byte Uint8Array containing public key\n    constructor(key, publicKey) {\n        this._key = ensureKey(key, crypto.privateKeyLength);\n        this._publicKey = ensureKey(publicKey, crypto.publicKeyLength);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Ed25519PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the identity multihash containing its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     *\n     * @returns {Promise<string>}\n     */\n    async id() {\n        const encoding = identity.digest(this.public.bytes);\n        return base58btc.encode(encoding.bytes).substring(1);\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalEd25519PrivateKey(bytes) {\n    // Try the old, redundant public key version\n    if (bytes.length > crypto.privateKeyLength) {\n        bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength);\n        const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n        const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length);\n        return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n    }\n    bytes = ensureKey(bytes, crypto.privateKeyLength);\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n    const publicKeyBytes = bytes.subarray(crypto.publicKeyLength);\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n}\nexport function unmarshalEd25519PublicKey(bytes) {\n    bytes = ensureKey(bytes, crypto.publicKeyLength);\n    return new Ed25519PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const { privateKey, publicKey } = await crypto.generateKey();\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nexport async function generateKeyPairFromSeed(seed) {\n    const { privateKey, publicKey } = await crypto.generateKeyFromSeed(seed);\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nfunction ensureKey(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE');\n    }\n    return key;\n}\n//# sourceMappingURL=ed25519-class.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import 'node-forge/lib/util.js';\nimport 'node-forge/lib/jsbn.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport function bigIntegerToUintBase64url(num, len) {\n    // Call `.abs()` to convert to unsigned\n    let buf = Uint8Array.from(num.abs().toByteArray()); // toByteArray converts to big endian\n    // toByteArray() gives us back a signed array, which will include a leading 0\n    // byte if the most significant bit of the number is 1:\n    // https://docs.microsoft.com/en-us/windows/win32/seccertenroll/about-integer\n    // Our number will always be positive so we should remove the leading padding.\n    buf = buf[0] === 0 ? buf.subarray(1) : buf;\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return uint8ArrayToString(buf, 'base64url');\n}\n// Convert a base64url encoded string to a BigInteger\nexport function base64urlToBigInteger(str) {\n    const buf = base64urlToBuffer(str);\n    return new forge.jsbn.BigInteger(uint8ArrayToString(buf, 'base16'), 16);\n}\nexport function base64urlToBuffer(str, len) {\n    let buf = uint8ArrayFromString(str, 'base64urlpad');\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return buf;\n}\n//# sourceMappingURL=util.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64urlToBuffer } from '../util.js';\nimport webcrypto from '../webcrypto.js';\nconst bits = {\n    'P-256': 256,\n    'P-384': 384,\n    'P-521': 521\n};\nconst curveTypes = Object.keys(bits);\nconst names = curveTypes.join(' / ');\nexport async function generateEphmeralKeyPair(curve) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'ECDH',\n        namedCurve: curve\n    }, true, ['deriveBits']);\n    // forcePrivate is used for testing only\n    const genSharedKey = async (theirPub, forcePrivate) => {\n        let privateKey;\n        if (forcePrivate != null) {\n            privateKey = await webcrypto.get().subtle.importKey('jwk', unmarshalPrivateKey(curve, forcePrivate), {\n                name: 'ECDH',\n                namedCurve: curve\n            }, false, ['deriveBits']);\n        }\n        else {\n            privateKey = pair.privateKey;\n        }\n        const key = await webcrypto.get().subtle.importKey('jwk', unmarshalPublicKey(curve, theirPub), {\n            name: 'ECDH',\n            namedCurve: curve\n        }, false, []);\n        const buffer = await webcrypto.get().subtle.deriveBits({\n            name: 'ECDH',\n            // @ts-expect-error namedCurve is missing from the types\n            namedCurve: curve,\n            public: key\n        }, privateKey, bits[curve]);\n        return new Uint8Array(buffer, 0, buffer.byteLength);\n    };\n    const publicKey = await webcrypto.get().subtle.exportKey('jwk', pair.publicKey);\n    const ecdhKey = {\n        key: marshalPublicKey(publicKey),\n        genSharedKey\n    };\n    return ecdhKey;\n}\nconst curveLengths = {\n    'P-256': 32,\n    'P-384': 48,\n    'P-521': 66\n};\n// Marshal converts a jwk encoded ECDH public key into the\n// form specified in section 4.3.6 of ANSI X9.62. (This is the format\n// go-ipfs uses)\nfunction marshalPublicKey(jwk) {\n    if (jwk.crv == null || jwk.x == null || jwk.y == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    if (jwk.crv !== 'P-256' && jwk.crv !== 'P-384' && jwk.crv !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${jwk.crv}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[jwk.crv];\n    return uint8ArrayConcat([\n        Uint8Array.from([4]),\n        base64urlToBuffer(jwk.x, byteLen),\n        base64urlToBuffer(jwk.y, byteLen)\n    ], 1 + byteLen * 2);\n}\n// Unmarshal converts a point, serialized by Marshal, into an jwk encoded key\nfunction unmarshalPublicKey(curve, key) {\n    if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n        throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE');\n    }\n    const byteLen = curveLengths[curve];\n    if (!uint8ArrayEquals(key.subarray(0, 1), Uint8Array.from([4]))) {\n        throw new CodeError('Cannot unmarshal public key - invalid key format', 'ERR_INVALID_KEY_FORMAT');\n    }\n    return {\n        kty: 'EC',\n        crv: curve,\n        x: uint8ArrayToString(key.subarray(1, byteLen + 1), 'base64url'),\n        y: uint8ArrayToString(key.subarray(1 + byteLen), 'base64url'),\n        ext: true\n    };\n}\nconst unmarshalPrivateKey = (curve, key) => ({\n    ...unmarshalPublicKey(curve, key.public),\n    d: uint8ArrayToString(key.private, 'base64url')\n});\n//# sourceMappingURL=ecdh-browser.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { randomBytes as randB } from '@noble/hashes/utils';\nexport default function randomBytes(length) {\n    if (isNaN(length) || length <= 0) {\n        throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH');\n    }\n    return randB(length);\n}\n//# sourceMappingURL=random-bytes.js.map","import 'node-forge/lib/rsa.js';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { base64urlToBigInteger } from '../util.js';\nfunction convert(key, types) {\n    return types.map(t => base64urlToBigInteger(key[t]));\n}\nexport function jwk2priv(key) {\n    return forge.pki.setRsaPrivateKey(...convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi']));\n}\nexport function jwk2pub(key) {\n    return forge.pki.setRsaPublicKey(...convert(key, ['n', 'e']));\n}\n//# sourceMappingURL=jwk2pem.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport randomBytes from '../random-bytes.js';\nimport webcrypto from '../webcrypto.js';\nimport { jwk2pub, jwk2priv } from './jwk2pem.js';\nimport * as utils from './rsa-utils.js';\nexport { utils };\nexport async function generateKey(bits) {\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: 'SHA-256' }\n    }, true, ['sign', 'verify']);\n    const keys = await exportKey(pair);\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\n// Takes a jwk key\nexport async function unmarshalPrivateKey(key) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['sign']);\n    const pair = [\n        privateKey,\n        await derivePublicFromPrivate(key)\n    ];\n    const keys = await exportKey({\n        privateKey: pair[0],\n        publicKey: pair[1]\n    });\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\nexport { randomBytes as getRandomValues };\nexport async function hashAndSign(key, msg) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['sign']);\n    const sig = await webcrypto.get().subtle.sign({ name: 'RSASSA-PKCS1-v1_5' }, privateKey, Uint8Array.from(msg));\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg) {\n    const publicKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['verify']);\n    return webcrypto.get().subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, publicKey, sig, msg);\n}\nasync function exportKey(pair) {\n    if (pair.privateKey == null || pair.publicKey == null) {\n        throw new CodeError('Private and public key are required', 'ERR_INVALID_PARAMETERS');\n    }\n    return Promise.all([\n        webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n        webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n    ]);\n}\nasync function derivePublicFromPrivate(jwKey) {\n    return webcrypto.get().subtle.importKey('jwk', {\n        kty: jwKey.kty,\n        n: jwKey.n,\n        e: jwKey.e\n    }, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['verify']);\n}\n/*\n\nRSA encryption/decryption for the browser with webcrypto workaround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg Uint8Array to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our Uint8Array a binary string\n  - Convert resulting nodeForge buffer to Uint8Array: it returns a binary string, turn that into a Uint8Array\n\n*/\nfunction convertKey(key, pub, msg, handle) {\n    const fkey = pub ? jwk2pub(key) : jwk2priv(key);\n    const fmsg = uint8ArrayToString(Uint8Array.from(msg), 'ascii');\n    const fomsg = handle(fmsg, fkey);\n    return uint8ArrayFromString(fomsg, 'ascii');\n}\nexport function encrypt(key, msg) {\n    return convertKey(key, true, msg, (msg, key) => key.encrypt(msg));\n}\nexport function decrypt(key, msg) {\n    return convertKey(key, false, msg, (msg, key) => key.decrypt(msg));\n}\nexport function keySize(jwk) {\n    if (jwk.kty !== 'RSA') {\n        throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE');\n    }\n    else if (jwk.n == null) {\n        throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS');\n    }\n    const bytes = uint8ArrayFromString(jwk.n, 'base64url');\n    return bytes.length * 8;\n}\n//# sourceMappingURL=rsa-browser.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport 'node-forge/lib/sha512.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nimport * as crypto from './rsa.js';\nexport const MAX_KEY_SIZE = 8192;\nexport class RsaPublicKey {\n    _key;\n    constructor(key) {\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkix(this._key);\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    encrypt(bytes) {\n        return crypto.encrypt(this._key, bytes);\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class RsaPrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey;\n    }\n    genSecret() {\n        return crypto.getRandomValues(16);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        if (this._publicKey == null) {\n            throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED');\n        }\n        return new RsaPublicKey(this._publicKey);\n    }\n    decrypt(bytes) {\n        return crypto.decrypt(this._key, bytes);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkcs1(this._key);\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected PEM format\n     */\n    async export(password, format = 'pkcs-8') {\n        if (format === 'pkcs-8') {\n            const buffer = new forge.util.ByteBuffer(this.marshal());\n            const asn1 = forge.asn1.fromDer(buffer);\n            const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n            const options = {\n                algorithm: 'aes256',\n                count: 10000,\n                saltSize: 128 / 8,\n                prfAlgorithm: 'sha512'\n            };\n            return forge.pki.encryptRsaPrivateKey(privateKey, password, options);\n        }\n        else if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport async function unmarshalRsaPrivateKey(bytes) {\n    const jwk = crypto.utils.pkcs1ToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport function unmarshalRsaPublicKey(bytes) {\n    const jwk = crypto.utils.pkixToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    return new RsaPublicKey(jwk);\n}\nexport async function fromJwk(jwk) {\n    if (crypto.keySize(jwk) > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport async function generateKeyPair(bits) {\n    if (bits > MAX_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.generateKey(bits);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\n//# sourceMappingURL=rsa-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/rsa.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { bigIntegerToUintBase64url, base64urlToBigInteger } from './../util.js';\n// Convert a PKCS#1 in ASN1 DER format to a JWK key\nexport function pkcs1ToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n    // https://tools.ietf.org/html/rfc7518#section-6.3.1\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(privateKey.n),\n        e: bigIntegerToUintBase64url(privateKey.e),\n        d: bigIntegerToUintBase64url(privateKey.d),\n        p: bigIntegerToUintBase64url(privateKey.p),\n        q: bigIntegerToUintBase64url(privateKey.q),\n        dp: bigIntegerToUintBase64url(privateKey.dP),\n        dq: bigIntegerToUintBase64url(privateKey.dQ),\n        qi: bigIntegerToUintBase64url(privateKey.qInv),\n        alg: 'RS256'\n    };\n}\n// Convert a JWK key into PKCS#1 in ASN1 DER format\nexport function jwkToPkcs1(jwk) {\n    if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.privateKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e),\n        d: base64urlToBigInteger(jwk.d),\n        p: base64urlToBigInteger(jwk.p),\n        q: base64urlToBigInteger(jwk.q),\n        dP: base64urlToBigInteger(jwk.dp),\n        dQ: base64urlToBigInteger(jwk.dq),\n        qInv: base64urlToBigInteger(jwk.qi)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n// Convert a PKCIX in ASN1 DER format to a JWK key\nexport function pkixToJwk(bytes) {\n    const asn1 = forge.asn1.fromDer(uint8ArrayToString(bytes, 'ascii'));\n    const publicKey = forge.pki.publicKeyFromAsn1(asn1);\n    return {\n        kty: 'RSA',\n        n: bigIntegerToUintBase64url(publicKey.n),\n        e: bigIntegerToUintBase64url(publicKey.e)\n    };\n}\n// Convert a JWK key to PKCIX in ASN1 DER format\nexport function jwkToPkix(jwk) {\n    if (jwk.n == null || jwk.e == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const asn1 = forge.pki.publicKeyToAsn1({\n        n: base64urlToBigInteger(jwk.n),\n        e: base64urlToBigInteger(jwk.e)\n    });\n    return uint8ArrayFromString(forge.asn1.toDer(asn1).getBytes(), 'ascii');\n}\n//# sourceMappingURL=rsa-utils.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function generateKey() {\n    return secp.utils.randomPrivateKey();\n}\n/**\n * Hash and sign message with private key\n */\nexport async function hashAndSign(key, msg) {\n    const { digest } = await sha256.digest(msg);\n    try {\n        const signature = secp.sign(digest, key);\n        return signature.toDERRawBytes();\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\n/**\n * Hash message and verify signature with public key\n */\nexport async function hashAndVerify(key, sig, msg) {\n    try {\n        const { digest } = await sha256.digest(msg);\n        return secp.verify(sig, digest, key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\nexport function compressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true);\n    return point;\n}\nexport function decompressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false);\n    return point;\n}\nexport function validatePrivateKey(key) {\n    try {\n        secp.getPublicKey(key, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\nexport function validatePublicKey(key) {\n    try {\n        secp.ProjectivePoint.fromHex(key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY');\n    }\n}\nexport function computePublicKey(privateKey) {\n    try {\n        return secp.getPublicKey(privateKey, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\n//# sourceMappingURL=secp256k1.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { exporter } from './exporter.js';\nimport * as keysProtobuf from './keys.js';\nimport * as crypto from './secp256k1.js';\nexport class Secp256k1PublicKey {\n    _key;\n    constructor(key) {\n        crypto.validatePublicKey(key);\n        this._key = key;\n    }\n    async verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.compressPublicKey(this._key);\n    }\n    get bytes() {\n        return keysProtobuf.PublicKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n}\nexport class Secp256k1PrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey ?? crypto.computePublicKey(key);\n        crypto.validatePrivateKey(this._key);\n        crypto.validatePublicKey(this._publicKey);\n    }\n    async sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Secp256k1PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return keysProtobuf.PrivateKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const { bytes } = await sha256.digest(this.bytes);\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalSecp256k1PrivateKey(bytes) {\n    return new Secp256k1PrivateKey(bytes);\n}\nexport function unmarshalSecp256k1PublicKey(bytes) {\n    return new Secp256k1PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const privateKeyBytes = crypto.generateKey();\n    return new Secp256k1PrivateKey(privateKeyBytes);\n}\n//# sourceMappingURL=secp256k1-class.js.map","import 'node-forge/lib/asn1.js';\nimport 'node-forge/lib/pbe.js';\nimport { CodeError } from '@libp2p/interface/errors';\n// @ts-expect-error types are missing\nimport forge from 'node-forge/lib/forge.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport * as Ed25519 from './ed25519-class.js';\nimport generateEphemeralKeyPair from './ephemeral-keys.js';\nimport { importer } from './importer.js';\nimport { keyStretcher } from './key-stretcher.js';\nimport * as keysPBM from './keys.js';\nimport * as RSA from './rsa-class.js';\nimport * as Secp256k1 from './secp256k1-class.js';\nexport { keyStretcher };\nexport { generateEphemeralKeyPair };\nexport { keysPBM };\nexport const supportedKeys = {\n    rsa: RSA,\n    ed25519: Ed25519,\n    secp256k1: Secp256k1\n};\nfunction unsupportedKey(type) {\n    const supported = Object.keys(supportedKeys).join(' / ');\n    return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE');\n}\nfunction typeToKey(type) {\n    type = type.toLowerCase();\n    if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n        return supportedKeys[type];\n    }\n    throw unsupportedKey(type);\n}\n// Generates a keypair of the given type and bitsize\nexport async function generateKeyPair(type, bits) {\n    return typeToKey(type).generateKeyPair(bits ?? 2048);\n}\n// Generates a keypair of the given type and bitsize\n// seed is a 32 byte uint8array\nexport async function generateKeyPairFromSeed(type, seed, bits) {\n    if (type.toLowerCase() !== 'ed25519') {\n        throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE');\n    }\n    return Ed25519.generateKeyPairFromSeed(seed);\n}\n// Converts a protobuf serialized public key into its\n// representative object\nexport function unmarshalPublicKey(buf) {\n    const decoded = keysPBM.PublicKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPublicKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PublicKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'unknown');\n    }\n}\n// Converts a public key object into a protobuf serialized public key\nexport function marshalPublicKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n// Converts a protobuf serialized private key into its\n// representative object\nexport async function unmarshalPrivateKey(buf) {\n    const decoded = keysPBM.PrivateKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPrivateKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'RSA');\n    }\n}\n// Converts a private key object into a protobuf serialized private key\nexport function marshalPrivateKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n/**\n *\n * @param {string} encryptedKey\n * @param {string} password\n */\nexport async function importKey(encryptedKey, password) {\n    try {\n        const key = await importer(encryptedKey, password);\n        return await unmarshalPrivateKey(key);\n    }\n    catch (_) {\n        // Ignore and try the old pem decrypt\n    }\n    // Only rsa supports pem right now\n    const key = forge.pki.decryptRsaPrivateKey(encryptedKey, password);\n    if (key === null) {\n        throw new CodeError('Cannot read the key, most likely the password is wrong or not a RSA key', 'ERR_CANNOT_DECRYPT_PEM');\n    }\n    let der = forge.asn1.toDer(forge.pki.privateKeyToAsn1(key));\n    der = uint8ArrayFromString(der.getBytes(), 'ascii');\n    return supportedKeys.rsa.unmarshalRsaPrivateKey(der);\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","import { CodeError } from '@libp2p/interface/errors';\nimport { symbol } from '@libp2p/interface/peer-id';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst baseDecoder = Object\n    .values(bases)\n    .map(codec => codec.decoder)\n    // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n    .reduce((acc, curr) => acc.or(curr), bases.identity.decoder);\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36;\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37;\nclass PeerIdImpl {\n    type;\n    multihash;\n    privateKey;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        this.privateKey = init.privateKey;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [symbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.multihash.bytes;\n    }\n    /**\n     * Returns Multiaddr as a JSON string\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id instanceof Uint8Array) {\n            return uint8ArrayEquals(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return peerIdFromString(id).equals(this);\n        }\n        else if (id?.multihash?.bytes != null) {\n            return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nclass RSAPeerIdImpl extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nclass Ed25519PeerIdImpl extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nclass Secp256k1PeerIdImpl extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nexport function createPeerId(init) {\n    if (init.type === 'RSA') {\n        return new RSAPeerIdImpl(init);\n    }\n    if (init.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(init);\n    }\n    if (init.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(init);\n    }\n    throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromPeerId(other) {\n    if (other.type === 'RSA') {\n        return new RSAPeerIdImpl(other);\n    }\n    if (other.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(other);\n    }\n    if (other.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(other);\n    }\n    throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromString(str, decoder) {\n    decoder = decoder ?? baseDecoder;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        const multihash = Digest.decode(base58btc.decode(`z${str}`));\n        if (str.startsWith('12D')) {\n            return new Ed25519PeerIdImpl({ multihash });\n        }\n        else if (str.startsWith('16U')) {\n            return new Secp256k1PeerIdImpl({ multihash });\n        }\n        else {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    return peerIdFromBytes(baseDecoder.decode(str));\n}\nexport function peerIdFromBytes(buf) {\n    try {\n        const multihash = Digest.decode(buf);\n        if (multihash.code === identity.code) {\n            if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n                return new Ed25519PeerIdImpl({ multihash });\n            }\n            else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n                return new Secp256k1PeerIdImpl({ multihash });\n            }\n        }\n        if (multihash.code === sha256.code) {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    catch {\n        return peerIdFromCID(CID.decode(buf));\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\nexport function peerIdFromCID(cid) {\n    if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n        throw new Error('Supplied PeerID CID is invalid');\n    }\n    const multihash = cid.multihash;\n    if (multihash.code === sha256.code) {\n        return new RSAPeerIdImpl({ multihash: cid.multihash });\n    }\n    else if (multihash.code === identity.code) {\n        if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n            return new Ed25519PeerIdImpl({ multihash: cid.multihash });\n        }\n        else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n            return new Secp256k1PeerIdImpl({ multihash: cid.multihash });\n        }\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys(publicKey, privateKey) {\n    if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey });\n}\n//# sourceMappingURL=index.js.map","export const ERR_IPNS_EXPIRED_RECORD = 'ERR_IPNS_EXPIRED_RECORD';\nexport const ERR_UNRECOGNIZED_VALIDITY = 'ERR_UNRECOGNIZED_VALIDITY';\nexport const ERR_SIGNATURE_CREATION = 'ERR_SIGNATURE_CREATION';\nexport const ERR_SIGNATURE_VERIFICATION = 'ERR_SIGNATURE_VERIFICATION';\nexport const ERR_UNRECOGNIZED_FORMAT = 'ERR_UNRECOGNIZED_FORMAT';\nexport const ERR_PEER_ID_FROM_PUBLIC_KEY = 'ERR_PEER_ID_FROM_PUBLIC_KEY';\nexport const ERR_PUBLIC_KEY_FROM_ID = 'ERR_PUBLIC_KEY_FROM_ID';\nexport const ERR_UNDEFINED_PARAMETER = 'ERR_UNDEFINED_PARAMETER';\nexport const ERR_INVALID_RECORD_DATA = 'ERR_INVALID_RECORD_DATA';\nexport const ERR_INVALID_VALUE = 'ERR_INVALID_VALUE';\nexport const ERR_INVALID_EMBEDDED_KEY = 'ERR_INVALID_EMBEDDED_KEY';\nexport const ERR_MISSING_PRIVATE_KEY = 'ERR_MISSING_PRIVATE_KEY';\nexport const ERR_RECORD_TOO_LARGE = 'ERR_RECORD_TOO_LARGE';\n//# sourceMappingURL=errors.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var IpnsEntry;\n(function (IpnsEntry) {\n    let ValidityType;\n    (function (ValidityType) {\n        ValidityType[\"EOL\"] = \"EOL\";\n    })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n    let __ValidityTypeValues;\n    (function (__ValidityTypeValues) {\n        __ValidityTypeValues[__ValidityTypeValues[\"EOL\"] = 0] = \"EOL\";\n    })(__ValidityTypeValues || (__ValidityTypeValues = {}));\n    (function (ValidityType) {\n        ValidityType.codec = () => {\n            return enumeration(__ValidityTypeValues);\n        };\n    })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n    let _codec;\n    IpnsEntry.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.value != null) {\n                    w.uint32(10);\n                    w.bytes(obj.value);\n                }\n                if (obj.signatureV1 != null) {\n                    w.uint32(18);\n                    w.bytes(obj.signatureV1);\n                }\n                if (obj.validityType != null) {\n                    w.uint32(24);\n                    IpnsEntry.ValidityType.codec().encode(obj.validityType, w);\n                }\n                if (obj.validity != null) {\n                    w.uint32(34);\n                    w.bytes(obj.validity);\n                }\n                if (obj.sequence != null) {\n                    w.uint32(40);\n                    w.uint64(obj.sequence);\n                }\n                if (obj.ttl != null) {\n                    w.uint32(48);\n                    w.uint64(obj.ttl);\n                }\n                if (obj.pubKey != null) {\n                    w.uint32(58);\n                    w.bytes(obj.pubKey);\n                }\n                if (obj.signatureV2 != null) {\n                    w.uint32(66);\n                    w.bytes(obj.signatureV2);\n                }\n                if (obj.data != null) {\n                    w.uint32(74);\n                    w.bytes(obj.data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.value = reader.bytes();\n                            break;\n                        case 2:\n                            obj.signatureV1 = reader.bytes();\n                            break;\n                        case 3:\n                            obj.validityType = IpnsEntry.ValidityType.codec().decode(reader);\n                            break;\n                        case 4:\n                            obj.validity = reader.bytes();\n                            break;\n                        case 5:\n                            obj.sequence = reader.uint64();\n                            break;\n                        case 6:\n                            obj.ttl = reader.uint64();\n                            break;\n                        case 7:\n                            obj.pubKey = reader.bytes();\n                            break;\n                        case 8:\n                            obj.signatureV2 = reader.bytes();\n                            break;\n                        case 9:\n                            obj.data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    IpnsEntry.encode = (obj) => {\n        return encodeMessage(obj, IpnsEntry.codec());\n    };\n    IpnsEntry.decode = (buf) => {\n        return decodeMessage(buf, IpnsEntry.codec());\n    };\n})(IpnsEntry || (IpnsEntry = {}));\n//# sourceMappingURL=ipns.js.map","import { unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { isPeerId } from '@libp2p/interface/peer-id';\nimport { logger } from '@libp2p/logger';\nimport { peerIdFromBytes, peerIdFromKeys } from '@libp2p/peer-id';\nimport * as cborg from 'cborg';\nimport errCode from 'err-code';\nimport { base36 } from 'multiformats/bases/base36';\nimport { CID } from 'multiformats/cid';\nimport NanoDate from 'timestamp-nano';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as ERRORS from './errors.js';\nimport { IpnsEntry } from './pb/ipns.js';\nconst log = logger('ipns:utils');\nconst IPNS_PREFIX = uint8ArrayFromString('/ipns/');\nconst LIBP2P_CID_CODEC = 114;\n/**\n * Convert a JavaScript date into an `RFC3339Nano` formatted\n * string\n */\nexport function toRFC3339(time) {\n    const year = time.getUTCFullYear();\n    const month = String(time.getUTCMonth() + 1).padStart(2, '0');\n    const day = String(time.getUTCDate()).padStart(2, '0');\n    const hour = String(time.getUTCHours()).padStart(2, '0');\n    const minute = String(time.getUTCMinutes()).padStart(2, '0');\n    const seconds = String(time.getUTCSeconds()).padStart(2, '0');\n    const milliseconds = time.getUTCMilliseconds();\n    const nanoseconds = milliseconds * 1000 * 1000;\n    return `${year}-${month}-${day}T${hour}:${minute}:${seconds}.${nanoseconds}Z`;\n}\n/**\n * Parses a date string formatted as `RFC3339Nano` into a\n * JavaScript Date object\n */\nexport function parseRFC3339(time) {\n    const rfc3339Matcher = new RegExp(\n    // 2006-01-02T\n    '(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T' +\n        // 15:04:05\n        '(\\\\d{2}):(\\\\d{2}):(\\\\d{2})' +\n        // .999999999Z\n        '\\\\.(\\\\d+)Z');\n    const m = String(time).trim().match(rfc3339Matcher);\n    if (m == null) {\n        throw new Error('Invalid format');\n    }\n    const year = parseInt(m[1], 10);\n    const month = parseInt(m[2], 10) - 1;\n    const date = parseInt(m[3], 10);\n    const hour = parseInt(m[4], 10);\n    const minute = parseInt(m[5], 10);\n    const second = parseInt(m[6], 10);\n    const millisecond = parseInt(m[7].padEnd(6, '0').slice(0, 3), 10);\n    return new Date(Date.UTC(year, month, date, hour, minute, second, millisecond));\n}\n/**\n * Extracts a public key from the passed PeerId, falling\n * back to the pubKey embedded in the ipns record\n */\nexport const extractPublicKey = async (peerId, record) => {\n    if (record == null || peerId == null) {\n        const error = new Error('one or more of the provided parameters are not defined');\n        log.error(error);\n        throw errCode(error, ERRORS.ERR_UNDEFINED_PARAMETER);\n    }\n    let pubKey;\n    if (record.pubKey != null) {\n        try {\n            pubKey = unmarshalPublicKey(record.pubKey);\n        }\n        catch (err) {\n            log.error(err);\n            throw err;\n        }\n        const otherId = await peerIdFromKeys(record.pubKey);\n        if (!otherId.equals(peerId)) {\n            throw errCode(new Error('Embedded public key did not match PeerID'), ERRORS.ERR_INVALID_EMBEDDED_KEY);\n        }\n    }\n    else if (peerId.publicKey != null) {\n        pubKey = unmarshalPublicKey(peerId.publicKey);\n    }\n    if (pubKey != null) {\n        return pubKey;\n    }\n    throw errCode(new Error('no public key is available'), ERRORS.ERR_UNDEFINED_PARAMETER);\n};\n/**\n * Utility for creating the record data for being signed\n */\nexport const ipnsRecordDataForV1Sig = (value, validityType, validity) => {\n    const validityTypeBuffer = uint8ArrayFromString(validityType);\n    return uint8ArrayConcat([value, validity, validityTypeBuffer]);\n};\n/**\n * Utility for creating the record data for being signed\n */\nexport const ipnsRecordDataForV2Sig = (data) => {\n    const entryData = uint8ArrayFromString('ipns-signature:');\n    return uint8ArrayConcat([entryData, data]);\n};\nexport const marshal = (obj) => {\n    if ('signatureV1' in obj) {\n        return IpnsEntry.encode({\n            value: uint8ArrayFromString(obj.value),\n            signatureV1: obj.signatureV1,\n            validityType: obj.validityType,\n            validity: uint8ArrayFromString(obj.validity.toString()),\n            sequence: obj.sequence,\n            ttl: obj.ttl,\n            pubKey: obj.pubKey,\n            signatureV2: obj.signatureV2,\n            data: obj.data\n        });\n    }\n    else {\n        return IpnsEntry.encode({\n            pubKey: obj.pubKey,\n            signatureV2: obj.signatureV2,\n            data: obj.data\n        });\n    }\n};\nexport function unmarshal(buf) {\n    const message = IpnsEntry.decode(buf);\n    // protobufjs returns bigints as numbers\n    if (message.sequence != null) {\n        message.sequence = BigInt(message.sequence);\n    }\n    // protobufjs returns bigints as numbers\n    if (message.ttl != null) {\n        message.ttl = BigInt(message.ttl);\n    }\n    // Check if we have the data field. If we don't, we fail. We've been producing\n    // V1+V2 records for quite a while and we don't support V1-only records during\n    // validation any more\n    if (message.signatureV2 == null || message.data == null) {\n        throw errCode(new Error('missing data or signatureV2'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    const data = parseCborData(message.data);\n    const value = normalizeValue(data.Value);\n    let validity;\n    try {\n        validity = NanoDate.fromDate(parseRFC3339(uint8ArrayToString(data.Validity)));\n    }\n    catch (e) {\n        log.error('unrecognized validity format (not an rfc3339 format)');\n        throw errCode(new Error('unrecognized validity format (not an rfc3339 format)'), ERRORS.ERR_UNRECOGNIZED_FORMAT);\n    }\n    if (message.value != null && message.signatureV1 != null) {\n        // V1+V2\n        validateCborDataMatchesPbData(message);\n        return {\n            value,\n            validityType: IpnsEntry.ValidityType.EOL,\n            validity,\n            sequence: data.Sequence,\n            ttl: data.TTL,\n            pubKey: message.pubKey,\n            signatureV1: message.signatureV1,\n            signatureV2: message.signatureV2,\n            data: message.data\n        };\n    }\n    else if (message.signatureV2 != null) {\n        // V2-only\n        return {\n            value,\n            validityType: IpnsEntry.ValidityType.EOL,\n            validity,\n            sequence: data.Sequence,\n            ttl: data.TTL,\n            pubKey: message.pubKey,\n            signatureV2: message.signatureV2,\n            data: message.data\n        };\n    }\n    else {\n        throw new Error('invalid record: does not include signatureV1 or signatureV2');\n    }\n}\nexport const peerIdToRoutingKey = (peerId) => {\n    return uint8ArrayConcat([\n        IPNS_PREFIX,\n        peerId.toBytes()\n    ]);\n};\nexport const peerIdFromRoutingKey = (key) => {\n    return peerIdFromBytes(key.slice(IPNS_PREFIX.length));\n};\nexport const createCborData = (value, validity, validityType, sequence, ttl) => {\n    let ValidityType;\n    if (validityType === IpnsEntry.ValidityType.EOL) {\n        ValidityType = 0;\n    }\n    else {\n        throw errCode(new Error('Unknown validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    const data = {\n        Value: value,\n        Validity: validity,\n        ValidityType,\n        Sequence: sequence,\n        TTL: ttl\n    };\n    return cborg.encode(data);\n};\nexport const parseCborData = (buf) => {\n    const data = cborg.decode(buf);\n    if (data.ValidityType === 0) {\n        data.ValidityType = IpnsEntry.ValidityType.EOL;\n    }\n    else {\n        throw errCode(new Error('Unknown validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    if (Number.isInteger(data.Sequence)) {\n        // sequence must be a BigInt, but DAG-CBOR doesn't preserve this for Numbers within the safe-integer range\n        data.Sequence = BigInt(data.Sequence);\n    }\n    if (Number.isInteger(data.TTL)) {\n        // ttl must be a BigInt, but DAG-CBOR doesn't preserve this for Numbers within the safe-integer range\n        data.TTL = BigInt(data.TTL);\n    }\n    return data;\n};\n/**\n * Normalizes the given record value. It ensures it is a PeerID, a CID or a\n * string starting with '/'. PeerIDs become `/ipns/${cidV1Libp2pKey}`,\n * CIDs become `/ipfs/${cidAsV1}`.\n */\nexport const normalizeValue = (value) => {\n    if (value != null) {\n        // if we have a PeerId, turn it into an ipns path\n        if (isPeerId(value)) {\n            return `/ipns/${value.toCID().toString(base36)}`;\n        }\n        // if the value is bytes, stringify it and see if we have a path\n        if (value instanceof Uint8Array) {\n            const string = uint8ArrayToString(value);\n            if (string.startsWith('/')) {\n                value = string;\n            }\n        }\n        // if we have a path, check it is a valid path\n        const string = value.toString().trim();\n        if (string.startsWith('/') && string.length > 1) {\n            return string;\n        }\n        // if we have a CID, turn it into an ipfs path\n        const cid = CID.asCID(value);\n        if (cid != null) {\n            // PeerID encoded as a CID\n            if (cid.code === LIBP2P_CID_CODEC) {\n                return `/ipns/${cid.toString(base36)}`;\n            }\n            return `/ipfs/${cid.toV1().toString()}`;\n        }\n        // try parsing what we have as CID bytes or a CID string\n        try {\n            if (value instanceof Uint8Array) {\n                return `/ipfs/${CID.decode(value).toV1().toString()}`;\n            }\n            return `/ipfs/${CID.parse(string).toV1().toString()}`;\n        }\n        catch {\n            // fall through\n        }\n    }\n    throw errCode(new Error('Value must be a valid content path starting with /'), ERRORS.ERR_INVALID_VALUE);\n};\nconst validateCborDataMatchesPbData = (entry) => {\n    if (entry.data == null) {\n        throw errCode(new Error('Record data is missing'), ERRORS.ERR_INVALID_RECORD_DATA);\n    }\n    const data = parseCborData(entry.data);\n    if (!uint8ArrayEquals(data.Value, entry.value ?? new Uint8Array(0))) {\n        throw errCode(new Error('Field \"value\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (!uint8ArrayEquals(data.Validity, entry.validity ?? new Uint8Array(0))) {\n        throw errCode(new Error('Field \"validity\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.ValidityType !== entry.validityType) {\n        throw errCode(new Error('Field \"validityType\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.Sequence !== entry.sequence) {\n        throw errCode(new Error('Field \"sequence\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.TTL !== entry.ttl) {\n        throw errCode(new Error('Field \"ttl\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n};\n//# sourceMappingURL=utils.js.map","import { unmarshal } from './utils.js';\nexport function ipnsSelector(key, data) {\n    const entries = data.map((buf, index) => ({\n        record: unmarshal(buf),\n        index\n    }));\n    entries.sort((a, b) => {\n        // Before we'd sort based on the signature version. Unmarshal now fails if\n        // a record does not have SignatureV2, so that is no longer needed. V1-only\n        // records haven't been issues in a long time.\n        const aSeq = a.record.sequence;\n        const bSeq = b.record.sequence;\n        // choose later sequence number\n        if (aSeq > bSeq) {\n            return -1;\n        }\n        else if (aSeq < bSeq) {\n            return 1;\n        }\n        // choose longer lived record if sequence numbers the same\n        const recordAValidityDate = a.record.validity.toDate();\n        const recordBValidityDate = b.record.validity.toDate();\n        if (recordAValidityDate.getTime() > recordBValidityDate.getTime()) {\n            return -1;\n        }\n        if (recordAValidityDate.getTime() < recordBValidityDate.getTime()) {\n            return 1;\n        }\n        return 0;\n    });\n    return entries[0].index;\n}\n//# sourceMappingURL=selector.js.map","import { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport * as ERRORS from './errors.js';\nimport { IpnsEntry } from './pb/ipns.js';\nimport { extractPublicKey, ipnsRecordDataForV2Sig, unmarshal, peerIdFromRoutingKey } from './utils.js';\nconst log = logger('ipns:validator');\n/**\n * Limit valid IPNS record sizes to 10kb\n */\nconst MAX_RECORD_SIZE = 1024 * 10;\n/**\n * Validates the given IPNS Record against the given public key. We need a \"raw\"\n * record in order to be able to access to all of its fields.\n */\nexport const validate = async (publicKey, buf) => {\n    // unmarshal ensures that (1) SignatureV2 and Data are present, (2) that ValidityType\n    // and Validity are of valid types and have a value, (3) that CBOR data matches protobuf\n    // if it's a V1+V2 record.\n    const record = unmarshal(buf);\n    // Validate Signature V2\n    let isValid;\n    try {\n        const dataForSignature = ipnsRecordDataForV2Sig(record.data);\n        isValid = await publicKey.verify(dataForSignature, record.signatureV2);\n    }\n    catch (err) {\n        isValid = false;\n    }\n    if (!isValid) {\n        log.error('record signature verification failed');\n        throw errCode(new Error('record signature verification failed'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    // Validate according to the validity type\n    if (record.validityType === IpnsEntry.ValidityType.EOL) {\n        if (record.validity.toDate().getTime() < Date.now()) {\n            log.error('record has expired');\n            throw errCode(new Error('record has expired'), ERRORS.ERR_IPNS_EXPIRED_RECORD);\n        }\n    }\n    else if (record.validityType != null) {\n        log.error('unrecognized validity type');\n        throw errCode(new Error('unrecognized validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    log('ipns record for %b is valid', record.value);\n};\nexport async function ipnsValidator(key, marshalledData) {\n    if (marshalledData.byteLength > MAX_RECORD_SIZE) {\n        throw errCode(new Error('record too large'), ERRORS.ERR_RECORD_TOO_LARGE);\n    }\n    const peerId = peerIdFromRoutingKey(key);\n    const receivedRecord = unmarshal(marshalledData);\n    // extract public key\n    const pubKey = await extractPublicKey(peerId, receivedRecord);\n    // Record validation\n    await validate(pubKey, marshalledData);\n}\n//# sourceMappingURL=validator.js.map","// this list comes from https://github.com/ipfs/kubo/blob/da28fbc65a2e0f1ce59f9923823326ae2bc4f713/config/bootstrap_peers.go#L17\nexport const bootstrapConfig = {\n    list: [\n        '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n        '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n        '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n        '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n        '/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ'\n    ]\n};\n//# sourceMappingURL=bootstrappers.js.map","import { createLibp2p as create } from 'libp2p';\nimport { libp2pDefaults } from './libp2p-defaults.js';\nexport async function createLibp2p(datastore, options) {\n    const defaults = libp2pDefaults();\n    options = options ?? {};\n    return create({\n        datastore,\n        ...defaults,\n        ...options,\n        start: false\n    });\n}\n//# sourceMappingURL=libp2p.js.map","import { gossipsub } from '@chainsafe/libp2p-gossipsub';\nimport { noise } from '@chainsafe/libp2p-noise';\nimport { yamux } from '@chainsafe/libp2p-yamux';\nimport { bootstrap } from '@libp2p/bootstrap';\nimport { ipniContentRouting } from '@libp2p/ipni-content-routing';\nimport { kadDHT } from '@libp2p/kad-dht';\nimport { mplex } from '@libp2p/mplex';\nimport { webRTC, webRTCDirect } from '@libp2p/webrtc';\nimport { webSockets } from '@libp2p/websockets';\nimport { webTransport } from '@libp2p/webtransport';\nimport { ipnsSelector } from 'ipns/selector';\nimport { ipnsValidator } from 'ipns/validator';\nimport { autoNATService } from 'libp2p/autonat';\nimport { circuitRelayTransport } from 'libp2p/circuit-relay';\nimport { dcutrService } from 'libp2p/dcutr';\nimport { identifyService } from 'libp2p/identify';\nimport { pingService } from 'libp2p/ping';\nimport { bootstrapConfig } from './bootstrappers.js';\nexport function libp2pDefaults() {\n    return {\n        addresses: {\n            listen: [\n                '/webrtc'\n            ]\n        },\n        transports: [\n            circuitRelayTransport({\n                discoverRelays: 1\n            }),\n            webRTC(),\n            webRTCDirect(),\n            webTransport(),\n            webSockets()\n        ],\n        connectionEncryption: [\n            noise()\n        ],\n        streamMuxers: [\n            yamux(),\n            mplex()\n        ],\n        peerDiscovery: [\n            bootstrap(bootstrapConfig)\n        ],\n        contentRouters: [\n            ipniContentRouting('https://cid.contact')\n        ],\n        services: {\n            identify: identifyService(),\n            autoNAT: autoNATService(),\n            pubsub: gossipsub(),\n            dcutr: dcutrService(),\n            dht: kadDHT({\n                clientMode: true,\n                validators: {\n                    ipns: ipnsValidator\n                },\n                selectors: {\n                    ipns: ipnsSelector\n                }\n            }),\n            ping: pingService()\n        }\n    };\n}\n//# sourceMappingURL=libp2p-defaults.browser.js.map","export const version = '2.0.3';\nexport const name = 'helia';\n//# sourceMappingURL=version.js.map","/**\n * @packageDocumentation\n *\n * Create a Helia node.\n *\n * @example\n *\n * ```typescript\n * import { MemoryDatastore } from 'datastore-core'\n * import { MemoryBlockstore } from 'blockstore-core'\n * import { createHelia } from 'helia'\n * import { unixfs } from '@helia/unixfs'\n * import { CID } from 'multiformats/cid'\n *\n * const node = await createHelia({\n *   blockstore: new MemoryBlockstore(),\n *   datastore: new MemoryDatastore()\n * })\n * const fs = unixfs(node)\n * fs.cat(CID.parse('bafyFoo'))\n * ```\n */\nimport { logger } from '@libp2p/logger';\nimport { MemoryBlockstore } from 'blockstore-core';\nimport { MemoryDatastore } from 'datastore-core';\nimport { HeliaImpl } from './helia.js';\nimport { createLibp2p } from './utils/libp2p.js';\nimport { name, version } from './version.js';\n// re-export interface types so people don't have to depend on @helia/interface\n// if they don't want to\nexport * from '@helia/interface';\nexport * from '@helia/interface/blocks';\nexport * from '@helia/interface/pins';\nconst log = logger('helia');\nexport async function createHelia(init = {}) {\n    const datastore = init.datastore ?? new MemoryDatastore();\n    const blockstore = init.blockstore ?? new MemoryBlockstore();\n    let libp2p;\n    if (isLibp2p(init.libp2p)) {\n        libp2p = init.libp2p;\n    }\n    else {\n        libp2p = await createLibp2p(datastore, init.libp2p);\n    }\n    const helia = new HeliaImpl({\n        ...init,\n        datastore,\n        blockstore,\n        libp2p\n    });\n    if (init.start !== false) {\n        await helia.start();\n    }\n    // add helia to agent version\n    addHeliaToAgentVersion(helia);\n    return helia;\n}\nfunction isLibp2p(obj) {\n    if (obj == null) {\n        return false;\n    }\n    // a non-exhaustive list of methods found on the libp2p object\n    const funcs = ['dial', 'dialProtocol', 'hangUp', 'handle', 'unhandle', 'getMultiaddrs', 'getProtocols'];\n    // if these are all functions it's probably a libp2p object\n    return funcs.every(m => typeof obj[m] === 'function');\n}\nfunction addHeliaToAgentVersion(helia) {\n    // add helia to agent version\n    try {\n        const existingAgentVersion = helia.libp2p.services.identify.host.agentVersion;\n        if (existingAgentVersion.match(/js-libp2p\\/\\d+\\.\\d+\\.\\d+\\sUserAgent=/) == null) {\n            // the user changed the agent version\n            return;\n        }\n        helia.libp2p.services.identify.host.agentVersion = `${name}/${version} ${helia.libp2p.services.identify.host.agentVersion}`;\n    }\n    catch (err) {\n        log.error('could not add Helia to agent version', err);\n    }\n}\n//# sourceMappingURL=index.js.map","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n"],"names":["ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","Symbol","CHUNKSIZE","getStringImpl","buffer","ptr","U32","Uint32Array","U16","Uint16Array","length","offset","String","fromCharCode","apply","subarray","parts","last","size","push","join","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","file","line","colm","Error","trace","n","console","log","Array","prototype","slice","call","arguments","Math","Date","postInstantiate","instance","rawExports","exports","table","alloc","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","arr","align","buf","getTypedArray","Type","getTypedArrayView","bufPtr","__allocString","str","i","p","charCodeAt","__getString","__allocArray","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","bind","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32Array","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","o","Response","async","instantiate","source","instantiateStreaming","WebAssembly","Module","compile","arrayBuffer","module","Object","create","setArgumentsLength","value","internalName","hasOwnProperty","elem","split","curr","part","shift","name","hash","indexOf","className","substring","classElem","ctor","args","wrap","constructor","valueOf","this","thisValue","writable","getOwnPropertyNames","forEach","defineProperty","getOwnPropertyDescriptor","test","getter","replace","setter","get","enumerable","original","instantiateSync","Instance","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","utf8","indexOutOfRange","reader","writeLength","RangeError","pos","create_array","isArray","Buffer","isBuffer","readLongVarint","bits","lo","hi","readFixed32_end","end","readFixed64","_slice","uint32","int32","sint32","bool","fixed32","sfixed32","readFloatLE","double","readDoubleLE","bytes","start","nativeBuffer","string","read","skip","skipType","wireType","BufferReader_","fn","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","toString","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","EventEmitter","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","self","asPromise","finish","err","response","emit","setTimeout","endedByRPC","off","zero","toNumber","zzEncode","zeroHash","fromNumber","sign","from","isString","parseInt","fromString","low","high","unsigned","toLong","fromHash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","keys","undefined","newError","CustomError","message","properties","captureStackTrace","stack","configurable","base64","inquire","pool","isNode","g","process","versions","node","global","window","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","floor","isObject","isset","isSet","obj","prop","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","charAt","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","Op","val","next","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeFloatLE","writeDoubleLE","writeBytes","decode","write","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","bip39_1","hmac_1","keccak_1","libsodium_1","random_1","ripemd_1","secp256k1_1","secp256k1signature_1","sha_1","slip10_1","ascii_1","toAscii","base64_1","fromBase64","toBase64","bech32_1","hex_1","rfc3339_1","utf8_1","Uint64","Uint53","Uint32","Int53","Decimal","decimal_1","integers_1","__createBinding","m","k","k2","desc","__esModule","__exportStar","OfflineDappWallet","SigningCyberClient","CyberClient","cyberclient_1","signingcyberclient_1","fromCallback","ModuleError","getCallback","getOptions","kPromise","kStatus","kOperations","kFinishClose","kCloseCallbacks","AbstractChainedBatch","db","attachResource","nextTick","put","key","options","code","_checkKey","_checkValue","sublevel","keyEncoding","valueEncoding","keyFormat","format","mappedKey","prefixKey","encode","mappedValue","_put","type","del","_del","clear","_clear","close","_write","_close","detachResource","callbacks","cb","kCallback","kWorking","kHandleOne","kHandleMany","kAutoClose","kFinishWork","kReturnMany","kClosing","kHandleClose","kClosed","kKeyEncoding","kValueEncoding","kAbortOnClose","kLegacy","kKeys","kValues","kLimit","kCount","emptyOptions","warnedEnd","CommonIterator","legacy","limit","Infinity","abortOnClose","count","promise","Promise","resolve","reject","_next","nextv","_nextv","acc","onnext","all","_all","onnextv","items","seek","target","mapped","_seek","asyncIterator","item","AbstractIterator","super","IteratorDecodeError","entries","entry","warn","subject","cause","AbstractKeyIterator","AbstractValueIterator","supports","Transcoder","DefaultKeyIterator","DefaultValueIterator","DeferredIterator","DeferredKeyIterator","DeferredValueIterator","DefaultChainedBatch","rangeOptions","kLanded","kResources","kCloseResources","kUndefer","kDeferOpen","kOptions","kDefaultOptions","kTranscoder","AbstractLevel","manifest","passive","forward","Set","status","promises","getMany","deferredOpen","snapshots","permanence","keyIterator","valueIterator","iteratorNextv","iteratorAll","encodings","events","assign","opening","open","closing","closed","batch","formats","commonName","empty","createIfMissing","errorIfExists","maybeOpened","once","_open","maybeClosed","cancel","pending","sync","resource","defer","maybeError","valueFormat","_get","notFound","mappedKeys","_getMany","fill","operations","_chainedBatch","ke","ve","op","valueErr","_batch","_sublevel","AbstractSublevel","defaults","iterator","_iterator","_keys","_values","add","delete","filter","kUnfix","kIterator","AbstractSublevelIterator","unfix","AbstractSublevelKeyIterator","AbstractSublevelValueIterator","Iterator","kPrefix","kUpperBound","kPrefixRange","kParent","textEncoder","TextEncoder","separator","static","trim","reserved","parent","every","x","mergeManifests","prefix","upperBound","MultiFormat","Unfixer","result","concat","range","gte","gt","lte","lt","additionalMethods","supportsEncoding","cache","Map","prefixLength","char","def","kEncoded","mapEntry","map","kNut","kFactory","queueMicrotask","has","reverse","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","arg","encodingOrOffset","isEncoding","actual","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","b","checked","numberIsNaN","data","fromObject","toPrimitive","assertSize","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","utf16leToBytes","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","error","poolSize","allocUnsafeSlow","_isBuffer","compare","a","y","list","swap16","swap32","swap64","toLocaleString","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatBE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatBE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","abs","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","alphabet","i16","BufferBigIntNotDefined","anySignal","signals","controller","globalThis","AbortController","onAbort","signal","removeEventListener","addEventListener","aborted","ALPHABET","ALPHABET_MAP","z","polymodStep","pre","prefixChk","chk","v","__decode","LIMIT","lowered","uppered","toUpperCase","wordChars","words","convert","inBits","outBits","pad","maxV","decodeUnsafe","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","isNumeric","mathceil","ceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","s","r","xc","yc","l","intCheck","isOdd","toExponential","toFixedPoint","zs","clone","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","BigNumber","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","search","round","DEBUG","rm","c0","ne","maxOrMin","normalise","pop","sd","d","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","random","dp","rand","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","mod","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","toStringTag","for","parallel","deserialize","createKeyRange","DEFAULT_PREFIX","kIDB","kNamePrefix","kLocation","kVersion","kStore","kOnComplete","BrowserLevel","location","_","version","namePrefix","req","indexedDB","onerror","onsuccess","onupgradeneeded","ev","objectStoreNames","contains","createObjectStore","mode","transaction","objectStore","onabort","oncomplete","store","tasks","stopPropagation","index","loop","commit","keyRange","destroy","deleteDatabase","kCache","kFinished","kCurrentOptions","kPosition","kFirst","maybeCommit","openKeyCursor","cursor","continue","complete","getAllKeys","getAll","direction","lower","upper","lowerExclusive","upperExclusive","IDBKeyRange","bound","lowerBound","parse","formatThousandsRegExp","formatDecimalsRegExp","kb","mb","gb","tb","pb","parseRegExp","mag","thousandsSeparator","unitSeparator","fixedDecimals","unit","floatValue","results","exec","parseFloat","symbol","fromPromise","then","catch","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","port","createProxy","serialized","isError","ep","allowedOrigins","origin","allowedOrigin","isAllowedOrigin","path","argumentList","fromWireValue","returnValue","reduce","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","isMessagePort","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","_thisArg","rawArgumentList","processArguments","construct","register","registerProxy","processed","handler","serializedValue","MsgSetSendEnabledResponse","MsgSetSendEnabled","MsgUpdateParamsResponse","MsgUpdateParams","MsgMultiSendResponse","MsgMultiSend","MsgSendResponse","MsgSend","coin_1","bank_1","binary_1","helpers_1","createBaseMsgUpdateParams","authority","params","Params","fromPartial","typeUrl","BinaryWriter","fromAddress","toAddress","amount","Coin","BinaryReader","tag","fromJSON","object","inputs","Input","outputs","Output","sendEnabled","SendEnabled","useDefaultFor","Tip","Fee","ModeInfo_Multi","ModeInfo_Single","ModeInfo","SignerInfo","AuthInfo","TxBody","SignDocDirectAux","Tx","any_1","signing_1","multisig_1","createBaseTxRaw","bodyBytes","authInfoBytes","signatures","createBaseSignDoc","chainId","accountNumber","createBaseSignDocDirectAux","publicKey","sequence","tip","createBaseTxBody","messages","memo","timeoutHeight","extensionOptions","nonCriticalExtensionOptions","createBaseSignerInfo","modeInfo","createBaseFee","gasLimit","payer","granter","createBaseAuxSignerData","address","signDoc","sig","body","authInfo","bytesFromBase64","base64FromBytes","Any","signerInfos","fee","single","multi","signModeFromJSON","signModeToJSON","bitarray","CompactBitArray","modeInfos","tipper","__self__","F","fetch","DOMException","support","searchParams","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","done","Headers","headers","append","header","consumed","bodyUsed","fileReaderReady","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","text","readAsText","chars","readArrayBufferAsText","JSON","oldValue","thisArg","methods","Request","upcased","url","credentials","referrer","form","decodeURIComponent","bodyInit","ok","statusText","redirectStatuses","redirect","init","xhr","XMLHttpRequest","abortXhr","rawHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","ponyfill","ctx","wasm","heap","getObject","idx","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","cachedTextEncoder","encodeString","encodeInto","written","passStringToWasm0","malloc","realloc","mem","isLikeNone","cachedInt32Memory0","getInt32Memory0","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","heap_next","addHeapObject","takeObject","dropObject","cachedFloat64Memory0","cachedBigInt64Memory0","debugString","description","debug","builtInMatches","stringify","__wbg_adapter_46","arg0","arg1","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf4bfcc5d39f18e99","scripts","compiler_params","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","handleError","f","__wbindgen_exn_store","__wbg_get_imports","wbg","__wbg_log_d6d3928c15a332b3","__wbindgen_is_undefined","__wbindgen_string_get","__wbindgen_error_new","__wbindgen_jsval_eq","__wbindgen_object_drop_ref","__wbindgen_boolean_get","__wbindgen_is_bigint","__wbindgen_number_get","__wbindgen_bigint_from_i64","__wbindgen_is_object","__wbindgen_in","__wbindgen_bigint_from_u64","asUintN","__wbg_jsCyberSearch_7e27339aa5f7a989","__wbg_jsCyberLink_6b02b912deb23510","arg3","__wbg_jsGetPassportByNickname_fbf1750b6fa955a5","__wbg_jsGetIpfsTextContent_4bffb8096b9cedb0","__wbg_jsAddContenToIpfs_128045b04a01a2f2","__wbg_jsEvalScriptFromIpfs_34870c7360a3ac3c","arg4","__wbg_jsPromptToOpenAI_269d5645cd0e4b0d","__wbg_jsSearchByEmbedding_c53029ec2c16d0e3","__wbg_jsCyberLinksFrom_e4e1629f31736c22","__wbg_jsCyberLinksTo_61c41f322fe1b63c","__wbindgen_object_clone_ref","__wbindgen_string_new","__wbg_fetch_57429b87be3dcc33","__wbg_randomFillSync_e950366c42764a07","randomFillSync","__wbg_getRandomValues_3774744e221a22ad","__wbg_crypto_70a96de3b6b73dac","__wbg_process_dd1577445152112e","__wbg_versions_58036bec3add9e6f","__wbg_node_6a9d28205ed5b0d8","__wbindgen_is_string","__wbg_require_f05d779769764e82","require","__wbg_msCrypto_adbc770ec9eca9c7","msCrypto","__wbindgen_jsval_loose_eq","__wbindgen_cb_drop","cnt","__wbg_signal_bcb55e86063f8860","__wbg_new_668956ac1089f8cf","__wbg_abort_de75e4ab5136bcee","__wbg_new_143b41b4342650bb","__wbg_append_fac652007989b765","__wbg_newwithstrandinit_a4cd16dfaafcf625","__wbg_instanceof_Response_7ade9a5a066d1a55","__wbg_url_59cb32ef6a837521","__wbg_status_d2b2d0889f7e970f","__wbg_headers_2de03c88f895093b","__wbg_arrayBuffer_2693673868da65b7","__wbg_text_65fa1887e8f7b4ac","__wbg_fetch_621998933558ad27","__wbindgen_is_function","__wbg_self_742dd6eab3e9211e","__wbg_window_c409e731db53a0e2","__wbg_globalThis_b70c095388441f2d","__wbg_global_1c72617491ed7194","__wbg_newnoargs_c9e6043b8ad84109","Function","__wbg_next_f4bc0e96ea67da68","__wbg_value_2f4ef2036bfad28e","__wbg_iterator_7c7e58f62eb84700","__wbg_new_2b6fea4ea03b1b95","__wbg_get_7303ed2ef026b2f5","__wbg_isArray_04e59fb73f78ab5b","__wbg_length_820c786973abdd8a","__wbg_instanceof_ArrayBuffer_ef2632aa0d4bfff8","__wbg_call_557a2f2deacc4912","__wbg_call_587b30eea3e09332","__wbg_next_ec061e48a0e72a96","__wbg_done_b6abb27d42b63867","__wbg_isSafeInteger_2088b01008075470","isSafeInteger","__wbg_entries_13e011453776468f","__wbg_get_f53c921291c381bd","Reflect","__wbg_has_40b8c976775c8ead","__wbg_set_07da13cc24b69217","__wbg_buffer_55ba7a6b1b92e2ac","__wbg_parse_76a8a18ca3f8730b","__wbg_stringify_d06ad2addc54d51e","__wbg_new_2b55e405e4af4986","state0","wasm_bindgen__convert__closures__invoke2_mut__ha6faf1932adab3a4","__wbg_adapter_156","__wbg_resolve_ae38ad63c43ff98b","__wbg_then_8df675b8bb5d5e3c","__wbg_then_835b073a479138e5","__wbg_newwithbyteoffsetandlength_88d1d8be5df94b9b","__wbg_new_09938a7d020f049b","__wbg_instanceof_Uint8Array_1349640af2da2e88","__wbg_newwithlength_89eeca401d8918c2","__wbg_subarray_d82be056deb4ad27","__wbg_length_0aab7ffd65ad19ed","__wbg_set_3698e3ca519b3c3c","__wbindgen_bigint_get_as_i64","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbindgen_closure_wrapper3525","dtor","state","real","__wbindgen_export_2","makeMutClosure","__wbg_finalize_init","__wbg_init","__wbindgen_wasm_module","URL","__wbg_load","token","timezone","timezoneClip","dateFormat","date","utc","gmt","maskSlice","masks","D","H","M","L","getTimezoneOffset","W","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","getWeek","N","dow","getDayOfWeek","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","timeNames","tt","T","TT","Z","match","S","w","plural","ms","msAbs","isPlural","long","fmtLong","fmtShort","formatArgs","useColors","namespace","humanize","diff","color","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","$1","localStorage","localstorage","warned","colors","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","prev","coerce","unshift","formatter","selectColor","extend","delimiter","newDebug","toNamespace","regexp","default","disable","names","skips","enable","createAbortError","createDelay","clearTimeout","defaultClear","willResolve","timeoutId","settle","rejectFn","signalListener","delayPromise","createWithTimers","clearAndSet","delay","randomInteger","Denque","_capacity","capacity","_head","_tail","_fromArray","_capacityMask","_list","peekAt","peek","peekFront","peekBack","_growArray","_shrinkArray","removeOne","remove","removed","del_count","toArray","arg_len","arguments_index","leng","isEmpty","_copyArray","_nextPowerOf2","fullCopy","dest","newList","num","nextPow2","__spreadArray","to","pack","ar","BrowserInfo","os","NodeInfo","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","parseUserAgent","product","matchUserAgent","ua","matched","_a","browser","regex","uaMatch","matchedRule","versionParts","output","ii","createVersionParts","detectOS","searchBotMatch","props","ErrClass","getPrototypeOf","event_iterator_1","EventIterator","EventQueue","pullQueue","pushQueue","eventHandlers","isPaused","isStopped","resolution","placeholder","highWaterMark","highWater","stop","fail","rejection","removeCallback","lowWaterMark","lowWater","return","listen","queue","on","event","ReflectOwnKeys","R","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","NumberIsNaN","emitter","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","wrapListener","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","removeAllListeners","rawListeners","eventNames","_ref","uri","defaultIsExtractableFile","extractFiles","isExtractableFile","files","addFile","paths","storedPaths","FileList","child","ReactNativeFile","File","hwm","top","btm","FixedFIFO","_cache","update","Events","EE","evt","clearEvent","__proto__","handlers","ee","a1","a2","a3","a4","a5","prefixed","RateLimiterRedis","RateLimiterMongo","RateLimiterMySQL","RateLimiterPostgres","RateLimiterClusterMaster","RateLimiterClusterMasterPM2","RateLimiterCluster","RateLimiterMemory","RateLimiterMemcache","RLWrapperBlackAndWhite","RateLimiterUnion","RateLimiterQueue","BurstyRateLimiter","RateLimiterRes","rateLimiter","burstLimiter","_rateLimiter","_burstLimiter","_combineRes","rlRes","blRes","remainingPoints","msBeforeNext","consumedPoints","isFirstInDuration","consume","pointsToConsume","rlRej","blRej","points","opts","limiter","blackList","whiteList","isBlackListed","isWhiteListed","runActionAnyway","_limiter","_runActionAnyway","_blackList","_isBlackListed","func","_whiteList","_isWhiteListed","isBlackListedSomewhere","isWhiteListedSomewhere","getBlackRes","getWhiteRes","rejectBlack","resolveBlack","resolveWhite","block","secDuration","penalty","reward","duration","blockDuration","execEvenly","execEvenlyMinDelayMs","keyPrefix","_points","_duration","msDuration","_blockDuration","msBlockDuration","_execEvenly","_execEvenlyMinDelayMs","_keyPrefix","_getKeySecDuration","customDuration","getKey","parseKey","rlKey","cluster","RateLimiterAbstract","channel","masterInstance","masterSendToWorker","worker","promiseId","workerWaitInit","payload","_initiated","_promises","workerSendToMaster","masterProcessMsg","_rateLimiters","rejRes","workerProcessMsg","getOpts","savePromise","hrtime","timeoutMs","pm2","launchBus","pm2Bus","packet","raw","sendDataToProcessId","pm_id","topic","sendErr","msgData","pm2Message","_timeoutMs","RateLimiterStoreAbstract","client","storeClient","_getRateLimiterRes","changedPoints","_upsert","forceExpire","nowMs","now","incr","errAddKey","createdNew","attemptNumber","nextOptions","resUpsert","errUpsert","errGetExpire","resGetExpireMs","expireMs","_delete","errDelExpire","MemoryStorage","_memoryStorage","incrby","initPoints","getDriverVersion","_client","topology","metadata","driver","_v","major","feature","patch","dbName","tableName","indexKeyPrefix","mongo","conn","_initCollection","_driverVersion","_dbName","getDbName","_tableName","_indexKeyPrefix","collection","createIndex","expire","expireAfterSeconds","unique","_collection","doc","getTime","docAttrs","attrs","where","upsertData","$set","$or","$gt","$eq","$setOnInsert","$inc","upsertOptions","upsert","returnDocument","returnOriginal","findOneAndUpdate","replaceWhere","$lte","replaceTo","errReplace","findOne","deleteOne","deletedCount","clientType","storeType","clearExpiredByTimeout","tableCreated","_clearExpiredHourAgo","_createDbAndTable","clearExpired","_getConnection","query","_releaseConnection","_clearExpiredTimeoutId","unref","getConnection","errConn","connectionManager","acquireConnection","release","releaseConnection","errDb","_getCreateTableStmt","_clientType","_tableCreated","_clearExpiredByTimeout","row","_upsertTransaction","errBegin","rollback","dateNow","newExpire","errSelect","affectedRows","_createTable","_query","master","constructorName","rows","queryObj","expireQ","rowCount","RateLimiterQueueError","MAX_QUEUE_SIZE","KEY_DEFAULT","limiterFlexible","maxQueueSize","_queueLimiters","RateLimiterQueueInternal","_limiterFlexible","_maxQueueSize","getTokensRemaining","removeTokens","tokens","_key","_waitTimeout","_queue","_this","_queueRequest","rej","_processFIFO","incrTtlLuaScript","_rejectIfRedisNotReady","rejectIfRedisNotReady","useRedisPackage","useRedis3AndLowerPackage","defineCommand","numberOfKeys","lua","_isRedisReady","isReady","resTtlMs","EX","pTTL","pttl","incrCallback","rlflxIncr","eval","incrBy","_msBeforeNext","_remainingPoints","_consumedPoints","_isFirstInDuration","_getDecoratedProperties","BlockedKeys","inMemoryBlockOnConsumed","inMemoryBlockDuration","insuranceLimiter","_inMemoryBlockedKeys","_afterConsume","storeResult","addMs","blockPromise","_block","msInMemoryBlockDuration","_handleError","funcName","getInMemoryBlockMsBeforeExpire","msBeforeExpire","_inMemoryBlockOnConsumed","_inMemoryBlockDuration","_insuranceLimiter","inMemoryBlockMsBeforeExpire","deleteInMemoryBlockedAll","limiters","_limiters","resObj","_addedKeysAmount","collectExpired","sec","Record","_storage","durationSec","msBeforeExpires","expiresAt","durationMs","_value","_expiresAt","_timeoutId","extra","$protobuf","$Reader","$Writer","$util","$root","RPC","subscriptions","ks","$oneOfFields","control","SubOpts","Message","ControlMessage","toObject","arrays","oneofs","_control","subscribe","_subscribe","_topic","seqno","signature","_from","_data","_seqno","_signature","ihave","iwant","graft","prune","ControlIHave","ControlIWant","ControlGraft","ControlPrune","messageIDs","topicID","_topicID","peers","backoff","PeerInfo","fromValue","_backoff","peerID","signedPeerRecord","_peerID","_signedPeerRecord","canUseWeakMap","HermesInternal","canUseWeakSet","WeakSet","canUseSymbol","canUseAsyncIteratorSymbol","createElement","maybe","thunk","isIPv4","isIPv6","isIP","MAX_IPV6_LENGTH","MAX_IPV4_LENGTH","parser","new","readAtomically","parseWith","peekChar","readChar","readGivenChar","readSeparator","sep","inner","readNumber","radix","maxDigits","allowZeroPrefix","maxBytes","digitCount","leadingChar","hasLeadingZero","maxValue","digit","readIPv4Addr","ix","readIPv6Addr","readGroups","groups","ipv4","group","headSize","headIp4","tailSize","readIPAddr","parseIPv4","parseIPv6","parseIP","pair","deferred","piped","sink","NOISE_MSG_MAX_LENGTH_BYTES","DUMP_SESSION_KEYS","number","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","u8a","createView","rotr","word","toBytes","Hash","_cloneInto","hashCons","hashC","digest","tmp","HMAC","iHash","oHash","digestInto","extract","ikm","salt","HKDF_COUNTER","EMPTY_BUFFER","expand","prk","blocks","okm","HMACTmp","counter","SHA2","padOffset","isLE","take","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","G","getUint32","W15","W2","s0","s1","T1","T2","sha256","pureJsCrypto","hashSHA256","getHKDF","ck","generateX25519KeyPair","secretKey","privateKey","generateX25519KeyPairFromSeed","seed","generateX25519SharedKey","chaCha20Poly1305Encrypt","plaintext","nonce","ad","chacha","encrypt","chaCha20Poly1305Decrypt","ciphertext","decrypt","uint16BEEncode","setUint16","uint16BEDecode","getUint16","BASE_MAP","LEADER","FACTOR","iFACTOR","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","or","decoder","ComposedDecoder","decoders","left","right","Codec","encoder","baseX","rfc4648","bitsPerChar","codes","SyntaxError","base10","base16","base16upper","base2","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","byts","byt","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64pad","base64url","base64urlpad","base8","identity","textDecoder","encode_1","oldOffset","INT","MSB","MSBALL","REST$1","MSB$1","N1","N2","N3","N4","N5","N6","N7","N8","N9","encodingLength","encodeTo","int","sizeOffset","digestOffset","Digest","multihash","Hasher","sha","subtle","sha512","link","toStringV0","baseCache","toStringV1","cid","CID","asCID","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","other","unknown","aa","bb","encodeCID","cidSymbol","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","codec","initialBytes","parseCIDtoBytes","codeOffset","hashOffset","bases","createCodec","ascii","hex","latin1","binary","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","KEYS_BYTE_LENGTH","concatKeys","privateKeyRaw","win","nativeCrypto","derivedEmptyPasswordKey","alg","key_ops","kty","exporter","password","cipher","algorithm","keyLength","nonceLength","saltLength","iterations","aesGcm","iv","cryptoKey","importKey","deriveParams","runtimeDerivedEmptyPassword","deriveKey","rawKey","encryptedKey","KeyType","__KeyTypeValues","PublicKey","PrivateKey","_codec","lengthDelimited","Data","Ed25519PublicKey","ensureKey","marshal","Ed25519PrivateKey","_publicKey","public","unmarshalEd25519PrivateKey","privateKeyBytes","publicKeyBytes","unmarshalEd25519PublicKey","generateKeyPair","generateKeyPairFromSeed","bigIntegerToUintBase64url","base64urlToBigInteger","bytesLength","types","derivePublicFromPrivate","exportKey","jwKey","convertKey","pub","handle","fkey","jwk2pub","jwk2priv","keySize","jwk","MAX_KEY_SIZE","RsaPublicKey","verify","asn1","getBytes","RsaPrivateKey","genSecret","dq","qi","dP","dQ","qInv","saltSize","prfAlgorithm","unmarshalRsaPrivateKey","unmarshalRsaPublicKey","fromJwk","generateKey","modulusLength","publicExponent","validatePublicKey","Secp256k1PublicKey","toRawBytes","Secp256k1PrivateKey","toDERRawBytes","unmarshalSecp256k1PrivateKey","unmarshalSecp256k1PublicKey","supportedKeys","rsa","ed25519","secp256k1","unsupportedKey","supported","decoded","baseDecoder","LIBP2P_KEY_CODE","MARSHALLED_ED225519_PUBLIC_KEY_LENGTH","MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH","PeerIdImpl","toCID","startsWith","Ed25519PeerIdImpl","Secp256k1PeerIdImpl","RSAPeerIdImpl","peerIdFromCID","peerIdFromBytes","peerIdFromString","peerIdFromKeys","NoiseExtensions","NoiseHandshakePayload","getPayload","localPeer","staticPublicKey","extensions","signedPayload","peerId","signPayload","getHandshakePayload","libp2pPublicKey","identityKey","identitySig","webtransportCerthashes","createHandshakePayload","getPeerIdFromPayload","decodePayload","verifySignedPayload","noiseStaticKey","remotePeer","payloadPeerId","generatedPayload","isValidPublicKey","pk","writeDefaults","logger","createDisabledLogger","find","keyLogger","logLocalEphemeralKeys","logRemoteEphemeralKey","re","Nonce","increment","getUint64","assertValue","AbstractHandshake","encryptWithAd","cs","decryptWithAd","valid","hasKey","isEmptyKey","createEmptyKey","encryptAndHash","mixHash","encryptedMessage","decryptAndHash","dh","derivedU8","getHash","mixKey","tempK","initializeKey","initializeSymmetric","protocolName","protocolNameBytes","hashProtocolName","tempk1","tempk2","cs1","cs2","writeMessageRegular","ns","readMessageRegular","XX","initializeInitiator","prologue","rs","psk","initializeResponder","writeMessageA","hs","writeMessageB","spk","writeMessageC","messageBuffer","readMessageA","readMessageB","valid1","valid2","readMessageC","initSession","initiator","mc","sendMessage","session","ephemeral","resultingBuffer","recvMessage","resultingPlaintext","resultingValid","XXHandshake","isInitiator","remoteExtensions","connection","xx","staticKeypair","handshake","receivedMessageBuffer","decode0","decode1","decodedPayload","setRemoteNoiseExtension","decode2","getCS","getRemoteStaticKey","encryption","Noise","protocol","staticKeys","metrics","staticNoiseKey","prologueBytes","xxHandshakeSuccesses","registerCounter","help","xxHandshakeErrors","encryptedPackets","decryptedPackets","decryptErrors","registerMetrics","wrappedConnection","lengthEncoder","lengthDecoder","maxDataLength","performHandshake","createSecureConnection","performXXHandshake","propose","exchange","secure","user","duplexPair","network","chunk","encryptStream","encrypted","decrypted","decryptStream","noise","AbortError","abortableSource","getIterator","nextAbortHandler","abortHandler","abortMessage","abortCode","race","isKnownAborter","onReturnError","returnOnAbort","abortable","FIFO","splitLimit","calculateSize","_pushable","getNext","pushable","onNext","ended","onEnd","drain","bufferNext","objectMode","bufferError","throw","readableLength","onEmpty","throwIfAborted","ERR_INVALID_FRAME","ERR_UNREQUESTED_PING","ERR_NOT_MATCHING_PING","ERR_STREAM_ALREADY_EXISTS","ERR_DECODE_INVALID_VERSION","ERR_BOTH_CLIENTS","ERR_RECV_WINDOW_EXCEEDED","PROTOCOL_ERRORS","ERR_INVALID_CONFIG","ERR_MUXER_LOCAL_CLOSED","ERR_MUXER_REMOTE_CLOSED","INITIAL_STREAM_WINDOW","defaultConfig","enableKeepAlive","keepAliveInterval","maxInboundStreams","maxOutboundStreams","initialStreamWindowSize","maxStreamWindowSize","maxMessageSize","FrameType","Flag","flagCodes","GoAwayCode","stringifyHeader","flag","streamID","twoPow24","frameInProgress","returnlessSource","readHeader","readData","readBytes","decodeHeader","sublist","encodeHeader","frame","StreamState","thing","peekable","YamuxStream","_id","sendWindowCapacity","sendWindowCapacityUpdate","recvWindow","recvWindowCapacity","epochStart","getRTT","sendFrame","Finished","sendWindowUpdate","waitForSendWindowCapacity","toSend","getSendFlags","WindowUpdate","RST","FIN","_resolve","_reject","handleWindowUpdate","processFlags","available","recv","sourcePush","ACK","SYNSent","Established","remoteCloseWrite","Init","SYN","SYNReceived","rtt","delta","YAMUX_PROTOCOL_ID","Yamux","_init","createStreamMuxer","YamuxMuxer","closeController","nextStreamID","_streams","nextPingID","activePing","localGoAway","remoteGoAway","numInboundStreams","numOutboundStreams","onIncomingStream","onStreamEnd","verifyConfig","stream","reason","emitFrames","handleFrame","NormalTermination","errCode","InternalError","keepAliveLoop","streams","newStream","_newStream","sendPing","AbortSignal","timeout","sendGoAway","_closeMuxer","isClosed","closeStream","abortPromise","ping","clearInterval","Ping","handlePing","GoAway","handleGoAway","handleStreamMessage","handlePingResponse","pingId","incomingStream","handleData","yamux","things","parallelBatch","fixedSize","chunkSize","currentLength","emitted","newBl","UnixTime","Metadata","DataType","__DataTypeValues","filesize","blocksizes","hashType","fanout","mtime","Seconds","FractionalNanoseconds","MimeType","Raw","Directory","Symlink","HAMTShard","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","UnixFS","marshaled","blockSizes","secs","nsecs","_originalMode","_mode","isDirectory","addBlockSize","removeBlockSize","fileSize","fromHex","hexes","persist","blockstore","cidVersion","defaultBufferImporter","bytesWritten","content","unixfs","onProgress","rawLeaves","leafType","Links","dirBuilder","prepare","originalPath","isSingleBlockImport","fileBuilder","layout","previous","bufferImporter","blockWriteConcurrency","buildFileBatch","leaves","reduceSingleLeafToSelf","leaf","links","Name","Tsize","contentAsAsyncIterable","isFileCandidate","defaultChunkValidator","DEFAULT_MAX_CHILDREN_PER_NODE","balanced","maxChildrenPerNode","balancedLayout","chunked","Dir","root","dirty","flat","parentKey","nodeSize","CID_V0","CID_V1","DirFlat","_children","childCount","directChildrenCount","onlyChild","estimateNodeSize","flush","varint","fromNumberTo32BitBuf","murmur3128","hamtHashFn","HAMT_HASH_CODE","_bucket","hashFn","shardFanoutBits","leafCount","childrenCount","eachLeafSeries","bucket","shardRoot","children","padLength","tableSize","childrenSize","labelPrefix","padStart","shard","subShard","flushedDir","label","bitField","flatToShard","threshold","newDir","oldDir","eachChildSeries","convertToShard","toPathComponents","addToTree","tree","pathElems","lastIndex","currentPath","pathElem","shardSplitThresholdBytes","flushAndYield","importer","candidates","wrapWithDirectory","fileImportConcurrency","chunker","chunkValidator","buildDag","dagBuilder","bytesRead","currentChunkSize","defaultDagBuilder","buildTree","treeBuilder","rootDir","singleRoot","unwrapped","defaultTreeBuilder","importFile","defaultImporterSettings","addBytes","importBytes","addByteStream","bufs","importByteStream","addDirectory","importDirectory","toResolve","depth","subObject","subPath","subObjectCid","blockStart","requestedStart","requestedEnd","blockLength","blockEnd","totalBytes","toPrefix","findShardCid","unmarshal","rootBucket","log2","hamtDepth","lastBucket","_putObjectAt","_options","addLinksToHamtBucket","_findNewBucketAndPos","bucketPath","_parent","toBucketPath","_posAtParent","entryPrefix","entryName","linkName","linkPath","ordered","walkDAG","streamPosition","childOps","childLink","childStart","childEnd","childQueue","concurrency","onIdle","wanted","listDirectory","contentExporters","directory","symlink","linkCid","findLinkCid","nextName","resolvers","cidAndRest","entryPath","startingDepth","walkPath","recursive","recurse","UnixFSError","NotUnixFSError","InvalidPBNodeError","AlreadyExistsError","DoesNotExistError","NoContentError","NotAFileError","NotADirectoryError","InvalidParametersError","wrapHash","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","pendingBits","_produceMoreBits","availableBits","untake","availableForUntake","totalBits","hashValue","ConsumableBuffer","START_MASKS","STOP_MASKS","_currentBytePos","_currentBitPos","_haveBits","byte","taking","byteBitsToInt","maskFor","hamtHashCode","updateShardedDirectory","isRoot","segment","nextSegment","recreateShardedDirectory","fileName","isOverShardThreshold","estimateShardSize","current","addLink","addToShardedDirectory","addToDirectory","converted","convertToShardedDirectory","contents","createShard","parentLinks","matches","allowOverwriting","finalSegment","existingLink","findIndex","sibling","siblingName","siblingHash","siblingIndex","siblingPrefix","newIndex","newPrefix","cidToDirectory","cidToPBLink","sourceEntry","dagNodeTsize","linkSizes","segments","dirCid","updatePathCids","pblink","mergeOptions","ignoreUndefined","defaultOptions","SHARD_SPLIT_THRESHOLD_BYTES","force","removeFromDirectory","parentBlock","parentCid","removeFromShardedDirectory","unset","convertToFlatDirectory","rootNode","tsize","oldUnixfs","removeLink","stat","resolved","dagSize","localFileSize","localDagSize","inspectDag","pbNode","linkResult","DefaultUnixFS","components","addAll","cat","updatedCid","nodes","updatedBlock","chmod","cp","ls","dirname","emptyDirCid","mkdir","touch","helia","TOKEN_TYPES","Text","NumericLiteral","BooleanLiteral","StringLiteral","Identifier","Equals","OpenParen","CloseParen","OpenStatement","CloseStatement","OpenExpression","CloseExpression","OpenSquareBracket","CloseSquareBracket","OpenCurlyBracket","CloseCurlyBracket","Comma","Dot","Colon","Pipe","CallOperator","AdditiveBinaryOperator","MultiplicativeBinaryOperator","ComparisonBinaryOperator","UnaryOperator","If","For","In","Is","NotIn","Else","EndIf","ElseIf","EndFor","And","Or","Not","KEYWORDS","in","is","if","else","endif","elif","endfor","and","not","true","false","Token","isWord","ORDERED_MAPPING_TABLE","ESCAPE_CHARACTERS","Statement","Program","alternate","loopvar","SetStatement","assignee","Expression","MemberExpression","property","computed","CallExpression","callee","Literal","ArrayLiteral","TupleLiteral","ObjectLiteral","BinaryExpression","operator","FilterExpression","operand","TestExpression","negate","UnaryExpression","argument","SliceExpression","step","KeywordArgumentExpression","program","expect","parseAny","parseSetStatement","parseIfStatement","loopVariable","parseExpressionSequence","parseExpression","parseForStatement","parseJinjaStatement","parseJinjaExpression","some","primary","parsePrimaryExpression","expressions","isTuple","parseLogicalOrExpression","predicate","parseTernaryExpression","parseLogicalAndExpression","parseLogicalNegationExpression","parseAdditiveExpression","parseComparisonExpression","parseMultiplicativeExpression","parseCallMemberExpression","member","parseMemberExpressionArgumentsList","parseMemberExpression","parseCallExpression","callExpression","parseArgumentsList","parseArgs","slices","isSlice","parseTestExpression","parseFilterExpression","expression","titleCase","RuntimeValue","builtins","__bool__","BooleanValue","NumericValue","StringValue","FunctionValue","ObjectValue","defaultValue","NullValue","ArrayValue","TupleValue","UndefinedValue","Environment","variables","tests","declareVariable","convertToRuntimeValues","setVariable","lookupVariable","_scope","Template","template","endsWith","lstrip_blocks","trim_blocks","preprocess","cursorPosition","consumeWhile","escaped","unescaped","main","lastTokenType","at","char2","lastTokenType2","hasOwn","tokenize","render","interpreter","run","evaluate","evaluateBinaryExpression","environment","evaluateFilterExpression","sort","localeCompare","filterName","attr","testName","testFunction","filtered","evaluateTestExpression","evaluateUnaryExpression","evalProgram","evaluateBlock","statements","statement","lastEvaluated","evaluateIdentifier","evaluateCallExpression","expr","kwargs","kwarg","evaluateSliceExpression","evaluateMemberExpression","evaluateSet","rhs","variableName","evaluateIf","evaluateFor","scope","mapping","evaluatedKey","abortableSink","abortableDuplex","duplex","arrayShuffle","blobToIt","openFailedError","closeFailedError","putFailedError","getFailedError","deleteFailedError","hasFailedError","notFoundError","abortedError","MemoryBlockstore","sortAll","sorter","BaseBlockstore","puts","dels","putMany","deleteMany","it","filters","orders","queryKeys","_allKeys","cidToKey","keyToCid","convertPrefix","firstChar","base58","BlockstoreDatastoreAdapter","datastore","order","convertQuery","convertKeyQuery","cids","setImmediate","IDBBlockstore","upgrade","browserReadableStreamToIt","getReader","preventCancel","releaseLock","accessor","uintBoundaries","strict","readUint16","readUint32","readUint64","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","encodeUintValue","uint","nuint","buint","encodedSize","compareTokens","tok1","tok2","decodeNegint8","decodeNegint16","decodeNegint32","neg1b","pos1b","decodeNegint64","MIN_SAFE_INTEGER","encodeNegint","negint","majorEncoded","toToken","decodeBytesCompact","minor","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodedBytes","encodeBytes","b1","b2","totLength","tok","retainStringBytes","byteValue","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","coerceUndefinedToNull","decodeBreak","createToken","allowNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","success","float64","encodeFloat16","ui8a","encodeFloat32","inp","setFloat64","setFloat32","valu32","exponent","mantissa","logicalExponent","mant","getFloat32","getFloat64","useBuffer","asU8A","fromArray","chunks","decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","need","defaultDecodeOptions","Tokeniser","encodedLength","DONE","BREAK","tokensToObject","tokeniser","terminal","tokenToArray","useMaps","rejectDuplicateMapKeys","tokenToMap","tags","tagged","tokenizer","typeofs","objectTypeNames","typeOf","objectType","objectTypeName","getObjectType","Bl","maxCursor","_initReuseChunk","topChunk","chunkPos","defaultEncodeOptions","mapSorter","e1","e2","keyToken1","keyToken2","tcmp","cborEncoders","quickEncodeToken","encoders","makeCborEncoders","Ref","simpleTokens","null","emptyMap","typeEncoders","_typ","_refStack","bigint","boolean","_obj","refStack","addBreakTokens","createCheck","objectToTokens","typ","isMap","sortMapEntries","customTypeEncoder","typeEncoder","tokensToEncoded","encodeCustom","quickBytes","JSONEncoder","inRecursive","recurs","elements","isa","_buf","_token","Tokenizer","modeStack","lastToken","ch","currentMode","skipWhitespace","parseNumber","startPos","negative","swallow","numStr","parseString","readu4","u4","readUtf8Char","ch1","parseValue","invalidMinor","errorer","jump","quick","break","toBase64url","fromBase64url","encodeSignature","encoded","protected","decodeSignature","encodeRecipient","recipient","encRec","encrypted_key","decodeRecipient","isDagJWS","jose","isDagJWE","toGeneral","protectedHeader","jwe","recipients","encodedJose","jws","encJwe","aad","unprotected","isEncodedJWE","BaseDatastore","dbOpenFailedError","dbDeleteFailedError","dbWriteFailedError","dbReadFailedError","SHARDING_FN","MemoryDatastore","pathSepS","pathSepB","pathSep","Key","clean","uint8Array","less","list1","list2","c1","c2","withNamespaces","baseNamespace","namespaceType","namespaceValue","isAncestorOf","isDecendantOf","isTopLevel","IDBDatastore","tx","ops","delKey","transform","yielded","LevelDatastore","Level","compression","iteratorOpts","li","levelIteratorToIterator","encodeBase32","keyToTopic","b64url","PubSubDatastore","pubsub","validator","selector","subscriptionKeyFn","_pubsub","_datastore","_peerId","_validator","_selector","_handleSubscriptionKeyFn","_onMessage","errMsg","stringifiedTopic","publish","getTopics","_getLocal","unsubscribe","routingKey","dsVal","detail","topicToKey","_storeIfSubscriptionIsBetter","isBetter","_isBetter","_storeRecord","records","_validateRecord","dsKey","currentRecord","_selectRecord","globalFetch","globalHeaders","buildResource","serverResolver","hostname","recordType","accept","getCacheKey","maxCache","_TXTcache","_servers","_request","_abortControllers","getServers","_getShuffledServers","newServers","setServers","servers","rrType","resolve4","resolve6","resolveTxt","cached","server","Answer","ttl","TTL","clearCache","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","encodeBlobAsBase64","fileReader","readAsDataURL","supportsBinary","lookup","decodeBase64Packet","binaryType","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","mapBinary","encodedPacket","SEPARATOR","globalThisShim","pick","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","setTimeoutFn","clearTimeoutFn","TransportError","Transport","socket","onError","emitReserved","doOpen","doClose","onClose","packets","onOpen","onData","onPacket","details","pause","onPause","yeast","encodeURIComponent","hasCORS","XHR","xdomain","hasXHR2","xd","xscheme","xs","extraHeaders","setDisableHeaderCheck","requestTimeout","onLoad","requestsCount","requests","cleanup","fromError","attachEvent","unloadHandler","WebSocket","isReactNative","transports","websocket","forceBase64","check","protocols","ws","addEventListeners","onopen","autoUnref","_socket","onclose","closeEvent","onmessage","lastPacket","schema","timestampRequests","timestampParam","b64","encodedQuery","polling","isSSL","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","encodePayload","doWrite","sid","xhrStatus","pollXhr","host","ipv6uri","pathNames","regx","queryKey","$0","$2","Socket","writeBuffer","prevBufferLen","agent","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","transportOptions","closeOnBeforeunload","qs","qry","pairs","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","freezeTransport","onTransportClose","onupgrade","onHandshake","resetPingTimeout","sendPacket","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","uint32SyncSafeToken","fileTypeFromBuffer","fileTypeFromTokenizer","_check","FileTypeParser","checkString","character","fileInfo","peekBuffer","mayBeLess","mime","ignore","id3HeaderLength","readToken","readBuffer","zipHeader","compressedSize","uncompressedSize","filenameLength","extraFieldLength","filename","mimeType","nextHeaderIndex","brandMajor","maxBufferSize","fileType","readTiffHeader","readField","msb","peekNumber","ic","readElement","lengthField","nrLength","readChildren","element","readChunkHeader","guid","typeId","jsonSize","readSum","tarHeaderChecksumMatches","bigEndian","tagId","numberOfTags","readTiffTag","ifdOffset","readTiffIFD","defaultJsonSerializer","isExtractableFileEnhanced","pipe","operationName","jsonSerializer","accu","currentQuery","extractOperationName","operationDefinitions","definitions","definition","kind","resolveRequestDocument","parsedDocument","ClientError","extractMessage","resolveHeaders","oHeaders","HeadersInstanceToPlainObject","cleanQuery","createHttpMethodFetcher","fetchOptions","middleware","queryParams","params_","buildRequestConfig","urlResolved","initResolved","urlNew","initNew","GraphQLClient","requestConfig","rawRequest","queryOrOptions","requestHeaders","rawRequestOptions","parseRawRequestArgs","requestMiddleware","responseMiddleware","makeRequest","callOrIdentity","documentOrOptions","variablesAndRequestHeaders","requestOptions","parseRequestArgs","batchRequests","documentsOrOptions","batchRequestOptions","documents","parseBatchRequestArgs","queries","setHeaders","setHeader","setEndpoint","fetcher","isBatchingQuery","getResult","successfullyReceivedData","successfullyPassedErrorPolicy","errorPolicy","rest","contentType","Bucket","posAtParent","_popCount","place","_putAt","_findChild","_findPlace","_at","_delAt","compactArray","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","existingChild","newPlace","_level","mappedChildren","createHAMT","bucketOptions","_PriorityQueue_queue","__classPrivateFieldGet","_PQueue_instances","_PQueue_carryoverConcurrencyCount","_PQueue_isIntervalIgnored","_PQueue_intervalCount","_PQueue_intervalCap","_PQueue_interval","_PQueue_intervalEnd","_PQueue_intervalId","_PQueue_timeoutId","_PQueue_queue","_PQueue_queueClass","_PQueue_pending","_PQueue_concurrency","_PQueue_isPaused","_PQueue_throwOnTimeout","_PQueue_doesIntervalAllowAnother_get","_PQueue_doesConcurrentAllowAnother_get","_PQueue_next","_PQueue_onResumeInterval","_PQueue_isIntervalPaused_get","_PQueue_tryToStartAnother","_PQueue_initializeIntervalIfNeeded","_PQueue_onInterval","_PQueue_processQueue","_PQueue_throwOnAbort","_PQueue_onEvent","enqueue","priority","comparator","trunc","dequeue","__classPrivateFieldSet","PQueue","_b","_c","_d","carryoverConcurrencyCount","intervalCap","POSITIVE_INFINITY","interval","autoStart","queueClass","throwOnTimeout","newConcurrency","function_","operation","functions","sizeBy","canInitializeInterval","job","setInterval","decodeOptions","decodeVarint","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","fieldNum","pbn","linksBeforeData","decodeNode","dagPbWalker","rawWalker","dagCborWalker","tokenBuffer","keyToken","valueToken","innerKeyToken","innerValueToken","dagJsonWalker","DEFAULT_DAG_WALKERS","DATASTORE_PIN_PREFIX","DATASTORE_BLOCK_PREFIX","DATASTORE_ENCODING","toDSKey","PinsImpl","dagWalkers","dagWalker","pinKey","pinnedBlock","pinnedBy","pinCount","pin","withPinnedBlock","walk","blockKey","BlockStorage","lock","pins","singleProcess","holdGcLock","readLock","writeLock","isPinned","DS_VERSION_KEY","NetworkedStorage","bitswap","isStarted","notify","missingBlocks","notifyEach","offline","want","HeliaImpl","libp2p","hashers","hashLoader","getHasher","codecOrName","hasher","networkedStorage","assertDatastoreVersionIsCurrent","MessageCache","gossip","msgs","msgIdToStrFn","history","notValidatedCount","historyCapacity","messageId","validated","msgIdStr","originatingPeers","iwantCounts","observeDuplicate","msgId","fromPeerIdStr","getWithIWantCount","getGossipIDs","topics","msgIdsByTopic","msgIds","validate","cacheEntry","FloodsubID","GossipsubIDv10","GossipsubIDv11","GossipsubMaxIHaveLength","shuffle","messageIdToString","typeToKey","SignaturePolicy","PublishConfigType","RejectReason","ValidateError","MessageStatus","rejectReasonFromAcceptance","acceptance","Ignore","Reject","ERR_INVALID_PEER_SCORE_PARAMS","defaultPeerScoreParams","topicScoreCap","appSpecificScore","appSpecificWeight","IPColocationFactorWeight","IPColocationFactorThreshold","IPColocationFactorWhitelist","behaviourPenaltyWeight","behaviourPenaltyThreshold","behaviourPenaltyDecay","decayInterval","decayToZero","retainScore","defaultTopicScoreParams","topicWeight","timeInMeshWeight","timeInMeshQuantum","timeInMeshCap","firstMessageDeliveriesWeight","firstMessageDeliveriesDecay","firstMessageDeliveriesCap","meshMessageDeliveriesWeight","meshMessageDeliveriesDecay","meshMessageDeliveriesCap","meshMessageDeliveriesThreshold","meshMessageDeliveriesWindow","meshMessageDeliveriesActivation","meshFailurePenaltyWeight","meshFailurePenaltyDecay","invalidMessageDeliveriesWeight","invalidMessageDeliveriesDecay","createPeerScoreParams","topicScoreParams","createTopicScoreParams","validateTopicScoreParams","defaultPeerScoreThresholds","gossipThreshold","publishThreshold","graylistThreshold","acceptPXThreshold","opportunisticGraftThreshold","createPeerScoreThresholds","computeScore","peer","pstats","peerIPs","score","tstats","topicParams","topicScore","inMesh","meshTime","firstMessageDeliveries","meshMessageDeliveriesActive","meshMessageDeliveries","deficit","meshFailurePenalty","invalidMessageDeliveries","p5","knownIPs","ip","peersInIP","numPeersInIP","surplus","behaviourPenalty","excess","DeliveryRecordStatus","MessageDeliveries","getRecord","ensureRecord","drec","firstSeenTsMs","gc","removeItemsFromSet","superSet","ineed","cond","subset","MapDef","getDefault","getOrDefault","PeerScore","peerStats","scoreCache","deliveryRecords","_backgroundInterval","scoreCacheValidityMs","validatePeerScoreParams","background","refreshScores","dumpPeerScoreStats","fromEntries","stats","messageFirstSeenTimestampMs","connected","tparams","graftTime","removeIPsForPeer","scoreFnCalls","inc","cacheUntil","scoreFnRuns","scoreCachedDelta","observe","addPenalty","penaltyLabel","onScorePenalty","addPeer","addIP","removeIP","peersWithIP","removePeer","getPtopicStats","validateMessage","deliverMessage","markFirstMessageDelivery","markDuplicateMessageDelivery","rejectInvalidMessage","markInvalidMessageDelivery","rejectMessage","Blacklisted","ignored","invalid","duplicateMessage","cap","validatedTime","deliveryDelayMs","isLateDelivery","onDuplicateMsgDelivery","ipsToRemove","ipToRemove","peerSet","topicStats","IWantTracer","gossipsubIWantFollowupMs","requestMsByMsg","requestMsByMsgExpire","requestMsByMsgSize","addPromise","expireByPeer","iwantPromiseStarted","getBrokenPromises","brokenPromises","iwantPromiseBroken","isDuplicate","trackMessage","iwantPromiseResolved","iwantPromiseResolvedFromDuplicate","iwantPromiseResolvedPeers","maxMs","iwantMessagePruned","requestMs","iwantPromiseDeliveryTime","SimpleTimeCache","validityMs","validUntilMs","MessageSource","InclusionReason","ChurnReason","ScorePenalty","IHaveIgnoreReason","ScoreThreshold","SignPrefix","msgIdFnStrictSign","sequenceNumber","seqnoBytes","msgIdFnStrictNoSign","computeScoreWeights","topicStrToLabel","byTopic","topicLabel","topicScores","p1w","p2w","p3w","p3bw","p4w","capF","p5w","p6w","p7w","OutboundStream","rawStream","errCallback","InboundStream","defaultDecodeRpcLimits","maxSubscriptions","maxMessages","maxIhaveMessageIDs","maxIwantMessageIDs","maxControlMessages","maxPeerInfos","decodeRpc","decodeSubOpts","decodeMessage","decodeControlMessage","decodeControlIHave","decodeControlIWant","decodeControlGraft","decodeControlPrune","decodePeerInfo","V","resolvable","createProtocol","convertToString","ipBuff","ipString","bytes2ip","bytes2str","bytes2port","bytes2mh","bytes2onion","bytes2mb","addrBytes","portBytes","Protocol","GossipStatusCode","GossipSub","globalSignaturePolicy","multicodecs","publishConfig","dataTransform","streamsInbound","streamsOutbound","outboundInflightQueue","direct","floodsubPeers","seenCache","acceptFromWhitelist","mesh","fanoutLastpub","peerhave","iasked","outbound","msgIdFn","fastMsgIdFn","fastMsgIdCache","publishedMessageIds","mcache","topicValidators","heartbeatTicks","gossipTracer","directPeerInitial","decodeRpcLimits","stopped","allowedTopics","heartbeatTimer","fallbackToFloodsub","floodPublish","doPX","directPeers","Dlo","Dhi","Dscore","Dout","Dlazy","heartbeatInterval","second","fanoutTTL","minute","mcacheLength","mcacheGossip","seenTTL","prunePeers","pruneBackoff","unsubcribeBackoff","graftFloodThreshold","opportunisticGraftPeers","opportunisticGraftTicks","directConnectTicks","scoreParams","scoreThresholds","debugName","messageCache","metricsRegister","metricsTopicStrToLabel","maxMeshMessageDeliveriesWindowMs","topicParam","protocolsEnabled","gauge","labelNames","topicSubscriptionStatus","topicPeersCount","meshPeerCounts","meshPeerInclusionEventsFanout","meshPeerInclusionEventsRandom","meshPeerInclusionEventsSubscribed","meshPeerInclusionEventsOutbound","meshPeerInclusionEventsNotEnough","meshPeerInclusionEventsOpportunistic","meshPeerInclusionEventsUnknown","meshPeerChurnEventsDisconnected","meshPeerChurnEventsBadScore","meshPeerChurnEventsPrune","meshPeerChurnEventsExcess","meshPeerChurnEventsUnknown","peersPerProtocol","heartbeatDuration","histogram","buckets","heartbeatSkipped","acceptedMessagesTotal","ignoredMessagesTotal","rejectedMessagesTotal","unknownValidationResultsTotal","asyncValidationMcacheHit","asyncValidationDelayFromFirstSeenSec","asyncValidationUnknownFirstSeen","peerReadStreamError","rpcRecvBytes","rpcRecvCount","rpcRecvSubscription","rpcRecvMessage","rpcRecvControl","rpcRecvIHave","rpcRecvIWant","rpcRecvGraft","rpcRecvPrune","rpcDataError","rpcRecvError","rpcRecvNotAccepted","rpcSentBytes","rpcSentCount","rpcSentSubscription","rpcSentMessage","rpcSentControl","rpcSentIHave","rpcSentIWant","rpcSentGraft","rpcSentPrune","msgPublishCount","msgPublishPeersByTopic","directPeersPublishedTotal","floodsubPeersPublishedTotal","meshPeersPublishedTotal","fanoutPeersPublishedTotal","msgPublishBytes","msgPublishTime","msgForwardCount","msgForwardPeers","msgReceivedPreValidation","msgReceivedError","prevalidationInvalidTotal","prevalidationValidTotal","prevalidationDuplicateTotal","prevalidationUnknownTotal","msgReceivedInvalid","msgReceivedInvalidByTopic","duplicateMsgDeliveryDelay","maxMeshMessageDeliveriesWindowSec","duplicateMsgLateDelivery","duplicateMsgIgnored","peersByScoreThreshold","avgMinMax","scoreWeights","scorePerMesh","scoringPenalties","ihaveRcvIgnored","ihaveRcvMsgids","ihaveRcvNotSeenMsgids","iwantRcvMsgids","iwantRcvDonthaveMsgids","gossipPromiseExpireSec","iwantPromiseUntracked","connectedPeersBackoffSec","cacheSize","mcacheSize","mcacheNotValidatedCount","fastMsgIdCacheCollision","newConnectionCount","toTopic","topicStr","onJoin","onLeave","onAddToMesh","Fanout","Random","Subscribed","Outbound","NotEnough","Opportunistic","onRemoveFromMesh","Dc","BadScore","Prune","Excess","onReportValidation","messageRecord","firstSeenTimestampMs","hit","onIhaveRcv","idonthave","onIwantRcv","iwantByTopic","iwantDonthave","onForwardMsg","tosendCount","onPublishMsg","tosendGroupCount","dataLen","floodsub","onMsgRecvPreValidation","onMsgRecvError","onPrevalidationResult","duplicate","onMsgRecvInvalid","onPublishDuplicateMsg","onPeerReadStreamError","onRpcRecvError","onRpcDataError","onRpcRecv","rpcBytes","onRpcSent","registerScores","scores","graylist","registerScoreWeights","sw","wsTopic","registerScorePerMesh","scoreByPeer","peersPerTopicLabel","peersInMesh","meshScores","getMetrics","addCollect","onScrapeMetrics","getPeers","started","signaturePolicy","Signing","author","Anonymous","getPublishConfigFromPeerId","createOutboundStream","peerStore","multiaddrs","addrs","registrar","multicodec","onConnect","onPeerConnected","onDisconnect","onPeerDisconnected","registrarTopologyIds","heartbeatTimeout","runHeartbeat","hearbeatStartMs","connect","unhandle","outboundStream","inboundStream","remoteAddr","createInboundStream","maxOutboundBufferSize","sendSubscriptions","priorInboundStream","maxInboundDataLength","pipePeerReadStream","addr","currentIP","multiaddr","tuple","tuples","ip4","ip6","multiaddrToIPStr","getMeshPeers","peersInTopic","getSubscribers","awaitRpcHandler","handleReceivedRpc","handlePeerReadStreamError","acceptFrom","subOpt","handleReceivedSubscription","dispatchEvent","handleReceivedMessagePromise","handleReceivedMessage","awaitRpcMessageHandler","handleControlMessage","topicSet","rpcMsg","validationResult","validateReceivedMessage","asyncValidation","emitSelf","propagationSource","forwardMessage","fastMsgIdStr","msgIdCached","SignaturePresent","SeqnoPresent","FromPresent","InvalidSeqno","InvalidSignature","InvalidPeerId","fromPeerId","rpcMsgPreSign","validateToRawMessage","inboundTransform","TransformFailed","topicValidator","getScore","toPeer","sendRpc","controlMsg","handleIHave","handleIWant","handleGraft","handlePrune","sent","iwantMessageIds","messagesAccepted","acceptUntil","LowScore","MaxIhave","MaxIasked","iask","iwantList","GraftBackoff","floodCutoff","addBackoff","makePrune","doAddBackoff","pxConnect","intervalMs","applyIwantPenalties","BrokenPromise","clearBackoff","toconnect","pi","consumePeerRecord","openConnection","getTopologies","wasSubscribed","leave","toAdd","fanoutPeers","fanoutCount","getRandomGossipPeers","sendGraft","meshPeers","sendPrune","selectPeersToForward","excludePeers","tosend","selectPeersToPublish","newFanoutPeers","rawMsg","startMs","transformedData","outboundTransform","originalData","buildRawMessage","ignoreDuplicatePublishError","willSendToSelf","allowPublishToZeroPeers","reportMessageValidationResult","rejectReason","ctrl","piggybackControl","piggybackGossip","outRpc","tograft","toprune","noPX","pruning","emitGossip","peersToGossipByTopic","gossipIDsByTopic","peersToGossip","doEmitGossip","candidateToGossip","factor","peerMessageIDs","pushGossip","controlIHaveMsgs","onUnsubscribe","backoffMs","xid","px","peerInfo","peerRecordEnvelope","timer","startTimer","heartbeat","finally","msToNextHeartbeat","directConnect","candidateMeshPeers","shuffledPeers","peerStreams","prunePeer","graftPeer","newMeshPeers","removeFirstNItemsFromSet","peersArray","rotate","peersList","medianIndex","medianScore","lastpb","topicPeers","candidateFanoutPeers","sendGraftPrune","backoffSize","expiredMs","peerIdStr","peerIdStrs","swPeer","swPeerTopic","swTopic","computeAllPeersScoreWeights","gossipsub","MessageTypes","MessageTypeNames","InitiatorMessageTypes","NEW_STREAM","MESSAGE","MESSAGE_INITIATOR","CLOSE","CLOSE_INITIATOR","RESET","RESET_INITIATOR","ReceiverMessageTypes","MESSAGE_RECEIVER","CLOSE_RECEIVER","RESET_RECEIVER","MAX_MSG_SIZE","_buffer","_headerInfo","_maxMessageSize","_maxUnprocessedMessageQueueSize","maxUnprocessedMessageQueueSize","_decodeHeader","readVarInt","DEFAULT_BATCH_SIZE","DEFAULT_SERIALIZE","yieldAfter","POOL_SIZE","_pool","_poolOffset","MplexStream","streamId","maxDataSize","printMessage","MplexStreamMuxer","_streamId","_source","closeTimeout","initiators","receivers","_createSink","minSendBytes","disconnectThreshold","registry","_newReceiverStream","maxMsgSize","createStream","_handleIncoming","maxStreamBufferSize","sourceReadableLength","Mplex","mplex","ERR_UNRECOGNIZED_VALIDITY","ERR_SIGNATURE_VERIFICATION","ERR_UNRECOGNIZED_FORMAT","ERR_UNDEFINED_PARAMETER","ERR_RECORD_TOO_LARGE","IpnsEntry","ValidityType","__ValidityTypeValues","signatureV1","validityType","validity","pubKey","signatureV2","IPNS_PREFIX","extractPublicKey","record","parseCborData","Value","time","rfc3339Matcher","year","month","hour","millisecond","padEnd","UTC","parseRFC3339","Validity","validateCborDataMatchesPbData","Sequence","peerIdFromRoutingKey","ipnsSelector","aSeq","bSeq","recordAValidityDate","toDate","recordBValidityDate","MAX_RECORD_SIZE","isValid","dataForSignature","entryData","ipnsRecordDataForV2Sig","ipnsValidator","marshalledData","receivedRecord","bootstrapConfig","createLibp2p","addresses","discoverRelays","connectionEncryption","streamMuxers","peerDiscovery","contentRouters","services","identify","autoNAT","dcutr","dht","clientMode","validators","ipns","selectors","createHelia","isLibp2p","agentVersion","addHeliaToAgentVersion","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","IDBTransaction","wrapFunction","IDBDatabase","IDBCursor","advance","continuePrimaryKey","storeNames","transformCachableValue","unlisten","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","promisifyRequest","newValue","openDB","blocked","blocking","terminated","openPromise","oldVersion","newVersion","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","oldTraps"],"sourceRoot":""}