!function(){var t,e,n,s,r={67937:function(t,e,n){"use strict";n.d(e,{$G:function(){return i},F$:function(){return c},Gt:function(){return p},TB:function(){return u},ex:function(){return m},j9:function(){return a},jP:function(){return d},sF:function(){return o}});n(85607);var s=n(59457);const r=!("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope)&&localStorage.getItem("chainId")||"bostrom",a=s.Z[r].LCD_URL,i=s.Z[r].RPC_URL,o=s.Z[r].WEBSOCKET_URL,c=s.Z[r].INDEX_HTTPS,u=s.Z[r].INDEX_WEBSOCKET,d=s.Z[r].BECH32_PREFIX,l=`${d}val`,p=`${l}oper`,m=(s.Z[r].BASE_DENOM,s.Z[r].DENOM_LIQUID,2e5),{MEMO_KEPLR:h}=s.Z[r]},59457:function(t,e,n){"use strict";var s=n(85607),r=n(34155);const a={bostrom:{CHAIN_ID:s.p.BOSTROM,BASE_DENOM:"boot",DENOM_LIQUID:"hydrogen",RPC_URL:r.env.IS_DEV?"https://rpc.arch.bostrom.cybernode.ai:443":"https://rpc.bostrom.cybernode.ai",LCD_URL:r.env.IS_DEV?"https://lcd.arch.bostrom.cybernode.ai:443":"https://lcd.bostrom.cybernode.ai",WEBSOCKET_URL:r.env.IS_DEV?"wss://rpc.arch.bostrom.cybernode.ai:443/websocket":"wss://rpc.bostrom.cybernode.ai/websocket",INDEX_HTTPS:"https://index.bostrom.cybernode.ai/v1/graphql",INDEX_WEBSOCKET:"wss://index.bostrom.cybernode.ai/v1/graphql",BECH32_PREFIX:"bostrom",MEMO_KEPLR:"[bostrom] cyb.ai, using keplr"},"space-pussy":{CHAIN_ID:s.p.SPACE_PUSSY,BASE_DENOM:"pussy",DENOM_LIQUID:"liquidpussy",RPC_URL:"https://rpc.space-pussy.cybernode.ai/",LCD_URL:"https://lcd.space-pussy.cybernode.ai",WEBSOCKET_URL:"wss://rpc.space-pussy.cybernode.ai/websocket",INDEX_HTTPS:"https://index.space-pussy.cybernode.ai/v1/graphql",INDEX_WEBSOCKET:"wss://index.space-pussy.cybernode.ai/v1/graphql",BECH32_PREFIX:"pussy",MEMO_KEPLR:"[space-pussy] cyb.ai, using keplr"}};e.Z=a},66392:function(t,e,n){"use strict";n.d(e,{$T:function(){return r},T6:function(){return i},_2:function(){return o},fo:function(){return a}});var s=n(67937);const r=new RegExp(`^${s.jP}[a-zA-Z0-9]{39}$`,"g"),a=/^Qm[a-zA-Z0-9]{44}$/g,i=(new RegExp(`^${s.jP}[a-zA-Z0-9]{59}$`,"g"),new RegExp(`^${s.Gt}valoper[a-zA-Z0-9]{39}$`,"g"),/^cosmos[a-zA-Z0-9]{39}$/g),o=/^https:\/\/|^http:\/\//g},6998:function(t,e,n){"use strict";n.d(e,{c:function(){return s}});var s=(t=>(t.to="to",t.from="from",t.all="all",t))(s||{})},63112:function(t,e,n){"use strict";var s=n(99870),r=(t=>(t[t.ZERO=0]="ZERO",t[t.LOW=.1]="LOW",t[t.MEDIUM=.5]="MEDIUM",t[t.HIGH=.9]="HIGH",t[t.URGENT=1]="URGENT",t))(r||{}),a=n(12550),i=n(86515);function o(t){return{async*[Symbol.asyncIterator](){let e=!1;for(;!e;){const n=new Promise((n=>{t.onmessage=t=>{null===t.data?(e=!0,n(null)):n(t.data)}})),s=await n;null!==s&&(yield s)}}}}const c={canHandle:t=>t&&t.result&&"function"==typeof t.result[Symbol.asyncIterator],serialize(t){if(void 0===t)return[null,[]];const{result:e,...n}=t,{port1:s,port2:r}=new MessageChannel;return e&&(async()=>{for await(const t of e)s.postMessage(t);s.postMessage(null),s.close()})(),[{...n,port:r},[r]]},deserialize(t){if(!t)return;const{port:e,...n}=t;return{...n,result:o(e)}}};var u=n(81480),d=n(70204),l=n(34155),p=n(25108);"undefined"!=typeof SharedWorker&&l.env.IS_DEV;function m(){s.Y6.set("IPFSContent",c),s.Y6.set("observable",{canHandle:t=>t instanceof u.y,deserialize:t=>new u.y((e=>{const n=s.Y6.get("proxy").deserialize(t);n.subscribe((0,s.sj)({next:t=>e.next(t),error:t=>e.error(t),complete:()=>e.complete()})).then((t=>e.add((()=>{t.unsubscribe(),n[s.Yy]()}))))})),serialize:t=>s.Y6.get("proxy").serialize({subscribe:e=>t.subscribe({next:t=>e.next(t).then(),error:t=>e.error(t).then(),complete:()=>e.complete().then()})})}),s.Y6.set("subscription",{canHandle:t=>t instanceof d.w0,deserialize:t=>new d.w0((()=>{const e=s.Y6.get("proxy").deserialize(t);e.unsubscribe().then((()=>{e[s.Yy]()}))})),serialize:t=>s.Y6.get("proxy").serialize({unsubscribe:()=>t.unsubscribe()})})}function h(t){const e={log:{original:p.log},error:{original:p.error},warn:{original:p.warn}},n=n=>{const{original:s}=e[n];e[n].original=p[n],p[n]=(...e)=>{s.apply(p,e);const r=e.map((t=>function(t){try{return JSON.stringify(t)}catch(e){return String(t)}}(t)));t.postMessage({type:"console",method:n,args:r})}};Object.keys(e).forEach((t=>n(t)))}var g=n(97255),y=n(29127),f=n(29829),b=n(20573);function w(t){return Boolean(t.match(/^Qm[a-zA-Z0-9]{44}$/g))}var v=(t=>(t[t.transactions=1]="transactions",t[t.particle=2]="particle",t[t.chat=3]="chat",t))(v||{}),S=(t=>(t[t.pending=0]="pending",t[t.executing=1]="executing",t[t.done=2]="done",t[t.error=-1]="error",t))(S||{}),$=(t=>(t[t.particle=0]="particle",t[t.embedding=1]="embedding",t))($||{}),x=n(25108);const _={list:{isLoading:!1,data:[],error:void 0},chats:{},summary:{unreadCount:{total:0,particles:0,neurons:0}}};function C(t){t.entryType===v.chat&&t.meta.to&&(t.entryType=v.particle);const{meta:e}=t,n={timestamp:new Date(e.timestamp).toISOString(),transactionHash:t.transactionHash||t.hash||t.meta.transaction_hash||t.meta.hash||t.meta.transactionHash,memo:t.memo||e.memo,senseChatId:t.id,unreadCount:t.unreadCount||0};switch(t.entryType){case v.chat:case v.transactions:{const e=t.meta,{type:s}=e;let r=t.ownerId;if("cosmos.bank.v1beta1.MsgSend"===s){r=e.value.fromAddress}else if("cosmos.bank.v1beta1.MsgMultiSend"===s){r=e.value.inputs[0].address}Object.assign(n,{type:s,from:r,meta:t.meta.value});break}case v.particle:{const e=t.meta;Object.assign(n,{type:"cyber.graph.v1beta1.MsgCyberlink",from:e.neuron,meta:e,fromLog:!0});break}default:return{}}return n}const A=(0,f.hg)("sense/getSenseList",(async t=>(await t.getList()).map(C))),k=(0,f.hg)("sense/getSenseChat",(async({id:t,senseApi:e})=>{if(w(t)){return(await e.getLinks(t)).map((e=>{if(0!==e.timestamp)return C({...e,id:t,entryType:v.particle,meta:e})})).filter(Boolean)}return(await e.getFriendItems(t)).map((e=>{const n=e.to?v.particle:v.chat;return C({...e,entryType:n,id:t,meta:e})}))})),E=(0,f.hg)("sense/markAsRead",(async({id:t,senseApi:e})=>e.markAsRead(t))),T={id:"",isLoading:!1,data:[],error:void 0,unreadCount:0};function P(t,e){return t.data.slice(-5).some((t=>t.transactionHash===e.transactionHash))}const I=(0,f.oM)({name:"sense",initialState:_,reducers:{updateSenseList:{reducer:(t,e)=>{e.payload.forEach((e=>{const{senseChatId:n}=e;t.chats[n]||(t.chats[n]={...T});const s=t.chats[n];Object.assign(s,{id:n,unreadCount:e.unreadCount||0}),P(s,e)||(s.data=s.data.concat(e))})),I.caseReducers.orderSenseList(t)},prepare:t=>({payload:t.map(C)})},addSenseItem(t,e){const{id:n,item:s}=e.payload;t.chats[n].data.push({...s,meta:s.meta,status:"pending"});const r=t.list.data.filter((t=>t!==n));r.unshift(n),t.list.data=r},updateSenseItem(t,e){const{chatId:n,txHash:s,isSuccess:r}=e.payload,a=t.chats[n].data.find((t=>t.transactionHash===s));a&&(r?delete a.status:a.status="error")},orderSenseList(t){const e=Object.keys(t.chats).reduce(((e,n)=>{const s=t.chats[n];if(!s.data.length)return e;const r=s.data[s.data.length-1];return e.push({id:n,lastMsg:r}),e}),[]).sort(((t,e)=>Date.parse(e.lastMsg.timestamp)-Date.parse(t.lastMsg.timestamp)));t.list.data=e.map((t=>t.id))},reset:()=>_},extraReducers:t=>{t.addCase(A.pending,(t=>{t.list.isLoading=!0})),t.addCase(A.fulfilled,((t,e)=>{t.list.isLoading=!1;const n=[];e.payload.forEach((e=>{const{senseChatId:s}=e;t.chats[s]||(t.chats[s]={...T});const r=t.chats[s];Object.assign(r,{id:s,unreadCount:e.unreadCount||0}),P(r,e)||(r.data=r.data.concat(e)),n.push(s)})),t.list.data=n})),t.addCase(A.rejected,((t,e)=>{x.error(e),t.list.isLoading=!1,t.list.error=e.error.message})),t.addCase(k.pending,((t,e)=>{const{id:n}=e.meta.arg;t.chats[n]||(t.chats[n]={...T}),t.chats[n].isLoading=!0})),t.addCase(k.fulfilled,((t,e)=>{const{id:n}=e.meta.arg,s=t.chats[n];s.isLoading=!1,s.id=n,s.data=e.payload})),t.addCase(k.rejected,((t,e)=>{x.error(e);const n=t.chats[e.meta.arg.id];n.isLoading=!1,n.error=e.error.message})),t.addCase(E.fulfilled,((t,e)=>{const{id:n}=e.meta.arg,s=t.chats[n],r=w(n),{unreadCount:a}=s;t.summary.unreadCount.total-=a,r?t.summary.unreadCount.particles-=a:t.summary.unreadCount.neurons-=a,s.unreadCount=0}))}}),{addSenseItem:M,updateSenseItem:O,updateSenseList:R,reset:z}=((0,b.P1)((t=>t.sense.chats),(t=>{let e=0,n=0;Object.values(t).forEach((({id:t,unreadCount:s})=>{w(t)?e+=s:n+=s}));return{total:e+n,particles:e,neurons:n}})),I.actions);I.reducer;const D={POCKET:"pocket",POCKET_ACCOUNT:"pocketAccount"};const q={actionBar:{tweet:n(26720).fE.STAGE_TWEET_ACTION_BAR.TWEET},defaultAccount:{name:null,account:null},accounts:null};function U(t){const{defaultAccount:e,accounts:n}=t;e&&localStorage.setItem(D.POCKET,JSON.stringify({[e.name]:e.account})),n&&localStorage.setItem(D.POCKET_ACCOUNT,JSON.stringify(n))}const B=(0,f.oM)({name:"pocket",initialState:q,reducers:{setDefaultAccount:(t,{payload:{name:e,account:n}})=>{t.defaultAccount={name:e,account:n||t.accounts?.[e]||null},U(t)},setAccounts:(t,{payload:e})=>{t.accounts=e,U(t)},setStageTweetActionBar:(t,{payload:e})=>{t.actionBar.tweet=e},deleteAddress:(t,{payload:e})=>{t.accounts&&Object.keys(t.accounts).forEach((n=>{Object.keys(t.accounts[n]).forEach((s=>{if(t.accounts[n][s].bech32===e){if(delete t.accounts[n][s],0===Object.keys(t.accounts[n]).length&&delete t.accounts[n],t.defaultAccount?.account?.cyber?.bech32===e){const e=Object.entries(t.accounts).find((([,t])=>t.cyber?.bech32));t.defaultAccount=e?{name:e[0],account:e[1]}:{name:null,account:null}}U(t)}}))}))}}}),{setDefaultAccount:L,setAccounts:N,setStageTweetActionBar:j,deleteAddress:F}=B.actions;B.reducer;const H="cyb-queue-channel";var Z=class{constructor(){this.channel=new BroadcastChannel("cyb-broadcast-channel")}postServiceStatus(t,e,n){this.channel.postMessage({type:"service_status",value:{name:t,status:e,message:n}})}postSyncEntryProgress(t,e){this.channel.postMessage({type:"sync_entry",value:{entry:t,state:e}})}postMlSyncEntryProgress(t,e){this.channel.postMessage({type:"sync_ml_entry",value:{entry:t,state:e}})}postSenseUpdate(t){t.length>0&&this.channel.postMessage(R(t))}postSetDefaultAccount(t,e){this.channel.postMessage(L({name:t,account:e}))}post(t){this.channel.postMessage(t)}},Q=n(95196),W=n(42006),V=n(94975),G=n(87877),X=n(1545),Y=n(65583);const J=(t,e)=>({sendStatus:(n,s,r)=>{e.postSyncEntryProgress(t,{status:n,message:s,progress:r,done:["active","error","listen"].some((t=>t===n))})}});async function K(t,e,n=10){let s=[];for await(const r of t)s.push(r),s.length===n&&(await e(s),s=[]);s.length>0&&await e(s)}async function*tt(t,e){let n=0;for(;;){const s=await t({...e,offset:n});if(0===s.length)break;yield s,n+=s.length}}const et=(()=>{const t=new BroadcastChannel(H);return{enqueue:e=>{t.postMessage(e)}}})(),nt=async t=>{const e=await ct(t);return e&&et.enqueue({type:"sync",data:{id:t.cid,data:e,jobType:$.embedding,priority:r.MEDIUM}}),!!e};var st=n(66392);const rt="QmbdH2WBamyKLPE5zu4mJ9v49qvY8BFfoumoVPMR5V4Rvx",at="QmPLSA5oPqYxgc8F7EwrM8WS9vKrr1zPoDniSRFh8HSrxx",it=[rt,at];var ot=n(25108);const ct=async t=>{const[e,n]=await(async t=>{const e=t?.meta?.contentType||"";return"text"===e?[e,t.textPreview]:[e,void 0]})(t);let s="text"===e&&!!n;return s=s&&(!n.match(st.T6)||!n.match(st.$T)),s?n:void 0};var ut=class{constructor(t){if(this.statusApi=J("resolver",new Z),this._syncQueue$=new i.X(new Map),!t.waitForParticleResolve)throw new Error("waitForParticleResolve is not defined");this.waitForParticleResolve=t.waitForParticleResolve,t.embeddingApi$.subscribe((t=>{this.embeddingApi=t,this.queue.size>0&&this._syncQueue$.next(this.queue)})),t.dbInstance$.pipe((0,Q.P)((t=>void 0!==t))).subscribe((async t=>{this.db=t,await this.loadSyncQueue()})),this.isInitialized$=(0,g.a)([t.dbInstance$,t.ipfsInstance$]).pipe((0,y.U)((([t,e])=>!!e&&!!t)))}get canEmbed(){return!!this.embeddingApi}get queue(){return this._syncQueue$.getValue()}get loop$(){return this._loop$}async resolveIpfsParticle(t,e){return this.waitForParticleResolve(t,e).then((async({status:t,result:e})=>!("not_found"===t||!e)&&(await nt(e),!0))).catch((()=>!1))}async saveEmbedding(t,e){try{if(!await this.db.existEmbedding(t)){const n=await this.embeddingApi.createEmbedding(e);await this.db.putEmbedding(t,n)}return!0}catch(n){return ot.error(`saveEmbedding error: ${t} - ${e} `,n.toString()),!1}}async processSyncQueue(t){const e=t.length;this.statusApi.sendStatus("in-progress",`processing batch ${e}/${e} batch. ${this.queue.size} pending...`);let n=e;await Promise.all(t.map((async t=>{const{id:s,jobType:a,data:i}=t;let o=Promise.resolve(!1);return a===$.embedding&&i?o=this.saveEmbedding(s,i):a===$.particle&&(o=this.resolveIpfsParticle(s,r.MEDIUM)),o.then((async t=>{t?await this.db.removeSyncQueue({id:s,jobType:a}):await this.db.updateSyncQueue({id:s,jobType:a,status:S.error});const r=this._syncQueue$.value;r.delete(s),n--,this._syncQueue$.next(r),this.statusApi.sendStatus("in-progress",`processing batch ${e-n}/${e} batch. ${this.queue.size} pending...`)}))})))}start(){const t=this.isInitialized$.pipe((0,W.b)((t=>ot.log(`sync queue isInitialized - ${t}`))),(0,V.h)((t=>!0===t)),(0,G.z)((()=>this._syncQueue$)),(0,V.h)((t=>t.size>0)),(0,G.z)((t=>{const e=[...t.values()],n=100-e.filter((t=>t.status===S.executing)).length,s=t=>t.jobType===$.particle||t.jobType===$.embedding&&this.canEmbed;if(n>0){const r=e.filter((t=>t.status===S.pending&&s(t))).sort(((t,e)=>t.priority-e.priority)).slice(0,n);if(r.length>0)return r.forEach((e=>{t.set(e.id,{...e,status:S.executing})})),this._syncQueue$.next(t),this.statusApi.sendStatus("in-progress","starting..."),this.processSyncQueue(r)}return X.E})));return this._loop$=t.pipe((0,Y.B)()),this._loop$.subscribe({next:t=>{this.statusApi.sendStatus("active")},error:t=>this.statusApi.sendStatus("error",t.toString())}),this}async enqueueBatch(t,e,n){return K(t,(t=>this.enqueue(t.map((t=>({id:t,priority:n,jobType:e}))))),500)}async enqueue(t){if(0===t.length)return;await this.db.putSyncQueue(t);const e=this._syncQueue$.value;t.forEach((t=>e.set(t.id,{...t,status:S.pending}))),this._syncQueue$.next(e)}async loadSyncQueue(){const t=await this.db.getSyncQueue({statuses:[S.pending]}).then((t=>new Map(t.map((t=>[t.id,t])))));this._syncQueue$.next(new Map([...t,...this.queue]))}},dt=n(53741),lt=n(23071),pt=n(19917),mt=n(11954),ht=n(96486),gt=n(21466);function yt(t,e=300){return t.length>e?`${t.slice(0,e)}...`:t}const ft=/\\u\{[a-fA-F0-9]+\}/g;const bt=(t,e)=>{const{transaction_hash:n,index:s,transaction:{memo:r,block:{timestamp:a,height:i},success:o},type:c,value:u}=e;return{hash:n,index:s,type:c,timestamp:(0,gt.VE)(a),memo:r,value:u,success:o,neuron:t,blockHeight:i}},wt=({from:t,to:e,neuron:n,timestamp:s,transaction_hash:r})=>({from:t,to:e,neuron:n,timestamp:(0,gt.VE)(s),transactionHash:r});function vt(t,e){return async(...n)=>{if(e.aborted)throw new DOMException("The operation was aborted.","AbortError");return t(...n)}}var St=n(67937);var $t=n(31230);var xt=(t=>(t.Asc="asc",t.AscNullsFirst="asc_nulls_first",t.AscNullsLast="asc_nulls_last",t.Desc="desc",t.DescNullsFirst="desc_nulls_first",t.DescNullsLast="desc_nulls_last",t))(xt||{});$t.Ps`
    subscription Transactions {
  transaction(offset: 0, limit: 200, order_by: {height: desc}) {
    success
    messages
    height
    hash
  }
}
    `;$t.Ps`
    query accountCount {
  account_aggregate {
    aggregate {
      count(columns: address)
    }
  }
}
    `;$t.Ps`
    query blockByHeight($blockId: bigint) {
  block(where: {height: {_eq: $blockId}}) {
    hash
    height
    proposer_address
    timestamp
    transactions {
      messages
      hash
      height
      success
    }
  }
}
    `;$t.Ps`
    query blocks($limit: Int, $offset: Int, $where: block_bool_exp) {
  block(where: $where, limit: $limit, offset: $offset, order_by: {height: desc}) {
    hash
    height
    proposer_address
    transactions_aggregate {
      aggregate {
        count
      }
    }
    timestamp
  }
}
    `;$t.Ps`
    query contractsCount {
  contracts_aggregate {
    aggregate {
      count
    }
  }
}
    `;const _t=$t.Ps`
    query CyberlinksByParticle($limit: Int, $offset: Int, $orderBy: [cyberlinks_order_by!], $where: cyberlinks_bool_exp) {
  cyberlinks(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    from: particle_from
    to: particle_to
    timestamp
    neuron
    transaction_hash
  }
}
    `;const Ct=$t.Ps`
    query CyberlinksCountByNeuron($address: String, $particles_from: [String!], $timestamp: timestamp) {
  cyberlinks_aggregate(
    where: {_and: [{neuron: {_eq: $address}}, {particle_from: {_in: $particles_from}}, {timestamp: {_gt: $timestamp}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;$t.Ps`
    query cyberlinksCountByParticle($cid: String, $where: cyberlinks_bool_exp) {
  cyberlinks_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;const At=$t.Ps`
    query MessagesByAddressCount($address: _text, $timestamp: timestamp) {
  messages_by_address_aggregate(
    args: {addresses: $address, limit: "100000000", offset: "0", types: "{}"}
    where: {transaction: {block: {timestamp: {_gt: $timestamp}}}}
  ) {
    aggregate {
      count
    }
  }
}
    `;const kt=$t.Ps`
    query MessagesByAddressSense($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {timestamp: $order_direction}}}
    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}
  ) {
    transaction_hash
    index
    value
    transaction {
      success
      block {
        timestamp
        height
      }
      memo
    }
    type
  }
}
    `;const Et=$t.Ps`
    subscription MessagesByAddressSenseWs($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {timestamp: $order_direction}}}
    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}
  ) {
    transaction_hash
    index
    value
    transaction {
      success
      block {
        timestamp
        height
      }
      memo
    }
    type
  }
}
    `;$t.Ps`
    query transactionCount {
  transaction_aggregate {
    aggregate {
      count(columns: hash)
    }
  }
}
    `;$t.Ps`
    query uptimeByAddress($address: String) {
  uptime(where: {consensus_address: {_eq: $address}}) {
    uptime
  }
}
    `;$t.Ps`
    query wasmDashboardPage($offset: Int, $limit: Int) {
  contracts(limit: $limit, offset: $offset, order_by: {tx: desc}) {
    address
    admin
    code_id
    creator
    fees
    gas
    label
    tx
  }
  contracts_aggregate {
    aggregate {
      sum {
        gas
        fees
        tx
      }
      count(columns: address)
    }
  }
}
    `;$t.Ps`
    query MessagesByAddress($address: _text, $limit: bigint, $offset: bigint, $types: _text) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {height: desc}}}
  ) {
    transaction_hash
    value
    transaction {
      success
      height
      logs
      memo
      block {
        timestamp
      }
    }
    type
  }
}
    `;var Tt=n(29639),Pt=n(98994),It=n(28972);const Mt="cosmos.bank.v1beta1.MsgSend",Ot="cosmos.bank.v1beta1.MsgMultiSend",Rt=(t,e)=>{const{data:n,events:s}=e,r=s["tx.hash"][0],a=s["message.action"][0].slice(1),i=(0,gt.qQ)(),o=s["tx.height"][0],{memo:c="",messages:u}=(t=>{const e=Tt.Tx.decode((0,It.Gh)(t)),n=e.body?.memo,s=e.body?.messages.map((t=>{const e=t.typeUrl.slice(1);return e===Mt?Pt.MsgSend.decode(t.value):e===Ot?Pt.MsgMultiSend.decode(t.value):void 0})).filter((t=>void 0!==t));return{memo:n,messages:s}})(n.value.TxResult.tx),d=[];return u.forEach(((e,n)=>{d.push({hash:r,index:n,type:a,timestamp:i,success:!0,value:e,memo:c,neuron:t,blockHeight:o})})),d};var zt=n(6584),Dt=n(85185),qt=n(95210),Ut=n(78699),Bt=n(26461);const Lt=new qt.g((0,Bt.eI)({url:St.TB,shouldRetry:t=>!0,retryAttempts:10,retryWait:async t=>{setTimeout((()=>Promise.resolve()),Math.min(1e3*2**t,1e4))}})),Nt=t=>new Ut.g6(St.F$,{signal:t});const jt=async({particleCid:t,timestampFrom:e,offset:n=0,abortSignal:s})=>(await Nt(s).request(_t,{limit:200,offset:n,orderBy:[{timestamp:xt.Asc}],where:{_or:[{particle_to:{_eq:t}},{particle_from:{_eq:t}}],timestamp:{_gt:(0,gt.gB)(e)}}})).cyberlinks,Ft=async({neuron:t,particlesFrom:e,timestampFrom:n,batchSize:s,offset:r=0,abortSignal:a})=>{const i={_and:[{timestamp:{_gt:(0,gt.gB)(n)}},{neuron:{_eq:t}},{particle_from:{_in:e}}]};return(await Nt(a).request(_t,{limit:s,offset:r,orderBy:[{timestamp:xt.Asc}],where:i})).cyberlinks},Ht=async(t,e,n,s,r)=>tt(Ft,{neuron:t,particlesFrom:e,timestampFrom:n,batchSize:s,abortSignal:r}),Zt=t=>[...new Set([...t.map((t=>t.to)),...t.map((t=>t.from))])],Qt=async(t,e,n,s,r)=>{const a=((t,e,n)=>tt(jt,{particleCid:t,timestampFrom:e,abortSignal:n}))(t,e,r),i=[];for await(const t of a){i.push(...t);const e=Zt(t);e.length>0&&await K(e,(t=>n.enqueueBatch(t,$.particle,s)),20)}return i};const Wt=({neuron:t,timestampFrom:e,offset:n=0,types:s=[],orderDirection:r="desc",limit:a})=>({address:`{${t}}`,limit:a,timestamp_from:(0,gt.gB)(e),offset:n,types:`{${s.map((t=>`"${t}"`)).join(" ,")}}`,order_direction:r}),Vt=async({neuron:t,timestampFrom:e,offset:n=0,types:s=[],orderDirection:r="desc",limit:a,abortSignal:i})=>{const o=await Nt(i).request(kt,Wt({neuron:t,timestampFrom:e,offset:n,types:s,orderDirection:r,limit:a,abortSignal:i}));return o?.messages_by_address},Gt=(t,e,n,s,r)=>{const a=t.get(e),i=a?.transactions||[];return i.push(n),t.set(e,{userAddress:e,lastSendTimestamp:r?n.timestamp:a?.lastSendTimestamp||0,last:{amount:s,memo:n.memo,direction:r?"to":"from"},transactions:i}),t},Xt=async(t,e,n,s,r=!0)=>{const a=await t.findSyncStatus({ownerId:e,entryType:v.chat}),i=new Map(a?.map((t=>[t.id,t]))),o=((t,e)=>{if(0===(e.filter((t=>t.type===Mt||t.type===Ot))||[]).length)return[];const n=new Map;return e.forEach((e=>{let s="";if(e.type===Ot){const{inputs:s,outputs:r}=e.value,a=s.find((e=>e.address===t));(a?r:s).forEach((t=>Gt(n,t.address,e,t.coins,a)))}else if(e.type===Mt){const{fromAddress:r,toAddress:a,amount:i}=e.value,o=r===t;s=o?a:r,Gt(n,s,e,i,o)}})),n})(e,await t.getTransactions(e,{order:"asc",timestampFrom:n})),c=[];for(const n of o.values()){const a=i.get(n.userAddress),o=n.transactions.at(-1),{timestamp:u,hash:d,index:l}=o,p={entryType:v.chat,ownerId:e,meta:{transactionHash:d,index:l}};if(a){const{id:e,timestampRead:i,timestampUpdate:d,meta:l,unreadCount:m}=a,h=Math.max(i,n.lastSendTimestamp),{timestampUpdateContent:g=0,timestampUpdateChat:y=0}=l,f=Math.max(n.lastSendTimestamp,y),b=m+n.transactions.filter((t=>t.timestamp>f)).length;if(d<u){const n=r?u:y,i={...p,id:e,unreadCount:b,timestampRead:h,timestampUpdate:Math.max(u,g,n),meta:{...p.meta,timestampUpdateChat:n,timestampUpdateContent:g}};await vt(t.updateSyncStatus.bind(t),s)(i),c.push({...a,...i,meta:o})}}else{const e=n.transactions.filter((t=>t.timestamp>n.lastSendTimestamp)).length,a={...p,id:n.userAddress,unreadCount:e,timestampUpdate:r?u:0,timestampRead:n.lastSendTimestamp,disabled:!1};await vt(t.putSyncStatus.bind(t),s)(a),c.push({...a,meta:o})}}return c};var Yt=n(98430),Jt=n(34978),Kt=n(93994);class te{constructor(t){this.requestRecords=[],this.totalRequests=0,this.completedRequests=0,this.estimatedTime=-1,this.batchSize=1,this.onProgressUpdate=t}get progress(){return{totalCount:this.totalRequests,completeCount:this.completedRequests,estimatedTime:this.estimatedTime}}start(t,e=1){return this.totalRequests=t,this.requestRecords=[],this.completedRequests=0,this.estimatedTime=-1,this.batchSize=e,this.progress}add(t){return this.totalRequests+=t,this.progress}trackProgress(t){if(this.addRequestRecord(t),this.requestRecords.length>10&&this.requestRecords.shift(),this.requestRecords.length>1){const e=this.calculateAverageTimePerItem()*((this.totalRequests-this.completedRequests)*t);this.completedRequests+=t,this.estimatedTime=Math.round(e),this.onProgressUpdate&&this.onProgressUpdate(this.progress)}return this.progress}addRequestRecord(t){this.requestRecords.push({timestamp:Date.now(),itemCount:t})}calculateAverageTimePerItem(){let t=0,e=0;for(let n=1;n<this.requestRecords.length;n++){const s=this.requestRecords[n].timestamp-this.requestRecords[n-1].timestamp,{itemCount:r}=this.requestRecords[n];t+=s*r,e+=r}return 0===e?0:t/e}}var ee=class{constructor(t,e,n){if(this.progressTracker=new te,this.channelApi=new Z,this.params={myAddress:null},this.name=t,this.abortController=new AbortController,this.statusApi=J(t,this.channelApi),this.particlesResolver=n,this.cyblogCh=(0,Kt.B)({thread:"bckd",module:t}),!e.params$)throw new Error("params$ is not defined");e.dbInstance$.subscribe((t=>{this.db=t})),this.particlesResolver=n,this.isInitialized$=this.createIsInitializedObserver(e),this.isInitialized$.subscribe((t=>{this.cyblogCh.info(`>>> ${this.name} - ${t?"initialized":"inactive"}`),this.statusApi.sendStatus(t?"initialized":"inactive")})),this.isInitialized$.pipe((0,Jt.w)((()=>e.params$))).subscribe((t=>{this.params=t,this.cyblogCh.info(`>>> ${this.name} - params updated`,{data:t})})),this.isInitialized$.pipe((0,V.h)((t=>!!t)),(0,Jt.w)((()=>this.createRestartObserver(e.params$)))).subscribe((()=>{this.restart()}))}initAbortController(){this.abortController=new AbortController}createRestartObserver(t){return t.pipe((0,y.U)((t=>t.myAddress)),(0,dt.x)(((t,e)=>t===e)),(0,y.U)((t=>!!t)),(0,V.h)((t=>!!t)))}};const ne=(t,e,n)=>t.pipe((0,dt.x)(),(0,W.b)((t=>n?.(t))),(0,V.h)((t=>t)),(0,Jt.w)((()=>e)),(0,Y.B)());var se=n(25108);var re=class extends ee{constructor(t,e,n){super(t,e,n),this.reloadTrigger$=new a.x;const s=ne(this.isInitialized$,this.reloadTrigger$.pipe((0,Yt.O)(null),(0,W.b)((()=>{this.initAbortController()})),(0,Jt.w)((()=>this.createInitObservable().pipe((0,Jt.w)((t=>this.createClientObservable(t).pipe((0,W.b)((()=>this.statusApi.sendStatus("listen"))),(0,Jt.w)((t=>(0,mt.D)(this.onUpdate(t,this.params))))))))))),(e=>{se.log(`>>> ${t} isInitialized`,e),this.statusApi.sendStatus(e?"initialized":"inactive")}));s.subscribe({next:()=>{this.statusApi.sendStatus("listen")},error:t=>{this.statusApi.sendStatus("error",t)}}),this.source$=s}restart(){this.abortController?.abort(),this.reloadTrigger$.next(),se.log(`>>> ${this.name} client restart`)}start(){return this.source$.subscribe((()=>{})),this}};var ae=class extends re{createIsInitializedObserver(t){return(0,g.a)([t.dbInstance$,t.params$.pipe((0,y.U)((t=>t.myAddress)),(0,dt.x)()),this.particlesResolver.isInitialized$]).pipe((0,y.U)((([t,e,n])=>!!t&&!!n&&!!e)))}createClientObservable(t){const{myAddress:e}=this.params;this.cyblogCh.info(`>>> ${this.name} subscribe ${e} from ${(0,gt.gB)(t)}`);const n=Wt({neuron:e,timestampFrom:t,types:[],orderDirection:"desc",limit:100}),s=function(t,e){const n=new zt.f({link:Lt,cache:new Dt.h}).subscribe({query:t,variables:e});return new u.y((t=>{const e=n.subscribe({next(e){t.next(e.data)},error(e){t.error(e)},complete(){t.complete()}});return()=>e.unsubscribe()}))}(Et,n).pipe((0,y.U)((t=>({source:"indexer",transactions:t.messages_by_address.map((t=>bt(e,t)))})))),r=function(t,e,n){return new u.y((s=>{const r=new WebSocket(St.sF);return r.onopen=()=>{n(`node ws connected to ${St.sF} with ${e}`),r.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"0",params:{query:e}}))},r.onmessage=e=>{const r=JSON.parse(e.data);n(`node ws ${t} onmessage`,r),s.next(r.result)},r.onerror=e=>{n(`node ws ${t} error`,{error:e}),s.error(e)},r.onclose=()=>{n(`node ws ${t} closed`),s.complete()},()=>{r.close()}}))}(e,(a=e,`tm.event='Tx' AND transfer.recipient='${a}'`),((t,e)=>this.cyblogCh.info(t,{unit:"node-ws",...e}))).pipe((0,V.h)((t=>!(0,ht.isEmpty)(t))),(0,y.U)((t=>({source:"node",transactions:Rt(e,t)}))));var a;return(0,lt.T)(s,r)}createInitObservable(){return(0,pt.P)((()=>(0,mt.D)(this.initSync())))}async initSync(){const{myAddress:t}=this.params,{signal:e}=this.abortController,n=await this.db.getSyncStatus(t,t),s=await this.syncTransactions(t,t,n);this.statusApi.sendStatus("in-progress","sync my chats");const r=await Xt(this.db,t,n.timestampUpdate,e);return this.channelApi.postSenseUpdate(r),this.statusApi.sendStatus("active"),s}async onUpdate({source:t,transactions:e},n){const{myAddress:s}=n,{signal:r}=this.abortController;if(0===e.length)return void this.cyblogCh.info(`>>> ${this.name} ${s} recived 0 updates `);const a=await this.db.getSyncStatus(s,s);await this.processBatchTransactions(s,s,e,a,t),this.statusApi.sendStatus("in-progress","sync my chats");const i=await Xt(this.db,s,a.timestampUpdate,r,"node"!==t);this.channelApi.postSenseUpdate(i),this.statusApi.sendStatus("listen")}async processBatchTransactions(t,e,n,{timestampRead:s,unreadCount:r,timestampUpdate:a},i){const{signal:o}=this.abortController,c="node"!==i;this.cyblogCh.info(`   syncTransactions - process ${e}[${i}],  count: ${n.length}, from: ${n.at(0)?.timestamp}, to: ${n.at(-1)?.timestamp}`),await vt(this.db.putTransactions,o)(n),this.syncLinks(n,o);const{hash:u,index:d,timestamp:l}=n.at(-1),p=l,m={ownerId:t,entryType:v.transactions,id:e,timestampUpdate:c?p:a,unreadCount:r+n.length,timestampRead:s||0,disabled:!1,meta:{transactionHash:u,index:d}};return await vt(this.db.putSyncStatus,o)(m),p}async syncTransactions(t,e,n){const{unreadCount:s,timestampUpdate:r}=n,a=r+1;this.statusApi.sendStatus("estimating");const i=await(async(t,e,n)=>{const s=await Nt(n).request(At,{address:`{${t}}`,timestamp:(0,gt.gB)(e)});return s?.messages_by_address_aggregate.aggregate?.count})(e,a,this.abortController.signal);if(this.cyblogCh.info(`>>> syncTransactions - start ${e},  count: ${i}, from: ${a}`),0===i)return a;this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.start(Math.ceil(i/500)));const o=(({neuron:t,timestampFrom:e,types:n,orderDirection:s,limit:r,abortSignal:a})=>tt(Vt,{neuron:t,timestampFrom:e,types:n,orderDirection:s,limit:r,abortSignal:a}))({neuron:e,timestampFrom:a,types:[],orderDirection:"asc",limit:500,abortSignal:this.abortController?.signal});let c=0,u=a;for await(const r of o){this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.trackProgress(1)),c+=r.length;const a=r.map((t=>bt(e,t)));u=await this.processBatchTransactions(t,e,a,{...n,unreadCount:s+c},"indexer")}return u}async syncLinks(t,e){const{tweets:n,particlesFound:s,links:a}=function(t){const e=t.filter((t=>"cyber.graph.v1beta1.MsgCyberlink"===t.type)),n=new Set,s=[];return{tweets:e.reduce(((t,{value:e,hash:r,timestamp:a})=>(e.links.forEach((i=>{n.add(i.to),n.add(i.from);const o={...i,timestamp:a,neuron:e.neuron,transactionHash:r};s.push(o),i.from===rt&&(t[o.to]=o)})),t)),{}),particlesFound:[...n],links:s}}(t);a.length>0&&await K(a,(t=>vt(this.db.putCyberlinks,e)(t)),500);const i=Object.keys(n),o=s.filter((t=>!i.includes(t)));await this.particlesResolver.enqueueBatch(i,$.particle,r.HIGH),o.length>0&&await this.particlesResolver.enqueueBatch(o,$.particle,r.LOW)}};const ie=t=>t.replace(/([-_][a-z])/g,(t=>t.toUpperCase().replace("-","").replace("_","")));function oe(t){if(!t||"object"!=typeof t)return t;const e={};return Object.keys(t).forEach((n=>{if(Object.prototype.hasOwnProperty.call(t,n)){const s=ie(n);let r=t[n];Array.isArray(t[n])?r=t[n].map((t=>oe(t))):"object"==typeof t[n]?r=oe(t[n]):"string"==typeof t[n]&&(r=r.replace(/\\r/g,"\r").replace(/\\n/g,"\n").replace(/\\'/g,"'").replace(/\\''/g,'"').replace(/\\\\/g,"\\").replace(/\\!!/g,"#")),e[s]=r}})),e}function ce(t,e,n=0,s=0){const r=t.filter((t=>t.timestamp>n)),a=(0,ht.findLastIndex)(r,(t=>t.neuron===e)),i=a<0?s+r.length:r.length-a-1;return{timestampRead:a<0?n:t[a].timestamp,unreadCount:i}}function ue(t,e,n,s=!0){const{timestampRead:r,unreadCount:a}=ce(e,n,t.timestampRead,t.unreadCount),i=oe(e[e.length-1]),o=i.timestamp;return{...t,ownerId:n,entryType:v.particle,disabled:!1,unreadCount:a,meta:{...i,timestamp:o},timestampRead:r,timestampUpdate:s?o:t.timestampUpdate}}const de=t=>t instanceof DOMException&&"AbortError"===t.name;var le=n(49870),pe=n(16697),me=n(80833),he=n(16899),ge=n(96371),ye=n(25108);var fe=class extends ee{constructor(t,e,n,s,{warmupMs:r}={warmupMs:0}){super(t,n,s);const{loop$:i,restartLoop:o}=((t,e,n={})=>{const{intervalMs:s,warmupMs:r=0,onStartInterval:i,onError:o,retryDelayMs:c=0,onChange:u}=n,d=new a.x,l=d.pipe((0,Yt.O)(null),(0,Jt.w)((()=>(0,pe.F)(s).pipe((0,Yt.O)(0),(0,me.g)(r)))));return{loop$:ne(t,l.pipe((0,W.b)((()=>i&&i())),(0,he.z)((()=>e.pipe((0,ge.X)({delay:t=>(ye.log("retry",t),o&&o(t),(0,pe.F)(c))}))))),(t=>u?.(t))),restartLoop:()=>{d.next()}}})(this.isInitialized$,(0,pt.P)((()=>(0,mt.D)(this.doSync()))),{intervalMs:e,warmupMs:r,onError:e=>{this.cyblogCh.info(`>>> ${t} error`,e.toString()),this.statusApi.sendStatus("error",e.toString())},onChange:e=>{this.cyblogCh.info(`>>> ${t} initialized: ${e}`),this.statusApi.sendStatus(e?"initialized":"inactive")}});this.loop$=i,this.restartLoop=o}restart(){this.abortController?.abort(),this.restartLoop?.(),this.cyblogCh.info(`>>> ${this.name} loop restart`)}start(){return this.loop$.subscribe((()=>this.statusApi.sendStatus("active"))),this}async doSync(){const t=(0,le.d9v)(this.params);this.initAbortController();try{await this.sync(t)}catch(e){const n=de(e);if(this.cyblogCh.info(`>>> ${this.name} ${t.myAddress} sync error [abrt:${n}]:`,{error:e}),!n)throw e}}};var be=class extends fe{createIsInitializedObserver(t){return(0,g.a)([t.dbInstance$,t.ipfsInstance$,t.params$.pipe((0,y.U)((t=>t.myAddress)),(0,dt.x)()),this.particlesResolver.isInitialized$]).pipe((0,y.U)((([t,e,n,s])=>!!(e&&t&&s&&n))))}async sync(t){const{myAddress:e}=t,{signal:n}=this.abortController;this.statusApi.sendStatus("estimating");const s=await this.db.findSyncStatus({ownerId:e,entryType:v.particle}),r=s.at(0)?.timestampUpdate||0,a=await(async(t,e,n,s)=>{const r=await Nt(s).request(Ct,{address:t,particles_from:e,timestamp:(0,gt.gB)(n)});return r.cyberlinks_aggregate.aggregate?.count})(e,[rt],r,n);if(this.cyblogCh.info(`>>> syncMyParticles ${e} count ${a}`),this.progressTracker.start(a+s.length),this.statusApi.sendStatus("in-progress","preparing...",this.progressTracker.progress),a>0){const t=await this.fetchNewTweets(e,r,n);s.push(...t)}await this.syncParticles(e,s,n)}async fetchNewTweets(t,e,n){const s=await Ht(t,[rt],e,200,this.abortController?.signal),r=[],a=await this.db.findSyncStatus({ownerId:t,entryType:v.particle}),i=new Map(a.map((t=>[t.id,t])));for await(const e of s){this.statusApi.sendStatus("in-progress","fetching new tweets...",this.progressTracker.trackProgress(1));const s=e.map(oe).map((e=>{const{timestamp:n,to:s}=e,r=(0,gt.VE)(n),a=i.get(s)?(0,gt.VE)(n):0;return{ownerId:t,id:s,entryType:v.particle,timestampUpdate:a,timestampRead:r,unreadCount:0,disabled:!1,meta:{...e,timestamp:r}}}));s.length>0&&(await vt(this.db.putSyncStatus,n)(s),r.push(...s))}return r}async syncParticles(t,e,n){const s=[];for(const a of e){const{id:e,timestampUpdate:i}=a;this.statusApi.sendStatus("in-progress","fetching tweet updates...",this.progressTracker.trackProgress(1));const o=await Qt(e,i,this.particlesResolver,r.MEDIUM,this.abortController?.signal);if(o.length>0){const e=o.map(wt);await K(e,(t=>vt(this.db.putCyberlinks,n)(t)),500);const r=ue(a,e,t);s.push(r)}}s.length>0&&await vt(this.db.putSyncStatus,n)(s),this.channelApi.postSenseUpdate(s)}};var we=class extends fe{constructor(t,e,n,s,{warmupMs:r}={warmupMs:0}){if(!n.followings$)throw new Error("followings$ is required");super(t,e,n,s,{warmupMs:r}),this.followings=[]}createIsInitializedObserver(t){const e=new i.X(!1);t.params$?.pipe((0,y.U)((t=>t.myAddress)),(0,dt.x)()).subscribe((()=>{e.next(!1)})),t.followings$.subscribe((t=>{this.followings=t,e.next(!0),this.restart()}));return(0,g.a)([t.dbInstance$,t.params$,this.particlesResolver.isInitialized$,e]).pipe((0,y.U)((([t,e,n,s])=>!!t&&!!e.myAddress&&!!n&&s)))}async sync(t){const{signal:e}=this.abortController;this.statusApi.sendStatus("in-progress","preparing...");const{myAddress:n}=t,{followings:s}=this;this.statusApi.sendStatus("estimating"),this.cyblogCh.info(`>>> syncMyFriends ${n} count ${s.length}`,{unit:"friends-sync",data:s}),this.progressTracker.start(s.length),this.statusApi.sendStatus("in-progress","sync...",this.progressTracker.progress);for(const t of s)await this.syncLinks(n,t,e)}async syncLinks(t,e,n){let s=[];try{this.statusApi.sendStatus("in-progress",`starting sync ${e}...`,this.progressTracker.progress);const{timestampRead:a,unreadCount:i,meta:o}=await this.db.getSyncStatus(t,e),{timestampUpdateChat:c=0,timestampUpdateContent:u=0}=o||{},d=u+1,l=await Ht(e,it,d,200,n);for await(const o of l){this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.trackProgress(1));const u=o.map(wt),{timestampRead:d,unreadCount:l}=ce(u,t,a,i);if(u.length>0){const a=oe(u.at(-1)),i=a.timestamp;await vt(this.db.putCyberlinks,n)(u);const o=u.map((t=>t.to));await this.particlesResolver.enqueueBatch(o,$.particle,r.HIGH);const p={ownerId:t,entryType:v.chat,id:e,timestampUpdate:Math.max(i,c),unreadCount:l,timestampRead:d,disabled:!1,meta:{...a,timestampUpdateContent:i,timestampUpdateChat:c}};await vt(this.db.putSyncStatus,n)(p),s.push(p)}}}catch(t){if(this.cyblogCh.error(`>>> SyncMyFriends ${e} error`,{error:t}),de(t))throw s=[],t;this.statusApi.sendStatus("error",t.toString())}finally{this.channelApi.postSenseUpdate(s)}}},ve=n(51573),Se=n(71257);n(25108);const $e=(0,Kt.B)({thread:"bckd",unit:"fetchStoredSyncCommunity"}),xe=(t,e,n,s)=>new u.y((a=>{a.next({action:"reset",items:[]}),(async()=>{const i=await t.getCommunity(e);a.next({action:"add",items:i});const o=new Map(i.map((t=>[t.particle,t]))),c=t=>o.get(t)||{ownerId:e,name:"",following:!1,follower:!1},u=await(async(t,e)=>{const n=await(0,Se.Z)({method:"get",url:`${St.j9}/txs?cyberlink.neuron=${t}&cyberlink.particleFrom=${at}&limit=1000000000`,signal:e});return n.data.txs?n.data.txs.map((t=>t.tx.value.msg[0].value.links[0].to)):[]})(e,s),d=await(async(t,e)=>{const n=await(0,ve.Uy)(t),s=await(0,Se.Z)({method:"get",url:`${St.j9}/txs?cyberlink.particleFrom=${at}&cyberlink.particleTo=${n}&limit=1000000000`,signal:e});return s.data.txs?s.data.txs.map((t=>t.tx.value.msg[0].value.neuron)):[]})(e,s),l=u.filter((t=>!i.some((e=>e.particle===t&&e.following)))),p=d.filter((t=>!i.some((e=>e.neuron===t&&e.follower))));$e.info(`>>>$ sync community ${e} processing, stored ${i.length} new followers: ${l.length} new following: ${p.length}`);const m=await Promise.all(p.map((async e=>{const n=await(0,ve.Uy)(e),s={...c(n),particle:n,neuron:e,follower:!0};return await t.putCommunity(s),o.set(n,s),s})));a.next({action:"add",items:m}),await Promise.all(l.map((async e=>{const s=(await n(e,r.URGENT))?.result?.textPreview;if(s&&s.match(st.$T)){const n={...c(e),neuron:s,particle:e,following:!0};await t.putCommunity(n),o.set(e,n),a.next({action:"add",items:[n]})}}))),$e.info(`>>>$ sync community ${e}, done`),a.next({action:"complete",items:[]}),a.complete()})().catch((t=>{$e.error(`>>>$ sync community ${e}, error`,{error:t}),a.error(t)}))}));var _e=n(25108);var Ce=class{constructor(t,e){this.channel=new BroadcastChannel(H),this.particlesResolver=t,e.subscribe((t=>{this.dbInstance$.next(t)})),this.dbInstance$=new i.X(void 0),this.channel.onmessage=t=>this.onMessage(t),this.channel.onmessageerror=t=>_e.error(`${H} error`,t)}async getDeffredDbApi(){return new Promise((t=>{const e=this.dbInstance$.getValue();e&&t(e),this.dbInstance$.pipe((0,Q.P)((t=>void 0!==t))).subscribe((e=>{t(e)}))}))}async saveLinks(t){const e=await this.getDeffredDbApi();await e.putCyberlinks(t)}async saveParticles(t){try{const e=await this.getDeffredDbApi(),n=(t=>{const{cid:e,meta:n,textPreview:s}=t,{size:r,mime:a,type:i,blocks:o,sizeLocal:c}=n;var u;return{cid:e,size:r||0,mime:a||"unknown",type:i,text:s?(u=function(t){let e=t.replace(/^#{1,6}\s+/gm,"");return e=e.replace(/(\*\*|__)(.*?)\1/g,"$2"),e=e.replace(/(\*|_)(.*?)\1/g,"$2"),e=e.replace(/(~~)(.*?)\1/g,"$2"),e=e.replace(/`{1,3}[^`](.*?)`{1,3}/g,"$1"),e=e.replace(/```[\s\S]*?```/g,""),e=e.replace(/^\s{0,3}>\s?/gm,""),e=e.replace(/\[(.*?)\]\(.*?\)/g,"$1"),e=e.replace(/!\[(.*?)\]\(.*?\)/g,"$1"),e=e.replace(/^-{3,}$/gm,""),e=e.replace(/^\s*[-+*]\s+/gm,""),e=e.replace(/^\s*\d+\.\s+/gm,""),e=e.replace(/\n{2,}/g,"\n\n"),e=e.replace(/^\s+|\s+$/g,""),e}(s),u.replace(/"/g,"'")):"",size_local:c||-1,blocks:o||0}})(t);(await e.putParticles(n)).ok&&await nt(t)}catch(e){throw _e.log("---saveParticle e",t,t.textPreview,e.toString()),e}}async enquueSync(t){await this.getDeffredDbApi(),this.particlesResolver.enqueue(Array.isArray(t)?t:[t])}onMessage(t){const{type:e,data:n}=t.data;"link"===e?this.saveLinks(n):"particle"===e?this.saveParticles(n):"sync"===e&&this.enquueSync(n)}};const Ae=(0,Kt.B)({thread:"bckd"});class ke{constructor(t){this.channelApi=new Z,this.loops={};const{dbInstance$:e,ipfsInstance$:n}=t,s=new ut(t).start();new Ce(s,e);this.isInitialized$=(0,g.a)([e,n]).pipe((0,y.U)((([t,e])=>!!t&&!!e))),this.isInitialized$.subscribe({next:t=>t&&this.channelApi.postServiceStatus("sync","started"),error:t=>this.channelApi.postServiceStatus("sync","error",t)});const r=function(t){const{dbInstance$:e,ipfsInstance$:n,params$:s}=t,r=new Z;return(0,g.a)([e,s.pipe((0,y.U)((t=>t.myAddress)),(0,dt.x)()),n]).pipe((0,V.h)((([t,e,n])=>!!t&&!!n&&!!e)),(0,Jt.w)((([e,n,s])=>{const{waitForParticleResolve:a}=t;let i=[];return new u.y((t=>{t.next([]),xe(e,n,a).subscribe((({action:e,items:n})=>{r.post({type:"load_community",value:{action:e,items:n}}),"reset"===e?i=[]:["add","complete"].some((t=>t===e))&&i.push(...n),"complete"===e&&(t.next(i),t.complete())}))}))})))}(t);r.subscribe((t=>{Ae.info("--\x3e community fetched",{unit:"community",data:t})}));const a=r.pipe((0,y.U)((t=>t.filter((t=>t.following)))),(0,y.U)((t=>t.map((t=>t.neuron)))));new ae("transactions",t,s).start(),new be("particles",3e5,t,s).start(),new we("my-friends",3e5,{...t,followings$:a},s).start()}restart(t){this.loops[t]?.restart()}}var Ee=n(63428),Te=n(42965),Pe=n(25211),Ie=n(28368),Me=n(79878),Oe=n(32817),Re=n(41690),ze=n(50145),De=n(25108);const qe=async t=>{if(!t)return"unknown";const e=await(0,ze.pM)(t);return e?.mime||"text/plain"};const Ue=new(n(39387).ZP)("cyber-page-cash");Ue.version(3).stores({cid:"cid",following:"cid"});var Be=Ue;var Le={add:async(t,e)=>{if(!await Be.table("cid").get({cid:t})){const n={cid:t,data:e};Be.table("cid").add(n)}},get:async t=>{const e=await Be.table("cid").get({cid:t});return e?.data||e?.content}},Ne=n(86107);const je="QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB",Fe=`/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/${je}`,He=`/ip4/88.99.105.146/tcp/4001/p2p/${je}`,Ze="https://gateway.ipfs.cybernode.ai";var Qe=(()=>{const t=new Ne.vu("https://io.cybernode.ai");return{add:async e=>{const n="string"==typeof e?new File([e],"file.txt"):e;return t.add(n,{cidVersion:0,rawLeaves:!1})},status:async e=>t.status(e)}})(),We=n(49784),Ve=n(41487),Ge=n.n(Ve),Xe=n(23085).lW;function Ye(t,e){const n=new Blob([t],{type:e});return URL.createObjectURL(n)}function Je(t,e){return`data:${e};base64,${(0,We.B)(t,"base64")}`}const Ke=t=>{if(t){if(t.includes("video"))return"video";if(t.includes("audio"))return"audio"}},tn=/\s?<!doctype html>|(<html\b[^>]*>|<body\b[^>]*>|<x-[^>]+>)+/i;const en=t=>{if(!t)return"other";const e=Ke(t);return e||(-1!==t.indexOf("text/plain")||-1!==t.indexOf("application/xml")?"text":-1!==t.indexOf("image")?"image":-1!==t.indexOf("application/pdf")?"pdf":"other")},nn=async(t,e,n)=>{if(!t||!t?.result)return{gateway:!0,text:e.toString(),cid:e};const{result:s,meta:r}=t,{mime:a,contentType:i}=r;if(!a)return{cid:e,gateway:!0,text:`Can't detect MIME for ${e.toString()}`};const o={link:`/ipfs/${e}`,gateway:!1,cid:t.cid,type:i};if(Ke(a))return{...o,gateway:!0};const c="string"!=typeof s?await(async(t,e)=>{let n=0;try{if(t instanceof Uint8Array)return e&&e(t.byteLength),t;const s=[];if(t instanceof ReadableStream){const r=t.getReader(),a=async({done:t,value:i})=>t?(0,Re.z)(s):(s.push(i),n+=i.byteLength,e&&e(n),r.read().then(a));return await r.read().then(a)}if(Symbol.asyncIterator in t){const r=t[Symbol.asyncIterator]();for await(const t of r)t instanceof Uint8Array&&(s.push(t),n+=t.byteLength,e&&e(n));return(0,Re.z)(s)}return}catch(t){return void De.error("Error reading stream/iterable.\r\n Probably Hot reload error!",t)}})(s,n):s,u="string"==typeof c;if(!c)return{...o,gateway:!0,text:`Can't parse content for ${e.toString()}`};if("text"===o.type){if(!u&&Ge()(Xe.from(c)))return{...o,type:"image",content:Je(c,"image/svg+xml")};const t=u?c:(0,We.B)(c);return t.match(st.fo)?{...o,type:"cid",content:t}:t.match(st._2)?{...o,type:"link",content:t}:function(t){const e=t.trim().slice(0,1e3);return tn.test(e)}(t)?{...o,type:"html",gateway:!0,content:e.toString()}:{...o,link:t.length>42?`/ipfs/${e}`:`/search/${t}`,type:"text",text:yt(t),content:t}}if(!u){if("image"===o.type)return{...o,content:Je(c,a)};if("pdf"===o.type)return{...o,content:Ye(c,a),gateway:!0}}return o},sn=(t,e,n=150)=>{if(t)return"string"==typeof t?t.slice(0,n):e&&"text"===e?(0,We.B)(t).slice(0,n):void 0};var rn=n(25108);const an=async t=>{const e=await Le.get(t);if(e&&e.length){const n=await qe(e),s=en(n),r=sn(e,s);return{result:e,cid:t,meta:{type:"file",size:e.length,sizeLocal:e.length,mime:n,contentType:s},source:"db",textPreview:r}}},on={type:"file",size:void 0,sizeLocal:void 0,blocks:void 0},cn=async(t,e,n)=>{if(e){return await e.stat(t,{signal:n})}return on},un=async(t,e,n)=>{const s=n||new AbortController,{signal:r}=s;let a;if(e){n||(a=setTimeout((()=>{s.abort()}),6e4));try{const n=Date.now(),s=await cn(t,e,r),i=s,o=Date.now();i.statsTime=o-n;const c=!!s.size&&s.size<2e7;if(a&&clearTimeout(a),"directory"===s.type)return{cid:t,availableDownload:!0,source:"node",meta:s};{const{value:n}=await e.cat(t,{signal:r,length:2048,offset:0})[Symbol.asyncIterator]().next();i.mime=await qe(n),i.contentType=en(i.mime);const a=s.size&&s.size>-1&&n.length>=s.size,u=sn(n,i.contentType);a&&await Le.add(t,(0,Re.z)([n]));const d=a?n:c?e.cat(t,{signal:r}):void 0;return i.catTime=Date.now()-o,!i.local&&c?(e.pin(t),i.pinTime=Date.now()-i.catTime):i.pinTime=-1,{result:d,textPreview:u,cid:t,meta:i,source:"node"}}}catch(e){return rn.debug("error fetchIPFSContentFromNode",e),{cid:t,availableDownload:!0,source:"node",meta:{...on}}}}else rn.log("--------fetchIPFSContentFromNode NO NODE INTIALIZED--------")},dn=async(t,e,n,s)=>{const r="external"===e?.nodeType,a=r?await cn(t,e,n?.signal):on,i=`${Ze}/ipfs/${t}`,o=await fetch(i,{method:"GET",signal:n?.signal,headers:s});if(o&&o.body){const e=e=>r?Promise.resolve():Le.add(t,(0,Re.z)(e)),{mime:n,result:s,firstChunk:c}=await async function(t,e){const[n,s]=t.tee(),r=[],a=n.getReader(),{value:i}=await a.read(),o=i?await qe(i):void 0,c=s.getReader(),u={async*[Symbol.asyncIterator](){for(;;){const{done:t,value:n}=await c.read();if(t)return void(e&&e(r,o));e&&r.push(n),yield n}}};return{mime:o,result:u,firstChunk:i}}(o.body,e),u=en(n),d=sn(c,u);return{cid:t,textPreview:d,meta:{...a,mime:n,contentType:u},result:s,source:"gateway",contentUrl:i}}};const ln=async(t,e,n,s)=>{const r=await an(t);if(void 0!==r)return r;if(e){s&&s("trying to get with a node");return await un(t,e,n)}s&&s("trying to get with a gatway");return await dn(t,e,n)},pn=async(t,e)=>{let n;return t&&(n=await t.add(e)),Qe.add(e),n&&await Le.add(n,await(async t=>new Uint8Array("string"==typeof t?Xe.from(t):await t.arrayBuffer()))(e)),n};var mn=n(25108);class hn{constructor(t,e){this.settings=t,this.order=e}getNextSource(t){const e=this.order.indexOf(t);return e<this.order.length?this.order[e+1]:void 0}}class gn extends Error{constructor(t){super(`Timeout after ${t}`),Object.setPrototypeOf(this,gn.prototype)}}const yn="X-Cyb-Source";var fn=(t=>(t.sharedWorker="shared-worker",t))(fn||{}),bn=n(25108);function wn(t){return(t.priority||0)+(t.viewPortPriority||0)}const vn={external:new hn({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e4,maxConcurrentExecutions:30},gateway:{timeout:1e4,maxConcurrentExecutions:11}},["db","node","gateway"]),embedded:new hn({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e4,maxConcurrentExecutions:30},gateway:{timeout:21e3,maxConcurrentExecutions:11}},["db","gateway","node"]),helia:new hn({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e4,maxConcurrentExecutions:50},gateway:{timeout:1e4,maxConcurrentExecutions:11}},["db","node","gateway"])};var Sn=class{constructor(t,{strategy:e,queueDebounceMs:n}){this.queue$=new i.X(new Map),this.node=void 0,this.lastNodeCallTime=Date.now(),this.channel=new Z,this.executing={db:new Set,node:new Set,gateway:new Set},t.subscribe((t=>{t&&this.setNode(t)})),this.strategy=e||vn.embedded,this.queueDebounceMs=n||33,(0,pe.F)(15e3).pipe((0,V.h)((()=>!!this.node&&!![...this.queue$.value.values()].find((t=>"node"===t.source))))).subscribe((()=>{this.node.reconnectToSwarm(!0)}));const s=(0,g.a)([t]).pipe((0,y.U)((([t])=>!!t&&t?.isStarted)),(0,dt.x)(),(0,Y.B)());s.subscribe((t=>{t&&bn.log("🚦 ipfs queue initialized"),this.node?.reconnectToSwarm(!0)})),this.queue$.pipe((0,Ee.M)(s),(0,V.h)((([,t])=>t)),(0,Te.b)(this.queueDebounceMs),(0,y.U)((([t])=>this.cancelDeprioritizedItems(t))),(0,G.z)((t=>{const e=this.getItemBySourceAndPriority(t);return e.length>0?(this.node?.reconnectToSwarm(!1),(0,lt.T)(...e.map((t=>this.fetchData$(t))))):X.E}))).subscribe((({item:t,status:e,source:n,result:s})=>{const{cid:r}=t,a=this.queue$.value.get(r)?.callbacks||[];if(a.map((t=>t(r,e,n,s))),"node"===n&&(this.lastNodeCallTime=Date.now()),this.executing[n].delete(r),"completed"===e||"cancelled"===e)this.removeAndNext(r);else{const e=this.strategy.getNextSource(n);e?this.switchSourceAndNext(t,e):(this.removeAndNext(r),a.map((t=>t(r,"not_found",n,s))))}this.postSummary()}))}switchStrategy(t){this.strategy=t}async setNode(t,e){bn.log(`* switch node from ${this.node?.nodeType||"<none>"} to ${t.nodeType}`),this.node=t,this.switchStrategy(e||vn[t.nodeType])}getItemBySourceAndPriority(t){const e=[...t.values()].filter((t=>"pending"===t.status)),n=le.vMG((t=>t.source),e),s=[];for(const[t,e]of Object.entries(n)){const n=this.strategy.settings[t].maxConcurrentExecutions-this.executing[t].size,r=e.sort(((t,e)=>wn(e)-wn(t))).slice(0,n);s.push(...r)}return s}postSummary(){const t=`(total: ${this.queue$.value.size} |  db - ${this.executing.db.size} node - ${this.executing.node.size} gateway - ${this.executing.gateway.size})`;this.channel.postServiceStatus("ipfs","started",t)}fetchData$(t){const{cid:e,source:n,callbacks:s,controller:r}=t,a=this.strategy.settings[n];this.executing[n].add(e),this.postSummary();const i=this.queue$.value.get(e);return this.queue$.value.set(e,{...i,status:"executing",executionTime:Date.now(),controller:new AbortController}),s.map((t=>t(e,"executing",n))),(o=async()=>async function(t,e,n){const{node:s,controller:r,headers:a}=n;try{switch(e){case"db":return an(t);case"node":return un(t,s,r);case"gateway":return dn(t,s,r,a);default:return}}catch(t){return void rn.log("----fetchIpfsContent error",t)}}(e,n,{controller:r,node:this.node,headers:{[yn]:fn.sharedWorker}}).then((t=>(t&&"db"!==n&&(t=>{et.enqueue({type:"particle",data:{...t,result:void 0}})})(t),t))),new u.y((t=>{o().then((e=>{t.next(e),t.complete()})).catch((e=>{mn.debug("----promiseToObservable error",e),t.error(e)}))}))).pipe((0,Pe.V)({each:a.timeout,with:()=>(0,Ie._)((()=>(r?.abort("timeout"),new gn(a.timeout))))}),(0,y.U)((e=>({item:t,status:e?"completed":"error",source:n,result:e}))),(0,Me.K)((e=>e instanceof gn?(0,Oe.of)({item:t,status:"timeout",source:n}):"AbortError"===e?.name?(0,Oe.of)({item:t,status:"cancelled",source:n}):(0,Oe.of)({item:t,status:"error",source:n}))));var o}mutateQueueItem(t,e){const n=this.queue$.value,s=n.get(t);return s&&n.set(t,{...s,...e}),this.queue$.next(n)}removeAndNext(t){const e=this.queue$.value;e.delete(t),this.queue$.next(e)}switchSourceAndNext(t,e){t.callbacks.map((n=>n(t.cid,"pending",e))),this.mutateQueueItem(t.cid,{status:"pending",source:e})}cancelDeprioritizedItems(t){return["node","gateway"].forEach((e=>{Array.from(this.executing[e]).forEach((n=>{const s=t.get(n);s&&wn(s)<0&&s.controller&&(s.controller.abort("cancelled"),s.callbacks.map((t=>t(s.cid,"pending",s.source))),t.set(n,{...s,status:"pending"}),this.executing[e].delete(n))}))})),t}releaseExecution(t){Object.keys(this.executing).forEach((e=>this.executing[e].delete(t)))}enqueue(t,e,n={}){const s=this.queue$.value,r=s.get(t);if(r)this.mutateQueueItem(t,{callbacks:[...r.callbacks,e]});else{const r=n.initialSource||this.strategy.order[0],a={cid:t,callbacks:[e],source:r,status:"pending",postProcessing:!0,...n};e(t,"pending",r),s.set(t,a),this.queue$.next(s)}}enqueueAndWait(t,e={}){return new Promise((n=>{this.enqueue(t,((t,e,s,r)=>{"completed"!==e&&"not_found"!==e||n({status:e,source:s,result:r})}),e)}))}updateViewPortPriority(t,e){this.mutateQueueItem(t,{viewPortPriority:e})}cancel(t){const e=this.queue$.value.get(t);e&&(e.controller?e.controller.abort("cancelled"):this.removeAndNext(t))}cancelByParent(t){const e=this.queue$.value;e.forEach(((n,s)=>{n.parent===t&&(this.releaseExecution(s),n.controller?.abort("cancelled"),e.delete(s))})),this.queue$.next(e)}clear(){const t=this.queue$.value;t.forEach(((e,n)=>{this.releaseExecution(n),e.controller?.abort("cancelled"),t.delete(n)})),this.queue$.next(new Map)}getQueueMap(){return this.queue$.value}getQueueList(){return Array.from(this.queue$.value.values())}getStats(){return le.zGw(le.VFc(le.vgT("status")),le.Zpf,le.UID(le._Qy(["status","count"])))(this.getQueueList())}},$n=n(89546),xn=n(91026),_n=n(38161);const Cn=t=>_n.k0.parse(t),An=t=>`/ipfs/${t}`;var kn=n(25108);var En=class{constructor(){this.nodeType="external",this._config={},this._isStarted=!1}get config(){return this._config}get isStarted(){return this._isStarted}async initConfig(){const t=await this.node.config.get("Addresses.Gateway");if(!t)return{gatewayUrl:Ze};const e=(0,xn.HM)(t).nodeAddress();return{gatewayUrl:`http://${e.address}:${e.port}`}}async init(t){this.node=(0,$n.Ue)(t),this._config=await this.initConfig(),"undefined"!=typeof window&&(window.node=this.node,window.toCid=Cn),kn.log("IPFS - Kubo addrs",(await this.node.swarm.localAddrs()).map((t=>t.toString()))),this._isStarted=!0}async stat(t,e={}){return this.node.files.stat(An(t),{...e,withLocal:!0,size:!0}).then((t=>{const{type:e,size:n,sizeLocal:s,local:r,blocks:a}=t;return{type:e,size:n||-1,sizeLocal:s||-1,blocks:a}}))}cat(t,e={}){return this.node.cat(Cn(t),e)}async add(t,e={}){return(await this.node.add(t,e)).cid.toString()}async pin(t,e={}){return(await this.node.pin.add(Cn(t),e)).toString()}async getPeers(){return(await this.node.swarm.peers()).map((t=>t.peer.toString()))}async stop(){}async start(){}async connectPeer(t){const e=(0,xn.HM)(t);return await this.node.bootstrap.add(e),await this.node.swarm.connect(e),!0}ls(){return this.node.pin.ls()}async info(){const{repoSize:t}=await this.node.stats.repo(),e=await this.node.id(),{agentVersion:n,id:s}=e;return{id:s.toString(),agentVersion:n,repoSize:t}}},Tn=n(21771),Pn=n(33634),In=n(55472),Mn=n(63718),On=n(99644),Rn=n(79071),zn=n(69850),Dn=n(53184),qn=n(44913),Un=n(46177),Bn=n(57392),Ln=n(15624),Nn=n(35092),jn=n(25108);const Fn={cidVersion:0,rawLeaves:!1};var Hn=class{constructor(){this.nodeType="helia",this._isStarted=!1}get config(){return{gatewayUrl:Ze}}get isStarted(){return this._isStarted}async init(){const t=new Pn.Y("helia-bs");await t.open();const e=new In.s("helia-ds");await e.open();const n=await(async(t,e=[])=>await(0,Mn.N)({datastore:t,transports:[(0,Bn.E)(),(0,Ln.d)(),(0,Un.Z)({rtcConfiguration:{iceServers:[{urls:["stun:stun.l.google.com:19302","stun:global.stun.twilio.com:3478","STUN:freestun.net:3479","STUN:stun.bernardoprovenzano.net:3478","STUN:stun.aa.net.uk:3478"]},{credential:"free",username:"free",urls:["TURN:freestun.net:3479","TURNS:freestun.net:5350"]}]}}),(0,Un.R)(),(0,zn.f)({discoverRelays:1})],connectionEncryption:[(0,On.t)()],streamMuxers:[(0,Rn.P)()],connectionGater:{denyDialMultiaddr:()=>!1},peerDiscovery:[(0,qn.U)({list:e})],services:{identify:(0,Nn.HA)()}}))(e,["/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN","/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa","/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb","/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt","/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB"]);this.node=await(0,Tn.F)({blockstore:t,datastore:e,libp2p:n}),this.fs=(0,Dn.Y4)(this.node),"undefined"!=typeof window&&(window.libp2p=n,window.node=this.node,window.fs=this.fs,window.toCid=Cn),n.addEventListener("peer:connect",(t=>{const e=t.detail.toString(),s=n.getConnections(e)||[],r=Object.fromEntries(s.map((t=>[t.remoteAddr.toString(),t.remoteAddr.protoCodes().map((t=>(0,xn.a_)(t)?.name))])));jn.debug(`Connected to ${e}`,r)})),n.addEventListener("peer:disconnect",(t=>{jn.debug(`Disconnected from ${t.detail.toString()}`)})),jn.log("IPFS - Helia addrs",n.getMultiaddrs().map((t=>t.toString()))),this._isStarted=!0}async stat(t,e={}){return this.fs.stat(Cn(t),e).then((t=>{const{type:e,fileSize:n,localFileSize:s,blocks:r,dagSize:a,mtime:i}=t;return{type:e,size:n||-1,sizeLocal:s||-1,blocks:r}}))}cat(t,e={}){return this.fs.cat(Cn(t),e)}async add(t,e={}){const n={...e,...Fn};let s;if(t instanceof File){const e=t.name,r=await t.arrayBuffer(),a=new Uint8Array(r);s=await this.fs.addFile({path:e,content:a},n)}else{const e=(new TextEncoder).encode(t);s=await this.fs.addBytes(e,n)}return this.pin(s.toString(),e),s.toString()}async pin(t,e={}){const n=Cn(t);if(!await(this.node?.pins.isPinned(n,e))){(await(this.node?.pins.add(n,e)))?.cid.toString()}}async getPeers(){return this.node.libp2p.getConnections().map((t=>t.remotePeer.toString()))}async stop(){await(this.node?.stop())}async start(){await(this.node?.start())}async connectPeer(t){await this.node.libp2p.dial((0,xn.HM)(t));return!0}ls(){const t=async function*(t){for await(const e of t){const{cid:t,metadata:n}=e;yield{cid:t.toV0(),metadata:n,type:"recursive"}}}(this.node.pins.ls());return t}async info(){return{id:this.node.libp2p.peerId.toString(),agentVersion:this.node.libp2p.services.identify.host.agentVersion,repoSize:-1}}},Zn=n(27864),Qn=n(38134);var Wn=()=>({start:!0,repo:"ipfs-repo-cyber-v2",relay:{enabled:!1,hop:{enabled:!1}},preload:{enabled:!1},config:{API:{HTTPHeaders:{"Access-Control-Allow-Methods":["PUT","POST"],"Access-Control-Allow-Origin":["http://localhost:3000","http://127.0.0.1:5001","http://127.0.0.1:8888","http://localhost:8888"]}},Addresses:{Gateway:"/ip4/127.0.0.1/tcp/8080",Swarm:[],Delegates:[]},Discovery:{MDNS:{Enabled:!0,Interval:10},webRTCStar:{Enabled:!1}},Bootstrap:[],Pubsub:{Enabled:!1},Swarm:{ConnMgr:{HighWater:300,LowWater:50},DisableNatPortMap:!1},Routing:{Type:"dhtclient"}},libp2p:{transports:[(0,Bn.E)({filter:Qn.FR})],nat:{enabled:!1}},EXPERIMENTAL:{ipnsPubsub:!1}});var Vn=class{constructor(){this.nodeType="embedded",this._isStarted=!1}get config(){return{gatewayUrl:Ze}}get isStarted(){return this._isStarted}async init(){this.node=await(0,Zn.Ue)(Wn()),"undefined"!=typeof window&&(window.node=this.node,window.toCid=Cn),this._isStarted=!0}async stat(t,e={}){return this.node.files.stat(An(t),{...e,withLocal:!0,size:!0}).then((t=>{const{type:e,size:n,sizeLocal:s,local:r,blocks:a}=t;return{type:e,size:n||-1,sizeLocal:s||-1,blocks:a}}))}cat(t,e={}){return this.node.cat(Cn(t),e)}async add(t,e={}){return(await this.node.add(t,e)).cid.toString()}async pin(t,e={}){return(await this.node.pin.add(Cn(t),e)).toString()}async getPeers(){return(await this.node.swarm.peers()).map((t=>t.peer.toString()))}async stop(){}async start(){}async connectPeer(t){const e=(0,xn.HM)(t);return await this.node.bootstrap.add(e),await this.node.swarm.connect(e),!0}ls(){return this.node.pin.ls()}async info(){const t=await this.node.stats.repo(),e=Number(t.repoSize),n=await this.node.id(),{agentVersion:s,id:r}=n;return{id:r.toString(),agentVersion:s,repoSize:e}}},Gn=n(25108);const Xn={helia:Hn,embedded:Vn,external:En};async function Yn(t){const{ipfsNodeType:e,...n}=t,s=function(t,e){return class extends t{async fetchWithDetails(t,e,n){const s=await ln(t,this,n),r=await nn(s,t);return e?r?.type===e?r:void 0:r}async addContent(t){return pn(this,t)}async isConnectedToSwarm(){return!!(await super.getPeers()).find((t=>t===e.swarmPeerId))}async reconnectToSwarm(t=!1){await this.isConnectedToSwarm()&&!t||super.connectPeer(e.swarmPeerAddress).then((()=>(Gn.log(`🐝 connected to swarm - ${e.swarmPeerAddress}`),!0))).catch((t=>(Gn.log(`Can't connect to swarm ${e.swarmPeerAddress}: ${t.message}`),!1)))}}}(Xn[e],{swarmPeerId:je,swarmPeerAddress:"external"===e?He:Fe}),r=new s;return await r.init({url:n.urlOpts}),await r.reconnectToSwarm(),r}var Jn=n(25108);var Kn=n(37242),ts=n(70003),es=n(25108);Kn.OBj.allowLocalModels=!1;const ns={featureExtractor:{name:"feature-extraction",model:"Xenova/all-MiniLM-L6-v2"}},ss=(t,e)=>{const n=new a.x,r=((t,e)=>{const n=new ts.t(1);return(0,g.a)([t,e]).subscribe((([t,e])=>{if(t&&e){const r=async t=>(await e(t,{pooling:"mean",normalize:!0})).data,a=async(e,n)=>{const s=await r(e);return await t.searchByEmbedding(s,n)},i={createEmbedding:r,searchByEmbedding:a};n.next((0,s.sj)(i))}})),n})(t,n),i=async t=>{const{name:s,model:r}=ns[t],a=await((t,e,n)=>(0,Kn.EUT)(t,e,{progress_callback:t=>{try{const{status:s,progress:r,loaded:a,total:i}=t,o=a?`${e} - ${a}/${i} bytes`:e,c=["ready","error"].some((t=>t===s)),u={status:s,message:o,done:c,progress:r?Math.round(r):0};n(u)}catch(t){es.log("-------progresss error",e,t.toString())}}}))(s,r,(n=>e.postMlSyncEntryProgress(t,n)));"feature-extraction"===s&&n.next(a),es.log(`${t} - loaded`)},o=async()=>(e.postServiceStatus("ml","starting"),es.time("🔋 ml initialized"),Promise.all([i("featureExtractor")]).then((t=>(setTimeout((()=>e.postServiceStatus("ml","started")),0),es.timeEnd("🔋 ml initialized"),t))).catch((t=>e.postServiceStatus("ml","error",t.toString()))));return o(),{embeddingApi$:r,init:o}};var rs=n(49734),as=n(44586);var is='pub fn pass() {\n    #{ "action": "pass" }\n}\n\npub fn hide() {\n    #{ "action": "hide" }\n}\n\npub fn cid_result(cid) {\n    #{ "cid": cid, "action": "cid_result" }\n}\n\npub fn content_result(content) {\n    // #{ "content": json::to_string(content)?, "action": "content_result" }\n    #{ "content": content, "action": "content_result" }\n}\n\npub fn error(message) {\n    #{ "message": message, "action": "error" }\n}\n\npub fn meta_text(text) {\n    #{ "text": text, "type": "text" }\n}\n\npub fn meta_link(url, title) {\n    #{ "url": url, "title": title, "type": "link" }\n}\n\npub async fn async_callback(data) {\n    cyb::log("asyc callback from rune");\n\n    //    cyb::callback(cyb::ref_id, data).await\n}\n',os=n(5662),cs=n(25108);const us={budget:1e6,experimental:!1,instructions:!1,options:[]},ds={readOnly:!1,execute:!0,funcName:"main",funcParams:{},params:{},input:'/*\n    Any information here, will be shown in the description of your soul.\n    [template]\n*/\n\n// CODE EXAMPLES\n\n// your content for <citizen_name>.moon domain\npub async fn moon_domain_resolver() {\n    // get nickname of domain resolver at the momemnt\n    let nickname =  cyb::context.user.nickname;\n\n    let rng = rand::WyRand::new();\n    let rand_int = rng.int_range(0, 999999);\n\n    return content_result(`Hello, ${nickname}, your lucky number is ${rand_int} 🎉`);\n\n    // substitute with some CID (ipfs hosted app in this case)\n    // return cid_result("QmcqikiVZJLmum6QRDH7kmLSUuvoPvNiDnCKY4A5nuRw17")\n}\n\n// Extend particle page with custom UI elements\npub async fn ask_companion(cid, content_type, content) {\n    // plain text item\n    let links = [meta_text("similar: ")];\n    let rows = [links];\n\n    // search closest 5 particles using local data from the brain\n    let similar_results = cyb::search_by_embedding(content, 5).await;\n\n\n    for v in similar_results {\n        // link item\n        links.push(meta_link(`/oracle/ask/${v.cid}`, v.text));\n    }\n\n    if links.len() == 1 {\n        links = [meta_text("no similar particles found")];\n    }\n\n\tlet secrets = cyb::context.secrets;\n    if let Some(api_key) = secrets.get("openAI_key") {\n        let messages = [\n            #{\n                "role": "system",\n                "content": "You should give description or summary of any content. aswer should not exceed 32 words"\n            },\n            #{\n                "role": "user",\n                "content": content\n            }\n        ];\n\n        let inference = cyb::open_ai_completions(messages, api_key, #{"model": "gpt-3.5-turbo"}).await;\n        rows.push([meta_text(`inference: ${inference}`)]);\n    }\n\n    return content_result(rows)\n}\n\n// Transform content of the particle\npub async fn personal_processor(cid, content_type, content) {\n\n    // skip any non-text content\n    if content_type != "text" {\n        return pass()\n    }\n\n    // <citizen_name>.moon domain resolver\n    if content.ends_with(".moon") {\n        let items = content.split(".").collect::<Vec>();\n\n        let username = items[0];\n        let ext = items[1];\n\n        if username.len() <= 14 && ext == "moon" {\n\n            // get passport data by username\n            let passport = cyb::get_passport_by_nickname(username).await;\n\n            // particle - CID of soul script\n            let particle_cid = passport["extension"]["particle"];\n\n            cyb::log(`Resolve ${username} domain from passport particle \'${particle_cid}\'`);\n\n            // resolve content(script) by cid\n            // evaluate \'moon_domain_resolver\' from that\n            let result = cyb::eval_script_from_ipfs(particle_cid, "moon_domain_resolver", []).await;\n\n            return result\n        }\n    }\n\n    // example of content exclusion from the search results\n    let buzz_word = "пиздопроебанное хуеплетство";\n\n    if content.contains(buzz_word) {\n        cyb::log(`Hide ${cid} item because of \'${buzz_word}\' in the content`);\n        return hide()\n    }\n\n\n    // example of content modification\n    // replaces cyber with cyber❤\n    let highlight_text = "cyber ";\n    let highlight_with = "❤ ";\n\n    if content.contains(highlight_text) {\n        cyb::log(`Update ${cid} content, highlight ${highlight_text}${highlight_with}`);\n        return content_result(content.replace(highlight_text, `${highlight_text}${highlight_with}`))\n    }\n\n    // replace <token_name>@NOW (ex. bitcoin@NOW) with actual price in usdt\n    // using external api call\n    if content.contains("@NOW") {\n        let left_part = content.split("@NOW").next().unwrap();\n        let token_name = left_part.split(" ").rev().next().unwrap();\n        let vs_currency = "usd";\n\n        // external url call\n        let json =  http::get(`https://api.coingecko.com/api/v3/simple/price?ids=${token_name}&vs_currencies=${vs_currency}`).await?.json().await?;\n        return content_result(content.replace(`${token_name}@NOW`, `Current ${token_name} price is ${json[token_name][vs_currency]} ${vs_currency}`))\n    }\n\n    // anything else\n\tcontent = content.replace("хуй", "🌽").replace("хуя", "🌽").replace("хуе", "🌽");\n\n    content_result(content)\n}',script:is};const ls=function(){let t={},e={params:{},user:{},secrets:{}};const n=new i.X(!1),s=new i.X({}),r=new Map,a=new ts.t(1);(0,g.a)([n,s]).pipe((0,y.U)((([t,e])=>!(!t||!e.particle))),(0,dt.x)()).subscribe((t=>{a.next(t)})),s.subscribe((e=>{t=e}));const o=async(t,n,s)=>{const a=(0,as.Z)().toString();s&&r.set(a,s);const i={...ds,...n,input:t,script:is,params:{app:e,refId:a}},o=await(0,rs.MY)(i,us),{result:c,error:u}=o;try{return r.delete(a),{...oe(o),error:u,result:c?JSON.parse((d=c,d.replace(ft,""))):{action:"error",message:"No result"}}}catch(t){return r.delete(a),cs.log(`engine.run err ${i.funcName}`,t,o,i),{diagnosticsOutput:`scripting engine error ${t}`,...o,result:{action:"error",message:t?.toString()||"Unknown error"}}}var d},c=()=>{if(!t.particle)return["error",""];const{script:e,enabled:n}=t.particle;return n?["script",e]:["pass",""]};return{init:async()=>{cs.time("🔋 rune initialized"),await(0,rs.ZP)(),cs.timeEnd("🔋 rune initialized"),n.next(!0)},isSoulInitialized$:a,run:o,askCompanion:async(t,e,n,s)=>{const[r,a]=c();if("error"===r)return{action:"error",metaItems:[[{type:"text",text:"No particle entrypoint"}]]};if("pass"===r)return{action:"pass",metaItems:[]};const i=await o(a,{funcName:"ask_companion",funcParams:[t,e,n]},s);return"error"===i.result.action?(cs.error("---askCompanion error",i),{action:"error",metaItems:[[{type:"text",text:i.error}]]}):{action:"answer",metaItems:i.result.content}},personalProcessor:async t=>{const[e,n]=c();if("error"===e)return{action:"error",message:"No particle entrypoint"};if("script"!==e)return{action:"pass"};const{cid:s,contentType:r,content:a}=t,i=await o(n,{funcName:"personal_processor",funcParams:[s,r,a]}),{action:u,content:d}=i.result;return"error"===u&&cs.error(`RUNE: personalProcessor error: ${t.cid}`,t,i),d?{...i.result,content:d}:i.result},setEntrypoints:e=>{t=(0,le.IDH)((t=>({...t,script:(0,os.P6)(t.script)})),e),s.next(t)},pushContext:(t,n)=>{e[t]=n},popContext:t=>{const n=e;t.forEach((t=>{n[t]={}})),e=n},executeFunction:async(t,e,n)=>{cs.log("-----executeFunction rune",e,n);return(await o(t,{funcName:e,funcParams:n,readOnly:!0})).result},executeCallback:async(t,e)=>{const n=r.get(t);n&&await n(e)},getDebug:()=>({context:e,entrypoints:t})}}();var ps=ls,ms=n(9328);const hs=(()=>{const t=new Z,e=new a.x,n=new i.X({myAddress:null}),{embeddingApi$:o}=ss(e,t),{setInnerDeps:c,rune:u}=((t,e,n)=>{const s=t=>ms.Z.setInnerDeps(t);return t.subscribe((t=>{s({embeddingApi:t})})),e.subscribe((t=>{s({dbApi:t})})),ps.isSoulInitialized$.subscribe((t=>{t?setTimeout((()=>n.postServiceStatus("rune","started")),0):n.postServiceStatus("rune","inactive")})),(async()=>{n.postServiceStatus("rune","starting"),await ps.init(),s({rune:ps})})(),{rune:ps,setInnerDeps:s}})(o,e,t),{ipfsQueue:d,ipfsInstance$:l,api:p}=((t,e)=>{const n=new i.X(void 0),s=new Sn(n,{rune:t}),r={start:async t=>{try{if(n.getValue())return setTimeout((()=>e.postServiceStatus("ipfs","started")),0),Promise.resolve();e.postServiceStatus("ipfs","starting"),Jn.time("🔋 ipfs initialized");const s=await Yn(t);return Jn.timeEnd("🔋 ipfs initialized"),n.next(s),setTimeout((()=>e.postServiceStatus("ipfs","started")),0),!0}catch(t){Jn.log("----ipfs node init error ",t);const n=t instanceof Error?t.message:t;throw e.postServiceStatus("ipfs","error",n),Error(n)}},stop:async()=>{const t=n.getValue();t&&await t.stop(),n.next(void 0),e.postServiceStatus("ipfs","inactive")},config:async()=>n.getValue()?.config,info:async()=>n.getValue()?.info(),fetchWithDetails:async(t,e,s)=>{const r=n.getValue();if(!r)throw new Error("ipfs node not initialized");return r.fetchWithDetails(t,e,s)},enqueue:async(t,e,n)=>s.enqueue(t,e,n),enqueueAndWait:async(t,e)=>s.enqueueAndWait(t,e),dequeue:async t=>s.cancel(t),dequeueByParent:async t=>s.cancelByParent(t),clearQueue:async()=>s.clear(),addContent:async t=>n.getValue()?.addContent(t)};return{ipfsInstance$:n,ipfsQueue:s,api:r}})(u,t),m={waitForParticleResolve:(t,e=r.MEDIUM)=>d.enqueueAndWait(t,{postProcessing:!1,priority:e}),dbInstance$:e,ipfsInstance$:l,embeddingApi$:o,params$:n};new ke(m);return c({ipfsApi:p}),{injectDb:t=>e.next(t),isIpfsInitialized:()=>!!l.getValue(),ipfsApi:(0,s.sj)(p),rune:(0,s.sj)(u),embeddingApi$:o,ipfsQueue:(0,s.sj)(d),setRuneDeps:t=>c(t),setParams:t=>n.next({...n.value,...t})}})();var gs,ys;gs=self,ys=hs,m(),void 0!==gs.onconnect?gs.onconnect=t=>{const e=t.ports[0];h(e),(0,s.Jj)(ys,e)}:(0,s.Jj)(ys)},5662:function(t,e,n){"use strict";function s(t){const{script:e,markdown:n,hasRune:s}=function(t){const e=/```rune\s*([\s\S]*?)```/g;let n,s="",r=t,a=!1;for(;null!==(n=e.exec(t));)a=!0,s+=n[1]+"\n",r=r.replace(n[0],"");return{script:s.trim(),markdown:r,hasRune:a}}(t);return s?e:n}n.d(e,{P6:function(){return s}})},9328:function(t,e,n){"use strict";n.d(e,{Z:function(){return $}});var s=n(86515),r=n(95196),a=n(6970),i=n(67937),o=n(9385),c=n(67294);n(85893),n(25108);c.createContext(void 0);var u=n(28972),d=n(71257),l=n(59457);var p=n(25108);const m="bostrom1xut80d09q0tgtch8p0z4k5f88d3uvt8cvtzm5h3tu3tsy4jk9xlsfzhxel",h=async(t,e)=>{try{const t=await async function(t){return(await d.Z.get(`${l.Z.bostrom.LCD_URL}/cosmwasm/wasm/v1/contract/${m}/smart/${(0,u.s3)((0,u.Dp)(JSON.stringify(t)))}`)).data.data}(e);return t}catch(t){return p.log("error",t),null}};var g=n(21466),y=n(93994).Z;class f extends Error{constructor(t){let e="",n=-1;t instanceof Array?e=t.join("\r\n"):t.rawLog?(e=t.rawLog.toString(),n=t.code):e=e?.error,super(e),y.error(e,{error:t}),this.code=n}}const b={amount:[],gas:i.ex.toString()},w=async(t,e,n,{senseApi:s,signingClient:r},a=b)=>{const i=(t=>{if(t instanceof Array||0!==t.code)throw new f(t);return t})(await r.cyberlink(t,e,n,a)),{transactionHash:o}=i,c={from:e,to:n,transactionHash:o,timestamp:(0,g.qQ)(),neuron:t};return await(s?.putCyberlink(c)),await(s?.addCyberlinkLocal(c)),o};var v=n(5662);const S=(()=>{const t={ipfsApi:new s.X(void 0),rune:new s.X(void 0),queryClient:new s.X(void 0),embeddingApi:new s.X(void 0),signingClient:new s.X(void 0),senseApi:new s.X(void 0),address:new s.X(void 0),dbApi:new s.X(void 0)},e=e=>new Promise((n=>{const s=t[e];s.getValue()&&n(s.getValue()),s.pipe((0,r.P)((t=>!!t))).subscribe((t=>{n(t)}))}));a.CyberClient.connect(i.$G).then((e=>{t.queryClient?.next(e)}));const n=async t=>(await e("ipfsApi")).fetchWithDetails(t,"text"),c={graphSearch:async(t,n=0)=>{const s=await e("queryClient"),r=await(0,o.uP)(t);return(0,o.ae)(s,r,n)},cyberlink:async(n,s)=>{const r=t.address.getValue();if(!r)throw new Error("Connect your wallet first");const a=await e("senseApi"),i=await e("signingClient");return w(r,n,s,{senseApi:a,signingClient:i})},getPassportByNickname:async t=>{await e("queryClient");const n=await(async(t,e)=>{try{const t={passport_by_nickname:{nickname:e}};return await h(0,t)}catch(t){return p.log("error",t),null}})(0,t);return n},searcByEmbedding:async(t,n=10)=>{const s=await e("embeddingApi");return await e("dbApi"),s.searchByEmbedding(t,n)},evalScriptFromIpfs:async(t,s,r={})=>{try{const a=await n(t);if(void 0===a?.content)return{action:"error",message:"Particle not found"};const i=(0,v.P6)(a.content);return(await e("rune")).executeFunction(i,s,r)}catch(t){return{action:"error",message:t.toString()}}},getIpfsTextConent:n,addContenToIpfs:async t=>(await e("ipfsApi")).addContent(t),executeScriptCallback:async(t,n={})=>{try{return(await e("rune")).executeCallback(t,n)}catch(t){return{action:"error",message:t.toString()}}}};return{setInnerDeps:e=>{Object.keys(e).filter((t=>void 0!==e[t])).forEach((n=>{const s=e[n];t[n].next(s)}))},cybApi:c}})();var $=S},81286:function(t,e,n){"use strict";n.d(e,{ZT:function(){return g},yF:function(){return l},D_:function(){return b},eU:function(){return w},rB:function(){return d},gd:function(){return m},Y9:function(){return v},YQ:function(){return h},Mv:function(){return p},hH:function(){return y},v$:function(){return f}});var s=n(9385),r=n(9328),a=n(71257),i=n(25108);const o={model:"gpt-3.5-turbo"},c=async(t,e,n={})=>{const s={method:"post",url:"https://api.openai.com/v1/chat/completions",data:{messages:t,...o,...n},headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},responseType:n.stream?"stream":"json"},r=await(0,a.Z)(s);if(n.stream){return{[Symbol.asyncIterator]:async function*(){let t="";for await(const e of r.data){const n=e.toString().split("\n").filter((t=>""!==t.trim()));for(const e of n){const n=e.replace(/^data: /,"");if("[DONE]"===n)return;try{const e=JSON.parse(n);t+=e.choices[0].delta.content,yield e.choices[0].delta.content}catch(t){i.error("Error parsing stream message:",n,t)}}}}}}return i.log("response",r),r.data.choices[0].message.content};var u=n(25108);async function d(t){return r.Z.cybApi.graphSearch(t)}async function l(t,e){return r.Z.cybApi.cyberlink(t,e)}async function p(t){return r.Z.cybApi.getPassportByNickname(t)}async function m(t,e,n={}){return r.Z.cybApi.evalScriptFromIpfs(t,e,n)}async function h(t){return r.Z.getIpfsTextConent(t)}async function g(t){return r.Z.addContenToIpfs(t)}async function y(t,e,n,s){return await c(t,e,n)}async function f(t,e){return r.Z.cybApi.searcByEmbedding(t,e)}async function b(t){return await(0,s.Aw)(t)}async function w(t){return await(0,s.wt)(t)}async function v(t,e){return u.log("exec deps callback",t),r.Z.cybApi.executeScriptCallback(t,e)}},85607:function(t,e,n){"use strict";n.d(e,{p:function(){return s}});var s=(t=>(t.BOSTROM="bostrom",t.SPACE_PUSSY="space-pussy",t.ETH="eth",t.OSMO="osmo",t.TERRA="terra",t.COSMOS="cosmoshub-4",t))(s||{})},26720:function(t,e,n){"use strict";n.d(e,{fE:function(){return s}});const s={STAGE_TWEET_ACTION_BAR:{ADD_AVATAR:"addAvatar",FOLLOW:"follow",TWEET:"tweet"}}},21466:function(t,e,n){"use strict";n.d(e,{VE:function(){return i},gB:function(){return a},qQ:function(){return o}});var s=n(48116),r=n.n(s);const a=t=>r()(new Date(t),'yyyy-mm-dd"T"HH:MM:ss.l',!0),i=t=>Date.parse(t.endsWith("Z")?t:`${t}Z`),o=()=>Date.now()},51573:function(t,e,n){"use strict";n.d(e,{Uy:function(){return o}});var s=n(89862),r=n.n(s),a=n(6581),i=(n(96486),n(66392),n(23085).lW);const o=t=>new Promise(((e,n)=>{const s=new(r())("file",i.from(t)).marshal();a.DAGNode.create(s,((t,s)=>{t&&n(new Error("Cannot create ipfs DAGNode")),a.util.cid(s,((t,n)=>{e(n.toBaseEncodedString())}))}))}))},96407:function(t,e,n){"use strict";n.d(e,{bG:function(){return s}});const s="CYBLOG_BROADCST_CHANNEL"},93994:function(t,e,n){"use strict";n.d(e,{B:function(){return c}});var s=n(96486),r=n.n(s),a=n(96407),i=n(25108);const o=[];const c=(t={})=>{const e=new BroadcastChannel(a.bG);function n(n,s,r){const a={...t,...r};r?.error&&(a.error=JSON.stringify(r.error)),e.postMessage({type:"log",value:{level:n,message:s,context:a}})}return{info:function(t,e){return n("info",t,e)},error:function(t,e){return n("error",t,e)},warn:function(t,e){return n("warn",t,e)},trace:function(t,e){return n("warn",t,e)}}},u=function(t={}){let e={};function n(n,a,c=t){try{const t=c?.formatter?c?.formatter(a):a;!function(t,e=!0){for(o.push(t);e&&o.length>1e3;)o.shift()}({timestamp:new Date,level:n,message:t,stacktrace:c?.stacktrace,context:r().omit(c,["formatter","stacktrace"])});Object.keys(e).reduce(((t,n)=>{const s=e[n],r=c[n];return s&&r?t||"all"===s||0===s.length||s.some((t=>t===r)):t}),!1)&&function(t,e,n){const a=r().omit(n,["formatter","thread","module","unit","data"]),{thread:o="",module:c="",unit:u="",data:d=""}=n,l=(0,s.isEmpty)(a)?"":a;Array.isArray(e)?i[t](...e,l):n?.formatter?i[t](n?.formatter(e),l):i[t](`[${o}:${c}:${u}] ${e}`,d,l)}(n,a,c)}catch(t){i.log("cyblog error",t)}}return new BroadcastChannel(a.bG).onmessage=t=>{"params"===t.data.type&&(e={...e,...t.data.value})},{log:n,info:function(t,e){return n("info",t,e)},error:function(t,e){return n("error",t,e)},warn:function(t,e){return n("warn",t,e)},trace:function(t,e){return n("warn",t,e)},logList:o,getLogs:()=>o.map((t=>{const{context:e,...n}=t,{unit:s="",module:r="",thread:a="",data:i="",error:o="",stacktrace:c=""}=e||{};return{...n,unit:s,module:r,thread:a,data:i,error:o,stacktrace:c}})),clear:()=>o.splice(0,o.length),getConsoleLogParams:()=>e}}({thread:"main"});e.Z=u},9385:function(t,e,n){"use strict";n.d(e,{Aw:function(){return l},ae:function(){return h},uP:function(){return m},wt:function(){return p}});var s=n(71257),r=n(67937),a=n(6998),i=n(66392),o=n(51573),c=n(41360),u=n(25108);const d=async(t,e=a.c.from,{offset:n,limit:i,order:o="ORDER_BY_DESC"})=>{try{return(await(0,s.Z)({method:"get",url:`${r.j9}/cosmos/tx/v1beta1/txs`,params:{"pagination.offset":n,"pagination.limit":i,orderBy:"ORDER_BY_DESC",events:`cyberlink.particle${e===a.c.to?"To":"From"}='${t}'`}})).data}catch(t){return u.log(t),null}},l=async(t,e,n)=>d(t,a.c.from,{offset:e,limit:n}),p=async(t,e,n)=>d(t,a.c.to,{offset:e,limit:n});const m=async t=>t.match(i.fo)?t:(0,o.Uy)((0,c.lG)(t)),h=async(t,e,n)=>{try{return await t.search(e,n)}catch(t){return void u.error(t)}}},41360:function(t,e,n){"use strict";n.d(e,{lG:function(){return s}});n(92882),n(28972),n(79562),n(905),n(67937),n(26720),n(11450),n(33156),n(72717),n(25108),n(23085).lW;const s=t=>t.replace(/%2F/g,"/")},72717:function(t,e,n){"use strict";t.exports=n.p+"large-green.3c95bb997b.png"},33156:function(t,e,n){"use strict";t.exports=n.p+"large-orange-circle.b531e8352d.png"},11450:function(t,e,n){"use strict";t.exports=n.p+"large-purple-circle.23506e149e.png"},67064:function(){},81949:function(){},95856:function(){},35883:function(){},50495:function(){},27147:function(){},31418:function(){},68741:function(){},70319:function(){},78386:function(){},73342:function(){},95926:function(){},80950:function(){},46601:function(){},89214:function(){},96419:function(){},56353:function(){},8623:function(){},7748:function(){},85568:function(){},69386:function(){},31616:function(){},66778:function(){},10465:function(){},52596:function(){},63897:function(){},85104:function(){},83886:function(){},52:function(){},75992:function(){},78110:function(){},56619:function(){},25819:function(){},77108:function(){},81265:function(){},35539:function(){},99283:function(){},43838:function(){},69862:function(){},40964:function(){}},a={};function i(t){var e=a[t];if(void 0!==e)return e.exports;var n=a[t]={id:t,loaded:!1,exports:{}};return r[t].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}i.m=r,i.x=function(){var t=i.O(void 0,[464,759,55,805,746,356,529],(function(){return i(63112)}));return t=i.O(t)},i.amdO={},t=[],i.O=function(e,n,s,r){if(!n){var a=1/0;for(d=0;d<t.length;d++){n=t[d][0],s=t[d][1],r=t[d][2];for(var o=!0,c=0;c<n.length;c++)(!1&r||a>=r)&&Object.keys(i.O).every((function(t){return i.O[t](n[c])}))?n.splice(c--,1):(o=!1,r<a&&(a=r));if(o){t.splice(d--,1);var u=s();void 0!==u&&(e=u)}}return e}r=r||0;for(var d=t.length;d>0&&t[d-1][2]>r;d--)t[d]=t[d-1];t[d]=[n,s,r]},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},n=Object.getPrototypeOf?function(t){return Object.getPrototypeOf(t)}:function(t){return t.__proto__},i.t=function(t,s){if(1&s&&(t=this(t)),8&s)return t;if("object"==typeof t&&t){if(4&s&&t.__esModule)return t;if(16&s&&"function"==typeof t.then)return t}var r=Object.create(null);i.r(r);var a={};e=e||[null,n({}),n([]),n(n)];for(var o=2&s&&t;"object"==typeof o&&!~e.indexOf(o);o=n(o))Object.getOwnPropertyNames(o).forEach((function(e){a[e]=function(){return t[e]}}));return a.default=function(){return t},i.d(r,a),r},i.d=function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.f={},i.e=function(t){return Promise.all(Object.keys(i.f).reduce((function(e,n){return i.f[n](t,e),e}),[]))},i.u=function(t){return 464===t?"464.f1325ab5.js":759===t?"759.65936a36.js":55===t?"55.2957109b.js":t+"."+{356:"cf28752a",529:"7db089b9",746:"35674002",805:"51fd1425",827:"75086733"}[t]+".chunk.js"},i.miniCssF=function(t){},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.hmd=function(t){return(t=Object.create(t)).children||(t.children=[]),Object.defineProperty(t,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+t.id)}}),t},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},i.p="/",function(){i.b=self.location+"";var t={757:1};i.f.i=function(e,n){t[e]||importScripts(i.p+i.u(e))};var e=self.webpackChunkcyb=self.webpackChunkcyb||[],n=e.push.bind(e);e.push=function(e){var s=e[0],r=e[1],a=e[2];for(var o in r)i.o(r,o)&&(i.m[o]=r[o]);for(a&&a(i);s.length;)t[s.pop()]=1;n(e)}}(),s=i.x,i.x=function(){return Promise.all([464,759,55,805,746,356,529].map(i.e,i)).then(s)};i.x()}();
//# sourceMappingURL=757.48d51fca.chunk.js.map