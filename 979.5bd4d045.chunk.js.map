{"version":3,"file":"979.5bd4d045.chunk.js","mappings":"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","sources":["webpack://cyb/webpack/runtime/chunk loaded","webpack://cyb/webpack/runtime/create fake namespace object","webpack://cyb/webpack/runtime/startup chunk dependencies","webpack://cyb/./src/components/AvailableAmount/AvailableAmount.module.scss","webpack://cyb/./src/components/ButtonSwap/index.module.scss","webpack://cyb/./src/components/CreatedAt/CreatedAt.module.scss","webpack://cyb/./src/components/DonutChart/DonutChart.module.scss","webpack://cyb/./src/components/Dot/Dot.module.scss","webpack://cyb/./src/components/ErrorBoundary/APIError/APIError.module.scss","webpack://cyb/./src/components/FormatNumberTokens/FormatNumberTokens.module.scss","webpack://cyb/./src/components/Iframe/styles.scss","webpack://cyb/./src/components/Input/Input.module.scss","webpack://cyb/./src/components/LinearGradientContainer/LinearGradientContainer.module.scss","webpack://cyb/./src/components/MainContainer/styles.module.scss","webpack://cyb/./src/components/Rank/QuestionBtn/QuestionBtn.module.scss","webpack://cyb/./src/components/Row/Row.module.scss","webpack://cyb/./src/components/SearchItem/styles.module.scss","webpack://cyb/./src/components/Select/Select.module.scss","webpack://cyb/./src/components/Slider/Slider.module.scss","webpack://cyb/./src/components/Tabs/TabItem/TabItem.module.scss","webpack://cyb/./src/components/Tabs/Tabs.module.scss","webpack://cyb/./src/components/TextMarkdown/styles.module.scss","webpack://cyb/./src/components/account/account.module.scss","webpack://cyb/./src/components/actionBar/styles.module.scss","webpack://cyb/./src/components/btnGrd/Button.module.scss","webpack://cyb/./src/components/buttons/AddFile/AddFile.module.scss","webpack://cyb/./src/components/buttons/ButtonIcon/ButtonIcon.module.scss","webpack://cyb/./src/components/containerGradient/ContainerGradient.module.scss","webpack://cyb/./src/components/containerGradient/Display/Display.module.scss","webpack://cyb/./src/components/containerGradient/DisplayTitle/DisplayTitle.module.scss","webpack://cyb/./src/components/contentIpfs/component/Audio/Audio.module.scss","webpack://cyb/./src/components/contentIpfs/component/gateway/steles.scss","webpack://cyb/./src/components/contentIpfs/component/img/steles.scss","webpack://cyb/./src/components/governance/styles.module.scss","webpack://cyb/./src/components/link/cid.modules.scss","webpack://cyb/./src/components/statistics/styles.module.scss","webpack://cyb/./src/components/time/time.module.scss","webpack://cyb/./src/components/tooltip/Tooltip.module.scss","webpack://cyb/./src/components/ui/Copy.module.scss","webpack://cyb/./src/components/ui/Dots.module.scss","webpack://cyb/./src/components/ui/Loading.module.scss","webpack://cyb/./src/components/valueImg/TextDenom.module.scss","webpack://cyb/./src/components/valueImg/ValueImg.module.scss","webpack://cyb/./src/components/vitalik/Vitalik.module.scss","webpack://cyb/./src/containers/portal/components/avataIpfs/styles.module.scss","webpack://cyb/./src/pages/Social/GitHub/GitHub.module.scss","webpack://cyb/./src/pages/Social/Social.module.scss","webpack://cyb/./src/pages/Social/Telegram/Telegram.module.scss","webpack://cyb/./src/constants/app.ts","webpack://cyb/./src/constants/config.ts","webpack://cyb/./src/constants/defaultNetworks.ts","webpack://cyb/./src/constants/localStorageKeys.ts","webpack://cyb/./src/constants/patterns.ts","webpack://cyb/./src/containers/Search/types.ts","webpack://cyb/./src/features/particle/utils.tsx","webpack://cyb/./src/features/sense/redux/sense.redux.ts","webpack://cyb/./src/redux/features/pocket.ts","webpack://cyb/./src/services/CozoDb/types/entities.ts","webpack://cyb/./src/services/QueueManager/types.ts","webpack://cyb/./src/services/backend/channels/BroadcastChannelSender.ts","webpack://cyb/./src/services/backend/channels/consts.ts","webpack://cyb/./src/services/backend/services/indexer/types.ts","webpack://cyb/./src/services/backend/services/sync/services/SyncTransactionsLoop/services/chat.ts","webpack://cyb/./src/services/backend/services/sync/services/consts.ts","webpack://cyb/./src/services/backend/services/sync/services/utils/sense.ts","webpack://cyb/./src/services/backend/services/sync/utils.ts","webpack://cyb/./src/services/backend/channels/broadcastStatus.ts","webpack://cyb/./src/utils/async/iterable.ts","webpack://cyb/./src/services/backend/channels/BackendQueueChannel/backendQueueSenders.ts","webpack://cyb/./src/services/backend/services/sync/services/ParticlesResolverQueue/ParticlesResolverQueue.ts","webpack://cyb/./src/services/CozoDb/mapping.ts","webpack://cyb/./src/generated/graphql.ts","webpack://cyb/./src/services/lcd/utils/mapping.ts","webpack://cyb/./src/services/backend/services/indexer/utils/graphqlClient.ts","webpack://cyb/./src/services/backend/services/indexer/cyberlinks.ts","webpack://cyb/./src/services/backend/services/indexer/consts.ts","webpack://cyb/./src/services/backend/services/sync/services/utils/links.ts","webpack://cyb/./src/services/backend/services/indexer/transactions.ts","webpack://cyb/./src/services/backend/services/sync/services/ProgressTracker/ProgressTracker.ts","webpack://cyb/./src/services/backend/services/sync/services/BaseSyncLoop/BaseSync.ts","webpack://cyb/./src/services/backend/services/sync/services/utils/rxjs/withInitializer.ts","webpack://cyb/./src/services/backend/services/sync/services/BaseSyncLoop/BaseSyncClient.ts","webpack://cyb/./src/services/backend/services/sync/services/SyncTransactionsLoop/SyncTransactionsLoop.ts","webpack://cyb/./src/services/lcd/websocket.ts","webpack://cyb/./src/utils/exceptions/helpers.ts","webpack://cyb/./src/services/backend/services/sync/services/BaseSyncLoop/BaseSyncLoop.ts","webpack://cyb/./src/services/backend/services/sync/services/utils/rxjs/loop.ts","webpack://cyb/./src/services/backend/services/sync/services/SyncParticlesLoop/SyncParticlesLoop.ts","webpack://cyb/./src/services/backend/services/sync/services/SyncMyFriendsLoop/SyncMyFriendsLoop.ts","webpack://cyb/./src/services/community/community.ts","webpack://cyb/./src/services/community/lcd.ts","webpack://cyb/./src/services/backend/channels/BackendQueueChannel/BackendQueueChannel.ts","webpack://cyb/./src/services/backend/services/sync/sync.ts","webpack://cyb/./src/services/backend/services/sync/services/CommunitySync/CommunitySync.ts","webpack://cyb/./src/db.js","webpack://cyb/./src/services/ipfs/utils/ipfsCacheDb.ts","webpack://cyb/./src/services/ipfs/utils/cluster.ts","webpack://cyb/./src/services/ipfs/utils/utils-ipfs.ts","webpack://cyb/./src/services/QueueManager/QueueStrategy.ts","webpack://cyb/./src/services/QueueManager/QueueItemTimeoutError.ts","webpack://cyb/./src/services/QueueManager/constants.ts","webpack://cyb/./src/services/QueueManager/QueueManager.ts","webpack://cyb/./src/utils/rxjs/helpers.ts","webpack://cyb/./src/services/ipfs/utils/cid.ts","webpack://cyb/./src/services/ipfs/node/impl/kubo.ts","webpack://cyb/./src/services/ipfs/node/impl/helia.ts","webpack://cyb/./src/services/ipfs/node/impl/configs/jsIpfsConfig.ts","webpack://cyb/./src/services/ipfs/node/impl/js-ipfs.ts","webpack://cyb/./src/services/ipfs/node/factory.ts","webpack://cyb/./src/services/ipfs/node/mixins/withCybFeatures.ts","webpack://cyb/./src/services/backend/workers/background/api/mlApi.ts","webpack://cyb/./src/services/scripting/engine.ts","webpack://cyb/./src/services/backend/workers/background/api/runeApi.ts","webpack://cyb/./src/services/backend/workers/background/worker.ts","webpack://cyb/./src/services/backend/workers/background/api/ipfsApi.ts","webpack://cyb/./src/services/backend/workers/factoryMethods.ts","webpack://cyb/./src/services/backend/workers/serializers.ts","webpack://cyb/./src/services/ipfs/config.ts","webpack://cyb/./src/services/ipfs/utils/content.ts","webpack://cyb/./src/services/ipfs/utils/stream.ts","webpack://cyb/./src/services/scripting/helpers.ts","webpack://cyb/./src/components/MainContainer/styles.module.scss?0f9b","webpack://cyb/./src/components/MainContainer/index.tsx","webpack://cyb/./src/services/backend/workers/background/service.ts","webpack://cyb/./src/services/backend/workers/db/service.ts","webpack://cyb/./src/services/backend/types/services.ts","webpack://cyb/./src/services/backend/channels/RxBroadcastChannelListener.ts","webpack://cyb/./src/services/CozoDb/utils.ts","webpack://cyb/./src/services/backend/services/DbApi/DbApi.ts","webpack://cyb/./src/services/CozoDb/types/types.ts","webpack://cyb/./src/services/CozoDb/migrations/schema.cozo","webpack://cyb/./src/services/CozoDb/migrations/migrations.ts","webpack://cyb/./src/utils/search/utils.ts","webpack://cyb/./src/services/CozoDb/cozoDb.ts","webpack://cyb/./src/services/CozoDb/cozoDbCommandFactory.ts","webpack://cyb/./src/redux/reducers/backend.ts","webpack://cyb/./src/contexts/backend/backend.tsx","webpack://cyb/./src/components/ui/Dots.module.scss?b417","webpack://cyb/./src/services/passports/lcd.ts","webpack://cyb/./src/features/passport/passports.redux.ts","webpack://cyb/./src/features/passport/constants.ts","webpack://cyb/./src/hooks/useQueueIpfsContent.ts","webpack://cyb/./src/containers/portal/components/avataIpfs/styles.module.scss?9742","webpack://cyb/./src/containers/portal/components/avataIpfs/AvataImgIpfs.tsx","webpack://cyb/./src/components/account/account.module.scss?8bb3","webpack://cyb/./src/features/adviser/context.tsx","webpack://cyb/./src/features/adviser/useAdviserTexts.tsx","webpack://cyb/./src/components/tooltip/Tooltip.module.scss?b5f2","webpack://cyb/./src/components/account/account.tsx","webpack://cyb/./src/components/link/cid.modules.scss?c13c","webpack://cyb/./src/i18n/en.js","webpack://cyb/./src/components/btnGrd/Button.module.scss?8ac3","webpack://cyb/./src/components/btnGrd/index.tsx","webpack://cyb/./src/components/Input/Input.module.scss?6e5e","webpack://cyb/./src/components/LinearGradientContainer/LinearGradientContainer.module.scss?2640","webpack://cyb/./src/components/LinearGradientContainer/LinearGradientContainer.tsx","webpack://cyb/./src/components/Input/Input.tsx","webpack://cyb/./src/components/Input/InputNumber/InputNumber.tsx","webpack://cyb/./src/contexts/signerClient.tsx","webpack://cyb/./src/contexts/device.tsx","webpack://cyb/./src/utils/utils.ts","webpack://cyb/./src/components/buttons/ButtonIcon/ButtonIcon.module.scss?b2d4","webpack://cyb/./src/components/buttons/ButtonIcon/index.tsx","webpack://cyb/./src/components/actionBar/styles.module.scss?3216","webpack://cyb/./src/components/actionBar/index.tsx","webpack://cyb/./src/components/buttons/AddFile/AddFile.module.scss?3ddf","webpack://cyb/./src/components/ledger/stageActionBar.tsx","webpack://cyb/./src/components/msgType/msgType.jsx","webpack://cyb/./src/components/text/textTable.tsx","webpack://cyb/./src/components/vitalik/Vitalik.module.scss?5982","webpack://cyb/./src/components/Button/buttonImgText.jsx","webpack://cyb/./src/components/Rank/QuestionBtn/QuestionBtn.module.scss?f28e","webpack://cyb/./src/components/ui/noItems.jsx","webpack://cyb/./src/components/valueImg/ValueImg.module.scss?00af","webpack://cyb/./src/components/valueImg/index.jsx","webpack://cyb/./src/components/valueImg/TextDenom.module.scss?5d00","webpack://cyb/./src/pages/Hub/redux/hub.ts","webpack://cyb/./src/components/numberCurrency/index.jsx","webpack://cyb/./src/redux/reducers/scripting.ts","webpack://cyb/./src/contexts/scripting/scripting.tsx","webpack://cyb/./src/hooks/useParticle.ts","webpack://cyb/./src/components/SearchItem/styles.module.scss?d3d6","webpack://cyb/./src/components/SearchItem/status.tsx","webpack://cyb/./src/components/containerGradient/Display/Display.module.scss?ed43","webpack://cyb/./src/redux/features/warp.ts","webpack://cyb/./src/redux/features/ibcDenom.ts","webpack://cyb/./src/contexts/hub.tsx","webpack://cyb/./src/contexts/ibcDenom.tsx","webpack://cyb/./src/hooks/useGetTotalSupply.ts","webpack://cyb/./src/hooks/useGetMarketData.ts","webpack://cyb/./src/hooks/warp/useFindPoolPrice.ts","webpack://cyb/./src/websockets/context.tsx","webpack://cyb/./src/contexts/appData.tsx","webpack://cyb/./src/hooks/useEPubLocation.tsx","webpack://cyb/./src/components/EPubView/EPubView.tsx","webpack://cyb/./src/components/Iframe/styles.scss?5dc7","webpack://cyb/./src/components/PDF/index.tsx","webpack://cyb/./src/components/TextMarkdown/styles.module.scss?a6fb","webpack://cyb/./src/components/VideoPlayer/VideoPlayerGatewayOnly.tsx","webpack://cyb/./src/components/contentIpfs/component/Audio/Audio.module.scss?6f1a","webpack://cyb/./src/components/contentIpfs/component/Audio/Audio.tsx","webpack://cyb/./src/components/contentIpfs/component/gateway/steles.scss?639c","webpack://cyb/./src/components/contentIpfs/component/gateway/index.tsx","webpack://cyb/./src/components/contentIpfs/component/img/steles.scss?5119","webpack://cyb/./src/components/denom/denomArr.tsx","webpack://cyb/./src/components/containerGradient/ContainerGradient.module.scss?449d","webpack://cyb/./src/components/containerGradient/DisplayTitle/DisplayTitle.module.scss?701a","webpack://cyb/./src/components/containerGradient/ContainerGradient.tsx","webpack://cyb/./src/components/particle/index.jsx","webpack://cyb/./src/components/Select/Select.module.scss?a42f","webpack://cyb/./src/components/Select/selectContext.tsx","webpack://cyb/./src/components/Select/index.tsx","webpack://cyb/./src/components/ui/Loading.module.scss?db1d","webpack://cyb/./src/components/ui/Loading.tsx","webpack://cyb/./src/components/DonutChart/DonutChart.module.scss?c1da","webpack://cyb/./src/components/DonutChart/index.tsx","webpack://cyb/./src/components/AvailableAmount/AvailableAmount.module.scss?caa4","webpack://cyb/./src/components/AvailableAmount/AvailableAmount.tsx","webpack://cyb/./src/components/FormatNumberTokens/FormatNumberTokens.module.scss?9778","webpack://cyb/./src/components/AmountDenom/AmountDenom.tsx","webpack://cyb/./src/components/ButtonSwap/index.module.scss?e24a","webpack://cyb/./src/components/ButtonSwap/index.tsx","webpack://cyb/./src/components/Slider/Slider.module.scss?1755","webpack://cyb/./src/components/Slider/Slider.tsx","webpack://cyb/./src/components/CreatedAt/CreatedAt.module.scss?8822","webpack://cyb/./src/components/CreatedAt/CreatedAt.tsx","webpack://cyb/./src/components/Tabs/TabItem/TabItem.module.scss?9b6f","webpack://cyb/./src/components/Tabs/TabItem/TabItem.tsx","webpack://cyb/./src/components/Tabs/Tabs.module.scss?0a6c","webpack://cyb/./src/components/Tabs/Tabs.tsx","webpack://cyb/./src/components/time/time.module.scss?a774","webpack://cyb/./src/components/time/time.tsx","webpack://cyb/./src/components/Row/Row.module.scss?5208","webpack://cyb/./src/components/Row/Row.tsx","webpack://cyb/./src/components/Dot/Dot.module.scss?2e31","webpack://cyb/./src/components/Dot/Dot.tsx","webpack://cyb/./src/components/statistics/styles.module.scss?2392","webpack://cyb/./src/components/ui/Copy.module.scss?8484","webpack://cyb/./src/components/governance/styles.module.scss?8fb2","webpack://cyb/./src/components/governance/governance.jsx","webpack://cyb/./src/hooks/useMediaQuery.js","webpack://cyb/./src/pages/Social/GitHub/GitHub.module.scss?4280","webpack://cyb/./src/pages/Social/Social.tsx","webpack://cyb/./src/pages/Social/Social.module.scss?90e3","webpack://cyb/./src/pages/Social/Telegram/Telegram.module.scss?3566","webpack://cyb/./src/components/ErrorBoundary/APIError/APIError.module.scss?d9f2","webpack://cyb/./src/contexts/queryClient.tsx","webpack://cyb/./src/containers/portal/utils.ts","webpack://cyb/./src/services/neuron/errors.ts","webpack://cyb/./src/services/neuron/neuronApi.ts","webpack://cyb/./src/services/scripting/runeDeps.ts","webpack://cyb/./src/services/scripting/services/llmRequests/openai.ts","webpack://cyb/./src/services/scripting/wasmBindings.js","webpack://cyb/./src/services/transactions/lcd.tsx","webpack://cyb/./src/types/networks.ts","webpack://cyb/./src/utils/async/promise.ts","webpack://cyb/./src/utils/config.ts","webpack://cyb/./src/utils/date.ts","webpack://cyb/./src/utils/dto.ts","webpack://cyb/./src/utils/ipfs/helpers.ts","webpack://cyb/./src/utils/localStorage.ts","webpack://cyb/./src/utils/logging/constants.ts","webpack://cyb/./src/utils/logging/cyblog.ts","webpack://cyb/./src/utils/string.ts","webpack://cyb/webpack/bootstrap","webpack://cyb/webpack/runtime/amd options","webpack://cyb/webpack/runtime/compat get default export","webpack://cyb/webpack/runtime/define property getters","webpack://cyb/webpack/runtime/ensure chunk","webpack://cyb/webpack/runtime/get javascript chunk filename","webpack://cyb/webpack/runtime/get mini-css chunk filename","webpack://cyb/webpack/runtime/global","webpack://cyb/webpack/runtime/harmony module decorator","webpack://cyb/webpack/runtime/hasOwnProperty shorthand","webpack://cyb/webpack/runtime/make namespace object","webpack://cyb/webpack/runtime/node module decorator","webpack://cyb/webpack/runtime/publicPath","webpack://cyb/webpack/runtime/importScripts chunk loading","webpack://cyb/webpack/runtime/nonce","webpack://cyb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([342,958,772,564,748,854,235,418].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".AvailableAmount-module__containerAvailableAmount___RiFQA{height:42px}.AvailableAmount-module__containerValue___JuvE4{padding:0 13px;font-size:1.25rem;color:var(--grayscale-dark);height:42px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/AvailableAmount/AvailableAmount.module.scss\"],\"names\":[],\"mappings\":\"AAAA,0DACE,WAAA,CAGF,gDACE,cAAA,CACA,iBAAA,CACA,2BAAA,CACA,WAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,oBAAA,CAAA,iBAAA,CAAA,wBAAA\",\"sourcesContent\":[\".containerAvailableAmount {\\n  height: 42px;\\n}\\n\\n.containerValue {\\n  padding: 0 13px;\\n  font-size: 1.25rem;\\n  color: var(--grayscale-dark);\\n  height: 42px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerAvailableAmount\": \"AvailableAmount-module__containerAvailableAmount___RiFQA\",\n\t\"containerValue\": \"AvailableAmount-module__containerValue___JuvE4\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".index-module__buttonIcon___x1Gmy{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:none;cursor:pointer;background:rgba(0,0,0,0);position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%)}.index-module__buttonIcon___x1Gmy:hover{opacity:.7}.index-module__buttonIcon___x1Gmy img{width:40px;height:55px;-o-object-fit:cover;object-fit:cover}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ButtonSwap/index.module.scss\"],\"names\":[],\"mappings\":\"AAAA,kCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,WAAA,CACA,cAAA,CACA,wBAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,uCAAA,CAAA,+BAAA,CAEA,wCACE,UAAA,CAGF,sCACE,UAAA,CACA,WAAA,CACA,mBAAA,CAAA,gBAAA\",\"sourcesContent\":[\".buttonIcon {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  cursor: pointer;\\n  background: transparent;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n\\n  &:hover {\\n    opacity: 0.7;\\n  }\\n\\n  img {\\n    width: 40px;\\n    height: 55px;\\n    object-fit: cover;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"buttonIcon\": \"index-module__buttonIcon___x1Gmy\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".CreatedAt-module__createdAt___FXzuC{color:#777}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/CreatedAt/CreatedAt.module.scss\"],\"names\":[],\"mappings\":\"AAAA,qCACE,UAAA\",\"sourcesContent\":[\".createdAt {\\n  color: #777;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"createdAt\": \"CreatedAt-module__createdAt___FXzuC\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".DonutChart-module__donutChart___Q_cxF{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/DonutChart.module.scss\"],\"names\":[],\"mappings\":\"AAAA,uCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA\",\"sourcesContent\":[\".donutChart {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"donutChart\": \"DonutChart-module__donutChart___Q_cxF\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Dot-module__dot___YQbAQ{--size: 4px;display:inline-block;border-radius:50%;opacity:1;position:relative;width:4px;width:var(--size);height:4px;height:var(--size);--color-r: 0;--color-b: 0;--color-g: 0;background-color:rgb(0, 0, 0);background-color:rgb(var(--color-r), var(--color-b), var(--color-g))}.Dot-module__dot___YQbAQ.Dot-module__color_blue___H6flK{--color-r: 31;--color-b: 203;--color-g: 225}.Dot-module__dot___YQbAQ.Dot-module__color_red___qgokM{--color-r: 255;--color-b: 92;--color-g: 0}.Dot-module__dot___YQbAQ.Dot-module__color_green___gukYp{--color-r: 122;--color-b: 250;--color-g: 161}.Dot-module__dot___YQbAQ.Dot-module__color_purple___nr8dc{--color-r: 246;--color-b: 43;--color-g: 253}.Dot-module__dot___YQbAQ.Dot-module__color_yellow___qERCK{--color-r: 255;--color-g: 0;--color-b: 217}.Dot-module__animation___yg2b7{-webkit-transition:all 1s;transition:all 1s;-webkit-animation:Dot-module__pulse___mJ3mW 2.3s infinite alternate;animation:Dot-module__pulse___mJ3mW 2.3s infinite alternate}@-webkit-keyframes Dot-module__pulse___mJ3mW{0%{-webkit-box-shadow:0px 0px 0px 0px rgb(var(--color-r), var(--color-b), var(--color-g));box-shadow:0px 0px 0px 0px rgb(var(--color-r), var(--color-b), var(--color-g));opacity:.2}100%{-webkit-box-shadow:0px 0px 10px 2px rgb(var(--color-r), var(--color-b), var(--color-g));box-shadow:0px 0px 10px 2px rgb(var(--color-r), var(--color-b), var(--color-g))}}@keyframes Dot-module__pulse___mJ3mW{0%{-webkit-box-shadow:0px 0px 0px 0px rgb(var(--color-r), var(--color-b), var(--color-g));box-shadow:0px 0px 0px 0px rgb(var(--color-r), var(--color-b), var(--color-g));opacity:.2}100%{-webkit-box-shadow:0px 0px 10px 2px rgb(var(--color-r), var(--color-b), var(--color-g));box-shadow:0px 0px 10px 2px rgb(var(--color-r), var(--color-b), var(--color-g))}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Dot/Dot.module.scss\"],\"names\":[],\"mappings\":\"AAEA,yBACE,WAAA,CAEA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,iBAAA,CAEA,SAAA,CAAA,iBAAA,CACA,UAAA,CAAA,kBAAA,CAEA,YAAA,CACA,YAAA,CACA,YAAA,CAkCA,6BAAA,CAAA,oEAAA,CA/BE,wDACE,aAAA,CACA,cAAA,CACA,cAAA,CAGF,uDACE,cAAA,CACA,aAAA,CACA,YAAA,CAGF,yDACE,cAAA,CACA,cAAA,CACA,cAAA,CAGF,0DACE,cAAA,CACA,aAAA,CACA,cAAA,CAGF,0DACE,cAAA,CACA,YAAA,CACA,cAAA,CAON,+BACE,yBAAA,CAAA,iBAAA,CAEA,mEAAA,CAAA,2DAAA,CAGF,6CACE,GACE,sFAAA,CAAA,8EAAA,CAGA,UAAA,CAGF,KACE,uFAAA,CAAA,+EAAA,CAAA,CATJ,qCACE,GACE,sFAAA,CAAA,8EAAA,CAGA,UAAA,CAGF,KACE,uFAAA,CAAA,+EAAA,CAAA\",\"sourcesContent\":[\"$animation-time: 2.3s;\\n\\n.dot {\\n  --size: 4px;\\n\\n  display: inline-block;\\n  border-radius: 50%;\\n  opacity: 1;\\n  position: relative;\\n\\n  width: var(--size);\\n  height: var(--size);\\n\\n  --color-r: 0;\\n  --color-b: 0;\\n  --color-g: 0;\\n\\n  &.color_ {\\n    &blue {\\n      --color-r: 31;\\n      --color-b: 203;\\n      --color-g: 225;\\n    }\\n\\n    &red {\\n      --color-r: 255;\\n      --color-b: 92;\\n      --color-g: 0;\\n    }\\n\\n    &green {\\n      --color-r: 122;\\n      --color-b: 250;\\n      --color-g: 161;\\n    }\\n\\n    &purple {\\n      --color-r: 246;\\n      --color-b: 43;\\n      --color-g: 253;\\n    }\\n\\n    &yellow {\\n      --color-r: 255;\\n      --color-g: 0;\\n      --color-b: 217;\\n    }\\n  }\\n\\n  background-color: rgb(var(--color-r), var(--color-b), var(--color-g));\\n}\\n\\n.animation {\\n  transition: all 1s;\\n\\n  animation: pulse $animation-time infinite alternate;\\n}\\n\\n@keyframes pulse {\\n  0% {\\n    box-shadow: 0px 0px 0px 0px rgb(var(--color-r),\\n        var(--color-b),\\n        var(--color-g));\\n    opacity: 0.2;\\n  }\\n\\n  100% {\\n    box-shadow: 0px 0px 10px 2px rgb(var(--color-r), var(--color-b), var(--color-g));\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"dot\": \"Dot-module__dot___YQbAQ\",\n\t\"color_blue\": \"Dot-module__color_blue___H6flK\",\n\t\"color_red\": \"Dot-module__color_red___qgokM\",\n\t\"color_green\": \"Dot-module__color_green___gukYp\",\n\t\"color_purple\": \"Dot-module__color_purple___nr8dc\",\n\t\"color_yellow\": \"Dot-module__color_yellow___qERCK\",\n\t\"animation\": \"Dot-module__animation___yg2b7\",\n\t\"pulse\": \"Dot-module__pulse___mJ3mW\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".APIError-module__title___s5vZx{margin-top:20%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ErrorBoundary/APIError/APIError.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACE,cAAA\",\"sourcesContent\":[\".title {\\n  margin-top: 20%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"APIError-module__title___s5vZx\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".FormatNumberTokens-module__containerFormatNumberTokens___A8xid{display:grid;grid-gap:5px;gap:5px;font-size:14px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.FormatNumberTokens-module__containerFormatNumberTokensNumber___TjzJf{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;white-space:nowrap}.FormatNumberTokens-module__containerFormatNumberTokensNumberDecimal___UM7N9{opacity:var(--text-opacity-4);font-size:12px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/FormatNumberTokens/FormatNumberTokens.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gEACE,YAAA,CACA,YAAA,CAAA,OAAA,CACA,cAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CAEA,sEACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,qBAAA,CAAA,kBAAA,CAAA,oBAAA,CAEA,kBAAA,CAEA,6EACE,6BAAA,CACA,cAAA\",\"sourcesContent\":[\".containerFormatNumberTokens {\\n  display: grid;\\n  gap: 5px;\\n  font-size: 14px;\\n  align-items: center;\\n\\n  &Number {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-end;\\n    // line-height: 19px;\\n    white-space: nowrap;\\n\\n    &Decimal {\\n      opacity: var(--text-opacity-4);\\n      font-size: 12px;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerFormatNumberTokens\": \"FormatNumberTokens-module__containerFormatNumberTokens___A8xid\",\n\t\"containerFormatNumberTokensNumber\": \"FormatNumberTokens-module__containerFormatNumberTokensNumber___TjzJf\",\n\t\"containerFormatNumberTokensNumberDecimal\": \"FormatNumberTokens-module__containerFormatNumberTokensNumberDecimal___UM7N9\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles__iframe___yADL2{border:none;background-color:#fff}.styles__iframe___yADL2 pre{color:#fff !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Iframe/styles.scss\"],\"names\":[],\"mappings\":\"AAAA,wBACE,WAAA,CACA,qBAAA,CAGF,4BACE,qBAAA\",\"sourcesContent\":[\".iframe {\\n  border: none;\\n  background-color: #fff;\\n}\\n\\n.iframe pre {\\n  color: #fff !important;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"iframe\": \"styles__iframe___yADL2\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Input-module__textbox___e3RQz{width:100%;height:42px;position:relative;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;background-color:rgba(0,0,0,0);-webkit-transition:all .2s ease;transition:all .2s ease;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.Input-module__textbox___e3RQz input,.Input-module__textbox___e3RQz textarea{width:90%;margin:auto;height:100%;border:none;padding:0 2px;background-color:rgba(0,0,0,0);font-size:1.25rem;display:block;color:var(--primary-color);text-align:right;-webkit-filter:drop-shadow(0 0 15px rgba(0, 0, 0, 0.5));filter:drop-shadow(0 0 15px rgba(0, 0, 0, 0.5));text-transform:none;text-transform:initial}.Input-module__textbox___e3RQz input::-webkit-input-placeholder, .Input-module__textbox___e3RQz textarea::-webkit-input-placeholder{color:#272343;opacity:.5;text-transform:lowercase}.Input-module__textbox___e3RQz input::-moz-placeholder, .Input-module__textbox___e3RQz textarea::-moz-placeholder{color:#272343;opacity:.5;text-transform:lowercase}.Input-module__textbox___e3RQz input:-ms-input-placeholder, .Input-module__textbox___e3RQz textarea:-ms-input-placeholder{color:#272343;opacity:.5;text-transform:lowercase}.Input-module__textbox___e3RQz input::-ms-input-placeholder, .Input-module__textbox___e3RQz textarea::-ms-input-placeholder{color:#272343;opacity:.5;text-transform:lowercase}.Input-module__textbox___e3RQz input::placeholder,.Input-module__textbox___e3RQz textarea::placeholder{color:#272343;opacity:.5;text-transform:lowercase}.Input-module__textbox___e3RQz input:disabled,.Input-module__textbox___e3RQz textarea:disabled{font-size:14px;color:#e4e4e4;opacity:.5}.Input-module__textbox___e3RQz input:focus,.Input-module__textbox___e3RQz textarea:focus{outline:none}.Input-module__textarea___zkVGY{height:auto;height:initial}.Input-module__textarea___zkVGY textarea{position:relative;top:-5px;color:#fff;resize:none;-webkit-box-shadow:none;box-shadow:none;-webkit-box-shadow:initial;box-shadow:initial;text-align:left;overflow-y:hidden;min-height:0;min-height:initial}.Input-module__error___MsIHA{color:red}.Input-module__amount___exidJ{position:absolute;right:10px;top:-15px;display:-webkit-box;display:-ms-flexbox;display:flex;gap:0 10px}.Input-module__amount___exidJ button{color:var(--blue-light)}.Input-module__amount___exidJ button:not(:last-of-type){opacity:.5}.Input-module__amount___exidJ button:hover{opacity:1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Input/Input.module.scss\"],\"names\":[],\"mappings\":\"AAAA,+BACE,UAAA,CACA,WAAA,CACA,iBAAA,CACA,mCAAA,CAAA,2BAAA,CACA,8BAAA,CACA,+BAAA,CAAA,uBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CAEA,6EAEE,SAAA,CACA,WAAA,CACA,WAAA,CACA,WAAA,CACA,aAAA,CACA,8BAAA,CACA,iBAAA,CACA,aAAA,CACA,0BAAA,CACA,gBAAA,CACA,uDAAA,CAAA,+CAAA,CACA,mBAAA,CAAA,sBAAA,CAEA,oIACE,aAAA,CACA,UAAA,CACA,wBAAA,CAHF,kHACE,aAAA,CACA,UAAA,CACA,wBAAA,CAHF,0HACE,aAAA,CACA,UAAA,CACA,wBAAA,CAHF,4HACE,aAAA,CACA,UAAA,CACA,wBAAA,CAHF,uGACE,aAAA,CACA,UAAA,CACA,wBAAA,CAGF,+FACE,cAAA,CACA,aAAA,CACA,UAAA,CAGF,yFACE,YAAA,CAKN,gCACE,WAAA,CAAA,cAAA,CAEA,yCACE,iBAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,uBAAA,CAAA,eAAA,CAAA,0BAAA,CAAA,kBAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CAAA,kBAAA,CAIJ,6BACE,SAAA,CAGF,8BACE,iBAAA,CACA,UAAA,CACA,SAAA,CAEA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,UAAA,CAEA,qCACE,uBAAA,CAEA,wDACE,UAAA,CAGF,2CACE,SAAA\",\"sourcesContent\":[\".textbox {\\n  width: 100%;\\n  height: 42px;\\n  position: relative;\\n  transform-style: preserve-3d;\\n  background-color: transparent;\\n  transition: all 0.2s ease;\\n  display: flex;\\n  flex-direction: column;\\n\\n  input,\\n  textarea {\\n    width: 90%;\\n    margin: auto;\\n    height: 100%;\\n    border: none;\\n    padding: 0 2px;\\n    background-color: transparent;\\n    font-size: 1.25rem;\\n    display: block;\\n    color: var(--primary-color);\\n    text-align: end;\\n    filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.5));\\n    text-transform: initial;\\n\\n    &::placeholder {\\n      color: #272343;\\n      opacity: 0.5;\\n      text-transform: lowercase;\\n    }\\n\\n    &:disabled {\\n      font-size: 14px; // need update root style\\n      color: #e4e4e4;\\n      opacity: 0.5;\\n    }\\n\\n    &:focus {\\n      outline: none;\\n    }\\n  }\\n}\\n\\n.textarea {\\n  height: unset;\\n\\n  textarea {\\n    position: relative;\\n    top: -5px;\\n    color: white;\\n    resize: none;\\n    box-shadow: unset;\\n    text-align: left;\\n    overflow-y: hidden;\\n    min-height: unset;\\n  }\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.amount {\\n  position: absolute;\\n  right: 10px;\\n  top: -15px;\\n\\n  display: flex;\\n  gap: 0 10px;\\n\\n  button {\\n    color: var(--blue-light);\\n\\n    &:not(:last-of-type) {\\n      opacity: 0.5;\\n    }\\n\\n    &:hover {\\n      opacity: 1;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"textbox\": \"Input-module__textbox___e3RQz\",\n\t\"textarea\": \"Input-module__textarea___zkVGY\",\n\t\"error\": \"Input-module__error___MsIHA\",\n\t\"amount\": \"Input-module__amount___exidJ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".LinearGradientContainer-module__wrapper___Fbp33{height:100%;width:100%}.LinearGradientContainer-module__wrapper___Fbp33 p{margin-top:6px;color:#777;text-align:center;font-size:12px}.LinearGradientContainer-module__textbox___dO2LG{height:20px;height:100%;position:relative;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.LinearGradientContainer-module__textboxFace___w4RQZ{position:absolute;background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(0, 237, 235, 0)), to(rgba(0, 237, 235, 0.35)));background:linear-gradient(180deg, rgba(0, 237, 235, 0) -3.3%, rgba(0, 237, 235, 0.35) 100%);left:0}.LinearGradientContainer-module__textboxBottomGradient___vghru{height:35px;width:100%;bottom:2px;border-radius:2px;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;-webkit-transform:perspective(220px) rotateX(50deg);transform:perspective(220px) rotateX(50deg)}.LinearGradientContainer-module__textboxBottomLine___MEEn1{width:100%;bottom:0;height:0px;-webkit-transform-origin:50% 0;transform-origin:50% 0;border-radius:2px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition:all .25s ease;transition:all .25s ease;border-style:solid;border-width:0px;border-color:rgba(0,0,0,0)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ .LinearGradientContainer-module__textboxBottomLine___MEEn1{background-color:#fff !important}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ .LinearGradientContainer-module__textboxBottomLine___MEEn1{border-width:1px;height:1px;-webkit-box-shadow:0px 0px 6px 2px rgba(31,203,255,.53);box-shadow:0px 0px 6px 2px rgba(31,203,255,.53);border-radius:100px}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ.LinearGradientContainer-module__pink___KXzbs .LinearGradientContainer-module__textboxBottomLine___MEEn1{-webkit-box-shadow:0px 0px 6px 2px rgba(246,43,253,.65);box-shadow:0px 0px 6px 2px rgba(246,43,253,.65)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ.LinearGradientContainer-module__yellow___RJqDk .LinearGradientContainer-module__textboxBottomLine___MEEn1{-webkit-box-shadow:0px 0px 6px 2px rgba(252,240,0,.53);box-shadow:0px 0px 6px 2px rgba(252,240,0,.53)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ.LinearGradientContainer-module__red___mjqQs .LinearGradientContainer-module__textboxBottomLine___MEEn1{-webkit-box-shadow:0px 0px 6px 2px rgba(255,0,0,.53);box-shadow:0px 0px 6px 2px rgba(255,0,0,.53)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ.LinearGradientContainer-module__black___C_MAm .LinearGradientContainer-module__textboxBottomLine___MEEn1{-webkit-box-shadow:0px 0px 6px 2px rgba(0,0,0,.53);box-shadow:0px 0px 6px 2px rgba(0,0,0,.53)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__active___lsBIJ.LinearGradientContainer-module__black___C_MAm.LinearGradientContainer-module__green___T25lo .LinearGradientContainer-module__textboxBottomLine___MEEn1{-webkit-box-shadow:0px 0px 6px 2px rgba(54,214,174,.53);box-shadow:0px 0px 6px 2px rgba(54,214,174,.53)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__pink___KXzbs .LinearGradientContainer-module__textboxFace___w4RQZ{background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(246, 43, 253, 0)), to(rgba(246, 43, 253, 0.3)));background:linear-gradient(180deg, rgba(246, 43, 253, 0) -3.3%, rgba(246, 43, 253, 0.3) 100%)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__yellow___RJqDk .LinearGradientContainer-module__textboxFace___w4RQZ{background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(252, 240, 0, 0)), to(rgba(252, 240, 0, 0.25)));background:linear-gradient(180deg, rgba(252, 240, 0, 0) -3.3%, rgba(252, 240, 0, 0.25) 100%)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__red___mjqQs .LinearGradientContainer-module__textboxFace___w4RQZ{background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(255, 0, 0, 0.033)), to(rgba(255, 0, 0, 0.3)));background:linear-gradient(180deg, rgba(255, 0, 0, 0.033) -3.3%, rgba(255, 0, 0, 0.3) 100%)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__black___C_MAm .LinearGradientContainer-module__textboxFace___w4RQZ{background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.32)));background:linear-gradient(180deg, rgba(0, 0, 0, 0) -3.3%, rgba(255, 255, 255, 0.32) 100%)}.LinearGradientContainer-module__textbox___dO2LG.LinearGradientContainer-module__green___T25lo .LinearGradientContainer-module__textboxFace___w4RQZ{background:-webkit-gradient(linear, left top, left bottom, color-stop(-3.3%, rgba(33, 71, 62, 0.3)), to(rgba(54, 214, 174, 0.3)));background:linear-gradient(180deg, rgba(33, 71, 62, 0.3) -3.3%, rgba(54, 214, 174, 0.3) 100%)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LinearGradientContainer/LinearGradientContainer.module.scss\"],\"names\":[],\"mappings\":\"AAgCA,iDACE,WAAA,CACA,UAAA,CAEA,mDACE,cAAA,CACA,UAAA,CACA,iBAAA,CACA,cAAA,CAIJ,iDACE,WAAA,CACA,WAAA,CACA,iBAAA,CACA,mCAAA,CAAA,2BAAA,CAEA,qDACE,iBAAA,CACA,gIApDmB,CAoDnB,4FApDmB,CAqDnB,MAAA,CAGF,+DACE,WAAA,CACA,UAAA,CACA,UAAA,CACA,iBAAA,CACA,iCAAA,CAAA,yBAAA,CACA,mDAAA,CAAA,2CAAA,CAGF,2DACE,UAAA,CACA,QAAA,CACA,UAAA,CACA,8BAAA,CAAA,sBAAA,CACA,iBAAA,CACA,6BAAA,CAAA,qBAAA,CACA,gCAAA,CAAA,wBAAA,CACA,kBAAA,CACA,gBAAA,CACA,0BAAA,CAIA,2JAGE,gCAEA,CALF,2JACE,gBAAA,CACA,UAAA,CAEA,uDAAA,CAAA,+CAAA,CACA,mBAAA,CAIA,wMACE,uDAAA,CAAA,+CAAA,CAKF,0MACE,sDAAA,CAAA,8CAAA,CAKF,uMACE,oDAAA,CAAA,4CAAA,CAKF,yMACE,kDAAA,CAAA,0CAAA,CAIA,uPACE,uDAAA,CAAA,+CAAA,CAON,mJACE,iIApHiB,CAoHjB,6FApHiB,CAyHnB,qJACE,gIAtHmB,CAsHnB,4FAtHmB,CA2HrB,kJACE,+HAxHgB,CAwHhB,2FAxHgB,CA6HlB,oJACE,8HA3HkB,CA2HlB,0FA3HkB,CAgIpB,oJACE,iIA9HkB,CA8HlB,6FA9HkB\",\"sourcesContent\":[\"$linear-gradient-blue: linear-gradient(180deg,\\n    rgba(0, 237, 235, 0) -3.3%,\\n    rgba(0, 237, 235, 0.35) 100%);\\n\\n$linear-gradient-pink: linear-gradient(180deg,\\n    rgba(246, 43, 253, 0) -3.3%,\\n    rgba(246, 43, 253, 0.3) 100%);\\n\\n$linear-gradient-yellow: linear-gradient(180deg,\\n    rgba(252, 240, 0, 0) -3.3%,\\n    rgba(252, 240, 0, 0.25) 100%);\\n\\n$linear-gradient-red: linear-gradient(180deg,\\n    rgba(255, 0, 0, 0.033) -3.3%,\\n    rgba(255, 0, 0, 0.3) 100%);\\n$linear-gradient-black: linear-gradient(180deg,\\n    rgba(0, 0, 0, 0) -3.3%,\\n    rgba(255, 255, 255, 0.32) 100%);\\n$linear-gradient-green: linear-gradient(180deg,\\n    rgba(33, 71, 62, 0.3) -3.3%,\\n    rgba(54, 214, 174, 0.3) 100%);\\n// $color-border-bottom-blue: #00edeb;\\n// $color-border-bottom-pink: #f62bfd;\\n// $color-border-bottom-yellow: #fcf000;\\n\\n$box-shadow-yellow: rgba(252, 240, 0, 0.53);\\n$box-shadow-blue: rgba(31, 203, 255, 0.53);\\n$box-shadow-pink: rgba(246, 43, 253, 0.65);\\n$box-shadow-red: rgba(255, 0, 0, 0.53);\\n$box-shadow-black: rgba(0, 0, 0, 0.53);\\n$box-shadow-green: rgba(54, 214, 174, 0.53);\\n\\n.wrapper {\\n  height: 100%;\\n  width: 100%;\\n\\n  p {\\n    margin-top: 6px;\\n    color: #777777;\\n    text-align: center;\\n    font-size: 12px;\\n  }\\n}\\n\\n.textbox {\\n  height: 20px;\\n  height: 100%;\\n  position: relative;\\n  transform-style: preserve-3d;\\n\\n  &Face {\\n    position: absolute;\\n    background: $linear-gradient-blue;\\n    left: 0;\\n  }\\n\\n  &BottomGradient {\\n    height: 35px;\\n    width: 100%;\\n    bottom: 2px;\\n    border-radius: 2px;\\n    transform-origin: 50% 100%;\\n    transform: perspective(220px) rotateX(50deg);\\n  }\\n\\n  &BottomLine {\\n    width: 100%;\\n    bottom: 0;\\n    height: 0px;\\n    transform-origin: 50% 0;\\n    border-radius: 2px;\\n    box-sizing: border-box;\\n    transition: all 0.25s ease;\\n    border-style: solid;\\n    border-width: 0px;\\n    border-color: transparent;\\n  }\\n\\n  &.active {\\n    .textboxBottomLine {\\n      border-width: 1px;\\n      height: 1px;\\n      background-color: white !important;\\n      box-shadow: 0px 0px 6px 2px $box-shadow-blue;\\n      border-radius: 100px;\\n    }\\n\\n    &.pink {\\n      .textboxBottomLine {\\n        box-shadow: 0px 0px 6px 2px $box-shadow-pink;\\n      }\\n    }\\n\\n    &.yellow {\\n      .textboxBottomLine {\\n        box-shadow: 0px 0px 6px 2px $box-shadow-yellow;\\n      }\\n    }\\n\\n    &.red {\\n      .textboxBottomLine {\\n        box-shadow: 0px 0px 6px 2px $box-shadow-red;\\n      }\\n    }\\n\\n    &.black {\\n      .textboxBottomLine {\\n        box-shadow: 0px 0px 6px 2px $box-shadow-black;\\n      }\\n\\n      &.green {\\n        .textboxBottomLine {\\n          box-shadow: 0px 0px 6px 2px $box-shadow-green;\\n        }\\n      }\\n    }\\n  }\\n\\n  &.pink {\\n    .textboxFace {\\n      background: $linear-gradient-pink;\\n    }\\n  }\\n\\n  &.yellow {\\n    .textboxFace {\\n      background: $linear-gradient-yellow;\\n    }\\n  }\\n\\n  &.red {\\n    .textboxFace {\\n      background: $linear-gradient-red;\\n    }\\n  }\\n\\n  &.black {\\n    .textboxFace {\\n      background: $linear-gradient-black;\\n    }\\n  }\\n\\n  &.green {\\n    .textboxFace {\\n      background: $linear-gradient-green;\\n    }\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"LinearGradientContainer-module__wrapper___Fbp33\",\n\t\"textbox\": \"LinearGradientContainer-module__textbox___dO2LG\",\n\t\"textboxFace\": \"LinearGradientContainer-module__textboxFace___w4RQZ\",\n\t\"textboxBottomGradient\": \"LinearGradientContainer-module__textboxBottomGradient___vghru\",\n\t\"textboxBottomLine\": \"LinearGradientContainer-module__textboxBottomLine___MEEn1\",\n\t\"active\": \"LinearGradientContainer-module__active___lsBIJ\",\n\t\"pink\": \"LinearGradientContainer-module__pink___KXzbs\",\n\t\"yellow\": \"LinearGradientContainer-module__yellow___RJqDk\",\n\t\"red\": \"LinearGradientContainer-module__red___mjqQs\",\n\t\"black\": \"LinearGradientContainer-module__black___C_MAm\",\n\t\"green\": \"LinearGradientContainer-module__green___T25lo\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__wrapper___oNqZl{width:62%;margin:0 auto;display:grid;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-bottom:102px}@media(max-width: 650px){.styles-module__wrapper___oNqZl{width:82%}}@media(max-width: 540px){.styles-module__wrapper___oNqZl{width:100% !important}}.styles-module__wrapper___oNqZl>main{min-height:100%;display:grid}.styles-module__wrapper___oNqZl>main>header{-ms-flex-item-align:start;align-self:flex-start}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/MainContainer/styles.module.scss\",\"webpack://./src/layouts/variables.module.scss\"],\"names\":[],\"mappings\":\"AAEA,gCACE,SAAA,CACA,aAAA,CACA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CAGA,oBCIgB,CDFhB,yBATF,gCAUI,SAAA,CAAA,CAGF,yBAbF,gCAcI,qBAAA,CAAA,CAGF,qCAEE,eAAA,CAGA,YAAA,CAEA,4CAEE,yBAAA,CAAA,qBAAA\",\"sourcesContent\":[\"@import '../../layouts/variables.module.scss';\\n\\n.wrapper {\\n  width: 62%;\\n  margin: 0 auto;\\n  display: grid;\\n  align-items: flex-start;\\n\\n  // padding for action bar, if scroll bottom\\n  padding-bottom: $actionBarHeight;\\n\\n  @media (max-width: 650px) {\\n    width: 82%;\\n  }\\n\\n  @media (max-width: 540px) {\\n    width: 100% !important;\\n  }\\n\\n  >main {\\n    // same with menu\\n    min-height: 100%;\\n\\n    // stretch children by height\\n    display: grid;\\n\\n    >header {\\n      // because of grid\\n      align-self: flex-start;\\n    }\\n  }\\n}\",\"$headerHeight: 105px;\\n\\n$adviserHeight: 60px;\\n$adviserOffset: 15px;\\n\\n$robotHeaderHeight: 95px;\\n$robotNotOwnerMenuHeight: 45px;\\n\\n$robotHeaderHeightNotOwner: $robotHeaderHeight + $robotNotOwnerMenuHeight;\\n\\n\\n$reservedTopHeight: $headerHeight + $adviserHeight - $adviserOffset;\\n\\n$actionBarHeight: 102px;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"styles-module__wrapper___oNqZl\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QuestionBtn-module__questionBtn___gSVCv{color:var(--primary-color) !important}.QuestionBtn-module__questionBtn___gSVCv{border:1px solid var(--primary-color);text-shadow:0 0 5px var(--primary-color);border-radius:50%;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:16px;height:16px}.QuestionBtn-module__questionBtn___gSVCv:hover{opacity:.8}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Rank/QuestionBtn/QuestionBtn.module.scss\"],\"names\":[],\"mappings\":\"AAAA,yCAEE,qCAOA,CATF,yCACE,qCAAA,CAEA,wCAAA,CACA,iBAAA,CACA,0BAAA,CAAA,0BAAA,CAAA,mBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,UAAA,CACA,WAAA,CAEA,+CACE,UAAA\",\"sourcesContent\":[\".questionBtn {\\n  border: 1px solid var(--primary-color);\\n  color: var(--primary-color) !important;\\n  text-shadow: 0 0 5px var(--primary-color);\\n  border-radius: 50%;\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 16px;\\n  height: 16px;\\n\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"questionBtn\": \"QuestionBtn-module__questionBtn___gSVCv\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Row-module__container___a8DnP{display:grid;grid-template-columns:240px 1fr;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;line-height:20px;font-size:16px}.Row-module__container___a8DnP .Row-module__value___QYuZo{text-transform:none !important}.Row-module__container___a8DnP .Row-module__value___QYuZo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.Row-module__rowsContainer___UU1Ss{display:grid;grid-gap:10px;gap:10px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Row/Row.module.scss\"],\"names\":[],\"mappings\":\"AAAA,+BACE,YAAA,CACA,+BAAA,CACA,0BAAA,CAAA,uBAAA,CAAA,oBAAA,CACA,gBAAA,CACA,cAAA,CAEA,0DACE,8BAIA,CALF,0DAEE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CAMJ,mCACE,YAAA,CACA,aAAA,CAAA,QAAA\",\"sourcesContent\":[\".container {\\n  display: grid;\\n  grid-template-columns: 240px 1fr;\\n  align-items: baseline;\\n  line-height: 20px;\\n  font-size: 16px;\\n\\n  .value {\\n    text-transform: none !important;\\n    display: flex;\\n    justify-content: center;\\n    align-items: flex-start;\\n    flex-direction: column;\\n  }\\n}\\n\\n\\n\\n.rowsContainer {\\n  display: grid;\\n  gap: 10px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"Row-module__container___a8DnP\",\n\t\"value\": \"Row-module__value___QYuZo\",\n\t\"rowsContainer\": \"Row-module__rowsContainer___UU1Ss\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__containerSearchItem___CKftJ{padding:12px 20px 12px 10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background-color:#000;border-radius:5px;margin-bottom:10px}.styles-module__containerTextPreview___AywP_{color:#fff;text-overflow:ellipsis;overflow:hidden;padding:0px 10px;width:100%}.styles-module__customPill___CY8nk{padding:4px;width:4px;height:4px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\\\"#fff\\\";border-radius:50%}.styles-module__glow___F1x3a{color:#fff;text-align:center;-webkit-animation:styles-module__glow___F1x3a 1s ease-in-out infinite alternate;animation:styles-module__glow___F1x3a 1s ease-in-out infinite alternate}@-webkit-keyframes styles-module__glow___F1x3a{0%{-webkit-box-shadow:0 0 2px 0px #fff,0 0 2px 0px #00b0ff;box-shadow:0 0 2px 0px #fff,0 0 2px 0px #00b0ff}100%{-webkit-box-shadow:0 0 3px 2px #fff,0 0 3px 2px #00b8d4,0 0 4px 2px #00b8d4,0 0 5px 2px #00b8d4,0 0 6px 2px #00b8d4;box-shadow:0 0 3px 2px #fff,0 0 3px 2px #00b8d4,0 0 4px 2px #00b8d4,0 0 5px 2px #00b8d4,0 0 6px 2px #00b8d4}}@keyframes styles-module__glow___F1x3a{0%{-webkit-box-shadow:0 0 2px 0px #fff,0 0 2px 0px #00b0ff;box-shadow:0 0 2px 0px #fff,0 0 2px 0px #00b0ff}100%{-webkit-box-shadow:0 0 3px 2px #fff,0 0 3px 2px #00b8d4,0 0 4px 2px #00b8d4,0 0 5px 2px #00b8d4,0 0 6px 2px #00b8d4;box-shadow:0 0 3px 2px #fff,0 0 3px 2px #00b8d4,0 0 4px 2px #00b8d4,0 0 5px 2px #00b8d4,0 0 6px 2px #00b8d4}}.styles-module__rankVal1___MGdfX{-webkit-box-shadow:0 0 3px #ff3d00;box-shadow:0 0 3px #ff3d00}.styles-module__rankVal2___o3XNR{-webkit-box-shadow:0 0 3px #ff9100;box-shadow:0 0 3px #ff9100}.styles-module__rankVal3___Aq1ng{-webkit-box-shadow:0 0 3px #ffea00;box-shadow:0 0 3px #ffea00}.styles-module__rankVal4___UklGQ{-webkit-box-shadow:0 0 3px #64dd17;box-shadow:0 0 3px #64dd17}.styles-module__rankVal5___xBZAs{-webkit-box-shadow:0 0 3px #00b0ff;box-shadow:0 0 3px #00b0ff}.styles-module__rankVal6___fQJI1{-webkit-box-shadow:0 0 3px #304ffe;box-shadow:0 0 3px #304ffe}.styles-module__rankVal7___L8Hge{-webkit-box-shadow:0 0 3px #d500f9;box-shadow:0 0 3px #d500f9}.styles-module__rankValDefault___ZOfvR{-webkit-box-shadow:0 0 3px #546e7a;box-shadow:0 0 3px #546e7a}.styles-module__rankVal1___MGdfX:hover{-webkit-box-shadow:0 0 7px #ff3d00;box-shadow:0 0 7px #ff3d00}.styles-module__rankVal2___o3XNR:hover{-webkit-box-shadow:0 0 7px #ff9100;box-shadow:0 0 7px #ff9100}.styles-module__rankVal3___Aq1ng:hover{-webkit-box-shadow:0 0 7px #ffea00;box-shadow:0 0 7px #ffea00}.styles-module__rankVal4___UklGQ:hover{-webkit-box-shadow:0 0 7px #64dd17;box-shadow:0 0 7px #64dd17}.styles-module__rankVal5___xBZAs:hover{-webkit-box-shadow:0 0 7px #00b0ff;box-shadow:0 0 7px #00b0ff}.styles-module__rankVal6___fQJI1:hover{-webkit-box-shadow:0 0 7px #304ffe;box-shadow:0 0 7px #304ffe}.styles-module__rankVal7___L8Hge:hover{-webkit-box-shadow:0 0 7px #d500f9;box-shadow:0 0 7px #d500f9}.styles-module__rankValDefault___ZOfvR:hover{-webkit-box-shadow:0 0 7px #546e7a;box-shadow:0 0 7px #546e7a}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SearchItem/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,4CACE,2BAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,qBAAA,CACA,iBAAA,CACA,kBAAA,CAGF,6CACE,UAAA,CACA,sBAAA,CACA,eAAA,CACA,gBAAA,CACA,UAAA,CAGF,mCACE,WAAA,CACA,SAAA,CACA,UAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,YAAA,CACA,iBAAA,CAGF,6BACI,UAAA,CACA,iBAAA,CACA,+EAAA,CAEA,uEAAA,CAGJ,+CACI,GACE,uDAAA,CAAA,+CAAA,CAEF,KACE,mHAAA,CAAA,2GAAA,CAAA,CALN,uCACI,GACE,uDAAA,CAAA,+CAAA,CAEF,KACE,mHAAA,CAAA,2GAAA,CAAA,CAKN,iCACI,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,iCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,uCACE,kCAAA,CAAA,0BAAA,CAGF,6CACE,kCAAA,CAAA,0BAAA\",\"sourcesContent\":[\".containerSearchItem {\\n  padding: 12px 20px 12px 10px;\\n  display: flex;\\n  justify-content: space-between;\\n  background-color: #000;\\n  border-radius: 5px;\\n  margin-bottom: 10px;\\n}\\n\\n.containerTextPreview {\\n  color: #fff;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  padding: 0px 10px;\\n  width: 100%;\\n}\\n\\n.customPill {\\n  padding: 4px;\\n  width: 4px;\\n  height: 4px;\\n  display: flex;\\n  align-items: center;\\n  color: \\\"#fff\\\";\\n  border-radius: 50%;\\n}\\n\\n.glow {\\n    color: #fff;\\n    text-align: center;\\n    -webkit-animation: glow 1s ease-in-out infinite alternate;\\n    -moz-animation: glow 1s ease-in-out infinite alternate;\\n    animation: glow 1s ease-in-out infinite alternate;\\n  }\\n\\n@keyframes glow {\\n    0% {\\n      box-shadow: 0 0 2px 0px #fff, 0 0 2px 0px #00b0ff;\\n    }\\n    100% {\\n      box-shadow: 0 0 3px 2px #fff, 0 0 3px 2px #00b8d4, 0 0 4px 2px #00b8d4,\\n        0 0 5px 2px #00b8d4, 0 0 6px 2px #00b8d4;\\n    }\\n  }\\n\\n.rankVal1 {\\n    box-shadow: 0 0 3px #ff3d00;\\n  }\\n  \\n  .rankVal2 {\\n    box-shadow: 0 0 3px #ff9100;\\n  }\\n  \\n  .rankVal3 {\\n    box-shadow: 0 0 3px #ffea00;\\n  }\\n  \\n  .rankVal4 {\\n    box-shadow: 0 0 3px #64dd17;\\n  }\\n  \\n  .rankVal5 {\\n    box-shadow: 0 0 3px #00b0ff;\\n  }\\n  \\n  .rankVal6 {\\n    box-shadow: 0 0 3px #304ffe;\\n  }\\n  \\n  .rankVal7 {\\n    box-shadow: 0 0 3px #d500f9;\\n  }\\n  \\n  .rankValDefault {\\n    box-shadow: 0 0 3px #546e7a;\\n  }\\n\\n  .rankVal1:hover {\\n    box-shadow: 0 0 7px #ff3d00;\\n  }\\n  \\n  .rankVal2:hover {\\n    box-shadow: 0 0 7px #ff9100;\\n  }\\n  \\n  .rankVal3:hover {\\n    box-shadow: 0 0 7px #ffea00;\\n  }\\n  \\n  .rankVal4:hover {\\n    box-shadow: 0 0 7px #64dd17;\\n  }\\n  \\n  .rankVal5:hover {\\n    box-shadow: 0 0 7px #00b0ff;\\n  }\\n  \\n  .rankVal6:hover {\\n    box-shadow: 0 0 7px #304ffe;\\n  }\\n  \\n  .rankVal7:hover {\\n    box-shadow: 0 0 7px #d500f9;\\n  }\\n  \\n  .rankValDefault:hover {\\n    box-shadow: 0 0 7px #546e7a;\\n  }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerSearchItem\": \"styles-module__containerSearchItem___CKftJ\",\n\t\"containerTextPreview\": \"styles-module__containerTextPreview___AywP_\",\n\t\"customPill\": \"styles-module__customPill___CY8nk\",\n\t\"glow\": \"styles-module__glow___F1x3a\",\n\t\"rankVal1\": \"styles-module__rankVal1___MGdfX\",\n\t\"rankVal2\": \"styles-module__rankVal2___o3XNR\",\n\t\"rankVal3\": \"styles-module__rankVal3___Aq1ng\",\n\t\"rankVal4\": \"styles-module__rankVal4___UklGQ\",\n\t\"rankVal5\": \"styles-module__rankVal5___xBZAs\",\n\t\"rankVal6\": \"styles-module__rankVal6___fQJI1\",\n\t\"rankVal7\": \"styles-module__rankVal7___L8Hge\",\n\t\"rankValDefault\": \"styles-module__rankValDefault___ZOfvR\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Select-module__dropDown___wkoGV{width:120px;height:42px;position:relative}.Select-module__dropDownContainer___Cao5i{width:inherit;height:inherit}.Select-module__dropDownContainerHeader___fVDm_{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;height:100%;width:100%;padding:0;border:none;outline:none;background:rgba(0,0,0,0)}.Select-module__dropDownHeader___gW3Ac{font-weight:400;color:#36d6ae;display:grid;grid-template-columns:28px 80px;grid-gap:10px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;bottom:10px;z-index:1;font-size:1rem;padding-left:5px;white-space:nowrap}.Select-module__dropDownListContainer___dTmaA{position:absolute;z-index:3;width:100%}.Select-module__dropDownListContainer___dTmaA.Select-module__dropUp___KvgMn{bottom:100%}.Select-module__dropDownList___bNP57{display:grid;grid-gap:18px;padding:18px;margin:0;background:rgba(0,0,0,.5);backdrop-filter:blur(15px);-webkit-box-sizing:border-box;box-sizing:border-box;color:#36d6ae;max-height:215px;overflow-y:auto}.Select-module__dropDown___wkoGV .Select-module__listItem___zDf4L{display:grid;grid-template-columns:28px 80px;grid-gap:13px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;white-space:nowrap}.Select-module__dropDown___wkoGV .Select-module__listItem___zDf4L:hover{color:#c7c7c7;cursor:pointer}.Select-module__dropDown___wkoGV .Select-module__listItem___zDf4L .Select-module__bgrImg___P040t{width:28px;height:28px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:50%;background:#000}.Select-module__dropDown___wkoGV.Select-module__disabled___ajJOa,.Select-module__dropDown___wkoGV.Select-module__disabled___ajJOa button{cursor:not-allowed !important}.Select-module__dropDown___wkoGV.Select-module__disabled___ajJOa .Select-module__dropDownHeader___gW3Ac{color:gray}.Select-module__small___Cjg_b{height:36px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Select/Select.module.scss\"],\"names\":[],\"mappings\":\"AAAA,iCACE,WAAA,CACA,WAAA,CACA,iBAAA,CAEA,0CACE,aAAA,CACA,cAAA,CAGF,gDACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,oBAAA,CAAA,iBAAA,CAAA,wBAAA,CACA,WAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,YAAA,CACA,wBAAA,CAGF,uCACE,eAAA,CACA,aAAA,CACA,YAAA,CACA,+BAAA,CACA,aAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,iBAAA,CACA,WAAA,CACA,SAAA,CACA,cAAA,CACA,gBAAA,CACA,kBAAA,CAGF,8CACE,iBAAA,CACA,SAAA,CACA,UAAA,CAEA,4EACE,WAAA,CAIJ,qCACE,YAAA,CACA,aAAA,CACA,YAAA,CACA,QAAA,CACA,yBAAA,CACA,0BAAA,CAIA,6BAAA,CAAA,qBAAA,CACA,aAAA,CACA,gBAAA,CACA,eAAA,CAGF,kEACE,YAAA,CACA,+BAAA,CACA,aAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,kBAAA,CAEA,wEACE,aAAA,CACA,cAAA,CAGF,iGACE,UAAA,CACA,WAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CACA,eAAA,CAOF,yIAEE,6BAAA,CAGF,wGACE,UAAA,CAKN,8BACE,WAAA\",\"sourcesContent\":[\".dropDown {\\n  width: 120px;\\n  height: 42px;\\n  position: relative;\\n\\n  &Container {\\n    width: inherit;\\n    height: inherit;\\n  }\\n\\n  &ContainerHeader {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-end;\\n    height: 100%;\\n    width: 100%;\\n    padding: 0;\\n    border: none;\\n    outline: none;\\n    background: transparent;\\n  }\\n\\n  &Header {\\n    font-weight: 400;\\n    color: #36d6ae;\\n    display: grid;\\n    grid-template-columns: 28px 80px;\\n    grid-gap: 10px;\\n    align-items: center;\\n    position: absolute;\\n    bottom: 10px;\\n    z-index: 1;\\n    font-size: 1rem;\\n    padding-left: 5px;\\n    white-space: nowrap;\\n  }\\n\\n  &ListContainer {\\n    position: absolute;\\n    z-index: 3;\\n    width: 100%;\\n\\n    &.dropUp {\\n      bottom: 100%;\\n    }\\n  }\\n\\n  &List {\\n    display: grid;\\n    grid-gap: 18px;\\n    padding: 18px;\\n    margin: 0;\\n    background: rgb(0 0 0 / 50%);\\n    backdrop-filter: blur(15px);\\n\\n    // border-top: 1px solid #fcf000;\\n    // border-bottom: 1px solid #fcf000;\\n    box-sizing: border-box;\\n    color: #36d6ae;\\n    max-height: 215px;\\n    overflow-y: auto;\\n  }\\n\\n  .listItem {\\n    display: grid;\\n    grid-template-columns: 28px 80px;\\n    grid-gap: 13px;\\n    align-items: center;\\n    white-space: nowrap;\\n\\n    &:hover {\\n      color: #c7c7c7;\\n      cursor: pointer;\\n    }\\n\\n    .bgrImg {\\n      width: 28px;\\n      height: 28px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 50%;\\n      background: #000;\\n\\n      // box-shadow: 0px 0px 6px 1px rgba(255, 255, 255, 0.5);\\n    }\\n  }\\n\\n  &.disabled {\\n    &,\\n    button {\\n      cursor: not-allowed !important;\\n    }\\n\\n    .dropDownHeader {\\n      color: gray;\\n    }\\n  }\\n}\\n\\n.small {\\n  height: 36px; // +2px of btn h\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"dropDown\": \"Select-module__dropDown___wkoGV\",\n\t\"dropDownContainer\": \"Select-module__dropDownContainer___Cao5i\",\n\t\"dropDownContainerHeader\": \"Select-module__dropDownContainerHeader___fVDm_\",\n\t\"dropDownHeader\": \"Select-module__dropDownHeader___gW3Ac\",\n\t\"dropDownListContainer\": \"Select-module__dropDownListContainer___dTmaA\",\n\t\"dropUp\": \"Select-module__dropUp___KvgMn\",\n\t\"dropDownList\": \"Select-module__dropDownList___bNP57\",\n\t\"listItem\": \"Select-module__listItem___zDf4L\",\n\t\"bgrImg\": \"Select-module__bgrImg___P040t\",\n\t\"disabled\": \"Select-module__disabled___ajJOa\",\n\t\"small\": \"Select-module__small___Cjg_b\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Slider-module__formWrapper___E_IKq{margin-top:20px;width:100%;height:120px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-line-pack:stretch;align-content:stretch;position:relative;width:100%;height:50px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv input,.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv label{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv label{display:inline-block;position:relative;width:14.2857142857%;height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv label::after{content:\\\" \\\";position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);background:rgba(0,0,0,0);-webkit-filter:blur(2px);filter:blur(2px);width:7px;height:7px;background:#fff;border-radius:50%;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1;cursor:pointer;-webkit-transition:all .15s ease-in-out;transition:all .15s ease-in-out}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv input{position:absolute;height:2px;background:#c5c5c5;margin-top:-4px;-moz-appearance:none;appearance:none;z-index:2;-webkit-appearance:none}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__debtAmountPos___j6zuy{display:block;position:relative;-webkit-transition:all .15s ease-in-out;transition:all .15s ease-in-out;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);opacity:1;z-index:1;width:100px;height:100px;border-radius:50%;background:radial-gradient(50% 50% at 50% 50%, #ffffff 0%, rgba(255, 255, 255, 0) 60.42%);-webkit-box-shadow:0px 0px 6px 1px rgba(255,255,255,.5);box-shadow:0px 0px 6px 1px rgba(255,255,255,.5)}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__debtAmountPosToken___6Fpgk{position:absolute;width:100%;bottom:50%;background-color:rgba(0,0,0,0);top:50%;left:0;-webkit-transition:1s;transition:1s}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__debtAmountPosTokenObj___BYTSu{position:absolute;width:25px;height:25px;border-radius:50%;background-color:rgba(0,0,0,0);-webkit-box-shadow:0px 0px 6px 1px rgba(255,255,255,.5);box-shadow:0px 0px 6px 1px rgba(255,255,255,.5);left:-12.5px;top:-12.5px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:1s;transition:1s}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackLabel___g64VO{top:-22px;padding:0 30px;border:1px solid #c5c5c5;position:relative}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMark___CDD_B{display:inline-block;position:relative;width:20%;height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkGradient___RFkQX{content:\\\"\\\";background:linear-gradient(181deg, rgba(196, 196, 196, 0) 0%, rgba(196, 196, 196, 0.8) 100%);position:absolute;height:70px;width:3px;bottom:0px;right:50%;-webkit-transform-origin:-50% 100%;transform-origin:-50% 100%}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkGradientleft___I9f7D{-webkit-transform:rotateX(80deg) rotateZ(24deg) translateX(0px);transform:rotateX(80deg) rotateZ(24deg) translateX(0px)}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkGradientcenter___bOWM9{background:rgba(0,0,0,0)}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkGradientright___uEYDE{-webkit-transform:rotateX(80deg) rotateZ(-24deg) translateX(0px);transform:rotateX(80deg) rotateZ(-24deg) translateX(0px)}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkLabel___louN6{position:absolute;font-size:12px;line-height:14px;color:#777;width:24px;left:50%;margin-right:-50%;-webkit-transform:translate(-50%, 6px);transform:translate(-50%, 6px)}.Slider-module__formWrapper___E_IKq .Slider-module__debtAmountSlider___OH9Rv .Slider-module__trackMarkLabelColorBlue___G3KQ5{color:#1fcbff}.Slider-module__buttonIcon___rek_s{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:none;cursor:pointer;background:rgba(0,0,0,0);position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%)}.Slider-module__buttonIcon___rek_s:hover{opacity:.7}.Slider-module__buttonIcon___rek_s img{width:40px;height:55px;-o-object-fit:cover;object-fit:cover}.Slider-module__imgValue___HSCpp{position:absolute;left:100%;white-space:nowrap;color:#777;font-size:12px;-webkit-transform:translate(5px, 0px);transform:translate(5px, 0px)}.Slider-module__text___huavV{position:absolute;bottom:100%;right:0;-webkit-transform:translate(0, -50%);transform:translate(0, -50%)}.Slider-module__textLeft___CGhtQ{left:25px;right:auto;right:initial}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Slider/Slider.module.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@use 'sass:math';\\n$number-of-options: 7;\\n$linear-gradient-mark: linear-gradient(\\n  181deg,\\n  rgba(196, 196, 196, 0) 0%,\\n  rgba(196, 196, 196, 0.8) 100%\\n);\\n$col-width: math.div(100%, $number-of-options);\\n\\n@mixin transform-mark-gradient($incline) {\\n  transform: rotateX(80deg) rotateZ(24deg * $incline) translateX(0px);\\n}\\n\\n@mixin icon-token() {\\n  $size-token-obj: 25px;\\n  position: absolute;\\n  width: $size-token-obj;\\n  height: $size-token-obj;\\n  border-radius: 50%;\\n  background-color: transparent;\\n  // box-shadow: 0px 0px 2px 1px $color-box-shadow;\\n  box-shadow: 0px 0px 6px 1px rgba(255, 255, 255, 0.5);\\n  left: math.div($size-token-obj, 2) * -1;\\n  top: math.div($size-token-obj, 2) * -1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.formWrapper {\\n  margin-top: 20px;\\n  width: 100%;\\n  height: 120px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n\\n  .debtAmountSlider {\\n    //display: flex;\\n    flex-direction: row;\\n    align-content: stretch;\\n    position: relative;\\n    width: 100%;\\n    height: 50px;\\n    user-select: none;\\n\\n    input,\\n    label {\\n      box-sizing: border-box;\\n      flex: 1;\\n      user-select: none;\\n      cursor: pointer;\\n    }\\n\\n    label {\\n      display: inline-block;\\n      position: relative;\\n      width: $col-width;\\n      height: 100%;\\n      user-select: none;\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        left: 50%;\\n        top: 50%;\\n        transform: translate(-50%, -50%);\\n        background: transparent;\\n        filter: blur(2px);\\n        width: 7px;\\n        height: 7px;\\n        background: #fff;\\n        border-radius: 50%;\\n        pointer-events: none;\\n        user-select: none;\\n        z-index: 1;\\n        cursor: pointer;\\n        transition: all 0.15s ease-in-out;\\n      }\\n    }\\n\\n    input {\\n      //display: none;\\n      position: absolute;\\n      height: 2px;\\n      background: #c5c5c5;\\n      margin-top: -4px;\\n      //top:-2%;\\n      appearance: none;\\n      z-index: 2;\\n      -webkit-appearance: none;\\n\\n      // &::-moz-range-thumb {\\n      //   width: 23px;\\n      //   height: 25px;\\n      //   border: 0;\\n      //   // background: red;\\n      //   //z-index: 200000;\\n      //   cursor: pointer;\\n      //   z-index: 2;\\n      //   //display: none\\n      // }\\n\\n      // &::-webkit-slider-thumb {\\n      //   // background: transparent;\\n      //   // background: red;\\n      //   -webkit-appearance: none;\\n      //   appearance: none;\\n      //   //width: 23px;\\n      //   //height: 25px;\\n      //   width: 20px;\\n      //   height: 10px;\\n      //   z-index: 2;\\n      //   margin-top: 0px;\\n      //   transform: translate(-5px, 0px);\\n      //   //background: transparent;\\n      //   //background:  ;;\\n      //   //https://localhost:3001/exchange-arrows.2cba7bc0f9.svg\\n      //   // background-image: url(../../../../image/exchange-arrows.svg);\\n      //   //radial-gradient(50% 50% at 50% 50%, #ffffff 0%, rgba(255, 255, 255, 0) 60.42%)\\n      //   //background: url('https://localhost:3001/exchange-arrows.2cba7bc0f9.svg');\\n      //   background-repeat: no-repeat;\\n      //   //border-radius: 50%;\\n      //   cursor: pointer;\\n      //   //display: none\\n      // }\\n    }\\n\\n    .debtAmountPos {\\n      display: block;\\n      position: relative;\\n      transition: all 0.15s ease-in-out;\\n      transform: translate(-50%, -50%);\\n      opacity: 1;\\n      z-index: 1;\\n      width: 100px;\\n      height: 100px;\\n      border-radius: 50%;\\n      background: radial-gradient(\\n        50% 50% at 50% 50%,\\n        #ffffff 0%,\\n        rgba(255, 255, 255, 0) 60.42%\\n      );\\n      box-shadow: 0px 0px 6px 1px rgba(255, 255, 255, 0.5);\\n    }\\n\\n    .debtAmountPosToken {\\n      position: absolute;\\n      width: 100%;\\n      bottom: 50%;\\n      background-color: transparent;\\n      top: 50%;\\n      left: 0;\\n      transition: 1s;\\n\\n      &Obj {\\n        @include icon-token();\\n        transition: 1s;\\n      }\\n    }\\n\\n    .trackLabel {\\n      top: -22px;\\n      padding: 0 30px;\\n      border: 1px solid #c5c5c5;\\n      position: relative;\\n    }\\n\\n    .trackMark {\\n      display: inline-block;\\n      position: relative;\\n      width: 20%;\\n      height: 100%;\\n      user-select: none;\\n      cursor: pointer;\\n\\n      &Gradient {\\n        content: '';\\n        background: $linear-gradient-mark;\\n        position: absolute;\\n        height: 70px;\\n        width: 3px;\\n        bottom: 0px;\\n        right: 50%;\\n        transform-origin: -50% 100%;\\n\\n        &left {\\n          @include transform-mark-gradient(1);\\n        }\\n\\n        &center {\\n          background: transparent;\\n        }\\n\\n        &right {\\n          @include transform-mark-gradient(-1);\\n        }\\n      }\\n\\n      &Label {\\n        position: absolute;\\n        font-size: 12px;\\n        line-height: 14px;\\n        color: #777777;\\n        width: 24px;\\n        left: 50%;\\n        margin-right: -50%;\\n        transform: translate(-50%, 6px);\\n\\n        &ColorBlue {\\n          color: #1fcbff;\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n.buttonIcon {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  cursor: pointer;\\n  background: transparent;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n\\n  &:hover {\\n    opacity: 0.7;\\n  }\\n\\n  img {\\n    width: 40px;\\n    height: 55px;\\n    object-fit: cover;\\n  }\\n}\\n\\n.imgValue {\\n  position: absolute;\\n  left: 100%;\\n  white-space: nowrap;\\n  color: #777777;\\n  font-size: 12px;\\n  transform: translate(5px, 0px);\\n}\\n\\n.text {\\n  position: absolute;\\n  bottom: 100%;\\n  right: 0;\\n  transform: translate(0, -50%);\\n\\n  &Left {\\n    left: 25px;\\n    right: unset;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"formWrapper\": \"Slider-module__formWrapper___E_IKq\",\n\t\"debtAmountSlider\": \"Slider-module__debtAmountSlider___OH9Rv\",\n\t\"debtAmountPos\": \"Slider-module__debtAmountPos___j6zuy\",\n\t\"debtAmountPosToken\": \"Slider-module__debtAmountPosToken___6Fpgk\",\n\t\"debtAmountPosTokenObj\": \"Slider-module__debtAmountPosTokenObj___BYTSu\",\n\t\"trackLabel\": \"Slider-module__trackLabel___g64VO\",\n\t\"trackMark\": \"Slider-module__trackMark___CDD_B\",\n\t\"trackMarkGradient\": \"Slider-module__trackMarkGradient___RFkQX\",\n\t\"trackMarkGradientleft\": \"Slider-module__trackMarkGradientleft___I9f7D\",\n\t\"trackMarkGradientcenter\": \"Slider-module__trackMarkGradientcenter___bOWM9\",\n\t\"trackMarkGradientright\": \"Slider-module__trackMarkGradientright___uEYDE\",\n\t\"trackMarkLabel\": \"Slider-module__trackMarkLabel___louN6\",\n\t\"trackMarkLabelColorBlue\": \"Slider-module__trackMarkLabelColorBlue___G3KQ5\",\n\t\"buttonIcon\": \"Slider-module__buttonIcon___rek_s\",\n\t\"imgValue\": \"Slider-module__imgValue___HSCpp\",\n\t\"text\": \"Slider-module__text___huavV\",\n\t\"textLeft\": \"Slider-module__textLeft___CGhtQ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".TabItem-module__tabButton___ka6Fk{border-left:2px solid rgb(31, 203, 255) !important;border-left:2px solid rgb(var(--color-r), var(--color-g), var(--color-b)) !important;border-right:2px solid rgb(31, 203, 255) !important;border-right:2px solid rgb(var(--color-r), var(--color-g), var(--color-b)) !important}.TabItem-module__tabButton___ka6Fk{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;color:var(--blue-light);height:42px;width:100%;font-size:1rem;z-index:0;-webkit-transition:all .3s ease;transition:all .3s ease;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;position:relative;--color-r: 31;--color-g: 203;--color-b: 255}.TabItem-module__tabButton___ka6Fk:hover{color:var(--blue-light);text-shadow:0px 0px 10px var(--blue-light)}.TabItem-module__tabButton___ka6Fk::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__tabButton___ka6Fk::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__tabButtonActive___zuW6V{color:#fff;font-size:24px;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-left:2px solid #fff;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-right:2px solid #fff}.TabItem-module__tabButtonActive___zuW6V:hover{color:#fff;text-shadow:inherit}.TabItem-module__tabButtonActive___zuW6V::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__tabButtonActive___zuW6V::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__disable___HiZCw{cursor:default}.TabItem-module__disable___HiZCw:hover{text-shadow:inherit}.TabItem-module__left___oluHg{border-right:2px solid rgb(31, 203, 255) !important;border-right:2px solid rgb(var(--color-r), var(--color-g), var(--color-b)) !important}.TabItem-module__left___oluHg{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-left:0;border-left:initial}.TabItem-module__left___oluHg::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__left___oluHg::after{width:100%}.TabItem-module__left___oluHg::before{content:normal;content:initial}.TabItem-module__leftActive___WVT_N{color:#fff;font-size:24px;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-right:2px solid #fff}.TabItem-module__leftActive___WVT_N:hover{color:#fff;text-shadow:inherit}.TabItem-module__leftActive___WVT_N::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__leftActive___WVT_N::after{width:100%}.TabItem-module__right___HzipW{border-left:2px solid rgb(31, 203, 255) !important;border-left:2px solid rgb(var(--color-r), var(--color-g), var(--color-b)) !important}.TabItem-module__right___HzipW{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-right:0;border-right:initial}.TabItem-module__right___HzipW::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__right___HzipW::before{width:100%}.TabItem-module__right___HzipW::before{width:100%}.TabItem-module__right___HzipW::after{content:normal;content:initial}.TabItem-module__rightActive___ufXKy{color:#fff;font-size:24px;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-left:2px solid #fff}.TabItem-module__rightActive___ufXKy:hover{color:#fff;text-shadow:inherit}.TabItem-module__rightActive___ufXKy::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.TabItem-module__rightActive___ufXKy::before{width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Tabs/TabItem/TabItem.module.scss\",\"webpack://./src/components/containerGradient/saber/index.module.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import '../../containerGradient/saber/index.module.scss';\\n\\n@mixin active-saber($position) {\\n  $color-saber: 'white';\\n  color: #fff;\\n  font-size: 24px;\\n\\n  &:hover {\\n    color: #fff;\\n    text-shadow: unset;\\n  }\\n\\n  @if ($position ==left or $position ==right) {\\n    @include saber($color-saber, $position);\\n  } @else {\\n    @include saber-horizontal($color-saber);\\n  }\\n}\\n\\n@mixin changeWidth($pseudo) {\\n  &::#{$pseudo} {\\n    width: 100%;\\n  }\\n}\\n\\n.tabButton {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  position: relative;\\n  color: var(--blue-light);\\n  height: 42px;\\n  width: 100%;\\n  font-size: 1rem;\\n  z-index: 0;\\n  transition: all 0.3s ease;\\n\\n  &:hover {\\n    color: var(--blue-light);\\n    text-shadow: 0px 0px 10px var(--blue-light);\\n  }\\n\\n  @include saber-horizontal('blue', 'color');\\n\\n  &Active {\\n    @include active-saber(center);\\n  }\\n}\\n\\n.disable {\\n  cursor: default;\\n\\n  &:hover {\\n    text-shadow: unset;\\n  }\\n}\\n\\n.left {\\n  @include saber('blue', right, 'color');\\n  @include changeWidth('after');\\n\\n  border-left: unset;\\n\\n  &::before {\\n    content: unset;\\n  }\\n\\n  &Active {\\n    @include active-saber(right);\\n    @include changeWidth('after');\\n  }\\n}\\n\\n.right {\\n  @include saber('blue', left, 'color');\\n  @include changeWidth('before');\\n\\n  &::before {\\n    width: 100%;\\n  }\\n\\n  border-right: unset;\\n\\n  &::after {\\n    content: unset;\\n  }\\n\\n  &Active {\\n    @include active-saber(left);\\n    @include changeWidth('before');\\n  }\\n}\\n\",\"@mixin saber-background($position) {\\n  content: '';\\n  position: absolute;\\n  z-index: -2;\\n  #{$position}: 0;\\n\\n  @if ($position == left or $position == right) {\\n    top: 0;\\n    height: 100%;\\n    width: 20%;\\n  } @else {\\n    width: 100%;\\n    left: 0;\\n    height: 50px;\\n  }\\n\\n  filter: blur(1px);\\n\\n  background: linear-gradient(\\n    /* vise versa */ to #{$position},\\n    rgba(0, 0, 0, 0) 0%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%\\n  );\\n}\\n\\n// check Storybook for more documentation\\n$valid-colors: 'green', 'blue', 'purple', 'white', 'red', 'yellow', 'orange';\\n$valid-positions: 'left', 'right', 'top', 'bottom';\\n$saber-border-width: 2px;\\n\\n@mixin saber($color: 'green', $position, $borderColor: 'white') {\\n  position: relative;\\n\\n  // box-shadow: 0 0 10px rgba(var(--color-r), var(--color-g), var(--color-b), 0.5);\\n\\n  @if ($color == 'green') {\\n    --color-r: 54;\\n    --color-g: 214;\\n    --color-b: 174;\\n  } @else if ($color == 'blue') {\\n    --color-r: 31;\\n    --color-g: 203;\\n    --color-b: 255;\\n  } @else if ($color == 'purple') {\\n    --color-r: 246;\\n    --color-g: 43;\\n    --color-b: 253;\\n  } @else if ($color == 'white') {\\n    --color-r: 225;\\n    --color-g: 225;\\n    --color-b: 225;\\n  } @else if ($color == 'red') {\\n    --color-r: 255;\\n    --color-g: 0;\\n    --color-b: 0;\\n  } @else if ($color == 'yellow') {\\n    --color-r: 255;\\n    --color-g: 217;\\n    --color-b: 0;\\n  } @else if ($color == 'orange') {\\n    --color-r: 255;\\n    --color-g: 92;\\n    --color-b: 0;\\n  } @else {\\n    @error \\\"Invalid color: #{$color}\\\";\\n  }\\n\\n  @if ($borderColor == 'color') {\\n    border-#{$position}: $saber-border-width\\n      solid\\n      rgb(var(--color-r), var(--color-g), var(--color-b)) !important;\\n  } @else {\\n    border-#{$position}: $saber-border-width solid white;\\n  }\\n\\n  @if ($position == left or $position == top) {\\n    &::before {\\n      @include saber-background($position);\\n    }\\n  } @else if ($position == right or $position == bottom) {\\n    &::after {\\n      @include saber-background($position);\\n    }\\n  } @else {\\n    @error \\\"Invalid position: #{$position}\\\";\\n  }\\n}\\n\\n@mixin saber-horizontal($color, $borderColor: 'white') {\\n  @include saber($color, left, $borderColor);\\n  @include saber($color, right, $borderColor);\\n}\\n\\n@mixin saber-vertical($color) {\\n  @include saber($color, top);\\n  @include saber($color, bottom);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"tabButton\": \"TabItem-module__tabButton___ka6Fk\",\n\t\"tabButtonActive\": \"TabItem-module__tabButtonActive___zuW6V\",\n\t\"disable\": \"TabItem-module__disable___HiZCw\",\n\t\"left\": \"TabItem-module__left___oluHg\",\n\t\"leftActive\": \"TabItem-module__leftActive___WVT_N\",\n\t\"right\": \"TabItem-module__right___HzipW\",\n\t\"rightActive\": \"TabItem-module__rightActive___ufXKy\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Tabs-module__wrapper___V7Efq{display:grid;grid-template-columns:repeat(auto-fit, minmax(110px, 1fr));width:100%;grid-row-gap:15px;row-gap:15px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Tabs/Tabs.module.scss\"],\"names\":[],\"mappings\":\"AAAA,8BACE,YAAA,CACA,0DAAA,CACA,UAAA,CACA,iBAAA,CAAA,YAAA\",\"sourcesContent\":[\".wrapper {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(110px, 1fr));\\n  width: 100%;\\n  row-gap: 15px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"Tabs-module__wrapper___V7Efq\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__wrapper___t3t9y *{text-transform:none;text-transform:initial}.styles-module__wrapper___t3t9y h1,.styles-module__wrapper___t3t9y h2,.styles-module__wrapper___t3t9y h3,.styles-module__wrapper___t3t9y h4,.styles-module__wrapper___t3t9y h5,.styles-module__wrapper___t3t9y h6,.styles-module__wrapper___t3t9y ul,.styles-module__wrapper___t3t9y ol,.styles-module__wrapper___t3t9y div{margin-bottom:10px}.styles-module__wrapper___t3t9y ul,.styles-module__wrapper___t3t9y ol{list-style-type:disc;list-style-type:initial;padding-left:20px}.styles-module__wrapper___t3t9y img{width:100%}.styles-module__markdownContainer___bOPTf{margin:0 auto;width:max(320px, min(100%, 580px));min-height:200px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.styles-module__markdownContainer___bOPTf.styles-module__center___OZ66n{word-break:break-word;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:30px}.styles-module__markdownContainer___bOPTf.styles-module__title___FvMv7{font-size:42px}.styles-module__markdownContainer___bOPTf ul,.styles-module__markdownContainer___bOPTf li{margin-left:20px}@media(max-width: 680px){.styles-module__markdownContainer___bOPTf{width:auto;width:initial}}.styles-module__markdownContainer___bOPTf pre{margin:10px 0;background-color:#343a40;border-radius:2px}.styles-module__markdownContainer___bOPTf code{white-space:normal;line-height:20px;color:#36d6ae;font-family:\\\"Oxygen Mono\\\",monospace}.styles-module__markdownContainer___bOPTf p{margin-bottom:20px}.styles-module__markdownContainer___bOPTf p:last-child{margin-bottom:0}.styles-module__markdownContainer___bOPTf a{margin-bottom:10px}.styles-module__markdownContainer___bOPTf hr{margin-bottom:10px}.styles-module__markdownContainer___bOPTf blockquote{margin:10px 0;padding:10px 5px 10px 20px;border-left:3px solid rgba(58,183,147,.8901960784)}.styles-module__markdownContainer___bOPTf table{margin-bottom:10px;border-collapse:separate;border-spacing:0 5px;border:0}.styles-module__markdownContainer___bOPTf table th{border-bottom:1px solid rgba(255,255,255,.5);border-collapse:separate;border-spacing:5px 5px}.styles-module__markdownContainerPreview___cg5q6{width:100%;word-wrap:break-word}.styles-module__markdownContainerPreview___cg5q6 code{white-space:normal;line-height:20px}.styles-module__markdownContainerPreview___cg5q6 p{margin-bottom:10px;font-size:16px}.styles-module__markdownContainerPreview___cg5q6 p:last-child{margin-bottom:0;font-size:16px}.styles-module__markdownContainerPreview___cg5q6 h1{font-size:23px}.styles-module__markdownContainerPreview___cg5q6 h2{font-size:20px}.styles-module__markdownContainerPreview___cg5q6 h3{font-size:18px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/TextMarkdown/styles.module.scss\"],\"names\":[],\"mappings\":\"AACE,kCACE,mBAAA,CAAA,sBAAA,CAGF,4TASE,kBAAA,CAGF,sEAEE,oBAAA,CAAA,uBAAA,CACA,iBAAA,CAGF,oCACE,UAAA,CAIJ,0CACE,aAAA,CACA,kCAAA,CACA,gBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CAEA,wEACE,qBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,cAAA,CAGF,uEACE,cAAA,CAGF,0FAEE,gBAAA,CAGF,yBAvBF,0CAwBI,UAAA,CAAA,aAAA,CAAA,CAIJ,8CACE,aAAA,CACA,wBAAA,CACA,iBAAA,CAGF,+CACE,kBAAA,CACA,gBAAA,CACA,aAAA,CACA,mCAAA,CAGF,4CACE,kBAAA,CAEA,uDACE,eAAA,CAIJ,4CACE,kBAAA,CAGF,6CACE,kBAAA,CAGF,qDACE,aAAA,CACA,0BAAA,CACA,kDAAA,CAGF,gDACE,kBAAA,CACA,wBAAA,CACA,oBAAA,CACA,QAAA,CAEA,mDACE,4CAAA,CACA,wBAAA,CACA,sBAAA,CAIJ,iDACE,UAAA,CACA,oBAAA,CAEA,sDACE,kBAAA,CACA,gBAAA,CAGF,mDACE,kBAAA,CACA,cAAA,CAGF,8DACE,eAAA,CACA,cAAA,CAGF,oDACE,cAAA,CAGF,oDACE,cAAA,CAGF,oDACE,cAAA\",\"sourcesContent\":[\".wrapper {\\n  * {\\n    text-transform: initial;\\n  }\\n\\n  h1,\\n  h2,\\n  h3,\\n  h4,\\n  h5,\\n  h6,\\n  ul,\\n  ol,\\n  div {\\n    margin-bottom: 10px;\\n  }\\n\\n  ul,\\n  ol {\\n    list-style-type: initial;\\n    padding-left: 20px;\\n  }\\n\\n  img {\\n    width: 100%;\\n  }\\n}\\n\\n.markdownContainer {\\n  margin: 0 auto;\\n  width: clamp(320px, 100%, 580px);\\n  min-height: 200px;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n\\n  &.center {\\n    word-break: break-word;\\n    align-items: center;\\n    font-size: 30px;\\n  }\\n\\n  &.title {\\n    font-size: 42px;\\n  }\\n\\n  ul,\\n  li {\\n    margin-left: 20px;\\n  }\\n\\n  @media (width <= 680px) {\\n    width: unset;\\n  }\\n}\\n\\n.markdownContainer pre {\\n  margin: 10px 0;\\n  background-color: #343a40;\\n  border-radius: 2px;\\n}\\n\\n.markdownContainer code {\\n  white-space: normal;\\n  line-height: 20px;\\n  color: #36d6ae;\\n  font-family: 'Oxygen Mono', monospace;\\n}\\n\\n.markdownContainer p {\\n  margin-bottom: 20px;\\n\\n  &:last-child {\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.markdownContainer a {\\n  margin-bottom: 10px;\\n}\\n\\n.markdownContainer hr {\\n  margin-bottom: 10px;\\n}\\n\\n.markdownContainer blockquote {\\n  margin: 10px 0;\\n  padding: 10px 5px 10px 20px;\\n  border-left: 3px solid #3ab793e3;\\n}\\n\\n.markdownContainer table {\\n  margin-bottom: 10px;\\n  border-collapse: separate;\\n  border-spacing: 0 5px;\\n  border: 0;\\n\\n  th {\\n    border-bottom: 1px solid rgb(255 255 255 / 50%);\\n    border-collapse: separate;\\n    border-spacing: 5px 5px;\\n  }\\n}\\n\\n.markdownContainerPreview {\\n  width: 100%;\\n  word-wrap: break-word;\\n\\n  code {\\n    white-space: normal;\\n    line-height: 20px;\\n  }\\n\\n  p {\\n    margin-bottom: 10px;\\n    font-size: 16px;\\n  }\\n\\n  p:last-child {\\n    margin-bottom: 0;\\n    font-size: 16px;\\n  }\\n\\n  h1 {\\n    font-size: 23px;\\n  }\\n\\n  h2 {\\n    font-size: 20px;\\n  }\\n\\n  h3 {\\n    font-size: 18px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"styles-module__wrapper___t3t9y\",\n\t\"markdownContainer\": \"styles-module__markdownContainer___bOPTf\",\n\t\"center\": \"styles-module__center___OZ66n\",\n\t\"title\": \"styles-module__title___FvMv7\",\n\t\"markdownContainerPreview\": \"styles-module__markdownContainerPreview___cg5q6\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".account-module__container___ZTXmv{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:nowrap;flex-wrap:nowrap;gap:10px}.account-module__avatar___VDd0O{width:30px;height:30px;border-radius:50%}.account-module__moniker___y_grx{color:var(--primary-color);padding:0;white-space:nowrap;width:100%;overflow-x:hidden;text-overflow:ellipsis;text-align:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/account/account.module.scss\"],\"names\":[],\"mappings\":\"AAAA,mCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,oBAAA,CAAA,gBAAA,CACA,QAAA,CAGF,gCACE,UAAA,CACA,WAAA,CACA,iBAAA,CAGF,iCACE,0BAAA,CACA,SAAA,CACA,kBAAA,CAEA,UAAA,CACA,iBAAA,CACA,sBAAA,CACA,iBAAA\",\"sourcesContent\":[\".container {\\n  display: flex;\\n  align-items: center;\\n  flex-wrap: nowrap;\\n  gap: 10px;\\n}\\n\\n.avatar {\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n}\\n\\n.moniker {\\n  color: var(--primary-color);\\n  padding: 0;\\n  white-space: nowrap;\\n\\n  width: 100%;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  text-align: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"account-module__container___ZTXmv\",\n\t\"avatar\": \"account-module__avatar___VDd0O\",\n\t\"moniker\": \"account-module__moniker___y_grx\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__ActionBarContainer___qp_o8{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;position:fixed;bottom:0px;left:0;padding:10px 0;background:-webkit-gradient(linear, left bottom, left top, color-stop(76%, rgba(0, 0, 0, 0.93)), to(rgba(0, 0, 0, 0)));background:linear-gradient(0deg, rgba(0, 0, 0, 0.93) 76%, rgba(0, 0, 0, 0) 100%);z-index:2}.styles-module__ActionBarContainerContent___A6Kgo{max-width:1000px;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;gap:25px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative;padding:0 70px;padding-bottom:10px}@media(max-width: 540px){.styles-module__ActionBarContainerContent___A6Kgo{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.styles-module__ActionBarContentText___pWmsb{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:0 15px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;color:#fff;font-size:20px}.styles-module__chooseAccount___aN_Io{padding:0 5px;color:var(--primary-color)}.styles-module__ActionBarWrap___iCiv6{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:62%;position:fixed;bottom:20px;left:50%;-webkit-transform:translate(-50%, 10px);transform:translate(-50%, 10px);background:#000;z-index:3}.styles-module__ActionBarWrapContent___vzLIi{max-width:1000px;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;display:grid;grid-template-columns:.7fr 1fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative;padding:10px 0px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/actionBar/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,2CACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,UAAA,CACA,cAAA,CACA,UAAA,CACA,MAAA,CACA,cAAA,CACA,sHAAA,CAAA,gFAAA,CAGA,SAAA,CAEA,kDACE,gBAAA,CACA,kBAAA,CAAA,mBAAA,CAAA,WAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,qBAAA,CAAA,kBAAA,CAAA,oBAAA,CACA,QAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CACA,cAAA,CACA,mBAAA,CAGF,yBACE,kDACE,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CAAA,CAKN,6CACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,UAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,kBAAA,CAAA,mBAAA,CAAA,WAAA,CAEA,UAAA,CACA,cAAA,CAIF,sCACE,aAAA,CACA,0BAAA,CAGF,sCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,SAAA,CACA,cAAA,CACA,WAAA,CACA,QAAA,CACA,uCAAA,CAAA,+BAAA,CAEA,eAAA,CACA,SAAA,CAEA,6CACE,gBAAA,CACA,kBAAA,CAAA,mBAAA,CAAA,WAAA,CACA,YAAA,CACA,8BAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CACA,gBAAA\",\"sourcesContent\":[\".ActionBarContainer {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  position: fixed;\\n  bottom: 0px;\\n  left: 0;\\n  padding: 10px 0;\\n  background: linear-gradient(0deg,\\n      rgba(0, 0, 0, 0.93) 76%,\\n      rgba(0, 0, 0, 0) 100%);\\n  z-index: 2;\\n\\n  &Content {\\n    max-width: 1000px;\\n    flex-grow: 1;\\n    display: flex;\\n    align-items: flex-end;\\n    gap: 25px;\\n    justify-content: center;\\n    position: relative;\\n    padding: 0 70px;\\n    padding-bottom: 10px;\\n  }\\n\\n  @media (max-width: 540px) {\\n    &Content {\\n      flex-direction: column;\\n      align-items: center;\\n    }\\n  }\\n}\\n\\n.ActionBarContentText {\\n  display: flex;\\n  align-items: center;\\n  gap: 0 15px;\\n  justify-content: center;\\n  flex-grow: 1;\\n  // color: #777777;\\n  color: #fff;\\n  font-size: 20px;\\n}\\n\\n\\n.chooseAccount {\\n  padding: 0 5px;\\n  color: var(--primary-color);\\n}\\n\\n.ActionBarWrap {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 62%;\\n  position: fixed;\\n  bottom: 20px;\\n  left: 50%;\\n  transform: translate(-50%, 10px);\\n  // padding: 10px 0;\\n  background: #000;\\n  z-index: 3;\\n\\n  &Content {\\n    max-width: 1000px;\\n    flex-grow: 1;\\n    display: grid;\\n    grid-template-columns: 0.7fr 1fr;\\n    align-items: center;\\n    justify-content: center;\\n    position: relative;\\n    padding: 10px 0px;\\n   \\n  }\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"ActionBarContainer\": \"styles-module__ActionBarContainer___qp_o8\",\n\t\"ActionBarContainerContent\": \"styles-module__ActionBarContainerContent___A6Kgo\",\n\t\"ActionBarContentText\": \"styles-module__ActionBarContentText___pWmsb\",\n\t\"chooseAccount\": \"styles-module__chooseAccount___aN_Io\",\n\t\"ActionBarWrap\": \"styles-module__ActionBarWrap___iCiv6\",\n\t\"ActionBarWrapContent\": \"styles-module__ActionBarWrapContent___vzLIi\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Button-module__containerBtnGrd___hvPA8{border:none;outline:none;background-color:rgba(0,0,0,0);color:#36d6ae;position:relative;height:52px;min-width:217px;font-size:18px}.Button-module__containerBtnGrd___hvPA8:hover{color:#40ecc1}.Button-module__containerBtnGrd___hvPA8:disabled{cursor:not-allowed;color:#777}.Button-module__containerBtnGrd___hvPA8:focus-visible{border:1px solid #40ecc1}.Button-module__containerBtnGrd___hvPA8:disabled:hover{color:#777}.Button-module__containerBtnGrd___hvPA8::before{left:0;border-radius:2px 0px 0px 2px;content:\\\"\\\";position:absolute;background:#fff;border:1.5px solid #fff;-webkit-box-sizing:border-box;box-sizing:border-box;top:0;bottom:0;-webkit-box-shadow:0px 0px 4px 1px rgba(54,214,174,.5),0px 0px 15px 1px rgba(54,214,174,.5);box-shadow:0px 0px 4px 1px rgba(54,214,174,.5),0px 0px 15px 1px rgba(54,214,174,.5);-webkit-animation:Button-module__blink___RTwTw 1s infinite;animation:Button-module__blink___RTwTw 1s infinite;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}.Button-module__containerBtnGrd___hvPA8::after{right:0;border-radius:0px 2px 2px 0px;content:\\\"\\\";position:absolute;background:#fff;border:1.5px solid #fff;-webkit-box-sizing:border-box;box-sizing:border-box;top:0;bottom:0;-webkit-box-shadow:0px 0px 4px 1px rgba(54,214,174,.5),0px 0px 15px 1px rgba(54,214,174,.5);box-shadow:0px 0px 4px 1px rgba(54,214,174,.5),0px 0px 15px 1px rgba(54,214,174,.5);-webkit-animation:Button-module__blink___RTwTw 1s infinite;animation:Button-module__blink___RTwTw 1s infinite;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}.Button-module__smallBtn___b2e6r{height:34px;min-width:120px;font-size:16px}a.Button-module__containerBtnGrd___hvPA8{display:inline-block}@-webkit-keyframes Button-module__blink___RTwTw{0%,100%{opacity:1}50%{opacity:.7}}@keyframes Button-module__blink___RTwTw{0%,100%{opacity:1}50%{opacity:.7}}.Button-module__GradientContainer___YAvqm{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;position:relative;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0 10px}.Button-module__containerBtnGrd___hvPA8:not(:disabled) .Button-module__GradientContainer___YAvqm::before{content:\\\"\\\";position:absolute;height:100%;width:50px;top:0;bottom:0;opacity:0.2;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 237, 235, 0)), to(rgb(0, 237, 235)));background:linear-gradient(-90deg, rgba(0, 237, 235, 0) 0%, rgb(0, 237, 235) 100%);left:3px;-webkit-transform-origin:left;transform-origin:left;-webkit-transform:perspective(100px) rotateY(55deg);transform:perspective(100px) rotateY(55deg)}.Button-module__containerBtnGrd___hvPA8:not(:disabled) .Button-module__GradientContainer___YAvqm::after{content:\\\"\\\";position:absolute;height:100%;width:50px;top:0;bottom:0;opacity:0.2;background:-webkit-gradient(linear, left top, right top, from(rgba(0, 237, 235, 0)), to(rgb(0, 237, 235)));background:linear-gradient(90deg, rgba(0, 237, 235, 0) 0%, rgb(0, 237, 235) 100%);right:3px;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:perspective(100px) rotateY(-55deg);transform:perspective(100px) rotateY(-55deg)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/btnGrd/Button.module.scss\"],\"names\":[],\"mappings\":\"AAuCA,wCACE,WAAA,CACA,YAAA,CACA,8BAAA,CACA,aA3CW,CA4CX,iBAAA,CACA,WAAA,CACA,eAAA,CACA,cAAA,CAEA,8CACE,aAAA,CAGF,iDACE,kBAAA,CACA,UAAA,CAGF,sDACE,wBAAA,CAGF,uDACE,UAAA,CAGF,gDACE,MAAA,CACA,6BAAA,CAzDF,UAAA,CACA,iBAAA,CACA,eAAA,CACA,uBAAA,CACA,6BAAA,CAAA,qBAAA,CACA,KAAA,CACA,QAAA,CACA,2FAAA,CAAA,mFAAA,CAeA,0DAAA,CAAA,kDAAA,CACA,gCAAA,CAAA,wBAAA,CACA,6CAAA,CAAA,qCAAA,CACA,SAAA,CAqCA,+CACE,OAAA,CACA,6BAAA,CAhEF,UAAA,CACA,iBAAA,CACA,eAAA,CACA,uBAAA,CACA,6BAAA,CAAA,qBAAA,CACA,KAAA,CACA,QAAA,CACA,2FAAA,CAAA,mFAAA,CAeA,0DAAA,CAAA,kDAAA,CACA,gCAAA,CAAA,wBAAA,CACA,6CAAA,CAAA,qCAAA,CACA,SAAA,CA6CF,iCACE,WAAA,CACA,eAAA,CACA,cAAA,CAGF,yCACE,oBAAA,CAGF,gDACE,QAEE,SAAA,CAGF,IACE,UAAA,CAAA,CAPJ,wCACE,QAEE,SAAA,CAGF,IACE,UAAA,CAAA,CAIJ,0CACE,mCAAA,CAAA,2BAAA,CACA,iBAAA,CACA,WAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,cAAA,CAKE,yGA3FF,UAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,KAAA,CACA,QAAA,CACA,WAAA,CA1BA,0GAAA,CAAA,kFAAA,CAkHI,QAAA,CACA,6BAAA,CAAA,qBAAA,CACA,mDAAA,CAAA,2CAAA,CAGF,wGAnGF,UAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,KAAA,CACA,QAAA,CACA,WAAA,CA1BA,0GAAA,CAAA,iFAAA,CA0HI,SAAA,CACA,8BAAA,CAAA,sBAAA,CACA,oDAAA,CAAA,4CAAA\",\"sourcesContent\":[\"$color-text: #36d6ae;\\n\\n@mixin linear-gradient-green($route) {\\n  background: linear-gradient(\\n    $route,\\n    rgba(0, 237, 235, 0) 0%,\\n    rgba(0, 237, 235, 6) 100%\\n  );\\n}\\n\\n@mixin ion-lamp {\\n  content: '';\\n  position: absolute;\\n  background: #ffffff;\\n  border: 1.5px solid #ffffff;\\n  box-sizing: border-box;\\n  top: 0;\\n  bottom: 0;\\n  box-shadow: 0px 0px 4px 1px rgba(54, 214, 174, 0.5),\\n    0px 0px 15px 1px rgba(54, 214, 174, 0.5);\\n}\\n\\n@mixin styleGradientPseudoEl {\\n  content: '';\\n  position: absolute;\\n  height: 100%;\\n  width: 50px;\\n  top: 0;\\n  bottom: 0;\\n  opacity: 20%;\\n}\\n\\n@mixin animation-ion-lamp {\\n  animation: blink 1s infinite;\\n  animation-fill-mode: both;\\n  animation-timing-function: ease-in-out;\\n  opacity: 1;\\n}\\n\\n.containerBtnGrd {\\n  border: none;\\n  outline: none;\\n  background-color: transparent;\\n  color: $color-text;\\n  position: relative;\\n  height: 52px;\\n  min-width: 217px;\\n  font-size: 18px;\\n\\n  &:hover {\\n    color: #40ecc1;\\n  }\\n\\n  &:disabled {\\n    cursor: not-allowed;\\n    color: #777;\\n  }\\n\\n  &:focus-visible {\\n    border: 1px solid #40ecc1;\\n  }\\n\\n  &:disabled:hover {\\n    color: #777;\\n  }\\n\\n  &::before {\\n    left: 0;\\n    border-radius: 2px 0px 0px 2px;\\n    @include ion-lamp;\\n    @include animation-ion-lamp;\\n  }\\n\\n  &::after {\\n    right: 0;\\n    border-radius: 0px 2px 2px 0px;\\n    @include ion-lamp;\\n    @include animation-ion-lamp;\\n  }\\n}\\n\\n.smallBtn {\\n  height: 34px;\\n  min-width: 120px;\\n  font-size: 16px;\\n}\\n\\na.containerBtnGrd {\\n  display: inline-block;\\n}\\n\\n@keyframes blink {\\n  0%,\\n  100% {\\n    opacity: 1;\\n  }\\n\\n  50% {\\n    opacity: 0.7;\\n  }\\n}\\n\\n.GradientContainer {\\n  transform-style: preserve-3d;\\n  position: relative;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0 10px;\\n}\\n\\n.containerBtnGrd:not(:disabled) {\\n  .GradientContainer {\\n    &::before {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient-green(-90deg);\\n      left: 3px;\\n      transform-origin: left;\\n      transform: perspective(100px) rotateY(55deg);\\n    }\\n\\n    &::after {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient-green(90deg);\\n      right: 3px;\\n      transform-origin: right;\\n      transform: perspective(100px) rotateY(-55deg);\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerBtnGrd\": \"Button-module__containerBtnGrd___hvPA8\",\n\t\"blink\": \"Button-module__blink___RTwTw\",\n\t\"smallBtn\": \"Button-module__smallBtn___b2e6r\",\n\t\"GradientContainer\": \"Button-module__GradientContainer___YAvqm\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./images/attach.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./images/close.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".AddFile-module__button___VDTMn{background-color:rgba(0,0,0,0);outline:none;border:medium none currentColor;border:initial;background-position:center center;background-repeat:no-repeat;height:25px;width:25px;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");margin:0 5px;background-size:contain;font-size:0;padding:3px}.AddFile-module__button___VDTMn.AddFile-module__remove___ICEve{background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \")}.AddFile-module__button___VDTMn:hover{opacity:.8}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/buttons/AddFile/AddFile.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACE,8BAAA,CACA,YAAA,CACA,+BAAA,CAAA,cAAA,CACA,iCAAA,CACA,2BAAA,CACA,WAAA,CACA,UAAA,CACA,wDAAA,CACA,YAAA,CACA,uBAAA,CACA,WAAA,CACA,WAAA,CAEA,+DACE,wDAAA,CAEF,sCACE,UAAA\",\"sourcesContent\":[\".button {\\n  background-color: transparent;\\n  outline: none;\\n  border: unset;\\n  background-position: center center;\\n  background-repeat: no-repeat;\\n  height: 25px;\\n  width: 25px;\\n  background-image: url(./images/attach.svg);\\n  margin: 0 5px;\\n  background-size: contain;\\n  font-size: 0;\\n  padding: 3px;\\n\\n  &.remove {\\n    background-image: url(./images/close.svg);\\n  }\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"button\": \"AddFile-module__button___VDTMn\",\n\t\"remove\": \"AddFile-module__remove___ICEve\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ButtonIcon-module__container___UkmSU{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:none;cursor:pointer;background:rgba(0,0,0,0);position:relative;margin:0 10px;padding:5px 0px}.ButtonIcon-module__container___UkmSU img{width:34px;height:30px;-o-object-fit:contain;object-fit:contain}.ButtonIcon-module__container___UkmSU.ButtonIcon-module__activeIcon___eF4Af::after{content:\\\"\\\";height:1px;width:20px;position:absolute;top:100%;background-color:#36d6ae;-webkit-box-shadow:0px 0px 3px 1px #36d6ae;box-shadow:0px 0px 3px 1px #36d6ae}.ButtonIcon-module__container___UkmSU:hover img{opacity:.8}.ButtonIcon-module__container___UkmSU:disabled{opacity:.6}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/buttons/ButtonIcon/ButtonIcon.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,WAAA,CACA,cAAA,CACA,wBAAA,CACA,iBAAA,CACA,aAAA,CACA,eAAA,CAEA,0CACE,UAAA,CACA,WAAA,CACA,qBAAA,CAAA,kBAAA,CAIA,mFACE,UAAA,CACA,UAAA,CACA,UAAA,CACA,iBAAA,CACA,QAAA,CACA,wBAAA,CACA,0CAAA,CAAA,kCAAA,CAKF,gDACE,UAAA,CAIJ,+CACE,UAAA\",\"sourcesContent\":[\".container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  cursor: pointer;\\n  background: transparent;\\n  position: relative;\\n  margin: 0 10px;\\n  padding: 5px 0px;\\n\\n  img {\\n    width: 34px;\\n    height: 30px;\\n    object-fit: contain;\\n  }\\n\\n  &.activeIcon {\\n    &::after {\\n      content: '';\\n      height: 1px;\\n      width: 20px;\\n      position: absolute;\\n      top: 100%;\\n      background-color: #36d6ae;\\n      box-shadow: 0px 0px 3px 1px #36d6ae;\\n    }\\n  }\\n\\n  &:hover {\\n    img {\\n      opacity: 0.8;\\n    }\\n  }\\n\\n  &:disabled {\\n    opacity: 0.6;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"ButtonIcon-module__container___UkmSU\",\n\t\"activeIcon\": \"ButtonIcon-module__activeIcon___eF4Af\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ContainerGradient-module__containerContainerGradient___fzUtZ{width:100%;min-height:50px;position:relative;padding:0px;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-left:2px solid #fff;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-right:2px solid #fff}.ContainerGradient-module__containerContainerGradient___fzUtZ::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.ContainerGradient-module__containerContainerGradient___fzUtZ::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.ContainerGradient-module__containerContainerGradient___fzUtZ::after{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);right:0}.ContainerGradient-module__containerContainerGradient___fzUtZ::before{left:0;content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%)}.ContainerGradient-module__containerContainerGradientContent___WrNVq{position:relative;margin:0px;padding:17px 15px;min-height:200px;height:1px;-webkit-transition:1s ease-in-out;transition:1s ease-in-out}.ContainerGradient-module__containerContainerGradientContententering___L46Re{opacity:0}.ContainerGradient-module__containerContainerGradientContententered___lKnhZ{opacity:1;height:1px}.ContainerGradient-module__containerContainerGradientContentexiting___VacF_{opacity:0;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.ContainerGradient-module__containerContainerGradientContentexited___gNmMz{height:0px !important}.ContainerGradient-module__containerContainerGradientContentexited___gNmMz{opacity:0;padding:0px;min-height:0px;visibility:hidden}.ContainerGradient-module__wrapContainerLamp___fnuNi{position:relative;--color-r: 0;--color-g: 0;--color-b: 0}.ContainerGradient-module__wrapContainerLampDefault___O7oee{--color-r: 225;--color-g: 225;--color-b: 225}.ContainerGradient-module__wrapContainerLampRed___he6b1{--color-r: 255;--color-g: 0;--color-b: 0}.ContainerGradient-module__wrapContainerLampGreen___bWQ_g{--color-r: 54;--color-g: 214;--color-b: 174}.ContainerGradient-module__wrapContainerLampBlue___KBnYj{--color-r: 31;--color-g: 203;--color-b: 255}.ContainerGradient-module__wrapContainerLampYellow___R8fdD{--color-r: 255;--color-g: 217;--color-b: 0}.ContainerGradient-module__wrapContainerLampPink___SEeXe{--color-r: 246;--color-g: 43;--color-b: 253}.ContainerGradient-module__wrapContainerLamp___fnuNi::before{left:0}.ContainerGradient-module__wrapContainerLamp___fnuNi::after{right:0}.ContainerGradient-module__wrapContainerLamp___fnuNi::before,.ContainerGradient-module__wrapContainerLamp___fnuNi::after{content:\\\"\\\";position:absolute;background:#fff;border:1px solid #fff;-webkit-box-sizing:border-box;box-sizing:border-box;top:0;bottom:0}.ContainerGradient-module__containerGradientText___TDRuC{width:100%;min-height:50px;position:relative;padding:0px 5px;height:100%}.ContainerGradient-module__containerGradientText___TDRuC::after,.ContainerGradient-module__containerGradientText___TDRuC::before{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0}.ContainerGradient-module__containerGradientText___TDRuC::after{background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);right:0}.ContainerGradient-module__containerGradientText___TDRuC::before{left:0;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%)}.ContainerGradient-module__containerGradientTextContent___X2inO{position:relative;margin:0px -5px;padding:15px;overflow-x:auto;overflow-y:hidden}.ContainerGradient-module__togglingDisable___IDJTX .ContainerGradient-module__containerContainerGradientTitle___nexYz{cursor:default}.ContainerGradient-module__togglingDisable___IDJTX .ContainerGradient-module__containerContainerGradientContent___WrNVq{height:auto}.ContainerGradient-module__titleTogglingActive___IfwkN{cursor:pointer}.ContainerGradient-module__containerTxs___fMC0h{width:100%;padding:15px;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:15px}.ContainerGradient-module__containerTxsTxHash____qpmU{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative;z-index:1}.ContainerGradient-module__containerTxsRawLog___hDBvn{position:relative;z-index:1}.ContainerGradient-module__containerTxsConfirmed___rDsYL{position:relative}.ContainerGradient-module__containerTxsConfirmed___rDsYL::before{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);left:0;opacity:0.11}.ContainerGradient-module__containerTxsConfirmed___rDsYL::after{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);right:0;opacity:0.11}.ContainerGradient-module__containerTxsPending___qqU1d{position:relative}.ContainerGradient-module__containerTxsPending___qqU1d::before{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);left:0;opacity:0.12}.ContainerGradient-module__containerTxsPending___qqU1d::after{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);right:0;opacity:0.12}.ContainerGradient-module__containerTxsDanger___vTVqa{position:relative}.ContainerGradient-module__containerTxsDanger___vTVqa::after{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);right:0;opacity:0.11}.ContainerGradient-module__containerTxsDanger___vTVqa::before{content:\\\"\\\";position:absolute;height:100%;width:100px;z-index:1;pointer-events:none;top:0;bottom:0;background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)));background:linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%);left:0;opacity:0.11}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/containerGradient/ContainerGradient.module.scss\",\"webpack://./src/components/containerGradient/saber/index.module.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"// TODO: component is need be removed (use Display)\\n\\n@import './saber/index.module.scss';\\n\\n@mixin linear-gradient($route) {\\n  background: linear-gradient(\\n    $route,\\n    rgba(0, 0, 0, 0) 0%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 100%\\n  );\\n}\\n\\n@mixin styleGradientPseudoEl {\\n  content: '';\\n  position: absolute;\\n  height: 100%;\\n  width: 100px;\\n  z-index: 1;\\n  pointer-events: none;\\n  top: 0;\\n  bottom: 0;\\n}\\n\\n.containerContainerGradient {\\n  width: 100%;\\n  min-height: 50px;\\n  position: relative;\\n  padding: 0px;\\n\\n  @include saber-horizontal('blue');\\n\\n  &::after {\\n    @include styleGradientPseudoEl;\\n    @include linear-gradient(90deg);\\n    right: 0;\\n  }\\n\\n  &::before {\\n    left: 0;\\n    @include styleGradientPseudoEl;\\n    @include linear-gradient(-90deg);\\n  }\\n\\n  &Content {\\n    position: relative;\\n    margin: 0px;\\n    padding: 17px 15px;\\n    min-height: 200px;\\n    height: 1px;\\n    transition: 1s ease-in-out;\\n\\n    &entering {\\n      opacity: 0;\\n    }\\n\\n    &entered {\\n      opacity: 1;\\n      height: 1px;\\n    }\\n\\n    &exiting {\\n      opacity: 0;\\n      transition: 0.5s ease-in-out;\\n    }\\n\\n    &exited {\\n      opacity: 0;\\n      padding: 0px;\\n      height: 0px !important;\\n      min-height: 0px;\\n      visibility: hidden;\\n    }\\n  }\\n}\\n\\n@mixin ion-lamp {\\n  content: '';\\n  position: absolute;\\n  background: #ffffff;\\n  border: 1px solid #ffffff;\\n  box-sizing: border-box;\\n  top: 0;\\n  bottom: 0;\\n}\\n\\n.wrapContainerLamp {\\n  position: relative;\\n\\n  --color-r: 0;\\n  --color-g: 0;\\n  --color-b: 0;\\n\\n  // reuse colors\\n  &Default {\\n    --color-r: 225;\\n    --color-g: 225;\\n    --color-b: 225;\\n  }\\n\\n  &Red {\\n    --color-r: 255;\\n    --color-g: 0;\\n    --color-b: 0;\\n  }\\n\\n  &Green {\\n    --color-r: 54;\\n    --color-g: 214;\\n    --color-b: 174;\\n  }\\n\\n  &Blue {\\n    --color-r: 31;\\n    --color-g: 203;\\n    --color-b: 255;\\n  }\\n\\n  &Yellow {\\n    --color-r: 255;\\n    --color-g: 217;\\n    --color-b: 0;\\n  }\\n\\n  &Pink {\\n    --color-r: 246;\\n    --color-g: 43;\\n    --color-b: 253;\\n  }\\n}\\n\\n.wrapContainerLamp {\\n  &::before {\\n    left: 0;\\n  }\\n\\n  &::after {\\n    right: 0;\\n  }\\n\\n  &::before,\\n  &::after {\\n    @include ion-lamp;\\n  }\\n}\\n\\n.containerGradientText {\\n  width: 100%;\\n  min-height: 50px;\\n  position: relative;\\n  padding: 0px 5px;\\n  height: 100%;\\n\\n  &::after,\\n  &::before {\\n    @include styleGradientPseudoEl;\\n  }\\n\\n  &::after {\\n    @include linear-gradient(90deg);\\n    right: 0;\\n  }\\n\\n  &::before {\\n    left: 0;\\n    @include linear-gradient(-90deg);\\n  }\\n\\n  &Content {\\n    position: relative;\\n    margin: 0px -5px;\\n    padding: 15px;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n  }\\n}\\n\\n.togglingDisable {\\n  .containerContainerGradientTitle {\\n    cursor: default;\\n  }\\n\\n  .containerContainerGradientContent {\\n    height: auto;\\n  }\\n}\\n\\n.titleTogglingActive {\\n  cursor: pointer;\\n}\\n\\n// TODO: remove\\n.containerTxs {\\n  width: 100%;\\n  padding: 15px;\\n  display: flex;\\n  width: 100%;\\n  flex-direction: column;\\n  gap: 15px;\\n\\n  &TxHash {\\n    display: flex;\\n    width: 100%;\\n    align-items: center;\\n    justify-content: space-between;\\n    position: relative;\\n    z-index: 1;\\n  }\\n\\n  &RawLog {\\n    position: relative;\\n    z-index: 1;\\n  }\\n\\n  &Confirmed {\\n    position: relative;\\n\\n    &::before {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(-90deg);\\n      left: 0;\\n      opacity: 11%;\\n    }\\n\\n    &::after {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(90deg);\\n      right: 0;\\n      opacity: 11%;\\n    }\\n  }\\n\\n  &Pending {\\n    position: relative;\\n\\n    &::before {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(-90deg);\\n      left: 0;\\n      opacity: 12%;\\n    }\\n\\n    &::after {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(90deg);\\n      right: 0;\\n      opacity: 12%;\\n    }\\n  }\\n\\n  &Danger {\\n    position: relative;\\n\\n    &::after {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(90deg);\\n      right: 0;\\n      opacity: 11%;\\n    }\\n\\n    &::before {\\n      @include styleGradientPseudoEl;\\n      @include linear-gradient(-90deg);\\n      left: 0;\\n      opacity: 11%;\\n    }\\n  }\\n}\\n\",\"@mixin saber-background($position) {\\n  content: '';\\n  position: absolute;\\n  z-index: -2;\\n  #{$position}: 0;\\n\\n  @if ($position == left or $position == right) {\\n    top: 0;\\n    height: 100%;\\n    width: 20%;\\n  } @else {\\n    width: 100%;\\n    left: 0;\\n    height: 50px;\\n  }\\n\\n  filter: blur(1px);\\n\\n  background: linear-gradient(\\n    /* vise versa */ to #{$position},\\n    rgba(0, 0, 0, 0) 0%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%\\n  );\\n}\\n\\n// check Storybook for more documentation\\n$valid-colors: 'green', 'blue', 'purple', 'white', 'red', 'yellow', 'orange';\\n$valid-positions: 'left', 'right', 'top', 'bottom';\\n$saber-border-width: 2px;\\n\\n@mixin saber($color: 'green', $position, $borderColor: 'white') {\\n  position: relative;\\n\\n  // box-shadow: 0 0 10px rgba(var(--color-r), var(--color-g), var(--color-b), 0.5);\\n\\n  @if ($color == 'green') {\\n    --color-r: 54;\\n    --color-g: 214;\\n    --color-b: 174;\\n  } @else if ($color == 'blue') {\\n    --color-r: 31;\\n    --color-g: 203;\\n    --color-b: 255;\\n  } @else if ($color == 'purple') {\\n    --color-r: 246;\\n    --color-g: 43;\\n    --color-b: 253;\\n  } @else if ($color == 'white') {\\n    --color-r: 225;\\n    --color-g: 225;\\n    --color-b: 225;\\n  } @else if ($color == 'red') {\\n    --color-r: 255;\\n    --color-g: 0;\\n    --color-b: 0;\\n  } @else if ($color == 'yellow') {\\n    --color-r: 255;\\n    --color-g: 217;\\n    --color-b: 0;\\n  } @else if ($color == 'orange') {\\n    --color-r: 255;\\n    --color-g: 92;\\n    --color-b: 0;\\n  } @else {\\n    @error \\\"Invalid color: #{$color}\\\";\\n  }\\n\\n  @if ($borderColor == 'color') {\\n    border-#{$position}: $saber-border-width\\n      solid\\n      rgb(var(--color-r), var(--color-g), var(--color-b)) !important;\\n  } @else {\\n    border-#{$position}: $saber-border-width solid white;\\n  }\\n\\n  @if ($position == left or $position == top) {\\n    &::before {\\n      @include saber-background($position);\\n    }\\n  } @else if ($position == right or $position == bottom) {\\n    &::after {\\n      @include saber-background($position);\\n    }\\n  } @else {\\n    @error \\\"Invalid position: #{$position}\\\";\\n  }\\n}\\n\\n@mixin saber-horizontal($color, $borderColor: 'white') {\\n  @include saber($color, left, $borderColor);\\n  @include saber($color, right, $borderColor);\\n}\\n\\n@mixin saber-vertical($color) {\\n  @include saber($color, top);\\n  @include saber($color, bottom);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerContainerGradient\": \"ContainerGradient-module__containerContainerGradient___fzUtZ\",\n\t\"containerContainerGradientContent\": \"ContainerGradient-module__containerContainerGradientContent___WrNVq\",\n\t\"containerContainerGradientContententering\": \"ContainerGradient-module__containerContainerGradientContententering___L46Re\",\n\t\"containerContainerGradientContententered\": \"ContainerGradient-module__containerContainerGradientContententered___lKnhZ\",\n\t\"containerContainerGradientContentexiting\": \"ContainerGradient-module__containerContainerGradientContentexiting___VacF_\",\n\t\"containerContainerGradientContentexited\": \"ContainerGradient-module__containerContainerGradientContentexited___gNmMz\",\n\t\"wrapContainerLamp\": \"ContainerGradient-module__wrapContainerLamp___fnuNi\",\n\t\"wrapContainerLampDefault\": \"ContainerGradient-module__wrapContainerLampDefault___O7oee\",\n\t\"wrapContainerLampRed\": \"ContainerGradient-module__wrapContainerLampRed___he6b1\",\n\t\"wrapContainerLampGreen\": \"ContainerGradient-module__wrapContainerLampGreen___bWQ_g\",\n\t\"wrapContainerLampBlue\": \"ContainerGradient-module__wrapContainerLampBlue___KBnYj\",\n\t\"wrapContainerLampYellow\": \"ContainerGradient-module__wrapContainerLampYellow___R8fdD\",\n\t\"wrapContainerLampPink\": \"ContainerGradient-module__wrapContainerLampPink___SEeXe\",\n\t\"containerGradientText\": \"ContainerGradient-module__containerGradientText___TDRuC\",\n\t\"containerGradientTextContent\": \"ContainerGradient-module__containerGradientTextContent___X2inO\",\n\t\"togglingDisable\": \"ContainerGradient-module__togglingDisable___IDJTX\",\n\t\"containerContainerGradientTitle\": \"ContainerGradient-module__containerContainerGradientTitle___nexYz\",\n\t\"titleTogglingActive\": \"ContainerGradient-module__titleTogglingActive___IfwkN\",\n\t\"containerTxs\": \"ContainerGradient-module__containerTxs___fMC0h\",\n\t\"containerTxsTxHash\": \"ContainerGradient-module__containerTxsTxHash____qpmU\",\n\t\"containerTxsRawLog\": \"ContainerGradient-module__containerTxsRawLog___hDBvn\",\n\t\"containerTxsConfirmed\": \"ContainerGradient-module__containerTxsConfirmed___rDsYL\",\n\t\"containerTxsPending\": \"ContainerGradient-module__containerTxsPending___qqU1d\",\n\t\"containerTxsDanger\": \"ContainerGradient-module__containerTxsDanger___vTVqa\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Display-module__wrapper____vzVx{z-index:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__green___r0Ja_{position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-left:2px solid #fff;position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__green___r0Ja_::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__green___r0Ja_::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__blue___jwfa0{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-left:2px solid #fff;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__blue___jwfa0::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__blue___jwfa0::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__purple___L2Xn9{position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-left:2px solid #fff;position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__purple___L2Xn9::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__purple___L2Xn9::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__white___AyCK4{position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-left:2px solid #fff;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__white___AyCK4::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__white___AyCK4::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__red___ONKTS{position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__red___ONKTS::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__red___ONKTS::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__yellow___XqHrO{position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__yellow___XqHrO::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__yellow___XqHrO::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__orange___ygTjd{position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-right:2px solid #fff}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__orange___ygTjd::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx:not(.Display-module__vertical___mUmjY).Display-module__orange___ygTjd::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__green___r0Ja_{position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-top:2px solid #fff;position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__green___r0Ja_::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__green___r0Ja_::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__blue___jwfa0{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-top:2px solid #fff;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__blue___jwfa0::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__blue___jwfa0::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__purple___L2Xn9{position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-top:2px solid #fff;position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__purple___L2Xn9::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__purple___L2Xn9::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__white___AyCK4{position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-top:2px solid #fff;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__white___AyCK4::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__white___AyCK4::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__red___ONKTS{position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__red___ONKTS::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__red___ONKTS::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__yellow___XqHrO{position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__yellow___XqHrO::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__yellow___XqHrO::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__orange___ygTjd{position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-bottom:2px solid #fff}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__orange___ygTjd::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__vertical___mUmjY.Display-module__orange___ygTjd::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.Display-module__wrapper____vzVx.Display-module__left___ysOQT{border-right:0 !important;border-right:initial !important}.Display-module__wrapper____vzVx.Display-module__left___ysOQT::after{content:\\\"\\\";display:none}.Display-module__wrapper____vzVx.Display-module__left___ysOQT.Display-module__vertical___mUmjY{border-bottom:0 !important;border-bottom:initial !important}.Display-module__wrapper____vzVx.Display-module__right___aZHM0{border-left:0 !important;border-left:initial !important}.Display-module__wrapper____vzVx.Display-module__right___aZHM0::before{content:\\\"\\\";display:none}.Display-module__wrapper____vzVx.Display-module__right___aZHM0.Display-module__vertical___mUmjY{border-top:0 !important;border-top:initial !important}.Display-module__wrapper____vzVx .Display-module__inner___ivpVb{padding:23px 20px;overflow:auto;height:100%;max-height:100%}.Display-module__wrapper____vzVx.Display-module__noPaddingX___bpgdh .Display-module__inner___ivpVb{padding-left:0;padding-left:initial;padding-right:0;padding-right:initial}.Display-module__wrapper____vzVx.Display-module__noPaddingY___oFmqz .Display-module__inner___ivpVb{padding-top:0;padding-top:initial;padding-bottom:0;padding-bottom:initial}.Display-module__wrapper____vzVx.Display-module__header___MdFD1{position:relative;top:-23px}.Display-module__wrapper____vzVx::-webkit-scrollbar-thumb{background:var(--blue-light)}.Display-module__wrapper____vzVx::-webkit-scrollbar{width:2px;height:2px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/containerGradient/Display/Display.module.scss\",\"webpack://./src/components/containerGradient/saber/index.module.scss\",\"webpack://./src/style/mixins.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import '../saber/index.module';\\n@import './variables.module';\\n@import '../../../style/mixins';\\n\\n.wrapper {\\n  // TODO: remove this\\n  z-index: 0;\\n  display: flex;\\n  flex-direction: column;\\n\\n  &:not(.vertical) {\\n    @each $color in $valid-colors {\\n      &.#{$color} {\\n        @include saber-horizontal($color);\\n      }\\n    }\\n  }\\n\\n  &.vertical {\\n    @each $color in $valid-colors {\\n      &.#{$color} {\\n        @include saber-vertical($color);\\n      }\\n    }\\n  }\\n\\n  &.left {\\n    &::after {\\n      content: '';\\n      display: none;\\n    }\\n\\n    border-right: unset !important;\\n\\n    &.vertical {\\n      border-bottom: unset !important;\\n    }\\n  }\\n\\n  &.right {\\n    &::before {\\n      content: '';\\n      display: none;\\n    }\\n\\n    border-left: unset !important;\\n\\n    &.vertical {\\n      border-top: unset !important;\\n    }\\n  }\\n\\n  .inner {\\n    padding: $display-padding-top $display-padding-x;\\n    overflow: auto;\\n    height: 100%;\\n    max-height: 100%;\\n  }\\n\\n  &.noPaddingX {\\n    .inner {\\n      padding-left: unset;\\n      padding-right: unset;\\n    }\\n  }\\n\\n  &.noPaddingY {\\n    .inner {\\n      padding-top: unset;\\n      padding-bottom: unset;\\n    }\\n  }\\n\\n  &.header {\\n    position: relative;\\n    top: -$display-padding-top;\\n  }\\n\\n  @include blueScroll;\\n}\\n\",\"@mixin saber-background($position) {\\n  content: '';\\n  position: absolute;\\n  z-index: -2;\\n  #{$position}: 0;\\n\\n  @if ($position == left or $position == right) {\\n    top: 0;\\n    height: 100%;\\n    width: 20%;\\n  } @else {\\n    width: 100%;\\n    left: 0;\\n    height: 50px;\\n  }\\n\\n  filter: blur(1px);\\n\\n  background: linear-gradient(\\n    /* vise versa */ to #{$position},\\n    rgba(0, 0, 0, 0) 0%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%\\n  );\\n}\\n\\n// check Storybook for more documentation\\n$valid-colors: 'green', 'blue', 'purple', 'white', 'red', 'yellow', 'orange';\\n$valid-positions: 'left', 'right', 'top', 'bottom';\\n$saber-border-width: 2px;\\n\\n@mixin saber($color: 'green', $position, $borderColor: 'white') {\\n  position: relative;\\n\\n  // box-shadow: 0 0 10px rgba(var(--color-r), var(--color-g), var(--color-b), 0.5);\\n\\n  @if ($color == 'green') {\\n    --color-r: 54;\\n    --color-g: 214;\\n    --color-b: 174;\\n  } @else if ($color == 'blue') {\\n    --color-r: 31;\\n    --color-g: 203;\\n    --color-b: 255;\\n  } @else if ($color == 'purple') {\\n    --color-r: 246;\\n    --color-g: 43;\\n    --color-b: 253;\\n  } @else if ($color == 'white') {\\n    --color-r: 225;\\n    --color-g: 225;\\n    --color-b: 225;\\n  } @else if ($color == 'red') {\\n    --color-r: 255;\\n    --color-g: 0;\\n    --color-b: 0;\\n  } @else if ($color == 'yellow') {\\n    --color-r: 255;\\n    --color-g: 217;\\n    --color-b: 0;\\n  } @else if ($color == 'orange') {\\n    --color-r: 255;\\n    --color-g: 92;\\n    --color-b: 0;\\n  } @else {\\n    @error \\\"Invalid color: #{$color}\\\";\\n  }\\n\\n  @if ($borderColor == 'color') {\\n    border-#{$position}: $saber-border-width\\n      solid\\n      rgb(var(--color-r), var(--color-g), var(--color-b)) !important;\\n  } @else {\\n    border-#{$position}: $saber-border-width solid white;\\n  }\\n\\n  @if ($position == left or $position == top) {\\n    &::before {\\n      @include saber-background($position);\\n    }\\n  } @else if ($position == right or $position == bottom) {\\n    &::after {\\n      @include saber-background($position);\\n    }\\n  } @else {\\n    @error \\\"Invalid position: #{$position}\\\";\\n  }\\n}\\n\\n@mixin saber-horizontal($color, $borderColor: 'white') {\\n  @include saber($color, left, $borderColor);\\n  @include saber($color, right, $borderColor);\\n}\\n\\n@mixin saber-vertical($color) {\\n  @include saber($color, top);\\n  @include saber($color, bottom);\\n}\\n\",\"@mixin tableHover {\\n  background: linear-gradient(\\n    90deg,\\n    rgba(54, 214, 174, 0.15) -3.3%,\\n    rgba(54, 214, 174, 0.072) 32.75%,\\n    rgba(54, 214, 174, 0.0765) 62.88%,\\n    rgba(54, 214, 174, 0.15) 100%\\n  );\\n}\\n\\n@mixin withShareIcon {\\n  background-image: url('images/share.svg');\\n  background-repeat: no-repeat;\\n  background-position: right 1.5px;\\n  background-size: 20px;\\n  padding-right: 25px;\\n}\\n\\n@mixin blueScroll {\\n  &::-webkit-scrollbar-thumb {\\n    background: var(--blue-light);\\n  }\\n  &::-webkit-scrollbar {\\n    width: 2px;\\n    height: 2px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"Display-module__wrapper____vzVx\",\n\t\"vertical\": \"Display-module__vertical___mUmjY\",\n\t\"green\": \"Display-module__green___r0Ja_\",\n\t\"blue\": \"Display-module__blue___jwfa0\",\n\t\"purple\": \"Display-module__purple___L2Xn9\",\n\t\"white\": \"Display-module__white___AyCK4\",\n\t\"red\": \"Display-module__red___ONKTS\",\n\t\"yellow\": \"Display-module__yellow___XqHrO\",\n\t\"orange\": \"Display-module__orange___ygTjd\",\n\t\"left\": \"Display-module__left___ysOQT\",\n\t\"right\": \"Display-module__right___aZHM0\",\n\t\"inner\": \"Display-module__inner___ivpVb\",\n\t\"noPaddingX\": \"Display-module__noPaddingX___bpgdh\",\n\t\"noPaddingY\": \"Display-module__noPaddingY___oFmqz\",\n\t\"header\": \"Display-module__header___MdFD1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".DisplayTitle-module__wrapper___nWMyS{z-index:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__green___q1sg8{position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-left:2px solid #fff;position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__green___q1sg8::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__green___q1sg8::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__blue___mZBfP{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-left:2px solid #fff;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__blue___mZBfP::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__blue___mZBfP::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__purple___qiCxl{position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-left:2px solid #fff;position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__purple___qiCxl::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__purple___qiCxl::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__white___YR_jl{position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-left:2px solid #fff;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__white___YR_jl::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__white___YR_jl::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__red___cyCdW{position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__red___cyCdW::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__red___cyCdW::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__yellow___WUlME{position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__yellow___WUlME::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__yellow___WUlME::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__orange___aKYCe{position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-left:2px solid #fff;position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-right:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__orange___aKYCe::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS:not(.DisplayTitle-module__vertical___M77ZH).DisplayTitle-module__orange___aKYCe::after{content:\\\"\\\";position:absolute;z-index:-2;right:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__green___q1sg8{position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-top:2px solid #fff;position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__green___q1sg8::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__green___q1sg8::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__blue___mZBfP{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-top:2px solid #fff;position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__blue___mZBfP::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__blue___mZBfP::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__purple___qiCxl{position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-top:2px solid #fff;position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__purple___qiCxl::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__purple___qiCxl::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__white___YR_jl{position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-top:2px solid #fff;position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__white___YR_jl::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__white___YR_jl::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__red___cyCdW{position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__red___cyCdW::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__red___cyCdW::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__yellow___WUlME{position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__yellow___WUlME::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__yellow___WUlME::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__orange___aKYCe{position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-top:2px solid #fff;position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-bottom:2px solid #fff}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__orange___aKYCe::before{content:\\\"\\\";position:absolute;z-index:-2;top:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__vertical___M77ZH.DisplayTitle-module__orange___aKYCe::after{content:\\\"\\\";position:absolute;z-index:-2;bottom:0;width:100%;left:0;height:50px;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__left___No7Sx{border-right:0 !important;border-right:initial !important}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__left___No7Sx::after{content:\\\"\\\";display:none}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__left___No7Sx.DisplayTitle-module__vertical___M77ZH{border-bottom:0 !important;border-bottom:initial !important}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__right___y8m__{border-left:0 !important;border-left:initial !important}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__right___y8m__::before{content:\\\"\\\";display:none}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__right___y8m__.DisplayTitle-module__vertical___M77ZH{border-top:0 !important;border-top:initial !important}.DisplayTitle-module__wrapper___nWMyS .DisplayTitle-module__inner___J5rzl{padding:23px 20px;overflow:auto;height:100%;max-height:100%}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__noPaddingX___zwvWO .DisplayTitle-module__inner___J5rzl{padding-left:0;padding-left:initial;padding-right:0;padding-right:initial}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__noPaddingY___u3hZC .DisplayTitle-module__inner___J5rzl{padding-top:0;padding-top:initial;padding-bottom:0;padding-bottom:initial}.DisplayTitle-module__wrapper___nWMyS.DisplayTitle-module__header___VNxht{position:relative;top:-23px}.DisplayTitle-module__wrapper___nWMyS::-webkit-scrollbar-thumb{background:var(--blue-light)}.DisplayTitle-module__wrapper___nWMyS::-webkit-scrollbar{width:2px;height:2px}.DisplayTitle-module__noPaddingWrapper___LoQyn{position:relative;left:-2px}.DisplayTitle-module__displayTitle___tI69q{padding:10px 0;font-size:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding-left:20px;padding-right:20px}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__green___q1sg8{position:relative;--color-r: 54;--color-g: 214;--color-b: 174;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__green___q1sg8::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__blue___mZBfP{position:relative;--color-r: 31;--color-g: 203;--color-b: 255;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__blue___mZBfP::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__purple___qiCxl{position:relative;--color-r: 246;--color-g: 43;--color-b: 253;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__purple___qiCxl::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__white___YR_jl{position:relative;--color-r: 225;--color-g: 225;--color-b: 225;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__white___YR_jl::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__red___cyCdW{position:relative;--color-r: 255;--color-g: 0;--color-b: 0;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__red___cyCdW::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__yellow___WUlME{position:relative;--color-r: 255;--color-g: 217;--color-b: 0;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__yellow___WUlME::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__orange___aKYCe{position:relative;--color-r: 255;--color-g: 92;--color-b: 0;border-left:2px solid #fff}.DisplayTitle-module__displayTitle___tI69q.DisplayTitle-module__orange___aKYCe::before{content:\\\"\\\";position:absolute;z-index:-2;left:0;top:0;height:100%;width:20%;-webkit-filter:blur(1px);filter:blur(1px);background:-webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), color-stop(90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11)), color-stop(95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15)), to(rgba(var(--color-r), var(--color-g), var(--color-b), 0.1)));background:linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%, rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%)}.DisplayTitle-module__displayTitleContent___bypRr{display:-webkit-box;display:-ms-flexbox;display:flex;min-height:36px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:0 10px;line-height:25px;width:100%;-webkit-transition:1.5s ease-in-out;transition:1.5s ease-in-out;opacity:0}.DisplayTitle-module__displayTitleContent___bypRr .DisplayTitle-module__content___OxRaU{margin-left:auto}.DisplayTitle-module__displayTitleContententering___JfMFc{opacity:0;-webkit-transition:1ms ease-in-out;transition:1ms ease-in-out}.DisplayTitle-module__displayTitleContententered___kbdyP{opacity:1}.DisplayTitle-module__displayTitleContentexiting___F25uf{opacity:0;-webkit-transition:1ms ease-in-out;transition:1ms ease-in-out}.DisplayTitle-module__displayTitleContentexited___uuvK6{opacity:1}.DisplayTitle-module__imageWrapper___Uvps5 img{border-radius:50%;height:70px;width:70px}.DisplayTitle-module__imageWrapper___Uvps5.DisplayTitle-module__large___vApCd img{height:112px;width:112px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/containerGradient/Display/Display.module.scss\",\"webpack://./src/components/containerGradient/saber/index.module.scss\",\"webpack://./src/style/mixins.scss\",\"webpack://./src/components/containerGradient/DisplayTitle/DisplayTitle.module.scss\",\"webpack://./src/components/containerGradient/Display/variables.module.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import '../saber/index.module';\\n@import './variables.module';\\n@import '../../../style/mixins';\\n\\n.wrapper {\\n  // TODO: remove this\\n  z-index: 0;\\n  display: flex;\\n  flex-direction: column;\\n\\n  &:not(.vertical) {\\n    @each $color in $valid-colors {\\n      &.#{$color} {\\n        @include saber-horizontal($color);\\n      }\\n    }\\n  }\\n\\n  &.vertical {\\n    @each $color in $valid-colors {\\n      &.#{$color} {\\n        @include saber-vertical($color);\\n      }\\n    }\\n  }\\n\\n  &.left {\\n    &::after {\\n      content: '';\\n      display: none;\\n    }\\n\\n    border-right: unset !important;\\n\\n    &.vertical {\\n      border-bottom: unset !important;\\n    }\\n  }\\n\\n  &.right {\\n    &::before {\\n      content: '';\\n      display: none;\\n    }\\n\\n    border-left: unset !important;\\n\\n    &.vertical {\\n      border-top: unset !important;\\n    }\\n  }\\n\\n  .inner {\\n    padding: $display-padding-top $display-padding-x;\\n    overflow: auto;\\n    height: 100%;\\n    max-height: 100%;\\n  }\\n\\n  &.noPaddingX {\\n    .inner {\\n      padding-left: unset;\\n      padding-right: unset;\\n    }\\n  }\\n\\n  &.noPaddingY {\\n    .inner {\\n      padding-top: unset;\\n      padding-bottom: unset;\\n    }\\n  }\\n\\n  &.header {\\n    position: relative;\\n    top: -$display-padding-top;\\n  }\\n\\n  @include blueScroll;\\n}\\n\",\"@mixin saber-background($position) {\\n  content: '';\\n  position: absolute;\\n  z-index: -2;\\n  #{$position}: 0;\\n\\n  @if ($position == left or $position == right) {\\n    top: 0;\\n    height: 100%;\\n    width: 20%;\\n  } @else {\\n    width: 100%;\\n    left: 0;\\n    height: 50px;\\n  }\\n\\n  filter: blur(1px);\\n\\n  background: linear-gradient(\\n    /* vise versa */ to #{$position},\\n    rgba(0, 0, 0, 0) 0%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.11) 90%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.15) 95%,\\n    rgba(var(--color-r), var(--color-g), var(--color-b), 0.1) 100%\\n  );\\n}\\n\\n// check Storybook for more documentation\\n$valid-colors: 'green', 'blue', 'purple', 'white', 'red', 'yellow', 'orange';\\n$valid-positions: 'left', 'right', 'top', 'bottom';\\n$saber-border-width: 2px;\\n\\n@mixin saber($color: 'green', $position, $borderColor: 'white') {\\n  position: relative;\\n\\n  // box-shadow: 0 0 10px rgba(var(--color-r), var(--color-g), var(--color-b), 0.5);\\n\\n  @if ($color == 'green') {\\n    --color-r: 54;\\n    --color-g: 214;\\n    --color-b: 174;\\n  } @else if ($color == 'blue') {\\n    --color-r: 31;\\n    --color-g: 203;\\n    --color-b: 255;\\n  } @else if ($color == 'purple') {\\n    --color-r: 246;\\n    --color-g: 43;\\n    --color-b: 253;\\n  } @else if ($color == 'white') {\\n    --color-r: 225;\\n    --color-g: 225;\\n    --color-b: 225;\\n  } @else if ($color == 'red') {\\n    --color-r: 255;\\n    --color-g: 0;\\n    --color-b: 0;\\n  } @else if ($color == 'yellow') {\\n    --color-r: 255;\\n    --color-g: 217;\\n    --color-b: 0;\\n  } @else if ($color == 'orange') {\\n    --color-r: 255;\\n    --color-g: 92;\\n    --color-b: 0;\\n  } @else {\\n    @error \\\"Invalid color: #{$color}\\\";\\n  }\\n\\n  @if ($borderColor == 'color') {\\n    border-#{$position}: $saber-border-width\\n      solid\\n      rgb(var(--color-r), var(--color-g), var(--color-b)) !important;\\n  } @else {\\n    border-#{$position}: $saber-border-width solid white;\\n  }\\n\\n  @if ($position == left or $position == top) {\\n    &::before {\\n      @include saber-background($position);\\n    }\\n  } @else if ($position == right or $position == bottom) {\\n    &::after {\\n      @include saber-background($position);\\n    }\\n  } @else {\\n    @error \\\"Invalid position: #{$position}\\\";\\n  }\\n}\\n\\n@mixin saber-horizontal($color, $borderColor: 'white') {\\n  @include saber($color, left, $borderColor);\\n  @include saber($color, right, $borderColor);\\n}\\n\\n@mixin saber-vertical($color) {\\n  @include saber($color, top);\\n  @include saber($color, bottom);\\n}\\n\",\"@mixin tableHover {\\n  background: linear-gradient(\\n    90deg,\\n    rgba(54, 214, 174, 0.15) -3.3%,\\n    rgba(54, 214, 174, 0.072) 32.75%,\\n    rgba(54, 214, 174, 0.0765) 62.88%,\\n    rgba(54, 214, 174, 0.15) 100%\\n  );\\n}\\n\\n@mixin withShareIcon {\\n  background-image: url('images/share.svg');\\n  background-repeat: no-repeat;\\n  background-position: right 1.5px;\\n  background-size: 20px;\\n  padding-right: 25px;\\n}\\n\\n@mixin blueScroll {\\n  &::-webkit-scrollbar-thumb {\\n    background: var(--blue-light);\\n  }\\n  &::-webkit-scrollbar {\\n    width: 2px;\\n    height: 2px;\\n  }\\n}\\n\",\"@import '../saber/index.module.scss';\\n\\n@import '../Display/Display.module.scss';\\n\\n.noPaddingWrapper {\\n  position: relative;\\n  $offset: -$saber-border-width;\\n  left: $offset;\\n  // margin-right: $offset;\\n}\\n\\n.displayTitle {\\n  padding: 10px 0;\\n  font-size: 20px;\\n  display: flex;\\n  align-items: center;\\n\\n  position: relative;\\n  padding-left: $display-padding-x;\\n  padding-right: $display-padding-x;\\n\\n  @each $color in $valid-colors {\\n    &.#{$color} {\\n      @include saber($color, left);\\n    }\\n  }\\n\\n  &Content {\\n    display: flex;\\n    min-height: 36px;\\n    align-items: center;\\n    gap: 0 10px;\\n    line-height: 25px;\\n    width: 100%;\\n    transition: 1.5s ease-in-out;\\n    opacity: 0;\\n\\n    .content {\\n      margin-left: auto;\\n    }\\n\\n    &entering {\\n      opacity: 0;\\n      transition: 1ms ease-in-out;\\n    }\\n\\n    &entered {\\n      opacity: 1;\\n    }\\n\\n    &exiting {\\n      opacity: 0;\\n      transition: 1ms ease-in-out;\\n    }\\n\\n    &exited {\\n      opacity: 1;\\n    }\\n  }\\n}\\n\\n.imageWrapper {\\n  img {\\n    border-radius: 50%;\\n    height: 70px;\\n    width: 70px;\\n  }\\n\\n  &.large {\\n    img {\\n      height: 112px;\\n      width: 112px;\\n    }\\n  }\\n}\\n\\n// .image {\\n//   .circle {\\n//     display: flex;\\n//     padding: 5px;\\n//     align-items: center;\\n//     justify-content: center;\\n//     border-radius: 67px;\\n//     background: rgba(255, 255, 255, 0.05);\\n//   }\\n\",\"$display-padding-top: 23px;\\n$display-padding-x: 20px;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"DisplayTitle-module__wrapper___nWMyS\",\n\t\"vertical\": \"DisplayTitle-module__vertical___M77ZH\",\n\t\"green\": \"DisplayTitle-module__green___q1sg8\",\n\t\"blue\": \"DisplayTitle-module__blue___mZBfP\",\n\t\"purple\": \"DisplayTitle-module__purple___qiCxl\",\n\t\"white\": \"DisplayTitle-module__white___YR_jl\",\n\t\"red\": \"DisplayTitle-module__red___cyCdW\",\n\t\"yellow\": \"DisplayTitle-module__yellow___WUlME\",\n\t\"orange\": \"DisplayTitle-module__orange___aKYCe\",\n\t\"left\": \"DisplayTitle-module__left___No7Sx\",\n\t\"right\": \"DisplayTitle-module__right___y8m__\",\n\t\"inner\": \"DisplayTitle-module__inner___J5rzl\",\n\t\"noPaddingX\": \"DisplayTitle-module__noPaddingX___zwvWO\",\n\t\"noPaddingY\": \"DisplayTitle-module__noPaddingY___u3hZC\",\n\t\"header\": \"DisplayTitle-module__header___VNxht\",\n\t\"noPaddingWrapper\": \"DisplayTitle-module__noPaddingWrapper___LoQyn\",\n\t\"displayTitle\": \"DisplayTitle-module__displayTitle___tI69q\",\n\t\"displayTitleContent\": \"DisplayTitle-module__displayTitleContent___bypRr\",\n\t\"content\": \"DisplayTitle-module__content___OxRaU\",\n\t\"displayTitleContententering\": \"DisplayTitle-module__displayTitleContententering___JfMFc\",\n\t\"displayTitleContententered\": \"DisplayTitle-module__displayTitleContententered___kbdyP\",\n\t\"displayTitleContentexiting\": \"DisplayTitle-module__displayTitleContentexiting___F25uf\",\n\t\"displayTitleContentexited\": \"DisplayTitle-module__displayTitleContentexited___uuvK6\",\n\t\"imageWrapper\": \"DisplayTitle-module__imageWrapper___Uvps5\",\n\t\"large\": \"DisplayTitle-module__large___vApCd\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Audio-module__wrapper___XrZKm{margin:0 auto;display:block}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/contentIpfs/component/Audio/Audio.module.scss\"],\"names\":[],\"mappings\":\"AAAA,+BACE,aAAA,CACA,aAAA\",\"sourcesContent\":[\".wrapper {\\n  margin: 0 auto;\\n  display: block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"Audio-module__wrapper___XrZKm\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".steles__gatewayCantainer___pfedc{text-align:center;background-color:#000;padding-bottom:5px;height:1px;width:100%;min-height:calc(100vh - 70px)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/contentIpfs/component/gateway/steles.scss\"],\"names\":[],\"mappings\":\"AAAA,kCACE,iBAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,6BAAA\",\"sourcesContent\":[\".gatewayCantainer {\\n  text-align: center;\\n  background-color: #000;\\n  padding-bottom: 5px;\\n  height: 1px;\\n  width: 100%;\\n  min-height: calc(100vh - 70px);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"gatewayCantainer\": \"steles__gatewayCantainer___pfedc\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".steles__img___rLrEb{width:100%;padding-top:10px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/contentIpfs/component/img/steles.scss\"],\"names\":[],\"mappings\":\"AAAA,qBACE,UAAA,CACA,gBAAA\",\"sourcesContent\":[\".img {\\n  width: 100%;\\n  padding-top: 10px\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"img\": \"steles__img___rLrEb\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__votesContainer___p5iRK{background-color:rgba(255,255,255,.0784313725);border-radius:5px;overflow:hidden;height:10px;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex}.styles-module__voteSection___baD7J{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%}.styles-module__voteYes___JYqpc{background-color:#3ab793}.styles-module__voteAbstain___prgEY{background-color:#ccdcff}.styles-module__voteNo___MorC0{background-color:#ffcf65}.styles-module__voteNoWithVeto___SCupn{background-color:#fe8a8a}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/governance/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,uCACE,8CAAA,CACA,iBAAA,CACA,eAAA,CACA,WAAA,CACA,UAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAGF,oCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,WAAA,CAGF,gCACE,wBAAA,CAGF,oCACE,wBAAA,CAGF,+BACE,wBAAA,CAGF,uCACE,wBAAA\",\"sourcesContent\":[\".votesContainer {\\n  background-color: #ffffff14;\\n  border-radius: 5px;\\n  overflow: hidden;\\n  height: 10px;\\n  width: 100%;\\n  display: flex;\\n}\\n\\n.voteSection {\\n  display: flex;\\n  height: 100%;\\n}\\n\\n.voteYes {\\n  background-color: #3ab793;\\n}\\n\\n.voteAbstain {\\n  background-color: #ccdcff;\\n}\\n\\n.voteNo {\\n  background-color: #ffcf65;\\n}\\n\\n.voteNoWithVeto {\\n  background-color: #fe8a8a;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"votesContainer\": \"styles-module__votesContainer___p5iRK\",\n\t\"voteSection\": \"styles-module__voteSection___baD7J\",\n\t\"voteYes\": \"styles-module__voteYes___JYqpc\",\n\t\"voteAbstain\": \"styles-module__voteAbstain___prgEY\",\n\t\"voteNo\": \"styles-module__voteNo___MorC0\",\n\t\"voteNoWithVeto\": \"styles-module__voteNoWithVeto___SCupn\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".cid-modules__cid___FHVP_{text-transform:none;color:#1fcbff}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/link/cid.modules.scss\"],\"names\":[],\"mappings\":\"AAAA,0BACE,mBAAA,CACA,aAAA\",\"sourcesContent\":[\".cid {\\n  text-transform: none;\\n  color: #1FCBFF;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"cid\": \"cid-modules__cid___FHVP_\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__containerValue___JyGdY{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:18px}.styles-module__containerTextLink___EwzmR{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:10px}.styles-module__containerText___dOTTu{font-size:16px;color:rgba(255,255,255,.7019607843);font-weight:600;display:-webkit-box;display:-ms-flexbox;display:flex}.styles-module__containerIcon___eN7wK{margin-left:5px}.styles-module__card___ACvqh{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:10px 0}.styles-module__containerStatistics___JklYR{display:-webkit-box;display:-ms-flexbox;display:flex;color:#fff;display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr;justify-items:center;width:100%;margin-bottom:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/statistics/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,uCACE,UAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,cAAA,CAGF,0CACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,eAAA,CAGF,sCACE,cAAA,CACA,mCAAA,CACA,eAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAGF,sCACE,eAAA,CAGF,6BACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,UAAA,CAGF,4CACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,UAAA,CACA,YAAA,CACA,yCAAA,CACA,oBAAA,CACA,UAAA,CAEA,kBAAA\",\"sourcesContent\":[\".containerValue {\\n  color: #fff;\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n}\\n\\n.containerTextLink {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-top: 10px;\\n}\\n\\n.containerText {\\n  font-size: 16px;\\n  color: #ffffffb3;\\n  font-weight: 600;\\n  display: flex;\\n}\\n\\n.containerIcon {\\n  margin-left: 5px;\\n}\\n\\n.card {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 10px 0;\\n}\\n\\n.containerStatistics {\\n  display: flex;\\n  color: #fff;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\\n  justify-items: center;\\n  width: 100%;\\n  /* align-items: center; */\\n  margin-bottom: 20px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containerValue\": \"styles-module__containerValue___JyGdY\",\n\t\"containerTextLink\": \"styles-module__containerTextLink___EwzmR\",\n\t\"containerText\": \"styles-module__containerText___dOTTu\",\n\t\"containerIcon\": \"styles-module__containerIcon___eN7wK\",\n\t\"card\": \"styles-module__card___ACvqh\",\n\t\"containerStatistics\": \"styles-module__containerStatistics___JklYR\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".time-module__wrapper___cQa_5{display:-webkit-box;display:-ms-flexbox;display:flex;color:var(--blue-light);gap:5px}.time-module__wrapper___cQa_5 .time-module__prefix___hyS9a{color:var(--grayscale-dark)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/time/time.module.scss\"],\"names\":[],\"mappings\":\"AAAA,8BACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CACA,OAAA,CAEA,2DACE,2BAAA\",\"sourcesContent\":[\".wrapper {\\n  display: flex;\\n  color: var(--blue-light);\\n  gap: 5px;\\n\\n  .prefix {\\n    color: var(--grayscale-dark);\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"time-module__wrapper___cQa_5\",\n\t\"prefix\": \"time-module__prefix___hyS9a\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Tooltip-module__tooltipContainer___JxEbe{background-color:#000;border:none;color:#fff;white-space:normal;-webkit-box-shadow:0px 0px 4px 1px #38d6ae;box-shadow:0px 0px 4px 1px #38d6ae;z-index:4;padding:10px 12px;max-width:300px;font-size:13px}.Tooltip-module__tooltipContainerBorderNone___C9hz2{-webkit-box-shadow:none;box-shadow:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/tooltip/Tooltip.module.scss\"],\"names\":[],\"mappings\":\"AAAA,0CACE,qBAAA,CACA,WAAA,CACA,UAAA,CACA,kBAAA,CACA,0CAAA,CAAA,kCAAA,CACA,SAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CAEA,oDACE,uBAAA,CAAA,eAAA\",\"sourcesContent\":[\".tooltipContainer {\\n  background-color: #000000;\\n  border: none;\\n  color: #fff;\\n  white-space: normal;\\n  box-shadow: 0px 0px 4px 1px #38d6ae;\\n  z-index: 4;\\n  padding: 10px 12px;\\n  max-width: 300px;\\n  font-size: 13px;\\n\\n  &BorderNone {\\n    box-shadow: none;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"tooltipContainer\": \"Tooltip-module__tooltipContainer___JxEbe\",\n\t\"tooltipContainerBorderNone\": \"Tooltip-module__tooltipContainerBorderNone___C9hz2\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../../image/ionicons_svg_ios-copy.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Copy-module__copyBtn___roNFY{background:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") center center no-repeat;background-color:rgba(0,0,0,0);outline:none;border:none;height:15px;width:15px;cursor:pointer;margin-left:5px}.Copy-module__copyBtn___roNFY:hover{opacity:.8}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ui/Copy.module.scss\"],\"names\":[],\"mappings\":\"AACA,8BACE,0EAAA,CACA,8BAAA,CACA,YAAA,CACA,WAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CAEA,oCACE,UAAA\",\"sourcesContent\":[\"\\n.copyBtn {\\n  background: url(../../image/ionicons_svg_ios-copy.svg) center center no-repeat;\\n  background-color: transparent;\\n  outline: none;\\n  border: none;\\n  height: 15px;\\n  width: 15px;\\n  cursor: pointer;\\n  margin-left: 5px;\\n\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"copyBtn\": \"Copy-module__copyBtn___roNFY\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Dots-module__loaderDot___Y8x8r{display:inline-block}.Dots-module__loaderDot___Y8x8r span{color:#3ab793;font-size:30px;-webkit-animation:Dots-module__blinkDot___MB3rN 1.4s infinite;animation:Dots-module__blinkDot___MB3rN 1.4s infinite;border-radius:50%;-webkit-animation-fill-mode:both;animation-fill-mode:both;line-height:0}.Dots-module__loaderDot___Y8x8r span:nth-child(2){-webkit-animation-delay:.2s;animation-delay:.2s}.Dots-module__loaderDot___Y8x8r span:nth-child(3){-webkit-animation-delay:.4s;animation-delay:.4s}@-webkit-keyframes Dots-module__blinkDot___MB3rN{0%{opacity:.2}20%{opacity:1}100%{opacity:.2}}@keyframes Dots-module__blinkDot___MB3rN{0%{opacity:.2}20%{opacity:1}100%{opacity:.2}}.Dots-module__loaderDotBig___QuBTG span{font-size:60px !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ui/Dots.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACE,oBAAA,CAEA,qCACE,aAAA,CACA,cAAA,CACA,6DAAA,CAAA,qDAAA,CACA,iBAAA,CACA,gCAAA,CAAA,wBAAA,CACA,aAAA,CAEA,kDACE,2BAAA,CAAA,mBAAA,CAGF,kDACE,2BAAA,CAAA,mBAAA,CAKN,iDACE,GACE,UAAA,CAGF,IACE,SAAA,CAGF,KACE,UAAA,CAAA,CAVJ,yCACE,GACE,UAAA,CAGF,IACE,SAAA,CAGF,KACE,UAAA,CAAA,CAKF,wCACE,yBAAA\",\"sourcesContent\":[\".loaderDot {\\n  display: inline-block;\\n\\n  span {\\n    color: #3ab793;\\n    font-size: 30px;\\n    animation: blinkDot 1.4s infinite;\\n    border-radius: 50%;\\n    animation-fill-mode: both;\\n    line-height: 0;\\n\\n    &:nth-child(2) {\\n      animation-delay: 0.2s;\\n    }\\n\\n    &:nth-child(3) {\\n      animation-delay: 0.4s;\\n    }\\n  }\\n}\\n\\n@keyframes blinkDot {\\n  0% {\\n    opacity: 0.2;\\n  }\\n\\n  20% {\\n    opacity: 1;\\n  }\\n\\n  100% {\\n    opacity: 0.2;\\n  }\\n}\\n\\n.loaderDotBig {\\n  span {\\n    font-size: 60px !important;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"loaderDot\": \"Dots-module__loaderDot___Y8x8r\",\n\t\"blinkDot\": \"Dots-module__blinkDot___MB3rN\",\n\t\"loaderDotBig\": \"Dots-module__loaderDotBig___QuBTG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Loading-module__lds-grid___TbPb3{display:inline-block;position:relative;width:64px;height:64px}.Loading-module__lds-grid___TbPb3 div{position:absolute;width:13px;height:13px;border-radius:50%;background:#3ab793;-webkit-animation:Loading-module__lds-grid___TbPb3 1.2s linear infinite;animation:Loading-module__lds-grid___TbPb3 1.2s linear infinite}.Loading-module__lds-grid___TbPb3 div:nth-child(1){top:6px;left:6px;-webkit-animation-delay:0s;animation-delay:0s}.Loading-module__lds-grid___TbPb3 div:nth-child(2){top:6px;left:26px;-webkit-animation-delay:-0.4s;animation-delay:-0.4s}.Loading-module__lds-grid___TbPb3 div:nth-child(3){top:6px;left:45px;-webkit-animation-delay:-0.8s;animation-delay:-0.8s}.Loading-module__lds-grid___TbPb3 div:nth-child(4){top:26px;left:6px;-webkit-animation-delay:-0.4s;animation-delay:-0.4s}.Loading-module__lds-grid___TbPb3 div:nth-child(5){top:26px;left:26px;-webkit-animation-delay:-0.8s;animation-delay:-0.8s}.Loading-module__lds-grid___TbPb3 div:nth-child(6){top:26px;left:45px;-webkit-animation-delay:-1.2s;animation-delay:-1.2s}.Loading-module__lds-grid___TbPb3 div:nth-child(7){top:45px;left:6px;-webkit-animation-delay:-0.8s;animation-delay:-0.8s}.Loading-module__lds-grid___TbPb3 div:nth-child(8){top:45px;left:26px;-webkit-animation-delay:-1.2s;animation-delay:-1.2s}.Loading-module__lds-grid___TbPb3 div:nth-child(9){top:45px;left:45px;-webkit-animation-delay:-1.6s;animation-delay:-1.6s}@-webkit-keyframes Loading-module__lds-grid___TbPb3{0%,100%{opacity:1}50%{opacity:.5}}@keyframes Loading-module__lds-grid___TbPb3{0%,100%{opacity:1}50%{opacity:.5}}.Loading-module__container___Lunxw{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ui/Loading.module.scss\"],\"names\":[],\"mappings\":\"AAAA,kCACE,oBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CAEF,sCACE,iBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,kBAAA,CACA,uEAAA,CAAA,+DAAA,CAEF,mDACE,OAAA,CACA,QAAA,CACA,0BAAA,CAAA,kBAAA,CAEF,mDACE,OAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,OAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,QAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,QAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,mDACE,QAAA,CACA,SAAA,CACA,6BAAA,CAAA,qBAAA,CAEF,oDACE,QAEE,SAAA,CAEF,IACE,UAAA,CAAA,CANJ,4CACE,QAEE,SAAA,CAEF,IACE,UAAA,CAAA,CAIJ,mCACE,UAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,YAAA\",\"sourcesContent\":[\".lds-grid {\\n  display: inline-block;\\n  position: relative;\\n  width: 64px;\\n  height: 64px;\\n}\\n.lds-grid div {\\n  position: absolute;\\n  width: 13px;\\n  height: 13px;\\n  border-radius: 50%;\\n  background: #3ab793;\\n  animation: lds-grid 1.2s linear infinite;\\n}\\n.lds-grid div:nth-child(1) {\\n  top: 6px;\\n  left: 6px;\\n  animation-delay: 0s;\\n}\\n.lds-grid div:nth-child(2) {\\n  top: 6px;\\n  left: 26px;\\n  animation-delay: -0.4s;\\n}\\n.lds-grid div:nth-child(3) {\\n  top: 6px;\\n  left: 45px;\\n  animation-delay: -0.8s;\\n}\\n.lds-grid div:nth-child(4) {\\n  top: 26px;\\n  left: 6px;\\n  animation-delay: -0.4s;\\n}\\n.lds-grid div:nth-child(5) {\\n  top: 26px;\\n  left: 26px;\\n  animation-delay: -0.8s;\\n}\\n.lds-grid div:nth-child(6) {\\n  top: 26px;\\n  left: 45px;\\n  animation-delay: -1.2s;\\n}\\n.lds-grid div:nth-child(7) {\\n  top: 45px;\\n  left: 6px;\\n  animation-delay: -0.8s;\\n}\\n.lds-grid div:nth-child(8) {\\n  top: 45px;\\n  left: 26px;\\n  animation-delay: -1.2s;\\n}\\n.lds-grid div:nth-child(9) {\\n  top: 45px;\\n  left: 45px;\\n  animation-delay: -1.6s;\\n}\\n@keyframes lds-grid {\\n  0%,\\n  100% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0.5;\\n  }\\n}\\n\\n.container {\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 20px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"lds-grid\": \"Loading-module__lds-grid___TbPb3\",\n\t\"container\": \"Loading-module__container___Lunxw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".TextDenom-module__denom___PFMmE{text-transform:none;text-transform:initial;word-break:break-word}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/valueImg/TextDenom.module.scss\"],\"names\":[],\"mappings\":\"AAAA,iCACE,mBAAA,CAAA,sBAAA,CACA,qBAAA\",\"sourcesContent\":[\".denom {\\n  text-transform: initial;\\n  word-break: break-word;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"denom\": \"TextDenom-module__denom___PFMmE\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ValueImg-module__emojiIcon___ONyUg{color:#000;color:initial}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/valueImg/ValueImg.module.scss\"],\"names\":[],\"mappings\":\"AAAA,oCACE,UAAA,CAAA,aAAA\",\"sourcesContent\":[\".emojiIcon {\\n  color: initial;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"emojiIcon\": \"ValueImg-module__emojiIcon___ONyUg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Vitalik-module__container___aY1NH{width:250px;height:250px;-webkit-box-shadow:0 0 10px 2px #03cba0;box-shadow:0 0 10px 2px #03cba0;border-radius:50%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;margin-bottom:10%}.Vitalik-module__container___aY1NH .Vitalik-module__oval1___ET3QQ{width:73px;height:37px;-webkit-transform:rotate(25deg);transform:rotate(25deg);-webkit-box-shadow:0 0 6px 2px #03cba0;box-shadow:0 0 6px 2px #03cba0;border-radius:50%;margin-bottom:20px}.Vitalik-module__container___aY1NH .Vitalik-module__oval2___vKo8c{width:73px;height:37px;-webkit-transform:rotate(-25deg);transform:rotate(-25deg);-webkit-box-shadow:0 0 6px 2px #03cba0;box-shadow:0 0 6px 2px #03cba0;border-radius:50%;margin-bottom:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/vitalik/Vitalik.module.scss\"],\"names\":[],\"mappings\":\"AAAA,mCACE,WAAA,CACA,YAAA,CACA,uCAAA,CAAA,+BAAA,CACA,iBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,wBAAA,CAAA,4BAAA,CACA,iBAAA,CAEA,kEACE,UAAA,CACA,WAAA,CACA,+BAAA,CAAA,uBAAA,CACA,sCAAA,CAAA,8BAAA,CACA,iBAAA,CACA,kBAAA,CAGF,kEACE,UAAA,CACA,WAAA,CACA,gCAAA,CAAA,wBAAA,CACA,sCAAA,CAAA,8BAAA,CACA,iBAAA,CACA,kBAAA\",\"sourcesContent\":[\".container {\\n  width: 250px;\\n  height: 250px;\\n  box-shadow: 0 0 10px 2px #03cba0;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n  margin-bottom: 10%;\\n\\n  .oval1 {\\n    width: 73px;\\n    height: 37px;\\n    transform: rotate(25deg);\\n    box-shadow: 0 0 6px 2px #03cba0;\\n    border-radius: 50%;\\n    margin-bottom: 20px;\\n  }\\n\\n  .oval2 {\\n    width: 73px;\\n    height: 37px;\\n    transform: rotate(-25deg);\\n    box-shadow: 0 0 6px 2px #03cba0;\\n    border-radius: 50%;\\n    margin-bottom: 20px;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"Vitalik-module__container___aY1NH\",\n\t\"oval1\": \"Vitalik-module__oval1___ET3QQ\",\n\t\"oval2\": \"Vitalik-module__oval2___vKo8c\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".styles-module__containetAvatar___BI7ej{width:105px;height:105px;border:1px solid #36d6ae;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:50%;position:absolute;top:-35px;right:15px;color:#36d6ae}.styles-module__containetAvatar___BI7ej img{position:absolute;margin-right:-50%;-webkit-transform:translate(-50%, 0);transform:translate(-50%, 0);right:50%;left:50%;padding:2px}.styles-module__imgAvatar___W71bo{-o-object-fit:cover;object-fit:cover;width:inherit;height:inherit;border-radius:50%}.styles-module__buttonContainerAvatar___YNjXZ{color:#36d6ae;background:rgba(0,0,0,0);border:none;font-size:15.5px;cursor:pointer;width:100%;height:100%;outline:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:50%}.styles-module__new___ihuVd:hover{font-size:0}.styles-module__new___ihuVd:hover::before{content:\\\"new avatar\\\";width:100%;font-size:17px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;z-index:1;background:rgba(0,0,0,.7607843137);height:100%;border-radius:50%;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.styles-module__new___ihuVd:hover>*{opacity:.5}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/portal/components/avataIpfs/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,wCACE,WAAA,CACA,YAAA,CACA,wBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,aAAA,CAEA,4CACE,iBAAA,CACA,iBAAA,CACA,oCAAA,CAAA,4BAAA,CACA,SAAA,CACA,QAAA,CACA,WAAA,CAIJ,kCACE,mBAAA,CAAA,gBAAA,CACA,aAAA,CACA,cAAA,CACA,iBAAA,CAGF,8CACE,aAAA,CACA,wBAAA,CACA,WAAA,CACA,gBAAA,CACA,cAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CAGA,kCACE,WAAA,CACA,0CACE,oBAAA,CACA,UAAA,CACA,cAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,SAAA,CACA,kCAAA,CACA,WAAA,CACA,iBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CAEF,oCACE,UAAA\",\"sourcesContent\":[\".containetAvatar {\\n  width: 105px;\\n  height: 105px;\\n  border: 1px solid #36d6ae;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 50%;\\n  position: absolute;\\n  top: -35px;\\n  right: 15px;\\n  color: #36d6ae;\\n\\n  img {\\n    position: absolute;\\n    margin-right: -50%;\\n    transform: translate(-50%, 0);\\n    right: 50%;\\n    left: 50%;\\n    padding: 2px;\\n  }\\n}\\n\\n.imgAvatar {\\n  object-fit: cover;\\n  width: inherit;\\n  height: inherit;\\n  border-radius: 50%;\\n}\\n\\n.buttonContainerAvatar {\\n  color: #36d6ae;\\n  background: transparent;\\n  border: none;\\n  font-size: 15.5px;\\n  cursor: pointer;\\n  width: 100%;\\n  height: 100%;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 50%;\\n}\\n.new {\\n  &:hover {\\n    font-size: 0;\\n    &::before {\\n      content: 'new avatar';\\n      width: 100%;\\n      font-size: 17px;\\n      display: flex;\\n      justify-content: center;\\n      z-index: 1;\\n      background: #000000c2;\\n      height: 100%;\\n      border-radius: 50%;\\n      align-items: center;\\n    }\\n    & > * {\\n      opacity: 0.5;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"containetAvatar\": \"styles-module__containetAvatar___BI7ej\",\n\t\"imgAvatar\": \"styles-module__imgAvatar___W71bo\",\n\t\"buttonContainerAvatar\": \"styles-module__buttonContainerAvatar___YNjXZ\",\n\t\"new\": \"styles-module__new___ihuVd\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".GitHub-module__wrapper___hl4bZ{display:-webkit-box;display:-ms-flexbox;display:flex}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Social/GitHub/GitHub.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA\",\"sourcesContent\":[\".wrapper {\\n  display: flex;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"GitHub-module__wrapper___hl4bZ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"images/share.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Social-module__wrapper___WUKlY a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.Social-module__wrapper___WUKlY a img{height:30px}.Social-module__wrapper___WUKlY a span{margin-top:10px;font-size:14px;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");background-repeat:no-repeat;background-position:right 1.5px;background-size:20px;padding-right:25px;background-position-y:-1px}.Social-module__wrapper___WUKlY a:hover img{opacity:.7}.Social-module__main___TEMMY{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:35px}.Social-module__code___bC9uk{margin:20px 0}.Social-module__hubLinks___z4f7p{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}.Social-module__hubLinks___z4f7p{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:10px;text-align:center;margin-left:0}.Social-module__hubLinks___z4f7p div{margin-bottom:-5px;font-size:30px}.Social-module__hubLinks___z4f7p div:hover{opacity:.7}.Social-module__hubLinks___z4f7p span{display:block}.Social-module__main___TEMMY,.Social-module__main___TEMMY>div,.Social-module__code___bC9uk,.Social-module__code___bC9uk>div,.Social-module__email___Jtc6S,.Social-module__email___Jtc6S>div{gap:0 20px}.Social-module__email___Jtc6S{display:inline-block !important}.Social-module__email___Jtc6S{margin-top:20px}.Social-module__hubLinks___z4f7p{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}.Social-module__hubLinks___z4f7p{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:10px 0;text-align:center;margin-left:0}.Social-module__hubLinks___z4f7p div{margin-bottom:-5px;font-size:30px}.Social-module__hubLinks___z4f7p div:hover{opacity:.7}.Social-module__hubLinks___z4f7p span{display:block}.Social-module__main___TEMMY,.Social-module__code___bC9uk,.Social-module__hubLinks___z4f7p,.Social-module__email___Jtc6S{padding-left:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Social/Social.module.scss\",\"webpack://./src/style/mixins.scss\"],\"names\":[],\"mappings\":\"AAGE,kCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CAEA,sCACE,WAAA,CAGF,uCACE,eAAA,CACA,cAAA,CCHJ,wDAAA,CACA,2BAAA,CACA,+BAAA,CACA,oBAAA,CACA,kBAAA,CDEI,0BAAA,CAIA,4CACE,UAAA,CAMR,6BACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,kBAAA,CAAA,cAAA,CAEA,kBAAA,CAGF,6BACE,aAAA,CAGF,iCACE,qCAAA,CAAA,qCAAA,CAAA,8BAkBA,CAnBF,iCAEE,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,eAAA,CACA,iBAAA,CAeA,aAAA,CAbA,qCACE,kBAAA,CACA,cAAA,CAEA,2CACE,UAAA,CAIJ,sCACE,aAAA,CASF,4LAEE,UAAA,CAIJ,8BACE,+BACA,CAFF,8BAEE,eAAA,CAGF,iCACE,qCAAA,CAAA,qCAAA,CAAA,8BAkBA,CAnBF,iCAEE,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,aAAA,CACA,iBAAA,CAeA,aAAA,CAbA,qCACE,kBAAA,CACA,cAAA,CAEA,2CACE,UAAA,CAIJ,sCACE,aAAA,CAMJ,yHAKE,iBAAA\",\"sourcesContent\":[\"@import '../../style/mixins.scss';\\n\\n.wrapper {\\n  a {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n\\n    img {\\n      height: 30px;\\n    }\\n\\n    span {\\n      margin-top: 10px;\\n      font-size: 14px;\\n\\n      @include withShareIcon;\\n      background-position-y: -1px;\\n    }\\n\\n    &:hover {\\n      img {\\n        opacity: 0.7;\\n      }\\n    }\\n  }\\n}\\n\\n.main {\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  margin-bottom: 35px;\\n}\\n\\n.code {\\n  margin: 20px 0;\\n}\\n\\n.hubLinks {\\n  display: inline-flex !important;\\n  flex-direction: column;\\n  margin-top: 10px;\\n  text-align: center;\\n\\n  div {\\n    margin-bottom: -5px;\\n    font-size: 30px;\\n\\n    &:hover {\\n      opacity: 0.7;\\n    }\\n  }\\n\\n  span {\\n    display: block;\\n  }\\n\\n  margin-left: 0;\\n}\\n\\n.main,\\n.code,\\n.email {\\n  &,\\n  > div {\\n    gap: 0 20px;\\n  }\\n}\\n\\n.email {\\n  display: inline-block !important;\\n  margin-top: 20px;\\n}\\n\\n.hubLinks {\\n  display: inline-flex !important;\\n  flex-direction: column;\\n  margin: 10px 0;\\n  text-align: center;\\n\\n  div {\\n    margin-bottom: -5px;\\n    font-size: 30px;\\n\\n    &:hover {\\n      opacity: 0.7;\\n    }\\n  }\\n\\n  span {\\n    display: block;\\n  }\\n\\n  margin-left: 0;\\n}\\n\\n.main,\\n.code,\\n.hubLinks,\\n.email {\\n  // display padding\\n  padding-left: 20px;\\n}\\n\",\"@mixin tableHover {\\n  background: linear-gradient(\\n    90deg,\\n    rgba(54, 214, 174, 0.15) -3.3%,\\n    rgba(54, 214, 174, 0.072) 32.75%,\\n    rgba(54, 214, 174, 0.0765) 62.88%,\\n    rgba(54, 214, 174, 0.15) 100%\\n  );\\n}\\n\\n@mixin withShareIcon {\\n  background-image: url('images/share.svg');\\n  background-repeat: no-repeat;\\n  background-position: right 1.5px;\\n  background-size: 20px;\\n  padding-right: 25px;\\n}\\n\\n@mixin blueScroll {\\n  &::-webkit-scrollbar-thumb {\\n    background: var(--blue-light);\\n  }\\n  &::-webkit-scrollbar {\\n    width: 2px;\\n    height: 2px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"Social-module__wrapper___WUKlY\",\n\t\"main\": \"Social-module__main___TEMMY\",\n\t\"code\": \"Social-module__code___bC9uk\",\n\t\"hubLinks\": \"Social-module__hubLinks___z4f7p\",\n\t\"email\": \"Social-module__email___Jtc6S\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Telegram-module__wrapper___hMD8f{display:-webkit-box;display:-ms-flexbox;display:flex}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Social/Telegram/Telegram.module.scss\"],\"names\":[],\"mappings\":\"AAAA,kCACE,mBAAA,CAAA,mBAAA,CAAA,YAAA\",\"sourcesContent\":[\".wrapper {\\n  display: flex;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"Telegram-module__wrapper___hMD8f\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// export const CID_AVATAR = 'Qmf89bXkJH9jw4uaLkHmZkxQ51qGKfUPtAMxA8rTwBrmTs';\nexport const CID_TWEET = 'QmbdH2WBamyKLPE5zu4mJ9v49qvY8BFfoumoVPMR5V4Rvx';\n\nexport const CID_FOLLOW = 'QmPLSA5oPqYxgc8F7EwrM8WS9vKrr1zPoDniSRFh8HSrxx';\n\nexport const INFINITY = '∞';\n\nexport const WP =\n  'https://ipfs.io/ipfs/QmQ1Vong13MDNxixDyUdjniqqEj8sjuNEBYMyhQU4gQgq3';\n\nexport const CYBER_CONGRESS_ADDRESS =\n  'bostrom1xszmhkfjs3s00z2nvtn7evqxw3dtus6yr8e4pw';\n","import { Networks } from 'src/types/networks';\nimport defaultNetworks from './defaultNetworks';\n\n// FIXME: seems temp\nexport function isWorker() {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\nconst LOCALSTORAGE_CHAIN_ID = !isWorker() && localStorage.getItem('chainId');\n\nconst DEFAULT_CHAIN_ID: Networks.BOSTROM | Networks.SPACE_PUSSY =\n  LOCALSTORAGE_CHAIN_ID || process.env.CHAIN_ID || Networks.BOSTROM;\n\nexport const CHAIN_ID = DEFAULT_CHAIN_ID;\n\nexport const LCD_URL =\n  process.env.LCD_URL || defaultNetworks[DEFAULT_CHAIN_ID].LCD_URL;\n\nexport const RPC_URL =\n  process.env.RPC_URL || defaultNetworks[DEFAULT_CHAIN_ID].RPC_URL;\n\nexport const WEBSOCKET_URL =\n  process.env.WEBSOCKET_URL || defaultNetworks[DEFAULT_CHAIN_ID].WEBSOCKET_URL;\n\nexport const INDEX_HTTPS =\n  process.env.INDEX_HTTPS || defaultNetworks[DEFAULT_CHAIN_ID].INDEX_HTTPS;\n\nexport const INDEX_WEBSOCKET =\n  process.env.INDEX_WEBSOCKET ||\n  defaultNetworks[DEFAULT_CHAIN_ID].INDEX_WEBSOCKET;\n\nexport const BECH32_PREFIX =\n  process.env.BECH32_PREFIX || defaultNetworks[DEFAULT_CHAIN_ID].BECH32_PREFIX;\n\nconst BECH32_PREFIX_VAL = `${BECH32_PREFIX}val`;\n\nexport const BECH32_PREFIX_VALOPER = `${BECH32_PREFIX_VAL}oper`;\n\nexport const BECH32_PREFIX_VAL_CONS = `${BECH32_PREFIX_VAL}cons`;\n\nexport const BASE_DENOM =\n  process.env.BASE_DENOM || defaultNetworks[DEFAULT_CHAIN_ID].BASE_DENOM;\n\nexport const DENOM_LIQUID =\n  process.env.DENOM_LIQUID || defaultNetworks[DEFAULT_CHAIN_ID].DENOM_LIQUID;\n\nexport const CYBER_GATEWAY =\n  process.env.CYBER_GATEWAY || 'https://gateway.ipfs.cybernode.ai';\n\nexport const DIVISOR_CYBER_G = 10 ** 9;\n\nexport const DEFAULT_GAS_LIMITS = 200000;\n\nexport const COIN_DECIMALS_RESOURCE = 3;\n\nexport const { MEMO_KEPLR } = defaultNetworks[DEFAULT_CHAIN_ID];\n","import { NetworkConfig, Networks } from 'src/types/networks';\n\ntype NetworksList = {\n  [key in Networks.BOSTROM | Networks.SPACE_PUSSY]: NetworkConfig;\n};\n\nconst defaultNetworks: NetworksList = {\n  bostrom: {\n    CHAIN_ID: Networks.BOSTROM,\n    BASE_DENOM: 'boot',\n    DENOM_LIQUID: 'hydrogen',\n    RPC_URL: 'https://rpc.bostrom.cybernode.ai',\n    LCD_URL: 'https://lcd.bostrom.cybernode.ai',\n    WEBSOCKET_URL: 'wss://rpc.bostrom.cybernode.ai/websocket',\n    INDEX_HTTPS: 'https://index.bostrom.cybernode.ai/v1/graphql',\n    INDEX_WEBSOCKET: 'wss://index.bostrom.cybernode.ai/v1/graphql',\n    BECH32_PREFIX: 'bostrom',\n    MEMO_KEPLR: '[bostrom] cyb.ai, using keplr',\n  },\n  // localbostrom: {\n  //   CHAIN_ID: 'localbostrom',\n  //   BASE_DENOM: 'boot',\n  //   DENOM_LIQUID: 'hydrogen',\n  //   RPC_URL: 'https://rpc.bostrom.cybernode.ai',\n  //   LCD_URL: 'https://lcd.bostrom.cybernode.ai',\n  //   WEBSOCKET_URL: 'wss://rpc.bostrom.cybernode.ai/websocket',\n  //   INDEX_HTTPS: 'https://index.bostrom.cybernode.ai/v1/graphql',\n  //   INDEX_WEBSOCKET: 'wss://index.bostrom.cybernode.ai/v1/graphql',\n  //   BECH32_PREFIX: 'bostrom',\n  //   MEMO_KEPLR: '[bostrom] cyb.ai, using keplr',\n  // },\n  //    RPC_URL=https://rpc.bostrom.moon.cybernode.ai\n  //  LCD_URL=https://lcd.bostrom.moon.cybernode.ai\n  //  WEBSOCKET_URL=wss://rpc.bostrom.moon.cybernode.ai/websocket\n  //  INDEX_HTTPS=https://index.bostrom.moon.cybernode.ai/v1/graphql\n  //  INDEX_WEBSOCKET = wss://index.bostrom.moon.cybernode.ai/v1/graphql\n  //  CHAIN_ID = localbostrom\n\n  'space-pussy': {\n    CHAIN_ID: Networks.SPACE_PUSSY,\n    BASE_DENOM: 'pussy',\n    DENOM_LIQUID: 'liquidpussy',\n    RPC_URL: 'https://rpc.space-pussy.cybernode.ai/',\n    LCD_URL: 'https://lcd.space-pussy.cybernode.ai',\n    WEBSOCKET_URL: 'wss://rpc.space-pussy.cybernode.ai/websocket',\n    INDEX_HTTPS: 'https://index.space-pussy.cybernode.ai/v1/graphql',\n    INDEX_WEBSOCKET: 'wss://index.space-pussy.cybernode.ai/v1/graphql',\n    BECH32_PREFIX: 'pussy',\n    MEMO_KEPLR: '[space-pussy] cyb.ai, using keplr',\n  },\n};\n\nexport default defaultNetworks;\n","export const localStorageKeys = {\n  pocket: {\n    POCKET: 'pocket',\n    POCKET_ACCOUNT: 'pocketAccount',\n  },\n  MENU_SHOW: 'menuShow',\n  settings: {\n    adviserAudio: 'adviserAudio',\n    adviserVoice: 'adviserVoice',\n  },\n};\n","import { BECH32_PREFIX, BECH32_PREFIX_VALOPER } from './config';\n\nexport const PATTERN_CYBER = new RegExp(\n  `^${BECH32_PREFIX}[a-zA-Z0-9]{39}$`,\n  'g'\n);\n\nexport const PATTERN_SPACE_PUSSY = /^pussy[a-zA-Z0-9]{39}$/g;\n\nexport const PATTERN_IPFS_HASH = /^Qm[a-zA-Z0-9]{44}$/g;\n\nexport const PATTERN_CYBER_CONTRACT = new RegExp(\n  `^${BECH32_PREFIX}[a-zA-Z0-9]{59}$`,\n  'g'\n);\n\nexport const PATTERN_CYBER_VALOPER = new RegExp(\n  `^${BECH32_PREFIX_VALOPER}valoper[a-zA-Z0-9]{39}$`,\n  'g'\n);\n\nexport const PATTERN_COSMOS = /^cosmos[a-zA-Z0-9]{39}$/g;\n\nexport const PATTERN_OSMOS = /^osmo[a-zA-Z0-9]{39}$/g;\n\nexport const PATTERN_TERRA = /^terra[a-zA-Z0-9]{39}$/g;\n\nexport const PATTERN_ETH = /^0x[a-fA-F0-9]{40}$/g;\n\nexport const PATTERN_TX = /[0-9a-fA-F]{64}$/g;\n\nexport const PATTERN_BLOCK = /^[0-9]+$/g;\n\nexport const PATTERN_HTTP = /^https:\\/\\/|^http:\\/\\//g;\n\nexport const PATTERN_HTML = /<\\/?[\\w\\d]+>/gi;\n","export enum LinksTypeFilter {\n  to = 'to',\n  from = 'from',\n  all = 'all',\n}\n\nexport type LinksType = Exclude<LinksTypeFilter, LinksTypeFilter.all>;\n\nexport type SearchItem = {\n  cid: string;\n  rank?: string;\n  grade?: string;\n  timestamp?: string;\n  type?: LinksTypeFilter;\n};\n\nexport enum SortBy {\n  rank = 'rank',\n  date = 'date',\n  // not ready\n  // popular = 'popular',\n  // mine = 'mine',\n}\n","export function isParticle(value: string) {\n  // copied from src/utils/config.ts , to prevent crash in worker, need refactor\n  // import { PATTERN_IPFS_HASH } from 'src/utils/config';\n  return Boolean(value.match(/^Qm[a-zA-Z0-9]{44}$/g));\n}\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { SenseApi } from 'src/contexts/backend/services/senseApi';\nimport {\n  SenseItemLinkMeta,\n  SenseListItem,\n  SenseListItemTransactionMeta,\n} from 'src/services/backend/types/sense';\nimport { EntryType } from 'src/services/CozoDb/types/entities';\nimport {\n  MsgMultiSendValue,\n  MsgSendValue,\n} from 'src/services/backend/services/indexer/types';\nimport { RootState } from 'src/redux/store';\n// Add this import for generating unique thread IDs\nimport { SenseItemId } from '../types/sense';\nimport { isParticle } from '../../particle/utils';\nimport { isWorker } from 'src/constants/config';\n\n// similar to blockchain/tx/message type\nexport type SenseItem = {\n  id: SenseItemId;\n  transactionHash: string;\n\n  // add normal type\n  type: string;\n\n  meta: SenseListItem['meta'];\n  timestamp: string;\n  memo: string | undefined;\n  from: string;\n\n  // for optimistic update\n  status?: 'pending' | 'error';\n  fromLog?: boolean;\n};\n\ntype Chat = {\n  id: SenseItemId;\n  isLoading: boolean;\n  error: string | undefined;\n  data: SenseItem[];\n  unreadCount: number;\n};\n\ntype SliceState = {\n  list: {\n    isLoading: boolean;\n    data: string[];\n    error: string | undefined;\n  };\n  chats: {\n    [key in SenseItemId]?: Chat;\n  };\n  summary: {\n    unreadCount: {\n      total: number;\n      particles: number;\n      neurons: number;\n    };\n  };\n  llm: {\n    // Change from messages array to threads array\n    threads: LLMThread[];\n    currentThreadId: string | null; // Keep track of the currently selected thread\n  };\n};\n\nconst initialState: SliceState = {\n  list: {\n    isLoading: false,\n    data: [],\n    error: undefined,\n  },\n  chats: {},\n  summary: {\n    unreadCount: {\n      total: 0,\n      particles: 0,\n      neurons: 0,\n    },\n  },\n  llm: {\n    // Change from messages array to threads array\n    threads: !isWorker()\n      ? (JSON.parse(localStorage.getItem('llmThreads') || '[]') as LLMThread[])\n      : [],\n    currentThreadId: null, // Keep track of the currently selected thread\n  },\n};\n\nfunction formatApiData(item: SenseListItem): SenseItem {\n  if (item.entryType === EntryType.chat && item.meta.to) {\n    item.entryType = EntryType.particle;\n  }\n\n  const { meta } = item;\n\n  const formatted: SenseItem = {\n    timestamp: new Date(meta.timestamp).toISOString(),\n\n    // lol\n    transactionHash:\n      item.transactionHash ||\n      item.hash ||\n      item.meta.transaction_hash ||\n      item.meta.hash ||\n      item.meta.transactionHash,\n\n    memo: item.memo || meta.memo,\n\n    senseChatId: item.id,\n    // not good\n    unreadCount: item.unreadCount || 0,\n  };\n\n  switch (item.entryType) {\n    case EntryType.chat:\n    case EntryType.transactions: {\n      const meta = item.meta as SenseListItemTransactionMeta;\n      const { type } = meta;\n\n      let from = item.ownerId;\n\n      if (type === 'cosmos.bank.v1beta1.MsgSend') {\n        const value = meta.value as MsgSendValue;\n        from = value.fromAddress;\n      } else if (type === 'cosmos.bank.v1beta1.MsgMultiSend') {\n        const value = meta.value as MsgMultiSendValue;\n\n        from = value.inputs[0].address;\n      }\n\n      Object.assign(formatted, {\n        type,\n        from,\n        meta: item.meta.value,\n      });\n\n      break;\n    }\n\n    case EntryType.particle: {\n      const meta = item.meta as SenseItemLinkMeta;\n\n      Object.assign(formatted, {\n        type: 'cyber.graph.v1beta1.MsgCyberlink',\n        from: meta.neuron,\n        meta,\n        fromLog: true,\n      });\n\n      break;\n    }\n\n    default:\n      // sholdn't be\n      debugger;\n      return {};\n  }\n\n  return formatted;\n}\n\nconst getSenseList = createAsyncThunk(\n  'sense/getSenseList',\n  async (senseApi: SenseApi) => {\n    const data = await senseApi!.getList();\n    return data.map(formatApiData);\n  }\n);\n\nconst getSenseChat = createAsyncThunk(\n  'sense/getSenseChat',\n  async ({ id, senseApi }: { id: SenseItemId; senseApi: SenseApi }) => {\n    const particle = isParticle(id);\n\n    if (particle) {\n      const links = await senseApi!.getLinks(id);\n      const formattedLinks = links.map((item) => {\n        if (item.timestamp === 0) {\n          // FIXME:\n          return;\n        }\n        return formatApiData({\n          ...item,\n          id,\n          entryType: EntryType.particle,\n          meta: item,\n        });\n      });\n\n      return formattedLinks.filter(Boolean);\n    }\n\n    const data = await senseApi!.getFriendItems(id);\n    const formattedData = data.map((item) => {\n      const entryType = item.to ? EntryType.particle : EntryType.chat;\n      return formatApiData({\n        ...item,\n        entryType,\n        id,\n        meta: item,\n      });\n    });\n\n    return formattedData;\n  }\n);\n\nconst markAsRead = createAsyncThunk(\n  'sense/markAsRead',\n  async ({ id, senseApi }: { id: SenseItemId; senseApi: SenseApi }) => {\n    return senseApi!.markAsRead(id);\n  }\n);\n\nconst newChatStructure: Chat = {\n  id: '',\n  isLoading: false,\n  data: [],\n  error: undefined,\n  unreadCount: 0,\n};\n\nfunction checkIfMessageExists(chat: Chat, newMessage: SenseItem) {\n  const lastMessages = chat.data.slice(-5);\n\n  const isMessageExists = lastMessages.some((msg) => {\n    return msg.transactionHash === newMessage.transactionHash;\n  });\n\n  return isMessageExists;\n}\n\n// Add LLM types\nexport interface LLMMessage {\n  text: string;\n  sender: 'user' | 'llm';\n  timestamp: number;\n}\n\nexport interface LLMThread {\n  id: string;\n  title?: string;\n  dateUpdated: number;\n  messages: LLMMessage[];\n}\n\nconst slice = createSlice({\n  name: 'sense',\n  initialState,\n  reducers: {\n    // backend may push this action\n    updateSenseList: {\n      reducer: (state, action: PayloadAction<SenseItem[]>) => {\n        const data = action.payload;\n\n        data.forEach((message) => {\n          const { senseChatId: id } = message;\n\n          if (!state.chats[id]) {\n            state.chats[id] = { ...newChatStructure };\n          }\n\n          const chat = state.chats[id]!;\n\n          Object.assign(chat, {\n            id,\n            // fix ts\n            unreadCount: message.unreadCount || 0,\n          });\n\n          if (!checkIfMessageExists(chat, message)) {\n            chat.data = chat.data.concat(message);\n          }\n        });\n\n        slice.caseReducers.orderSenseList(state);\n      },\n      prepare: (data: SenseListItem[]) => {\n        return {\n          payload: data.map(formatApiData),\n        };\n      },\n    },\n    // optimistic update\n    addSenseItem(\n      state,\n      action: PayloadAction<{ id: SenseItemId; item: SenseItem }>\n    ) {\n      const { id, item } = action.payload;\n      const chat = state.chats[id]!;\n\n      chat.data.push({\n        ...item,\n        meta: item.meta,\n        status: 'pending',\n      });\n\n      const newList = state.list.data.filter((item) => item !== id);\n      newList.unshift(id);\n      state.list.data = newList;\n    },\n    // optimistic confirm/error\n    updateSenseItem(\n      state,\n      action: PayloadAction<{\n        chatId: SenseItemId;\n        txHash: string;\n        isSuccess: boolean;\n      }>\n    ) {\n      const { chatId, txHash, isSuccess } = action.payload;\n      const chat = state.chats[chatId]!;\n\n      const item = chat.data.find((item) => item.transactionHash === txHash);\n\n      if (item) {\n        if (isSuccess) {\n          delete item.status;\n        } else {\n          item.status = 'error';\n        }\n      }\n    },\n    orderSenseList(state) {\n      const chatsLastMessage = Object.keys(state.chats).reduce<\n        {\n          id: string;\n          lastMsg: SenseItem;\n        }[]\n      >((acc, id) => {\n        const chat = state.chats[id]!;\n\n        // may be loading this moment, no data\n        if (!chat.data.length) {\n          return acc;\n        }\n\n        const lastMsg = chat.data[chat.data.length - 1];\n        acc.push({ id, lastMsg });\n\n        return acc;\n      }, []);\n\n      const sorted = chatsLastMessage.sort((a, b) => {\n        return (\n          Date.parse(b.lastMsg.timestamp) - Date.parse(a.lastMsg.timestamp)\n        );\n      });\n\n      state.list.data = sorted.map((i) => i.id);\n    },\n    reset() {\n      return initialState;\n    },\n    // LLM reducers\n    createLLMThread(\n      state,\n      action: PayloadAction<{ id: string; title?: string }>\n    ) {\n      const newThread: LLMThread = {\n        id: action.payload.id,\n        messages: [],\n        dateUpdated: Date.now(),\n        title:\n          action.payload.title ||\n          `Conversation ${state.llm.threads.length + 1}`,\n      };\n      state.llm.threads.push(newThread);\n      state.llm.currentThreadId = action.payload.id;\n      localStorage.setItem('llmThreads', JSON.stringify(state.llm.threads));\n    },\n\n    selectLLMThread(state, action: PayloadAction<{ id: string }>) {\n      state.llm.currentThreadId = action.payload.id;\n    },\n\n    addLLMMessageToThread(\n      state,\n      action: PayloadAction<{ threadId: string; message: LLMMessage }>\n    ) {\n      const thread = state.llm.threads.find(\n        (t) => t.id === action.payload.threadId\n      );\n      if (thread) {\n        thread.messages.push(action.payload.message);\n        thread.dateUpdated = action.payload.message.timestamp;\n        localStorage.setItem('llmThreads', JSON.stringify(state.llm.threads));\n      }\n    },\n\n    // Add action to replace the last message (for updating \"waiting...\" message)\n    replaceLastLLMMessageInThread(\n      state,\n      action: PayloadAction<{ threadId: string; message: LLMMessage }>\n    ) {\n      const thread = state.llm.threads.find(\n        (t) => t.id === action.payload.threadId\n      );\n      if (thread && thread.messages.length > 0) {\n        thread.messages[thread.messages.length - 1] = action.payload.message;\n        localStorage.setItem('llmThreads', JSON.stringify(state.llm.threads));\n      }\n    },\n\n    deleteLLMThread(state, action: PayloadAction<{ id: string }>) {\n      const newT = state.llm.threads.filter(\n        (thread) => thread.id !== action.payload.id\n      );\n\n      console.log('newT', newT);\n\n      state.llm.threads = newT;\n\n      if (state.llm.currentThreadId === action.payload.id) {\n        state.llm.currentThreadId = null;\n      }\n\n      // Object.assign(state.llm, {\n      //   threads: newT,\n      // });\n\n      localStorage.setItem('llmThreads', JSON.stringify(state.llm.threads));\n    },\n\n    clearLLMThreads(state) {\n      state.llm.threads = [];\n      state.llm.currentThreadId = null;\n      localStorage.removeItem('llmThreads');\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getSenseList.pending, (state) => {\n      state.list.isLoading = true;\n    });\n\n    builder.addCase(getSenseList.fulfilled, (state, action) => {\n      state.list.isLoading = false;\n\n      const newList: SliceState['list']['data'] = [];\n\n      action.payload.forEach((message) => {\n        const { senseChatId: id } = message;\n\n        if (!state.chats[id]) {\n          state.chats[id] = { ...newChatStructure };\n        }\n\n        const chat = state.chats[id]!;\n\n        Object.assign(chat, {\n          id,\n          // fix\n          unreadCount: message.unreadCount || 0,\n        });\n\n        if (!checkIfMessageExists(chat, message)) {\n          chat.data = chat.data.concat(message);\n        }\n\n        newList.push(id);\n      });\n\n      state.list.data = newList;\n    });\n    builder.addCase(getSenseList.rejected, (state, action) => {\n      console.error(action);\n\n      state.list.isLoading = false;\n      state.list.error = action.error.message;\n    });\n\n    builder.addCase(getSenseChat.pending, (state, action) => {\n      const { id } = action.meta.arg;\n\n      if (!state.chats[id]) {\n        state.chats[id] = { ...newChatStructure };\n      }\n\n      // don't understand why ts warning\n      state.chats[id].isLoading = true;\n    });\n\n    builder.addCase(getSenseChat.fulfilled, (state, action) => {\n      const { id } = action.meta.arg;\n      const chat = state.chats[id]!;\n      chat.isLoading = false;\n\n      chat.id = id;\n\n      chat.data = action.payload;\n    });\n    builder.addCase(getSenseChat.rejected, (state, action) => {\n      console.error(action);\n\n      const chat = state.chats[action.meta.arg.id]!;\n      chat.isLoading = false;\n      chat.error = action.error.message;\n    });\n\n    // maybe add .pending, .rejected\n    // can be optimistic\n    builder.addCase(markAsRead.fulfilled, (state, action) => {\n      const { id } = action.meta.arg;\n      const chat = state.chats[id]!;\n\n      const particle = isParticle(id);\n\n      const { unreadCount } = chat;\n\n      state.summary.unreadCount.total -= unreadCount;\n      if (particle) {\n        state.summary.unreadCount.particles -= unreadCount;\n      } else {\n        state.summary.unreadCount.neurons -= unreadCount;\n      }\n\n      chat.unreadCount = 0;\n    });\n  },\n});\n\nconst selectUnreadCounts = createSelector(\n  (state: RootState) => state.sense.chats,\n  (chats) => {\n    let unreadCountParticle = 0;\n    let unreadCountNeuron = 0;\n\n    Object.values(chats).forEach(({ id, unreadCount }) => {\n      const particle = isParticle(id);\n\n      if (particle) {\n        unreadCountParticle += unreadCount;\n      } else {\n        unreadCountNeuron += unreadCount;\n      }\n    });\n\n    const total = unreadCountParticle + unreadCountNeuron;\n\n    return {\n      total,\n      particles: unreadCountParticle,\n      neurons: unreadCountNeuron,\n    };\n  }\n);\n\nexport const {\n  addSenseItem,\n  updateSenseItem,\n  updateSenseList,\n  reset,\n  createLLMThread,\n  deleteLLMThread,\n  selectLLMThread,\n  addLLMMessageToThread,\n  replaceLastLLMMessageInThread,\n  clearLLMThreads,\n} = slice.actions;\n\nexport { getSenseList, getSenseChat, markAsRead };\n\n// selectors\nexport { selectUnreadCounts };\n\nexport default slice.reducer;\n","import { Dispatch } from 'redux';\nimport { localStorageKeys } from 'src/constants/localStorageKeys';\n\nimport {\n  Account,\n  AccountValue,\n  Accounts,\n  DefaultAccount,\n} from 'src/types/defaultAccount';\nimport { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { POCKET } from '../../utils/config';\nimport { RootState } from '../store';\n\ntype SliceState = {\n  actionBar: {\n    tweet: string;\n  };\n  defaultAccount: DefaultAccount;\n  accounts: null | Accounts;\n  isInitialized: boolean;\n};\n\nconst initialState: SliceState = {\n  actionBar: {\n    tweet: POCKET.STAGE_TWEET_ACTION_BAR.TWEET, // stage for tweet ActionBar: 'addAvatar' 'follow' 'tweet'\n  },\n  isInitialized: false,\n  defaultAccount: {\n    name: null,\n    account: null,\n  },\n  accounts: null,\n};\n\nconst checkAddress = (obj, network, address) =>\n  Object.keys(obj).some((k) => {\n    if (obj[k][network]) {\n      return obj[k][network].bech32 === address;\n    }\n  });\n\nfunction saveToLocalStorage(state: SliceState) {\n  const { defaultAccount, accounts } = state;\n\n  defaultAccount &&\n    localStorage.setItem(\n      localStorageKeys.pocket.POCKET,\n      JSON.stringify({\n        [defaultAccount.name]: defaultAccount.account,\n      })\n    );\n  accounts &&\n    localStorage.setItem(\n      localStorageKeys.pocket.POCKET_ACCOUNT,\n      JSON.stringify(accounts)\n    );\n}\n\nconst slice = createSlice({\n  name: 'pocket',\n  initialState,\n  reducers: {\n    setDefaultAccount: (\n      state,\n      {\n        payload: { name, account },\n      }: PayloadAction<{ name: string; account?: Account }>\n    ) => {\n      state.defaultAccount = {\n        name,\n        account: account || state.accounts?.[name] || null,\n      };\n\n      saveToLocalStorage(state);\n    },\n    setAccounts: (state, { payload }: PayloadAction<Accounts>) => {\n      state.accounts = payload;\n\n      saveToLocalStorage(state);\n    },\n    setInitialized: (state) => {\n      state.isInitialized = true;\n    },\n    setStageTweetActionBar: (state, { payload }: PayloadAction<string>) => {\n      state.actionBar.tweet = payload;\n    },\n\n    // bullshit\n    deleteAddress: (state, { payload }: PayloadAction<string>) => {\n      if (state.accounts) {\n        Object.keys(state.accounts).forEach((accountKey) => {\n          Object.keys(state.accounts[accountKey]).forEach((networkKey) => {\n            if (state.accounts[accountKey][networkKey].bech32 === payload) {\n              delete state.accounts[accountKey][networkKey];\n\n              if (Object.keys(state.accounts[accountKey]).length === 0) {\n                delete state.accounts[accountKey];\n              }\n\n              if (state.defaultAccount?.account?.cyber?.bech32 === payload) {\n                const entries = Object.entries(state.accounts);\n\n                const entryCyber = entries.find(\n                  ([, value]) => value.cyber?.bech32\n                );\n\n                if (entryCyber) {\n                  state.defaultAccount = {\n                    name: entryCyber[0],\n                    account: entryCyber[1],\n                  };\n                } else {\n                  state.defaultAccount = {\n                    name: null,\n                    account: null,\n                  };\n                }\n              }\n\n              saveToLocalStorage(state);\n            }\n          });\n        });\n      }\n    },\n  },\n});\n\nexport const selectCurrentAddress = (store: RootState) =>\n  store.pocket.defaultAccount.account?.cyber?.bech32;\n\nexport const {\n  setDefaultAccount,\n  setAccounts,\n  setStageTweetActionBar,\n  deleteAddress,\n} = slice.actions;\n\nexport default slice.reducer;\n\n// refactor this\nexport const initPocket = () => (dispatch: Dispatch) => {\n  let defaultAccounts = null;\n  let defaultAccountsKeys = null;\n  let accountsTemp: Accounts | null = null;\n\n  const localStoragePocketAccount = localStorage.getItem(\n    localStorageKeys.pocket.POCKET_ACCOUNT\n  );\n  const localStoragePocket = localStorage.getItem(\n    localStorageKeys.pocket.POCKET\n  );\n  if (localStoragePocket !== null) {\n    const localStoragePocketData = JSON.parse(localStoragePocket);\n    const keyPocket = Object.keys(localStoragePocketData)[0];\n    const accountPocket = Object.values(localStoragePocketData)[0];\n    defaultAccounts = accountPocket;\n    defaultAccountsKeys = keyPocket;\n  }\n  if (localStoragePocketAccount !== null) {\n    const localStoragePocketAccountData = JSON.parse(localStoragePocketAccount);\n    if (localStoragePocket === null) {\n      const keys0 = Object.keys(localStoragePocketAccountData)[0];\n      localStorage.setItem(\n        localStorageKeys.pocket.POCKET,\n        JSON.stringify({ [keys0]: localStoragePocketAccountData[keys0] })\n      );\n      defaultAccounts = localStoragePocketAccountData[keys0];\n      defaultAccountsKeys = keys0;\n    } else if (defaultAccountsKeys !== null) {\n      accountsTemp = {\n        [defaultAccountsKeys]:\n          localStoragePocketAccountData[defaultAccountsKeys] || undefined,\n        ...localStoragePocketAccountData,\n      };\n    }\n  } else {\n    localStorage.removeItem(localStorageKeys.pocket.POCKET);\n    localStorage.removeItem(localStorageKeys.pocket.POCKET_ACCOUNT);\n  }\n\n  defaultAccountsKeys &&\n    defaultAccounts &&\n    dispatch(\n      setDefaultAccount({\n        name: defaultAccountsKeys,\n        account: defaultAccounts,\n      })\n    );\n\n  accountsTemp &&\n    Object.keys(accountsTemp).forEach((key) => {\n      if (!accountsTemp[key] || Object.keys(accountsTemp[key]).length === 0) {\n        delete accountsTemp[key];\n      }\n    });\n\n  accountsTemp && dispatch(setAccounts(accountsTemp));\n\n  dispatch(slice.actions.setInitialized());\n};\n\nconst defaultNameAccount = () => {\n  let key = 'Account 1';\n  let count = 1;\n\n  const localStorageCount = localStorage.getItem('count');\n\n  if (localStorageCount !== null) {\n    const dataCount = JSON.parse(localStorageCount);\n    count = parseFloat(dataCount);\n    key = `Account ${count}`;\n  }\n\n  localStorage.setItem('count', JSON.stringify(count + 1));\n\n  return key;\n};\n\nexport const addAddressPocket =\n  (accounts: AccountValue) => (dispatch: Dispatch) => {\n    const key = accounts.name || defaultNameAccount();\n\n    let dataPocketAccount = null;\n    let valueObj = {};\n    let pocketAccount: Accounts = {};\n\n    const localStorageStory = localStorage.getItem(\n      localStorageKeys.pocket.POCKET_ACCOUNT\n    );\n\n    if (localStorageStory !== null) {\n      dataPocketAccount = JSON.parse(localStorageStory);\n      valueObj = Object.values(dataPocketAccount);\n    }\n\n    const isAdded = !checkAddress(valueObj, 'cyber', accounts.bech32);\n\n    if (!isAdded) {\n      return;\n    }\n\n    const cyberAccounts: Account = {\n      cyber: accounts,\n    };\n\n    if (localStorageStory !== null) {\n      pocketAccount = { [key]: cyberAccounts, ...dataPocketAccount };\n    } else {\n      pocketAccount = { [key]: cyberAccounts };\n    }\n\n    if (Object.keys(pocketAccount).length > 0) {\n      dispatch(setAccounts(pocketAccount));\n      if (accounts.keys !== 'read-only') {\n        dispatch(setDefaultAccount({ name: key, account: cyberAccounts }));\n      }\n    }\n  };\n","import { PinType } from 'ipfs-core-types/src/pin';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { Transaction } from 'src/services/backend/services/indexer/types';\nimport {\n  SenseChatExtension,\n  SenseLinkMeta,\n  SenseListItemtMeta,\n  SenseTransactionMeta,\n} from 'src/services/backend/types/sense';\nimport { IpfsContentType } from 'src/services/ipfs/types';\nimport { NeuronAddress, ParticleCid, TransactionHash } from 'src/types/base';\nimport { DtoToEntity } from 'src/types/dto';\n\ntype PinEntryType = Exclude<PinType, 'all'>;\n// example of db optimization for classifiers\n\nexport const PinTypeMap: Record<PinEntryType, number> = {\n  indirect: -1,\n  direct: 0,\n  recursive: 1,\n};\n\nexport enum EntryType {\n  transactions = 1,\n  particle = 2,\n  chat = 3,\n}\n\n// Transaction if formed by frontend\n// Should be replaced after sync\n\nexport type PinDbEntity = {\n  cid: string;\n  type: keyof typeof PinTypeMap;\n};\n\nexport type TransactionDbEntity = {\n  hash: string;\n  index: number;\n  type: string;\n  timestamp: number;\n  block_height: number;\n  value: Transaction['value'];\n  success: boolean;\n  memo: string;\n  neuron: NeuronAddress;\n};\n\ntype SyncItemMeta = DtoToEntity<\n  (SenseLinkMeta | SenseTransactionMeta) & SenseChatExtension\n>;\n\nexport type SyncStatusDbEntity = {\n  entry_type: EntryType;\n  id: NeuronAddress | ParticleCid;\n  owner_id: NeuronAddress;\n  timestamp_update: number;\n  timestamp_read: number;\n  disabled: boolean;\n  unread_count: number;\n  meta: SyncItemMeta;\n};\n\nexport type ParticleDbEntity = {\n  id: ParticleCid;\n  size: number;\n  size_local: number;\n  blocks: number;\n  mime: string;\n  type: IpfsContentType;\n  text: string;\n};\n\nexport type LinkDbEntity = {\n  from: ParticleCid;\n  to: ParticleCid;\n  neuron: NeuronAddress;\n  timestamp: number;\n  transaction_hash: string;\n};\n\nexport type ConfigDbEntity = {\n  key: string;\n  group_key: string;\n  value: NonNullable<unknown>;\n};\n\nexport enum SyncQueueStatus {\n  pending = 0,\n  executing = 1,\n  done = 2,\n  error = -1,\n}\n\nexport enum SyncQueueJobType {\n  particle = 0,\n  embedding = 1,\n}\n\nexport type SyncQueueKey = {\n  id: string;\n  job_type: SyncQueueJobType;\n};\n\nexport type SyncQueueDbEntity = SyncQueueKey & {\n  data: string;\n  status: SyncQueueStatus;\n  priority: QueuePriority | number;\n};\n\nexport type CommunityDbEntity = {\n  ownerId: NeuronAddress;\n  particle: ParticleCid;\n  neuron: NeuronAddress;\n  name: string;\n  following: boolean;\n  follower: boolean;\n};\n\nexport type EmbeddinsDbEntity = {\n  cid: ParticleCid;\n  vec: number[];\n};\n\nexport type DbEntity =\n  | TransactionDbEntity\n  | ParticleDbEntity\n  | SyncStatusDbEntity\n  | ConfigDbEntity\n  | SyncQueueDbEntity\n  | EmbeddinsDbEntity;\n","import { Option } from 'src/types';\nimport { IPFSContent, IpfsContentSource } from '../ipfs/types';\n\n/* eslint-disable import/no-unused-modules */\nexport type QueueItemStatus =\n  | 'pending'\n  | 'executing'\n  | 'timeout'\n  | 'completed'\n  | 'cancelled'\n  | 'error'\n  | 'not_found';\n\nexport type QueueSourceSettings = {\n  timeout: number;\n  maxConcurrentExecutions: number;\n};\n\nexport type QueueSource = IpfsContentSource;\n\nexport type QueueSettings = Record<QueueSource, QueueSourceSettings>;\n\nexport interface IQueueStrategy {\n  settings: QueueSettings;\n  order: QueueSource[];\n  getNextSource(source: QueueSource): QueueSource | undefined;\n}\n\nexport type QueueStats = {\n  status: QueueItemStatus;\n  count: number;\n};\n\nexport enum QueuePriority {\n  ZERO = 0,\n  LOW = 0.1,\n  MEDIUM = 0.5,\n  HIGH = 0.9,\n  URGENT = 1,\n}\nexport type QueueItemOptions = {\n  parent?: string;\n  priority?: QueuePriority | number;\n  viewPortPriority?: number;\n  initialSource?: QueueSource;\n  postProcessing?: boolean;\n};\n\nexport type QueueItemCallback = (\n  cid: string,\n  status: QueueItemStatus,\n  source: QueueSource,\n  result?: Option<IPFSContent>\n) => void;\n\nexport type QueueItem = {\n  cid: string;\n  source: QueueSource;\n  status: QueueItemStatus;\n  callbacks: QueueItemCallback[];\n  controller?: AbortController;\n  executionTime?: number;\n} & Omit<QueueItemOptions, 'initialSource'>;\n\nexport type QueueItemResult = {\n  item: QueueItem;\n  status: QueueItemStatus;\n  source: QueueSource;\n  result?: Option<IPFSContent>;\n};\n\nexport type QueueItemAsyncResult = Omit<QueueItemResult, 'item'>;\n\nexport type QueueItemPostProcessor = (\n  content: Option<IPFSContent>\n) => Promise<Option<IPFSContent>>;\n\nexport type FetchParticleAsync = (\n  cid: string,\n  options?: QueueItemOptions\n) => Promise<QueueItemAsyncResult>;\n","import { updateSenseList } from 'src/features/sense/redux/sense.redux';\nimport { setDefaultAccount } from 'src/redux/features/pocket';\nimport { Account } from 'src/types/defaultAccount';\nimport { SenseListItem } from '../types/sense';\nimport {\n  BroadcastChannelMessage,\n  ServiceName,\n  ServiceStatus,\n  SyncEntryName,\n  SyncProgress,\n} from '../types/services';\nimport { CYB_BROADCAST_CHANNEL } from './consts';\n\nclass BroadcastChannelSender {\n  private channel: BroadcastChannel;\n\n  constructor() {\n    this.channel = new BroadcastChannel(CYB_BROADCAST_CHANNEL);\n  }\n\n  public postServiceStatus(\n    name: ServiceName,\n    status: ServiceStatus,\n    message?: string\n  ) {\n    this.channel.postMessage({\n      type: 'service_status',\n      value: { name, status, message },\n    });\n  }\n\n  public postSyncEntryProgress(entry: SyncEntryName, state: SyncProgress) {\n    // console.log('postSyncEntryProgress', entry, state);\n    this.channel.postMessage({ type: 'sync_entry', value: { entry, state } });\n  }\n\n  public postMlSyncEntryProgress(entry: string, state: SyncProgress) {\n    // console.log('postMlSyncEntryProgress', entry, state);\n    this.channel.postMessage({\n      type: 'sync_ml_entry',\n      value: { entry, state },\n    });\n  }\n\n  public postSenseUpdate(senseList: SenseListItem[]) {\n    // console.log('postSenseUpdate', senseList);\n    if (senseList.length > 0) {\n      this.channel.postMessage(updateSenseList(senseList));\n    }\n  }\n\n  public postSetDefaultAccount(name: string, account?: Account) {\n    this.channel.postMessage(\n      setDefaultAccount({\n        name,\n        account,\n      })\n    );\n  }\n\n  post(msg: BroadcastChannelMessage) {\n    this.channel.postMessage(msg);\n  }\n}\n\nexport default BroadcastChannelSender;\n","export const CYB_BROADCAST_CHANNEL = 'cyb-broadcast-channel';\nexport const CYB_QUEUE_CHANNEL = 'cyb-queue-channel';\n","import { Coin } from 'cosmjs-types/cosmos/base/v1beta1/coin';\nimport { CyberLinkSimple, NeuronAddress } from 'src/types/base';\n\ninterface GenericIndexerTransaction<T> {\n  value: T;\n  type: string;\n  transaction_hash: string;\n  index: number;\n  transaction: {\n    memo?: string;\n    success: boolean;\n    block: {\n      timestamp: string;\n    };\n  };\n}\nexport const MSG_SEND_TRANSACTION_TYPE = 'cosmos.bank.v1beta1.MsgSend';\n\nexport const MSG_MULTI_SEND_TRANSACTION_TYPE =\n  'cosmos.bank.v1beta1.MsgMultiSend';\n\nexport const CYBER_LINK_TRANSACTION_TYPE = 'cyber.graph.v1beta1.MsgCyberlink';\n\ninterface Input {\n  address: NeuronAddress;\n  coins: Coin[];\n}\n\ninterface Output {\n  address: NeuronAddress;\n  coins: Coin[];\n}\n\nexport interface MsgMultiSendValue {\n  inputs: Input[];\n  outputs: Output[];\n}\n\nexport interface MsgSendValue {\n  amount: Coin[];\n  from_address: NeuronAddress;\n  to_address: NeuronAddress;\n}\n\ninterface MsgDelegateValue {\n  amount: Coin;\n  delegator_address: NeuronAddress;\n  validator_address: NeuronAddress;\n}\n\nexport interface CyberLinkValue {\n  neuron: NeuronAddress;\n  links: CyberLinkSimple[];\n}\n\nexport interface CyberLinkTransaction\n  extends GenericIndexerTransaction<CyberLinkValue> {\n  type: typeof CYBER_LINK_TRANSACTION_TYPE;\n}\n\nexport interface MsgMultiSendTransaction\n  extends GenericIndexerTransaction<MsgMultiSendValue> {\n  type: typeof MSG_MULTI_SEND_TRANSACTION_TYPE;\n}\n\nexport interface MsgSendTransaction\n  extends GenericIndexerTransaction<MsgSendValue> {\n  type: typeof MSG_SEND_TRANSACTION_TYPE;\n}\n\nexport type Transaction =\n  // | DelegateTransaction\n  CyberLinkTransaction | MsgMultiSendTransaction | MsgSendTransaction;\n","import { EntryType } from 'src/services/CozoDb/types/entities';\nimport DbApiWrapper from 'src/services/backend/services/DbApi/DbApi';\nimport { NeuronAddress } from 'src/types/base';\nimport {\n  SenseListItem,\n  SenseTransactionMeta,\n} from 'src/services/backend/types/sense';\nimport { throwIfAborted } from 'src/utils/async/promise';\nimport { extractSenseChats } from '../../utils/sense';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const syncMyChats = async (\n  db: DbApiWrapper,\n  myAddress: NeuronAddress,\n  timestampFrom: number,\n  signal: AbortSignal,\n  shouldUpdateTimestamp = true\n) => {\n  const syncItems = await db.findSyncStatus({\n    ownerId: myAddress,\n    entryType: EntryType.chat,\n  });\n\n  const syncItemsMap = new Map(syncItems?.map((i) => [i.id, i]));\n\n  const myTransactions = await db.getTransactions(myAddress, {\n    order: 'asc',\n    timestampFrom,\n  });\n\n  const myChats = extractSenseChats(myAddress, myTransactions!);\n\n  const results: SenseListItem[] = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chat of myChats.values()) {\n    const syncItem = syncItemsMap.get(chat.userAddress);\n    const lastTransaction = chat.transactions.at(-1)!;\n\n    const { timestamp: transactionTimestamp, hash, index } = lastTransaction;\n    const syncItemHeader = {\n      entryType: EntryType.chat,\n      ownerId: myAddress,\n      meta: {\n        transactionHash: hash,\n        index,\n      } as SenseTransactionMeta,\n    };\n\n    // if no sync item(first message/initial)\n    if (!syncItem) {\n      const unreadCount = chat.transactions.filter(\n        (t) => t.timestamp > chat.lastSendTimestamp\n      ).length; // uread count on top of my last send message\n\n      const newItem = {\n        ...syncItemHeader,\n        id: chat.userAddress,\n        unreadCount,\n        // if 'fast' then no shift update poiter till 'slow' reupdate\n        timestampUpdate: shouldUpdateTimestamp ? transactionTimestamp : 0,\n        timestampRead: chat.lastSendTimestamp,\n        disabled: false,\n      };\n\n      // eslint-disable-next-line no-await-in-loop\n      await throwIfAborted(db.putSyncStatus.bind(db), signal)(newItem);\n\n      results.push({ ...newItem, meta: lastTransaction });\n    } else {\n      const {\n        id,\n        timestampRead,\n        timestampUpdate,\n        meta,\n        unreadCount: prevUnreadCount,\n      } = syncItem;\n\n      const lastTimestampRead = Math.max(\n        timestampRead!,\n        chat.lastSendTimestamp\n      );\n      const { timestampUpdateContent = 0, timestampUpdateChat = 0 } = meta;\n      const timestampUnreadFrom = Math.max(\n        chat.lastSendTimestamp,\n        timestampUpdateChat\n      );\n      const unreadCount =\n        prevUnreadCount +\n        chat.transactions.filter((t) => t.timestamp > timestampUnreadFrom) // + new messages count\n          .length;\n\n      if (timestampUpdate < transactionTimestamp) {\n        // if message source is 'fast' then no update till 'slow' reupdate\n        const newTimestampUpdateChat = shouldUpdateTimestamp\n          ? transactionTimestamp\n          : timestampUpdateChat;\n\n        const syncStatusChanges = {\n          ...syncItemHeader,\n          id: id!,\n          unreadCount,\n          timestampRead: lastTimestampRead,\n          // show max timestamp to use in sorting, in sense list\n          // real timestamp shold be resynced with 'slow' data source by timestampUpdateChat\n          timestampUpdate: Math.max(\n            transactionTimestamp,\n            timestampUpdateContent,\n            newTimestampUpdateChat\n          ),\n\n          meta: {\n            ...syncItemHeader.meta,\n            timestampUpdateChat: newTimestampUpdateChat,\n            timestampUpdateContent,\n          },\n        };\n\n        // eslint-disable-next-line no-await-in-loop\n        await throwIfAborted(\n          db.updateSyncStatus.bind(db),\n          signal\n        )(syncStatusChanges);\n\n        results.push({\n          ...syncItem,\n          ...syncStatusChanges,\n          meta: lastTransaction,\n        } as SenseListItem);\n      }\n    }\n  }\n  return results;\n};\n","import { CID_FOLLOW, CID_TWEET } from 'src/constants/app';\nimport { SyncEntryName } from 'src/services/backend/types/services';\n\nexport const MY_PARTICLES_SYNC_INTERVAL = 5 * 60 * 1000; // 60 sec\nexport const MY_FRIENDS_SYNC_INTERVAL = 5 * 60 * 1000; // 60 sec\nexport const IPFS_SYNC_INTERVAL = 15 * 60 * 1000; // 15 minutes\n\nexport const MAX_DATABASE_PUT_SIZE = 500;\n\nexport const MAX_LINKS_RESOLVE_BATCH = 20;\n\nexport const DAY_IN_MS = 24 * 60 * 60 * 1000;\n\nexport const SENSE_FRIEND_PARTICLES = [CID_TWEET, CID_FOLLOW];\n\nexport const SYNC_ENTRIES_TO_TRACK_PROGRESS = [\n  'my-friends',\n  'particles',\n  'transactions',\n] as SyncEntryName[];\n","import { TransactionDto } from 'src/services/CozoDb/types/dto';\nimport { SenseChat } from 'src/services/backend/types/sense';\nimport { NeuronAddress } from 'src/types/base';\nimport { Coin } from 'cosmjs-types/cosmos/base/v1beta1/coin';\n\nimport {\n  MSG_SEND_TRANSACTION_TYPE,\n  MSG_MULTI_SEND_TRANSACTION_TYPE,\n  MsgSendTransaction,\n} from '../../../indexer/types';\n\nexport const extractSenseChats = (\n  myAddress: NeuronAddress,\n  transactions: TransactionDto[]\n) => {\n  const sendTransactions =\n    transactions!.filter(\n      (t) =>\n        t.type === MSG_SEND_TRANSACTION_TYPE ||\n        t.type === MSG_MULTI_SEND_TRANSACTION_TYPE\n    ) || [];\n\n  if (sendTransactions.length === 0) {\n    return [];\n  }\n  const chats = new Map<NeuronAddress, SenseChat>();\n  transactions.forEach((t) => {\n    let userAddress = '';\n    if (t.type === MSG_MULTI_SEND_TRANSACTION_TYPE) {\n      const { inputs, outputs } = t.value;\n      const isSender = inputs.find((i) => i.address === myAddress);\n      const userMessages = isSender ? outputs : inputs;\n      userMessages.forEach((msg) =>\n        updateSenseChat(chats, msg.address, t, msg.coins, isSender)\n      );\n    } else if (t.type === MSG_SEND_TRANSACTION_TYPE) {\n      const { fromAddress, toAddress, amount } =\n        t.value as MsgSendTransaction['value'];\n      const isSender = fromAddress === myAddress;\n      userAddress = isSender ? toAddress : fromAddress;\n      updateSenseChat(chats, userAddress, t, amount, isSender);\n    }\n  });\n\n  return chats;\n};\n\nconst updateSenseChat = (\n  chats: Map<NeuronAddress, SenseChat>,\n  addr: string,\n  t: TransactionDto,\n  amount: Coin[],\n  isSender: boolean\n): Map<string, SenseChat> => {\n  const chat = chats.get(addr);\n  const transactions = chat?.transactions || [];\n\n  transactions.push(t);\n  chats.set(addr, {\n    userAddress: addr,\n    lastSendTimestamp: isSender ? t.timestamp : chat?.lastSendTimestamp || 0,\n    last: { amount, memo: t.memo, direction: isSender ? 'to' : 'from' },\n    transactions,\n  });\n  return chats;\n};\n","import { NeuronAddress } from 'src/types/base';\nimport { LinkDto, SyncStatusDto } from 'src/services/CozoDb/types/dto';\nimport { EntryType } from 'src/services/CozoDb/types/entities';\n\nimport { findLastIndex } from 'lodash';\nimport { entityToDto } from 'src/utils/dto';\n\nimport { SenseItemLinkMeta } from '../../types/sense';\nimport { SyncEntryName } from '../../types/services';\n\nexport function getLastReadInfo(\n  links: LinkDto[],\n  ownerId: NeuronAddress,\n  prevTimestampRead = 0,\n  prevUnreadCount = 0\n) {\n  const lastUnreadLinks = links.filter(\n    (link) => link.timestamp > prevTimestampRead\n  );\n  const lastMyLinkIndex = findLastIndex(\n    lastUnreadLinks,\n    (link) => link.neuron === ownerId\n  );\n\n  const unreadCount =\n    lastMyLinkIndex < 0\n      ? prevUnreadCount + lastUnreadLinks.length\n      : lastUnreadLinks.length - lastMyLinkIndex - 1;\n\n  const timestampRead =\n    lastMyLinkIndex < 0 ? prevTimestampRead : links[lastMyLinkIndex].timestamp;\n\n  return {\n    timestampRead,\n    unreadCount,\n  };\n}\n\nexport function changeParticleSyncStatus(\n  syncStatus: Partial<SyncStatusDto>,\n  links: LinkDto[],\n  ownerId: NeuronAddress,\n  shouldUpdateTimestamp = true\n) {\n  const { timestampRead, unreadCount } = getLastReadInfo(\n    links,\n    ownerId,\n    syncStatus.timestampRead,\n    syncStatus.unreadCount\n  );\n\n  const lastLink = entityToDto(links[links.length - 1]);\n  const timestampUpdate = lastLink.timestamp;\n  return {\n    ...syncStatus,\n    ownerId,\n    entryType: EntryType.particle,\n    disabled: false,\n    unreadCount,\n    meta: {\n      ...lastLink,\n      timestamp: timestampUpdate,\n    } as SenseItemLinkMeta,\n    timestampRead,\n    timestampUpdate: shouldUpdateTimestamp\n      ? timestampUpdate\n      : syncStatus.timestampUpdate,\n  } as SyncStatusDto;\n}\n\nconst mapSyncEntryReadable: Record<SyncEntryName, string> = {\n  'my-friends': \"friend's logs\",\n  particles: 'log cyberlinks',\n  resolver: 'particles',\n  transactions: 'transactions',\n  pin: 'ipfs pins',\n};\n\nexport const syncEntryNameToReadable = (name: SyncEntryName) =>\n  mapSyncEntryReadable[name] || name;\n","import { createCyblogChannel } from 'src/utils/logging/cyblog';\nimport {\n  ProgressTracking,\n  SyncEntryName,\n  SyncProgress,\n} from '../types/services';\nimport BroadcastChannelSender from './BroadcastChannelSender';\n\nexport const broadcastStatus = (\n  name: SyncEntryName,\n  channelApi: BroadcastChannelSender\n) => {\n  // const cyblogCh = createCyblogChannel({ thread: 'bckd', module: name });\n  return {\n    sendStatus: (\n      status: SyncProgress['status'],\n      message?: string,\n      progress?: ProgressTracking\n    ) => {\n      // cyblogCh.info(`>>>$ sync ${name} status: ${status} message: ${message}`);\n      channelApi.postSyncEntryProgress(name, {\n        status,\n        message,\n        progress,\n        done: ['active', 'error', 'listen'].some((s) => s === status),\n      });\n    },\n  };\n};\n","async function* arrayToAsyncIterable<T>(array: T[]): AsyncIterable<T> {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const item of array) {\n    yield item;\n  }\n}\n\nasync function asyncIterableBatchProcessor<T, K>(\n  items: AsyncIterable<T> | Iterable<T>,\n  batchProcess: (arg: T[]) => Promise<K>,\n  batchSize = 10\n): Promise<void> {\n  let batch = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const item of items) {\n    batch.push(item);\n    if (batch.length === batchSize) {\n      await batchProcess(batch);\n      batch = [];\n    }\n  }\n  // process the rest\n  if (batch.length > 0) {\n    await batchProcess(batch);\n  }\n}\n\nasync function asyncIterableToArray<T>(asyncIterable: AsyncIterable<T>) {\n  const resultArray = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const item of asyncIterable) {\n    resultArray.push(item);\n  }\n  return resultArray;\n}\n// Create a helper function to create AsyncIterable from a list and iterate one by one\nfunction createAsyncIterable<T>(data: T[]): AsyncIterable<T> {\n  let index = 0;\n  return {\n    [Symbol.asyncIterator]() {\n      return {\n        next(): Promise<IteratorResult<T>> {\n          if (index < data.length) {\n            return Promise.resolve({ done: false, value: data[index++] });\n          }\n          return Promise.resolve({ done: true, value: undefined as any });\n        },\n      };\n    },\n  };\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function* fetchIterableByOffset<T, P>(\n  fetchFunction: (params: P & { offset: number }) => Promise<T[]>,\n  params: P\n): AsyncGenerator<T[], void, undefined> {\n  let offset = 0;\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const items = await fetchFunction({ ...params, offset });\n\n    if (items.length === 0) {\n      break;\n    }\n\n    yield items;\n\n    offset += items.length;\n  }\n}\n\nexport {\n  arrayToAsyncIterable,\n  asyncIterableBatchProcessor,\n  asyncIterableToArray,\n  createAsyncIterable,\n};\n","import { SyncQueueJobType } from 'src/services/CozoDb/types/entities';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { IPFSContent } from 'src/services/ipfs/types';\nimport { LinkDto } from 'src/services/CozoDb/types/dto';\n\nimport { getTextContentIfShouldEmbed } from '../../services/sync/services/ParticlesResolverQueue/ParticlesResolverQueue';\nimport { CYB_QUEUE_CHANNEL } from '../consts';\nimport { QueueChannelMessage } from './types';\n\nexport const createBackendQueueSender = () => {\n  const channel = new BroadcastChannel(CYB_QUEUE_CHANNEL);\n\n  return {\n    enqueue: (msg: QueueChannelMessage) => {\n      channel.postMessage(msg);\n    },\n  };\n};\n\nconst busSender = createBackendQueueSender();\n\nexport const enqueueParticleEmbeddingMaybe = async (content: IPFSContent) => {\n  const contentToEmbed = await getTextContentIfShouldEmbed(content);\n\n  if (contentToEmbed) {\n    busSender.enqueue({\n      type: 'sync',\n      data: {\n        id: content.cid,\n        data: contentToEmbed,\n        jobType: SyncQueueJobType.embedding,\n        priority: QueuePriority.MEDIUM,\n      },\n    });\n  }\n\n  return !!contentToEmbed;\n};\n\nexport const enqueueParticleSave = (content: IPFSContent) => {\n  busSender.enqueue({\n    type: 'particle',\n    // TODO: add AsyncIterator serializer\n    data: { ...content, result: undefined } as IPFSContent,\n  });\n\n  return true;\n};\n\nexport const enqueueLinksSave = (links: LinkDto[]) => {\n  busSender.enqueue({\n    type: 'link',\n    data: links,\n  });\n};\n","import {\n  BehaviorSubject,\n  Observable,\n  filter,\n  mergeMap,\n  tap,\n  map,\n  combineLatest,\n  share,\n  EMPTY,\n  Subject,\n  first,\n} from 'rxjs';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport { broadcastStatus } from 'src/services/backend/channels/broadcastStatus';\nimport { ParticleCid } from 'src/types/base';\nimport {\n  SyncQueueJobType,\n  SyncQueueStatus,\n} from 'src/services/CozoDb/types/entities';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { asyncIterableBatchProcessor } from 'src/utils/async/iterable';\n\nimport { enqueueParticleEmbeddingMaybe } from 'src/services/backend/channels/BackendQueueChannel/backendQueueSenders';\n\nimport { PATTERN_COSMOS, PATTERN_CYBER } from 'src/constants/patterns';\nimport { EmbeddingApi } from 'src/services/backend/workers/background/api/mlApi';\nimport { Option } from 'src/types';\n\nimport { IPFSContent } from 'src/services/ipfs/types';\nimport { FetchIpfsFunc } from '../../types';\nimport { ServiceDeps } from '../types';\nimport { SyncQueueItem } from './types';\nimport { MAX_DATABASE_PUT_SIZE } from '../consts';\n\nimport DbApi from '../../../DbApi/DbApi';\n\nconst QUEUE_BATCH_SIZE = 100;\n\nconst getContentToEmbed = async (content: IPFSContent) => {\n  const contentType = content?.meta?.contentType || '';\n\n  // create embedding for allowed content\n  if (contentType === 'text') {\n    return [contentType, content.textPreview];\n  }\n\n  return [contentType, undefined];\n};\n\nexport const getTextContentIfShouldEmbed = async (content: IPFSContent) => {\n  const [contentType, data] = await getContentToEmbed(content);\n\n  let shouldEmbed = contentType === 'text' && !!data;\n\n  shouldEmbed =\n    shouldEmbed &&\n    (!data!.match(PATTERN_COSMOS) || !data!.match(PATTERN_CYBER));\n\n  return shouldEmbed ? data : undefined;\n};\n\nclass ParticlesResolverQueue {\n  public isInitialized$: Observable<boolean>;\n\n  private db: Option<DbApi>;\n\n  private embeddingApi: Option<EmbeddingApi>;\n\n  private get canEmbed() {\n    return !!this.embeddingApi;\n  }\n\n  private waitForParticleResolve: FetchIpfsFunc;\n\n  private statusApi = broadcastStatus('resolver', new BroadcastChannelSender());\n\n  private _syncQueue$ = new BehaviorSubject<Map<ParticleCid, SyncQueueItem>>(\n    new Map()\n  );\n\n  public get queue(): Map<ParticleCid, SyncQueueItem> {\n    return this._syncQueue$.getValue();\n  }\n\n  private _loop$: Observable<any> | undefined;\n\n  public get loop$(): Observable<any> | undefined {\n    return this._loop$;\n  }\n\n  constructor(deps: ServiceDeps) {\n    if (!deps.waitForParticleResolve) {\n      throw new Error('waitForParticleResolve is not defined');\n    }\n\n    this.waitForParticleResolve = deps.waitForParticleResolve;\n\n    deps.embeddingApi$.subscribe((embeddingApi) => {\n      this.embeddingApi = embeddingApi;\n      // if embedding function is provided, retriger the queue\n      if (this.queue.size > 0) {\n        this._syncQueue$.next(this.queue);\n      }\n    });\n\n    deps.dbInstance$\n      .pipe(\n        first((value) => value !== undefined) // Automatically unsubscribes after the first valid value\n      )\n      .subscribe(async (db) => {\n        this.db = db;\n        await this.loadSyncQueue();\n      });\n\n    this.isInitialized$ = combineLatest([\n      deps.dbInstance$,\n      deps.ipfsInstance$,\n    ]).pipe(\n      map(([dbInstance, ipfsInstance]) => !!ipfsInstance && !!dbInstance)\n    );\n  }\n\n  private async resolveIpfsParticle(id: ParticleCid, priority: QueuePriority) {\n    return this.waitForParticleResolve(id, priority)\n      .then(async ({ status, result }) => {\n        const isResolved = status !== 'not_found';\n        if (!isResolved || !result) {\n          return false;\n        }\n\n        await enqueueParticleEmbeddingMaybe(result);\n        return true;\n      })\n      .catch(() => false);\n  }\n\n  private async saveEmbedding(cid: ParticleCid, text: string) {\n    try {\n      const hasItem = await this.db!.existEmbedding(cid);\n\n      if (!hasItem) {\n        const vec = await this.embeddingApi!.createEmbedding(text);\n\n        const result = await this.db!.putEmbedding(cid, vec);\n      }\n\n      return true;\n    } catch (err) {\n      console.error(`saveEmbedding error: ${cid} - ${text} `, err.toString());\n      return false;\n    }\n  }\n\n  private async processSyncQueue(pendingItems: SyncQueueItem[]) {\n    // console.log('------processSyncQueue ', pendingItems);\n\n    const batchSize = pendingItems.length;\n\n    this.statusApi.sendStatus(\n      'in-progress',\n      `processing batch ${batchSize}/${batchSize} batch. ${this.queue.size} pending...`\n    );\n\n    let i = batchSize;\n    await Promise.all(\n      pendingItems.map(async (item) => {\n        const { id, jobType, data } = item;\n\n        let jobPromise = Promise.resolve(false);\n\n        if (jobType === SyncQueueJobType.embedding && data) {\n          jobPromise = this.saveEmbedding(id, data as string);\n        } else if (jobType === SyncQueueJobType.particle) {\n          jobPromise = this.resolveIpfsParticle(id, QueuePriority.MEDIUM);\n        }\n\n        // eslint-disable-next-line no-await-in-loop\n        return jobPromise.then(async (result) => {\n          if (result) {\n            await this.db!.removeSyncQueue({ id, jobType });\n          } else {\n            await this.db!.updateSyncQueue({\n              id,\n              jobType,\n              status: SyncQueueStatus.error,\n            });\n          }\n\n          const queue = this._syncQueue$.value;\n          queue.delete(id);\n          i--;\n          this._syncQueue$.next(queue);\n\n          this.statusApi.sendStatus(\n            'in-progress',\n            `processing batch ${batchSize - i}/${batchSize} batch. ${\n              this.queue.size\n            } pending...`\n          );\n        });\n      })\n    );\n  }\n\n  start() {\n    const source$ = this.isInitialized$.pipe(\n      tap((q) => console.log(`sync queue isInitialized - ${q}`)),\n      filter((isInitialized) => isInitialized === true),\n      mergeMap(() => this._syncQueue$), // Merge the queue$ stream here.\n      // tap((q) => console.log(`sync queue - ${q.size}`)),\n      filter((q) => q.size > 0),\n      mergeMap((queue) => {\n        const list = [...queue.values()];\n\n        const executingCount = list.filter(\n          (i) => i.status === SyncQueueStatus.executing\n        ).length;\n\n        const batchSize = QUEUE_BATCH_SIZE - executingCount;\n\n        const jobTypeFilter = (i: SyncQueueItem) =>\n          i.jobType === SyncQueueJobType.particle ||\n          (i.jobType === SyncQueueJobType.embedding && this.canEmbed);\n\n        if (batchSize > 0) {\n          const pendingItems = list\n            .filter(\n              (i) => i.status === SyncQueueStatus.pending && jobTypeFilter(i)\n            )\n            .sort((a, b) => {\n              return a.priority - b.priority;\n            })\n            .slice(0, batchSize);\n\n          if (pendingItems.length > 0) {\n            pendingItems.forEach((i) => {\n              queue.set(i.id, {\n                ...i,\n                status: SyncQueueStatus.executing,\n              });\n            });\n\n            this._syncQueue$.next(queue);\n\n            this.statusApi.sendStatus('in-progress', `starting...`);\n            return this.processSyncQueue(pendingItems);\n          }\n        }\n\n        return EMPTY;\n      })\n    );\n\n    this._loop$ = source$.pipe(share());\n\n    this._loop$.subscribe({\n      next: (result) => {\n        this.statusApi.sendStatus('active');\n      },\n      error: (err) => this.statusApi.sendStatus('error', err.toString()),\n    });\n\n    return this;\n  }\n\n  public async enqueueBatch(\n    cids: ParticleCid[],\n    jobType: SyncQueueJobType,\n    priority: QueuePriority\n  ) {\n    return asyncIterableBatchProcessor(\n      cids,\n      (cids) =>\n        this.enqueue(\n          cids.map((cid) => ({\n            id: cid /* from is tweet */,\n            priority,\n            jobType,\n          }))\n        ),\n      MAX_DATABASE_PUT_SIZE\n    );\n  }\n\n  public async enqueue(items: SyncQueueItem[]) {\n    if (items.length === 0) {\n      return;\n    }\n\n    const result = await this.db!.putSyncQueue(items);\n\n    const queue = this._syncQueue$.value;\n\n    items.forEach((item) =>\n      queue.set(item.id, { ...item, status: SyncQueueStatus.pending })\n    );\n    this._syncQueue$.next(queue);\n  }\n\n  private async loadSyncQueue() {\n    const queue = await this.db!.getSyncQueue({\n      statuses: [SyncQueueStatus.pending],\n    }).then((items) => new Map(items.map((item) => [item.id, item])));\n\n    this._syncQueue$.next(new Map([...queue, ...this.queue]));\n  }\n}\n\nexport default ParticlesResolverQueue;\n","import { LsResult } from 'ipfs-core-types/src/pin';\nimport { dateToUtcNumber } from 'src/utils/date';\nimport { NeuronAddress, ParticleCid, TransactionHash } from 'src/types/base';\nimport { IPFSContent } from '../ipfs/types';\nimport { LinkDbEntity, PinTypeMap } from './types/entities';\nimport { Transaction } from '../backend/services/indexer/types';\nimport { LinkDto, ParticleDto, PinDto, TransactionDto } from './types/dto';\nimport { CyberlinksByParticleQuery } from 'src/generated/graphql';\nimport { removeMarkdownFormatting, replaceQuotes } from 'src/utils/string';\n\nexport const mapParticleToEntity = (particle: IPFSContent): ParticleDto => {\n  const { cid, meta, textPreview } = particle;\n  const { size, mime, type, blocks, sizeLocal } = meta;\n\n  // hack to fix string command\n  const text = textPreview\n    ? replaceQuotes(removeMarkdownFormatting(textPreview))\n    : '';\n\n  return {\n    cid,\n    size: size || 0,\n    mime: mime || 'unknown',\n    type,\n    text,\n    size_local: sizeLocal || -1,\n    blocks: blocks || 0,\n  };\n};\n\n//TODO: REFACTOR\nexport const mapPinToEntity = (pin: LsResult): PinDto => ({\n  cid: pin.cid.toString(),\n  type: PinTypeMap[pin.type],\n});\n\nexport const mapIndexerTransactionToEntity = (\n  neuron: string,\n  tx: Transaction\n): TransactionDto => {\n  const {\n    transaction_hash,\n    index,\n    transaction: {\n      memo,\n      block: { timestamp, height },\n      success,\n    },\n    type,\n    value,\n  } = tx;\n  return {\n    hash: transaction_hash,\n    index,\n    type,\n    timestamp: dateToUtcNumber(timestamp),\n    // value: JSON.stringify(value),\n    memo,\n    value,\n    success,\n    neuron,\n    blockHeight: height,\n  };\n};\n\n// export const mapSyncStatusToEntity = (\n//   id: NeuronAddress | ParticleCid,\n//   entryType: EntryType,\n//   unreadCount: number,\n//   timestampUpdate: number,\n//   lastId: TransactionHash | ParticleCid = '',\n//   timestampRead: number = timestampUpdate,\n//   meta: Object = {}\n// ): SyncStatusDbEntity => {\n//   return {\n//     entry_type: entryType,\n//     id,\n//     timestamp_update: timestampUpdate,\n//     timestamp_read: timestampRead,\n//     unread_count: unreadCount,\n//     disabled: false,\n//     last_id: lastId,\n//     meta,\n//   };\n// };\n\nexport const mapLinkToLinkDto = (\n  from: ParticleCid,\n  to: ParticleCid,\n  neuron: NeuronAddress = '',\n  timestamp: number = 0\n): LinkDto => ({\n  from,\n  to,\n  neuron,\n  timestamp,\n});\n\nexport const mapLinkFromIndexerToDto = ({\n  from,\n  to,\n  neuron,\n  timestamp,\n  transaction_hash,\n}: CyberlinksByParticleQuery['cyberlinks'][0]): LinkDto => ({\n  from,\n  to,\n  neuron,\n  timestamp: dateToUtcNumber(timestamp),\n  transactionHash: transaction_hash,\n});\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };\nexport type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };\nconst defaultOptions = {} as const;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string; output: string; }\n  String: { input: string; output: string; }\n  Boolean: { input: boolean; output: boolean; }\n  Int: { input: number; output: number; }\n  Float: { input: number; output: number; }\n  _text: { input: any; output: any; }\n  bigint: { input: any; output: any; }\n  coin: { input: any; output: any; }\n  coin_scalar: { input: any; output: any; }\n  date: { input: any; output: any; }\n  float8: { input: any; output: any; }\n  json: { input: any; output: any; }\n  jsonb: { input: any; output: any; }\n  numeric: { input: any; output: any; }\n  timestamp: { input: any; output: any; }\n};\n\n/** Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'. */\nexport type Boolean_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Boolean']['input']>;\n  _gt?: InputMaybe<Scalars['Boolean']['input']>;\n  _gte?: InputMaybe<Scalars['Boolean']['input']>;\n  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['Boolean']['input']>;\n  _lte?: InputMaybe<Scalars['Boolean']['input']>;\n  _neq?: InputMaybe<Scalars['Boolean']['input']>;\n  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']['input']>;\n  _gt?: InputMaybe<Scalars['Int']['input']>;\n  _gte?: InputMaybe<Scalars['Int']['input']>;\n  _in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['Int']['input']>;\n  _lte?: InputMaybe<Scalars['Int']['input']>;\n  _neq?: InputMaybe<Scalars['Int']['input']>;\n  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Array_Comparison_Exp = {\n  /** is the array contained in the given array value */\n  _contained_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** does the array contain the given value */\n  _contains?: InputMaybe<Array<Scalars['String']['input']>>;\n  _eq?: InputMaybe<Array<Scalars['String']['input']>>;\n  _gt?: InputMaybe<Array<Scalars['String']['input']>>;\n  _gte?: InputMaybe<Array<Scalars['String']['input']>>;\n  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Array<Scalars['String']['input']>>;\n  _lte?: InputMaybe<Array<Scalars['String']['input']>>;\n  _neq?: InputMaybe<Array<Scalars['String']['input']>>;\n  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']['input']>;\n  _gt?: InputMaybe<Scalars['String']['input']>;\n  _gte?: InputMaybe<Scalars['String']['input']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']['input']>;\n  _in?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']['input']>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']['input']>;\n  _lt?: InputMaybe<Scalars['String']['input']>;\n  _lte?: InputMaybe<Scalars['String']['input']>;\n  _neq?: InputMaybe<Scalars['String']['input']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']['input']>;\n  _nin?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']['input']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']['input']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']['input']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']['input']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']['input']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"_transaction\" */\nexport type _Transaction = {\n  fee?: Maybe<Scalars['jsonb']['output']>;\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  logs?: Maybe<Scalars['jsonb']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  messages?: Maybe<Scalars['json']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n  signer_infos?: Maybe<Scalars['jsonb']['output']>;\n  subject1?: Maybe<Scalars['String']['output']>;\n  subject2?: Maybe<Scalars['String']['output']>;\n  success?: Maybe<Scalars['Boolean']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  value?: Maybe<Scalars['json']['output']>;\n};\n\n\n/** columns and relationships of \"_transaction\" */\nexport type _TransactionFeeArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"_transaction\" */\nexport type _TransactionLogsArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"_transaction\" */\nexport type _TransactionMessagesArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"_transaction\" */\nexport type _TransactionSigner_InfosArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"_transaction\" */\nexport type _TransactionValueArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregated selection of \"_transaction\" */\nexport type _Transaction_Aggregate = {\n  aggregate?: Maybe<_Transaction_Aggregate_Fields>;\n  nodes: Array<_Transaction>;\n};\n\n/** aggregate fields of \"_transaction\" */\nexport type _Transaction_Aggregate_Fields = {\n  avg?: Maybe<_Transaction_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<_Transaction_Max_Fields>;\n  min?: Maybe<_Transaction_Min_Fields>;\n  stddev?: Maybe<_Transaction_Stddev_Fields>;\n  stddev_pop?: Maybe<_Transaction_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<_Transaction_Stddev_Samp_Fields>;\n  sum?: Maybe<_Transaction_Sum_Fields>;\n  var_pop?: Maybe<_Transaction_Var_Pop_Fields>;\n  var_samp?: Maybe<_Transaction_Var_Samp_Fields>;\n  variance?: Maybe<_Transaction_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"_transaction\" */\nexport type _Transaction_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<_Transaction_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type _Transaction_Avg_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"_transaction\". All fields are combined with a logical 'AND'. */\nexport type _Transaction_Bool_Exp = {\n  _and?: InputMaybe<Array<_Transaction_Bool_Exp>>;\n  _not?: InputMaybe<_Transaction_Bool_Exp>;\n  _or?: InputMaybe<Array<_Transaction_Bool_Exp>>;\n  fee?: InputMaybe<Jsonb_Comparison_Exp>;\n  gas_used?: InputMaybe<Bigint_Comparison_Exp>;\n  gas_wanted?: InputMaybe<Bigint_Comparison_Exp>;\n  hash?: InputMaybe<String_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  index?: InputMaybe<Bigint_Comparison_Exp>;\n  involved_accounts_addresses?: InputMaybe<String_Array_Comparison_Exp>;\n  logs?: InputMaybe<Jsonb_Comparison_Exp>;\n  memo?: InputMaybe<String_Comparison_Exp>;\n  messages?: InputMaybe<Json_Comparison_Exp>;\n  partition_id?: InputMaybe<Bigint_Comparison_Exp>;\n  raw_log?: InputMaybe<String_Comparison_Exp>;\n  signatures?: InputMaybe<String_Array_Comparison_Exp>;\n  signer_infos?: InputMaybe<Jsonb_Comparison_Exp>;\n  subject1?: InputMaybe<String_Comparison_Exp>;\n  subject2?: InputMaybe<String_Comparison_Exp>;\n  success?: InputMaybe<Boolean_Comparison_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n  value?: InputMaybe<Json_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type _Transaction_Max_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n  subject1?: Maybe<Scalars['String']['output']>;\n  subject2?: Maybe<Scalars['String']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type _Transaction_Min_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n  subject1?: Maybe<Scalars['String']['output']>;\n  subject2?: Maybe<Scalars['String']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"_transaction\". */\nexport type _Transaction_Order_By = {\n  fee?: InputMaybe<Order_By>;\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  logs?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  messages?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n  signer_infos?: InputMaybe<Order_By>;\n  subject1?: InputMaybe<Order_By>;\n  subject2?: InputMaybe<Order_By>;\n  success?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"_transaction\" */\nexport enum _Transaction_Select_Column {\n  /** column name */\n  Fee = 'fee',\n  /** column name */\n  GasUsed = 'gas_used',\n  /** column name */\n  GasWanted = 'gas_wanted',\n  /** column name */\n  Hash = 'hash',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Index = 'index',\n  /** column name */\n  InvolvedAccountsAddresses = 'involved_accounts_addresses',\n  /** column name */\n  Logs = 'logs',\n  /** column name */\n  Memo = 'memo',\n  /** column name */\n  Messages = 'messages',\n  /** column name */\n  PartitionId = 'partition_id',\n  /** column name */\n  RawLog = 'raw_log',\n  /** column name */\n  Signatures = 'signatures',\n  /** column name */\n  SignerInfos = 'signer_infos',\n  /** column name */\n  Subject1 = 'subject1',\n  /** column name */\n  Subject2 = 'subject2',\n  /** column name */\n  Success = 'success',\n  /** column name */\n  TransactionHash = 'transaction_hash',\n  /** column name */\n  Type = 'type',\n  /** column name */\n  Value = 'value'\n}\n\n/** aggregate stddev on columns */\nexport type _Transaction_Stddev_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type _Transaction_Stddev_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type _Transaction_Stddev_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"_transaction\" */\nexport type _Transaction_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: _Transaction_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type _Transaction_Stream_Cursor_Value_Input = {\n  fee?: InputMaybe<Scalars['jsonb']['input']>;\n  gas_used?: InputMaybe<Scalars['bigint']['input']>;\n  gas_wanted?: InputMaybe<Scalars['bigint']['input']>;\n  hash?: InputMaybe<Scalars['String']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  index?: InputMaybe<Scalars['bigint']['input']>;\n  involved_accounts_addresses?: InputMaybe<Array<Scalars['String']['input']>>;\n  logs?: InputMaybe<Scalars['jsonb']['input']>;\n  memo?: InputMaybe<Scalars['String']['input']>;\n  messages?: InputMaybe<Scalars['json']['input']>;\n  partition_id?: InputMaybe<Scalars['bigint']['input']>;\n  raw_log?: InputMaybe<Scalars['String']['input']>;\n  signatures?: InputMaybe<Array<Scalars['String']['input']>>;\n  signer_infos?: InputMaybe<Scalars['jsonb']['input']>;\n  subject1?: InputMaybe<Scalars['String']['input']>;\n  subject2?: InputMaybe<Scalars['String']['input']>;\n  success?: InputMaybe<Scalars['Boolean']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  value?: InputMaybe<Scalars['json']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type _Transaction_Sum_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type _Transaction_Var_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type _Transaction_Var_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type _Transaction_Variance_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"_uptime_temp\" */\nexport type _Uptime_Temp = {\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  validator_address?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"_uptime_temp\" */\nexport type _Uptime_Temp_Aggregate = {\n  aggregate?: Maybe<_Uptime_Temp_Aggregate_Fields>;\n  nodes: Array<_Uptime_Temp>;\n};\n\n/** aggregate fields of \"_uptime_temp\" */\nexport type _Uptime_Temp_Aggregate_Fields = {\n  avg?: Maybe<_Uptime_Temp_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<_Uptime_Temp_Max_Fields>;\n  min?: Maybe<_Uptime_Temp_Min_Fields>;\n  stddev?: Maybe<_Uptime_Temp_Stddev_Fields>;\n  stddev_pop?: Maybe<_Uptime_Temp_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<_Uptime_Temp_Stddev_Samp_Fields>;\n  sum?: Maybe<_Uptime_Temp_Sum_Fields>;\n  var_pop?: Maybe<_Uptime_Temp_Var_Pop_Fields>;\n  var_samp?: Maybe<_Uptime_Temp_Var_Samp_Fields>;\n  variance?: Maybe<_Uptime_Temp_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"_uptime_temp\" */\nexport type _Uptime_Temp_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<_Uptime_Temp_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type _Uptime_Temp_Avg_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"_uptime_temp\". All fields are combined with a logical 'AND'. */\nexport type _Uptime_Temp_Bool_Exp = {\n  _and?: InputMaybe<Array<_Uptime_Temp_Bool_Exp>>;\n  _not?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n  _or?: InputMaybe<Array<_Uptime_Temp_Bool_Exp>>;\n  pre_commits?: InputMaybe<Bigint_Comparison_Exp>;\n  validator_address?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type _Uptime_Temp_Max_Fields = {\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  validator_address?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type _Uptime_Temp_Min_Fields = {\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  validator_address?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"_uptime_temp\". */\nexport type _Uptime_Temp_Order_By = {\n  pre_commits?: InputMaybe<Order_By>;\n  validator_address?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"_uptime_temp\" */\nexport enum _Uptime_Temp_Select_Column {\n  /** column name */\n  PreCommits = 'pre_commits',\n  /** column name */\n  ValidatorAddress = 'validator_address'\n}\n\n/** aggregate stddev on columns */\nexport type _Uptime_Temp_Stddev_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type _Uptime_Temp_Stddev_Pop_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type _Uptime_Temp_Stddev_Samp_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"_uptime_temp\" */\nexport type _Uptime_Temp_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: _Uptime_Temp_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type _Uptime_Temp_Stream_Cursor_Value_Input = {\n  pre_commits?: InputMaybe<Scalars['bigint']['input']>;\n  validator_address?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type _Uptime_Temp_Sum_Fields = {\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type _Uptime_Temp_Var_Pop_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type _Uptime_Temp_Var_Samp_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type _Uptime_Temp_Variance_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"account\" */\nexport type Account = {\n  /** An object relationship */\n  account_balance?: Maybe<Account_Balance>;\n  address: Scalars['String']['output'];\n  /** An array relationship */\n  cyberlinks: Array<Cyberlinks>;\n  /** An aggregate relationship */\n  cyberlinks_aggregate: Cyberlinks_Aggregate;\n  /** An array relationship */\n  investmints: Array<Investmints>;\n  /** An aggregate relationship */\n  investmints_aggregate: Investmints_Aggregate;\n  /** An array relationship */\n  particles: Array<Particles>;\n  /** An aggregate relationship */\n  particles_aggregate: Particles_Aggregate;\n  /** An array relationship */\n  routes: Array<Routes>;\n  /** An array relationship */\n  routesBySource: Array<Routes>;\n  /** An aggregate relationship */\n  routesBySource_aggregate: Routes_Aggregate;\n  /** An aggregate relationship */\n  routes_aggregate: Routes_Aggregate;\n  /** An array relationship */\n  vesting_accounts: Array<Vesting_Account>;\n  /** An aggregate relationship */\n  vesting_accounts_aggregate: Vesting_Account_Aggregate;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountCyberlinksArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountCyberlinks_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountInvestmintsArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountInvestmints_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountParticlesArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountParticles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountRoutesArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountRoutesBySourceArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountRoutesBySource_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountRoutes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountVesting_AccountsArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"account\" */\nexport type AccountVesting_Accounts_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n/** aggregated selection of \"account\" */\nexport type Account_Aggregate = {\n  aggregate?: Maybe<Account_Aggregate_Fields>;\n  nodes: Array<Account>;\n};\n\n/** aggregate fields of \"account\" */\nexport type Account_Aggregate_Fields = {\n  count: Scalars['Int']['output'];\n  max?: Maybe<Account_Max_Fields>;\n  min?: Maybe<Account_Min_Fields>;\n};\n\n\n/** aggregate fields of \"account\" */\nexport type Account_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Account_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** columns and relationships of \"account_balance\" */\nexport type Account_Balance = {\n  /** An object relationship */\n  account: Account;\n  address: Scalars['String']['output'];\n  coins: Array<Scalars['coin']['output']>;\n  height: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"account_balance\" */\nexport type Account_Balance_Aggregate = {\n  aggregate?: Maybe<Account_Balance_Aggregate_Fields>;\n  nodes: Array<Account_Balance>;\n};\n\n/** aggregate fields of \"account_balance\" */\nexport type Account_Balance_Aggregate_Fields = {\n  avg?: Maybe<Account_Balance_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Account_Balance_Max_Fields>;\n  min?: Maybe<Account_Balance_Min_Fields>;\n  stddev?: Maybe<Account_Balance_Stddev_Fields>;\n  stddev_pop?: Maybe<Account_Balance_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Account_Balance_Stddev_Samp_Fields>;\n  sum?: Maybe<Account_Balance_Sum_Fields>;\n  var_pop?: Maybe<Account_Balance_Var_Pop_Fields>;\n  var_samp?: Maybe<Account_Balance_Var_Samp_Fields>;\n  variance?: Maybe<Account_Balance_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"account_balance\" */\nexport type Account_Balance_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Account_Balance_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Account_Balance_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"account_balance\". All fields are combined with a logical 'AND'. */\nexport type Account_Balance_Bool_Exp = {\n  _and?: InputMaybe<Array<Account_Balance_Bool_Exp>>;\n  _not?: InputMaybe<Account_Balance_Bool_Exp>;\n  _or?: InputMaybe<Array<Account_Balance_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  coins?: InputMaybe<Coin_Array_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Account_Balance_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  coins?: Maybe<Array<Scalars['coin']['output']>>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Account_Balance_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  coins?: Maybe<Array<Scalars['coin']['output']>>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"account_balance\". */\nexport type Account_Balance_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  address?: InputMaybe<Order_By>;\n  coins?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"account_balance\" */\nexport enum Account_Balance_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  Coins = 'coins',\n  /** column name */\n  Height = 'height'\n}\n\n/** aggregate stddev on columns */\nexport type Account_Balance_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Account_Balance_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Account_Balance_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"account_balance\" */\nexport type Account_Balance_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Account_Balance_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Account_Balance_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  coins?: InputMaybe<Array<Scalars['coin']['input']>>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Account_Balance_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Account_Balance_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Account_Balance_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Account_Balance_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"account\". All fields are combined with a logical 'AND'. */\nexport type Account_Bool_Exp = {\n  _and?: InputMaybe<Array<Account_Bool_Exp>>;\n  _not?: InputMaybe<Account_Bool_Exp>;\n  _or?: InputMaybe<Array<Account_Bool_Exp>>;\n  account_balance?: InputMaybe<Account_Balance_Bool_Exp>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  cyberlinks?: InputMaybe<Cyberlinks_Bool_Exp>;\n  cyberlinks_aggregate?: InputMaybe<Cyberlinks_Aggregate_Bool_Exp>;\n  investmints?: InputMaybe<Investmints_Bool_Exp>;\n  investmints_aggregate?: InputMaybe<Investmints_Aggregate_Bool_Exp>;\n  particles?: InputMaybe<Particles_Bool_Exp>;\n  particles_aggregate?: InputMaybe<Particles_Aggregate_Bool_Exp>;\n  routes?: InputMaybe<Routes_Bool_Exp>;\n  routesBySource?: InputMaybe<Routes_Bool_Exp>;\n  routesBySource_aggregate?: InputMaybe<Routes_Aggregate_Bool_Exp>;\n  routes_aggregate?: InputMaybe<Routes_Aggregate_Bool_Exp>;\n  vesting_accounts?: InputMaybe<Vesting_Account_Bool_Exp>;\n  vesting_accounts_aggregate?: InputMaybe<Vesting_Account_Aggregate_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Account_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Account_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"account\". */\nexport type Account_Order_By = {\n  account_balance?: InputMaybe<Account_Balance_Order_By>;\n  address?: InputMaybe<Order_By>;\n  cyberlinks_aggregate?: InputMaybe<Cyberlinks_Aggregate_Order_By>;\n  investmints_aggregate?: InputMaybe<Investmints_Aggregate_Order_By>;\n  particles_aggregate?: InputMaybe<Particles_Aggregate_Order_By>;\n  routesBySource_aggregate?: InputMaybe<Routes_Aggregate_Order_By>;\n  routes_aggregate?: InputMaybe<Routes_Aggregate_Order_By>;\n  vesting_accounts_aggregate?: InputMaybe<Vesting_Account_Aggregate_Order_By>;\n};\n\n/** select columns of table \"account\" */\nexport enum Account_Select_Column {\n  /** column name */\n  Address = 'address'\n}\n\n/** Streaming cursor of the table \"account\" */\nexport type Account_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Account_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Account_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"average_block_time_from_genesis\" */\nexport type Average_Block_Time_From_Genesis = {\n  average_time: Scalars['numeric']['output'];\n  height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n};\n\n/** aggregated selection of \"average_block_time_from_genesis\" */\nexport type Average_Block_Time_From_Genesis_Aggregate = {\n  aggregate?: Maybe<Average_Block_Time_From_Genesis_Aggregate_Fields>;\n  nodes: Array<Average_Block_Time_From_Genesis>;\n};\n\n/** aggregate fields of \"average_block_time_from_genesis\" */\nexport type Average_Block_Time_From_Genesis_Aggregate_Fields = {\n  avg?: Maybe<Average_Block_Time_From_Genesis_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Average_Block_Time_From_Genesis_Max_Fields>;\n  min?: Maybe<Average_Block_Time_From_Genesis_Min_Fields>;\n  stddev?: Maybe<Average_Block_Time_From_Genesis_Stddev_Fields>;\n  stddev_pop?: Maybe<Average_Block_Time_From_Genesis_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Average_Block_Time_From_Genesis_Stddev_Samp_Fields>;\n  sum?: Maybe<Average_Block_Time_From_Genesis_Sum_Fields>;\n  var_pop?: Maybe<Average_Block_Time_From_Genesis_Var_Pop_Fields>;\n  var_samp?: Maybe<Average_Block_Time_From_Genesis_Var_Samp_Fields>;\n  variance?: Maybe<Average_Block_Time_From_Genesis_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"average_block_time_from_genesis\" */\nexport type Average_Block_Time_From_Genesis_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Average_Block_Time_From_Genesis_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Average_Block_Time_From_Genesis_Avg_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"average_block_time_from_genesis\". All fields are combined with a logical 'AND'. */\nexport type Average_Block_Time_From_Genesis_Bool_Exp = {\n  _and?: InputMaybe<Array<Average_Block_Time_From_Genesis_Bool_Exp>>;\n  _not?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n  _or?: InputMaybe<Array<Average_Block_Time_From_Genesis_Bool_Exp>>;\n  average_time?: InputMaybe<Numeric_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Average_Block_Time_From_Genesis_Max_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Average_Block_Time_From_Genesis_Min_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"average_block_time_from_genesis\". */\nexport type Average_Block_Time_From_Genesis_Order_By = {\n  average_time?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"average_block_time_from_genesis\" */\nexport enum Average_Block_Time_From_Genesis_Select_Column {\n  /** column name */\n  AverageTime = 'average_time',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  OneRowId = 'one_row_id'\n}\n\n/** aggregate stddev on columns */\nexport type Average_Block_Time_From_Genesis_Stddev_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Average_Block_Time_From_Genesis_Stddev_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Average_Block_Time_From_Genesis_Stddev_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"average_block_time_from_genesis\" */\nexport type Average_Block_Time_From_Genesis_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Average_Block_Time_From_Genesis_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Average_Block_Time_From_Genesis_Stream_Cursor_Value_Input = {\n  average_time?: InputMaybe<Scalars['numeric']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Average_Block_Time_From_Genesis_Sum_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Average_Block_Time_From_Genesis_Var_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Average_Block_Time_From_Genesis_Var_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Average_Block_Time_From_Genesis_Variance_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"average_block_time_per_day\" */\nexport type Average_Block_Time_Per_Day = {\n  average_time: Scalars['numeric']['output'];\n  height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n};\n\n/** aggregated selection of \"average_block_time_per_day\" */\nexport type Average_Block_Time_Per_Day_Aggregate = {\n  aggregate?: Maybe<Average_Block_Time_Per_Day_Aggregate_Fields>;\n  nodes: Array<Average_Block_Time_Per_Day>;\n};\n\n/** aggregate fields of \"average_block_time_per_day\" */\nexport type Average_Block_Time_Per_Day_Aggregate_Fields = {\n  avg?: Maybe<Average_Block_Time_Per_Day_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Average_Block_Time_Per_Day_Max_Fields>;\n  min?: Maybe<Average_Block_Time_Per_Day_Min_Fields>;\n  stddev?: Maybe<Average_Block_Time_Per_Day_Stddev_Fields>;\n  stddev_pop?: Maybe<Average_Block_Time_Per_Day_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Average_Block_Time_Per_Day_Stddev_Samp_Fields>;\n  sum?: Maybe<Average_Block_Time_Per_Day_Sum_Fields>;\n  var_pop?: Maybe<Average_Block_Time_Per_Day_Var_Pop_Fields>;\n  var_samp?: Maybe<Average_Block_Time_Per_Day_Var_Samp_Fields>;\n  variance?: Maybe<Average_Block_Time_Per_Day_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"average_block_time_per_day\" */\nexport type Average_Block_Time_Per_Day_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Average_Block_Time_Per_Day_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Average_Block_Time_Per_Day_Avg_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"average_block_time_per_day\". All fields are combined with a logical 'AND'. */\nexport type Average_Block_Time_Per_Day_Bool_Exp = {\n  _and?: InputMaybe<Array<Average_Block_Time_Per_Day_Bool_Exp>>;\n  _not?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n  _or?: InputMaybe<Array<Average_Block_Time_Per_Day_Bool_Exp>>;\n  average_time?: InputMaybe<Numeric_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Average_Block_Time_Per_Day_Max_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Average_Block_Time_Per_Day_Min_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"average_block_time_per_day\". */\nexport type Average_Block_Time_Per_Day_Order_By = {\n  average_time?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"average_block_time_per_day\" */\nexport enum Average_Block_Time_Per_Day_Select_Column {\n  /** column name */\n  AverageTime = 'average_time',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  OneRowId = 'one_row_id'\n}\n\n/** aggregate stddev on columns */\nexport type Average_Block_Time_Per_Day_Stddev_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Average_Block_Time_Per_Day_Stddev_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Average_Block_Time_Per_Day_Stddev_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"average_block_time_per_day\" */\nexport type Average_Block_Time_Per_Day_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Average_Block_Time_Per_Day_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Average_Block_Time_Per_Day_Stream_Cursor_Value_Input = {\n  average_time?: InputMaybe<Scalars['numeric']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Average_Block_Time_Per_Day_Sum_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Average_Block_Time_Per_Day_Var_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Average_Block_Time_Per_Day_Var_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Average_Block_Time_Per_Day_Variance_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"average_block_time_per_hour\" */\nexport type Average_Block_Time_Per_Hour = {\n  average_time: Scalars['numeric']['output'];\n  height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n};\n\n/** aggregated selection of \"average_block_time_per_hour\" */\nexport type Average_Block_Time_Per_Hour_Aggregate = {\n  aggregate?: Maybe<Average_Block_Time_Per_Hour_Aggregate_Fields>;\n  nodes: Array<Average_Block_Time_Per_Hour>;\n};\n\n/** aggregate fields of \"average_block_time_per_hour\" */\nexport type Average_Block_Time_Per_Hour_Aggregate_Fields = {\n  avg?: Maybe<Average_Block_Time_Per_Hour_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Average_Block_Time_Per_Hour_Max_Fields>;\n  min?: Maybe<Average_Block_Time_Per_Hour_Min_Fields>;\n  stddev?: Maybe<Average_Block_Time_Per_Hour_Stddev_Fields>;\n  stddev_pop?: Maybe<Average_Block_Time_Per_Hour_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Average_Block_Time_Per_Hour_Stddev_Samp_Fields>;\n  sum?: Maybe<Average_Block_Time_Per_Hour_Sum_Fields>;\n  var_pop?: Maybe<Average_Block_Time_Per_Hour_Var_Pop_Fields>;\n  var_samp?: Maybe<Average_Block_Time_Per_Hour_Var_Samp_Fields>;\n  variance?: Maybe<Average_Block_Time_Per_Hour_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"average_block_time_per_hour\" */\nexport type Average_Block_Time_Per_Hour_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Average_Block_Time_Per_Hour_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Average_Block_Time_Per_Hour_Avg_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"average_block_time_per_hour\". All fields are combined with a logical 'AND'. */\nexport type Average_Block_Time_Per_Hour_Bool_Exp = {\n  _and?: InputMaybe<Array<Average_Block_Time_Per_Hour_Bool_Exp>>;\n  _not?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n  _or?: InputMaybe<Array<Average_Block_Time_Per_Hour_Bool_Exp>>;\n  average_time?: InputMaybe<Numeric_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Average_Block_Time_Per_Hour_Max_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Average_Block_Time_Per_Hour_Min_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"average_block_time_per_hour\". */\nexport type Average_Block_Time_Per_Hour_Order_By = {\n  average_time?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"average_block_time_per_hour\" */\nexport enum Average_Block_Time_Per_Hour_Select_Column {\n  /** column name */\n  AverageTime = 'average_time',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  OneRowId = 'one_row_id'\n}\n\n/** aggregate stddev on columns */\nexport type Average_Block_Time_Per_Hour_Stddev_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Average_Block_Time_Per_Hour_Stddev_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Average_Block_Time_Per_Hour_Stddev_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"average_block_time_per_hour\" */\nexport type Average_Block_Time_Per_Hour_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Average_Block_Time_Per_Hour_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Average_Block_Time_Per_Hour_Stream_Cursor_Value_Input = {\n  average_time?: InputMaybe<Scalars['numeric']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Average_Block_Time_Per_Hour_Sum_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Average_Block_Time_Per_Hour_Var_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Average_Block_Time_Per_Hour_Var_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Average_Block_Time_Per_Hour_Variance_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"average_block_time_per_minute\" */\nexport type Average_Block_Time_Per_Minute = {\n  average_time: Scalars['numeric']['output'];\n  height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n};\n\n/** aggregated selection of \"average_block_time_per_minute\" */\nexport type Average_Block_Time_Per_Minute_Aggregate = {\n  aggregate?: Maybe<Average_Block_Time_Per_Minute_Aggregate_Fields>;\n  nodes: Array<Average_Block_Time_Per_Minute>;\n};\n\n/** aggregate fields of \"average_block_time_per_minute\" */\nexport type Average_Block_Time_Per_Minute_Aggregate_Fields = {\n  avg?: Maybe<Average_Block_Time_Per_Minute_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Average_Block_Time_Per_Minute_Max_Fields>;\n  min?: Maybe<Average_Block_Time_Per_Minute_Min_Fields>;\n  stddev?: Maybe<Average_Block_Time_Per_Minute_Stddev_Fields>;\n  stddev_pop?: Maybe<Average_Block_Time_Per_Minute_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Average_Block_Time_Per_Minute_Stddev_Samp_Fields>;\n  sum?: Maybe<Average_Block_Time_Per_Minute_Sum_Fields>;\n  var_pop?: Maybe<Average_Block_Time_Per_Minute_Var_Pop_Fields>;\n  var_samp?: Maybe<Average_Block_Time_Per_Minute_Var_Samp_Fields>;\n  variance?: Maybe<Average_Block_Time_Per_Minute_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"average_block_time_per_minute\" */\nexport type Average_Block_Time_Per_Minute_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Average_Block_Time_Per_Minute_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Average_Block_Time_Per_Minute_Avg_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"average_block_time_per_minute\". All fields are combined with a logical 'AND'. */\nexport type Average_Block_Time_Per_Minute_Bool_Exp = {\n  _and?: InputMaybe<Array<Average_Block_Time_Per_Minute_Bool_Exp>>;\n  _not?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n  _or?: InputMaybe<Array<Average_Block_Time_Per_Minute_Bool_Exp>>;\n  average_time?: InputMaybe<Numeric_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Average_Block_Time_Per_Minute_Max_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Average_Block_Time_Per_Minute_Min_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"average_block_time_per_minute\". */\nexport type Average_Block_Time_Per_Minute_Order_By = {\n  average_time?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"average_block_time_per_minute\" */\nexport enum Average_Block_Time_Per_Minute_Select_Column {\n  /** column name */\n  AverageTime = 'average_time',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  OneRowId = 'one_row_id'\n}\n\n/** aggregate stddev on columns */\nexport type Average_Block_Time_Per_Minute_Stddev_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Average_Block_Time_Per_Minute_Stddev_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Average_Block_Time_Per_Minute_Stddev_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"average_block_time_per_minute\" */\nexport type Average_Block_Time_Per_Minute_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Average_Block_Time_Per_Minute_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Average_Block_Time_Per_Minute_Stream_Cursor_Value_Input = {\n  average_time?: InputMaybe<Scalars['numeric']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Average_Block_Time_Per_Minute_Sum_Fields = {\n  average_time?: Maybe<Scalars['numeric']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Average_Block_Time_Per_Minute_Var_Pop_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Average_Block_Time_Per_Minute_Var_Samp_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Average_Block_Time_Per_Minute_Variance_Fields = {\n  average_time?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to compare columns of type \"bigint\". All fields are combined with logical 'AND'. */\nexport type Bigint_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['bigint']['input']>;\n  _gt?: InputMaybe<Scalars['bigint']['input']>;\n  _gte?: InputMaybe<Scalars['bigint']['input']>;\n  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['bigint']['input']>;\n  _lte?: InputMaybe<Scalars['bigint']['input']>;\n  _neq?: InputMaybe<Scalars['bigint']['input']>;\n  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;\n};\n\n/** columns and relationships of \"block\" */\nexport type Block = {\n  /** An array relationship */\n  cyberlinks: Array<Cyberlinks>;\n  /** An aggregate relationship */\n  cyberlinks_aggregate: Cyberlinks_Aggregate;\n  hash: Scalars['String']['output'];\n  height: Scalars['bigint']['output'];\n  /** An array relationship */\n  investmints: Array<Investmints>;\n  /** An aggregate relationship */\n  investmints_aggregate: Investmints_Aggregate;\n  num_txs?: Maybe<Scalars['Int']['output']>;\n  /** An array relationship */\n  particles: Array<Particles>;\n  /** An aggregate relationship */\n  particles_aggregate: Particles_Aggregate;\n  proposer_address?: Maybe<Scalars['String']['output']>;\n  /** An array relationship */\n  routes: Array<Routes>;\n  /** An aggregate relationship */\n  routes_aggregate: Routes_Aggregate;\n  /** An array relationship */\n  swaps: Array<Swaps>;\n  /** An aggregate relationship */\n  swaps_aggregate: Swaps_Aggregate;\n  timestamp: Scalars['timestamp']['output'];\n  total_gas?: Maybe<Scalars['bigint']['output']>;\n  /** An array relationship */\n  transaction_155s: Array<Transaction_155>;\n  /** An aggregate relationship */\n  transaction_155s_aggregate: Transaction_155_Aggregate;\n  /** An array relationship */\n  transactions: Array<Transaction>;\n  /** An aggregate relationship */\n  transactions_aggregate: Transaction_Aggregate;\n  /** An object relationship */\n  validator?: Maybe<Validator>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockCyberlinksArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockCyberlinks_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockInvestmintsArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockInvestmints_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockParticlesArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockParticles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockRoutesArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockRoutes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockSwapsArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockSwaps_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockTransaction_155sArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockTransaction_155s_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockTransactionsArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"block\" */\nexport type BlockTransactions_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n/** aggregated selection of \"block\" */\nexport type Block_Aggregate = {\n  aggregate?: Maybe<Block_Aggregate_Fields>;\n  nodes: Array<Block>;\n};\n\nexport type Block_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Block_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Block_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Block_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Block_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"block\" */\nexport type Block_Aggregate_Fields = {\n  avg?: Maybe<Block_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Block_Max_Fields>;\n  min?: Maybe<Block_Min_Fields>;\n  stddev?: Maybe<Block_Stddev_Fields>;\n  stddev_pop?: Maybe<Block_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Block_Stddev_Samp_Fields>;\n  sum?: Maybe<Block_Sum_Fields>;\n  var_pop?: Maybe<Block_Var_Pop_Fields>;\n  var_samp?: Maybe<Block_Var_Samp_Fields>;\n  variance?: Maybe<Block_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"block\" */\nexport type Block_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Block_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"block\" */\nexport type Block_Aggregate_Order_By = {\n  avg?: InputMaybe<Block_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Block_Max_Order_By>;\n  min?: InputMaybe<Block_Min_Order_By>;\n  stddev?: InputMaybe<Block_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Block_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Block_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Block_Sum_Order_By>;\n  var_pop?: InputMaybe<Block_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Block_Var_Samp_Order_By>;\n  variance?: InputMaybe<Block_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Block_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"block\" */\nexport type Block_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"block\". All fields are combined with a logical 'AND'. */\nexport type Block_Bool_Exp = {\n  _and?: InputMaybe<Array<Block_Bool_Exp>>;\n  _not?: InputMaybe<Block_Bool_Exp>;\n  _or?: InputMaybe<Array<Block_Bool_Exp>>;\n  cyberlinks?: InputMaybe<Cyberlinks_Bool_Exp>;\n  cyberlinks_aggregate?: InputMaybe<Cyberlinks_Aggregate_Bool_Exp>;\n  hash?: InputMaybe<String_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  investmints?: InputMaybe<Investmints_Bool_Exp>;\n  investmints_aggregate?: InputMaybe<Investmints_Aggregate_Bool_Exp>;\n  num_txs?: InputMaybe<Int_Comparison_Exp>;\n  particles?: InputMaybe<Particles_Bool_Exp>;\n  particles_aggregate?: InputMaybe<Particles_Aggregate_Bool_Exp>;\n  proposer_address?: InputMaybe<String_Comparison_Exp>;\n  routes?: InputMaybe<Routes_Bool_Exp>;\n  routes_aggregate?: InputMaybe<Routes_Aggregate_Bool_Exp>;\n  swaps?: InputMaybe<Swaps_Bool_Exp>;\n  swaps_aggregate?: InputMaybe<Swaps_Aggregate_Bool_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  total_gas?: InputMaybe<Bigint_Comparison_Exp>;\n  transaction_155s?: InputMaybe<Transaction_155_Bool_Exp>;\n  transaction_155s_aggregate?: InputMaybe<Transaction_155_Aggregate_Bool_Exp>;\n  transactions?: InputMaybe<Transaction_Bool_Exp>;\n  transactions_aggregate?: InputMaybe<Transaction_Aggregate_Bool_Exp>;\n  validator?: InputMaybe<Validator_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Block_Max_Fields = {\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  num_txs?: Maybe<Scalars['Int']['output']>;\n  proposer_address?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  total_gas?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by max() on columns of table \"block\" */\nexport type Block_Max_Order_By = {\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  proposer_address?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Block_Min_Fields = {\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  num_txs?: Maybe<Scalars['Int']['output']>;\n  proposer_address?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  total_gas?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by min() on columns of table \"block\" */\nexport type Block_Min_Order_By = {\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  proposer_address?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"block\". */\nexport type Block_Order_By = {\n  cyberlinks_aggregate?: InputMaybe<Cyberlinks_Aggregate_Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  investmints_aggregate?: InputMaybe<Investmints_Aggregate_Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  particles_aggregate?: InputMaybe<Particles_Aggregate_Order_By>;\n  proposer_address?: InputMaybe<Order_By>;\n  routes_aggregate?: InputMaybe<Routes_Aggregate_Order_By>;\n  swaps_aggregate?: InputMaybe<Swaps_Aggregate_Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n  transaction_155s_aggregate?: InputMaybe<Transaction_155_Aggregate_Order_By>;\n  transactions_aggregate?: InputMaybe<Transaction_Aggregate_Order_By>;\n  validator?: InputMaybe<Validator_Order_By>;\n};\n\n/** select columns of table \"block\" */\nexport enum Block_Select_Column {\n  /** column name */\n  Hash = 'hash',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  NumTxs = 'num_txs',\n  /** column name */\n  ProposerAddress = 'proposer_address',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  TotalGas = 'total_gas'\n}\n\n/** aggregate stddev on columns */\nexport type Block_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"block\" */\nexport type Block_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Block_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"block\" */\nexport type Block_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Block_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"block\" */\nexport type Block_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"block\" */\nexport type Block_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Block_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Block_Stream_Cursor_Value_Input = {\n  hash?: InputMaybe<Scalars['String']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  num_txs?: InputMaybe<Scalars['Int']['input']>;\n  proposer_address?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  total_gas?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Block_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  num_txs?: Maybe<Scalars['Int']['output']>;\n  total_gas?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"block\" */\nexport type Block_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Block_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"block\" */\nexport type Block_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Block_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"block\" */\nexport type Block_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Block_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  num_txs?: Maybe<Scalars['Float']['output']>;\n  total_gas?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"block\" */\nexport type Block_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  num_txs?: InputMaybe<Order_By>;\n  total_gas?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"coin\". All fields are combined with logical 'AND'. */\nexport type Coin_Array_Comparison_Exp = {\n  /** is the array contained in the given array value */\n  _contained_in?: InputMaybe<Array<Scalars['coin']['input']>>;\n  /** does the array contain the given value */\n  _contains?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _eq?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _gt?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _gte?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _in?: InputMaybe<Array<Array<Scalars['coin']['input']>>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _lte?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _neq?: InputMaybe<Array<Scalars['coin']['input']>>;\n  _nin?: InputMaybe<Array<Array<Scalars['coin']['input']>>>;\n};\n\n/** Boolean expression to compare columns of type \"coin_scalar\". All fields are combined with logical 'AND'. */\nexport type Coin_Scalar_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _gt?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _gte?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _in?: InputMaybe<Array<Scalars['coin_scalar']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _lte?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _neq?: InputMaybe<Scalars['coin_scalar']['input']>;\n  _nin?: InputMaybe<Array<Scalars['coin_scalar']['input']>>;\n};\n\n/** columns and relationships of \"contracts\" */\nexport type Contracts = {\n  address: Scalars['String']['output'];\n  admin: Scalars['String']['output'];\n  code_id: Scalars['bigint']['output'];\n  creation_time: Scalars['String']['output'];\n  creator: Scalars['String']['output'];\n  fees: Scalars['bigint']['output'];\n  gas: Scalars['bigint']['output'];\n  height: Scalars['bigint']['output'];\n  label: Scalars['String']['output'];\n  tx: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"contracts\" */\nexport type Contracts_Aggregate = {\n  aggregate?: Maybe<Contracts_Aggregate_Fields>;\n  nodes: Array<Contracts>;\n};\n\n/** aggregate fields of \"contracts\" */\nexport type Contracts_Aggregate_Fields = {\n  avg?: Maybe<Contracts_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Contracts_Max_Fields>;\n  min?: Maybe<Contracts_Min_Fields>;\n  stddev?: Maybe<Contracts_Stddev_Fields>;\n  stddev_pop?: Maybe<Contracts_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Contracts_Stddev_Samp_Fields>;\n  sum?: Maybe<Contracts_Sum_Fields>;\n  var_pop?: Maybe<Contracts_Var_Pop_Fields>;\n  var_samp?: Maybe<Contracts_Var_Samp_Fields>;\n  variance?: Maybe<Contracts_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"contracts\" */\nexport type Contracts_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Contracts_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Contracts_Avg_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"contracts\". All fields are combined with a logical 'AND'. */\nexport type Contracts_Bool_Exp = {\n  _and?: InputMaybe<Array<Contracts_Bool_Exp>>;\n  _not?: InputMaybe<Contracts_Bool_Exp>;\n  _or?: InputMaybe<Array<Contracts_Bool_Exp>>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  admin?: InputMaybe<String_Comparison_Exp>;\n  code_id?: InputMaybe<Bigint_Comparison_Exp>;\n  creation_time?: InputMaybe<String_Comparison_Exp>;\n  creator?: InputMaybe<String_Comparison_Exp>;\n  fees?: InputMaybe<Bigint_Comparison_Exp>;\n  gas?: InputMaybe<Bigint_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  label?: InputMaybe<String_Comparison_Exp>;\n  tx?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Contracts_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  admin?: Maybe<Scalars['String']['output']>;\n  code_id?: Maybe<Scalars['bigint']['output']>;\n  creation_time?: Maybe<Scalars['String']['output']>;\n  creator?: Maybe<Scalars['String']['output']>;\n  fees?: Maybe<Scalars['bigint']['output']>;\n  gas?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  label?: Maybe<Scalars['String']['output']>;\n  tx?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Contracts_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  admin?: Maybe<Scalars['String']['output']>;\n  code_id?: Maybe<Scalars['bigint']['output']>;\n  creation_time?: Maybe<Scalars['String']['output']>;\n  creator?: Maybe<Scalars['String']['output']>;\n  fees?: Maybe<Scalars['bigint']['output']>;\n  gas?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  label?: Maybe<Scalars['String']['output']>;\n  tx?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"contracts\". */\nexport type Contracts_Order_By = {\n  address?: InputMaybe<Order_By>;\n  admin?: InputMaybe<Order_By>;\n  code_id?: InputMaybe<Order_By>;\n  creation_time?: InputMaybe<Order_By>;\n  creator?: InputMaybe<Order_By>;\n  fees?: InputMaybe<Order_By>;\n  gas?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  label?: InputMaybe<Order_By>;\n  tx?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"contracts\" */\nexport enum Contracts_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  Admin = 'admin',\n  /** column name */\n  CodeId = 'code_id',\n  /** column name */\n  CreationTime = 'creation_time',\n  /** column name */\n  Creator = 'creator',\n  /** column name */\n  Fees = 'fees',\n  /** column name */\n  Gas = 'gas',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Tx = 'tx'\n}\n\n/** aggregate stddev on columns */\nexport type Contracts_Stddev_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Contracts_Stddev_Pop_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Contracts_Stddev_Samp_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"contracts\" */\nexport type Contracts_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Contracts_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Contracts_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  admin?: InputMaybe<Scalars['String']['input']>;\n  code_id?: InputMaybe<Scalars['bigint']['input']>;\n  creation_time?: InputMaybe<Scalars['String']['input']>;\n  creator?: InputMaybe<Scalars['String']['input']>;\n  fees?: InputMaybe<Scalars['bigint']['input']>;\n  gas?: InputMaybe<Scalars['bigint']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  label?: InputMaybe<Scalars['String']['input']>;\n  tx?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Contracts_Sum_Fields = {\n  code_id?: Maybe<Scalars['bigint']['output']>;\n  fees?: Maybe<Scalars['bigint']['output']>;\n  gas?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  tx?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Contracts_Var_Pop_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Contracts_Var_Samp_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Contracts_Variance_Fields = {\n  code_id?: Maybe<Scalars['Float']['output']>;\n  fees?: Maybe<Scalars['Float']['output']>;\n  gas?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  tx?: Maybe<Scalars['Float']['output']>;\n};\n\n/** ordering argument of a cursor */\nexport enum Cursor_Ordering {\n  /** ascending ordering of the cursor */\n  Asc = 'ASC',\n  /** descending ordering of the cursor */\n  Desc = 'DESC'\n}\n\n/** columns and relationships of \"cyb_cohort\" */\nexport type Cyb_Cohort = {\n  cyberlink_10_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_percent?: Maybe<Scalars['float8']['output']>;\n  hero_hired_percent?: Maybe<Scalars['float8']['output']>;\n  investmint_percent?: Maybe<Scalars['float8']['output']>;\n  neurons_activated?: Maybe<Scalars['bigint']['output']>;\n  redelegation_percent?: Maybe<Scalars['float8']['output']>;\n  swap_percent?: Maybe<Scalars['float8']['output']>;\n  undelegation_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"cyb_cohort\" */\nexport type Cyb_Cohort_Aggregate = {\n  aggregate?: Maybe<Cyb_Cohort_Aggregate_Fields>;\n  nodes: Array<Cyb_Cohort>;\n};\n\n/** aggregate fields of \"cyb_cohort\" */\nexport type Cyb_Cohort_Aggregate_Fields = {\n  avg?: Maybe<Cyb_Cohort_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Cyb_Cohort_Max_Fields>;\n  min?: Maybe<Cyb_Cohort_Min_Fields>;\n  stddev?: Maybe<Cyb_Cohort_Stddev_Fields>;\n  stddev_pop?: Maybe<Cyb_Cohort_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Cyb_Cohort_Stddev_Samp_Fields>;\n  sum?: Maybe<Cyb_Cohort_Sum_Fields>;\n  var_pop?: Maybe<Cyb_Cohort_Var_Pop_Fields>;\n  var_samp?: Maybe<Cyb_Cohort_Var_Samp_Fields>;\n  variance?: Maybe<Cyb_Cohort_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"cyb_cohort\" */\nexport type Cyb_Cohort_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Cyb_Cohort_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Cyb_Cohort_Avg_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"cyb_cohort\". All fields are combined with a logical 'AND'. */\nexport type Cyb_Cohort_Bool_Exp = {\n  _and?: InputMaybe<Array<Cyb_Cohort_Bool_Exp>>;\n  _not?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n  _or?: InputMaybe<Array<Cyb_Cohort_Bool_Exp>>;\n  cyberlink_10_percent?: InputMaybe<Float8_Comparison_Exp>;\n  cyberlink_100_percent?: InputMaybe<Float8_Comparison_Exp>;\n  cyberlink_percent?: InputMaybe<Float8_Comparison_Exp>;\n  hero_hired_percent?: InputMaybe<Float8_Comparison_Exp>;\n  investmint_percent?: InputMaybe<Float8_Comparison_Exp>;\n  neurons_activated?: InputMaybe<Bigint_Comparison_Exp>;\n  redelegation_percent?: InputMaybe<Float8_Comparison_Exp>;\n  swap_percent?: InputMaybe<Float8_Comparison_Exp>;\n  undelegation_percent?: InputMaybe<Float8_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Cyb_Cohort_Max_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_percent?: Maybe<Scalars['float8']['output']>;\n  hero_hired_percent?: Maybe<Scalars['float8']['output']>;\n  investmint_percent?: Maybe<Scalars['float8']['output']>;\n  neurons_activated?: Maybe<Scalars['bigint']['output']>;\n  redelegation_percent?: Maybe<Scalars['float8']['output']>;\n  swap_percent?: Maybe<Scalars['float8']['output']>;\n  undelegation_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Cyb_Cohort_Min_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_percent?: Maybe<Scalars['float8']['output']>;\n  hero_hired_percent?: Maybe<Scalars['float8']['output']>;\n  investmint_percent?: Maybe<Scalars['float8']['output']>;\n  neurons_activated?: Maybe<Scalars['bigint']['output']>;\n  redelegation_percent?: Maybe<Scalars['float8']['output']>;\n  swap_percent?: Maybe<Scalars['float8']['output']>;\n  undelegation_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"cyb_cohort\". */\nexport type Cyb_Cohort_Order_By = {\n  cyberlink_10_percent?: InputMaybe<Order_By>;\n  cyberlink_100_percent?: InputMaybe<Order_By>;\n  cyberlink_percent?: InputMaybe<Order_By>;\n  hero_hired_percent?: InputMaybe<Order_By>;\n  investmint_percent?: InputMaybe<Order_By>;\n  neurons_activated?: InputMaybe<Order_By>;\n  redelegation_percent?: InputMaybe<Order_By>;\n  swap_percent?: InputMaybe<Order_By>;\n  undelegation_percent?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"cyb_cohort\" */\nexport enum Cyb_Cohort_Select_Column {\n  /** column name */\n  Cyberlink_10Percent = 'cyberlink_10_percent',\n  /** column name */\n  Cyberlink_100Percent = 'cyberlink_100_percent',\n  /** column name */\n  CyberlinkPercent = 'cyberlink_percent',\n  /** column name */\n  HeroHiredPercent = 'hero_hired_percent',\n  /** column name */\n  InvestmintPercent = 'investmint_percent',\n  /** column name */\n  NeuronsActivated = 'neurons_activated',\n  /** column name */\n  RedelegationPercent = 'redelegation_percent',\n  /** column name */\n  SwapPercent = 'swap_percent',\n  /** column name */\n  UndelegationPercent = 'undelegation_percent',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type Cyb_Cohort_Stddev_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Cyb_Cohort_Stddev_Pop_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Cyb_Cohort_Stddev_Samp_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"cyb_cohort\" */\nexport type Cyb_Cohort_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Cyb_Cohort_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Cyb_Cohort_Stream_Cursor_Value_Input = {\n  cyberlink_10_percent?: InputMaybe<Scalars['float8']['input']>;\n  cyberlink_100_percent?: InputMaybe<Scalars['float8']['input']>;\n  cyberlink_percent?: InputMaybe<Scalars['float8']['input']>;\n  hero_hired_percent?: InputMaybe<Scalars['float8']['input']>;\n  investmint_percent?: InputMaybe<Scalars['float8']['input']>;\n  neurons_activated?: InputMaybe<Scalars['bigint']['input']>;\n  redelegation_percent?: InputMaybe<Scalars['float8']['input']>;\n  swap_percent?: InputMaybe<Scalars['float8']['input']>;\n  undelegation_percent?: InputMaybe<Scalars['float8']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Cyb_Cohort_Sum_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['float8']['output']>;\n  cyberlink_percent?: Maybe<Scalars['float8']['output']>;\n  hero_hired_percent?: Maybe<Scalars['float8']['output']>;\n  investmint_percent?: Maybe<Scalars['float8']['output']>;\n  neurons_activated?: Maybe<Scalars['bigint']['output']>;\n  redelegation_percent?: Maybe<Scalars['float8']['output']>;\n  swap_percent?: Maybe<Scalars['float8']['output']>;\n  undelegation_percent?: Maybe<Scalars['float8']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Cyb_Cohort_Var_Pop_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Cyb_Cohort_Var_Samp_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Cyb_Cohort_Variance_Fields = {\n  cyberlink_10_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_100_percent?: Maybe<Scalars['Float']['output']>;\n  cyberlink_percent?: Maybe<Scalars['Float']['output']>;\n  hero_hired_percent?: Maybe<Scalars['Float']['output']>;\n  investmint_percent?: Maybe<Scalars['Float']['output']>;\n  neurons_activated?: Maybe<Scalars['Float']['output']>;\n  redelegation_percent?: Maybe<Scalars['Float']['output']>;\n  swap_percent?: Maybe<Scalars['Float']['output']>;\n  undelegation_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"cyber_gift_proofs\" */\nexport type Cyber_Gift_Proofs = {\n  address: Scalars['String']['output'];\n  amount: Scalars['bigint']['output'];\n  details: Array<Scalars['jsonb']['output']>;\n  proof: Array<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"cyber_gift_proofs\" */\nexport type Cyber_Gift_Proofs_Aggregate = {\n  aggregate?: Maybe<Cyber_Gift_Proofs_Aggregate_Fields>;\n  nodes: Array<Cyber_Gift_Proofs>;\n};\n\n/** aggregate fields of \"cyber_gift_proofs\" */\nexport type Cyber_Gift_Proofs_Aggregate_Fields = {\n  avg?: Maybe<Cyber_Gift_Proofs_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Cyber_Gift_Proofs_Max_Fields>;\n  min?: Maybe<Cyber_Gift_Proofs_Min_Fields>;\n  stddev?: Maybe<Cyber_Gift_Proofs_Stddev_Fields>;\n  stddev_pop?: Maybe<Cyber_Gift_Proofs_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Cyber_Gift_Proofs_Stddev_Samp_Fields>;\n  sum?: Maybe<Cyber_Gift_Proofs_Sum_Fields>;\n  var_pop?: Maybe<Cyber_Gift_Proofs_Var_Pop_Fields>;\n  var_samp?: Maybe<Cyber_Gift_Proofs_Var_Samp_Fields>;\n  variance?: Maybe<Cyber_Gift_Proofs_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"cyber_gift_proofs\" */\nexport type Cyber_Gift_Proofs_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Cyber_Gift_Proofs_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Cyber_Gift_Proofs_Avg_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"cyber_gift_proofs\". All fields are combined with a logical 'AND'. */\nexport type Cyber_Gift_Proofs_Bool_Exp = {\n  _and?: InputMaybe<Array<Cyber_Gift_Proofs_Bool_Exp>>;\n  _not?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n  _or?: InputMaybe<Array<Cyber_Gift_Proofs_Bool_Exp>>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  amount?: InputMaybe<Bigint_Comparison_Exp>;\n  details?: InputMaybe<Jsonb_Array_Comparison_Exp>;\n  proof?: InputMaybe<String_Array_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Cyber_Gift_Proofs_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  amount?: Maybe<Scalars['bigint']['output']>;\n  details?: Maybe<Array<Scalars['jsonb']['output']>>;\n  proof?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** aggregate min on columns */\nexport type Cyber_Gift_Proofs_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  amount?: Maybe<Scalars['bigint']['output']>;\n  details?: Maybe<Array<Scalars['jsonb']['output']>>;\n  proof?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** Ordering options when selecting data from \"cyber_gift_proofs\". */\nexport type Cyber_Gift_Proofs_Order_By = {\n  address?: InputMaybe<Order_By>;\n  amount?: InputMaybe<Order_By>;\n  details?: InputMaybe<Order_By>;\n  proof?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"cyber_gift_proofs\" */\nexport enum Cyber_Gift_Proofs_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  Amount = 'amount',\n  /** column name */\n  Details = 'details',\n  /** column name */\n  Proof = 'proof'\n}\n\n/** aggregate stddev on columns */\nexport type Cyber_Gift_Proofs_Stddev_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Cyber_Gift_Proofs_Stddev_Pop_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Cyber_Gift_Proofs_Stddev_Samp_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"cyber_gift_proofs\" */\nexport type Cyber_Gift_Proofs_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Cyber_Gift_Proofs_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Cyber_Gift_Proofs_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  amount?: InputMaybe<Scalars['bigint']['input']>;\n  details?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  proof?: InputMaybe<Array<Scalars['String']['input']>>;\n};\n\n/** aggregate sum on columns */\nexport type Cyber_Gift_Proofs_Sum_Fields = {\n  amount?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Cyber_Gift_Proofs_Var_Pop_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Cyber_Gift_Proofs_Var_Samp_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Cyber_Gift_Proofs_Variance_Fields = {\n  amount?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"cyberlinks\" */\nexport type Cyberlinks = {\n  /** An object relationship */\n  account: Account;\n  /** An object relationship */\n  block: Block;\n  height: Scalars['bigint']['output'];\n  id: Scalars['Int']['output'];\n  neuron: Scalars['String']['output'];\n  particle_from: Scalars['String']['output'];\n  particle_to: Scalars['String']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  transaction_hash: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"cyberlinks\" */\nexport type Cyberlinks_Aggregate = {\n  aggregate?: Maybe<Cyberlinks_Aggregate_Fields>;\n  nodes: Array<Cyberlinks>;\n};\n\nexport type Cyberlinks_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Cyberlinks_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Cyberlinks_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Cyberlinks_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"cyberlinks\" */\nexport type Cyberlinks_Aggregate_Fields = {\n  avg?: Maybe<Cyberlinks_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Cyberlinks_Max_Fields>;\n  min?: Maybe<Cyberlinks_Min_Fields>;\n  stddev?: Maybe<Cyberlinks_Stddev_Fields>;\n  stddev_pop?: Maybe<Cyberlinks_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Cyberlinks_Stddev_Samp_Fields>;\n  sum?: Maybe<Cyberlinks_Sum_Fields>;\n  var_pop?: Maybe<Cyberlinks_Var_Pop_Fields>;\n  var_samp?: Maybe<Cyberlinks_Var_Samp_Fields>;\n  variance?: Maybe<Cyberlinks_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"cyberlinks\" */\nexport type Cyberlinks_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"cyberlinks\" */\nexport type Cyberlinks_Aggregate_Order_By = {\n  avg?: InputMaybe<Cyberlinks_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Cyberlinks_Max_Order_By>;\n  min?: InputMaybe<Cyberlinks_Min_Order_By>;\n  stddev?: InputMaybe<Cyberlinks_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Cyberlinks_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Cyberlinks_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Cyberlinks_Sum_Order_By>;\n  var_pop?: InputMaybe<Cyberlinks_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Cyberlinks_Var_Samp_Order_By>;\n  variance?: InputMaybe<Cyberlinks_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Cyberlinks_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"cyberlinks\". All fields are combined with a logical 'AND'. */\nexport type Cyberlinks_Bool_Exp = {\n  _and?: InputMaybe<Array<Cyberlinks_Bool_Exp>>;\n  _not?: InputMaybe<Cyberlinks_Bool_Exp>;\n  _or?: InputMaybe<Array<Cyberlinks_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  neuron?: InputMaybe<String_Comparison_Exp>;\n  particle_from?: InputMaybe<String_Comparison_Exp>;\n  particle_to?: InputMaybe<String_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Cyberlinks_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  particle_from?: Maybe<Scalars['String']['output']>;\n  particle_to?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Max_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle_from?: InputMaybe<Order_By>;\n  particle_to?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Cyberlinks_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  particle_from?: Maybe<Scalars['String']['output']>;\n  particle_to?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Min_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle_from?: InputMaybe<Order_By>;\n  particle_to?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"cyberlinks\". */\nexport type Cyberlinks_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  block?: InputMaybe<Block_Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle_from?: InputMaybe<Order_By>;\n  particle_to?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"cyberlinks\" */\nexport enum Cyberlinks_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Neuron = 'neuron',\n  /** column name */\n  ParticleFrom = 'particle_from',\n  /** column name */\n  ParticleTo = 'particle_to',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  TransactionHash = 'transaction_hash'\n}\n\n/** columns and relationships of \"cyberlinks_stats\" */\nexport type Cyberlinks_Stats = {\n  cyberlinks?: Maybe<Scalars['numeric']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"cyberlinks_stats\" */\nexport type Cyberlinks_Stats_Aggregate = {\n  aggregate?: Maybe<Cyberlinks_Stats_Aggregate_Fields>;\n  nodes: Array<Cyberlinks_Stats>;\n};\n\n/** aggregate fields of \"cyberlinks_stats\" */\nexport type Cyberlinks_Stats_Aggregate_Fields = {\n  avg?: Maybe<Cyberlinks_Stats_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Cyberlinks_Stats_Max_Fields>;\n  min?: Maybe<Cyberlinks_Stats_Min_Fields>;\n  stddev?: Maybe<Cyberlinks_Stats_Stddev_Fields>;\n  stddev_pop?: Maybe<Cyberlinks_Stats_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Cyberlinks_Stats_Stddev_Samp_Fields>;\n  sum?: Maybe<Cyberlinks_Stats_Sum_Fields>;\n  var_pop?: Maybe<Cyberlinks_Stats_Var_Pop_Fields>;\n  var_samp?: Maybe<Cyberlinks_Stats_Var_Samp_Fields>;\n  variance?: Maybe<Cyberlinks_Stats_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"cyberlinks_stats\" */\nexport type Cyberlinks_Stats_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Cyberlinks_Stats_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Cyberlinks_Stats_Avg_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"cyberlinks_stats\". All fields are combined with a logical 'AND'. */\nexport type Cyberlinks_Stats_Bool_Exp = {\n  _and?: InputMaybe<Array<Cyberlinks_Stats_Bool_Exp>>;\n  _not?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n  _or?: InputMaybe<Array<Cyberlinks_Stats_Bool_Exp>>;\n  cyberlinks?: InputMaybe<Numeric_Comparison_Exp>;\n  cyberlinks_per_day?: InputMaybe<Bigint_Comparison_Exp>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Cyberlinks_Stats_Max_Fields = {\n  cyberlinks?: Maybe<Scalars['numeric']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Cyberlinks_Stats_Min_Fields = {\n  cyberlinks?: Maybe<Scalars['numeric']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"cyberlinks_stats\". */\nexport type Cyberlinks_Stats_Order_By = {\n  cyberlinks?: InputMaybe<Order_By>;\n  cyberlinks_per_day?: InputMaybe<Order_By>;\n  date?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"cyberlinks_stats\" */\nexport enum Cyberlinks_Stats_Select_Column {\n  /** column name */\n  Cyberlinks = 'cyberlinks',\n  /** column name */\n  CyberlinksPerDay = 'cyberlinks_per_day',\n  /** column name */\n  Date = 'date'\n}\n\n/** aggregate stddev on columns */\nexport type Cyberlinks_Stats_Stddev_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Cyberlinks_Stats_Stddev_Pop_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Cyberlinks_Stats_Stddev_Samp_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"cyberlinks_stats\" */\nexport type Cyberlinks_Stats_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Cyberlinks_Stats_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Cyberlinks_Stats_Stream_Cursor_Value_Input = {\n  cyberlinks?: InputMaybe<Scalars['numeric']['input']>;\n  cyberlinks_per_day?: InputMaybe<Scalars['bigint']['input']>;\n  date?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Cyberlinks_Stats_Sum_Fields = {\n  cyberlinks?: Maybe<Scalars['numeric']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Cyberlinks_Stats_Var_Pop_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Cyberlinks_Stats_Var_Samp_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Cyberlinks_Stats_Variance_Fields = {\n  cyberlinks?: Maybe<Scalars['Float']['output']>;\n  cyberlinks_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev on columns */\nexport type Cyberlinks_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Cyberlinks_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Cyberlinks_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"cyberlinks\" */\nexport type Cyberlinks_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Cyberlinks_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Cyberlinks_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n  neuron?: InputMaybe<Scalars['String']['input']>;\n  particle_from?: InputMaybe<Scalars['String']['input']>;\n  particle_to?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Cyberlinks_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** order by sum() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Cyberlinks_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Cyberlinks_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Cyberlinks_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"cyberlinks\" */\nexport type Cyberlinks_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"daily_amount_of_active_neurons\" */\nexport type Daily_Amount_Of_Active_Neurons = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"daily_amount_of_active_neurons\" */\nexport type Daily_Amount_Of_Active_Neurons_Aggregate = {\n  aggregate?: Maybe<Daily_Amount_Of_Active_Neurons_Aggregate_Fields>;\n  nodes: Array<Daily_Amount_Of_Active_Neurons>;\n};\n\n/** aggregate fields of \"daily_amount_of_active_neurons\" */\nexport type Daily_Amount_Of_Active_Neurons_Aggregate_Fields = {\n  avg?: Maybe<Daily_Amount_Of_Active_Neurons_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Daily_Amount_Of_Active_Neurons_Max_Fields>;\n  min?: Maybe<Daily_Amount_Of_Active_Neurons_Min_Fields>;\n  stddev?: Maybe<Daily_Amount_Of_Active_Neurons_Stddev_Fields>;\n  stddev_pop?: Maybe<Daily_Amount_Of_Active_Neurons_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Daily_Amount_Of_Active_Neurons_Stddev_Samp_Fields>;\n  sum?: Maybe<Daily_Amount_Of_Active_Neurons_Sum_Fields>;\n  var_pop?: Maybe<Daily_Amount_Of_Active_Neurons_Var_Pop_Fields>;\n  var_samp?: Maybe<Daily_Amount_Of_Active_Neurons_Var_Samp_Fields>;\n  variance?: Maybe<Daily_Amount_Of_Active_Neurons_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"daily_amount_of_active_neurons\" */\nexport type Daily_Amount_Of_Active_Neurons_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Daily_Amount_Of_Active_Neurons_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"daily_amount_of_active_neurons\". All fields are combined with a logical 'AND'. */\nexport type Daily_Amount_Of_Active_Neurons_Bool_Exp = {\n  _and?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Bool_Exp>>;\n  _not?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n  _or?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Daily_Amount_Of_Active_Neurons_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Daily_Amount_Of_Active_Neurons_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"daily_amount_of_active_neurons\". */\nexport type Daily_Amount_Of_Active_Neurons_Order_By = {\n  count?: InputMaybe<Order_By>;\n  date?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"daily_amount_of_active_neurons\" */\nexport enum Daily_Amount_Of_Active_Neurons_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Date = 'date'\n}\n\n/** aggregate stddev on columns */\nexport type Daily_Amount_Of_Active_Neurons_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Daily_Amount_Of_Active_Neurons_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Daily_Amount_Of_Active_Neurons_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"daily_amount_of_active_neurons\" */\nexport type Daily_Amount_Of_Active_Neurons_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Daily_Amount_Of_Active_Neurons_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Daily_Amount_Of_Active_Neurons_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  date?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Daily_Amount_Of_Active_Neurons_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Daily_Amount_Of_Active_Neurons_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Daily_Amount_Of_Active_Neurons_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Daily_Amount_Of_Active_Neurons_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"daily_amount_of_used_gas\" */\nexport type Daily_Amount_Of_Used_Gas = {\n  daily_gas?: Maybe<Scalars['numeric']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n  gas_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregated selection of \"daily_amount_of_used_gas\" */\nexport type Daily_Amount_Of_Used_Gas_Aggregate = {\n  aggregate?: Maybe<Daily_Amount_Of_Used_Gas_Aggregate_Fields>;\n  nodes: Array<Daily_Amount_Of_Used_Gas>;\n};\n\n/** aggregate fields of \"daily_amount_of_used_gas\" */\nexport type Daily_Amount_Of_Used_Gas_Aggregate_Fields = {\n  avg?: Maybe<Daily_Amount_Of_Used_Gas_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Daily_Amount_Of_Used_Gas_Max_Fields>;\n  min?: Maybe<Daily_Amount_Of_Used_Gas_Min_Fields>;\n  stddev?: Maybe<Daily_Amount_Of_Used_Gas_Stddev_Fields>;\n  stddev_pop?: Maybe<Daily_Amount_Of_Used_Gas_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Daily_Amount_Of_Used_Gas_Stddev_Samp_Fields>;\n  sum?: Maybe<Daily_Amount_Of_Used_Gas_Sum_Fields>;\n  var_pop?: Maybe<Daily_Amount_Of_Used_Gas_Var_Pop_Fields>;\n  var_samp?: Maybe<Daily_Amount_Of_Used_Gas_Var_Samp_Fields>;\n  variance?: Maybe<Daily_Amount_Of_Used_Gas_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"daily_amount_of_used_gas\" */\nexport type Daily_Amount_Of_Used_Gas_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Daily_Amount_Of_Used_Gas_Avg_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"daily_amount_of_used_gas\". All fields are combined with a logical 'AND'. */\nexport type Daily_Amount_Of_Used_Gas_Bool_Exp = {\n  _and?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Bool_Exp>>;\n  _not?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n  _or?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Bool_Exp>>;\n  daily_gas?: InputMaybe<Numeric_Comparison_Exp>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n  gas_total?: InputMaybe<Numeric_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Daily_Amount_Of_Used_Gas_Max_Fields = {\n  daily_gas?: Maybe<Scalars['numeric']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n  gas_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Daily_Amount_Of_Used_Gas_Min_Fields = {\n  daily_gas?: Maybe<Scalars['numeric']['output']>;\n  date?: Maybe<Scalars['date']['output']>;\n  gas_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** Ordering options when selecting data from \"daily_amount_of_used_gas\". */\nexport type Daily_Amount_Of_Used_Gas_Order_By = {\n  daily_gas?: InputMaybe<Order_By>;\n  date?: InputMaybe<Order_By>;\n  gas_total?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"daily_amount_of_used_gas\" */\nexport enum Daily_Amount_Of_Used_Gas_Select_Column {\n  /** column name */\n  DailyGas = 'daily_gas',\n  /** column name */\n  Date = 'date',\n  /** column name */\n  GasTotal = 'gas_total'\n}\n\n/** aggregate stddev on columns */\nexport type Daily_Amount_Of_Used_Gas_Stddev_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Daily_Amount_Of_Used_Gas_Stddev_Pop_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Daily_Amount_Of_Used_Gas_Stddev_Samp_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"daily_amount_of_used_gas\" */\nexport type Daily_Amount_Of_Used_Gas_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Daily_Amount_Of_Used_Gas_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Daily_Amount_Of_Used_Gas_Stream_Cursor_Value_Input = {\n  daily_gas?: InputMaybe<Scalars['numeric']['input']>;\n  date?: InputMaybe<Scalars['date']['input']>;\n  gas_total?: InputMaybe<Scalars['numeric']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Daily_Amount_Of_Used_Gas_Sum_Fields = {\n  daily_gas?: Maybe<Scalars['numeric']['output']>;\n  gas_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Daily_Amount_Of_Used_Gas_Var_Pop_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Daily_Amount_Of_Used_Gas_Var_Samp_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Daily_Amount_Of_Used_Gas_Variance_Fields = {\n  daily_gas?: Maybe<Scalars['Float']['output']>;\n  gas_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"daily_number_of_transactions\" */\nexport type Daily_Number_Of_Transactions = {\n  date?: Maybe<Scalars['date']['output']>;\n  txs_per_day?: Maybe<Scalars['bigint']['output']>;\n  txs_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregated selection of \"daily_number_of_transactions\" */\nexport type Daily_Number_Of_Transactions_Aggregate = {\n  aggregate?: Maybe<Daily_Number_Of_Transactions_Aggregate_Fields>;\n  nodes: Array<Daily_Number_Of_Transactions>;\n};\n\n/** aggregate fields of \"daily_number_of_transactions\" */\nexport type Daily_Number_Of_Transactions_Aggregate_Fields = {\n  avg?: Maybe<Daily_Number_Of_Transactions_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Daily_Number_Of_Transactions_Max_Fields>;\n  min?: Maybe<Daily_Number_Of_Transactions_Min_Fields>;\n  stddev?: Maybe<Daily_Number_Of_Transactions_Stddev_Fields>;\n  stddev_pop?: Maybe<Daily_Number_Of_Transactions_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Daily_Number_Of_Transactions_Stddev_Samp_Fields>;\n  sum?: Maybe<Daily_Number_Of_Transactions_Sum_Fields>;\n  var_pop?: Maybe<Daily_Number_Of_Transactions_Var_Pop_Fields>;\n  var_samp?: Maybe<Daily_Number_Of_Transactions_Var_Samp_Fields>;\n  variance?: Maybe<Daily_Number_Of_Transactions_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"daily_number_of_transactions\" */\nexport type Daily_Number_Of_Transactions_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Daily_Number_Of_Transactions_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Daily_Number_Of_Transactions_Avg_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"daily_number_of_transactions\". All fields are combined with a logical 'AND'. */\nexport type Daily_Number_Of_Transactions_Bool_Exp = {\n  _and?: InputMaybe<Array<Daily_Number_Of_Transactions_Bool_Exp>>;\n  _not?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n  _or?: InputMaybe<Array<Daily_Number_Of_Transactions_Bool_Exp>>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n  txs_per_day?: InputMaybe<Bigint_Comparison_Exp>;\n  txs_total?: InputMaybe<Numeric_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Daily_Number_Of_Transactions_Max_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  txs_per_day?: Maybe<Scalars['bigint']['output']>;\n  txs_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Daily_Number_Of_Transactions_Min_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  txs_per_day?: Maybe<Scalars['bigint']['output']>;\n  txs_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** Ordering options when selecting data from \"daily_number_of_transactions\". */\nexport type Daily_Number_Of_Transactions_Order_By = {\n  date?: InputMaybe<Order_By>;\n  txs_per_day?: InputMaybe<Order_By>;\n  txs_total?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"daily_number_of_transactions\" */\nexport enum Daily_Number_Of_Transactions_Select_Column {\n  /** column name */\n  Date = 'date',\n  /** column name */\n  TxsPerDay = 'txs_per_day',\n  /** column name */\n  TxsTotal = 'txs_total'\n}\n\n/** aggregate stddev on columns */\nexport type Daily_Number_Of_Transactions_Stddev_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Daily_Number_Of_Transactions_Stddev_Pop_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Daily_Number_Of_Transactions_Stddev_Samp_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"daily_number_of_transactions\" */\nexport type Daily_Number_Of_Transactions_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Daily_Number_Of_Transactions_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Daily_Number_Of_Transactions_Stream_Cursor_Value_Input = {\n  date?: InputMaybe<Scalars['date']['input']>;\n  txs_per_day?: InputMaybe<Scalars['bigint']['input']>;\n  txs_total?: InputMaybe<Scalars['numeric']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Daily_Number_Of_Transactions_Sum_Fields = {\n  txs_per_day?: Maybe<Scalars['bigint']['output']>;\n  txs_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Daily_Number_Of_Transactions_Var_Pop_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Daily_Number_Of_Transactions_Var_Samp_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Daily_Number_Of_Transactions_Variance_Fields = {\n  txs_per_day?: Maybe<Scalars['Float']['output']>;\n  txs_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to compare columns of type \"date\". All fields are combined with logical 'AND'. */\nexport type Date_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['date']['input']>;\n  _gt?: InputMaybe<Scalars['date']['input']>;\n  _gte?: InputMaybe<Scalars['date']['input']>;\n  _in?: InputMaybe<Array<Scalars['date']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['date']['input']>;\n  _lte?: InputMaybe<Scalars['date']['input']>;\n  _neq?: InputMaybe<Scalars['date']['input']>;\n  _nin?: InputMaybe<Array<Scalars['date']['input']>>;\n};\n\n/** columns and relationships of \"first_10_cyberlink\" */\nexport type First_10_Cyberlink = {\n  cyberlink_10?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_10_cyberlink\" */\nexport type First_10_Cyberlink_Aggregate = {\n  aggregate?: Maybe<First_10_Cyberlink_Aggregate_Fields>;\n  nodes: Array<First_10_Cyberlink>;\n};\n\n/** aggregate fields of \"first_10_cyberlink\" */\nexport type First_10_Cyberlink_Aggregate_Fields = {\n  avg?: Maybe<First_10_Cyberlink_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_10_Cyberlink_Max_Fields>;\n  min?: Maybe<First_10_Cyberlink_Min_Fields>;\n  stddev?: Maybe<First_10_Cyberlink_Stddev_Fields>;\n  stddev_pop?: Maybe<First_10_Cyberlink_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_10_Cyberlink_Stddev_Samp_Fields>;\n  sum?: Maybe<First_10_Cyberlink_Sum_Fields>;\n  var_pop?: Maybe<First_10_Cyberlink_Var_Pop_Fields>;\n  var_samp?: Maybe<First_10_Cyberlink_Var_Samp_Fields>;\n  variance?: Maybe<First_10_Cyberlink_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_10_cyberlink\" */\nexport type First_10_Cyberlink_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_10_Cyberlink_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_10_Cyberlink_Avg_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_10_cyberlink\". All fields are combined with a logical 'AND'. */\nexport type First_10_Cyberlink_Bool_Exp = {\n  _and?: InputMaybe<Array<First_10_Cyberlink_Bool_Exp>>;\n  _not?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n  _or?: InputMaybe<Array<First_10_Cyberlink_Bool_Exp>>;\n  cyberlink_10?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_10_Cyberlink_Max_Fields = {\n  cyberlink_10?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_10_Cyberlink_Min_Fields = {\n  cyberlink_10?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_10_cyberlink\". */\nexport type First_10_Cyberlink_Order_By = {\n  cyberlink_10?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_10_cyberlink\" */\nexport enum First_10_Cyberlink_Select_Column {\n  /** column name */\n  Cyberlink_10 = 'cyberlink_10',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_10_Cyberlink_Stddev_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_10_Cyberlink_Stddev_Pop_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_10_Cyberlink_Stddev_Samp_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_10_cyberlink\" */\nexport type First_10_Cyberlink_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_10_Cyberlink_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_10_Cyberlink_Stream_Cursor_Value_Input = {\n  cyberlink_10?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_10_Cyberlink_Sum_Fields = {\n  cyberlink_10?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_10_Cyberlink_Var_Pop_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_10_Cyberlink_Var_Samp_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_10_Cyberlink_Variance_Fields = {\n  cyberlink_10?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_100_cyberlink\" */\nexport type First_100_Cyberlink = {\n  cyberlink_100?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_100_cyberlink\" */\nexport type First_100_Cyberlink_Aggregate = {\n  aggregate?: Maybe<First_100_Cyberlink_Aggregate_Fields>;\n  nodes: Array<First_100_Cyberlink>;\n};\n\n/** aggregate fields of \"first_100_cyberlink\" */\nexport type First_100_Cyberlink_Aggregate_Fields = {\n  avg?: Maybe<First_100_Cyberlink_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_100_Cyberlink_Max_Fields>;\n  min?: Maybe<First_100_Cyberlink_Min_Fields>;\n  stddev?: Maybe<First_100_Cyberlink_Stddev_Fields>;\n  stddev_pop?: Maybe<First_100_Cyberlink_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_100_Cyberlink_Stddev_Samp_Fields>;\n  sum?: Maybe<First_100_Cyberlink_Sum_Fields>;\n  var_pop?: Maybe<First_100_Cyberlink_Var_Pop_Fields>;\n  var_samp?: Maybe<First_100_Cyberlink_Var_Samp_Fields>;\n  variance?: Maybe<First_100_Cyberlink_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_100_cyberlink\" */\nexport type First_100_Cyberlink_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_100_Cyberlink_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_100_Cyberlink_Avg_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_100_cyberlink\". All fields are combined with a logical 'AND'. */\nexport type First_100_Cyberlink_Bool_Exp = {\n  _and?: InputMaybe<Array<First_100_Cyberlink_Bool_Exp>>;\n  _not?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n  _or?: InputMaybe<Array<First_100_Cyberlink_Bool_Exp>>;\n  cyberlink_100?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_100_Cyberlink_Max_Fields = {\n  cyberlink_100?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_100_Cyberlink_Min_Fields = {\n  cyberlink_100?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_100_cyberlink\". */\nexport type First_100_Cyberlink_Order_By = {\n  cyberlink_100?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_100_cyberlink\" */\nexport enum First_100_Cyberlink_Select_Column {\n  /** column name */\n  Cyberlink_100 = 'cyberlink_100',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_100_Cyberlink_Stddev_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_100_Cyberlink_Stddev_Pop_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_100_Cyberlink_Stddev_Samp_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_100_cyberlink\" */\nexport type First_100_Cyberlink_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_100_Cyberlink_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_100_Cyberlink_Stream_Cursor_Value_Input = {\n  cyberlink_100?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_100_Cyberlink_Sum_Fields = {\n  cyberlink_100?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_100_Cyberlink_Var_Pop_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_100_Cyberlink_Var_Samp_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_100_Cyberlink_Variance_Fields = {\n  cyberlink_100?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_cyberlink\" */\nexport type First_Cyberlink = {\n  cyberlink?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_cyberlink\" */\nexport type First_Cyberlink_Aggregate = {\n  aggregate?: Maybe<First_Cyberlink_Aggregate_Fields>;\n  nodes: Array<First_Cyberlink>;\n};\n\n/** aggregate fields of \"first_cyberlink\" */\nexport type First_Cyberlink_Aggregate_Fields = {\n  avg?: Maybe<First_Cyberlink_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_Cyberlink_Max_Fields>;\n  min?: Maybe<First_Cyberlink_Min_Fields>;\n  stddev?: Maybe<First_Cyberlink_Stddev_Fields>;\n  stddev_pop?: Maybe<First_Cyberlink_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_Cyberlink_Stddev_Samp_Fields>;\n  sum?: Maybe<First_Cyberlink_Sum_Fields>;\n  var_pop?: Maybe<First_Cyberlink_Var_Pop_Fields>;\n  var_samp?: Maybe<First_Cyberlink_Var_Samp_Fields>;\n  variance?: Maybe<First_Cyberlink_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_cyberlink\" */\nexport type First_Cyberlink_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_Cyberlink_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_Cyberlink_Avg_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_cyberlink\". All fields are combined with a logical 'AND'. */\nexport type First_Cyberlink_Bool_Exp = {\n  _and?: InputMaybe<Array<First_Cyberlink_Bool_Exp>>;\n  _not?: InputMaybe<First_Cyberlink_Bool_Exp>;\n  _or?: InputMaybe<Array<First_Cyberlink_Bool_Exp>>;\n  cyberlink?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_Cyberlink_Max_Fields = {\n  cyberlink?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_Cyberlink_Min_Fields = {\n  cyberlink?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_cyberlink\". */\nexport type First_Cyberlink_Order_By = {\n  cyberlink?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_cyberlink\" */\nexport enum First_Cyberlink_Select_Column {\n  /** column name */\n  Cyberlink = 'cyberlink',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_Cyberlink_Stddev_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_Cyberlink_Stddev_Pop_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_Cyberlink_Stddev_Samp_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_cyberlink\" */\nexport type First_Cyberlink_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_Cyberlink_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_Cyberlink_Stream_Cursor_Value_Input = {\n  cyberlink?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_Cyberlink_Sum_Fields = {\n  cyberlink?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_Cyberlink_Var_Pop_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_Cyberlink_Var_Samp_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_Cyberlink_Variance_Fields = {\n  cyberlink?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_hero_hired\" */\nexport type First_Hero_Hired = {\n  hero_hired?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_hero_hired\" */\nexport type First_Hero_Hired_Aggregate = {\n  aggregate?: Maybe<First_Hero_Hired_Aggregate_Fields>;\n  nodes: Array<First_Hero_Hired>;\n};\n\n/** aggregate fields of \"first_hero_hired\" */\nexport type First_Hero_Hired_Aggregate_Fields = {\n  avg?: Maybe<First_Hero_Hired_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_Hero_Hired_Max_Fields>;\n  min?: Maybe<First_Hero_Hired_Min_Fields>;\n  stddev?: Maybe<First_Hero_Hired_Stddev_Fields>;\n  stddev_pop?: Maybe<First_Hero_Hired_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_Hero_Hired_Stddev_Samp_Fields>;\n  sum?: Maybe<First_Hero_Hired_Sum_Fields>;\n  var_pop?: Maybe<First_Hero_Hired_Var_Pop_Fields>;\n  var_samp?: Maybe<First_Hero_Hired_Var_Samp_Fields>;\n  variance?: Maybe<First_Hero_Hired_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_hero_hired\" */\nexport type First_Hero_Hired_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_Hero_Hired_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_Hero_Hired_Avg_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_hero_hired\". All fields are combined with a logical 'AND'. */\nexport type First_Hero_Hired_Bool_Exp = {\n  _and?: InputMaybe<Array<First_Hero_Hired_Bool_Exp>>;\n  _not?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n  _or?: InputMaybe<Array<First_Hero_Hired_Bool_Exp>>;\n  hero_hired?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_Hero_Hired_Max_Fields = {\n  hero_hired?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_Hero_Hired_Min_Fields = {\n  hero_hired?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_hero_hired\". */\nexport type First_Hero_Hired_Order_By = {\n  hero_hired?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_hero_hired\" */\nexport enum First_Hero_Hired_Select_Column {\n  /** column name */\n  HeroHired = 'hero_hired',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_Hero_Hired_Stddev_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_Hero_Hired_Stddev_Pop_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_Hero_Hired_Stddev_Samp_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_hero_hired\" */\nexport type First_Hero_Hired_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_Hero_Hired_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_Hero_Hired_Stream_Cursor_Value_Input = {\n  hero_hired?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_Hero_Hired_Sum_Fields = {\n  hero_hired?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_Hero_Hired_Var_Pop_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_Hero_Hired_Var_Samp_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_Hero_Hired_Variance_Fields = {\n  hero_hired?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_investmint\" */\nexport type First_Investmint = {\n  investmint?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_investmint\" */\nexport type First_Investmint_Aggregate = {\n  aggregate?: Maybe<First_Investmint_Aggregate_Fields>;\n  nodes: Array<First_Investmint>;\n};\n\n/** aggregate fields of \"first_investmint\" */\nexport type First_Investmint_Aggregate_Fields = {\n  avg?: Maybe<First_Investmint_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_Investmint_Max_Fields>;\n  min?: Maybe<First_Investmint_Min_Fields>;\n  stddev?: Maybe<First_Investmint_Stddev_Fields>;\n  stddev_pop?: Maybe<First_Investmint_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_Investmint_Stddev_Samp_Fields>;\n  sum?: Maybe<First_Investmint_Sum_Fields>;\n  var_pop?: Maybe<First_Investmint_Var_Pop_Fields>;\n  var_samp?: Maybe<First_Investmint_Var_Samp_Fields>;\n  variance?: Maybe<First_Investmint_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_investmint\" */\nexport type First_Investmint_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_Investmint_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_Investmint_Avg_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_investmint\". All fields are combined with a logical 'AND'. */\nexport type First_Investmint_Bool_Exp = {\n  _and?: InputMaybe<Array<First_Investmint_Bool_Exp>>;\n  _not?: InputMaybe<First_Investmint_Bool_Exp>;\n  _or?: InputMaybe<Array<First_Investmint_Bool_Exp>>;\n  investmint?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_Investmint_Max_Fields = {\n  investmint?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_Investmint_Min_Fields = {\n  investmint?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_investmint\". */\nexport type First_Investmint_Order_By = {\n  investmint?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_investmint\" */\nexport enum First_Investmint_Select_Column {\n  /** column name */\n  Investmint = 'investmint',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_Investmint_Stddev_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_Investmint_Stddev_Pop_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_Investmint_Stddev_Samp_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_investmint\" */\nexport type First_Investmint_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_Investmint_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_Investmint_Stream_Cursor_Value_Input = {\n  investmint?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_Investmint_Sum_Fields = {\n  investmint?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_Investmint_Var_Pop_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_Investmint_Var_Samp_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_Investmint_Variance_Fields = {\n  investmint?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_neuron_activation\" */\nexport type First_Neuron_Activation = {\n  neuron_activation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_neuron_activation\" */\nexport type First_Neuron_Activation_Aggregate = {\n  aggregate?: Maybe<First_Neuron_Activation_Aggregate_Fields>;\n  nodes: Array<First_Neuron_Activation>;\n};\n\n/** aggregate fields of \"first_neuron_activation\" */\nexport type First_Neuron_Activation_Aggregate_Fields = {\n  avg?: Maybe<First_Neuron_Activation_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_Neuron_Activation_Max_Fields>;\n  min?: Maybe<First_Neuron_Activation_Min_Fields>;\n  stddev?: Maybe<First_Neuron_Activation_Stddev_Fields>;\n  stddev_pop?: Maybe<First_Neuron_Activation_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_Neuron_Activation_Stddev_Samp_Fields>;\n  sum?: Maybe<First_Neuron_Activation_Sum_Fields>;\n  var_pop?: Maybe<First_Neuron_Activation_Var_Pop_Fields>;\n  var_samp?: Maybe<First_Neuron_Activation_Var_Samp_Fields>;\n  variance?: Maybe<First_Neuron_Activation_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_neuron_activation\" */\nexport type First_Neuron_Activation_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_Neuron_Activation_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_Neuron_Activation_Avg_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_neuron_activation\". All fields are combined with a logical 'AND'. */\nexport type First_Neuron_Activation_Bool_Exp = {\n  _and?: InputMaybe<Array<First_Neuron_Activation_Bool_Exp>>;\n  _not?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n  _or?: InputMaybe<Array<First_Neuron_Activation_Bool_Exp>>;\n  neuron_activation?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_Neuron_Activation_Max_Fields = {\n  neuron_activation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_Neuron_Activation_Min_Fields = {\n  neuron_activation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_neuron_activation\". */\nexport type First_Neuron_Activation_Order_By = {\n  neuron_activation?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_neuron_activation\" */\nexport enum First_Neuron_Activation_Select_Column {\n  /** column name */\n  NeuronActivation = 'neuron_activation',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_Neuron_Activation_Stddev_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_Neuron_Activation_Stddev_Pop_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_Neuron_Activation_Stddev_Samp_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_neuron_activation\" */\nexport type First_Neuron_Activation_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_Neuron_Activation_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_Neuron_Activation_Stream_Cursor_Value_Input = {\n  neuron_activation?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_Neuron_Activation_Sum_Fields = {\n  neuron_activation?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_Neuron_Activation_Var_Pop_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_Neuron_Activation_Var_Samp_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_Neuron_Activation_Variance_Fields = {\n  neuron_activation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"first_swap\" */\nexport type First_Swap = {\n  swap?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"first_swap\" */\nexport type First_Swap_Aggregate = {\n  aggregate?: Maybe<First_Swap_Aggregate_Fields>;\n  nodes: Array<First_Swap>;\n};\n\n/** aggregate fields of \"first_swap\" */\nexport type First_Swap_Aggregate_Fields = {\n  avg?: Maybe<First_Swap_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<First_Swap_Max_Fields>;\n  min?: Maybe<First_Swap_Min_Fields>;\n  stddev?: Maybe<First_Swap_Stddev_Fields>;\n  stddev_pop?: Maybe<First_Swap_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<First_Swap_Stddev_Samp_Fields>;\n  sum?: Maybe<First_Swap_Sum_Fields>;\n  var_pop?: Maybe<First_Swap_Var_Pop_Fields>;\n  var_samp?: Maybe<First_Swap_Var_Samp_Fields>;\n  variance?: Maybe<First_Swap_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"first_swap\" */\nexport type First_Swap_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<First_Swap_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type First_Swap_Avg_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"first_swap\". All fields are combined with a logical 'AND'. */\nexport type First_Swap_Bool_Exp = {\n  _and?: InputMaybe<Array<First_Swap_Bool_Exp>>;\n  _not?: InputMaybe<First_Swap_Bool_Exp>;\n  _or?: InputMaybe<Array<First_Swap_Bool_Exp>>;\n  swap?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type First_Swap_Max_Fields = {\n  swap?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type First_Swap_Min_Fields = {\n  swap?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"first_swap\". */\nexport type First_Swap_Order_By = {\n  swap?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"first_swap\" */\nexport enum First_Swap_Select_Column {\n  /** column name */\n  Swap = 'swap',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type First_Swap_Stddev_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type First_Swap_Stddev_Pop_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type First_Swap_Stddev_Samp_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"first_swap\" */\nexport type First_Swap_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: First_Swap_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type First_Swap_Stream_Cursor_Value_Input = {\n  swap?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type First_Swap_Sum_Fields = {\n  swap?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type First_Swap_Var_Pop_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type First_Swap_Var_Samp_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type First_Swap_Variance_Fields = {\n  swap?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to compare columns of type \"float8\". All fields are combined with logical 'AND'. */\nexport type Float8_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['float8']['input']>;\n  _gt?: InputMaybe<Scalars['float8']['input']>;\n  _gte?: InputMaybe<Scalars['float8']['input']>;\n  _in?: InputMaybe<Array<Scalars['float8']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['float8']['input']>;\n  _lte?: InputMaybe<Scalars['float8']['input']>;\n  _neq?: InputMaybe<Scalars['float8']['input']>;\n  _nin?: InputMaybe<Array<Scalars['float8']['input']>>;\n};\n\n/** columns and relationships of \"follow_stats\" */\nexport type Follow_Stats = {\n  date?: Maybe<Scalars['date']['output']>;\n  follow_total?: Maybe<Scalars['numeric']['output']>;\n  follows_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregated selection of \"follow_stats\" */\nexport type Follow_Stats_Aggregate = {\n  aggregate?: Maybe<Follow_Stats_Aggregate_Fields>;\n  nodes: Array<Follow_Stats>;\n};\n\n/** aggregate fields of \"follow_stats\" */\nexport type Follow_Stats_Aggregate_Fields = {\n  avg?: Maybe<Follow_Stats_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Follow_Stats_Max_Fields>;\n  min?: Maybe<Follow_Stats_Min_Fields>;\n  stddev?: Maybe<Follow_Stats_Stddev_Fields>;\n  stddev_pop?: Maybe<Follow_Stats_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Follow_Stats_Stddev_Samp_Fields>;\n  sum?: Maybe<Follow_Stats_Sum_Fields>;\n  var_pop?: Maybe<Follow_Stats_Var_Pop_Fields>;\n  var_samp?: Maybe<Follow_Stats_Var_Samp_Fields>;\n  variance?: Maybe<Follow_Stats_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"follow_stats\" */\nexport type Follow_Stats_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Follow_Stats_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Follow_Stats_Avg_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"follow_stats\". All fields are combined with a logical 'AND'. */\nexport type Follow_Stats_Bool_Exp = {\n  _and?: InputMaybe<Array<Follow_Stats_Bool_Exp>>;\n  _not?: InputMaybe<Follow_Stats_Bool_Exp>;\n  _or?: InputMaybe<Array<Follow_Stats_Bool_Exp>>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n  follow_total?: InputMaybe<Numeric_Comparison_Exp>;\n  follows_per_day?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Follow_Stats_Max_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  follow_total?: Maybe<Scalars['numeric']['output']>;\n  follows_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Follow_Stats_Min_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  follow_total?: Maybe<Scalars['numeric']['output']>;\n  follows_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"follow_stats\". */\nexport type Follow_Stats_Order_By = {\n  date?: InputMaybe<Order_By>;\n  follow_total?: InputMaybe<Order_By>;\n  follows_per_day?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"follow_stats\" */\nexport enum Follow_Stats_Select_Column {\n  /** column name */\n  Date = 'date',\n  /** column name */\n  FollowTotal = 'follow_total',\n  /** column name */\n  FollowsPerDay = 'follows_per_day'\n}\n\n/** aggregate stddev on columns */\nexport type Follow_Stats_Stddev_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Follow_Stats_Stddev_Pop_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Follow_Stats_Stddev_Samp_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"follow_stats\" */\nexport type Follow_Stats_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Follow_Stats_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Follow_Stats_Stream_Cursor_Value_Input = {\n  date?: InputMaybe<Scalars['date']['input']>;\n  follow_total?: InputMaybe<Scalars['numeric']['input']>;\n  follows_per_day?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Follow_Stats_Sum_Fields = {\n  follow_total?: Maybe<Scalars['numeric']['output']>;\n  follows_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Follow_Stats_Var_Pop_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Follow_Stats_Var_Samp_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Follow_Stats_Variance_Fields = {\n  follow_total?: Maybe<Scalars['Float']['output']>;\n  follows_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"genesis\" */\nexport type Genesis = {\n  chain_id: Scalars['String']['output'];\n  initial_height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n  time: Scalars['timestamp']['output'];\n};\n\n/** columns and relationships of \"genesis_accounts\" */\nexport type Genesis_Accounts = {\n  address: Scalars['String']['output'];\n  balance: Scalars['bigint']['output'];\n  id: Scalars['Int']['output'];\n};\n\n/** aggregated selection of \"genesis_accounts\" */\nexport type Genesis_Accounts_Aggregate = {\n  aggregate?: Maybe<Genesis_Accounts_Aggregate_Fields>;\n  nodes: Array<Genesis_Accounts>;\n};\n\n/** aggregate fields of \"genesis_accounts\" */\nexport type Genesis_Accounts_Aggregate_Fields = {\n  avg?: Maybe<Genesis_Accounts_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Genesis_Accounts_Max_Fields>;\n  min?: Maybe<Genesis_Accounts_Min_Fields>;\n  stddev?: Maybe<Genesis_Accounts_Stddev_Fields>;\n  stddev_pop?: Maybe<Genesis_Accounts_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Genesis_Accounts_Stddev_Samp_Fields>;\n  sum?: Maybe<Genesis_Accounts_Sum_Fields>;\n  var_pop?: Maybe<Genesis_Accounts_Var_Pop_Fields>;\n  var_samp?: Maybe<Genesis_Accounts_Var_Samp_Fields>;\n  variance?: Maybe<Genesis_Accounts_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"genesis_accounts\" */\nexport type Genesis_Accounts_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Genesis_Accounts_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Genesis_Accounts_Avg_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"genesis_accounts\". All fields are combined with a logical 'AND'. */\nexport type Genesis_Accounts_Bool_Exp = {\n  _and?: InputMaybe<Array<Genesis_Accounts_Bool_Exp>>;\n  _not?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n  _or?: InputMaybe<Array<Genesis_Accounts_Bool_Exp>>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  balance?: InputMaybe<Bigint_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Genesis_Accounts_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  balance?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Genesis_Accounts_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  balance?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** Ordering options when selecting data from \"genesis_accounts\". */\nexport type Genesis_Accounts_Order_By = {\n  address?: InputMaybe<Order_By>;\n  balance?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"genesis_accounts\" */\nexport enum Genesis_Accounts_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  Balance = 'balance',\n  /** column name */\n  Id = 'id'\n}\n\n/** aggregate stddev on columns */\nexport type Genesis_Accounts_Stddev_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Genesis_Accounts_Stddev_Pop_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Genesis_Accounts_Stddev_Samp_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"genesis_accounts\" */\nexport type Genesis_Accounts_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Genesis_Accounts_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Genesis_Accounts_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  balance?: InputMaybe<Scalars['bigint']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Genesis_Accounts_Sum_Fields = {\n  balance?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Genesis_Accounts_Var_Pop_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Genesis_Accounts_Var_Samp_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Genesis_Accounts_Variance_Fields = {\n  balance?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregated selection of \"genesis\" */\nexport type Genesis_Aggregate = {\n  aggregate?: Maybe<Genesis_Aggregate_Fields>;\n  nodes: Array<Genesis>;\n};\n\n/** aggregate fields of \"genesis\" */\nexport type Genesis_Aggregate_Fields = {\n  avg?: Maybe<Genesis_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Genesis_Max_Fields>;\n  min?: Maybe<Genesis_Min_Fields>;\n  stddev?: Maybe<Genesis_Stddev_Fields>;\n  stddev_pop?: Maybe<Genesis_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Genesis_Stddev_Samp_Fields>;\n  sum?: Maybe<Genesis_Sum_Fields>;\n  var_pop?: Maybe<Genesis_Var_Pop_Fields>;\n  var_samp?: Maybe<Genesis_Var_Samp_Fields>;\n  variance?: Maybe<Genesis_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"genesis\" */\nexport type Genesis_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Genesis_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Genesis_Avg_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"genesis\". All fields are combined with a logical 'AND'. */\nexport type Genesis_Bool_Exp = {\n  _and?: InputMaybe<Array<Genesis_Bool_Exp>>;\n  _not?: InputMaybe<Genesis_Bool_Exp>;\n  _or?: InputMaybe<Array<Genesis_Bool_Exp>>;\n  chain_id?: InputMaybe<String_Comparison_Exp>;\n  initial_height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n  time?: InputMaybe<Timestamp_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Genesis_Max_Fields = {\n  chain_id?: Maybe<Scalars['String']['output']>;\n  initial_height?: Maybe<Scalars['bigint']['output']>;\n  time?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Genesis_Min_Fields = {\n  chain_id?: Maybe<Scalars['String']['output']>;\n  initial_height?: Maybe<Scalars['bigint']['output']>;\n  time?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** columns and relationships of \"genesis_neurons_activation\" */\nexport type Genesis_Neurons_Activation = {\n  count?: Maybe<Scalars['float8']['output']>;\n  neurons?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"genesis_neurons_activation\" */\nexport type Genesis_Neurons_Activation_Aggregate = {\n  aggregate?: Maybe<Genesis_Neurons_Activation_Aggregate_Fields>;\n  nodes: Array<Genesis_Neurons_Activation>;\n};\n\n/** aggregate fields of \"genesis_neurons_activation\" */\nexport type Genesis_Neurons_Activation_Aggregate_Fields = {\n  avg?: Maybe<Genesis_Neurons_Activation_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Genesis_Neurons_Activation_Max_Fields>;\n  min?: Maybe<Genesis_Neurons_Activation_Min_Fields>;\n  stddev?: Maybe<Genesis_Neurons_Activation_Stddev_Fields>;\n  stddev_pop?: Maybe<Genesis_Neurons_Activation_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Genesis_Neurons_Activation_Stddev_Samp_Fields>;\n  sum?: Maybe<Genesis_Neurons_Activation_Sum_Fields>;\n  var_pop?: Maybe<Genesis_Neurons_Activation_Var_Pop_Fields>;\n  var_samp?: Maybe<Genesis_Neurons_Activation_Var_Samp_Fields>;\n  variance?: Maybe<Genesis_Neurons_Activation_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"genesis_neurons_activation\" */\nexport type Genesis_Neurons_Activation_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Genesis_Neurons_Activation_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Genesis_Neurons_Activation_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"genesis_neurons_activation\". All fields are combined with a logical 'AND'. */\nexport type Genesis_Neurons_Activation_Bool_Exp = {\n  _and?: InputMaybe<Array<Genesis_Neurons_Activation_Bool_Exp>>;\n  _not?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n  _or?: InputMaybe<Array<Genesis_Neurons_Activation_Bool_Exp>>;\n  count?: InputMaybe<Float8_Comparison_Exp>;\n  neurons?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Genesis_Neurons_Activation_Max_Fields = {\n  count?: Maybe<Scalars['float8']['output']>;\n  neurons?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Genesis_Neurons_Activation_Min_Fields = {\n  count?: Maybe<Scalars['float8']['output']>;\n  neurons?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"genesis_neurons_activation\". */\nexport type Genesis_Neurons_Activation_Order_By = {\n  count?: InputMaybe<Order_By>;\n  neurons?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"genesis_neurons_activation\" */\nexport enum Genesis_Neurons_Activation_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Neurons = 'neurons'\n}\n\n/** aggregate stddev on columns */\nexport type Genesis_Neurons_Activation_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Genesis_Neurons_Activation_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Genesis_Neurons_Activation_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"genesis_neurons_activation\" */\nexport type Genesis_Neurons_Activation_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Genesis_Neurons_Activation_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Genesis_Neurons_Activation_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['float8']['input']>;\n  neurons?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Genesis_Neurons_Activation_Sum_Fields = {\n  count?: Maybe<Scalars['float8']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Genesis_Neurons_Activation_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Genesis_Neurons_Activation_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Genesis_Neurons_Activation_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Ordering options when selecting data from \"genesis\". */\nexport type Genesis_Order_By = {\n  chain_id?: InputMaybe<Order_By>;\n  initial_height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n  time?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"genesis\" */\nexport enum Genesis_Select_Column {\n  /** column name */\n  ChainId = 'chain_id',\n  /** column name */\n  InitialHeight = 'initial_height',\n  /** column name */\n  OneRowId = 'one_row_id',\n  /** column name */\n  Time = 'time'\n}\n\n/** aggregate stddev on columns */\nexport type Genesis_Stddev_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Genesis_Stddev_Pop_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Genesis_Stddev_Samp_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"genesis\" */\nexport type Genesis_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Genesis_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Genesis_Stream_Cursor_Value_Input = {\n  chain_id?: InputMaybe<Scalars['String']['input']>;\n  initial_height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n  time?: InputMaybe<Scalars['timestamp']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Genesis_Sum_Fields = {\n  initial_height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Genesis_Var_Pop_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Genesis_Var_Samp_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Genesis_Variance_Fields = {\n  initial_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"investmints\" */\nexport type Investmints = {\n  /** An object relationship */\n  account: Account;\n  amount: Scalars['coin_scalar']['output'];\n  /** An object relationship */\n  block: Block;\n  height: Scalars['bigint']['output'];\n  id: Scalars['Int']['output'];\n  length: Scalars['bigint']['output'];\n  neuron: Scalars['String']['output'];\n  resource: Scalars['String']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  transaction_hash: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"investmints\" */\nexport type Investmints_Aggregate = {\n  aggregate?: Maybe<Investmints_Aggregate_Fields>;\n  nodes: Array<Investmints>;\n};\n\nexport type Investmints_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Investmints_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Investmints_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Investmints_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Investmints_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"investmints\" */\nexport type Investmints_Aggregate_Fields = {\n  avg?: Maybe<Investmints_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Investmints_Max_Fields>;\n  min?: Maybe<Investmints_Min_Fields>;\n  stddev?: Maybe<Investmints_Stddev_Fields>;\n  stddev_pop?: Maybe<Investmints_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Investmints_Stddev_Samp_Fields>;\n  sum?: Maybe<Investmints_Sum_Fields>;\n  var_pop?: Maybe<Investmints_Var_Pop_Fields>;\n  var_samp?: Maybe<Investmints_Var_Samp_Fields>;\n  variance?: Maybe<Investmints_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"investmints\" */\nexport type Investmints_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Investmints_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"investmints\" */\nexport type Investmints_Aggregate_Order_By = {\n  avg?: InputMaybe<Investmints_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Investmints_Max_Order_By>;\n  min?: InputMaybe<Investmints_Min_Order_By>;\n  stddev?: InputMaybe<Investmints_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Investmints_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Investmints_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Investmints_Sum_Order_By>;\n  var_pop?: InputMaybe<Investmints_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Investmints_Var_Samp_Order_By>;\n  variance?: InputMaybe<Investmints_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Investmints_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"investmints\" */\nexport type Investmints_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"investmints\". All fields are combined with a logical 'AND'. */\nexport type Investmints_Bool_Exp = {\n  _and?: InputMaybe<Array<Investmints_Bool_Exp>>;\n  _not?: InputMaybe<Investmints_Bool_Exp>;\n  _or?: InputMaybe<Array<Investmints_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  amount?: InputMaybe<Coin_Scalar_Comparison_Exp>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  length?: InputMaybe<Bigint_Comparison_Exp>;\n  neuron?: InputMaybe<String_Comparison_Exp>;\n  resource?: InputMaybe<String_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Investmints_Max_Fields = {\n  amount?: Maybe<Scalars['coin_scalar']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  length?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  resource?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"investmints\" */\nexport type Investmints_Max_Order_By = {\n  amount?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  resource?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Investmints_Min_Fields = {\n  amount?: Maybe<Scalars['coin_scalar']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  length?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  resource?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"investmints\" */\nexport type Investmints_Min_Order_By = {\n  amount?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  resource?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"investmints\". */\nexport type Investmints_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  amount?: InputMaybe<Order_By>;\n  block?: InputMaybe<Block_Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  resource?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"investmints\" */\nexport enum Investmints_Select_Column {\n  /** column name */\n  Amount = 'amount',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Length = 'length',\n  /** column name */\n  Neuron = 'neuron',\n  /** column name */\n  Resource = 'resource',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  TransactionHash = 'transaction_hash'\n}\n\n/** aggregate stddev on columns */\nexport type Investmints_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"investmints\" */\nexport type Investmints_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Investmints_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"investmints\" */\nexport type Investmints_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Investmints_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"investmints\" */\nexport type Investmints_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"investmints\" */\nexport type Investmints_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Investmints_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Investmints_Stream_Cursor_Value_Input = {\n  amount?: InputMaybe<Scalars['coin_scalar']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n  length?: InputMaybe<Scalars['bigint']['input']>;\n  neuron?: InputMaybe<Scalars['String']['input']>;\n  resource?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Investmints_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  length?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"investmints\" */\nexport type Investmints_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Investmints_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"investmints\" */\nexport type Investmints_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Investmints_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"investmints\" */\nexport type Investmints_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Investmints_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n  length?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"investmints\" */\nexport type Investmints_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"json\". All fields are combined with logical 'AND'. */\nexport type Json_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['json']['input']>;\n  _gt?: InputMaybe<Scalars['json']['input']>;\n  _gte?: InputMaybe<Scalars['json']['input']>;\n  _in?: InputMaybe<Array<Scalars['json']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['json']['input']>;\n  _lte?: InputMaybe<Scalars['json']['input']>;\n  _neq?: InputMaybe<Scalars['json']['input']>;\n  _nin?: InputMaybe<Array<Scalars['json']['input']>>;\n};\n\n/** Boolean expression to compare columns of type \"jsonb\". All fields are combined with logical 'AND'. */\nexport type Jsonb_Array_Comparison_Exp = {\n  /** is the array contained in the given array value */\n  _contained_in?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  /** does the array contain the given value */\n  _contains?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _eq?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _gt?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _gte?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _in?: InputMaybe<Array<Array<Scalars['jsonb']['input']>>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _lte?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _neq?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _nin?: InputMaybe<Array<Array<Scalars['jsonb']['input']>>>;\n};\n\nexport type Jsonb_Cast_Exp = {\n  String?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** Boolean expression to compare columns of type \"jsonb\". All fields are combined with logical 'AND'. */\nexport type Jsonb_Comparison_Exp = {\n  _cast?: InputMaybe<Jsonb_Cast_Exp>;\n  /** is the column contained in the given json value */\n  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;\n  /** does the column contain the given json value at the top level */\n  _contains?: InputMaybe<Scalars['jsonb']['input']>;\n  _eq?: InputMaybe<Scalars['jsonb']['input']>;\n  _gt?: InputMaybe<Scalars['jsonb']['input']>;\n  _gte?: InputMaybe<Scalars['jsonb']['input']>;\n  /** does the string exist as a top-level key in the column */\n  _has_key?: InputMaybe<Scalars['String']['input']>;\n  /** do all of these strings exist as top-level keys in the column */\n  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** do any of these strings exist as top-level keys in the column */\n  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;\n  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['jsonb']['input']>;\n  _lte?: InputMaybe<Scalars['jsonb']['input']>;\n  _neq?: InputMaybe<Scalars['jsonb']['input']>;\n  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;\n};\n\n/** columns and relationships of \"message\" */\nexport type Message = {\n  height: Scalars['bigint']['output'];\n  index: Scalars['bigint']['output'];\n  involved_accounts_addresses: Array<Scalars['String']['output']>;\n  /** An object relationship */\n  message_type: Message_Type;\n  partition_id: Scalars['bigint']['output'];\n  /** An object relationship */\n  transaction?: Maybe<Transaction>;\n  /** An object relationship */\n  transaction_155?: Maybe<Transaction_155>;\n  transaction_hash: Scalars['String']['output'];\n  type: Scalars['String']['output'];\n  value: Scalars['json']['output'];\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageValueArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"message_155\" */\nexport type Message_155 = {\n  height: Scalars['bigint']['output'];\n  index: Scalars['bigint']['output'];\n  involved_accounts_addresses: Array<Scalars['String']['output']>;\n  /** An object relationship */\n  message_type: Message_Type;\n  partition_id: Scalars['bigint']['output'];\n  /** An object relationship */\n  transaction?: Maybe<Transaction>;\n  transaction_hash: Scalars['String']['output'];\n  type: Scalars['String']['output'];\n  value: Scalars['json']['output'];\n};\n\n\n/** columns and relationships of \"message_155\" */\nexport type Message_155ValueArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregated selection of \"message_155\" */\nexport type Message_155_Aggregate = {\n  aggregate?: Maybe<Message_155_Aggregate_Fields>;\n  nodes: Array<Message_155>;\n};\n\nexport type Message_155_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Message_155_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Message_155_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Message_155_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Message_155_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"message_155\" */\nexport type Message_155_Aggregate_Fields = {\n  avg?: Maybe<Message_155_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Message_155_Max_Fields>;\n  min?: Maybe<Message_155_Min_Fields>;\n  stddev?: Maybe<Message_155_Stddev_Fields>;\n  stddev_pop?: Maybe<Message_155_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Message_155_Stddev_Samp_Fields>;\n  sum?: Maybe<Message_155_Sum_Fields>;\n  var_pop?: Maybe<Message_155_Var_Pop_Fields>;\n  var_samp?: Maybe<Message_155_Var_Samp_Fields>;\n  variance?: Maybe<Message_155_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"message_155\" */\nexport type Message_155_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_155_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"message_155\" */\nexport type Message_155_Aggregate_Order_By = {\n  avg?: InputMaybe<Message_155_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Message_155_Max_Order_By>;\n  min?: InputMaybe<Message_155_Min_Order_By>;\n  stddev?: InputMaybe<Message_155_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Message_155_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Message_155_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Message_155_Sum_Order_By>;\n  var_pop?: InputMaybe<Message_155_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Message_155_Var_Samp_Order_By>;\n  variance?: InputMaybe<Message_155_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Message_155_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"message_155\" */\nexport type Message_155_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"message_155\". All fields are combined with a logical 'AND'. */\nexport type Message_155_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_155_Bool_Exp>>;\n  _not?: InputMaybe<Message_155_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_155_Bool_Exp>>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  index?: InputMaybe<Bigint_Comparison_Exp>;\n  involved_accounts_addresses?: InputMaybe<String_Array_Comparison_Exp>;\n  message_type?: InputMaybe<Message_Type_Bool_Exp>;\n  partition_id?: InputMaybe<Bigint_Comparison_Exp>;\n  transaction?: InputMaybe<Transaction_Bool_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n  value?: InputMaybe<Json_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Message_155_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"message_155\" */\nexport type Message_155_Max_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Message_155_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"message_155\" */\nexport type Message_155_Min_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"message_155\". */\nexport type Message_155_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  message_type?: InputMaybe<Message_Type_Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction?: InputMaybe<Transaction_Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"message_155\" */\nexport enum Message_155_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Index = 'index',\n  /** column name */\n  InvolvedAccountsAddresses = 'involved_accounts_addresses',\n  /** column name */\n  PartitionId = 'partition_id',\n  /** column name */\n  TransactionHash = 'transaction_hash',\n  /** column name */\n  Type = 'type',\n  /** column name */\n  Value = 'value'\n}\n\n/** aggregate stddev on columns */\nexport type Message_155_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"message_155\" */\nexport type Message_155_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Message_155_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"message_155\" */\nexport type Message_155_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Message_155_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"message_155\" */\nexport type Message_155_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"message_155\" */\nexport type Message_155_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_155_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_155_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  index?: InputMaybe<Scalars['bigint']['input']>;\n  involved_accounts_addresses?: InputMaybe<Array<Scalars['String']['input']>>;\n  partition_id?: InputMaybe<Scalars['bigint']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  value?: InputMaybe<Scalars['json']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Message_155_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"message_155\" */\nexport type Message_155_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Message_155_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"message_155\" */\nexport type Message_155_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Message_155_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"message_155\" */\nexport type Message_155_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Message_155_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"message_155\" */\nexport type Message_155_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregated selection of \"message\" */\nexport type Message_Aggregate = {\n  aggregate?: Maybe<Message_Aggregate_Fields>;\n  nodes: Array<Message>;\n};\n\nexport type Message_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Message_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Message_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Message_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Message_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"message\" */\nexport type Message_Aggregate_Fields = {\n  avg?: Maybe<Message_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Message_Max_Fields>;\n  min?: Maybe<Message_Min_Fields>;\n  stddev?: Maybe<Message_Stddev_Fields>;\n  stddev_pop?: Maybe<Message_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Message_Stddev_Samp_Fields>;\n  sum?: Maybe<Message_Sum_Fields>;\n  var_pop?: Maybe<Message_Var_Pop_Fields>;\n  var_samp?: Maybe<Message_Var_Samp_Fields>;\n  variance?: Maybe<Message_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"message\" */\nexport type Message_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"message\" */\nexport type Message_Aggregate_Order_By = {\n  avg?: InputMaybe<Message_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Message_Max_Order_By>;\n  min?: InputMaybe<Message_Min_Order_By>;\n  stddev?: InputMaybe<Message_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Message_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Message_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Message_Sum_Order_By>;\n  var_pop?: InputMaybe<Message_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Message_Var_Samp_Order_By>;\n  variance?: InputMaybe<Message_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Message_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"message\" */\nexport type Message_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"message\". All fields are combined with a logical 'AND'. */\nexport type Message_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_Bool_Exp>>;\n  _not?: InputMaybe<Message_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_Bool_Exp>>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  index?: InputMaybe<Bigint_Comparison_Exp>;\n  involved_accounts_addresses?: InputMaybe<String_Array_Comparison_Exp>;\n  message_type?: InputMaybe<Message_Type_Bool_Exp>;\n  partition_id?: InputMaybe<Bigint_Comparison_Exp>;\n  transaction?: InputMaybe<Transaction_Bool_Exp>;\n  transaction_155?: InputMaybe<Transaction_155_Bool_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n  value?: InputMaybe<Json_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Message_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"message\" */\nexport type Message_Max_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Message_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  involved_accounts_addresses?: Maybe<Array<Scalars['String']['output']>>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"message\" */\nexport type Message_Min_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"message\". */\nexport type Message_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  involved_accounts_addresses?: InputMaybe<Order_By>;\n  message_type?: InputMaybe<Message_Type_Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  transaction?: InputMaybe<Transaction_Order_By>;\n  transaction_155?: InputMaybe<Transaction_155_Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"message\" */\nexport enum Message_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Index = 'index',\n  /** column name */\n  InvolvedAccountsAddresses = 'involved_accounts_addresses',\n  /** column name */\n  PartitionId = 'partition_id',\n  /** column name */\n  TransactionHash = 'transaction_hash',\n  /** column name */\n  Type = 'type',\n  /** column name */\n  Value = 'value'\n}\n\n/** aggregate stddev on columns */\nexport type Message_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"message\" */\nexport type Message_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Message_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"message\" */\nexport type Message_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Message_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"message\" */\nexport type Message_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"message\" */\nexport type Message_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  index?: InputMaybe<Scalars['bigint']['input']>;\n  involved_accounts_addresses?: InputMaybe<Array<Scalars['String']['input']>>;\n  partition_id?: InputMaybe<Scalars['bigint']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  value?: InputMaybe<Scalars['json']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Message_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  index?: Maybe<Scalars['bigint']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"message\" */\nexport type Message_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"message_type\" */\nexport type Message_Type = {\n  height: Scalars['bigint']['output'];\n  label: Scalars['String']['output'];\n  /** An array relationship */\n  message_155s: Array<Message_155>;\n  /** An aggregate relationship */\n  message_155s_aggregate: Message_155_Aggregate;\n  /** An array relationship */\n  messages: Array<Message>;\n  /** An aggregate relationship */\n  messages_aggregate: Message_Aggregate;\n  module: Scalars['String']['output'];\n  type: Scalars['String']['output'];\n};\n\n\n/** columns and relationships of \"message_type\" */\nexport type Message_TypeMessage_155sArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message_type\" */\nexport type Message_TypeMessage_155s_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message_type\" */\nexport type Message_TypeMessagesArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message_type\" */\nexport type Message_TypeMessages_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n/** aggregated selection of \"message_type\" */\nexport type Message_Type_Aggregate = {\n  aggregate?: Maybe<Message_Type_Aggregate_Fields>;\n  nodes: Array<Message_Type>;\n};\n\n/** aggregate fields of \"message_type\" */\nexport type Message_Type_Aggregate_Fields = {\n  avg?: Maybe<Message_Type_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Message_Type_Max_Fields>;\n  min?: Maybe<Message_Type_Min_Fields>;\n  stddev?: Maybe<Message_Type_Stddev_Fields>;\n  stddev_pop?: Maybe<Message_Type_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Message_Type_Stddev_Samp_Fields>;\n  sum?: Maybe<Message_Type_Sum_Fields>;\n  var_pop?: Maybe<Message_Type_Var_Pop_Fields>;\n  var_samp?: Maybe<Message_Type_Var_Samp_Fields>;\n  variance?: Maybe<Message_Type_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"message_type\" */\nexport type Message_Type_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_Type_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Message_Type_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"message_type\". All fields are combined with a logical 'AND'. */\nexport type Message_Type_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_Type_Bool_Exp>>;\n  _not?: InputMaybe<Message_Type_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_Type_Bool_Exp>>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  label?: InputMaybe<String_Comparison_Exp>;\n  message_155s?: InputMaybe<Message_155_Bool_Exp>;\n  message_155s_aggregate?: InputMaybe<Message_155_Aggregate_Bool_Exp>;\n  messages?: InputMaybe<Message_Bool_Exp>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  module?: InputMaybe<String_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Message_Type_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  label?: Maybe<Scalars['String']['output']>;\n  module?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Message_Type_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  label?: Maybe<Scalars['String']['output']>;\n  module?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"message_type\". */\nexport type Message_Type_Order_By = {\n  height?: InputMaybe<Order_By>;\n  label?: InputMaybe<Order_By>;\n  message_155s_aggregate?: InputMaybe<Message_155_Aggregate_Order_By>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  module?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"message_type\" */\nexport enum Message_Type_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Module = 'module',\n  /** column name */\n  Type = 'type'\n}\n\n/** aggregate stddev on columns */\nexport type Message_Type_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Message_Type_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Message_Type_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"message_type\" */\nexport type Message_Type_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_Type_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_Type_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  label?: InputMaybe<Scalars['String']['input']>;\n  module?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Message_Type_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Message_Type_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Message_Type_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Message_Type_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Message_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"message\" */\nexport type Message_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Message_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"message\" */\nexport type Message_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Message_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  index?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"message\" */\nexport type Message_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  index?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\nexport type Messages_By_Address_Args = {\n  addresses?: InputMaybe<Scalars['_text']['input']>;\n  limit?: InputMaybe<Scalars['bigint']['input']>;\n  offset?: InputMaybe<Scalars['bigint']['input']>;\n  types?: InputMaybe<Scalars['_text']['input']>;\n};\n\nexport type Messages_By_Type_Args = {\n  limit?: InputMaybe<Scalars['bigint']['input']>;\n  offset?: InputMaybe<Scalars['bigint']['input']>;\n  types?: InputMaybe<Scalars['_text']['input']>;\n};\n\n/** columns and relationships of \"modules\" */\nexport type Modules = {\n  module_name: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"modules\" */\nexport type Modules_Aggregate = {\n  aggregate?: Maybe<Modules_Aggregate_Fields>;\n  nodes: Array<Modules>;\n};\n\n/** aggregate fields of \"modules\" */\nexport type Modules_Aggregate_Fields = {\n  count: Scalars['Int']['output'];\n  max?: Maybe<Modules_Max_Fields>;\n  min?: Maybe<Modules_Min_Fields>;\n};\n\n\n/** aggregate fields of \"modules\" */\nexport type Modules_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Modules_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** Boolean expression to filter rows from the table \"modules\". All fields are combined with a logical 'AND'. */\nexport type Modules_Bool_Exp = {\n  _and?: InputMaybe<Array<Modules_Bool_Exp>>;\n  _not?: InputMaybe<Modules_Bool_Exp>;\n  _or?: InputMaybe<Array<Modules_Bool_Exp>>;\n  module_name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Modules_Max_Fields = {\n  module_name?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Modules_Min_Fields = {\n  module_name?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"modules\". */\nexport type Modules_Order_By = {\n  module_name?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"modules\" */\nexport enum Modules_Select_Column {\n  /** column name */\n  ModuleName = 'module_name'\n}\n\n/** Streaming cursor of the table \"modules\" */\nexport type Modules_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Modules_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Modules_Stream_Cursor_Value_Input = {\n  module_name?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"neuron_activation_source\" */\nexport type Neuron_Activation_Source = {\n  genesis_percent?: Maybe<Scalars['float8']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['float8']['output']>;\n  neuron_activated?: Maybe<Scalars['bigint']['output']>;\n  recieve_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"neuron_activation_source\" */\nexport type Neuron_Activation_Source_Aggregate = {\n  aggregate?: Maybe<Neuron_Activation_Source_Aggregate_Fields>;\n  nodes: Array<Neuron_Activation_Source>;\n};\n\n/** aggregate fields of \"neuron_activation_source\" */\nexport type Neuron_Activation_Source_Aggregate_Fields = {\n  avg?: Maybe<Neuron_Activation_Source_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Neuron_Activation_Source_Max_Fields>;\n  min?: Maybe<Neuron_Activation_Source_Min_Fields>;\n  stddev?: Maybe<Neuron_Activation_Source_Stddev_Fields>;\n  stddev_pop?: Maybe<Neuron_Activation_Source_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Neuron_Activation_Source_Stddev_Samp_Fields>;\n  sum?: Maybe<Neuron_Activation_Source_Sum_Fields>;\n  var_pop?: Maybe<Neuron_Activation_Source_Var_Pop_Fields>;\n  var_samp?: Maybe<Neuron_Activation_Source_Var_Samp_Fields>;\n  variance?: Maybe<Neuron_Activation_Source_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"neuron_activation_source\" */\nexport type Neuron_Activation_Source_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Neuron_Activation_Source_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Neuron_Activation_Source_Avg_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"neuron_activation_source\". All fields are combined with a logical 'AND'. */\nexport type Neuron_Activation_Source_Bool_Exp = {\n  _and?: InputMaybe<Array<Neuron_Activation_Source_Bool_Exp>>;\n  _not?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n  _or?: InputMaybe<Array<Neuron_Activation_Source_Bool_Exp>>;\n  genesis_percent?: InputMaybe<Float8_Comparison_Exp>;\n  ibc_receive_percent?: InputMaybe<Float8_Comparison_Exp>;\n  neuron_activated?: InputMaybe<Bigint_Comparison_Exp>;\n  recieve_percent?: InputMaybe<Float8_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Neuron_Activation_Source_Max_Fields = {\n  genesis_percent?: Maybe<Scalars['float8']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['float8']['output']>;\n  neuron_activated?: Maybe<Scalars['bigint']['output']>;\n  recieve_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Neuron_Activation_Source_Min_Fields = {\n  genesis_percent?: Maybe<Scalars['float8']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['float8']['output']>;\n  neuron_activated?: Maybe<Scalars['bigint']['output']>;\n  recieve_percent?: Maybe<Scalars['float8']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"neuron_activation_source\". */\nexport type Neuron_Activation_Source_Order_By = {\n  genesis_percent?: InputMaybe<Order_By>;\n  ibc_receive_percent?: InputMaybe<Order_By>;\n  neuron_activated?: InputMaybe<Order_By>;\n  recieve_percent?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"neuron_activation_source\" */\nexport enum Neuron_Activation_Source_Select_Column {\n  /** column name */\n  GenesisPercent = 'genesis_percent',\n  /** column name */\n  IbcReceivePercent = 'ibc_receive_percent',\n  /** column name */\n  NeuronActivated = 'neuron_activated',\n  /** column name */\n  RecievePercent = 'recieve_percent',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type Neuron_Activation_Source_Stddev_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Neuron_Activation_Source_Stddev_Pop_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Neuron_Activation_Source_Stddev_Samp_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"neuron_activation_source\" */\nexport type Neuron_Activation_Source_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Neuron_Activation_Source_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Neuron_Activation_Source_Stream_Cursor_Value_Input = {\n  genesis_percent?: InputMaybe<Scalars['float8']['input']>;\n  ibc_receive_percent?: InputMaybe<Scalars['float8']['input']>;\n  neuron_activated?: InputMaybe<Scalars['bigint']['input']>;\n  recieve_percent?: InputMaybe<Scalars['float8']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Neuron_Activation_Source_Sum_Fields = {\n  genesis_percent?: Maybe<Scalars['float8']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['float8']['output']>;\n  neuron_activated?: Maybe<Scalars['bigint']['output']>;\n  recieve_percent?: Maybe<Scalars['float8']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Neuron_Activation_Source_Var_Pop_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Neuron_Activation_Source_Var_Samp_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Neuron_Activation_Source_Variance_Fields = {\n  genesis_percent?: Maybe<Scalars['Float']['output']>;\n  ibc_receive_percent?: Maybe<Scalars['Float']['output']>;\n  neuron_activated?: Maybe<Scalars['Float']['output']>;\n  recieve_percent?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"number_of_new_neurons\" */\nexport type Number_Of_New_Neurons = {\n  date?: Maybe<Scalars['date']['output']>;\n  new_neurons_daily?: Maybe<Scalars['bigint']['output']>;\n  new_neurons_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregated selection of \"number_of_new_neurons\" */\nexport type Number_Of_New_Neurons_Aggregate = {\n  aggregate?: Maybe<Number_Of_New_Neurons_Aggregate_Fields>;\n  nodes: Array<Number_Of_New_Neurons>;\n};\n\n/** aggregate fields of \"number_of_new_neurons\" */\nexport type Number_Of_New_Neurons_Aggregate_Fields = {\n  avg?: Maybe<Number_Of_New_Neurons_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Number_Of_New_Neurons_Max_Fields>;\n  min?: Maybe<Number_Of_New_Neurons_Min_Fields>;\n  stddev?: Maybe<Number_Of_New_Neurons_Stddev_Fields>;\n  stddev_pop?: Maybe<Number_Of_New_Neurons_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Number_Of_New_Neurons_Stddev_Samp_Fields>;\n  sum?: Maybe<Number_Of_New_Neurons_Sum_Fields>;\n  var_pop?: Maybe<Number_Of_New_Neurons_Var_Pop_Fields>;\n  var_samp?: Maybe<Number_Of_New_Neurons_Var_Samp_Fields>;\n  variance?: Maybe<Number_Of_New_Neurons_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"number_of_new_neurons\" */\nexport type Number_Of_New_Neurons_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Number_Of_New_Neurons_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Number_Of_New_Neurons_Avg_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"number_of_new_neurons\". All fields are combined with a logical 'AND'. */\nexport type Number_Of_New_Neurons_Bool_Exp = {\n  _and?: InputMaybe<Array<Number_Of_New_Neurons_Bool_Exp>>;\n  _not?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n  _or?: InputMaybe<Array<Number_Of_New_Neurons_Bool_Exp>>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n  new_neurons_daily?: InputMaybe<Bigint_Comparison_Exp>;\n  new_neurons_total?: InputMaybe<Numeric_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Number_Of_New_Neurons_Max_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  new_neurons_daily?: Maybe<Scalars['bigint']['output']>;\n  new_neurons_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Number_Of_New_Neurons_Min_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  new_neurons_daily?: Maybe<Scalars['bigint']['output']>;\n  new_neurons_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** Ordering options when selecting data from \"number_of_new_neurons\". */\nexport type Number_Of_New_Neurons_Order_By = {\n  date?: InputMaybe<Order_By>;\n  new_neurons_daily?: InputMaybe<Order_By>;\n  new_neurons_total?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"number_of_new_neurons\" */\nexport enum Number_Of_New_Neurons_Select_Column {\n  /** column name */\n  Date = 'date',\n  /** column name */\n  NewNeuronsDaily = 'new_neurons_daily',\n  /** column name */\n  NewNeuronsTotal = 'new_neurons_total'\n}\n\n/** aggregate stddev on columns */\nexport type Number_Of_New_Neurons_Stddev_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Number_Of_New_Neurons_Stddev_Pop_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Number_Of_New_Neurons_Stddev_Samp_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"number_of_new_neurons\" */\nexport type Number_Of_New_Neurons_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Number_Of_New_Neurons_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Number_Of_New_Neurons_Stream_Cursor_Value_Input = {\n  date?: InputMaybe<Scalars['date']['input']>;\n  new_neurons_daily?: InputMaybe<Scalars['bigint']['input']>;\n  new_neurons_total?: InputMaybe<Scalars['numeric']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Number_Of_New_Neurons_Sum_Fields = {\n  new_neurons_daily?: Maybe<Scalars['bigint']['output']>;\n  new_neurons_total?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Number_Of_New_Neurons_Var_Pop_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Number_Of_New_Neurons_Var_Samp_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Number_Of_New_Neurons_Variance_Fields = {\n  new_neurons_daily?: Maybe<Scalars['Float']['output']>;\n  new_neurons_total?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to compare columns of type \"numeric\". All fields are combined with logical 'AND'. */\nexport type Numeric_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['numeric']['input']>;\n  _gt?: InputMaybe<Scalars['numeric']['input']>;\n  _gte?: InputMaybe<Scalars['numeric']['input']>;\n  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['numeric']['input']>;\n  _lte?: InputMaybe<Scalars['numeric']['input']>;\n  _neq?: InputMaybe<Scalars['numeric']['input']>;\n  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\n/** columns and relationships of \"particles\" */\nexport type Particles = {\n  /** An object relationship */\n  account: Account;\n  /** An object relationship */\n  block: Block;\n  height: Scalars['bigint']['output'];\n  id: Scalars['Int']['output'];\n  neuron: Scalars['String']['output'];\n  particle: Scalars['String']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  transaction_hash: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"particles\" */\nexport type Particles_Aggregate = {\n  aggregate?: Maybe<Particles_Aggregate_Fields>;\n  nodes: Array<Particles>;\n};\n\nexport type Particles_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Particles_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Particles_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Particles_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Particles_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"particles\" */\nexport type Particles_Aggregate_Fields = {\n  avg?: Maybe<Particles_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Particles_Max_Fields>;\n  min?: Maybe<Particles_Min_Fields>;\n  stddev?: Maybe<Particles_Stddev_Fields>;\n  stddev_pop?: Maybe<Particles_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Particles_Stddev_Samp_Fields>;\n  sum?: Maybe<Particles_Sum_Fields>;\n  var_pop?: Maybe<Particles_Var_Pop_Fields>;\n  var_samp?: Maybe<Particles_Var_Samp_Fields>;\n  variance?: Maybe<Particles_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"particles\" */\nexport type Particles_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Particles_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"particles\" */\nexport type Particles_Aggregate_Order_By = {\n  avg?: InputMaybe<Particles_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Particles_Max_Order_By>;\n  min?: InputMaybe<Particles_Min_Order_By>;\n  stddev?: InputMaybe<Particles_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Particles_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Particles_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Particles_Sum_Order_By>;\n  var_pop?: InputMaybe<Particles_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Particles_Var_Samp_Order_By>;\n  variance?: InputMaybe<Particles_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Particles_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"particles\" */\nexport type Particles_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"particles\". All fields are combined with a logical 'AND'. */\nexport type Particles_Bool_Exp = {\n  _and?: InputMaybe<Array<Particles_Bool_Exp>>;\n  _not?: InputMaybe<Particles_Bool_Exp>;\n  _or?: InputMaybe<Array<Particles_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  neuron?: InputMaybe<String_Comparison_Exp>;\n  particle?: InputMaybe<String_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Particles_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  particle?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"particles\" */\nexport type Particles_Max_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Particles_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  particle?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"particles\" */\nexport type Particles_Min_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"particles\". */\nexport type Particles_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  block?: InputMaybe<Block_Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  particle?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"particles\" */\nexport enum Particles_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Neuron = 'neuron',\n  /** column name */\n  Particle = 'particle',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  TransactionHash = 'transaction_hash'\n}\n\n/** aggregate stddev on columns */\nexport type Particles_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"particles\" */\nexport type Particles_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Particles_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"particles\" */\nexport type Particles_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Particles_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"particles\" */\nexport type Particles_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"particles\" */\nexport type Particles_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Particles_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Particles_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n  neuron?: InputMaybe<Scalars['String']['input']>;\n  particle?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Particles_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** order by sum() on columns of table \"particles\" */\nexport type Particles_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Particles_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"particles\" */\nexport type Particles_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Particles_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"particles\" */\nexport type Particles_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Particles_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"particles\" */\nexport type Particles_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"pools\" */\nexport type Pools = {\n  a_denom: Scalars['String']['output'];\n  address: Scalars['String']['output'];\n  b_denom: Scalars['String']['output'];\n  pool_denom: Scalars['String']['output'];\n  pool_id: Scalars['bigint']['output'];\n  pool_name: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"pools\" */\nexport type Pools_Aggregate = {\n  aggregate?: Maybe<Pools_Aggregate_Fields>;\n  nodes: Array<Pools>;\n};\n\n/** aggregate fields of \"pools\" */\nexport type Pools_Aggregate_Fields = {\n  avg?: Maybe<Pools_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pools_Max_Fields>;\n  min?: Maybe<Pools_Min_Fields>;\n  stddev?: Maybe<Pools_Stddev_Fields>;\n  stddev_pop?: Maybe<Pools_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pools_Stddev_Samp_Fields>;\n  sum?: Maybe<Pools_Sum_Fields>;\n  var_pop?: Maybe<Pools_Var_Pop_Fields>;\n  var_samp?: Maybe<Pools_Var_Samp_Fields>;\n  variance?: Maybe<Pools_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pools\" */\nexport type Pools_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pools_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Pools_Avg_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"pools\". All fields are combined with a logical 'AND'. */\nexport type Pools_Bool_Exp = {\n  _and?: InputMaybe<Array<Pools_Bool_Exp>>;\n  _not?: InputMaybe<Pools_Bool_Exp>;\n  _or?: InputMaybe<Array<Pools_Bool_Exp>>;\n  a_denom?: InputMaybe<String_Comparison_Exp>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  b_denom?: InputMaybe<String_Comparison_Exp>;\n  pool_denom?: InputMaybe<String_Comparison_Exp>;\n  pool_id?: InputMaybe<Bigint_Comparison_Exp>;\n  pool_name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** columns and relationships of \"pools_liquidity\" */\nexport type Pools_Liquidity = {\n  liquidity_a: Scalars['bigint']['output'];\n  liquidity_b: Scalars['bigint']['output'];\n  pool_id: Scalars['bigint']['output'];\n  timestamp: Scalars['timestamp']['output'];\n};\n\n/** aggregated selection of \"pools_liquidity\" */\nexport type Pools_Liquidity_Aggregate = {\n  aggregate?: Maybe<Pools_Liquidity_Aggregate_Fields>;\n  nodes: Array<Pools_Liquidity>;\n};\n\n/** aggregate fields of \"pools_liquidity\" */\nexport type Pools_Liquidity_Aggregate_Fields = {\n  avg?: Maybe<Pools_Liquidity_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pools_Liquidity_Max_Fields>;\n  min?: Maybe<Pools_Liquidity_Min_Fields>;\n  stddev?: Maybe<Pools_Liquidity_Stddev_Fields>;\n  stddev_pop?: Maybe<Pools_Liquidity_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pools_Liquidity_Stddev_Samp_Fields>;\n  sum?: Maybe<Pools_Liquidity_Sum_Fields>;\n  var_pop?: Maybe<Pools_Liquidity_Var_Pop_Fields>;\n  var_samp?: Maybe<Pools_Liquidity_Var_Samp_Fields>;\n  variance?: Maybe<Pools_Liquidity_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pools_liquidity\" */\nexport type Pools_Liquidity_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pools_Liquidity_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Pools_Liquidity_Avg_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"pools_liquidity\". All fields are combined with a logical 'AND'. */\nexport type Pools_Liquidity_Bool_Exp = {\n  _and?: InputMaybe<Array<Pools_Liquidity_Bool_Exp>>;\n  _not?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n  _or?: InputMaybe<Array<Pools_Liquidity_Bool_Exp>>;\n  liquidity_a?: InputMaybe<Bigint_Comparison_Exp>;\n  liquidity_b?: InputMaybe<Bigint_Comparison_Exp>;\n  pool_id?: InputMaybe<Bigint_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Pools_Liquidity_Max_Fields = {\n  liquidity_a?: Maybe<Scalars['bigint']['output']>;\n  liquidity_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Pools_Liquidity_Min_Fields = {\n  liquidity_a?: Maybe<Scalars['bigint']['output']>;\n  liquidity_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** Ordering options when selecting data from \"pools_liquidity\". */\nexport type Pools_Liquidity_Order_By = {\n  liquidity_a?: InputMaybe<Order_By>;\n  liquidity_b?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"pools_liquidity\" */\nexport enum Pools_Liquidity_Select_Column {\n  /** column name */\n  LiquidityA = 'liquidity_a',\n  /** column name */\n  LiquidityB = 'liquidity_b',\n  /** column name */\n  PoolId = 'pool_id',\n  /** column name */\n  Timestamp = 'timestamp'\n}\n\n/** aggregate stddev on columns */\nexport type Pools_Liquidity_Stddev_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pools_Liquidity_Stddev_Pop_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pools_Liquidity_Stddev_Samp_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"pools_liquidity\" */\nexport type Pools_Liquidity_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pools_Liquidity_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pools_Liquidity_Stream_Cursor_Value_Input = {\n  liquidity_a?: InputMaybe<Scalars['bigint']['input']>;\n  liquidity_b?: InputMaybe<Scalars['bigint']['input']>;\n  pool_id?: InputMaybe<Scalars['bigint']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pools_Liquidity_Sum_Fields = {\n  liquidity_a?: Maybe<Scalars['bigint']['output']>;\n  liquidity_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pools_Liquidity_Var_Pop_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pools_Liquidity_Var_Samp_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Pools_Liquidity_Variance_Fields = {\n  liquidity_a?: Maybe<Scalars['Float']['output']>;\n  liquidity_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate max on columns */\nexport type Pools_Max_Fields = {\n  a_denom?: Maybe<Scalars['String']['output']>;\n  address?: Maybe<Scalars['String']['output']>;\n  b_denom?: Maybe<Scalars['String']['output']>;\n  pool_denom?: Maybe<Scalars['String']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  pool_name?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Pools_Min_Fields = {\n  a_denom?: Maybe<Scalars['String']['output']>;\n  address?: Maybe<Scalars['String']['output']>;\n  b_denom?: Maybe<Scalars['String']['output']>;\n  pool_denom?: Maybe<Scalars['String']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  pool_name?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"pools\". */\nexport type Pools_Order_By = {\n  a_denom?: InputMaybe<Order_By>;\n  address?: InputMaybe<Order_By>;\n  b_denom?: InputMaybe<Order_By>;\n  pool_denom?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  pool_name?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"pools_rates\" */\nexport type Pools_Rates = {\n  pool_id: Scalars['bigint']['output'];\n  rate: Scalars['String']['output'];\n  timestamp: Scalars['timestamp']['output'];\n};\n\n/** aggregated selection of \"pools_rates\" */\nexport type Pools_Rates_Aggregate = {\n  aggregate?: Maybe<Pools_Rates_Aggregate_Fields>;\n  nodes: Array<Pools_Rates>;\n};\n\n/** aggregate fields of \"pools_rates\" */\nexport type Pools_Rates_Aggregate_Fields = {\n  avg?: Maybe<Pools_Rates_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pools_Rates_Max_Fields>;\n  min?: Maybe<Pools_Rates_Min_Fields>;\n  stddev?: Maybe<Pools_Rates_Stddev_Fields>;\n  stddev_pop?: Maybe<Pools_Rates_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pools_Rates_Stddev_Samp_Fields>;\n  sum?: Maybe<Pools_Rates_Sum_Fields>;\n  var_pop?: Maybe<Pools_Rates_Var_Pop_Fields>;\n  var_samp?: Maybe<Pools_Rates_Var_Samp_Fields>;\n  variance?: Maybe<Pools_Rates_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pools_rates\" */\nexport type Pools_Rates_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pools_Rates_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Pools_Rates_Avg_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"pools_rates\". All fields are combined with a logical 'AND'. */\nexport type Pools_Rates_Bool_Exp = {\n  _and?: InputMaybe<Array<Pools_Rates_Bool_Exp>>;\n  _not?: InputMaybe<Pools_Rates_Bool_Exp>;\n  _or?: InputMaybe<Array<Pools_Rates_Bool_Exp>>;\n  pool_id?: InputMaybe<Bigint_Comparison_Exp>;\n  rate?: InputMaybe<String_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Pools_Rates_Max_Fields = {\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  rate?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Pools_Rates_Min_Fields = {\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  rate?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n};\n\n/** Ordering options when selecting data from \"pools_rates\". */\nexport type Pools_Rates_Order_By = {\n  pool_id?: InputMaybe<Order_By>;\n  rate?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"pools_rates\" */\nexport enum Pools_Rates_Select_Column {\n  /** column name */\n  PoolId = 'pool_id',\n  /** column name */\n  Rate = 'rate',\n  /** column name */\n  Timestamp = 'timestamp'\n}\n\n/** aggregate stddev on columns */\nexport type Pools_Rates_Stddev_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pools_Rates_Stddev_Pop_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pools_Rates_Stddev_Samp_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"pools_rates\" */\nexport type Pools_Rates_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pools_Rates_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pools_Rates_Stream_Cursor_Value_Input = {\n  pool_id?: InputMaybe<Scalars['bigint']['input']>;\n  rate?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pools_Rates_Sum_Fields = {\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pools_Rates_Var_Pop_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pools_Rates_Var_Samp_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Pools_Rates_Variance_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** select columns of table \"pools\" */\nexport enum Pools_Select_Column {\n  /** column name */\n  ADenom = 'a_denom',\n  /** column name */\n  Address = 'address',\n  /** column name */\n  BDenom = 'b_denom',\n  /** column name */\n  PoolDenom = 'pool_denom',\n  /** column name */\n  PoolId = 'pool_id',\n  /** column name */\n  PoolName = 'pool_name'\n}\n\n/** aggregate stddev on columns */\nexport type Pools_Stddev_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pools_Stddev_Pop_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pools_Stddev_Samp_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"pools\" */\nexport type Pools_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pools_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pools_Stream_Cursor_Value_Input = {\n  a_denom?: InputMaybe<Scalars['String']['input']>;\n  address?: InputMaybe<Scalars['String']['input']>;\n  b_denom?: InputMaybe<Scalars['String']['input']>;\n  pool_denom?: InputMaybe<Scalars['String']['input']>;\n  pool_id?: InputMaybe<Scalars['bigint']['input']>;\n  pool_name?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pools_Sum_Fields = {\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pools_Var_Pop_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pools_Var_Samp_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Pools_Variance_Fields = {\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"pools_volumes\" */\nexport type Pools_Volumes = {\n  fee_a: Scalars['bigint']['output'];\n  fee_b: Scalars['bigint']['output'];\n  pool_id: Scalars['bigint']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  volume_a: Scalars['bigint']['output'];\n  volume_b: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"pools_volumes\" */\nexport type Pools_Volumes_Aggregate = {\n  aggregate?: Maybe<Pools_Volumes_Aggregate_Fields>;\n  nodes: Array<Pools_Volumes>;\n};\n\n/** aggregate fields of \"pools_volumes\" */\nexport type Pools_Volumes_Aggregate_Fields = {\n  avg?: Maybe<Pools_Volumes_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pools_Volumes_Max_Fields>;\n  min?: Maybe<Pools_Volumes_Min_Fields>;\n  stddev?: Maybe<Pools_Volumes_Stddev_Fields>;\n  stddev_pop?: Maybe<Pools_Volumes_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pools_Volumes_Stddev_Samp_Fields>;\n  sum?: Maybe<Pools_Volumes_Sum_Fields>;\n  var_pop?: Maybe<Pools_Volumes_Var_Pop_Fields>;\n  var_samp?: Maybe<Pools_Volumes_Var_Samp_Fields>;\n  variance?: Maybe<Pools_Volumes_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pools_volumes\" */\nexport type Pools_Volumes_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pools_Volumes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Pools_Volumes_Avg_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"pools_volumes\". All fields are combined with a logical 'AND'. */\nexport type Pools_Volumes_Bool_Exp = {\n  _and?: InputMaybe<Array<Pools_Volumes_Bool_Exp>>;\n  _not?: InputMaybe<Pools_Volumes_Bool_Exp>;\n  _or?: InputMaybe<Array<Pools_Volumes_Bool_Exp>>;\n  fee_a?: InputMaybe<Bigint_Comparison_Exp>;\n  fee_b?: InputMaybe<Bigint_Comparison_Exp>;\n  pool_id?: InputMaybe<Bigint_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  volume_a?: InputMaybe<Bigint_Comparison_Exp>;\n  volume_b?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Pools_Volumes_Max_Fields = {\n  fee_a?: Maybe<Scalars['bigint']['output']>;\n  fee_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  volume_a?: Maybe<Scalars['bigint']['output']>;\n  volume_b?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Pools_Volumes_Min_Fields = {\n  fee_a?: Maybe<Scalars['bigint']['output']>;\n  fee_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  volume_a?: Maybe<Scalars['bigint']['output']>;\n  volume_b?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"pools_volumes\". */\nexport type Pools_Volumes_Order_By = {\n  fee_a?: InputMaybe<Order_By>;\n  fee_b?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  volume_a?: InputMaybe<Order_By>;\n  volume_b?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"pools_volumes\" */\nexport enum Pools_Volumes_Select_Column {\n  /** column name */\n  FeeA = 'fee_a',\n  /** column name */\n  FeeB = 'fee_b',\n  /** column name */\n  PoolId = 'pool_id',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  VolumeA = 'volume_a',\n  /** column name */\n  VolumeB = 'volume_b'\n}\n\n/** aggregate stddev on columns */\nexport type Pools_Volumes_Stddev_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pools_Volumes_Stddev_Pop_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pools_Volumes_Stddev_Samp_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"pools_volumes\" */\nexport type Pools_Volumes_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pools_Volumes_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pools_Volumes_Stream_Cursor_Value_Input = {\n  fee_a?: InputMaybe<Scalars['bigint']['input']>;\n  fee_b?: InputMaybe<Scalars['bigint']['input']>;\n  pool_id?: InputMaybe<Scalars['bigint']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  volume_a?: InputMaybe<Scalars['bigint']['input']>;\n  volume_b?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pools_Volumes_Sum_Fields = {\n  fee_a?: Maybe<Scalars['bigint']['output']>;\n  fee_b?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  volume_a?: Maybe<Scalars['bigint']['output']>;\n  volume_b?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pools_Volumes_Var_Pop_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pools_Volumes_Var_Samp_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Pools_Volumes_Variance_Fields = {\n  fee_a?: Maybe<Scalars['Float']['output']>;\n  fee_b?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n  volume_a?: Maybe<Scalars['Float']['output']>;\n  volume_b?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"pre_commit\" */\nexport type Pre_Commit = {\n  height: Scalars['bigint']['output'];\n  proposer_priority: Scalars['bigint']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  /** An object relationship */\n  validator: Validator;\n  validator_address: Scalars['String']['output'];\n  voting_power: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"pre_commit\" */\nexport type Pre_Commit_Aggregate = {\n  aggregate?: Maybe<Pre_Commit_Aggregate_Fields>;\n  nodes: Array<Pre_Commit>;\n};\n\nexport type Pre_Commit_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Pre_Commit_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Pre_Commit_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Pre_Commit_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"pre_commit\" */\nexport type Pre_Commit_Aggregate_Fields = {\n  avg?: Maybe<Pre_Commit_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pre_Commit_Max_Fields>;\n  min?: Maybe<Pre_Commit_Min_Fields>;\n  stddev?: Maybe<Pre_Commit_Stddev_Fields>;\n  stddev_pop?: Maybe<Pre_Commit_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pre_Commit_Stddev_Samp_Fields>;\n  sum?: Maybe<Pre_Commit_Sum_Fields>;\n  var_pop?: Maybe<Pre_Commit_Var_Pop_Fields>;\n  var_samp?: Maybe<Pre_Commit_Var_Samp_Fields>;\n  variance?: Maybe<Pre_Commit_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pre_commit\" */\nexport type Pre_Commit_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"pre_commit\" */\nexport type Pre_Commit_Aggregate_Order_By = {\n  avg?: InputMaybe<Pre_Commit_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Pre_Commit_Max_Order_By>;\n  min?: InputMaybe<Pre_Commit_Min_Order_By>;\n  stddev?: InputMaybe<Pre_Commit_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Pre_Commit_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Pre_Commit_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Pre_Commit_Sum_Order_By>;\n  var_pop?: InputMaybe<Pre_Commit_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Pre_Commit_Var_Samp_Order_By>;\n  variance?: InputMaybe<Pre_Commit_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Pre_Commit_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"pre_commit\". All fields are combined with a logical 'AND'. */\nexport type Pre_Commit_Bool_Exp = {\n  _and?: InputMaybe<Array<Pre_Commit_Bool_Exp>>;\n  _not?: InputMaybe<Pre_Commit_Bool_Exp>;\n  _or?: InputMaybe<Array<Pre_Commit_Bool_Exp>>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  proposer_priority?: InputMaybe<Bigint_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  validator?: InputMaybe<Validator_Bool_Exp>;\n  validator_address?: InputMaybe<String_Comparison_Exp>;\n  voting_power?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Pre_Commit_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  proposer_priority?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  validator_address?: Maybe<Scalars['String']['output']>;\n  voting_power?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by max() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Max_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  validator_address?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Pre_Commit_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  proposer_priority?: Maybe<Scalars['bigint']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  validator_address?: Maybe<Scalars['String']['output']>;\n  voting_power?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by min() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Min_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  validator_address?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"pre_commit\". */\nexport type Pre_Commit_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  validator?: InputMaybe<Validator_Order_By>;\n  validator_address?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"pre_commit\" */\nexport enum Pre_Commit_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  ProposerPriority = 'proposer_priority',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  ValidatorAddress = 'validator_address',\n  /** column name */\n  VotingPower = 'voting_power'\n}\n\n/** aggregate stddev on columns */\nexport type Pre_Commit_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pre_Commit_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pre_Commit_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"pre_commit\" */\nexport type Pre_Commit_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pre_Commit_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pre_Commit_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  proposer_priority?: InputMaybe<Scalars['bigint']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  validator_address?: InputMaybe<Scalars['String']['input']>;\n  voting_power?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pre_Commit_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  proposer_priority?: Maybe<Scalars['bigint']['output']>;\n  voting_power?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pre_Commit_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pre_Commit_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Pre_Commit_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  proposer_priority?: Maybe<Scalars['Float']['output']>;\n  voting_power?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"pre_commit\" */\nexport type Pre_Commit_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  proposer_priority?: InputMaybe<Order_By>;\n  voting_power?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"pruning\" */\nexport type Pruning = {\n  last_pruned_height: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"pruning\" */\nexport type Pruning_Aggregate = {\n  aggregate?: Maybe<Pruning_Aggregate_Fields>;\n  nodes: Array<Pruning>;\n};\n\n/** aggregate fields of \"pruning\" */\nexport type Pruning_Aggregate_Fields = {\n  avg?: Maybe<Pruning_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Pruning_Max_Fields>;\n  min?: Maybe<Pruning_Min_Fields>;\n  stddev?: Maybe<Pruning_Stddev_Fields>;\n  stddev_pop?: Maybe<Pruning_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Pruning_Stddev_Samp_Fields>;\n  sum?: Maybe<Pruning_Sum_Fields>;\n  var_pop?: Maybe<Pruning_Var_Pop_Fields>;\n  var_samp?: Maybe<Pruning_Var_Samp_Fields>;\n  variance?: Maybe<Pruning_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"pruning\" */\nexport type Pruning_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Pruning_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Pruning_Avg_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"pruning\". All fields are combined with a logical 'AND'. */\nexport type Pruning_Bool_Exp = {\n  _and?: InputMaybe<Array<Pruning_Bool_Exp>>;\n  _not?: InputMaybe<Pruning_Bool_Exp>;\n  _or?: InputMaybe<Array<Pruning_Bool_Exp>>;\n  last_pruned_height?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Pruning_Max_Fields = {\n  last_pruned_height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Pruning_Min_Fields = {\n  last_pruned_height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"pruning\". */\nexport type Pruning_Order_By = {\n  last_pruned_height?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"pruning\" */\nexport enum Pruning_Select_Column {\n  /** column name */\n  LastPrunedHeight = 'last_pruned_height'\n}\n\n/** aggregate stddev on columns */\nexport type Pruning_Stddev_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Pruning_Stddev_Pop_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Pruning_Stddev_Samp_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"pruning\" */\nexport type Pruning_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Pruning_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Pruning_Stream_Cursor_Value_Input = {\n  last_pruned_height?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Pruning_Sum_Fields = {\n  last_pruned_height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Pruning_Var_Pop_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Pruning_Var_Samp_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Pruning_Variance_Fields = {\n  last_pruned_height?: Maybe<Scalars['Float']['output']>;\n};\n\nexport type Query_Root = {\n  /** fetch data from the table: \"_transaction\" */\n  _transaction: Array<_Transaction>;\n  /** fetch aggregated fields from the table: \"_transaction\" */\n  _transaction_aggregate: _Transaction_Aggregate;\n  /** fetch data from the table: \"_uptime_temp\" */\n  _uptime_temp: Array<_Uptime_Temp>;\n  /** fetch aggregated fields from the table: \"_uptime_temp\" */\n  _uptime_temp_aggregate: _Uptime_Temp_Aggregate;\n  /** fetch data from the table: \"account\" */\n  account: Array<Account>;\n  /** fetch aggregated fields from the table: \"account\" */\n  account_aggregate: Account_Aggregate;\n  /** fetch data from the table: \"account_balance\" */\n  account_balance: Array<Account_Balance>;\n  /** fetch aggregated fields from the table: \"account_balance\" */\n  account_balance_aggregate: Account_Balance_Aggregate;\n  /** fetch data from the table: \"account_balance\" using primary key columns */\n  account_balance_by_pk?: Maybe<Account_Balance>;\n  /** fetch data from the table: \"account\" using primary key columns */\n  account_by_pk?: Maybe<Account>;\n  /** fetch data from the table: \"average_block_time_from_genesis\" */\n  average_block_time_from_genesis: Array<Average_Block_Time_From_Genesis>;\n  /** fetch aggregated fields from the table: \"average_block_time_from_genesis\" */\n  average_block_time_from_genesis_aggregate: Average_Block_Time_From_Genesis_Aggregate;\n  /** fetch data from the table: \"average_block_time_from_genesis\" using primary key columns */\n  average_block_time_from_genesis_by_pk?: Maybe<Average_Block_Time_From_Genesis>;\n  /** fetch data from the table: \"average_block_time_per_day\" */\n  average_block_time_per_day: Array<Average_Block_Time_Per_Day>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_day\" */\n  average_block_time_per_day_aggregate: Average_Block_Time_Per_Day_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_day\" using primary key columns */\n  average_block_time_per_day_by_pk?: Maybe<Average_Block_Time_Per_Day>;\n  /** fetch data from the table: \"average_block_time_per_hour\" */\n  average_block_time_per_hour: Array<Average_Block_Time_Per_Hour>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_hour\" */\n  average_block_time_per_hour_aggregate: Average_Block_Time_Per_Hour_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_hour\" using primary key columns */\n  average_block_time_per_hour_by_pk?: Maybe<Average_Block_Time_Per_Hour>;\n  /** fetch data from the table: \"average_block_time_per_minute\" */\n  average_block_time_per_minute: Array<Average_Block_Time_Per_Minute>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_minute\" */\n  average_block_time_per_minute_aggregate: Average_Block_Time_Per_Minute_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_minute\" using primary key columns */\n  average_block_time_per_minute_by_pk?: Maybe<Average_Block_Time_Per_Minute>;\n  /** fetch data from the table: \"block\" */\n  block: Array<Block>;\n  /** fetch aggregated fields from the table: \"block\" */\n  block_aggregate: Block_Aggregate;\n  /** fetch data from the table: \"block\" using primary key columns */\n  block_by_pk?: Maybe<Block>;\n  /** fetch data from the table: \"contracts\" */\n  contracts: Array<Contracts>;\n  /** fetch aggregated fields from the table: \"contracts\" */\n  contracts_aggregate: Contracts_Aggregate;\n  /** fetch data from the table: \"contracts\" using primary key columns */\n  contracts_by_pk?: Maybe<Contracts>;\n  /** fetch data from the table: \"cyb_cohort\" */\n  cyb_cohort: Array<Cyb_Cohort>;\n  /** fetch aggregated fields from the table: \"cyb_cohort\" */\n  cyb_cohort_aggregate: Cyb_Cohort_Aggregate;\n  /** fetch data from the table: \"cyber_gift_proofs\" */\n  cyber_gift_proofs: Array<Cyber_Gift_Proofs>;\n  /** fetch aggregated fields from the table: \"cyber_gift_proofs\" */\n  cyber_gift_proofs_aggregate: Cyber_Gift_Proofs_Aggregate;\n  /** An array relationship */\n  cyberlinks: Array<Cyberlinks>;\n  /** An aggregate relationship */\n  cyberlinks_aggregate: Cyberlinks_Aggregate;\n  /** fetch data from the table: \"cyberlinks\" using primary key columns */\n  cyberlinks_by_pk?: Maybe<Cyberlinks>;\n  /** fetch data from the table: \"cyberlinks_stats\" */\n  cyberlinks_stats: Array<Cyberlinks_Stats>;\n  /** fetch aggregated fields from the table: \"cyberlinks_stats\" */\n  cyberlinks_stats_aggregate: Cyberlinks_Stats_Aggregate;\n  /** fetch data from the table: \"daily_amount_of_active_neurons\" */\n  daily_amount_of_active_neurons: Array<Daily_Amount_Of_Active_Neurons>;\n  /** fetch aggregated fields from the table: \"daily_amount_of_active_neurons\" */\n  daily_amount_of_active_neurons_aggregate: Daily_Amount_Of_Active_Neurons_Aggregate;\n  /** fetch data from the table: \"daily_amount_of_used_gas\" */\n  daily_amount_of_used_gas: Array<Daily_Amount_Of_Used_Gas>;\n  /** fetch aggregated fields from the table: \"daily_amount_of_used_gas\" */\n  daily_amount_of_used_gas_aggregate: Daily_Amount_Of_Used_Gas_Aggregate;\n  /** fetch data from the table: \"daily_number_of_transactions\" */\n  daily_number_of_transactions: Array<Daily_Number_Of_Transactions>;\n  /** fetch aggregated fields from the table: \"daily_number_of_transactions\" */\n  daily_number_of_transactions_aggregate: Daily_Number_Of_Transactions_Aggregate;\n  /** fetch data from the table: \"first_10_cyberlink\" */\n  first_10_cyberlink: Array<First_10_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_10_cyberlink\" */\n  first_10_cyberlink_aggregate: First_10_Cyberlink_Aggregate;\n  /** fetch data from the table: \"first_100_cyberlink\" */\n  first_100_cyberlink: Array<First_100_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_100_cyberlink\" */\n  first_100_cyberlink_aggregate: First_100_Cyberlink_Aggregate;\n  /** fetch data from the table: \"first_cyberlink\" */\n  first_cyberlink: Array<First_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_cyberlink\" */\n  first_cyberlink_aggregate: First_Cyberlink_Aggregate;\n  /** fetch data from the table: \"first_hero_hired\" */\n  first_hero_hired: Array<First_Hero_Hired>;\n  /** fetch aggregated fields from the table: \"first_hero_hired\" */\n  first_hero_hired_aggregate: First_Hero_Hired_Aggregate;\n  /** fetch data from the table: \"first_investmint\" */\n  first_investmint: Array<First_Investmint>;\n  /** fetch aggregated fields from the table: \"first_investmint\" */\n  first_investmint_aggregate: First_Investmint_Aggregate;\n  /** fetch data from the table: \"first_neuron_activation\" */\n  first_neuron_activation: Array<First_Neuron_Activation>;\n  /** fetch aggregated fields from the table: \"first_neuron_activation\" */\n  first_neuron_activation_aggregate: First_Neuron_Activation_Aggregate;\n  /** fetch data from the table: \"first_swap\" */\n  first_swap: Array<First_Swap>;\n  /** fetch aggregated fields from the table: \"first_swap\" */\n  first_swap_aggregate: First_Swap_Aggregate;\n  /** fetch data from the table: \"follow_stats\" */\n  follow_stats: Array<Follow_Stats>;\n  /** fetch aggregated fields from the table: \"follow_stats\" */\n  follow_stats_aggregate: Follow_Stats_Aggregate;\n  /** fetch data from the table: \"genesis\" */\n  genesis: Array<Genesis>;\n  /** fetch data from the table: \"genesis_accounts\" */\n  genesis_accounts: Array<Genesis_Accounts>;\n  /** fetch aggregated fields from the table: \"genesis_accounts\" */\n  genesis_accounts_aggregate: Genesis_Accounts_Aggregate;\n  /** fetch data from the table: \"genesis_accounts\" using primary key columns */\n  genesis_accounts_by_pk?: Maybe<Genesis_Accounts>;\n  /** fetch aggregated fields from the table: \"genesis\" */\n  genesis_aggregate: Genesis_Aggregate;\n  /** fetch data from the table: \"genesis\" using primary key columns */\n  genesis_by_pk?: Maybe<Genesis>;\n  /** fetch data from the table: \"genesis_neurons_activation\" */\n  genesis_neurons_activation: Array<Genesis_Neurons_Activation>;\n  /** fetch aggregated fields from the table: \"genesis_neurons_activation\" */\n  genesis_neurons_activation_aggregate: Genesis_Neurons_Activation_Aggregate;\n  /** An array relationship */\n  investmints: Array<Investmints>;\n  /** An aggregate relationship */\n  investmints_aggregate: Investmints_Aggregate;\n  /** fetch data from the table: \"investmints\" using primary key columns */\n  investmints_by_pk?: Maybe<Investmints>;\n  /** fetch data from the table: \"message\" */\n  message: Array<Message>;\n  /** fetch data from the table: \"message_155\" */\n  message_155: Array<Message_155>;\n  /** fetch aggregated fields from the table: \"message_155\" */\n  message_155_aggregate: Message_155_Aggregate;\n  /** fetch aggregated fields from the table: \"message\" */\n  message_aggregate: Message_Aggregate;\n  /** fetch data from the table: \"message_type\" */\n  message_type: Array<Message_Type>;\n  /** fetch aggregated fields from the table: \"message_type\" */\n  message_type_aggregate: Message_Type_Aggregate;\n  /** execute function \"messages_by_address\" which returns \"message\" */\n  messages_by_address: Array<Message>;\n  /** execute function \"messages_by_address\" and query aggregates on result of table type \"message\" */\n  messages_by_address_aggregate: Message_Aggregate;\n  /** execute function \"messages_by_type\" which returns \"message\" */\n  messages_by_type: Array<Message>;\n  /** execute function \"messages_by_type\" and query aggregates on result of table type \"message\" */\n  messages_by_type_aggregate: Message_Aggregate;\n  /** fetch data from the table: \"modules\" */\n  modules: Array<Modules>;\n  /** fetch aggregated fields from the table: \"modules\" */\n  modules_aggregate: Modules_Aggregate;\n  /** fetch data from the table: \"modules\" using primary key columns */\n  modules_by_pk?: Maybe<Modules>;\n  /** fetch data from the table: \"neuron_activation_source\" */\n  neuron_activation_source: Array<Neuron_Activation_Source>;\n  /** fetch aggregated fields from the table: \"neuron_activation_source\" */\n  neuron_activation_source_aggregate: Neuron_Activation_Source_Aggregate;\n  /** fetch data from the table: \"number_of_new_neurons\" */\n  number_of_new_neurons: Array<Number_Of_New_Neurons>;\n  /** fetch aggregated fields from the table: \"number_of_new_neurons\" */\n  number_of_new_neurons_aggregate: Number_Of_New_Neurons_Aggregate;\n  /** An array relationship */\n  particles: Array<Particles>;\n  /** An aggregate relationship */\n  particles_aggregate: Particles_Aggregate;\n  /** fetch data from the table: \"particles\" using primary key columns */\n  particles_by_pk?: Maybe<Particles>;\n  /** fetch data from the table: \"pools\" */\n  pools: Array<Pools>;\n  /** fetch aggregated fields from the table: \"pools\" */\n  pools_aggregate: Pools_Aggregate;\n  /** fetch data from the table: \"pools\" using primary key columns */\n  pools_by_pk?: Maybe<Pools>;\n  /** fetch data from the table: \"pools_liquidity\" */\n  pools_liquidity: Array<Pools_Liquidity>;\n  /** fetch aggregated fields from the table: \"pools_liquidity\" */\n  pools_liquidity_aggregate: Pools_Liquidity_Aggregate;\n  /** fetch data from the table: \"pools_rates\" */\n  pools_rates: Array<Pools_Rates>;\n  /** fetch aggregated fields from the table: \"pools_rates\" */\n  pools_rates_aggregate: Pools_Rates_Aggregate;\n  /** fetch data from the table: \"pools_volumes\" */\n  pools_volumes: Array<Pools_Volumes>;\n  /** fetch aggregated fields from the table: \"pools_volumes\" */\n  pools_volumes_aggregate: Pools_Volumes_Aggregate;\n  /** fetch data from the table: \"pre_commit\" */\n  pre_commit: Array<Pre_Commit>;\n  /** fetch aggregated fields from the table: \"pre_commit\" */\n  pre_commit_aggregate: Pre_Commit_Aggregate;\n  /** fetch data from the table: \"pruning\" */\n  pruning: Array<Pruning>;\n  /** fetch aggregated fields from the table: \"pruning\" */\n  pruning_aggregate: Pruning_Aggregate;\n  /** An array relationship */\n  routes: Array<Routes>;\n  /** An aggregate relationship */\n  routes_aggregate: Routes_Aggregate;\n  /** fetch data from the table: \"routes\" using primary key columns */\n  routes_by_pk?: Maybe<Routes>;\n  /** fetch data from the table: \"supply\" */\n  supply: Array<Supply>;\n  /** fetch aggregated fields from the table: \"supply\" */\n  supply_aggregate: Supply_Aggregate;\n  /** fetch data from the table: \"supply\" using primary key columns */\n  supply_by_pk?: Maybe<Supply>;\n  /** An array relationship */\n  swaps: Array<Swaps>;\n  /** An aggregate relationship */\n  swaps_aggregate: Swaps_Aggregate;\n  /** fetch data from the table: \"swaps\" using primary key columns */\n  swaps_by_pk?: Maybe<Swaps>;\n  /** fetch data from the table: \"today_top_txs\" */\n  today_top_txs: Array<Today_Top_Txs>;\n  /** fetch aggregated fields from the table: \"today_top_txs\" */\n  today_top_txs_aggregate: Today_Top_Txs_Aggregate;\n  /** fetch data from the table: \"top_10_of_active_neurons_week\" */\n  top_10_of_active_neurons_week: Array<Top_10_Of_Active_Neurons_Week>;\n  /** fetch aggregated fields from the table: \"top_10_of_active_neurons_week\" */\n  top_10_of_active_neurons_week_aggregate: Top_10_Of_Active_Neurons_Week_Aggregate;\n  /** fetch data from the table: \"top_first_txs\" */\n  top_first_txs: Array<Top_First_Txs>;\n  /** fetch aggregated fields from the table: \"top_first_txs\" */\n  top_first_txs_aggregate: Top_First_Txs_Aggregate;\n  /** fetch data from the table: \"top_leaders\" */\n  top_leaders: Array<Top_Leaders>;\n  /** fetch aggregated fields from the table: \"top_leaders\" */\n  top_leaders_aggregate: Top_Leaders_Aggregate;\n  /** fetch data from the table: \"top_txs\" */\n  top_txs: Array<Top_Txs>;\n  /** fetch aggregated fields from the table: \"top_txs\" */\n  top_txs_aggregate: Top_Txs_Aggregate;\n  /** fetch data from the table: \"transaction\" */\n  transaction: Array<Transaction>;\n  /** fetch data from the table: \"transaction_155\" */\n  transaction_155: Array<Transaction_155>;\n  /** fetch aggregated fields from the table: \"transaction_155\" */\n  transaction_155_aggregate: Transaction_155_Aggregate;\n  /** fetch aggregated fields from the table: \"transaction\" */\n  transaction_aggregate: Transaction_Aggregate;\n  /** fetch data from the table: \"tweets_stats\" */\n  tweets_stats: Array<Tweets_Stats>;\n  /** fetch aggregated fields from the table: \"tweets_stats\" */\n  tweets_stats_aggregate: Tweets_Stats_Aggregate;\n  /** fetch data from the table: \"txs_ranked\" */\n  txs_ranked: Array<Txs_Ranked>;\n  /** fetch aggregated fields from the table: \"txs_ranked\" */\n  txs_ranked_aggregate: Txs_Ranked_Aggregate;\n  /** fetch data from the table: \"uptime\" */\n  uptime: Array<Uptime>;\n  /** fetch aggregated fields from the table: \"uptime\" */\n  uptime_aggregate: Uptime_Aggregate;\n  /** fetch data from the table: \"validator\" */\n  validator: Array<Validator>;\n  /** fetch aggregated fields from the table: \"validator\" */\n  validator_aggregate: Validator_Aggregate;\n  /** fetch data from the table: \"validator\" using primary key columns */\n  validator_by_pk?: Maybe<Validator>;\n  /** fetch data from the table: \"vesting_account\" */\n  vesting_account: Array<Vesting_Account>;\n  /** fetch aggregated fields from the table: \"vesting_account\" */\n  vesting_account_aggregate: Vesting_Account_Aggregate;\n  /** fetch data from the table: \"vesting_account\" using primary key columns */\n  vesting_account_by_pk?: Maybe<Vesting_Account>;\n  /** fetch data from the table: \"vesting_period\" */\n  vesting_period: Array<Vesting_Period>;\n  /** fetch aggregated fields from the table: \"vesting_period\" */\n  vesting_period_aggregate: Vesting_Period_Aggregate;\n  /** fetch data from the table: \"week_redelegation\" */\n  week_redelegation: Array<Week_Redelegation>;\n  /** fetch aggregated fields from the table: \"week_redelegation\" */\n  week_redelegation_aggregate: Week_Redelegation_Aggregate;\n  /** fetch data from the table: \"week_undelegation\" */\n  week_undelegation: Array<Week_Undelegation>;\n  /** fetch aggregated fields from the table: \"week_undelegation\" */\n  week_undelegation_aggregate: Week_Undelegation_Aggregate;\n};\n\n\nexport type Query_Root_TransactionArgs = {\n  distinct_on?: InputMaybe<Array<_Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Transaction_Order_By>>;\n  where?: InputMaybe<_Transaction_Bool_Exp>;\n};\n\n\nexport type Query_Root_Transaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<_Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Transaction_Order_By>>;\n  where?: InputMaybe<_Transaction_Bool_Exp>;\n};\n\n\nexport type Query_Root_Uptime_TempArgs = {\n  distinct_on?: InputMaybe<Array<_Uptime_Temp_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Uptime_Temp_Order_By>>;\n  where?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n};\n\n\nexport type Query_Root_Uptime_Temp_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<_Uptime_Temp_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Uptime_Temp_Order_By>>;\n  where?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n};\n\n\nexport type Query_RootAccountArgs = {\n  distinct_on?: InputMaybe<Array<Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Order_By>>;\n  where?: InputMaybe<Account_Bool_Exp>;\n};\n\n\nexport type Query_RootAccount_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Order_By>>;\n  where?: InputMaybe<Account_Bool_Exp>;\n};\n\n\nexport type Query_RootAccount_BalanceArgs = {\n  distinct_on?: InputMaybe<Array<Account_Balance_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Balance_Order_By>>;\n  where?: InputMaybe<Account_Balance_Bool_Exp>;\n};\n\n\nexport type Query_RootAccount_Balance_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Account_Balance_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Balance_Order_By>>;\n  where?: InputMaybe<Account_Balance_Bool_Exp>;\n};\n\n\nexport type Query_RootAccount_Balance_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Query_RootAccount_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Query_RootAverage_Block_Time_From_GenesisArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_From_Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_From_Genesis_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_From_Genesis_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_From_Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_From_Genesis_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_From_Genesis_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_DayArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Day_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Day_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Day_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Day_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Day_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Day_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_HourArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Hour_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Hour_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Hour_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Hour_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Hour_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Hour_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_MinuteArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Minute_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Minute_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Minute_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Minute_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Minute_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n};\n\n\nexport type Query_RootAverage_Block_Time_Per_Minute_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootBlockArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\nexport type Query_RootBlock_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\nexport type Query_RootBlock_By_PkArgs = {\n  height: Scalars['bigint']['input'];\n};\n\n\nexport type Query_RootContractsArgs = {\n  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Contracts_Order_By>>;\n  where?: InputMaybe<Contracts_Bool_Exp>;\n};\n\n\nexport type Query_RootContracts_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Contracts_Order_By>>;\n  where?: InputMaybe<Contracts_Bool_Exp>;\n};\n\n\nexport type Query_RootContracts_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Query_RootCyb_CohortArgs = {\n  distinct_on?: InputMaybe<Array<Cyb_Cohort_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyb_Cohort_Order_By>>;\n  where?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n};\n\n\nexport type Query_RootCyb_Cohort_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyb_Cohort_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyb_Cohort_Order_By>>;\n  where?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n};\n\n\nexport type Query_RootCyber_Gift_ProofsArgs = {\n  distinct_on?: InputMaybe<Array<Cyber_Gift_Proofs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyber_Gift_Proofs_Order_By>>;\n  where?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n};\n\n\nexport type Query_RootCyber_Gift_Proofs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyber_Gift_Proofs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyber_Gift_Proofs_Order_By>>;\n  where?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n};\n\n\nexport type Query_RootCyberlinksArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\nexport type Query_RootCyberlinks_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\nexport type Query_RootCyberlinks_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Query_RootCyberlinks_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Stats_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootCyberlinks_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Stats_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Amount_Of_Active_NeuronsArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Amount_Of_Active_Neurons_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Amount_Of_Used_GasArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Amount_Of_Used_Gas_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Number_Of_TransactionsArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Number_Of_Transactions_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Number_Of_Transactions_Order_By>>;\n  where?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n};\n\n\nexport type Query_RootDaily_Number_Of_Transactions_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Number_Of_Transactions_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Number_Of_Transactions_Order_By>>;\n  where?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_10_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_10_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_10_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_10_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_10_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_10_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_100_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_100_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_100_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_100_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_100_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_100_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Hero_HiredArgs = {\n  distinct_on?: InputMaybe<Array<First_Hero_Hired_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Hero_Hired_Order_By>>;\n  where?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Hero_Hired_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Hero_Hired_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Hero_Hired_Order_By>>;\n  where?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_InvestmintArgs = {\n  distinct_on?: InputMaybe<Array<First_Investmint_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Investmint_Order_By>>;\n  where?: InputMaybe<First_Investmint_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Investmint_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Investmint_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Investmint_Order_By>>;\n  where?: InputMaybe<First_Investmint_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Neuron_ActivationArgs = {\n  distinct_on?: InputMaybe<Array<First_Neuron_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Neuron_Activation_Order_By>>;\n  where?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Neuron_Activation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Neuron_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Neuron_Activation_Order_By>>;\n  where?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_SwapArgs = {\n  distinct_on?: InputMaybe<Array<First_Swap_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Swap_Order_By>>;\n  where?: InputMaybe<First_Swap_Bool_Exp>;\n};\n\n\nexport type Query_RootFirst_Swap_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Swap_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Swap_Order_By>>;\n  where?: InputMaybe<First_Swap_Bool_Exp>;\n};\n\n\nexport type Query_RootFollow_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Follow_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Follow_Stats_Order_By>>;\n  where?: InputMaybe<Follow_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootFollow_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Follow_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Follow_Stats_Order_By>>;\n  where?: InputMaybe<Follow_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesisArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Order_By>>;\n  where?: InputMaybe<Genesis_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesis_AccountsArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Accounts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Accounts_Order_By>>;\n  where?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesis_Accounts_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Accounts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Accounts_Order_By>>;\n  where?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesis_Accounts_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Query_RootGenesis_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Order_By>>;\n  where?: InputMaybe<Genesis_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesis_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootGenesis_Neurons_ActivationArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Neurons_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Neurons_Activation_Order_By>>;\n  where?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n};\n\n\nexport type Query_RootGenesis_Neurons_Activation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Neurons_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Neurons_Activation_Order_By>>;\n  where?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n};\n\n\nexport type Query_RootInvestmintsArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\nexport type Query_RootInvestmints_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\nexport type Query_RootInvestmints_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Query_RootMessageArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_155Args = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_155_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_TypeArgs = {\n  distinct_on?: InputMaybe<Array<Message_Type_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Type_Order_By>>;\n  where?: InputMaybe<Message_Type_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_Type_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Type_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Type_Order_By>>;\n  where?: InputMaybe<Message_Type_Bool_Exp>;\n};\n\n\nexport type Query_RootMessages_By_AddressArgs = {\n  args: Messages_By_Address_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessages_By_Address_AggregateArgs = {\n  args: Messages_By_Address_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessages_By_TypeArgs = {\n  args: Messages_By_Type_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessages_By_Type_AggregateArgs = {\n  args: Messages_By_Type_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootModulesArgs = {\n  distinct_on?: InputMaybe<Array<Modules_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Modules_Order_By>>;\n  where?: InputMaybe<Modules_Bool_Exp>;\n};\n\n\nexport type Query_RootModules_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Modules_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Modules_Order_By>>;\n  where?: InputMaybe<Modules_Bool_Exp>;\n};\n\n\nexport type Query_RootModules_By_PkArgs = {\n  module_name: Scalars['String']['input'];\n};\n\n\nexport type Query_RootNeuron_Activation_SourceArgs = {\n  distinct_on?: InputMaybe<Array<Neuron_Activation_Source_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Neuron_Activation_Source_Order_By>>;\n  where?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n};\n\n\nexport type Query_RootNeuron_Activation_Source_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Neuron_Activation_Source_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Neuron_Activation_Source_Order_By>>;\n  where?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n};\n\n\nexport type Query_RootNumber_Of_New_NeuronsArgs = {\n  distinct_on?: InputMaybe<Array<Number_Of_New_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Number_Of_New_Neurons_Order_By>>;\n  where?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n};\n\n\nexport type Query_RootNumber_Of_New_Neurons_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Number_Of_New_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Number_Of_New_Neurons_Order_By>>;\n  where?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n};\n\n\nexport type Query_RootParticlesArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\nexport type Query_RootParticles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\nexport type Query_RootParticles_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Query_RootPoolsArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Order_By>>;\n  where?: InputMaybe<Pools_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Order_By>>;\n  where?: InputMaybe<Pools_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_By_PkArgs = {\n  pool_id: Scalars['bigint']['input'];\n};\n\n\nexport type Query_RootPools_LiquidityArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Liquidity_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Liquidity_Order_By>>;\n  where?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_Liquidity_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Liquidity_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Liquidity_Order_By>>;\n  where?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_RatesArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Rates_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Rates_Order_By>>;\n  where?: InputMaybe<Pools_Rates_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_Rates_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Rates_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Rates_Order_By>>;\n  where?: InputMaybe<Pools_Rates_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_VolumesArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Volumes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Volumes_Order_By>>;\n  where?: InputMaybe<Pools_Volumes_Bool_Exp>;\n};\n\n\nexport type Query_RootPools_Volumes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Volumes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Volumes_Order_By>>;\n  where?: InputMaybe<Pools_Volumes_Bool_Exp>;\n};\n\n\nexport type Query_RootPre_CommitArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\nexport type Query_RootPre_Commit_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\nexport type Query_RootPruningArgs = {\n  distinct_on?: InputMaybe<Array<Pruning_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pruning_Order_By>>;\n  where?: InputMaybe<Pruning_Bool_Exp>;\n};\n\n\nexport type Query_RootPruning_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pruning_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pruning_Order_By>>;\n  where?: InputMaybe<Pruning_Bool_Exp>;\n};\n\n\nexport type Query_RootRoutesArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\nexport type Query_RootRoutes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\nexport type Query_RootRoutes_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Query_RootSupplyArgs = {\n  distinct_on?: InputMaybe<Array<Supply_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Supply_Order_By>>;\n  where?: InputMaybe<Supply_Bool_Exp>;\n};\n\n\nexport type Query_RootSupply_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Supply_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Supply_Order_By>>;\n  where?: InputMaybe<Supply_Bool_Exp>;\n};\n\n\nexport type Query_RootSupply_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Query_RootSwapsArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\nexport type Query_RootSwaps_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\nexport type Query_RootSwaps_By_PkArgs = {\n  pool_id: Scalars['bigint']['input'];\n};\n\n\nexport type Query_RootToday_Top_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Today_Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Today_Top_Txs_Order_By>>;\n  where?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootToday_Top_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Today_Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Today_Top_Txs_Order_By>>;\n  where?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_10_Of_Active_Neurons_WeekArgs = {\n  distinct_on?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Order_By>>;\n  where?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_10_Of_Active_Neurons_Week_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Order_By>>;\n  where?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_First_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Top_First_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_First_Txs_Order_By>>;\n  where?: InputMaybe<Top_First_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_First_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_First_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_First_Txs_Order_By>>;\n  where?: InputMaybe<Top_First_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_LeadersArgs = {\n  distinct_on?: InputMaybe<Array<Top_Leaders_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Leaders_Order_By>>;\n  where?: InputMaybe<Top_Leaders_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_Leaders_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_Leaders_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Leaders_Order_By>>;\n  where?: InputMaybe<Top_Leaders_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Txs_Order_By>>;\n  where?: InputMaybe<Top_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootTop_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Txs_Order_By>>;\n  where?: InputMaybe<Top_Txs_Bool_Exp>;\n};\n\n\nexport type Query_RootTransactionArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\nexport type Query_RootTransaction_155Args = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\nexport type Query_RootTransaction_155_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\nexport type Query_RootTransaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\nexport type Query_RootTweets_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Tweets_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Tweets_Stats_Order_By>>;\n  where?: InputMaybe<Tweets_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootTweets_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Tweets_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Tweets_Stats_Order_By>>;\n  where?: InputMaybe<Tweets_Stats_Bool_Exp>;\n};\n\n\nexport type Query_RootTxs_RankedArgs = {\n  distinct_on?: InputMaybe<Array<Txs_Ranked_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Txs_Ranked_Order_By>>;\n  where?: InputMaybe<Txs_Ranked_Bool_Exp>;\n};\n\n\nexport type Query_RootTxs_Ranked_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Txs_Ranked_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Txs_Ranked_Order_By>>;\n  where?: InputMaybe<Txs_Ranked_Bool_Exp>;\n};\n\n\nexport type Query_RootUptimeArgs = {\n  distinct_on?: InputMaybe<Array<Uptime_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Uptime_Order_By>>;\n  where?: InputMaybe<Uptime_Bool_Exp>;\n};\n\n\nexport type Query_RootUptime_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Uptime_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Uptime_Order_By>>;\n  where?: InputMaybe<Uptime_Bool_Exp>;\n};\n\n\nexport type Query_RootValidatorArgs = {\n  distinct_on?: InputMaybe<Array<Validator_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Validator_Order_By>>;\n  where?: InputMaybe<Validator_Bool_Exp>;\n};\n\n\nexport type Query_RootValidator_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Validator_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Validator_Order_By>>;\n  where?: InputMaybe<Validator_Bool_Exp>;\n};\n\n\nexport type Query_RootValidator_By_PkArgs = {\n  consensus_address: Scalars['String']['input'];\n};\n\n\nexport type Query_RootVesting_AccountArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\nexport type Query_RootVesting_Account_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\nexport type Query_RootVesting_Account_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Query_RootVesting_PeriodArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\nexport type Query_RootVesting_Period_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\nexport type Query_RootWeek_RedelegationArgs = {\n  distinct_on?: InputMaybe<Array<Week_Redelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Redelegation_Order_By>>;\n  where?: InputMaybe<Week_Redelegation_Bool_Exp>;\n};\n\n\nexport type Query_RootWeek_Redelegation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Week_Redelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Redelegation_Order_By>>;\n  where?: InputMaybe<Week_Redelegation_Bool_Exp>;\n};\n\n\nexport type Query_RootWeek_UndelegationArgs = {\n  distinct_on?: InputMaybe<Array<Week_Undelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Undelegation_Order_By>>;\n  where?: InputMaybe<Week_Undelegation_Bool_Exp>;\n};\n\n\nexport type Query_RootWeek_Undelegation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Week_Undelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Undelegation_Order_By>>;\n  where?: InputMaybe<Week_Undelegation_Bool_Exp>;\n};\n\n/** columns and relationships of \"routes\" */\nexport type Routes = {\n  /** An object relationship */\n  account: Account;\n  /** An object relationship */\n  accountBySource: Account;\n  alias: Scalars['String']['output'];\n  /** An object relationship */\n  block: Block;\n  destination: Scalars['String']['output'];\n  height: Scalars['bigint']['output'];\n  id: Scalars['Int']['output'];\n  source: Scalars['String']['output'];\n  timestamp: Scalars['timestamp']['output'];\n  transaction_hash: Scalars['String']['output'];\n  value: Array<Scalars['coin']['output']>;\n};\n\n/** aggregated selection of \"routes\" */\nexport type Routes_Aggregate = {\n  aggregate?: Maybe<Routes_Aggregate_Fields>;\n  nodes: Array<Routes>;\n};\n\nexport type Routes_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Routes_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Routes_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Routes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Routes_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"routes\" */\nexport type Routes_Aggregate_Fields = {\n  avg?: Maybe<Routes_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Routes_Max_Fields>;\n  min?: Maybe<Routes_Min_Fields>;\n  stddev?: Maybe<Routes_Stddev_Fields>;\n  stddev_pop?: Maybe<Routes_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Routes_Stddev_Samp_Fields>;\n  sum?: Maybe<Routes_Sum_Fields>;\n  var_pop?: Maybe<Routes_Var_Pop_Fields>;\n  var_samp?: Maybe<Routes_Var_Samp_Fields>;\n  variance?: Maybe<Routes_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"routes\" */\nexport type Routes_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Routes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"routes\" */\nexport type Routes_Aggregate_Order_By = {\n  avg?: InputMaybe<Routes_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Routes_Max_Order_By>;\n  min?: InputMaybe<Routes_Min_Order_By>;\n  stddev?: InputMaybe<Routes_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Routes_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Routes_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Routes_Sum_Order_By>;\n  var_pop?: InputMaybe<Routes_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Routes_Var_Samp_Order_By>;\n  variance?: InputMaybe<Routes_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Routes_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"routes\" */\nexport type Routes_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"routes\". All fields are combined with a logical 'AND'. */\nexport type Routes_Bool_Exp = {\n  _and?: InputMaybe<Array<Routes_Bool_Exp>>;\n  _not?: InputMaybe<Routes_Bool_Exp>;\n  _or?: InputMaybe<Array<Routes_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  accountBySource?: InputMaybe<Account_Bool_Exp>;\n  alias?: InputMaybe<String_Comparison_Exp>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  destination?: InputMaybe<String_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  source?: InputMaybe<String_Comparison_Exp>;\n  timestamp?: InputMaybe<Timestamp_Comparison_Exp>;\n  transaction_hash?: InputMaybe<String_Comparison_Exp>;\n  value?: InputMaybe<Coin_Array_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Routes_Max_Fields = {\n  alias?: Maybe<Scalars['String']['output']>;\n  destination?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  source?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  value?: Maybe<Array<Scalars['coin']['output']>>;\n};\n\n/** order by max() on columns of table \"routes\" */\nexport type Routes_Max_Order_By = {\n  alias?: InputMaybe<Order_By>;\n  destination?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Routes_Min_Fields = {\n  alias?: Maybe<Scalars['String']['output']>;\n  destination?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  source?: Maybe<Scalars['String']['output']>;\n  timestamp?: Maybe<Scalars['timestamp']['output']>;\n  transaction_hash?: Maybe<Scalars['String']['output']>;\n  value?: Maybe<Array<Scalars['coin']['output']>>;\n};\n\n/** order by min() on columns of table \"routes\" */\nexport type Routes_Min_Order_By = {\n  alias?: InputMaybe<Order_By>;\n  destination?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"routes\". */\nexport type Routes_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  accountBySource?: InputMaybe<Account_Order_By>;\n  alias?: InputMaybe<Order_By>;\n  block?: InputMaybe<Block_Order_By>;\n  destination?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  timestamp?: InputMaybe<Order_By>;\n  transaction_hash?: InputMaybe<Order_By>;\n  value?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"routes\" */\nexport enum Routes_Select_Column {\n  /** column name */\n  Alias = 'alias',\n  /** column name */\n  Destination = 'destination',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Timestamp = 'timestamp',\n  /** column name */\n  TransactionHash = 'transaction_hash',\n  /** column name */\n  Value = 'value'\n}\n\n/** aggregate stddev on columns */\nexport type Routes_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"routes\" */\nexport type Routes_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Routes_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"routes\" */\nexport type Routes_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Routes_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"routes\" */\nexport type Routes_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"routes\" */\nexport type Routes_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Routes_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Routes_Stream_Cursor_Value_Input = {\n  alias?: InputMaybe<Scalars['String']['input']>;\n  destination?: InputMaybe<Scalars['String']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n  source?: InputMaybe<Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n  transaction_hash?: InputMaybe<Scalars['String']['input']>;\n  value?: InputMaybe<Array<Scalars['coin']['input']>>;\n};\n\n/** aggregate sum on columns */\nexport type Routes_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** order by sum() on columns of table \"routes\" */\nexport type Routes_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Routes_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"routes\" */\nexport type Routes_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Routes_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"routes\" */\nexport type Routes_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Routes_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"routes\" */\nexport type Routes_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\nexport type Subscription_Root = {\n  /** fetch data from the table: \"_transaction\" */\n  _transaction: Array<_Transaction>;\n  /** fetch aggregated fields from the table: \"_transaction\" */\n  _transaction_aggregate: _Transaction_Aggregate;\n  /** fetch data from the table in a streaming manner: \"_transaction\" */\n  _transaction_stream: Array<_Transaction>;\n  /** fetch data from the table: \"_uptime_temp\" */\n  _uptime_temp: Array<_Uptime_Temp>;\n  /** fetch aggregated fields from the table: \"_uptime_temp\" */\n  _uptime_temp_aggregate: _Uptime_Temp_Aggregate;\n  /** fetch data from the table in a streaming manner: \"_uptime_temp\" */\n  _uptime_temp_stream: Array<_Uptime_Temp>;\n  /** fetch data from the table: \"account\" */\n  account: Array<Account>;\n  /** fetch aggregated fields from the table: \"account\" */\n  account_aggregate: Account_Aggregate;\n  /** fetch data from the table: \"account_balance\" */\n  account_balance: Array<Account_Balance>;\n  /** fetch aggregated fields from the table: \"account_balance\" */\n  account_balance_aggregate: Account_Balance_Aggregate;\n  /** fetch data from the table: \"account_balance\" using primary key columns */\n  account_balance_by_pk?: Maybe<Account_Balance>;\n  /** fetch data from the table in a streaming manner: \"account_balance\" */\n  account_balance_stream: Array<Account_Balance>;\n  /** fetch data from the table: \"account\" using primary key columns */\n  account_by_pk?: Maybe<Account>;\n  /** fetch data from the table in a streaming manner: \"account\" */\n  account_stream: Array<Account>;\n  /** fetch data from the table: \"average_block_time_from_genesis\" */\n  average_block_time_from_genesis: Array<Average_Block_Time_From_Genesis>;\n  /** fetch aggregated fields from the table: \"average_block_time_from_genesis\" */\n  average_block_time_from_genesis_aggregate: Average_Block_Time_From_Genesis_Aggregate;\n  /** fetch data from the table: \"average_block_time_from_genesis\" using primary key columns */\n  average_block_time_from_genesis_by_pk?: Maybe<Average_Block_Time_From_Genesis>;\n  /** fetch data from the table in a streaming manner: \"average_block_time_from_genesis\" */\n  average_block_time_from_genesis_stream: Array<Average_Block_Time_From_Genesis>;\n  /** fetch data from the table: \"average_block_time_per_day\" */\n  average_block_time_per_day: Array<Average_Block_Time_Per_Day>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_day\" */\n  average_block_time_per_day_aggregate: Average_Block_Time_Per_Day_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_day\" using primary key columns */\n  average_block_time_per_day_by_pk?: Maybe<Average_Block_Time_Per_Day>;\n  /** fetch data from the table in a streaming manner: \"average_block_time_per_day\" */\n  average_block_time_per_day_stream: Array<Average_Block_Time_Per_Day>;\n  /** fetch data from the table: \"average_block_time_per_hour\" */\n  average_block_time_per_hour: Array<Average_Block_Time_Per_Hour>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_hour\" */\n  average_block_time_per_hour_aggregate: Average_Block_Time_Per_Hour_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_hour\" using primary key columns */\n  average_block_time_per_hour_by_pk?: Maybe<Average_Block_Time_Per_Hour>;\n  /** fetch data from the table in a streaming manner: \"average_block_time_per_hour\" */\n  average_block_time_per_hour_stream: Array<Average_Block_Time_Per_Hour>;\n  /** fetch data from the table: \"average_block_time_per_minute\" */\n  average_block_time_per_minute: Array<Average_Block_Time_Per_Minute>;\n  /** fetch aggregated fields from the table: \"average_block_time_per_minute\" */\n  average_block_time_per_minute_aggregate: Average_Block_Time_Per_Minute_Aggregate;\n  /** fetch data from the table: \"average_block_time_per_minute\" using primary key columns */\n  average_block_time_per_minute_by_pk?: Maybe<Average_Block_Time_Per_Minute>;\n  /** fetch data from the table in a streaming manner: \"average_block_time_per_minute\" */\n  average_block_time_per_minute_stream: Array<Average_Block_Time_Per_Minute>;\n  /** fetch data from the table: \"block\" */\n  block: Array<Block>;\n  /** fetch aggregated fields from the table: \"block\" */\n  block_aggregate: Block_Aggregate;\n  /** fetch data from the table: \"block\" using primary key columns */\n  block_by_pk?: Maybe<Block>;\n  /** fetch data from the table in a streaming manner: \"block\" */\n  block_stream: Array<Block>;\n  /** fetch data from the table: \"contracts\" */\n  contracts: Array<Contracts>;\n  /** fetch aggregated fields from the table: \"contracts\" */\n  contracts_aggregate: Contracts_Aggregate;\n  /** fetch data from the table: \"contracts\" using primary key columns */\n  contracts_by_pk?: Maybe<Contracts>;\n  /** fetch data from the table in a streaming manner: \"contracts\" */\n  contracts_stream: Array<Contracts>;\n  /** fetch data from the table: \"cyb_cohort\" */\n  cyb_cohort: Array<Cyb_Cohort>;\n  /** fetch aggregated fields from the table: \"cyb_cohort\" */\n  cyb_cohort_aggregate: Cyb_Cohort_Aggregate;\n  /** fetch data from the table in a streaming manner: \"cyb_cohort\" */\n  cyb_cohort_stream: Array<Cyb_Cohort>;\n  /** fetch data from the table: \"cyber_gift_proofs\" */\n  cyber_gift_proofs: Array<Cyber_Gift_Proofs>;\n  /** fetch aggregated fields from the table: \"cyber_gift_proofs\" */\n  cyber_gift_proofs_aggregate: Cyber_Gift_Proofs_Aggregate;\n  /** fetch data from the table in a streaming manner: \"cyber_gift_proofs\" */\n  cyber_gift_proofs_stream: Array<Cyber_Gift_Proofs>;\n  /** An array relationship */\n  cyberlinks: Array<Cyberlinks>;\n  /** An aggregate relationship */\n  cyberlinks_aggregate: Cyberlinks_Aggregate;\n  /** fetch data from the table: \"cyberlinks\" using primary key columns */\n  cyberlinks_by_pk?: Maybe<Cyberlinks>;\n  /** fetch data from the table: \"cyberlinks_stats\" */\n  cyberlinks_stats: Array<Cyberlinks_Stats>;\n  /** fetch aggregated fields from the table: \"cyberlinks_stats\" */\n  cyberlinks_stats_aggregate: Cyberlinks_Stats_Aggregate;\n  /** fetch data from the table in a streaming manner: \"cyberlinks_stats\" */\n  cyberlinks_stats_stream: Array<Cyberlinks_Stats>;\n  /** fetch data from the table in a streaming manner: \"cyberlinks\" */\n  cyberlinks_stream: Array<Cyberlinks>;\n  /** fetch data from the table: \"daily_amount_of_active_neurons\" */\n  daily_amount_of_active_neurons: Array<Daily_Amount_Of_Active_Neurons>;\n  /** fetch aggregated fields from the table: \"daily_amount_of_active_neurons\" */\n  daily_amount_of_active_neurons_aggregate: Daily_Amount_Of_Active_Neurons_Aggregate;\n  /** fetch data from the table in a streaming manner: \"daily_amount_of_active_neurons\" */\n  daily_amount_of_active_neurons_stream: Array<Daily_Amount_Of_Active_Neurons>;\n  /** fetch data from the table: \"daily_amount_of_used_gas\" */\n  daily_amount_of_used_gas: Array<Daily_Amount_Of_Used_Gas>;\n  /** fetch aggregated fields from the table: \"daily_amount_of_used_gas\" */\n  daily_amount_of_used_gas_aggregate: Daily_Amount_Of_Used_Gas_Aggregate;\n  /** fetch data from the table in a streaming manner: \"daily_amount_of_used_gas\" */\n  daily_amount_of_used_gas_stream: Array<Daily_Amount_Of_Used_Gas>;\n  /** fetch data from the table: \"daily_number_of_transactions\" */\n  daily_number_of_transactions: Array<Daily_Number_Of_Transactions>;\n  /** fetch aggregated fields from the table: \"daily_number_of_transactions\" */\n  daily_number_of_transactions_aggregate: Daily_Number_Of_Transactions_Aggregate;\n  /** fetch data from the table in a streaming manner: \"daily_number_of_transactions\" */\n  daily_number_of_transactions_stream: Array<Daily_Number_Of_Transactions>;\n  /** fetch data from the table: \"first_10_cyberlink\" */\n  first_10_cyberlink: Array<First_10_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_10_cyberlink\" */\n  first_10_cyberlink_aggregate: First_10_Cyberlink_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_10_cyberlink\" */\n  first_10_cyberlink_stream: Array<First_10_Cyberlink>;\n  /** fetch data from the table: \"first_100_cyberlink\" */\n  first_100_cyberlink: Array<First_100_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_100_cyberlink\" */\n  first_100_cyberlink_aggregate: First_100_Cyberlink_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_100_cyberlink\" */\n  first_100_cyberlink_stream: Array<First_100_Cyberlink>;\n  /** fetch data from the table: \"first_cyberlink\" */\n  first_cyberlink: Array<First_Cyberlink>;\n  /** fetch aggregated fields from the table: \"first_cyberlink\" */\n  first_cyberlink_aggregate: First_Cyberlink_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_cyberlink\" */\n  first_cyberlink_stream: Array<First_Cyberlink>;\n  /** fetch data from the table: \"first_hero_hired\" */\n  first_hero_hired: Array<First_Hero_Hired>;\n  /** fetch aggregated fields from the table: \"first_hero_hired\" */\n  first_hero_hired_aggregate: First_Hero_Hired_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_hero_hired\" */\n  first_hero_hired_stream: Array<First_Hero_Hired>;\n  /** fetch data from the table: \"first_investmint\" */\n  first_investmint: Array<First_Investmint>;\n  /** fetch aggregated fields from the table: \"first_investmint\" */\n  first_investmint_aggregate: First_Investmint_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_investmint\" */\n  first_investmint_stream: Array<First_Investmint>;\n  /** fetch data from the table: \"first_neuron_activation\" */\n  first_neuron_activation: Array<First_Neuron_Activation>;\n  /** fetch aggregated fields from the table: \"first_neuron_activation\" */\n  first_neuron_activation_aggregate: First_Neuron_Activation_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_neuron_activation\" */\n  first_neuron_activation_stream: Array<First_Neuron_Activation>;\n  /** fetch data from the table: \"first_swap\" */\n  first_swap: Array<First_Swap>;\n  /** fetch aggregated fields from the table: \"first_swap\" */\n  first_swap_aggregate: First_Swap_Aggregate;\n  /** fetch data from the table in a streaming manner: \"first_swap\" */\n  first_swap_stream: Array<First_Swap>;\n  /** fetch data from the table: \"follow_stats\" */\n  follow_stats: Array<Follow_Stats>;\n  /** fetch aggregated fields from the table: \"follow_stats\" */\n  follow_stats_aggregate: Follow_Stats_Aggregate;\n  /** fetch data from the table in a streaming manner: \"follow_stats\" */\n  follow_stats_stream: Array<Follow_Stats>;\n  /** fetch data from the table: \"genesis\" */\n  genesis: Array<Genesis>;\n  /** fetch data from the table: \"genesis_accounts\" */\n  genesis_accounts: Array<Genesis_Accounts>;\n  /** fetch aggregated fields from the table: \"genesis_accounts\" */\n  genesis_accounts_aggregate: Genesis_Accounts_Aggregate;\n  /** fetch data from the table: \"genesis_accounts\" using primary key columns */\n  genesis_accounts_by_pk?: Maybe<Genesis_Accounts>;\n  /** fetch data from the table in a streaming manner: \"genesis_accounts\" */\n  genesis_accounts_stream: Array<Genesis_Accounts>;\n  /** fetch aggregated fields from the table: \"genesis\" */\n  genesis_aggregate: Genesis_Aggregate;\n  /** fetch data from the table: \"genesis\" using primary key columns */\n  genesis_by_pk?: Maybe<Genesis>;\n  /** fetch data from the table: \"genesis_neurons_activation\" */\n  genesis_neurons_activation: Array<Genesis_Neurons_Activation>;\n  /** fetch aggregated fields from the table: \"genesis_neurons_activation\" */\n  genesis_neurons_activation_aggregate: Genesis_Neurons_Activation_Aggregate;\n  /** fetch data from the table in a streaming manner: \"genesis_neurons_activation\" */\n  genesis_neurons_activation_stream: Array<Genesis_Neurons_Activation>;\n  /** fetch data from the table in a streaming manner: \"genesis\" */\n  genesis_stream: Array<Genesis>;\n  /** An array relationship */\n  investmints: Array<Investmints>;\n  /** An aggregate relationship */\n  investmints_aggregate: Investmints_Aggregate;\n  /** fetch data from the table: \"investmints\" using primary key columns */\n  investmints_by_pk?: Maybe<Investmints>;\n  /** fetch data from the table in a streaming manner: \"investmints\" */\n  investmints_stream: Array<Investmints>;\n  /** fetch data from the table: \"message\" */\n  message: Array<Message>;\n  /** fetch data from the table: \"message_155\" */\n  message_155: Array<Message_155>;\n  /** fetch aggregated fields from the table: \"message_155\" */\n  message_155_aggregate: Message_155_Aggregate;\n  /** fetch data from the table in a streaming manner: \"message_155\" */\n  message_155_stream: Array<Message_155>;\n  /** fetch aggregated fields from the table: \"message\" */\n  message_aggregate: Message_Aggregate;\n  /** fetch data from the table in a streaming manner: \"message\" */\n  message_stream: Array<Message>;\n  /** fetch data from the table: \"message_type\" */\n  message_type: Array<Message_Type>;\n  /** fetch aggregated fields from the table: \"message_type\" */\n  message_type_aggregate: Message_Type_Aggregate;\n  /** fetch data from the table in a streaming manner: \"message_type\" */\n  message_type_stream: Array<Message_Type>;\n  /** execute function \"messages_by_address\" which returns \"message\" */\n  messages_by_address: Array<Message>;\n  /** execute function \"messages_by_address\" and query aggregates on result of table type \"message\" */\n  messages_by_address_aggregate: Message_Aggregate;\n  /** execute function \"messages_by_type\" which returns \"message\" */\n  messages_by_type: Array<Message>;\n  /** execute function \"messages_by_type\" and query aggregates on result of table type \"message\" */\n  messages_by_type_aggregate: Message_Aggregate;\n  /** fetch data from the table: \"modules\" */\n  modules: Array<Modules>;\n  /** fetch aggregated fields from the table: \"modules\" */\n  modules_aggregate: Modules_Aggregate;\n  /** fetch data from the table: \"modules\" using primary key columns */\n  modules_by_pk?: Maybe<Modules>;\n  /** fetch data from the table in a streaming manner: \"modules\" */\n  modules_stream: Array<Modules>;\n  /** fetch data from the table: \"neuron_activation_source\" */\n  neuron_activation_source: Array<Neuron_Activation_Source>;\n  /** fetch aggregated fields from the table: \"neuron_activation_source\" */\n  neuron_activation_source_aggregate: Neuron_Activation_Source_Aggregate;\n  /** fetch data from the table in a streaming manner: \"neuron_activation_source\" */\n  neuron_activation_source_stream: Array<Neuron_Activation_Source>;\n  /** fetch data from the table: \"number_of_new_neurons\" */\n  number_of_new_neurons: Array<Number_Of_New_Neurons>;\n  /** fetch aggregated fields from the table: \"number_of_new_neurons\" */\n  number_of_new_neurons_aggregate: Number_Of_New_Neurons_Aggregate;\n  /** fetch data from the table in a streaming manner: \"number_of_new_neurons\" */\n  number_of_new_neurons_stream: Array<Number_Of_New_Neurons>;\n  /** An array relationship */\n  particles: Array<Particles>;\n  /** An aggregate relationship */\n  particles_aggregate: Particles_Aggregate;\n  /** fetch data from the table: \"particles\" using primary key columns */\n  particles_by_pk?: Maybe<Particles>;\n  /** fetch data from the table in a streaming manner: \"particles\" */\n  particles_stream: Array<Particles>;\n  /** fetch data from the table: \"pools\" */\n  pools: Array<Pools>;\n  /** fetch aggregated fields from the table: \"pools\" */\n  pools_aggregate: Pools_Aggregate;\n  /** fetch data from the table: \"pools\" using primary key columns */\n  pools_by_pk?: Maybe<Pools>;\n  /** fetch data from the table: \"pools_liquidity\" */\n  pools_liquidity: Array<Pools_Liquidity>;\n  /** fetch aggregated fields from the table: \"pools_liquidity\" */\n  pools_liquidity_aggregate: Pools_Liquidity_Aggregate;\n  /** fetch data from the table in a streaming manner: \"pools_liquidity\" */\n  pools_liquidity_stream: Array<Pools_Liquidity>;\n  /** fetch data from the table: \"pools_rates\" */\n  pools_rates: Array<Pools_Rates>;\n  /** fetch aggregated fields from the table: \"pools_rates\" */\n  pools_rates_aggregate: Pools_Rates_Aggregate;\n  /** fetch data from the table in a streaming manner: \"pools_rates\" */\n  pools_rates_stream: Array<Pools_Rates>;\n  /** fetch data from the table in a streaming manner: \"pools\" */\n  pools_stream: Array<Pools>;\n  /** fetch data from the table: \"pools_volumes\" */\n  pools_volumes: Array<Pools_Volumes>;\n  /** fetch aggregated fields from the table: \"pools_volumes\" */\n  pools_volumes_aggregate: Pools_Volumes_Aggregate;\n  /** fetch data from the table in a streaming manner: \"pools_volumes\" */\n  pools_volumes_stream: Array<Pools_Volumes>;\n  /** fetch data from the table: \"pre_commit\" */\n  pre_commit: Array<Pre_Commit>;\n  /** fetch aggregated fields from the table: \"pre_commit\" */\n  pre_commit_aggregate: Pre_Commit_Aggregate;\n  /** fetch data from the table in a streaming manner: \"pre_commit\" */\n  pre_commit_stream: Array<Pre_Commit>;\n  /** fetch data from the table: \"pruning\" */\n  pruning: Array<Pruning>;\n  /** fetch aggregated fields from the table: \"pruning\" */\n  pruning_aggregate: Pruning_Aggregate;\n  /** fetch data from the table in a streaming manner: \"pruning\" */\n  pruning_stream: Array<Pruning>;\n  /** An array relationship */\n  routes: Array<Routes>;\n  /** An aggregate relationship */\n  routes_aggregate: Routes_Aggregate;\n  /** fetch data from the table: \"routes\" using primary key columns */\n  routes_by_pk?: Maybe<Routes>;\n  /** fetch data from the table in a streaming manner: \"routes\" */\n  routes_stream: Array<Routes>;\n  /** fetch data from the table: \"supply\" */\n  supply: Array<Supply>;\n  /** fetch aggregated fields from the table: \"supply\" */\n  supply_aggregate: Supply_Aggregate;\n  /** fetch data from the table: \"supply\" using primary key columns */\n  supply_by_pk?: Maybe<Supply>;\n  /** fetch data from the table in a streaming manner: \"supply\" */\n  supply_stream: Array<Supply>;\n  /** An array relationship */\n  swaps: Array<Swaps>;\n  /** An aggregate relationship */\n  swaps_aggregate: Swaps_Aggregate;\n  /** fetch data from the table: \"swaps\" using primary key columns */\n  swaps_by_pk?: Maybe<Swaps>;\n  /** fetch data from the table in a streaming manner: \"swaps\" */\n  swaps_stream: Array<Swaps>;\n  /** fetch data from the table: \"today_top_txs\" */\n  today_top_txs: Array<Today_Top_Txs>;\n  /** fetch aggregated fields from the table: \"today_top_txs\" */\n  today_top_txs_aggregate: Today_Top_Txs_Aggregate;\n  /** fetch data from the table in a streaming manner: \"today_top_txs\" */\n  today_top_txs_stream: Array<Today_Top_Txs>;\n  /** fetch data from the table: \"top_10_of_active_neurons_week\" */\n  top_10_of_active_neurons_week: Array<Top_10_Of_Active_Neurons_Week>;\n  /** fetch aggregated fields from the table: \"top_10_of_active_neurons_week\" */\n  top_10_of_active_neurons_week_aggregate: Top_10_Of_Active_Neurons_Week_Aggregate;\n  /** fetch data from the table in a streaming manner: \"top_10_of_active_neurons_week\" */\n  top_10_of_active_neurons_week_stream: Array<Top_10_Of_Active_Neurons_Week>;\n  /** fetch data from the table: \"top_first_txs\" */\n  top_first_txs: Array<Top_First_Txs>;\n  /** fetch aggregated fields from the table: \"top_first_txs\" */\n  top_first_txs_aggregate: Top_First_Txs_Aggregate;\n  /** fetch data from the table in a streaming manner: \"top_first_txs\" */\n  top_first_txs_stream: Array<Top_First_Txs>;\n  /** fetch data from the table: \"top_leaders\" */\n  top_leaders: Array<Top_Leaders>;\n  /** fetch aggregated fields from the table: \"top_leaders\" */\n  top_leaders_aggregate: Top_Leaders_Aggregate;\n  /** fetch data from the table in a streaming manner: \"top_leaders\" */\n  top_leaders_stream: Array<Top_Leaders>;\n  /** fetch data from the table: \"top_txs\" */\n  top_txs: Array<Top_Txs>;\n  /** fetch aggregated fields from the table: \"top_txs\" */\n  top_txs_aggregate: Top_Txs_Aggregate;\n  /** fetch data from the table in a streaming manner: \"top_txs\" */\n  top_txs_stream: Array<Top_Txs>;\n  /** fetch data from the table: \"transaction\" */\n  transaction: Array<Transaction>;\n  /** fetch data from the table: \"transaction_155\" */\n  transaction_155: Array<Transaction_155>;\n  /** fetch aggregated fields from the table: \"transaction_155\" */\n  transaction_155_aggregate: Transaction_155_Aggregate;\n  /** fetch data from the table in a streaming manner: \"transaction_155\" */\n  transaction_155_stream: Array<Transaction_155>;\n  /** fetch aggregated fields from the table: \"transaction\" */\n  transaction_aggregate: Transaction_Aggregate;\n  /** fetch data from the table in a streaming manner: \"transaction\" */\n  transaction_stream: Array<Transaction>;\n  /** fetch data from the table: \"tweets_stats\" */\n  tweets_stats: Array<Tweets_Stats>;\n  /** fetch aggregated fields from the table: \"tweets_stats\" */\n  tweets_stats_aggregate: Tweets_Stats_Aggregate;\n  /** fetch data from the table in a streaming manner: \"tweets_stats\" */\n  tweets_stats_stream: Array<Tweets_Stats>;\n  /** fetch data from the table: \"txs_ranked\" */\n  txs_ranked: Array<Txs_Ranked>;\n  /** fetch aggregated fields from the table: \"txs_ranked\" */\n  txs_ranked_aggregate: Txs_Ranked_Aggregate;\n  /** fetch data from the table in a streaming manner: \"txs_ranked\" */\n  txs_ranked_stream: Array<Txs_Ranked>;\n  /** fetch data from the table: \"uptime\" */\n  uptime: Array<Uptime>;\n  /** fetch aggregated fields from the table: \"uptime\" */\n  uptime_aggregate: Uptime_Aggregate;\n  /** fetch data from the table in a streaming manner: \"uptime\" */\n  uptime_stream: Array<Uptime>;\n  /** fetch data from the table: \"validator\" */\n  validator: Array<Validator>;\n  /** fetch aggregated fields from the table: \"validator\" */\n  validator_aggregate: Validator_Aggregate;\n  /** fetch data from the table: \"validator\" using primary key columns */\n  validator_by_pk?: Maybe<Validator>;\n  /** fetch data from the table in a streaming manner: \"validator\" */\n  validator_stream: Array<Validator>;\n  /** fetch data from the table: \"vesting_account\" */\n  vesting_account: Array<Vesting_Account>;\n  /** fetch aggregated fields from the table: \"vesting_account\" */\n  vesting_account_aggregate: Vesting_Account_Aggregate;\n  /** fetch data from the table: \"vesting_account\" using primary key columns */\n  vesting_account_by_pk?: Maybe<Vesting_Account>;\n  /** fetch data from the table in a streaming manner: \"vesting_account\" */\n  vesting_account_stream: Array<Vesting_Account>;\n  /** fetch data from the table: \"vesting_period\" */\n  vesting_period: Array<Vesting_Period>;\n  /** fetch aggregated fields from the table: \"vesting_period\" */\n  vesting_period_aggregate: Vesting_Period_Aggregate;\n  /** fetch data from the table in a streaming manner: \"vesting_period\" */\n  vesting_period_stream: Array<Vesting_Period>;\n  /** fetch data from the table: \"week_redelegation\" */\n  week_redelegation: Array<Week_Redelegation>;\n  /** fetch aggregated fields from the table: \"week_redelegation\" */\n  week_redelegation_aggregate: Week_Redelegation_Aggregate;\n  /** fetch data from the table in a streaming manner: \"week_redelegation\" */\n  week_redelegation_stream: Array<Week_Redelegation>;\n  /** fetch data from the table: \"week_undelegation\" */\n  week_undelegation: Array<Week_Undelegation>;\n  /** fetch aggregated fields from the table: \"week_undelegation\" */\n  week_undelegation_aggregate: Week_Undelegation_Aggregate;\n  /** fetch data from the table in a streaming manner: \"week_undelegation\" */\n  week_undelegation_stream: Array<Week_Undelegation>;\n};\n\n\nexport type Subscription_Root_TransactionArgs = {\n  distinct_on?: InputMaybe<Array<_Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Transaction_Order_By>>;\n  where?: InputMaybe<_Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_Root_Transaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<_Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Transaction_Order_By>>;\n  where?: InputMaybe<_Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_Root_Transaction_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<_Transaction_Stream_Cursor_Input>>;\n  where?: InputMaybe<_Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_Root_Uptime_TempArgs = {\n  distinct_on?: InputMaybe<Array<_Uptime_Temp_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Uptime_Temp_Order_By>>;\n  where?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n};\n\n\nexport type Subscription_Root_Uptime_Temp_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<_Uptime_Temp_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<_Uptime_Temp_Order_By>>;\n  where?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n};\n\n\nexport type Subscription_Root_Uptime_Temp_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<_Uptime_Temp_Stream_Cursor_Input>>;\n  where?: InputMaybe<_Uptime_Temp_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccountArgs = {\n  distinct_on?: InputMaybe<Array<Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Order_By>>;\n  where?: InputMaybe<Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccount_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Order_By>>;\n  where?: InputMaybe<Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccount_BalanceArgs = {\n  distinct_on?: InputMaybe<Array<Account_Balance_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Balance_Order_By>>;\n  where?: InputMaybe<Account_Balance_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccount_Balance_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Account_Balance_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Account_Balance_Order_By>>;\n  where?: InputMaybe<Account_Balance_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccount_Balance_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootAccount_Balance_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Account_Balance_Stream_Cursor_Input>>;\n  where?: InputMaybe<Account_Balance_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAccount_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootAccount_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Account_Stream_Cursor_Input>>;\n  where?: InputMaybe<Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_From_GenesisArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_From_Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_From_Genesis_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_From_Genesis_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_From_Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_From_Genesis_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_From_Genesis_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootAverage_Block_Time_From_Genesis_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Average_Block_Time_From_Genesis_Stream_Cursor_Input>>;\n  where?: InputMaybe<Average_Block_Time_From_Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_DayArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Day_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Day_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Day_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Day_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Day_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Day_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Day_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Average_Block_Time_Per_Day_Stream_Cursor_Input>>;\n  where?: InputMaybe<Average_Block_Time_Per_Day_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_HourArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Hour_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Hour_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Hour_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Hour_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Hour_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Hour_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Hour_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Average_Block_Time_Per_Hour_Stream_Cursor_Input>>;\n  where?: InputMaybe<Average_Block_Time_Per_Hour_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_MinuteArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Minute_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Minute_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Minute_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Average_Block_Time_Per_Minute_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Average_Block_Time_Per_Minute_Order_By>>;\n  where?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Minute_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootAverage_Block_Time_Per_Minute_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Average_Block_Time_Per_Minute_Stream_Cursor_Input>>;\n  where?: InputMaybe<Average_Block_Time_Per_Minute_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBlockArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBlock_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\nexport type Subscription_RootBlock_By_PkArgs = {\n  height: Scalars['bigint']['input'];\n};\n\n\nexport type Subscription_RootBlock_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Block_Stream_Cursor_Input>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\nexport type Subscription_RootContractsArgs = {\n  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Contracts_Order_By>>;\n  where?: InputMaybe<Contracts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootContracts_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Contracts_Order_By>>;\n  where?: InputMaybe<Contracts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootContracts_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootContracts_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Contracts_Stream_Cursor_Input>>;\n  where?: InputMaybe<Contracts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyb_CohortArgs = {\n  distinct_on?: InputMaybe<Array<Cyb_Cohort_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyb_Cohort_Order_By>>;\n  where?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyb_Cohort_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyb_Cohort_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyb_Cohort_Order_By>>;\n  where?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyb_Cohort_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Cyb_Cohort_Stream_Cursor_Input>>;\n  where?: InputMaybe<Cyb_Cohort_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyber_Gift_ProofsArgs = {\n  distinct_on?: InputMaybe<Array<Cyber_Gift_Proofs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyber_Gift_Proofs_Order_By>>;\n  where?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyber_Gift_Proofs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyber_Gift_Proofs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyber_Gift_Proofs_Order_By>>;\n  where?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyber_Gift_Proofs_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Cyber_Gift_Proofs_Stream_Cursor_Input>>;\n  where?: InputMaybe<Cyber_Gift_Proofs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinksArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinks_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinks_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Subscription_RootCyberlinks_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Stats_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinks_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Cyberlinks_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Cyberlinks_Stats_Order_By>>;\n  where?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinks_Stats_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Cyberlinks_Stats_Stream_Cursor_Input>>;\n  where?: InputMaybe<Cyberlinks_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCyberlinks_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Cyberlinks_Stream_Cursor_Input>>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Active_NeuronsArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Active_Neurons_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Active_Neurons_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Active_Neurons_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Daily_Amount_Of_Active_Neurons_Stream_Cursor_Input>>;\n  where?: InputMaybe<Daily_Amount_Of_Active_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Used_GasArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Used_Gas_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Amount_Of_Used_Gas_Order_By>>;\n  where?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Amount_Of_Used_Gas_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Daily_Amount_Of_Used_Gas_Stream_Cursor_Input>>;\n  where?: InputMaybe<Daily_Amount_Of_Used_Gas_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Number_Of_TransactionsArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Number_Of_Transactions_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Number_Of_Transactions_Order_By>>;\n  where?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Number_Of_Transactions_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Daily_Number_Of_Transactions_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Daily_Number_Of_Transactions_Order_By>>;\n  where?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n};\n\n\nexport type Subscription_RootDaily_Number_Of_Transactions_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Daily_Number_Of_Transactions_Stream_Cursor_Input>>;\n  where?: InputMaybe<Daily_Number_Of_Transactions_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_10_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_10_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_10_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_10_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_10_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_10_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_10_Cyberlink_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_10_Cyberlink_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_10_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_100_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_100_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_100_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_100_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_100_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_100_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_100_Cyberlink_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_100_Cyberlink_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_100_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_CyberlinkArgs = {\n  distinct_on?: InputMaybe<Array<First_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Cyberlink_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Cyberlink_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Cyberlink_Order_By>>;\n  where?: InputMaybe<First_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Cyberlink_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_Cyberlink_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_Cyberlink_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Hero_HiredArgs = {\n  distinct_on?: InputMaybe<Array<First_Hero_Hired_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Hero_Hired_Order_By>>;\n  where?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Hero_Hired_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Hero_Hired_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Hero_Hired_Order_By>>;\n  where?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Hero_Hired_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_Hero_Hired_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_Hero_Hired_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_InvestmintArgs = {\n  distinct_on?: InputMaybe<Array<First_Investmint_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Investmint_Order_By>>;\n  where?: InputMaybe<First_Investmint_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Investmint_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Investmint_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Investmint_Order_By>>;\n  where?: InputMaybe<First_Investmint_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Investmint_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_Investmint_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_Investmint_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Neuron_ActivationArgs = {\n  distinct_on?: InputMaybe<Array<First_Neuron_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Neuron_Activation_Order_By>>;\n  where?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Neuron_Activation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Neuron_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Neuron_Activation_Order_By>>;\n  where?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Neuron_Activation_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_Neuron_Activation_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_Neuron_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_SwapArgs = {\n  distinct_on?: InputMaybe<Array<First_Swap_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Swap_Order_By>>;\n  where?: InputMaybe<First_Swap_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Swap_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<First_Swap_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<First_Swap_Order_By>>;\n  where?: InputMaybe<First_Swap_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFirst_Swap_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<First_Swap_Stream_Cursor_Input>>;\n  where?: InputMaybe<First_Swap_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFollow_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Follow_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Follow_Stats_Order_By>>;\n  where?: InputMaybe<Follow_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFollow_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Follow_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Follow_Stats_Order_By>>;\n  where?: InputMaybe<Follow_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFollow_Stats_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Follow_Stats_Stream_Cursor_Input>>;\n  where?: InputMaybe<Follow_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesisArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Order_By>>;\n  where?: InputMaybe<Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_AccountsArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Accounts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Accounts_Order_By>>;\n  where?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_Accounts_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Accounts_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Accounts_Order_By>>;\n  where?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_Accounts_By_PkArgs = {\n  address: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootGenesis_Accounts_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Genesis_Accounts_Stream_Cursor_Input>>;\n  where?: InputMaybe<Genesis_Accounts_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Order_By>>;\n  where?: InputMaybe<Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootGenesis_Neurons_ActivationArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Neurons_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Neurons_Activation_Order_By>>;\n  where?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_Neurons_Activation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Genesis_Neurons_Activation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Genesis_Neurons_Activation_Order_By>>;\n  where?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_Neurons_Activation_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Genesis_Neurons_Activation_Stream_Cursor_Input>>;\n  where?: InputMaybe<Genesis_Neurons_Activation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootGenesis_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Genesis_Stream_Cursor_Input>>;\n  where?: InputMaybe<Genesis_Bool_Exp>;\n};\n\n\nexport type Subscription_RootInvestmintsArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\nexport type Subscription_RootInvestmints_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Investmints_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Investmints_Order_By>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\nexport type Subscription_RootInvestmints_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Subscription_RootInvestmints_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Investmints_Stream_Cursor_Input>>;\n  where?: InputMaybe<Investmints_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessageArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_155Args = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_155_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_155_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Message_155_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Message_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_TypeArgs = {\n  distinct_on?: InputMaybe<Array<Message_Type_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Type_Order_By>>;\n  where?: InputMaybe<Message_Type_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_Type_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Type_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Type_Order_By>>;\n  where?: InputMaybe<Message_Type_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_Type_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Message_Type_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_Type_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessages_By_AddressArgs = {\n  args: Messages_By_Address_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessages_By_Address_AggregateArgs = {\n  args: Messages_By_Address_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessages_By_TypeArgs = {\n  args: Messages_By_Type_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessages_By_Type_AggregateArgs = {\n  args: Messages_By_Type_Args;\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootModulesArgs = {\n  distinct_on?: InputMaybe<Array<Modules_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Modules_Order_By>>;\n  where?: InputMaybe<Modules_Bool_Exp>;\n};\n\n\nexport type Subscription_RootModules_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Modules_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Modules_Order_By>>;\n  where?: InputMaybe<Modules_Bool_Exp>;\n};\n\n\nexport type Subscription_RootModules_By_PkArgs = {\n  module_name: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootModules_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Modules_Stream_Cursor_Input>>;\n  where?: InputMaybe<Modules_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNeuron_Activation_SourceArgs = {\n  distinct_on?: InputMaybe<Array<Neuron_Activation_Source_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Neuron_Activation_Source_Order_By>>;\n  where?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNeuron_Activation_Source_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Neuron_Activation_Source_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Neuron_Activation_Source_Order_By>>;\n  where?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNeuron_Activation_Source_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Neuron_Activation_Source_Stream_Cursor_Input>>;\n  where?: InputMaybe<Neuron_Activation_Source_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNumber_Of_New_NeuronsArgs = {\n  distinct_on?: InputMaybe<Array<Number_Of_New_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Number_Of_New_Neurons_Order_By>>;\n  where?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNumber_Of_New_Neurons_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Number_Of_New_Neurons_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Number_Of_New_Neurons_Order_By>>;\n  where?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootNumber_Of_New_Neurons_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Number_Of_New_Neurons_Stream_Cursor_Input>>;\n  where?: InputMaybe<Number_Of_New_Neurons_Bool_Exp>;\n};\n\n\nexport type Subscription_RootParticlesArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\nexport type Subscription_RootParticles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Particles_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Particles_Order_By>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\nexport type Subscription_RootParticles_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Subscription_RootParticles_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Particles_Stream_Cursor_Input>>;\n  where?: InputMaybe<Particles_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPoolsArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Order_By>>;\n  where?: InputMaybe<Pools_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Order_By>>;\n  where?: InputMaybe<Pools_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_By_PkArgs = {\n  pool_id: Scalars['bigint']['input'];\n};\n\n\nexport type Subscription_RootPools_LiquidityArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Liquidity_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Liquidity_Order_By>>;\n  where?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Liquidity_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Liquidity_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Liquidity_Order_By>>;\n  where?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Liquidity_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pools_Liquidity_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pools_Liquidity_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_RatesArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Rates_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Rates_Order_By>>;\n  where?: InputMaybe<Pools_Rates_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Rates_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Rates_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Rates_Order_By>>;\n  where?: InputMaybe<Pools_Rates_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Rates_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pools_Rates_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pools_Rates_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pools_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pools_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_VolumesArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Volumes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Volumes_Order_By>>;\n  where?: InputMaybe<Pools_Volumes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Volumes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pools_Volumes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pools_Volumes_Order_By>>;\n  where?: InputMaybe<Pools_Volumes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPools_Volumes_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pools_Volumes_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pools_Volumes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPre_CommitArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPre_Commit_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPre_Commit_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pre_Commit_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPruningArgs = {\n  distinct_on?: InputMaybe<Array<Pruning_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pruning_Order_By>>;\n  where?: InputMaybe<Pruning_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPruning_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pruning_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pruning_Order_By>>;\n  where?: InputMaybe<Pruning_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPruning_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Pruning_Stream_Cursor_Input>>;\n  where?: InputMaybe<Pruning_Bool_Exp>;\n};\n\n\nexport type Subscription_RootRoutesArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootRoutes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Routes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Routes_Order_By>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootRoutes_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Subscription_RootRoutes_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Routes_Stream_Cursor_Input>>;\n  where?: InputMaybe<Routes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSupplyArgs = {\n  distinct_on?: InputMaybe<Array<Supply_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Supply_Order_By>>;\n  where?: InputMaybe<Supply_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSupply_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Supply_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Supply_Order_By>>;\n  where?: InputMaybe<Supply_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSupply_By_PkArgs = {\n  one_row_id: Scalars['Boolean']['input'];\n};\n\n\nexport type Subscription_RootSupply_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Supply_Stream_Cursor_Input>>;\n  where?: InputMaybe<Supply_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSwapsArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSwaps_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Swaps_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Swaps_Order_By>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\nexport type Subscription_RootSwaps_By_PkArgs = {\n  pool_id: Scalars['bigint']['input'];\n};\n\n\nexport type Subscription_RootSwaps_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Swaps_Stream_Cursor_Input>>;\n  where?: InputMaybe<Swaps_Bool_Exp>;\n};\n\n\nexport type Subscription_RootToday_Top_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Today_Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Today_Top_Txs_Order_By>>;\n  where?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootToday_Top_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Today_Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Today_Top_Txs_Order_By>>;\n  where?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootToday_Top_Txs_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Today_Top_Txs_Stream_Cursor_Input>>;\n  where?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_10_Of_Active_Neurons_WeekArgs = {\n  distinct_on?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Order_By>>;\n  where?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_10_Of_Active_Neurons_Week_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Order_By>>;\n  where?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_10_Of_Active_Neurons_Week_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Top_10_Of_Active_Neurons_Week_Stream_Cursor_Input>>;\n  where?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_First_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Top_First_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_First_Txs_Order_By>>;\n  where?: InputMaybe<Top_First_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_First_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_First_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_First_Txs_Order_By>>;\n  where?: InputMaybe<Top_First_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_First_Txs_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Top_First_Txs_Stream_Cursor_Input>>;\n  where?: InputMaybe<Top_First_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_LeadersArgs = {\n  distinct_on?: InputMaybe<Array<Top_Leaders_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Leaders_Order_By>>;\n  where?: InputMaybe<Top_Leaders_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_Leaders_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_Leaders_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Leaders_Order_By>>;\n  where?: InputMaybe<Top_Leaders_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_Leaders_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Top_Leaders_Stream_Cursor_Input>>;\n  where?: InputMaybe<Top_Leaders_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_TxsArgs = {\n  distinct_on?: InputMaybe<Array<Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Txs_Order_By>>;\n  where?: InputMaybe<Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_Txs_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Top_Txs_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Top_Txs_Order_By>>;\n  where?: InputMaybe<Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTop_Txs_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Top_Txs_Stream_Cursor_Input>>;\n  where?: InputMaybe<Top_Txs_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransactionArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransaction_155Args = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransaction_155_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_155_Order_By>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransaction_155_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Transaction_155_Stream_Cursor_Input>>;\n  where?: InputMaybe<Transaction_155_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Transaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Transaction_Order_By>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTransaction_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Transaction_Stream_Cursor_Input>>;\n  where?: InputMaybe<Transaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTweets_StatsArgs = {\n  distinct_on?: InputMaybe<Array<Tweets_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Tweets_Stats_Order_By>>;\n  where?: InputMaybe<Tweets_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTweets_Stats_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Tweets_Stats_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Tweets_Stats_Order_By>>;\n  where?: InputMaybe<Tweets_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTweets_Stats_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Tweets_Stats_Stream_Cursor_Input>>;\n  where?: InputMaybe<Tweets_Stats_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTxs_RankedArgs = {\n  distinct_on?: InputMaybe<Array<Txs_Ranked_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Txs_Ranked_Order_By>>;\n  where?: InputMaybe<Txs_Ranked_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTxs_Ranked_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Txs_Ranked_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Txs_Ranked_Order_By>>;\n  where?: InputMaybe<Txs_Ranked_Bool_Exp>;\n};\n\n\nexport type Subscription_RootTxs_Ranked_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Txs_Ranked_Stream_Cursor_Input>>;\n  where?: InputMaybe<Txs_Ranked_Bool_Exp>;\n};\n\n\nexport type Subscription_RootUptimeArgs = {\n  distinct_on?: InputMaybe<Array<Uptime_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Uptime_Order_By>>;\n  where?: InputMaybe<Uptime_Bool_Exp>;\n};\n\n\nexport type Subscription_RootUptime_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Uptime_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Uptime_Order_By>>;\n  where?: InputMaybe<Uptime_Bool_Exp>;\n};\n\n\nexport type Subscription_RootUptime_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Uptime_Stream_Cursor_Input>>;\n  where?: InputMaybe<Uptime_Bool_Exp>;\n};\n\n\nexport type Subscription_RootValidatorArgs = {\n  distinct_on?: InputMaybe<Array<Validator_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Validator_Order_By>>;\n  where?: InputMaybe<Validator_Bool_Exp>;\n};\n\n\nexport type Subscription_RootValidator_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Validator_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Validator_Order_By>>;\n  where?: InputMaybe<Validator_Bool_Exp>;\n};\n\n\nexport type Subscription_RootValidator_By_PkArgs = {\n  consensus_address: Scalars['String']['input'];\n};\n\n\nexport type Subscription_RootValidator_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Validator_Stream_Cursor_Input>>;\n  where?: InputMaybe<Validator_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_AccountArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_Account_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Account_Order_By>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_Account_By_PkArgs = {\n  id: Scalars['Int']['input'];\n};\n\n\nexport type Subscription_RootVesting_Account_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Vesting_Account_Stream_Cursor_Input>>;\n  where?: InputMaybe<Vesting_Account_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_PeriodArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_Period_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\nexport type Subscription_RootVesting_Period_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Vesting_Period_Stream_Cursor_Input>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_RedelegationArgs = {\n  distinct_on?: InputMaybe<Array<Week_Redelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Redelegation_Order_By>>;\n  where?: InputMaybe<Week_Redelegation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_Redelegation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Week_Redelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Redelegation_Order_By>>;\n  where?: InputMaybe<Week_Redelegation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_Redelegation_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Week_Redelegation_Stream_Cursor_Input>>;\n  where?: InputMaybe<Week_Redelegation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_UndelegationArgs = {\n  distinct_on?: InputMaybe<Array<Week_Undelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Undelegation_Order_By>>;\n  where?: InputMaybe<Week_Undelegation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_Undelegation_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Week_Undelegation_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Week_Undelegation_Order_By>>;\n  where?: InputMaybe<Week_Undelegation_Bool_Exp>;\n};\n\n\nexport type Subscription_RootWeek_Undelegation_StreamArgs = {\n  batch_size: Scalars['Int']['input'];\n  cursor: Array<InputMaybe<Week_Undelegation_Stream_Cursor_Input>>;\n  where?: InputMaybe<Week_Undelegation_Bool_Exp>;\n};\n\n/** columns and relationships of \"supply\" */\nexport type Supply = {\n  coins: Array<Scalars['coin']['output']>;\n  height: Scalars['bigint']['output'];\n  one_row_id: Scalars['Boolean']['output'];\n};\n\n/** aggregated selection of \"supply\" */\nexport type Supply_Aggregate = {\n  aggregate?: Maybe<Supply_Aggregate_Fields>;\n  nodes: Array<Supply>;\n};\n\n/** aggregate fields of \"supply\" */\nexport type Supply_Aggregate_Fields = {\n  avg?: Maybe<Supply_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Supply_Max_Fields>;\n  min?: Maybe<Supply_Min_Fields>;\n  stddev?: Maybe<Supply_Stddev_Fields>;\n  stddev_pop?: Maybe<Supply_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Supply_Stddev_Samp_Fields>;\n  sum?: Maybe<Supply_Sum_Fields>;\n  var_pop?: Maybe<Supply_Var_Pop_Fields>;\n  var_samp?: Maybe<Supply_Var_Samp_Fields>;\n  variance?: Maybe<Supply_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"supply\" */\nexport type Supply_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Supply_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Supply_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"supply\". All fields are combined with a logical 'AND'. */\nexport type Supply_Bool_Exp = {\n  _and?: InputMaybe<Array<Supply_Bool_Exp>>;\n  _not?: InputMaybe<Supply_Bool_Exp>;\n  _or?: InputMaybe<Array<Supply_Bool_Exp>>;\n  coins?: InputMaybe<Coin_Array_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  one_row_id?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Supply_Max_Fields = {\n  coins?: Maybe<Array<Scalars['coin']['output']>>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Supply_Min_Fields = {\n  coins?: Maybe<Array<Scalars['coin']['output']>>;\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"supply\". */\nexport type Supply_Order_By = {\n  coins?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  one_row_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"supply\" */\nexport enum Supply_Select_Column {\n  /** column name */\n  Coins = 'coins',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  OneRowId = 'one_row_id'\n}\n\n/** aggregate stddev on columns */\nexport type Supply_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Supply_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Supply_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"supply\" */\nexport type Supply_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Supply_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Supply_Stream_Cursor_Value_Input = {\n  coins?: InputMaybe<Array<Scalars['coin']['input']>>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  one_row_id?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Supply_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Supply_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Supply_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Supply_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"swaps\" */\nexport type Swaps = {\n  address: Scalars['String']['output'];\n  /** An object relationship */\n  block: Block;\n  exchanged_demand_coin: Scalars['coin_scalar']['output'];\n  exchanged_demand_coin_fee: Scalars['coin_scalar']['output'];\n  exchanged_offer_coin: Scalars['coin_scalar']['output'];\n  exchanged_offer_coin_fee: Scalars['coin_scalar']['output'];\n  height: Scalars['bigint']['output'];\n  pool_id: Scalars['bigint']['output'];\n  swap_price: Scalars['String']['output'];\n};\n\n/** aggregated selection of \"swaps\" */\nexport type Swaps_Aggregate = {\n  aggregate?: Maybe<Swaps_Aggregate_Fields>;\n  nodes: Array<Swaps>;\n};\n\nexport type Swaps_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Swaps_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Swaps_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Swaps_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Swaps_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"swaps\" */\nexport type Swaps_Aggregate_Fields = {\n  avg?: Maybe<Swaps_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Swaps_Max_Fields>;\n  min?: Maybe<Swaps_Min_Fields>;\n  stddev?: Maybe<Swaps_Stddev_Fields>;\n  stddev_pop?: Maybe<Swaps_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Swaps_Stddev_Samp_Fields>;\n  sum?: Maybe<Swaps_Sum_Fields>;\n  var_pop?: Maybe<Swaps_Var_Pop_Fields>;\n  var_samp?: Maybe<Swaps_Var_Samp_Fields>;\n  variance?: Maybe<Swaps_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"swaps\" */\nexport type Swaps_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Swaps_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"swaps\" */\nexport type Swaps_Aggregate_Order_By = {\n  avg?: InputMaybe<Swaps_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Swaps_Max_Order_By>;\n  min?: InputMaybe<Swaps_Min_Order_By>;\n  stddev?: InputMaybe<Swaps_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Swaps_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Swaps_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Swaps_Sum_Order_By>;\n  var_pop?: InputMaybe<Swaps_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Swaps_Var_Samp_Order_By>;\n  variance?: InputMaybe<Swaps_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Swaps_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"swaps\" */\nexport type Swaps_Avg_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"swaps\". All fields are combined with a logical 'AND'. */\nexport type Swaps_Bool_Exp = {\n  _and?: InputMaybe<Array<Swaps_Bool_Exp>>;\n  _not?: InputMaybe<Swaps_Bool_Exp>;\n  _or?: InputMaybe<Array<Swaps_Bool_Exp>>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  exchanged_demand_coin?: InputMaybe<Coin_Scalar_Comparison_Exp>;\n  exchanged_demand_coin_fee?: InputMaybe<Coin_Scalar_Comparison_Exp>;\n  exchanged_offer_coin?: InputMaybe<Coin_Scalar_Comparison_Exp>;\n  exchanged_offer_coin_fee?: InputMaybe<Coin_Scalar_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  pool_id?: InputMaybe<Bigint_Comparison_Exp>;\n  swap_price?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Swaps_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  exchanged_demand_coin?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_demand_coin_fee?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_offer_coin?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_offer_coin_fee?: Maybe<Scalars['coin_scalar']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  swap_price?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"swaps\" */\nexport type Swaps_Max_Order_By = {\n  address?: InputMaybe<Order_By>;\n  exchanged_demand_coin?: InputMaybe<Order_By>;\n  exchanged_demand_coin_fee?: InputMaybe<Order_By>;\n  exchanged_offer_coin?: InputMaybe<Order_By>;\n  exchanged_offer_coin_fee?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  swap_price?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Swaps_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  exchanged_demand_coin?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_demand_coin_fee?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_offer_coin?: Maybe<Scalars['coin_scalar']['output']>;\n  exchanged_offer_coin_fee?: Maybe<Scalars['coin_scalar']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n  swap_price?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"swaps\" */\nexport type Swaps_Min_Order_By = {\n  address?: InputMaybe<Order_By>;\n  exchanged_demand_coin?: InputMaybe<Order_By>;\n  exchanged_demand_coin_fee?: InputMaybe<Order_By>;\n  exchanged_offer_coin?: InputMaybe<Order_By>;\n  exchanged_offer_coin_fee?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  swap_price?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"swaps\". */\nexport type Swaps_Order_By = {\n  address?: InputMaybe<Order_By>;\n  block?: InputMaybe<Block_Order_By>;\n  exchanged_demand_coin?: InputMaybe<Order_By>;\n  exchanged_demand_coin_fee?: InputMaybe<Order_By>;\n  exchanged_offer_coin?: InputMaybe<Order_By>;\n  exchanged_offer_coin_fee?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n  swap_price?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"swaps\" */\nexport enum Swaps_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  ExchangedDemandCoin = 'exchanged_demand_coin',\n  /** column name */\n  ExchangedDemandCoinFee = 'exchanged_demand_coin_fee',\n  /** column name */\n  ExchangedOfferCoin = 'exchanged_offer_coin',\n  /** column name */\n  ExchangedOfferCoinFee = 'exchanged_offer_coin_fee',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  PoolId = 'pool_id',\n  /** column name */\n  SwapPrice = 'swap_price'\n}\n\n/** aggregate stddev on columns */\nexport type Swaps_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"swaps\" */\nexport type Swaps_Stddev_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Swaps_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"swaps\" */\nexport type Swaps_Stddev_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Swaps_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"swaps\" */\nexport type Swaps_Stddev_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"swaps\" */\nexport type Swaps_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Swaps_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Swaps_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  exchanged_demand_coin?: InputMaybe<Scalars['coin_scalar']['input']>;\n  exchanged_demand_coin_fee?: InputMaybe<Scalars['coin_scalar']['input']>;\n  exchanged_offer_coin?: InputMaybe<Scalars['coin_scalar']['input']>;\n  exchanged_offer_coin_fee?: InputMaybe<Scalars['coin_scalar']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  pool_id?: InputMaybe<Scalars['bigint']['input']>;\n  swap_price?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Swaps_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  pool_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"swaps\" */\nexport type Swaps_Sum_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Swaps_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"swaps\" */\nexport type Swaps_Var_Pop_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Swaps_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"swaps\" */\nexport type Swaps_Var_Samp_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Swaps_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  pool_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"swaps\" */\nexport type Swaps_Variance_Order_By = {\n  height?: InputMaybe<Order_By>;\n  pool_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"timestamp\". All fields are combined with logical 'AND'. */\nexport type Timestamp_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['timestamp']['input']>;\n  _gt?: InputMaybe<Scalars['timestamp']['input']>;\n  _gte?: InputMaybe<Scalars['timestamp']['input']>;\n  _in?: InputMaybe<Array<Scalars['timestamp']['input']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']['input']>;\n  _lt?: InputMaybe<Scalars['timestamp']['input']>;\n  _lte?: InputMaybe<Scalars['timestamp']['input']>;\n  _neq?: InputMaybe<Scalars['timestamp']['input']>;\n  _nin?: InputMaybe<Array<Scalars['timestamp']['input']>>;\n};\n\n/** columns and relationships of \"today_top_txs\" */\nexport type Today_Top_Txs = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"today_top_txs\" */\nexport type Today_Top_Txs_Aggregate = {\n  aggregate?: Maybe<Today_Top_Txs_Aggregate_Fields>;\n  nodes: Array<Today_Top_Txs>;\n};\n\n/** aggregate fields of \"today_top_txs\" */\nexport type Today_Top_Txs_Aggregate_Fields = {\n  avg?: Maybe<Today_Top_Txs_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Today_Top_Txs_Max_Fields>;\n  min?: Maybe<Today_Top_Txs_Min_Fields>;\n  stddev?: Maybe<Today_Top_Txs_Stddev_Fields>;\n  stddev_pop?: Maybe<Today_Top_Txs_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Today_Top_Txs_Stddev_Samp_Fields>;\n  sum?: Maybe<Today_Top_Txs_Sum_Fields>;\n  var_pop?: Maybe<Today_Top_Txs_Var_Pop_Fields>;\n  var_samp?: Maybe<Today_Top_Txs_Var_Samp_Fields>;\n  variance?: Maybe<Today_Top_Txs_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"today_top_txs\" */\nexport type Today_Top_Txs_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Today_Top_Txs_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Today_Top_Txs_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"today_top_txs\". All fields are combined with a logical 'AND'. */\nexport type Today_Top_Txs_Bool_Exp = {\n  _and?: InputMaybe<Array<Today_Top_Txs_Bool_Exp>>;\n  _not?: InputMaybe<Today_Top_Txs_Bool_Exp>;\n  _or?: InputMaybe<Array<Today_Top_Txs_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Today_Top_Txs_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Today_Top_Txs_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"today_top_txs\". */\nexport type Today_Top_Txs_Order_By = {\n  count?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"today_top_txs\" */\nexport enum Today_Top_Txs_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Type = 'type'\n}\n\n/** aggregate stddev on columns */\nexport type Today_Top_Txs_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Today_Top_Txs_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Today_Top_Txs_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"today_top_txs\" */\nexport type Today_Top_Txs_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Today_Top_Txs_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Today_Top_Txs_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Today_Top_Txs_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Today_Top_Txs_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Today_Top_Txs_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Today_Top_Txs_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"top_10_of_active_neurons_week\" */\nexport type Top_10_Of_Active_Neurons_Week = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  pubkey?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"top_10_of_active_neurons_week\" */\nexport type Top_10_Of_Active_Neurons_Week_Aggregate = {\n  aggregate?: Maybe<Top_10_Of_Active_Neurons_Week_Aggregate_Fields>;\n  nodes: Array<Top_10_Of_Active_Neurons_Week>;\n};\n\n/** aggregate fields of \"top_10_of_active_neurons_week\" */\nexport type Top_10_Of_Active_Neurons_Week_Aggregate_Fields = {\n  avg?: Maybe<Top_10_Of_Active_Neurons_Week_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Top_10_Of_Active_Neurons_Week_Max_Fields>;\n  min?: Maybe<Top_10_Of_Active_Neurons_Week_Min_Fields>;\n  stddev?: Maybe<Top_10_Of_Active_Neurons_Week_Stddev_Fields>;\n  stddev_pop?: Maybe<Top_10_Of_Active_Neurons_Week_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Top_10_Of_Active_Neurons_Week_Stddev_Samp_Fields>;\n  sum?: Maybe<Top_10_Of_Active_Neurons_Week_Sum_Fields>;\n  var_pop?: Maybe<Top_10_Of_Active_Neurons_Week_Var_Pop_Fields>;\n  var_samp?: Maybe<Top_10_Of_Active_Neurons_Week_Var_Samp_Fields>;\n  variance?: Maybe<Top_10_Of_Active_Neurons_Week_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"top_10_of_active_neurons_week\" */\nexport type Top_10_Of_Active_Neurons_Week_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Top_10_Of_Active_Neurons_Week_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"top_10_of_active_neurons_week\". All fields are combined with a logical 'AND'. */\nexport type Top_10_Of_Active_Neurons_Week_Bool_Exp = {\n  _and?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Bool_Exp>>;\n  _not?: InputMaybe<Top_10_Of_Active_Neurons_Week_Bool_Exp>;\n  _or?: InputMaybe<Array<Top_10_Of_Active_Neurons_Week_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  pubkey?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Top_10_Of_Active_Neurons_Week_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  pubkey?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Top_10_Of_Active_Neurons_Week_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  pubkey?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"top_10_of_active_neurons_week\". */\nexport type Top_10_Of_Active_Neurons_Week_Order_By = {\n  count?: InputMaybe<Order_By>;\n  pubkey?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"top_10_of_active_neurons_week\" */\nexport enum Top_10_Of_Active_Neurons_Week_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Pubkey = 'pubkey'\n}\n\n/** aggregate stddev on columns */\nexport type Top_10_Of_Active_Neurons_Week_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Top_10_Of_Active_Neurons_Week_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Top_10_Of_Active_Neurons_Week_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"top_10_of_active_neurons_week\" */\nexport type Top_10_Of_Active_Neurons_Week_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Top_10_Of_Active_Neurons_Week_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Top_10_Of_Active_Neurons_Week_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  pubkey?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Top_10_Of_Active_Neurons_Week_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Top_10_Of_Active_Neurons_Week_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Top_10_Of_Active_Neurons_Week_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Top_10_Of_Active_Neurons_Week_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"top_first_txs\" */\nexport type Top_First_Txs = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"top_first_txs\" */\nexport type Top_First_Txs_Aggregate = {\n  aggregate?: Maybe<Top_First_Txs_Aggregate_Fields>;\n  nodes: Array<Top_First_Txs>;\n};\n\n/** aggregate fields of \"top_first_txs\" */\nexport type Top_First_Txs_Aggregate_Fields = {\n  avg?: Maybe<Top_First_Txs_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Top_First_Txs_Max_Fields>;\n  min?: Maybe<Top_First_Txs_Min_Fields>;\n  stddev?: Maybe<Top_First_Txs_Stddev_Fields>;\n  stddev_pop?: Maybe<Top_First_Txs_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Top_First_Txs_Stddev_Samp_Fields>;\n  sum?: Maybe<Top_First_Txs_Sum_Fields>;\n  var_pop?: Maybe<Top_First_Txs_Var_Pop_Fields>;\n  var_samp?: Maybe<Top_First_Txs_Var_Samp_Fields>;\n  variance?: Maybe<Top_First_Txs_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"top_first_txs\" */\nexport type Top_First_Txs_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Top_First_Txs_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Top_First_Txs_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"top_first_txs\". All fields are combined with a logical 'AND'. */\nexport type Top_First_Txs_Bool_Exp = {\n  _and?: InputMaybe<Array<Top_First_Txs_Bool_Exp>>;\n  _not?: InputMaybe<Top_First_Txs_Bool_Exp>;\n  _or?: InputMaybe<Array<Top_First_Txs_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Top_First_Txs_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Top_First_Txs_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"top_first_txs\". */\nexport type Top_First_Txs_Order_By = {\n  count?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"top_first_txs\" */\nexport enum Top_First_Txs_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Type = 'type'\n}\n\n/** aggregate stddev on columns */\nexport type Top_First_Txs_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Top_First_Txs_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Top_First_Txs_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"top_first_txs\" */\nexport type Top_First_Txs_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Top_First_Txs_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Top_First_Txs_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Top_First_Txs_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Top_First_Txs_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Top_First_Txs_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Top_First_Txs_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"top_leaders\" */\nexport type Top_Leaders = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"top_leaders\" */\nexport type Top_Leaders_Aggregate = {\n  aggregate?: Maybe<Top_Leaders_Aggregate_Fields>;\n  nodes: Array<Top_Leaders>;\n};\n\n/** aggregate fields of \"top_leaders\" */\nexport type Top_Leaders_Aggregate_Fields = {\n  avg?: Maybe<Top_Leaders_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Top_Leaders_Max_Fields>;\n  min?: Maybe<Top_Leaders_Min_Fields>;\n  stddev?: Maybe<Top_Leaders_Stddev_Fields>;\n  stddev_pop?: Maybe<Top_Leaders_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Top_Leaders_Stddev_Samp_Fields>;\n  sum?: Maybe<Top_Leaders_Sum_Fields>;\n  var_pop?: Maybe<Top_Leaders_Var_Pop_Fields>;\n  var_samp?: Maybe<Top_Leaders_Var_Samp_Fields>;\n  variance?: Maybe<Top_Leaders_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"top_leaders\" */\nexport type Top_Leaders_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Top_Leaders_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Top_Leaders_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"top_leaders\". All fields are combined with a logical 'AND'. */\nexport type Top_Leaders_Bool_Exp = {\n  _and?: InputMaybe<Array<Top_Leaders_Bool_Exp>>;\n  _not?: InputMaybe<Top_Leaders_Bool_Exp>;\n  _or?: InputMaybe<Array<Top_Leaders_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  neuron?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Top_Leaders_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Top_Leaders_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"top_leaders\". */\nexport type Top_Leaders_Order_By = {\n  count?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"top_leaders\" */\nexport enum Top_Leaders_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Neuron = 'neuron'\n}\n\n/** aggregate stddev on columns */\nexport type Top_Leaders_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Top_Leaders_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Top_Leaders_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"top_leaders\" */\nexport type Top_Leaders_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Top_Leaders_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Top_Leaders_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  neuron?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Top_Leaders_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Top_Leaders_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Top_Leaders_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Top_Leaders_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"top_txs\" */\nexport type Top_Txs = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregated selection of \"top_txs\" */\nexport type Top_Txs_Aggregate = {\n  aggregate?: Maybe<Top_Txs_Aggregate_Fields>;\n  nodes: Array<Top_Txs>;\n};\n\n/** aggregate fields of \"top_txs\" */\nexport type Top_Txs_Aggregate_Fields = {\n  avg?: Maybe<Top_Txs_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Top_Txs_Max_Fields>;\n  min?: Maybe<Top_Txs_Min_Fields>;\n  stddev?: Maybe<Top_Txs_Stddev_Fields>;\n  stddev_pop?: Maybe<Top_Txs_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Top_Txs_Stddev_Samp_Fields>;\n  sum?: Maybe<Top_Txs_Sum_Fields>;\n  var_pop?: Maybe<Top_Txs_Var_Pop_Fields>;\n  var_samp?: Maybe<Top_Txs_Var_Samp_Fields>;\n  variance?: Maybe<Top_Txs_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"top_txs\" */\nexport type Top_Txs_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Top_Txs_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Top_Txs_Avg_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"top_txs\". All fields are combined with a logical 'AND'. */\nexport type Top_Txs_Bool_Exp = {\n  _and?: InputMaybe<Array<Top_Txs_Bool_Exp>>;\n  _not?: InputMaybe<Top_Txs_Bool_Exp>;\n  _or?: InputMaybe<Array<Top_Txs_Bool_Exp>>;\n  count?: InputMaybe<Bigint_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Top_Txs_Max_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Top_Txs_Min_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"top_txs\". */\nexport type Top_Txs_Order_By = {\n  count?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"top_txs\" */\nexport enum Top_Txs_Select_Column {\n  /** column name */\n  Count = 'count',\n  /** column name */\n  Type = 'type'\n}\n\n/** aggregate stddev on columns */\nexport type Top_Txs_Stddev_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Top_Txs_Stddev_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Top_Txs_Stddev_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"top_txs\" */\nexport type Top_Txs_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Top_Txs_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Top_Txs_Stream_Cursor_Value_Input = {\n  count?: InputMaybe<Scalars['bigint']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Top_Txs_Sum_Fields = {\n  count?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Top_Txs_Var_Pop_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Top_Txs_Var_Samp_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Top_Txs_Variance_Fields = {\n  count?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"transaction\" */\nexport type Transaction = {\n  /** An object relationship */\n  block: Block;\n  fee: Scalars['jsonb']['output'];\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash: Scalars['String']['output'];\n  height: Scalars['bigint']['output'];\n  logs?: Maybe<Scalars['jsonb']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  /** An array relationship */\n  message_155s: Array<Message_155>;\n  /** An aggregate relationship */\n  message_155s_aggregate: Message_155_Aggregate;\n  messages: Scalars['json']['output'];\n  /** An array relationship */\n  messagesByPartitionIdTransactionHash: Array<Message>;\n  /** An aggregate relationship */\n  messagesByPartitionIdTransactionHash_aggregate: Message_Aggregate;\n  partition_id: Scalars['bigint']['output'];\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures: Array<Scalars['String']['output']>;\n  signer_infos: Scalars['jsonb']['output'];\n  success: Scalars['Boolean']['output'];\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionFeeArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionLogsArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionMessage_155sArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionMessage_155s_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_155_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_155_Order_By>>;\n  where?: InputMaybe<Message_155_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionMessagesArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionMessagesByPartitionIdTransactionHashArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionMessagesByPartitionIdTransactionHash_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction\" */\nexport type TransactionSigner_InfosArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155 = {\n  /** An object relationship */\n  block: Block;\n  fee: Scalars['jsonb']['output'];\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash: Scalars['String']['output'];\n  height: Scalars['bigint']['output'];\n  logs?: Maybe<Scalars['jsonb']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  messages: Scalars['json']['output'];\n  /** An array relationship */\n  messagesByTransactionHashPartitionId: Array<Message>;\n  /** An aggregate relationship */\n  messagesByTransactionHashPartitionId_aggregate: Message_Aggregate;\n  partition_id: Scalars['bigint']['output'];\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures: Array<Scalars['String']['output']>;\n  signer_infos: Scalars['jsonb']['output'];\n  success: Scalars['Boolean']['output'];\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155FeeArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155LogsArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155MessagesArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155MessagesByTransactionHashPartitionIdArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155MessagesByTransactionHashPartitionId_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"transaction_155\" */\nexport type Transaction_155Signer_InfosArgs = {\n  path?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregated selection of \"transaction_155\" */\nexport type Transaction_155_Aggregate = {\n  aggregate?: Maybe<Transaction_155_Aggregate_Fields>;\n  nodes: Array<Transaction_155>;\n};\n\nexport type Transaction_155_Aggregate_Bool_Exp = {\n  bool_and?: InputMaybe<Transaction_155_Aggregate_Bool_Exp_Bool_And>;\n  bool_or?: InputMaybe<Transaction_155_Aggregate_Bool_Exp_Bool_Or>;\n  count?: InputMaybe<Transaction_155_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Transaction_155_Aggregate_Bool_Exp_Bool_And = {\n  arguments: Transaction_155_Select_Column_Transaction_155_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_155_Bool_Exp>;\n  predicate: Boolean_Comparison_Exp;\n};\n\nexport type Transaction_155_Aggregate_Bool_Exp_Bool_Or = {\n  arguments: Transaction_155_Select_Column_Transaction_155_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_155_Bool_Exp>;\n  predicate: Boolean_Comparison_Exp;\n};\n\nexport type Transaction_155_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_155_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"transaction_155\" */\nexport type Transaction_155_Aggregate_Fields = {\n  avg?: Maybe<Transaction_155_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Transaction_155_Max_Fields>;\n  min?: Maybe<Transaction_155_Min_Fields>;\n  stddev?: Maybe<Transaction_155_Stddev_Fields>;\n  stddev_pop?: Maybe<Transaction_155_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Transaction_155_Stddev_Samp_Fields>;\n  sum?: Maybe<Transaction_155_Sum_Fields>;\n  var_pop?: Maybe<Transaction_155_Var_Pop_Fields>;\n  var_samp?: Maybe<Transaction_155_Var_Samp_Fields>;\n  variance?: Maybe<Transaction_155_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"transaction_155\" */\nexport type Transaction_155_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Transaction_155_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"transaction_155\" */\nexport type Transaction_155_Aggregate_Order_By = {\n  avg?: InputMaybe<Transaction_155_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Transaction_155_Max_Order_By>;\n  min?: InputMaybe<Transaction_155_Min_Order_By>;\n  stddev?: InputMaybe<Transaction_155_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Transaction_155_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Transaction_155_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Transaction_155_Sum_Order_By>;\n  var_pop?: InputMaybe<Transaction_155_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Transaction_155_Var_Samp_Order_By>;\n  variance?: InputMaybe<Transaction_155_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Transaction_155_Avg_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"transaction_155\" */\nexport type Transaction_155_Avg_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"transaction_155\". All fields are combined with a logical 'AND'. */\nexport type Transaction_155_Bool_Exp = {\n  _and?: InputMaybe<Array<Transaction_155_Bool_Exp>>;\n  _not?: InputMaybe<Transaction_155_Bool_Exp>;\n  _or?: InputMaybe<Array<Transaction_155_Bool_Exp>>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  fee?: InputMaybe<Jsonb_Comparison_Exp>;\n  gas_used?: InputMaybe<Bigint_Comparison_Exp>;\n  gas_wanted?: InputMaybe<Bigint_Comparison_Exp>;\n  hash?: InputMaybe<String_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  logs?: InputMaybe<Jsonb_Comparison_Exp>;\n  memo?: InputMaybe<String_Comparison_Exp>;\n  messages?: InputMaybe<Json_Comparison_Exp>;\n  messagesByTransactionHashPartitionId?: InputMaybe<Message_Bool_Exp>;\n  messagesByTransactionHashPartitionId_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  partition_id?: InputMaybe<Bigint_Comparison_Exp>;\n  raw_log?: InputMaybe<String_Comparison_Exp>;\n  signatures?: InputMaybe<String_Array_Comparison_Exp>;\n  signer_infos?: InputMaybe<Jsonb_Comparison_Exp>;\n  success?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Transaction_155_Max_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** order by max() on columns of table \"transaction_155\" */\nexport type Transaction_155_Max_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Transaction_155_Min_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** order by min() on columns of table \"transaction_155\" */\nexport type Transaction_155_Min_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"transaction_155\". */\nexport type Transaction_155_Order_By = {\n  block?: InputMaybe<Block_Order_By>;\n  fee?: InputMaybe<Order_By>;\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  logs?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  messages?: InputMaybe<Order_By>;\n  messagesByTransactionHashPartitionId_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n  signer_infos?: InputMaybe<Order_By>;\n  success?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"transaction_155\" */\nexport enum Transaction_155_Select_Column {\n  /** column name */\n  Fee = 'fee',\n  /** column name */\n  GasUsed = 'gas_used',\n  /** column name */\n  GasWanted = 'gas_wanted',\n  /** column name */\n  Hash = 'hash',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Logs = 'logs',\n  /** column name */\n  Memo = 'memo',\n  /** column name */\n  Messages = 'messages',\n  /** column name */\n  PartitionId = 'partition_id',\n  /** column name */\n  RawLog = 'raw_log',\n  /** column name */\n  Signatures = 'signatures',\n  /** column name */\n  SignerInfos = 'signer_infos',\n  /** column name */\n  Success = 'success'\n}\n\n/** select \"transaction_155_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"transaction_155\" */\nexport enum Transaction_155_Select_Column_Transaction_155_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {\n  /** column name */\n  Success = 'success'\n}\n\n/** select \"transaction_155_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"transaction_155\" */\nexport enum Transaction_155_Select_Column_Transaction_155_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {\n  /** column name */\n  Success = 'success'\n}\n\n/** aggregate stddev on columns */\nexport type Transaction_155_Stddev_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"transaction_155\" */\nexport type Transaction_155_Stddev_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Transaction_155_Stddev_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"transaction_155\" */\nexport type Transaction_155_Stddev_Pop_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Transaction_155_Stddev_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"transaction_155\" */\nexport type Transaction_155_Stddev_Samp_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"transaction_155\" */\nexport type Transaction_155_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Transaction_155_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Transaction_155_Stream_Cursor_Value_Input = {\n  fee?: InputMaybe<Scalars['jsonb']['input']>;\n  gas_used?: InputMaybe<Scalars['bigint']['input']>;\n  gas_wanted?: InputMaybe<Scalars['bigint']['input']>;\n  hash?: InputMaybe<Scalars['String']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  logs?: InputMaybe<Scalars['jsonb']['input']>;\n  memo?: InputMaybe<Scalars['String']['input']>;\n  messages?: InputMaybe<Scalars['json']['input']>;\n  partition_id?: InputMaybe<Scalars['bigint']['input']>;\n  raw_log?: InputMaybe<Scalars['String']['input']>;\n  signatures?: InputMaybe<Array<Scalars['String']['input']>>;\n  signer_infos?: InputMaybe<Scalars['jsonb']['input']>;\n  success?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Transaction_155_Sum_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"transaction_155\" */\nexport type Transaction_155_Sum_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Transaction_155_Var_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"transaction_155\" */\nexport type Transaction_155_Var_Pop_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Transaction_155_Var_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"transaction_155\" */\nexport type Transaction_155_Var_Samp_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Transaction_155_Variance_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"transaction_155\" */\nexport type Transaction_155_Variance_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregated selection of \"transaction\" */\nexport type Transaction_Aggregate = {\n  aggregate?: Maybe<Transaction_Aggregate_Fields>;\n  nodes: Array<Transaction>;\n};\n\nexport type Transaction_Aggregate_Bool_Exp = {\n  bool_and?: InputMaybe<Transaction_Aggregate_Bool_Exp_Bool_And>;\n  bool_or?: InputMaybe<Transaction_Aggregate_Bool_Exp_Bool_Or>;\n  count?: InputMaybe<Transaction_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Transaction_Aggregate_Bool_Exp_Bool_And = {\n  arguments: Transaction_Select_Column_Transaction_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_Bool_Exp>;\n  predicate: Boolean_Comparison_Exp;\n};\n\nexport type Transaction_Aggregate_Bool_Exp_Bool_Or = {\n  arguments: Transaction_Select_Column_Transaction_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_Bool_Exp>;\n  predicate: Boolean_Comparison_Exp;\n};\n\nexport type Transaction_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Transaction_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Transaction_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"transaction\" */\nexport type Transaction_Aggregate_Fields = {\n  avg?: Maybe<Transaction_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Transaction_Max_Fields>;\n  min?: Maybe<Transaction_Min_Fields>;\n  stddev?: Maybe<Transaction_Stddev_Fields>;\n  stddev_pop?: Maybe<Transaction_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Transaction_Stddev_Samp_Fields>;\n  sum?: Maybe<Transaction_Sum_Fields>;\n  var_pop?: Maybe<Transaction_Var_Pop_Fields>;\n  var_samp?: Maybe<Transaction_Var_Samp_Fields>;\n  variance?: Maybe<Transaction_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"transaction\" */\nexport type Transaction_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Transaction_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"transaction\" */\nexport type Transaction_Aggregate_Order_By = {\n  avg?: InputMaybe<Transaction_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Transaction_Max_Order_By>;\n  min?: InputMaybe<Transaction_Min_Order_By>;\n  stddev?: InputMaybe<Transaction_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Transaction_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Transaction_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Transaction_Sum_Order_By>;\n  var_pop?: InputMaybe<Transaction_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Transaction_Var_Samp_Order_By>;\n  variance?: InputMaybe<Transaction_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Transaction_Avg_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"transaction\" */\nexport type Transaction_Avg_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"transaction\". All fields are combined with a logical 'AND'. */\nexport type Transaction_Bool_Exp = {\n  _and?: InputMaybe<Array<Transaction_Bool_Exp>>;\n  _not?: InputMaybe<Transaction_Bool_Exp>;\n  _or?: InputMaybe<Array<Transaction_Bool_Exp>>;\n  block?: InputMaybe<Block_Bool_Exp>;\n  fee?: InputMaybe<Jsonb_Comparison_Exp>;\n  gas_used?: InputMaybe<Bigint_Comparison_Exp>;\n  gas_wanted?: InputMaybe<Bigint_Comparison_Exp>;\n  hash?: InputMaybe<String_Comparison_Exp>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  logs?: InputMaybe<Jsonb_Comparison_Exp>;\n  memo?: InputMaybe<String_Comparison_Exp>;\n  message_155s?: InputMaybe<Message_155_Bool_Exp>;\n  message_155s_aggregate?: InputMaybe<Message_155_Aggregate_Bool_Exp>;\n  messages?: InputMaybe<Json_Comparison_Exp>;\n  messagesByPartitionIdTransactionHash?: InputMaybe<Message_Bool_Exp>;\n  messagesByPartitionIdTransactionHash_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  partition_id?: InputMaybe<Bigint_Comparison_Exp>;\n  raw_log?: InputMaybe<String_Comparison_Exp>;\n  signatures?: InputMaybe<String_Array_Comparison_Exp>;\n  signer_infos?: InputMaybe<Jsonb_Comparison_Exp>;\n  success?: InputMaybe<Boolean_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Transaction_Max_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** order by max() on columns of table \"transaction\" */\nexport type Transaction_Max_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Transaction_Min_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  hash?: Maybe<Scalars['String']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  memo?: Maybe<Scalars['String']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n  raw_log?: Maybe<Scalars['String']['output']>;\n  signatures?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** order by min() on columns of table \"transaction\" */\nexport type Transaction_Min_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"transaction\". */\nexport type Transaction_Order_By = {\n  block?: InputMaybe<Block_Order_By>;\n  fee?: InputMaybe<Order_By>;\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  hash?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  logs?: InputMaybe<Order_By>;\n  memo?: InputMaybe<Order_By>;\n  message_155s_aggregate?: InputMaybe<Message_155_Aggregate_Order_By>;\n  messages?: InputMaybe<Order_By>;\n  messagesByPartitionIdTransactionHash_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n  raw_log?: InputMaybe<Order_By>;\n  signatures?: InputMaybe<Order_By>;\n  signer_infos?: InputMaybe<Order_By>;\n  success?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"transaction\" */\nexport enum Transaction_Select_Column {\n  /** column name */\n  Fee = 'fee',\n  /** column name */\n  GasUsed = 'gas_used',\n  /** column name */\n  GasWanted = 'gas_wanted',\n  /** column name */\n  Hash = 'hash',\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Logs = 'logs',\n  /** column name */\n  Memo = 'memo',\n  /** column name */\n  Messages = 'messages',\n  /** column name */\n  PartitionId = 'partition_id',\n  /** column name */\n  RawLog = 'raw_log',\n  /** column name */\n  Signatures = 'signatures',\n  /** column name */\n  SignerInfos = 'signer_infos',\n  /** column name */\n  Success = 'success'\n}\n\n/** select \"transaction_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"transaction\" */\nexport enum Transaction_Select_Column_Transaction_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {\n  /** column name */\n  Success = 'success'\n}\n\n/** select \"transaction_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"transaction\" */\nexport enum Transaction_Select_Column_Transaction_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {\n  /** column name */\n  Success = 'success'\n}\n\n/** aggregate stddev on columns */\nexport type Transaction_Stddev_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"transaction\" */\nexport type Transaction_Stddev_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Transaction_Stddev_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"transaction\" */\nexport type Transaction_Stddev_Pop_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Transaction_Stddev_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"transaction\" */\nexport type Transaction_Stddev_Samp_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"transaction\" */\nexport type Transaction_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Transaction_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Transaction_Stream_Cursor_Value_Input = {\n  fee?: InputMaybe<Scalars['jsonb']['input']>;\n  gas_used?: InputMaybe<Scalars['bigint']['input']>;\n  gas_wanted?: InputMaybe<Scalars['bigint']['input']>;\n  hash?: InputMaybe<Scalars['String']['input']>;\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  logs?: InputMaybe<Scalars['jsonb']['input']>;\n  memo?: InputMaybe<Scalars['String']['input']>;\n  messages?: InputMaybe<Scalars['json']['input']>;\n  partition_id?: InputMaybe<Scalars['bigint']['input']>;\n  raw_log?: InputMaybe<Scalars['String']['input']>;\n  signatures?: InputMaybe<Array<Scalars['String']['input']>>;\n  signer_infos?: InputMaybe<Scalars['jsonb']['input']>;\n  success?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Transaction_Sum_Fields = {\n  gas_used?: Maybe<Scalars['bigint']['output']>;\n  gas_wanted?: Maybe<Scalars['bigint']['output']>;\n  height?: Maybe<Scalars['bigint']['output']>;\n  partition_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"transaction\" */\nexport type Transaction_Sum_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Transaction_Var_Pop_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"transaction\" */\nexport type Transaction_Var_Pop_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Transaction_Var_Samp_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"transaction\" */\nexport type Transaction_Var_Samp_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Transaction_Variance_Fields = {\n  gas_used?: Maybe<Scalars['Float']['output']>;\n  gas_wanted?: Maybe<Scalars['Float']['output']>;\n  height?: Maybe<Scalars['Float']['output']>;\n  partition_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"transaction\" */\nexport type Transaction_Variance_Order_By = {\n  gas_used?: InputMaybe<Order_By>;\n  gas_wanted?: InputMaybe<Order_By>;\n  height?: InputMaybe<Order_By>;\n  partition_id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"tweets_stats\" */\nexport type Tweets_Stats = {\n  date?: Maybe<Scalars['date']['output']>;\n  tweets?: Maybe<Scalars['numeric']['output']>;\n  tweets_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregated selection of \"tweets_stats\" */\nexport type Tweets_Stats_Aggregate = {\n  aggregate?: Maybe<Tweets_Stats_Aggregate_Fields>;\n  nodes: Array<Tweets_Stats>;\n};\n\n/** aggregate fields of \"tweets_stats\" */\nexport type Tweets_Stats_Aggregate_Fields = {\n  avg?: Maybe<Tweets_Stats_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Tweets_Stats_Max_Fields>;\n  min?: Maybe<Tweets_Stats_Min_Fields>;\n  stddev?: Maybe<Tweets_Stats_Stddev_Fields>;\n  stddev_pop?: Maybe<Tweets_Stats_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Tweets_Stats_Stddev_Samp_Fields>;\n  sum?: Maybe<Tweets_Stats_Sum_Fields>;\n  var_pop?: Maybe<Tweets_Stats_Var_Pop_Fields>;\n  var_samp?: Maybe<Tweets_Stats_Var_Samp_Fields>;\n  variance?: Maybe<Tweets_Stats_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"tweets_stats\" */\nexport type Tweets_Stats_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Tweets_Stats_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Tweets_Stats_Avg_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"tweets_stats\". All fields are combined with a logical 'AND'. */\nexport type Tweets_Stats_Bool_Exp = {\n  _and?: InputMaybe<Array<Tweets_Stats_Bool_Exp>>;\n  _not?: InputMaybe<Tweets_Stats_Bool_Exp>;\n  _or?: InputMaybe<Array<Tweets_Stats_Bool_Exp>>;\n  date?: InputMaybe<Date_Comparison_Exp>;\n  tweets?: InputMaybe<Numeric_Comparison_Exp>;\n  tweets_per_day?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Tweets_Stats_Max_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  tweets?: Maybe<Scalars['numeric']['output']>;\n  tweets_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Tweets_Stats_Min_Fields = {\n  date?: Maybe<Scalars['date']['output']>;\n  tweets?: Maybe<Scalars['numeric']['output']>;\n  tweets_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** Ordering options when selecting data from \"tweets_stats\". */\nexport type Tweets_Stats_Order_By = {\n  date?: InputMaybe<Order_By>;\n  tweets?: InputMaybe<Order_By>;\n  tweets_per_day?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"tweets_stats\" */\nexport enum Tweets_Stats_Select_Column {\n  /** column name */\n  Date = 'date',\n  /** column name */\n  Tweets = 'tweets',\n  /** column name */\n  TweetsPerDay = 'tweets_per_day'\n}\n\n/** aggregate stddev on columns */\nexport type Tweets_Stats_Stddev_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Tweets_Stats_Stddev_Pop_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Tweets_Stats_Stddev_Samp_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"tweets_stats\" */\nexport type Tweets_Stats_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Tweets_Stats_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Tweets_Stats_Stream_Cursor_Value_Input = {\n  date?: InputMaybe<Scalars['date']['input']>;\n  tweets?: InputMaybe<Scalars['numeric']['input']>;\n  tweets_per_day?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Tweets_Stats_Sum_Fields = {\n  tweets?: Maybe<Scalars['numeric']['output']>;\n  tweets_per_day?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Tweets_Stats_Var_Pop_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Tweets_Stats_Var_Samp_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Tweets_Stats_Variance_Fields = {\n  tweets?: Maybe<Scalars['Float']['output']>;\n  tweets_per_day?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"txs_ranked\" */\nexport type Txs_Ranked = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  rank?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"txs_ranked\" */\nexport type Txs_Ranked_Aggregate = {\n  aggregate?: Maybe<Txs_Ranked_Aggregate_Fields>;\n  nodes: Array<Txs_Ranked>;\n};\n\n/** aggregate fields of \"txs_ranked\" */\nexport type Txs_Ranked_Aggregate_Fields = {\n  avg?: Maybe<Txs_Ranked_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Txs_Ranked_Max_Fields>;\n  min?: Maybe<Txs_Ranked_Min_Fields>;\n  stddev?: Maybe<Txs_Ranked_Stddev_Fields>;\n  stddev_pop?: Maybe<Txs_Ranked_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Txs_Ranked_Stddev_Samp_Fields>;\n  sum?: Maybe<Txs_Ranked_Sum_Fields>;\n  var_pop?: Maybe<Txs_Ranked_Var_Pop_Fields>;\n  var_samp?: Maybe<Txs_Ranked_Var_Samp_Fields>;\n  variance?: Maybe<Txs_Ranked_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"txs_ranked\" */\nexport type Txs_Ranked_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Txs_Ranked_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Txs_Ranked_Avg_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"txs_ranked\". All fields are combined with a logical 'AND'. */\nexport type Txs_Ranked_Bool_Exp = {\n  _and?: InputMaybe<Array<Txs_Ranked_Bool_Exp>>;\n  _not?: InputMaybe<Txs_Ranked_Bool_Exp>;\n  _or?: InputMaybe<Array<Txs_Ranked_Bool_Exp>>;\n  height?: InputMaybe<Bigint_Comparison_Exp>;\n  neuron?: InputMaybe<String_Comparison_Exp>;\n  rank?: InputMaybe<Bigint_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Txs_Ranked_Max_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  rank?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Txs_Ranked_Min_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  neuron?: Maybe<Scalars['String']['output']>;\n  rank?: Maybe<Scalars['bigint']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"txs_ranked\". */\nexport type Txs_Ranked_Order_By = {\n  height?: InputMaybe<Order_By>;\n  neuron?: InputMaybe<Order_By>;\n  rank?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"txs_ranked\" */\nexport enum Txs_Ranked_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Neuron = 'neuron',\n  /** column name */\n  Rank = 'rank',\n  /** column name */\n  Type = 'type',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type Txs_Ranked_Stddev_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Txs_Ranked_Stddev_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Txs_Ranked_Stddev_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"txs_ranked\" */\nexport type Txs_Ranked_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Txs_Ranked_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Txs_Ranked_Stream_Cursor_Value_Input = {\n  height?: InputMaybe<Scalars['bigint']['input']>;\n  neuron?: InputMaybe<Scalars['String']['input']>;\n  rank?: InputMaybe<Scalars['bigint']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Txs_Ranked_Sum_Fields = {\n  height?: Maybe<Scalars['bigint']['output']>;\n  rank?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Txs_Ranked_Var_Pop_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Txs_Ranked_Var_Samp_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Txs_Ranked_Variance_Fields = {\n  height?: Maybe<Scalars['Float']['output']>;\n  rank?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"uptime\" */\nexport type Uptime = {\n  consensus_address?: Maybe<Scalars['String']['output']>;\n  consensus_pubkey?: Maybe<Scalars['String']['output']>;\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  uptime?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregated selection of \"uptime\" */\nexport type Uptime_Aggregate = {\n  aggregate?: Maybe<Uptime_Aggregate_Fields>;\n  nodes: Array<Uptime>;\n};\n\n/** aggregate fields of \"uptime\" */\nexport type Uptime_Aggregate_Fields = {\n  avg?: Maybe<Uptime_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Uptime_Max_Fields>;\n  min?: Maybe<Uptime_Min_Fields>;\n  stddev?: Maybe<Uptime_Stddev_Fields>;\n  stddev_pop?: Maybe<Uptime_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Uptime_Stddev_Samp_Fields>;\n  sum?: Maybe<Uptime_Sum_Fields>;\n  var_pop?: Maybe<Uptime_Var_Pop_Fields>;\n  var_samp?: Maybe<Uptime_Var_Samp_Fields>;\n  variance?: Maybe<Uptime_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"uptime\" */\nexport type Uptime_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Uptime_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Uptime_Avg_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"uptime\". All fields are combined with a logical 'AND'. */\nexport type Uptime_Bool_Exp = {\n  _and?: InputMaybe<Array<Uptime_Bool_Exp>>;\n  _not?: InputMaybe<Uptime_Bool_Exp>;\n  _or?: InputMaybe<Array<Uptime_Bool_Exp>>;\n  consensus_address?: InputMaybe<String_Comparison_Exp>;\n  consensus_pubkey?: InputMaybe<String_Comparison_Exp>;\n  pre_commits?: InputMaybe<Bigint_Comparison_Exp>;\n  uptime?: InputMaybe<Numeric_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Uptime_Max_Fields = {\n  consensus_address?: Maybe<Scalars['String']['output']>;\n  consensus_pubkey?: Maybe<Scalars['String']['output']>;\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  uptime?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Uptime_Min_Fields = {\n  consensus_address?: Maybe<Scalars['String']['output']>;\n  consensus_pubkey?: Maybe<Scalars['String']['output']>;\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  uptime?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** Ordering options when selecting data from \"uptime\". */\nexport type Uptime_Order_By = {\n  consensus_address?: InputMaybe<Order_By>;\n  consensus_pubkey?: InputMaybe<Order_By>;\n  pre_commits?: InputMaybe<Order_By>;\n  uptime?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"uptime\" */\nexport enum Uptime_Select_Column {\n  /** column name */\n  ConsensusAddress = 'consensus_address',\n  /** column name */\n  ConsensusPubkey = 'consensus_pubkey',\n  /** column name */\n  PreCommits = 'pre_commits',\n  /** column name */\n  Uptime = 'uptime'\n}\n\n/** aggregate stddev on columns */\nexport type Uptime_Stddev_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Uptime_Stddev_Pop_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Uptime_Stddev_Samp_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"uptime\" */\nexport type Uptime_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Uptime_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Uptime_Stream_Cursor_Value_Input = {\n  consensus_address?: InputMaybe<Scalars['String']['input']>;\n  consensus_pubkey?: InputMaybe<Scalars['String']['input']>;\n  pre_commits?: InputMaybe<Scalars['bigint']['input']>;\n  uptime?: InputMaybe<Scalars['numeric']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Uptime_Sum_Fields = {\n  pre_commits?: Maybe<Scalars['bigint']['output']>;\n  uptime?: Maybe<Scalars['numeric']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Uptime_Var_Pop_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Uptime_Var_Samp_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Uptime_Variance_Fields = {\n  pre_commits?: Maybe<Scalars['Float']['output']>;\n  uptime?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"validator\" */\nexport type Validator = {\n  /** An array relationship */\n  blocks: Array<Block>;\n  /** An aggregate relationship */\n  blocks_aggregate: Block_Aggregate;\n  consensus_address: Scalars['String']['output'];\n  consensus_pubkey: Scalars['String']['output'];\n  /** An array relationship */\n  pre_commits: Array<Pre_Commit>;\n  /** An aggregate relationship */\n  pre_commits_aggregate: Pre_Commit_Aggregate;\n};\n\n\n/** columns and relationships of \"validator\" */\nexport type ValidatorBlocksArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"validator\" */\nexport type ValidatorBlocks_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Block_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Block_Order_By>>;\n  where?: InputMaybe<Block_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"validator\" */\nexport type ValidatorPre_CommitsArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"validator\" */\nexport type ValidatorPre_Commits_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Pre_Commit_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Pre_Commit_Order_By>>;\n  where?: InputMaybe<Pre_Commit_Bool_Exp>;\n};\n\n/** aggregated selection of \"validator\" */\nexport type Validator_Aggregate = {\n  aggregate?: Maybe<Validator_Aggregate_Fields>;\n  nodes: Array<Validator>;\n};\n\n/** aggregate fields of \"validator\" */\nexport type Validator_Aggregate_Fields = {\n  count: Scalars['Int']['output'];\n  max?: Maybe<Validator_Max_Fields>;\n  min?: Maybe<Validator_Min_Fields>;\n};\n\n\n/** aggregate fields of \"validator\" */\nexport type Validator_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Validator_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** Boolean expression to filter rows from the table \"validator\". All fields are combined with a logical 'AND'. */\nexport type Validator_Bool_Exp = {\n  _and?: InputMaybe<Array<Validator_Bool_Exp>>;\n  _not?: InputMaybe<Validator_Bool_Exp>;\n  _or?: InputMaybe<Array<Validator_Bool_Exp>>;\n  blocks?: InputMaybe<Block_Bool_Exp>;\n  blocks_aggregate?: InputMaybe<Block_Aggregate_Bool_Exp>;\n  consensus_address?: InputMaybe<String_Comparison_Exp>;\n  consensus_pubkey?: InputMaybe<String_Comparison_Exp>;\n  pre_commits?: InputMaybe<Pre_Commit_Bool_Exp>;\n  pre_commits_aggregate?: InputMaybe<Pre_Commit_Aggregate_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Validator_Max_Fields = {\n  consensus_address?: Maybe<Scalars['String']['output']>;\n  consensus_pubkey?: Maybe<Scalars['String']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Validator_Min_Fields = {\n  consensus_address?: Maybe<Scalars['String']['output']>;\n  consensus_pubkey?: Maybe<Scalars['String']['output']>;\n};\n\n/** Ordering options when selecting data from \"validator\". */\nexport type Validator_Order_By = {\n  blocks_aggregate?: InputMaybe<Block_Aggregate_Order_By>;\n  consensus_address?: InputMaybe<Order_By>;\n  consensus_pubkey?: InputMaybe<Order_By>;\n  pre_commits_aggregate?: InputMaybe<Pre_Commit_Aggregate_Order_By>;\n};\n\n/** select columns of table \"validator\" */\nexport enum Validator_Select_Column {\n  /** column name */\n  ConsensusAddress = 'consensus_address',\n  /** column name */\n  ConsensusPubkey = 'consensus_pubkey'\n}\n\n/** Streaming cursor of the table \"validator\" */\nexport type Validator_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Validator_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Validator_Stream_Cursor_Value_Input = {\n  consensus_address?: InputMaybe<Scalars['String']['input']>;\n  consensus_pubkey?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** columns and relationships of \"vesting_account\" */\nexport type Vesting_Account = {\n  /** An object relationship */\n  account: Account;\n  address: Scalars['String']['output'];\n  end_time: Scalars['timestamp']['output'];\n  id: Scalars['Int']['output'];\n  original_vesting: Array<Scalars['coin']['output']>;\n  start_time?: Maybe<Scalars['timestamp']['output']>;\n  type: Scalars['String']['output'];\n  /** An array relationship */\n  vesting_periods: Array<Vesting_Period>;\n  /** An aggregate relationship */\n  vesting_periods_aggregate: Vesting_Period_Aggregate;\n};\n\n\n/** columns and relationships of \"vesting_account\" */\nexport type Vesting_AccountVesting_PeriodsArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"vesting_account\" */\nexport type Vesting_AccountVesting_Periods_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  order_by?: InputMaybe<Array<Vesting_Period_Order_By>>;\n  where?: InputMaybe<Vesting_Period_Bool_Exp>;\n};\n\n/** aggregated selection of \"vesting_account\" */\nexport type Vesting_Account_Aggregate = {\n  aggregate?: Maybe<Vesting_Account_Aggregate_Fields>;\n  nodes: Array<Vesting_Account>;\n};\n\nexport type Vesting_Account_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Vesting_Account_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Vesting_Account_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Vesting_Account_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"vesting_account\" */\nexport type Vesting_Account_Aggregate_Fields = {\n  avg?: Maybe<Vesting_Account_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Vesting_Account_Max_Fields>;\n  min?: Maybe<Vesting_Account_Min_Fields>;\n  stddev?: Maybe<Vesting_Account_Stddev_Fields>;\n  stddev_pop?: Maybe<Vesting_Account_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Vesting_Account_Stddev_Samp_Fields>;\n  sum?: Maybe<Vesting_Account_Sum_Fields>;\n  var_pop?: Maybe<Vesting_Account_Var_Pop_Fields>;\n  var_samp?: Maybe<Vesting_Account_Var_Samp_Fields>;\n  variance?: Maybe<Vesting_Account_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"vesting_account\" */\nexport type Vesting_Account_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Vesting_Account_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"vesting_account\" */\nexport type Vesting_Account_Aggregate_Order_By = {\n  avg?: InputMaybe<Vesting_Account_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Vesting_Account_Max_Order_By>;\n  min?: InputMaybe<Vesting_Account_Min_Order_By>;\n  stddev?: InputMaybe<Vesting_Account_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Vesting_Account_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Vesting_Account_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Vesting_Account_Sum_Order_By>;\n  var_pop?: InputMaybe<Vesting_Account_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Vesting_Account_Var_Samp_Order_By>;\n  variance?: InputMaybe<Vesting_Account_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Vesting_Account_Avg_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Avg_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"vesting_account\". All fields are combined with a logical 'AND'. */\nexport type Vesting_Account_Bool_Exp = {\n  _and?: InputMaybe<Array<Vesting_Account_Bool_Exp>>;\n  _not?: InputMaybe<Vesting_Account_Bool_Exp>;\n  _or?: InputMaybe<Array<Vesting_Account_Bool_Exp>>;\n  account?: InputMaybe<Account_Bool_Exp>;\n  address?: InputMaybe<String_Comparison_Exp>;\n  end_time?: InputMaybe<Timestamp_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  original_vesting?: InputMaybe<Coin_Array_Comparison_Exp>;\n  start_time?: InputMaybe<Timestamp_Comparison_Exp>;\n  type?: InputMaybe<String_Comparison_Exp>;\n  vesting_periods?: InputMaybe<Vesting_Period_Bool_Exp>;\n  vesting_periods_aggregate?: InputMaybe<Vesting_Period_Aggregate_Bool_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Vesting_Account_Max_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  end_time?: Maybe<Scalars['timestamp']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  original_vesting?: Maybe<Array<Scalars['coin']['output']>>;\n  start_time?: Maybe<Scalars['timestamp']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by max() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Max_Order_By = {\n  address?: InputMaybe<Order_By>;\n  end_time?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  original_vesting?: InputMaybe<Order_By>;\n  start_time?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Vesting_Account_Min_Fields = {\n  address?: Maybe<Scalars['String']['output']>;\n  end_time?: Maybe<Scalars['timestamp']['output']>;\n  id?: Maybe<Scalars['Int']['output']>;\n  original_vesting?: Maybe<Array<Scalars['coin']['output']>>;\n  start_time?: Maybe<Scalars['timestamp']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\n/** order by min() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Min_Order_By = {\n  address?: InputMaybe<Order_By>;\n  end_time?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  original_vesting?: InputMaybe<Order_By>;\n  start_time?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"vesting_account\". */\nexport type Vesting_Account_Order_By = {\n  account?: InputMaybe<Account_Order_By>;\n  address?: InputMaybe<Order_By>;\n  end_time?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  original_vesting?: InputMaybe<Order_By>;\n  start_time?: InputMaybe<Order_By>;\n  type?: InputMaybe<Order_By>;\n  vesting_periods_aggregate?: InputMaybe<Vesting_Period_Aggregate_Order_By>;\n};\n\n/** select columns of table \"vesting_account\" */\nexport enum Vesting_Account_Select_Column {\n  /** column name */\n  Address = 'address',\n  /** column name */\n  EndTime = 'end_time',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  OriginalVesting = 'original_vesting',\n  /** column name */\n  StartTime = 'start_time',\n  /** column name */\n  Type = 'type'\n}\n\n/** aggregate stddev on columns */\nexport type Vesting_Account_Stddev_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Stddev_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Vesting_Account_Stddev_Pop_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Stddev_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Vesting_Account_Stddev_Samp_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Stddev_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"vesting_account\" */\nexport type Vesting_Account_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Vesting_Account_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Vesting_Account_Stream_Cursor_Value_Input = {\n  address?: InputMaybe<Scalars['String']['input']>;\n  end_time?: InputMaybe<Scalars['timestamp']['input']>;\n  id?: InputMaybe<Scalars['Int']['input']>;\n  original_vesting?: InputMaybe<Array<Scalars['coin']['input']>>;\n  start_time?: InputMaybe<Scalars['timestamp']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Vesting_Account_Sum_Fields = {\n  id?: Maybe<Scalars['Int']['output']>;\n};\n\n/** order by sum() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Sum_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Vesting_Account_Var_Pop_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Var_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Vesting_Account_Var_Samp_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Var_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Vesting_Account_Variance_Fields = {\n  id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"vesting_account\" */\nexport type Vesting_Account_Variance_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"vesting_period\" */\nexport type Vesting_Period = {\n  amount: Array<Scalars['coin']['output']>;\n  length: Scalars['bigint']['output'];\n  period_order: Scalars['bigint']['output'];\n  /** An object relationship */\n  vesting_account: Vesting_Account;\n  vesting_account_id: Scalars['bigint']['output'];\n};\n\n/** aggregated selection of \"vesting_period\" */\nexport type Vesting_Period_Aggregate = {\n  aggregate?: Maybe<Vesting_Period_Aggregate_Fields>;\n  nodes: Array<Vesting_Period>;\n};\n\nexport type Vesting_Period_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Vesting_Period_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Vesting_Period_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n  filter?: InputMaybe<Vesting_Period_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"vesting_period\" */\nexport type Vesting_Period_Aggregate_Fields = {\n  avg?: Maybe<Vesting_Period_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Vesting_Period_Max_Fields>;\n  min?: Maybe<Vesting_Period_Min_Fields>;\n  stddev?: Maybe<Vesting_Period_Stddev_Fields>;\n  stddev_pop?: Maybe<Vesting_Period_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Vesting_Period_Stddev_Samp_Fields>;\n  sum?: Maybe<Vesting_Period_Sum_Fields>;\n  var_pop?: Maybe<Vesting_Period_Var_Pop_Fields>;\n  var_samp?: Maybe<Vesting_Period_Var_Samp_Fields>;\n  variance?: Maybe<Vesting_Period_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"vesting_period\" */\nexport type Vesting_Period_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Vesting_Period_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** order by aggregate values of table \"vesting_period\" */\nexport type Vesting_Period_Aggregate_Order_By = {\n  avg?: InputMaybe<Vesting_Period_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Vesting_Period_Max_Order_By>;\n  min?: InputMaybe<Vesting_Period_Min_Order_By>;\n  stddev?: InputMaybe<Vesting_Period_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Vesting_Period_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Vesting_Period_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Vesting_Period_Sum_Order_By>;\n  var_pop?: InputMaybe<Vesting_Period_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Vesting_Period_Var_Samp_Order_By>;\n  variance?: InputMaybe<Vesting_Period_Variance_Order_By>;\n};\n\n/** aggregate avg on columns */\nexport type Vesting_Period_Avg_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by avg() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Avg_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"vesting_period\". All fields are combined with a logical 'AND'. */\nexport type Vesting_Period_Bool_Exp = {\n  _and?: InputMaybe<Array<Vesting_Period_Bool_Exp>>;\n  _not?: InputMaybe<Vesting_Period_Bool_Exp>;\n  _or?: InputMaybe<Array<Vesting_Period_Bool_Exp>>;\n  amount?: InputMaybe<Coin_Array_Comparison_Exp>;\n  length?: InputMaybe<Bigint_Comparison_Exp>;\n  period_order?: InputMaybe<Bigint_Comparison_Exp>;\n  vesting_account?: InputMaybe<Vesting_Account_Bool_Exp>;\n  vesting_account_id?: InputMaybe<Bigint_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Vesting_Period_Max_Fields = {\n  amount?: Maybe<Array<Scalars['coin']['output']>>;\n  length?: Maybe<Scalars['bigint']['output']>;\n  period_order?: Maybe<Scalars['bigint']['output']>;\n  vesting_account_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by max() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Max_Order_By = {\n  amount?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Vesting_Period_Min_Fields = {\n  amount?: Maybe<Array<Scalars['coin']['output']>>;\n  length?: Maybe<Scalars['bigint']['output']>;\n  period_order?: Maybe<Scalars['bigint']['output']>;\n  vesting_account_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by min() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Min_Order_By = {\n  amount?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** Ordering options when selecting data from \"vesting_period\". */\nexport type Vesting_Period_Order_By = {\n  amount?: InputMaybe<Order_By>;\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account?: InputMaybe<Vesting_Account_Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"vesting_period\" */\nexport enum Vesting_Period_Select_Column {\n  /** column name */\n  Amount = 'amount',\n  /** column name */\n  Length = 'length',\n  /** column name */\n  PeriodOrder = 'period_order',\n  /** column name */\n  VestingAccountId = 'vesting_account_id'\n}\n\n/** aggregate stddev on columns */\nexport type Vesting_Period_Stddev_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Stddev_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Vesting_Period_Stddev_Pop_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_pop() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Stddev_Pop_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Vesting_Period_Stddev_Samp_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by stddev_samp() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Stddev_Samp_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** Streaming cursor of the table \"vesting_period\" */\nexport type Vesting_Period_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Vesting_Period_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Vesting_Period_Stream_Cursor_Value_Input = {\n  amount?: InputMaybe<Array<Scalars['coin']['input']>>;\n  length?: InputMaybe<Scalars['bigint']['input']>;\n  period_order?: InputMaybe<Scalars['bigint']['input']>;\n  vesting_account_id?: InputMaybe<Scalars['bigint']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Vesting_Period_Sum_Fields = {\n  length?: Maybe<Scalars['bigint']['output']>;\n  period_order?: Maybe<Scalars['bigint']['output']>;\n  vesting_account_id?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** order by sum() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Sum_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_pop on columns */\nexport type Vesting_Period_Var_Pop_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_pop() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Var_Pop_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Vesting_Period_Var_Samp_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by var_samp() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Var_Samp_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Vesting_Period_Variance_Fields = {\n  length?: Maybe<Scalars['Float']['output']>;\n  period_order?: Maybe<Scalars['Float']['output']>;\n  vesting_account_id?: Maybe<Scalars['Float']['output']>;\n};\n\n/** order by variance() on columns of table \"vesting_period\" */\nexport type Vesting_Period_Variance_Order_By = {\n  length?: InputMaybe<Order_By>;\n  period_order?: InputMaybe<Order_By>;\n  vesting_account_id?: InputMaybe<Order_By>;\n};\n\n/** columns and relationships of \"week_redelegation\" */\nexport type Week_Redelegation = {\n  redelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"week_redelegation\" */\nexport type Week_Redelegation_Aggregate = {\n  aggregate?: Maybe<Week_Redelegation_Aggregate_Fields>;\n  nodes: Array<Week_Redelegation>;\n};\n\n/** aggregate fields of \"week_redelegation\" */\nexport type Week_Redelegation_Aggregate_Fields = {\n  avg?: Maybe<Week_Redelegation_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Week_Redelegation_Max_Fields>;\n  min?: Maybe<Week_Redelegation_Min_Fields>;\n  stddev?: Maybe<Week_Redelegation_Stddev_Fields>;\n  stddev_pop?: Maybe<Week_Redelegation_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Week_Redelegation_Stddev_Samp_Fields>;\n  sum?: Maybe<Week_Redelegation_Sum_Fields>;\n  var_pop?: Maybe<Week_Redelegation_Var_Pop_Fields>;\n  var_samp?: Maybe<Week_Redelegation_Var_Samp_Fields>;\n  variance?: Maybe<Week_Redelegation_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"week_redelegation\" */\nexport type Week_Redelegation_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Week_Redelegation_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Week_Redelegation_Avg_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"week_redelegation\". All fields are combined with a logical 'AND'. */\nexport type Week_Redelegation_Bool_Exp = {\n  _and?: InputMaybe<Array<Week_Redelegation_Bool_Exp>>;\n  _not?: InputMaybe<Week_Redelegation_Bool_Exp>;\n  _or?: InputMaybe<Array<Week_Redelegation_Bool_Exp>>;\n  redelegation?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Week_Redelegation_Max_Fields = {\n  redelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Week_Redelegation_Min_Fields = {\n  redelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"week_redelegation\". */\nexport type Week_Redelegation_Order_By = {\n  redelegation?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"week_redelegation\" */\nexport enum Week_Redelegation_Select_Column {\n  /** column name */\n  Redelegation = 'redelegation',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type Week_Redelegation_Stddev_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Week_Redelegation_Stddev_Pop_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Week_Redelegation_Stddev_Samp_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"week_redelegation\" */\nexport type Week_Redelegation_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Week_Redelegation_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Week_Redelegation_Stream_Cursor_Value_Input = {\n  redelegation?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Week_Redelegation_Sum_Fields = {\n  redelegation?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Week_Redelegation_Var_Pop_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Week_Redelegation_Var_Samp_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Week_Redelegation_Variance_Fields = {\n  redelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** columns and relationships of \"week_undelegation\" */\nexport type Week_Undelegation = {\n  undelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregated selection of \"week_undelegation\" */\nexport type Week_Undelegation_Aggregate = {\n  aggregate?: Maybe<Week_Undelegation_Aggregate_Fields>;\n  nodes: Array<Week_Undelegation>;\n};\n\n/** aggregate fields of \"week_undelegation\" */\nexport type Week_Undelegation_Aggregate_Fields = {\n  avg?: Maybe<Week_Undelegation_Avg_Fields>;\n  count: Scalars['Int']['output'];\n  max?: Maybe<Week_Undelegation_Max_Fields>;\n  min?: Maybe<Week_Undelegation_Min_Fields>;\n  stddev?: Maybe<Week_Undelegation_Stddev_Fields>;\n  stddev_pop?: Maybe<Week_Undelegation_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Week_Undelegation_Stddev_Samp_Fields>;\n  sum?: Maybe<Week_Undelegation_Sum_Fields>;\n  var_pop?: Maybe<Week_Undelegation_Var_Pop_Fields>;\n  var_samp?: Maybe<Week_Undelegation_Var_Samp_Fields>;\n  variance?: Maybe<Week_Undelegation_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"week_undelegation\" */\nexport type Week_Undelegation_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Week_Undelegation_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** aggregate avg on columns */\nexport type Week_Undelegation_Avg_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Boolean expression to filter rows from the table \"week_undelegation\". All fields are combined with a logical 'AND'. */\nexport type Week_Undelegation_Bool_Exp = {\n  _and?: InputMaybe<Array<Week_Undelegation_Bool_Exp>>;\n  _not?: InputMaybe<Week_Undelegation_Bool_Exp>;\n  _or?: InputMaybe<Array<Week_Undelegation_Bool_Exp>>;\n  undelegation?: InputMaybe<Bigint_Comparison_Exp>;\n  week?: InputMaybe<Date_Comparison_Exp>;\n};\n\n/** aggregate max on columns */\nexport type Week_Undelegation_Max_Fields = {\n  undelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** aggregate min on columns */\nexport type Week_Undelegation_Min_Fields = {\n  undelegation?: Maybe<Scalars['bigint']['output']>;\n  week?: Maybe<Scalars['date']['output']>;\n};\n\n/** Ordering options when selecting data from \"week_undelegation\". */\nexport type Week_Undelegation_Order_By = {\n  undelegation?: InputMaybe<Order_By>;\n  week?: InputMaybe<Order_By>;\n};\n\n/** select columns of table \"week_undelegation\" */\nexport enum Week_Undelegation_Select_Column {\n  /** column name */\n  Undelegation = 'undelegation',\n  /** column name */\n  Week = 'week'\n}\n\n/** aggregate stddev on columns */\nexport type Week_Undelegation_Stddev_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Week_Undelegation_Stddev_Pop_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Week_Undelegation_Stddev_Samp_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** Streaming cursor of the table \"week_undelegation\" */\nexport type Week_Undelegation_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Week_Undelegation_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Week_Undelegation_Stream_Cursor_Value_Input = {\n  undelegation?: InputMaybe<Scalars['bigint']['input']>;\n  week?: InputMaybe<Scalars['date']['input']>;\n};\n\n/** aggregate sum on columns */\nexport type Week_Undelegation_Sum_Fields = {\n  undelegation?: Maybe<Scalars['bigint']['output']>;\n};\n\n/** aggregate var_pop on columns */\nexport type Week_Undelegation_Var_Pop_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Week_Undelegation_Var_Samp_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\n/** aggregate variance on columns */\nexport type Week_Undelegation_Variance_Fields = {\n  undelegation?: Maybe<Scalars['Float']['output']>;\n};\n\nexport type TransactionsSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type TransactionsSubscription = { transaction: Array<{ success: boolean, messages: any, height: any, hash: string }> };\n\nexport type AccountCountQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AccountCountQuery = { account_aggregate: { aggregate?: { count: number } | null } };\n\nexport type BlockByHeightQueryVariables = Exact<{\n  blockId?: InputMaybe<Scalars['bigint']['input']>;\n}>;\n\n\nexport type BlockByHeightQuery = { block: Array<{ hash: string, height: any, proposer_address?: string | null, timestamp: any, transactions: Array<{ messages: any, hash: string, height: any, success: boolean }> }> };\n\nexport type BlocksQueryVariables = Exact<{\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  where?: InputMaybe<Block_Bool_Exp>;\n}>;\n\n\nexport type BlocksQuery = { block: Array<{ hash: string, height: any, proposer_address?: string | null, timestamp: any, transactions_aggregate: { aggregate?: { count: number } | null } }> };\n\nexport type ContractsCountQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ContractsCountQuery = { contracts_aggregate: { aggregate?: { count: number } | null } };\n\nexport type CyberlinksByParticleQueryVariables = Exact<{\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<Cyberlinks_Order_By> | Cyberlinks_Order_By>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n}>;\n\n\nexport type CyberlinksByParticleQuery = { cyberlinks: Array<{ timestamp: any, neuron: string, transaction_hash: string, from: string, to: string }> };\n\nexport type CyberlinksCountByNeuronQueryVariables = Exact<{\n  address?: InputMaybe<Scalars['String']['input']>;\n  particles_from?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n}>;\n\n\nexport type CyberlinksCountByNeuronQuery = { cyberlinks_aggregate: { aggregate?: { count: number } | null } };\n\nexport type CyberlinksCountByParticleQueryVariables = Exact<{\n  cid?: InputMaybe<Scalars['String']['input']>;\n  where?: InputMaybe<Cyberlinks_Bool_Exp>;\n}>;\n\n\nexport type CyberlinksCountByParticleQuery = { cyberlinks_aggregate: { aggregate?: { count: number } | null } };\n\nexport type MessagesByAddressCountQueryVariables = Exact<{\n  address?: InputMaybe<Scalars['_text']['input']>;\n  timestamp?: InputMaybe<Scalars['timestamp']['input']>;\n}>;\n\n\nexport type MessagesByAddressCountQuery = { messages_by_address_aggregate: { aggregate?: { count: number } | null } };\n\nexport type MessagesByAddressSenseQueryVariables = Exact<{\n  address?: InputMaybe<Scalars['_text']['input']>;\n  limit?: InputMaybe<Scalars['bigint']['input']>;\n  offset?: InputMaybe<Scalars['bigint']['input']>;\n  timestamp_from?: InputMaybe<Scalars['timestamp']['input']>;\n  types?: InputMaybe<Scalars['_text']['input']>;\n  order_direction?: InputMaybe<Order_By>;\n}>;\n\n\nexport type MessagesByAddressSenseQuery = { messages_by_address: Array<{ transaction_hash: string, index: any, value: any, type: string, transaction?: { success: boolean, memo?: string | null, block: { timestamp: any, height: any } } | null }> };\n\nexport type MessagesByAddressSenseWsSubscriptionVariables = Exact<{\n  address?: InputMaybe<Scalars['_text']['input']>;\n  limit?: InputMaybe<Scalars['bigint']['input']>;\n  offset?: InputMaybe<Scalars['bigint']['input']>;\n  timestamp_from?: InputMaybe<Scalars['timestamp']['input']>;\n  types?: InputMaybe<Scalars['_text']['input']>;\n  order_direction?: InputMaybe<Order_By>;\n}>;\n\n\nexport type MessagesByAddressSenseWsSubscription = { messages_by_address: Array<{ transaction_hash: string, index: any, value: any, type: string, transaction?: { success: boolean, memo?: string | null, block: { timestamp: any, height: any } } | null }> };\n\nexport type TransactionCountQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type TransactionCountQuery = { transaction_aggregate: { aggregate?: { count: number } | null } };\n\nexport type UptimeByAddressQueryVariables = Exact<{\n  address?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type UptimeByAddressQuery = { uptime: Array<{ uptime?: any | null }> };\n\nexport type WasmDashboardPageQueryVariables = Exact<{\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type WasmDashboardPageQuery = { contracts: Array<{ address: string, admin: string, code_id: any, creator: string, fees: any, gas: any, label: string, tx: any }>, contracts_aggregate: { aggregate?: { count: number, sum?: { gas?: any | null, fees?: any | null, tx?: any | null } | null } | null } };\n\nexport type MessagesByAddressQueryVariables = Exact<{\n  address?: InputMaybe<Scalars['_text']['input']>;\n  limit?: InputMaybe<Scalars['bigint']['input']>;\n  offset?: InputMaybe<Scalars['bigint']['input']>;\n  types?: InputMaybe<Scalars['_text']['input']>;\n}>;\n\n\nexport type MessagesByAddressQuery = { messages_by_address: Array<{ transaction_hash: string, value: any, type: string, transaction?: { success: boolean, height: any, logs?: any | null, memo?: string | null, block: { timestamp: any } } | null }> };\n\n\nexport const TransactionsDocument = gql`\n    subscription Transactions {\n  transaction(offset: 0, limit: 200, order_by: {height: desc}) {\n    success\n    messages\n    height\n    hash\n  }\n}\n    `;\n\n/**\n * __useTransactionsSubscription__\n *\n * To run a query within a React component, call `useTransactionsSubscription` and pass it any options that fit your needs.\n * When your component renders, `useTransactionsSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTransactionsSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useTransactionsSubscription(baseOptions?: Apollo.SubscriptionHookOptions<TransactionsSubscription, TransactionsSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<TransactionsSubscription, TransactionsSubscriptionVariables>(TransactionsDocument, options);\n      }\nexport type TransactionsSubscriptionHookResult = ReturnType<typeof useTransactionsSubscription>;\nexport type TransactionsSubscriptionResult = Apollo.SubscriptionResult<TransactionsSubscription>;\nexport const AccountCountDocument = gql`\n    query accountCount {\n  account_aggregate {\n    aggregate {\n      count(columns: address)\n    }\n  }\n}\n    `;\n\n/**\n * __useAccountCountQuery__\n *\n * To run a query within a React component, call `useAccountCountQuery` and pass it any options that fit your needs.\n * When your component renders, `useAccountCountQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAccountCountQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useAccountCountQuery(baseOptions?: Apollo.QueryHookOptions<AccountCountQuery, AccountCountQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<AccountCountQuery, AccountCountQueryVariables>(AccountCountDocument, options);\n      }\nexport function useAccountCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AccountCountQuery, AccountCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<AccountCountQuery, AccountCountQueryVariables>(AccountCountDocument, options);\n        }\nexport function useAccountCountSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<AccountCountQuery, AccountCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<AccountCountQuery, AccountCountQueryVariables>(AccountCountDocument, options);\n        }\nexport type AccountCountQueryHookResult = ReturnType<typeof useAccountCountQuery>;\nexport type AccountCountLazyQueryHookResult = ReturnType<typeof useAccountCountLazyQuery>;\nexport type AccountCountSuspenseQueryHookResult = ReturnType<typeof useAccountCountSuspenseQuery>;\nexport type AccountCountQueryResult = Apollo.QueryResult<AccountCountQuery, AccountCountQueryVariables>;\nexport const BlockByHeightDocument = gql`\n    query blockByHeight($blockId: bigint) {\n  block(where: {height: {_eq: $blockId}}) {\n    hash\n    height\n    proposer_address\n    timestamp\n    transactions {\n      messages\n      hash\n      height\n      success\n    }\n  }\n}\n    `;\n\n/**\n * __useBlockByHeightQuery__\n *\n * To run a query within a React component, call `useBlockByHeightQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlockByHeightQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlockByHeightQuery({\n *   variables: {\n *      blockId: // value for 'blockId'\n *   },\n * });\n */\nexport function useBlockByHeightQuery(baseOptions?: Apollo.QueryHookOptions<BlockByHeightQuery, BlockByHeightQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<BlockByHeightQuery, BlockByHeightQueryVariables>(BlockByHeightDocument, options);\n      }\nexport function useBlockByHeightLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BlockByHeightQuery, BlockByHeightQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<BlockByHeightQuery, BlockByHeightQueryVariables>(BlockByHeightDocument, options);\n        }\nexport function useBlockByHeightSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<BlockByHeightQuery, BlockByHeightQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<BlockByHeightQuery, BlockByHeightQueryVariables>(BlockByHeightDocument, options);\n        }\nexport type BlockByHeightQueryHookResult = ReturnType<typeof useBlockByHeightQuery>;\nexport type BlockByHeightLazyQueryHookResult = ReturnType<typeof useBlockByHeightLazyQuery>;\nexport type BlockByHeightSuspenseQueryHookResult = ReturnType<typeof useBlockByHeightSuspenseQuery>;\nexport type BlockByHeightQueryResult = Apollo.QueryResult<BlockByHeightQuery, BlockByHeightQueryVariables>;\nexport const BlocksDocument = gql`\n    query blocks($limit: Int, $offset: Int, $where: block_bool_exp) {\n  block(where: $where, limit: $limit, offset: $offset, order_by: {height: desc}) {\n    hash\n    height\n    proposer_address\n    transactions_aggregate {\n      aggregate {\n        count\n      }\n    }\n    timestamp\n  }\n}\n    `;\n\n/**\n * __useBlocksQuery__\n *\n * To run a query within a React component, call `useBlocksQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlocksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlocksQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *      offset: // value for 'offset'\n *      where: // value for 'where'\n *   },\n * });\n */\nexport function useBlocksQuery(baseOptions?: Apollo.QueryHookOptions<BlocksQuery, BlocksQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<BlocksQuery, BlocksQueryVariables>(BlocksDocument, options);\n      }\nexport function useBlocksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BlocksQuery, BlocksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<BlocksQuery, BlocksQueryVariables>(BlocksDocument, options);\n        }\nexport function useBlocksSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<BlocksQuery, BlocksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<BlocksQuery, BlocksQueryVariables>(BlocksDocument, options);\n        }\nexport type BlocksQueryHookResult = ReturnType<typeof useBlocksQuery>;\nexport type BlocksLazyQueryHookResult = ReturnType<typeof useBlocksLazyQuery>;\nexport type BlocksSuspenseQueryHookResult = ReturnType<typeof useBlocksSuspenseQuery>;\nexport type BlocksQueryResult = Apollo.QueryResult<BlocksQuery, BlocksQueryVariables>;\nexport const ContractsCountDocument = gql`\n    query contractsCount {\n  contracts_aggregate {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\n\n/**\n * __useContractsCountQuery__\n *\n * To run a query within a React component, call `useContractsCountQuery` and pass it any options that fit your needs.\n * When your component renders, `useContractsCountQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useContractsCountQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useContractsCountQuery(baseOptions?: Apollo.QueryHookOptions<ContractsCountQuery, ContractsCountQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<ContractsCountQuery, ContractsCountQueryVariables>(ContractsCountDocument, options);\n      }\nexport function useContractsCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<ContractsCountQuery, ContractsCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<ContractsCountQuery, ContractsCountQueryVariables>(ContractsCountDocument, options);\n        }\nexport function useContractsCountSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<ContractsCountQuery, ContractsCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<ContractsCountQuery, ContractsCountQueryVariables>(ContractsCountDocument, options);\n        }\nexport type ContractsCountQueryHookResult = ReturnType<typeof useContractsCountQuery>;\nexport type ContractsCountLazyQueryHookResult = ReturnType<typeof useContractsCountLazyQuery>;\nexport type ContractsCountSuspenseQueryHookResult = ReturnType<typeof useContractsCountSuspenseQuery>;\nexport type ContractsCountQueryResult = Apollo.QueryResult<ContractsCountQuery, ContractsCountQueryVariables>;\nexport const CyberlinksByParticleDocument = gql`\n    query CyberlinksByParticle($limit: Int, $offset: Int, $orderBy: [cyberlinks_order_by!], $where: cyberlinks_bool_exp) {\n  cyberlinks(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {\n    from: particle_from\n    to: particle_to\n    timestamp\n    neuron\n    transaction_hash\n  }\n}\n    `;\n\n/**\n * __useCyberlinksByParticleQuery__\n *\n * To run a query within a React component, call `useCyberlinksByParticleQuery` and pass it any options that fit your needs.\n * When your component renders, `useCyberlinksByParticleQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCyberlinksByParticleQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *      offset: // value for 'offset'\n *      orderBy: // value for 'orderBy'\n *      where: // value for 'where'\n *   },\n * });\n */\nexport function useCyberlinksByParticleQuery(baseOptions?: Apollo.QueryHookOptions<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>(CyberlinksByParticleDocument, options);\n      }\nexport function useCyberlinksByParticleLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>(CyberlinksByParticleDocument, options);\n        }\nexport function useCyberlinksByParticleSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>(CyberlinksByParticleDocument, options);\n        }\nexport type CyberlinksByParticleQueryHookResult = ReturnType<typeof useCyberlinksByParticleQuery>;\nexport type CyberlinksByParticleLazyQueryHookResult = ReturnType<typeof useCyberlinksByParticleLazyQuery>;\nexport type CyberlinksByParticleSuspenseQueryHookResult = ReturnType<typeof useCyberlinksByParticleSuspenseQuery>;\nexport type CyberlinksByParticleQueryResult = Apollo.QueryResult<CyberlinksByParticleQuery, CyberlinksByParticleQueryVariables>;\nexport const CyberlinksCountByNeuronDocument = gql`\n    query CyberlinksCountByNeuron($address: String, $particles_from: [String!], $timestamp: timestamp) {\n  cyberlinks_aggregate(\n    where: {_and: [{neuron: {_eq: $address}}, {particle_from: {_in: $particles_from}}, {timestamp: {_gt: $timestamp}}]}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\n\n/**\n * __useCyberlinksCountByNeuronQuery__\n *\n * To run a query within a React component, call `useCyberlinksCountByNeuronQuery` and pass it any options that fit your needs.\n * When your component renders, `useCyberlinksCountByNeuronQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCyberlinksCountByNeuronQuery({\n *   variables: {\n *      address: // value for 'address'\n *      particles_from: // value for 'particles_from'\n *      timestamp: // value for 'timestamp'\n *   },\n * });\n */\nexport function useCyberlinksCountByNeuronQuery(baseOptions?: Apollo.QueryHookOptions<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>(CyberlinksCountByNeuronDocument, options);\n      }\nexport function useCyberlinksCountByNeuronLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>(CyberlinksCountByNeuronDocument, options);\n        }\nexport function useCyberlinksCountByNeuronSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>(CyberlinksCountByNeuronDocument, options);\n        }\nexport type CyberlinksCountByNeuronQueryHookResult = ReturnType<typeof useCyberlinksCountByNeuronQuery>;\nexport type CyberlinksCountByNeuronLazyQueryHookResult = ReturnType<typeof useCyberlinksCountByNeuronLazyQuery>;\nexport type CyberlinksCountByNeuronSuspenseQueryHookResult = ReturnType<typeof useCyberlinksCountByNeuronSuspenseQuery>;\nexport type CyberlinksCountByNeuronQueryResult = Apollo.QueryResult<CyberlinksCountByNeuronQuery, CyberlinksCountByNeuronQueryVariables>;\nexport const CyberlinksCountByParticleDocument = gql`\n    query cyberlinksCountByParticle($cid: String, $where: cyberlinks_bool_exp) {\n  cyberlinks_aggregate(where: $where) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\n\n/**\n * __useCyberlinksCountByParticleQuery__\n *\n * To run a query within a React component, call `useCyberlinksCountByParticleQuery` and pass it any options that fit your needs.\n * When your component renders, `useCyberlinksCountByParticleQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCyberlinksCountByParticleQuery({\n *   variables: {\n *      cid: // value for 'cid'\n *      where: // value for 'where'\n *   },\n * });\n */\nexport function useCyberlinksCountByParticleQuery(baseOptions?: Apollo.QueryHookOptions<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>(CyberlinksCountByParticleDocument, options);\n      }\nexport function useCyberlinksCountByParticleLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>(CyberlinksCountByParticleDocument, options);\n        }\nexport function useCyberlinksCountByParticleSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>(CyberlinksCountByParticleDocument, options);\n        }\nexport type CyberlinksCountByParticleQueryHookResult = ReturnType<typeof useCyberlinksCountByParticleQuery>;\nexport type CyberlinksCountByParticleLazyQueryHookResult = ReturnType<typeof useCyberlinksCountByParticleLazyQuery>;\nexport type CyberlinksCountByParticleSuspenseQueryHookResult = ReturnType<typeof useCyberlinksCountByParticleSuspenseQuery>;\nexport type CyberlinksCountByParticleQueryResult = Apollo.QueryResult<CyberlinksCountByParticleQuery, CyberlinksCountByParticleQueryVariables>;\nexport const MessagesByAddressCountDocument = gql`\n    query MessagesByAddressCount($address: _text, $timestamp: timestamp) {\n  messages_by_address_aggregate(\n    args: {addresses: $address, limit: \"100000000\", offset: \"0\", types: \"{}\"}\n    where: {transaction: {block: {timestamp: {_gt: $timestamp}}}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\n\n/**\n * __useMessagesByAddressCountQuery__\n *\n * To run a query within a React component, call `useMessagesByAddressCountQuery` and pass it any options that fit your needs.\n * When your component renders, `useMessagesByAddressCountQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesByAddressCountQuery({\n *   variables: {\n *      address: // value for 'address'\n *      timestamp: // value for 'timestamp'\n *   },\n * });\n */\nexport function useMessagesByAddressCountQuery(baseOptions?: Apollo.QueryHookOptions<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>(MessagesByAddressCountDocument, options);\n      }\nexport function useMessagesByAddressCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>(MessagesByAddressCountDocument, options);\n        }\nexport function useMessagesByAddressCountSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>(MessagesByAddressCountDocument, options);\n        }\nexport type MessagesByAddressCountQueryHookResult = ReturnType<typeof useMessagesByAddressCountQuery>;\nexport type MessagesByAddressCountLazyQueryHookResult = ReturnType<typeof useMessagesByAddressCountLazyQuery>;\nexport type MessagesByAddressCountSuspenseQueryHookResult = ReturnType<typeof useMessagesByAddressCountSuspenseQuery>;\nexport type MessagesByAddressCountQueryResult = Apollo.QueryResult<MessagesByAddressCountQuery, MessagesByAddressCountQueryVariables>;\nexport const MessagesByAddressSenseDocument = gql`\n    query MessagesByAddressSense($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {\n  messages_by_address(\n    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}\n    order_by: {transaction: {block: {timestamp: $order_direction}}}\n    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}\n  ) {\n    transaction_hash\n    index\n    value\n    transaction {\n      success\n      block {\n        timestamp\n        height\n      }\n      memo\n    }\n    type\n  }\n}\n    `;\n\n/**\n * __useMessagesByAddressSenseQuery__\n *\n * To run a query within a React component, call `useMessagesByAddressSenseQuery` and pass it any options that fit your needs.\n * When your component renders, `useMessagesByAddressSenseQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesByAddressSenseQuery({\n *   variables: {\n *      address: // value for 'address'\n *      limit: // value for 'limit'\n *      offset: // value for 'offset'\n *      timestamp_from: // value for 'timestamp_from'\n *      types: // value for 'types'\n *      order_direction: // value for 'order_direction'\n *   },\n * });\n */\nexport function useMessagesByAddressSenseQuery(baseOptions?: Apollo.QueryHookOptions<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>(MessagesByAddressSenseDocument, options);\n      }\nexport function useMessagesByAddressSenseLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>(MessagesByAddressSenseDocument, options);\n        }\nexport function useMessagesByAddressSenseSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>(MessagesByAddressSenseDocument, options);\n        }\nexport type MessagesByAddressSenseQueryHookResult = ReturnType<typeof useMessagesByAddressSenseQuery>;\nexport type MessagesByAddressSenseLazyQueryHookResult = ReturnType<typeof useMessagesByAddressSenseLazyQuery>;\nexport type MessagesByAddressSenseSuspenseQueryHookResult = ReturnType<typeof useMessagesByAddressSenseSuspenseQuery>;\nexport type MessagesByAddressSenseQueryResult = Apollo.QueryResult<MessagesByAddressSenseQuery, MessagesByAddressSenseQueryVariables>;\nexport const MessagesByAddressSenseWsDocument = gql`\n    subscription MessagesByAddressSenseWs($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {\n  messages_by_address(\n    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}\n    order_by: {transaction: {block: {timestamp: $order_direction}}}\n    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}\n  ) {\n    transaction_hash\n    index\n    value\n    transaction {\n      success\n      block {\n        timestamp\n        height\n      }\n      memo\n    }\n    type\n  }\n}\n    `;\n\n/**\n * __useMessagesByAddressSenseWsSubscription__\n *\n * To run a query within a React component, call `useMessagesByAddressSenseWsSubscription` and pass it any options that fit your needs.\n * When your component renders, `useMessagesByAddressSenseWsSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesByAddressSenseWsSubscription({\n *   variables: {\n *      address: // value for 'address'\n *      limit: // value for 'limit'\n *      offset: // value for 'offset'\n *      timestamp_from: // value for 'timestamp_from'\n *      types: // value for 'types'\n *      order_direction: // value for 'order_direction'\n *   },\n * });\n */\nexport function useMessagesByAddressSenseWsSubscription(baseOptions?: Apollo.SubscriptionHookOptions<MessagesByAddressSenseWsSubscription, MessagesByAddressSenseWsSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<MessagesByAddressSenseWsSubscription, MessagesByAddressSenseWsSubscriptionVariables>(MessagesByAddressSenseWsDocument, options);\n      }\nexport type MessagesByAddressSenseWsSubscriptionHookResult = ReturnType<typeof useMessagesByAddressSenseWsSubscription>;\nexport type MessagesByAddressSenseWsSubscriptionResult = Apollo.SubscriptionResult<MessagesByAddressSenseWsSubscription>;\nexport const TransactionCountDocument = gql`\n    query transactionCount {\n  transaction_aggregate {\n    aggregate {\n      count(columns: hash)\n    }\n  }\n}\n    `;\n\n/**\n * __useTransactionCountQuery__\n *\n * To run a query within a React component, call `useTransactionCountQuery` and pass it any options that fit your needs.\n * When your component renders, `useTransactionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTransactionCountQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useTransactionCountQuery(baseOptions?: Apollo.QueryHookOptions<TransactionCountQuery, TransactionCountQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<TransactionCountQuery, TransactionCountQueryVariables>(TransactionCountDocument, options);\n      }\nexport function useTransactionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<TransactionCountQuery, TransactionCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<TransactionCountQuery, TransactionCountQueryVariables>(TransactionCountDocument, options);\n        }\nexport function useTransactionCountSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<TransactionCountQuery, TransactionCountQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<TransactionCountQuery, TransactionCountQueryVariables>(TransactionCountDocument, options);\n        }\nexport type TransactionCountQueryHookResult = ReturnType<typeof useTransactionCountQuery>;\nexport type TransactionCountLazyQueryHookResult = ReturnType<typeof useTransactionCountLazyQuery>;\nexport type TransactionCountSuspenseQueryHookResult = ReturnType<typeof useTransactionCountSuspenseQuery>;\nexport type TransactionCountQueryResult = Apollo.QueryResult<TransactionCountQuery, TransactionCountQueryVariables>;\nexport const UptimeByAddressDocument = gql`\n    query uptimeByAddress($address: String) {\n  uptime(where: {consensus_address: {_eq: $address}}) {\n    uptime\n  }\n}\n    `;\n\n/**\n * __useUptimeByAddressQuery__\n *\n * To run a query within a React component, call `useUptimeByAddressQuery` and pass it any options that fit your needs.\n * When your component renders, `useUptimeByAddressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUptimeByAddressQuery({\n *   variables: {\n *      address: // value for 'address'\n *   },\n * });\n */\nexport function useUptimeByAddressQuery(baseOptions?: Apollo.QueryHookOptions<UptimeByAddressQuery, UptimeByAddressQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<UptimeByAddressQuery, UptimeByAddressQueryVariables>(UptimeByAddressDocument, options);\n      }\nexport function useUptimeByAddressLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<UptimeByAddressQuery, UptimeByAddressQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<UptimeByAddressQuery, UptimeByAddressQueryVariables>(UptimeByAddressDocument, options);\n        }\nexport function useUptimeByAddressSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<UptimeByAddressQuery, UptimeByAddressQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<UptimeByAddressQuery, UptimeByAddressQueryVariables>(UptimeByAddressDocument, options);\n        }\nexport type UptimeByAddressQueryHookResult = ReturnType<typeof useUptimeByAddressQuery>;\nexport type UptimeByAddressLazyQueryHookResult = ReturnType<typeof useUptimeByAddressLazyQuery>;\nexport type UptimeByAddressSuspenseQueryHookResult = ReturnType<typeof useUptimeByAddressSuspenseQuery>;\nexport type UptimeByAddressQueryResult = Apollo.QueryResult<UptimeByAddressQuery, UptimeByAddressQueryVariables>;\nexport const WasmDashboardPageDocument = gql`\n    query wasmDashboardPage($offset: Int, $limit: Int) {\n  contracts(limit: $limit, offset: $offset, order_by: {tx: desc}) {\n    address\n    admin\n    code_id\n    creator\n    fees\n    gas\n    label\n    tx\n  }\n  contracts_aggregate {\n    aggregate {\n      sum {\n        gas\n        fees\n        tx\n      }\n      count(columns: address)\n    }\n  }\n}\n    `;\n\n/**\n * __useWasmDashboardPageQuery__\n *\n * To run a query within a React component, call `useWasmDashboardPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useWasmDashboardPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useWasmDashboardPageQuery({\n *   variables: {\n *      offset: // value for 'offset'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useWasmDashboardPageQuery(baseOptions?: Apollo.QueryHookOptions<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>(WasmDashboardPageDocument, options);\n      }\nexport function useWasmDashboardPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>(WasmDashboardPageDocument, options);\n        }\nexport function useWasmDashboardPageSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>(WasmDashboardPageDocument, options);\n        }\nexport type WasmDashboardPageQueryHookResult = ReturnType<typeof useWasmDashboardPageQuery>;\nexport type WasmDashboardPageLazyQueryHookResult = ReturnType<typeof useWasmDashboardPageLazyQuery>;\nexport type WasmDashboardPageSuspenseQueryHookResult = ReturnType<typeof useWasmDashboardPageSuspenseQuery>;\nexport type WasmDashboardPageQueryResult = Apollo.QueryResult<WasmDashboardPageQuery, WasmDashboardPageQueryVariables>;\nexport const MessagesByAddressDocument = gql`\n    query MessagesByAddress($address: _text, $limit: bigint, $offset: bigint, $types: _text) {\n  messages_by_address(\n    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}\n    order_by: {transaction: {block: {height: desc}}}\n  ) {\n    transaction_hash\n    value\n    transaction {\n      success\n      height\n      logs\n      memo\n      block {\n        timestamp\n      }\n    }\n    type\n  }\n}\n    `;\n\n/**\n * __useMessagesByAddressQuery__\n *\n * To run a query within a React component, call `useMessagesByAddressQuery` and pass it any options that fit your needs.\n * When your component renders, `useMessagesByAddressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesByAddressQuery({\n *   variables: {\n *      address: // value for 'address'\n *      limit: // value for 'limit'\n *      offset: // value for 'offset'\n *      types: // value for 'types'\n *   },\n * });\n */\nexport function useMessagesByAddressQuery(baseOptions?: Apollo.QueryHookOptions<MessagesByAddressQuery, MessagesByAddressQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<MessagesByAddressQuery, MessagesByAddressQueryVariables>(MessagesByAddressDocument, options);\n      }\nexport function useMessagesByAddressLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MessagesByAddressQuery, MessagesByAddressQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<MessagesByAddressQuery, MessagesByAddressQueryVariables>(MessagesByAddressDocument, options);\n        }\nexport function useMessagesByAddressSuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<MessagesByAddressQuery, MessagesByAddressQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<MessagesByAddressQuery, MessagesByAddressQueryVariables>(MessagesByAddressDocument, options);\n        }\nexport type MessagesByAddressQueryHookResult = ReturnType<typeof useMessagesByAddressQuery>;\nexport type MessagesByAddressLazyQueryHookResult = ReturnType<typeof useMessagesByAddressLazyQuery>;\nexport type MessagesByAddressSuspenseQueryHookResult = ReturnType<typeof useMessagesByAddressSuspenseQuery>;\nexport type MessagesByAddressQueryResult = Apollo.QueryResult<MessagesByAddressQuery, MessagesByAddressQueryVariables>;","import { Tx } from 'cosmjs-types/cosmos/tx/v1beta1/tx';\nimport { MsgSend, MsgMultiSend } from 'cosmjs-types/cosmos/bank/v1beta1/tx';\n\nimport { fromBase64 } from '@cosmjs/encoding';\nimport {\n  MSG_MULTI_SEND_TRANSACTION_TYPE,\n  MSG_SEND_TRANSACTION_TYPE,\n} from 'src/services/backend/services/indexer/types';\nimport { NeuronAddress } from 'src/types/base';\nimport { TransactionDto } from 'src/services/CozoDb/types/dto';\nimport { getNowUtcNumber } from 'src/utils/date';\n\n// eslint-disable-next-line import/no-unused-modules\nexport const extractTxData = (data: string) => {\n  const result = Tx.decode(fromBase64(data));\n  const memo = result.body?.memo;\n  const messages = result.body?.messages\n    .map((message) => {\n      const msgType = message.typeUrl.slice(1);\n      if (msgType === MSG_SEND_TRANSACTION_TYPE) {\n        return MsgSend.decode(message.value);\n      }\n\n      if (msgType === MSG_MULTI_SEND_TRANSACTION_TYPE) {\n        return MsgMultiSend.decode(message.value);\n      }\n      return undefined;\n    })\n    .filter((message) => message !== undefined);\n\n  return { memo, messages };\n};\n\n// eslint-disable-next-line import/no-unused-modules\nexport const mapWebsocketTxToTransactions = (\n  neuron: NeuronAddress,\n  result: any\n) => {\n  const { data, events } = result;\n\n  const hash = events['tx.hash'][0];\n  const transactionType = events['message.action'][0].slice(1);\n  const timestamp = getNowUtcNumber();\n  const blockHeight = events['tx.height'][0];\n\n  const { memo = '', messages } = extractTxData(data.value.TxResult.tx);\n\n  const transactions: TransactionDto[] = [];\n  messages!.forEach((message, index) => {\n    transactions.push({\n      hash,\n      index,\n      type: transactionType,\n      timestamp,\n      success: true,\n      value: message!,\n      memo,\n      neuron,\n      blockHeight,\n    });\n  });\n\n  return transactions;\n};\n","import { ApolloClient, DocumentNode, InMemoryCache } from '@apollo/client';\n\nimport { GraphQLWsLink } from '@apollo/client/link/subscriptions';\nimport { GraphQLClient } from 'graphql-request';\nimport { createClient } from 'graphql-ws';\nimport { Observable } from 'rxjs';\nimport { INDEX_WEBSOCKET, INDEX_HTTPS } from 'src/constants/config';\n\nconst cyberGraphQLWsLink = new GraphQLWsLink(\n  createClient({\n    url: INDEX_WEBSOCKET,\n    shouldRetry: (errOrCloseEvent: unknown) => true,\n    retryAttempts: 10,\n    retryWait: async (retries: number): Promise<void> => {\n      setTimeout(() => Promise.resolve(), Math.min(1000 * 2 ** retries, 10000));\n    },\n    // on: {\n    //   error: (err) => {\n    //     console.log('---ws errr', err);\n    //   },\n    //   message: (msg) => {\n    //     console.log('---ws message', msg);\n    //   },\n    //   // Handle connection opened event\n    //   opened: () => {\n    //     console.log('---ws opened');\n    //   },\n    //   // Handle connection closed event\n    //   closed: () => {\n    //     console.log('---ws closed');\n    //   },\n    // },\n  })\n);\n\nexport const createIndexerClient = (abortSignal: AbortSignal) =>\n  new GraphQLClient(INDEX_HTTPS, {\n    signal: abortSignal,\n  });\n\n// eslint-disable-next-line import/no-unused-modules\nexport function createIndexerWebsocket<T>(\n  query: DocumentNode,\n  variables: object\n): Observable<T> {\n  const client = new ApolloClient({\n    link: cyberGraphQLWsLink,\n    cache: new InMemoryCache(),\n  });\n\n  const apolloObservable = client.subscribe({ query, variables });\n  return new Observable((subscriber) => {\n    const subscription = apolloObservable.subscribe({\n      next(result) {\n        subscriber.next(result.data as T);\n      },\n      error(err) {\n        subscriber.error(err);\n      },\n      complete() {\n        subscriber.complete();\n      },\n    });\n\n    // Cleanup subscription on unsubscribe\n    return () => subscription.unsubscribe();\n  });\n}\n","/* eslint-disable import/no-unused-modules */\n\nimport { ParticleCid, NeuronAddress } from 'src/types/base';\nimport { numberToUtcDate } from 'src/utils/date';\n\nimport { CYBERLINKS_BATCH_LIMIT } from './consts';\nimport { createIndexerClient } from './utils/graphqlClient';\nimport { fetchIterableByOffset } from 'src/utils/async/iterable';\nimport {\n  CyberlinksByParticleDocument,\n  CyberlinksByParticleQuery,\n  CyberlinksByParticleQueryVariables,\n  CyberlinksCountByNeuronDocument,\n  CyberlinksCountByNeuronQuery,\n  CyberlinksCountByNeuronQueryVariables,\n  Order_By,\n} from 'src/generated/graphql';\n\nconst fetchCyberlinks = async ({\n  particleCid,\n  timestampFrom,\n  offset = 0,\n  abortSignal,\n}: {\n  particleCid: ParticleCid;\n  timestampFrom: number;\n  offset?: number;\n  abortSignal: AbortSignal;\n}) => {\n  const res = await createIndexerClient(abortSignal).request<\n    CyberlinksByParticleQuery,\n    CyberlinksByParticleQueryVariables\n  >(CyberlinksByParticleDocument, {\n    limit: CYBERLINKS_BATCH_LIMIT,\n    offset,\n    orderBy: [{ timestamp: Order_By.Asc }],\n    where: {\n      _or: [\n        { particle_to: { _eq: particleCid } },\n        { particle_from: { _eq: particleCid } },\n      ],\n      timestamp: { _gt: numberToUtcDate(timestampFrom) },\n    },\n  });\n\n  return res.cyberlinks;\n};\n\nconst fetchCyberlinksCount = async (\n  address: NeuronAddress,\n  particlesFrom: ParticleCid[],\n  timestampFrom: number,\n  abortSignal: AbortSignal\n) => {\n  const res = await createIndexerClient(abortSignal).request<\n    CyberlinksCountByNeuronQuery,\n    CyberlinksCountByNeuronQueryVariables\n  >(CyberlinksCountByNeuronDocument, {\n    address,\n    particles_from: particlesFrom,\n    timestamp: numberToUtcDate(timestampFrom),\n  });\n\n  return res.cyberlinks_aggregate.aggregate?.count;\n};\n\nconst fetchCyberlinksByNeroun = async ({\n  neuron,\n  particlesFrom,\n  timestampFrom,\n  batchSize,\n  offset = 0,\n  abortSignal,\n}: {\n  neuron: NeuronAddress;\n  particlesFrom: ParticleCid[];\n  timestampFrom: number;\n  batchSize: number;\n  offset: number;\n  abortSignal: AbortSignal;\n}) => {\n  const where = {\n    _and: [\n      {\n        timestamp: {\n          _gt: numberToUtcDate(timestampFrom),\n        },\n      },\n      {\n        neuron: {\n          _eq: neuron,\n        },\n      },\n      { particle_from: { _in: particlesFrom } },\n    ],\n  };\n\n  const res = await createIndexerClient(abortSignal).request<\n    CyberlinksByParticleQuery,\n    CyberlinksByParticleQueryVariables\n  >(CyberlinksByParticleDocument, {\n    limit: batchSize,\n    offset,\n    orderBy: [\n      {\n        timestamp: Order_By.Asc,\n      },\n    ],\n    where,\n  });\n\n  return res.cyberlinks;\n};\n\nexport const fetchCyberlinksByNerounIterable = async (\n  neuron: NeuronAddress,\n  particlesFrom: ParticleCid[],\n  timestampFrom: number,\n  batchSize: number,\n  abortSignal: AbortSignal\n) =>\n  fetchIterableByOffset(fetchCyberlinksByNeroun, {\n    neuron,\n    particlesFrom,\n    timestampFrom,\n    batchSize,\n    abortSignal,\n  });\n\nconst fetchCyberlinksIterable = (\n  particleCid: ParticleCid,\n  timestampFrom: number,\n  abortSignal: AbortSignal\n) =>\n  fetchIterableByOffset(fetchCyberlinks, {\n    particleCid,\n    timestampFrom,\n    abortSignal,\n  });\n\nexport { fetchCyberlinksIterable, fetchCyberlinksCount };\n","const TRANSACTIONS_BATCH_LIMIT = 500;\nconst CYBERLINKS_BATCH_LIMIT = 200;\n\nexport { TRANSACTIONS_BATCH_LIMIT, CYBERLINKS_BATCH_LIMIT };\n","import { CyberLinkSimple, CyberlinkTxHash, ParticleCid } from 'src/types/base';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { asyncIterableBatchProcessor } from 'src/utils/async/iterable';\nimport { CID_TWEET } from 'src/constants/app';\nimport { LinkDto, TransactionDto } from 'src/services/CozoDb/types/dto';\n\nimport { fetchCyberlinksIterable } from '../../../indexer/cyberlinks';\nimport ParticlesResolverQueue from '../ParticlesResolverQueue/ParticlesResolverQueue';\nimport { MAX_LINKS_RESOLVE_BATCH } from '../consts';\nimport {\n  CYBER_LINK_TRANSACTION_TYPE,\n  CyberLinkValue,\n} from '../../../indexer/types';\nimport { SyncQueueJobType } from 'src/services/CozoDb/types/entities';\n\nconst getUniqueParticlesFromLinks = (links: CyberLinkSimple[]) =>\n  [\n    ...new Set([\n      ...links.map((link) => link.to),\n      ...links.map((link) => link.from),\n    ]),\n  ] as ParticleCid[];\n\n// eslint-disable-next-line import/no-unused-modules\nexport const fetchCyberlinksAndResolveParticles = async (\n  cid: ParticleCid,\n  timestampUpdate: number,\n  particlesResolver: ParticlesResolverQueue,\n  queuePriority: QueuePriority,\n  abortSignal: AbortSignal\n) => {\n  const cyberlinksIterable = fetchCyberlinksIterable(\n    cid,\n    timestampUpdate,\n    abortSignal\n  );\n  const links = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const batch of cyberlinksIterable) {\n    links.push(...batch);\n    const particles = getUniqueParticlesFromLinks(batch);\n    if (particles.length > 0) {\n      await asyncIterableBatchProcessor(\n        particles,\n        (cids: ParticleCid[]) =>\n          particlesResolver!.enqueueBatch(\n            cids,\n            SyncQueueJobType.particle,\n            queuePriority\n          ),\n        MAX_LINKS_RESOLVE_BATCH\n      );\n    }\n  }\n\n  return links;\n};\n\nexport function extractCybelinksFromTransaction(batch: TransactionDto[]) {\n  const cyberlinks = batch.filter(\n    (l) => l.type === CYBER_LINK_TRANSACTION_TYPE\n  );\n  const particlesFound = new Set<string>();\n  const links: LinkDto[] = [];\n  // Get links: only from TWEETS\n  const tweets: Record<ParticleCid, LinkDto> = cyberlinks.reduce<\n    Record<ParticleCid, LinkDto>\n  >((acc, { value, hash, timestamp }: TransactionDto) => {\n    (value as CyberLinkValue).links.forEach((link) => {\n      particlesFound.add(link.to);\n      particlesFound.add(link.from);\n      const txLink = {\n        ...link,\n        timestamp,\n        neuron: (value as CyberLinkValue).neuron,\n        transactionHash: hash,\n      };\n      links.push(txLink);\n\n      if (link.from === CID_TWEET) {\n        acc[txLink.to] = txLink;\n      }\n    });\n    return acc;\n  }, {});\n\n  return {\n    tweets,\n    particlesFound: [...particlesFound],\n    links,\n  };\n}\n","import { NeuronAddress } from 'src/types/base';\nimport { numberToUtcDate } from 'src/utils/date';\nimport { fetchIterableByOffset } from 'src/utils/async/iterable';\nimport {\n  MessagesByAddressCountDocument,\n  MessagesByAddressCountQuery,\n  MessagesByAddressCountQueryVariables,\n  MessagesByAddressSenseDocument,\n  MessagesByAddressSenseQuery,\n  MessagesByAddressSenseQueryVariables,\n} from 'src/generated/graphql';\n\nimport { createIndexerClient } from './utils/graphqlClient';\nimport { Transaction } from './types';\n\ntype OrderDirection = 'desc' | 'asc';\ntype Abortable = { abortSignal: AbortSignal };\n\nexport type MessagesByAddressVariables = {\n  neuron: NeuronAddress;\n  timestampFrom: number;\n  offset?: number;\n  types: Transaction['type'][];\n  orderDirection: OrderDirection;\n  limit: number;\n} & Abortable;\n\nexport const mapMessagesByAddressVariables = ({\n  neuron,\n  timestampFrom,\n  offset = 0,\n  types = [],\n  orderDirection = 'desc',\n  limit,\n}: MessagesByAddressVariables) => ({\n  address: `{${neuron}}`,\n  limit,\n  timestamp_from: numberToUtcDate(timestampFrom),\n  offset,\n  types: `{${types.map((t) => `\"${t}\"`).join(' ,')}}`,\n  order_direction: orderDirection,\n});\n\nconst fetchTransactions = async ({\n  neuron,\n  timestampFrom,\n  offset = 0,\n  types = [],\n  orderDirection = 'desc',\n  limit,\n  abortSignal,\n}: MessagesByAddressVariables) => {\n  const res = await createIndexerClient(abortSignal).request<\n    MessagesByAddressSenseQuery,\n    MessagesByAddressSenseQueryVariables\n  >(\n    MessagesByAddressSenseDocument,\n    mapMessagesByAddressVariables({\n      neuron,\n      timestampFrom,\n      offset,\n      types,\n      orderDirection,\n      limit,\n      abortSignal,\n    }) as MessagesByAddressSenseQueryVariables\n  );\n\n  return res?.messages_by_address as Transaction[];\n};\n\nexport const fetchTransactionMessagesCount = async (\n  address: NeuronAddress,\n  timestampFrom: number,\n  abortSignal: AbortSignal\n) => {\n  const res = await createIndexerClient(abortSignal).request<\n    MessagesByAddressCountQuery,\n    MessagesByAddressCountQueryVariables\n  >(MessagesByAddressCountDocument, {\n    address: `{${address}}`,\n    timestamp: numberToUtcDate(timestampFrom),\n  });\n\n  return res?.messages_by_address_aggregate.aggregate?.count;\n};\n\nexport const fetchTransactionsIterable = ({\n  neuron,\n  timestampFrom,\n  types,\n  orderDirection,\n  limit,\n  abortSignal,\n}: MessagesByAddressVariables) =>\n  fetchIterableByOffset(fetchTransactions, {\n    neuron,\n    timestampFrom,\n    types,\n    orderDirection,\n    limit,\n    abortSignal,\n  });\n","import { ProgressTracking } from 'src/services/backend/types/services';\n\nconst ROLLING_WINDOW = 10;\n\ntype onProgressUpdateFunc = (progress: ProgressTracking) => void;\n\ntype RequestRecord = {\n  timestamp: number;\n  itemCount: number;\n};\n\n// eslint-disable-next-line import/no-unused-modules, import/prefer-default-export\nexport class ProgressTracker {\n  private requestRecords: RequestRecord[] = [];\n\n  private totalRequests = 0;\n\n  private completedRequests = 0;\n\n  private estimatedTime = -1;\n\n  private batchSize = 1;\n\n  private onProgressUpdate?: onProgressUpdateFunc;\n\n  public get progress(): ProgressTracking {\n    return {\n      totalCount: this.totalRequests,\n      completeCount: this.completedRequests,\n      estimatedTime: this.estimatedTime,\n    };\n  }\n\n  constructor(onProgressUpdate?: onProgressUpdateFunc) {\n    this.onProgressUpdate = onProgressUpdate;\n  }\n\n  public start(totalRequests: number, batchSize = 1) {\n    this.totalRequests = totalRequests;\n    this.requestRecords = [];\n    this.completedRequests = 0;\n    this.estimatedTime = -1;\n    this.batchSize = batchSize;\n\n    return this.progress;\n  }\n\n  public add(extraRequests: number) {\n    this.totalRequests += extraRequests;\n\n    return this.progress;\n  }\n\n  public trackProgress(processedCount: number) {\n    this.addRequestRecord(processedCount);\n\n    if (this.requestRecords.length > ROLLING_WINDOW) {\n      this.requestRecords.shift();\n    }\n\n    if (this.requestRecords.length > 1) {\n      const averageTimePerItem = this.calculateAverageTimePerItem();\n      const remainingRequests = this.totalRequests - this.completedRequests;\n      const estimatedRemainingItems = remainingRequests * processedCount; // Assuming remaining requests will process the same number of items\n      const estimatedRemainingTime =\n        averageTimePerItem * estimatedRemainingItems;\n\n      this.completedRequests += processedCount;\n      this.estimatedTime = Math.round(estimatedRemainingTime); // Convert to seconds;\n      this.onProgressUpdate && this.onProgressUpdate(this.progress);\n    }\n\n    return this.progress;\n  }\n\n  private addRequestRecord(itemCount: number) {\n    this.requestRecords.push({ timestamp: Date.now(), itemCount });\n  }\n\n  private calculateAverageTimePerItem(): number {\n    let totalDiff = 0;\n    let totalItems = 0;\n\n    for (let i = 1; i < this.requestRecords.length; i++) {\n      const timeDiff =\n        this.requestRecords[i].timestamp - this.requestRecords[i - 1].timestamp;\n      const { itemCount } = this.requestRecords[i];\n\n      totalDiff += timeDiff * itemCount;\n      totalItems += itemCount;\n    }\n\n    return totalItems === 0 ? 0 : totalDiff / totalItems;\n  }\n}\n","import {\n  Observable,\n  filter,\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\n\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport { broadcastStatus } from 'src/services/backend/channels/broadcastStatus';\nimport { SyncEntryName } from 'src/services/backend/types/services';\nimport { CyblogChannel, createCyblogChannel } from 'src/utils/logging/cyblog';\n\nimport DbApiWrapper from '../../../DbApi/DbApi';\nimport ParticlesResolverQueue from '../ParticlesResolverQueue/ParticlesResolverQueue';\nimport { ProgressTracker } from '../ProgressTracker/ProgressTracker';\nimport { ServiceDeps } from '../types';\nimport { SyncServiceParams } from '../../types';\n\nabstract class BaseSync {\n  protected name: string;\n\n  protected abortController: AbortController;\n\n  protected db: DbApiWrapper | undefined;\n\n  protected progressTracker = new ProgressTracker();\n\n  protected channelApi = new BroadcastChannelSender();\n\n  protected particlesResolver: ParticlesResolverQueue | undefined;\n\n  protected statusApi: ReturnType<typeof broadcastStatus>;\n\n  protected params: SyncServiceParams = {\n    myAddress: null,\n  };\n\n  protected readonly isInitialized$: Observable<boolean>;\n\n  protected cyblogCh: CyblogChannel;\n\n  constructor(\n    name: SyncEntryName,\n    deps: ServiceDeps,\n    particlesResolver: ParticlesResolverQueue\n  ) {\n    this.name = name;\n\n    this.abortController = new AbortController();\n\n    this.statusApi = broadcastStatus(name, this.channelApi);\n    this.particlesResolver = particlesResolver;\n    this.cyblogCh = createCyblogChannel({ thread: 'bckd', module: name });\n    if (!deps.params$) {\n      throw new Error('params$ is not defined');\n    }\n\n    deps.dbInstance$.subscribe((db) => {\n      this.db = db;\n    });\n\n    this.particlesResolver = particlesResolver;\n\n    this.isInitialized$ = this.createIsInitializedObserver(deps);\n\n    this.isInitialized$.subscribe((isInitialized) => {\n      this.cyblogCh.info(\n        `>>> ${this.name} - ${isInitialized ? 'initialized' : 'inactive'}`\n      );\n      this.statusApi.sendStatus(isInitialized ? 'initialized' : 'inactive');\n    });\n\n    this.isInitialized$\n      .pipe(switchMap(() => deps.params$!))\n      .subscribe((params) => {\n        this.params = params;\n        this.cyblogCh.info(`>>> ${this.name} - params updated`, {\n          data: params,\n        });\n      });\n\n    // Restart observer\n    this.isInitialized$\n      .pipe(\n        filter((isInitialized) => !!isInitialized),\n        switchMap(() => this.createRestartObserver(deps.params$!))\n      )\n      .subscribe(() => {\n        this.restart();\n      });\n  }\n\n  protected initAbortController() {\n    this.abortController = new AbortController();\n  }\n\n  protected abstract createIsInitializedObserver(\n    deps: ServiceDeps\n  ): Observable<boolean>;\n\n  // eslint-disable-next-line class-methods-use-this\n  protected createRestartObserver(params$: Observable<SyncServiceParams>) {\n    return params$.pipe(\n      map((params) => params.myAddress),\n      distinctUntilChanged((addrBefore, addrAfter) => addrBefore === addrAfter),\n      map((v) => !!v),\n      filter((v) => !!v)\n    );\n  }\n\n  public abstract restart(): void;\n\n  public abstract start(): void;\n}\n\nexport default BaseSync;\n","/* eslint-disable import/prefer-default-export */\nimport {\n  distinctUntilChanged,\n  filter,\n  Observable,\n  share,\n  switchMap,\n  tap,\n} from 'rxjs';\n\nexport const switchWhenInitialized = (\n  isInitialized$: Observable<boolean>,\n  actionObservable$: Observable<any>,\n  onChange?: (isInitialized: boolean) => void\n) =>\n  isInitialized$.pipe(\n    distinctUntilChanged(),\n    tap((isInitialized) => onChange?.(isInitialized)),\n    filter((initialized) => initialized),\n    switchMap(() => actionObservable$),\n    share()\n  );\n","import { Observable, Subject, from, startWith, switchMap, tap } from 'rxjs';\n\nimport { SyncEntryName } from 'src/services/backend/types/services';\n\nimport ParticlesResolverQueue from '../ParticlesResolverQueue/ParticlesResolverQueue';\nimport { ServiceDeps } from '../types';\nimport BaseSync from './BaseSync';\nimport { switchWhenInitialized } from '../utils/rxjs/withInitializer';\nimport { SyncServiceParams } from '../../types';\n\nabstract class BaseSyncClient extends BaseSync {\n  protected readonly source$: Observable<any>;\n\n  protected readonly reloadTrigger$ = new Subject<void>();\n\n  constructor(\n    name: SyncEntryName,\n    deps: ServiceDeps,\n    particlesResolver: ParticlesResolverQueue\n  ) {\n    super(name, deps, particlesResolver);\n\n    const source$ = switchWhenInitialized(\n      this.isInitialized$!,\n      this.reloadTrigger$.pipe(\n        startWith(null),\n        tap(() => {\n          // initialize abort conteoller for restart strategy\n          this.initAbortController();\n        }),\n        switchMap(() =>\n          this.createInitObservable().pipe(\n            switchMap((timestampFrom: number) =>\n              this.createClientObservable(timestampFrom).pipe(\n                tap(() => this.statusApi.sendStatus('listen')),\n                switchMap((data) => from(this.onUpdate(data, this.params)))\n              )\n            )\n          )\n        )\n      ),\n      (isInitialized) => {\n        console.log(`>>> ${name} isInitialized`, isInitialized);\n        this.statusApi.sendStatus(isInitialized ? 'initialized' : 'inactive');\n      }\n    );\n\n    source$.subscribe({\n      next: () => {\n        this.statusApi.sendStatus('listen');\n      },\n      error: (err) => {\n        this.statusApi.sendStatus('error', err);\n      },\n    });\n    this.source$ = source$;\n  }\n\n  protected abstract createClientObservable(\n    timestampFrom: number\n  ): Observable<any>;\n\n  protected abstract createInitObservable(): Observable<number>;\n\n  public restart() {\n    this.abortController?.abort();\n    this.reloadTrigger$.next();\n    console.log(`>>> ${this.name} client restart`);\n  }\n\n  protected abstract onUpdate(\n    data: any,\n    params: SyncServiceParams\n  ): Promise<void>;\n\n  public start() {\n    this.source$.subscribe(() => {\n      // dummy subscriber to keep pipeline running - don't remove\n    });\n    return this;\n  }\n}\n\nexport default BaseSyncClient;\n","/* eslint-disable camelcase */\nimport {\n  map,\n  combineLatest,\n  Observable,\n  from,\n  defer,\n  distinctUntilChanged,\n  merge,\n  filter,\n} from 'rxjs';\nimport { isEmpty } from 'lodash';\n\nimport {\n  EntryType,\n  SyncQueueJobType,\n} from 'src/services/CozoDb/types/entities';\nimport { mapIndexerTransactionToEntity } from 'src/services/CozoDb/mapping';\nimport { numberToUtcDate } from 'src/utils/date';\nimport { NeuronAddress } from 'src/types/base';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { SyncStatusDto, TransactionDto } from 'src/services/CozoDb/types/dto';\nimport { asyncIterableBatchProcessor } from 'src/utils/async/iterable';\nimport { throwIfAborted } from 'src/utils/async/promise';\nimport {\n  createNodeWebsocketObservable,\n  getIncomingTransfersQuery,\n} from 'src/services/lcd/websocket';\nimport {\n  MessagesByAddressSenseQueryVariables,\n  MessagesByAddressSenseWsDocument,\n  MessagesByAddressSenseWsSubscription,\n} from 'src/generated/graphql';\n\nimport { mapWebsocketTxToTransactions } from 'src/services/lcd/utils/mapping';\n\nimport { ServiceDeps } from '../types';\nimport { extractCybelinksFromTransaction } from '../utils/links';\n\nimport {\n  fetchTransactionsIterable,\n  mapMessagesByAddressVariables,\n  fetchTransactionMessagesCount,\n} from '../../../indexer/transactions';\nimport { syncMyChats } from './services/chat';\nimport { TRANSACTIONS_BATCH_LIMIT } from '../../../indexer/consts';\nimport BaseSyncClient from '../BaseSyncLoop/BaseSyncClient';\nimport { createIndexerWebsocket } from '../../../indexer/utils/graphqlClient';\nimport { SyncServiceParams } from '../../types';\nimport { MAX_DATABASE_PUT_SIZE } from '../consts';\n\ntype DataStreamResult = {\n  source: 'indexer' | 'node';\n  transactions: TransactionDto[];\n};\n\nclass SyncTransactionsLoop extends BaseSyncClient {\n  protected createIsInitializedObserver(deps: ServiceDeps) {\n    const isInitialized$ = combineLatest([\n      deps.dbInstance$,\n      deps.params$!.pipe(\n        map((params) => params.myAddress),\n        distinctUntilChanged()\n      ),\n      this.particlesResolver!.isInitialized$,\n    ]).pipe(\n      map(\n        ([dbInstance, myAddress, syncQueueInitialized]) =>\n          !!dbInstance && !!syncQueueInitialized && !!myAddress\n      )\n    );\n\n    return isInitialized$;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  protected createClientObservable(\n    timestampFrom: number\n  ): Observable<DataStreamResult> {\n    const { myAddress } = this.params;\n    this.cyblogCh.info(\n      `>>> ${this.name} subscribe ${myAddress} from ${numberToUtcDate(\n        timestampFrom\n      )}`\n    );\n\n    const variables = mapMessagesByAddressVariables({\n      neuron: myAddress!,\n      timestampFrom,\n      types: [],\n      orderDirection: 'desc',\n      limit: 100,\n    }) as MessagesByAddressSenseQueryVariables;\n\n    const indexerObservable$ =\n      createIndexerWebsocket<MessagesByAddressSenseWsSubscription>(\n        MessagesByAddressSenseWsDocument,\n        variables\n      ).pipe(\n        map((response: MessagesByAddressSenseWsSubscription) => {\n          return {\n            source: 'indexer',\n            transactions: response.messages_by_address.map((i) =>\n              mapIndexerTransactionToEntity(myAddress!, i)\n            ),\n          };\n        })\n      );\n\n    const nodeObservample$ = createNodeWebsocketObservable(\n      myAddress!,\n      getIncomingTransfersQuery(myAddress!),\n      (message, ctx) => this.cyblogCh.info(message, { unit: 'node-ws', ...ctx })\n    ).pipe(\n      filter((data) => !isEmpty(data)),\n      map((data) => {\n        return {\n          source: 'node',\n          transactions: mapWebsocketTxToTransactions(myAddress!, data),\n        };\n      })\n    );\n\n    return merge(\n      indexerObservable$,\n      nodeObservample$\n    ) as Observable<DataStreamResult>;\n  }\n\n  protected createInitObservable() {\n    return defer(() => from(this.initSync()));\n    // return from(this.initSync());\n  }\n\n  public async initSync() {\n    const { myAddress } = this.params;\n    const { signal } = this.abortController;\n    const syncItem = await this.db!.getSyncStatus(myAddress!, myAddress!);\n\n    const lastTransactionTimestamp = await this.syncTransactions(\n      myAddress!,\n      myAddress!,\n      syncItem\n    );\n\n    this.statusApi.sendStatus('in-progress', `sync my chats`);\n    const syncStatusItems = await syncMyChats(\n      this.db!,\n      myAddress!,\n      syncItem.timestampUpdate,\n      signal\n    );\n\n    this.channelApi.postSenseUpdate(syncStatusItems);\n    this.statusApi.sendStatus('active');\n\n    return lastTransactionTimestamp;\n  }\n\n  protected async onUpdate(\n    { source, transactions }: DataStreamResult,\n    params: SyncServiceParams\n  ) {\n    const { myAddress } = params;\n    const { signal } = this.abortController;\n    if (transactions.length === 0) {\n      this.cyblogCh.info(`>>> ${this.name} ${myAddress} recived 0 updates `);\n      return;\n    }\n    const syncItem = await this.db!.getSyncStatus(myAddress!, myAddress!);\n\n    await this.processBatchTransactions(\n      myAddress!,\n      myAddress!,\n      transactions,\n      syncItem,\n      source\n    );\n\n    this.statusApi.sendStatus('in-progress', `sync my chats`);\n    const syncStatusItems = await syncMyChats(\n      this.db!,\n      myAddress!,\n      syncItem.timestampUpdate,\n      signal,\n      source !== 'node'\n    );\n\n    this.channelApi.postSenseUpdate(syncStatusItems);\n    this.statusApi.sendStatus('listen');\n  }\n\n  public async processBatchTransactions(\n    myAddress: NeuronAddress,\n    address: NeuronAddress,\n    transactions: TransactionDto[],\n    { timestampRead, unreadCount, timestampUpdate }: SyncStatusDto,\n    source: DataStreamResult['source']\n  ) {\n    const { signal } = this.abortController;\n\n    // node transaction is limited by incoming messages,\n    // to prevent missing of other msg types let's avoid to change ts\n    const shouldUpdateTimestamp = source !== 'node';\n\n    this.cyblogCh.info(\n      `   syncTransactions - process ${address}[${source}],  count: ${\n        transactions.length\n      }, from: ${transactions.at(0)?.timestamp}, to: ${\n        transactions.at(-1)?.timestamp\n      }`\n    );\n\n    // save transaction\n    await throwIfAborted(this.db!.putTransactions, signal)(transactions);\n\n    // save links\n    this.syncLinks(transactions, signal);\n\n    const {\n      hash,\n      index,\n\n      timestamp,\n    } = transactions.at(-1)!;\n\n    const lastTimestampFrom = timestamp;\n\n    // Update transaction sync items\n    const newSyncItem = {\n      ownerId: myAddress,\n      entryType: EntryType.transactions,\n      id: address,\n      timestampUpdate: shouldUpdateTimestamp\n        ? lastTimestampFrom\n        : timestampUpdate!,\n      unreadCount: unreadCount! + transactions.length,\n      timestampRead: timestampRead || 0,\n      disabled: false,\n      meta: {\n        transactionHash: hash,\n        index,\n      },\n    };\n\n    await throwIfAborted(this.db!.putSyncStatus, signal)(newSyncItem);\n\n    return lastTimestampFrom;\n  }\n\n  public async syncTransactions(\n    myAddress: NeuronAddress,\n    address: NeuronAddress,\n    syncItem: SyncStatusDto\n  ) {\n    const { unreadCount, timestampUpdate } = syncItem;\n    const timestampFrom = timestampUpdate + 1; // ofsset + 1 to fix milliseconds precision bug\n\n    this.statusApi.sendStatus('estimating');\n\n    const totalMessageCount = await fetchTransactionMessagesCount(\n      address,\n      timestampFrom,\n      this.abortController!.signal\n    );\n\n    this.cyblogCh.info(\n      `>>> syncTransactions - start ${address},  count: ${totalMessageCount}, from: ${timestampFrom}`\n    );\n\n    if (totalMessageCount === 0) {\n      return timestampFrom;\n    }\n\n    this.statusApi.sendStatus(\n      'in-progress',\n      `sync ${address}...`,\n      this.progressTracker.start(\n        Math.ceil(totalMessageCount / TRANSACTIONS_BATCH_LIMIT)\n      )\n    );\n\n    const transactionsAsyncIterable = fetchTransactionsIterable({\n      neuron: address,\n      timestampFrom,\n      types: [], // SENSE_TRANSACTIONS,\n      orderDirection: 'asc',\n      limit: TRANSACTIONS_BATCH_LIMIT,\n      abortSignal: this.abortController?.signal,\n    });\n\n    let transactionCount = 0;\n    let lastTimestampFrom = timestampFrom;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const batch of transactionsAsyncIterable) {\n      this.statusApi.sendStatus(\n        'in-progress',\n        `sync ${address}...`,\n        this.progressTracker.trackProgress(1)\n      );\n\n      transactionCount += batch.length;\n\n      const transactions = batch.map((i) =>\n        mapIndexerTransactionToEntity(address, i)\n      );\n\n      lastTimestampFrom = await this.processBatchTransactions(\n        myAddress,\n        address,\n        transactions,\n        {\n          ...syncItem,\n          unreadCount: unreadCount + transactionCount,\n        },\n        'indexer'\n      );\n    }\n\n    return lastTimestampFrom;\n  }\n\n  private async syncLinks(batch: TransactionDto[], signal: AbortSignal) {\n    const { tweets, particlesFound, links } =\n      extractCybelinksFromTransaction(batch);\n    if (links.length > 0) {\n      await asyncIterableBatchProcessor(\n        links,\n        (links) => throwIfAborted(this.db!.putCyberlinks, signal)(links),\n        MAX_DATABASE_PUT_SIZE\n      );\n    }\n\n    const tweetParticles = Object.keys(tweets);\n\n    const nonTweetParticles = particlesFound.filter(\n      (cid) => !tweetParticles.includes(cid)\n    );\n\n    // pre-resolve 'tweets' particles\n    await this.particlesResolver!.enqueueBatch(\n      tweetParticles,\n      SyncQueueJobType.particle,\n      QueuePriority.HIGH\n    );\n\n    // pre-resolve all the rest particles\n    if (nonTweetParticles.length > 0) {\n      await this.particlesResolver!.enqueueBatch(\n        nonTweetParticles,\n        SyncQueueJobType.particle,\n        QueuePriority.LOW\n      );\n    }\n  }\n}\n\nexport default SyncTransactionsLoop;\n","import { Observable } from 'rxjs';\nimport { WEBSOCKET_URL } from 'src/constants/config';\nimport { NeuronAddress } from 'src/types/base';\nimport { LogFunc } from 'src/utils/logging/cyblog';\n\nexport const getIncomingTransfersQuery = (address: NeuronAddress) =>\n  `tm.event='Tx' AND transfer.recipient='${address}'`;\n\n// eslint-disable-next-line import/no-unused-modules\nexport function createNodeWebsocketObservable(\n  address: NeuronAddress,\n  query: string,\n  log: LogFunc\n) {\n  return new Observable((subscriber) => {\n    const ws = new WebSocket(WEBSOCKET_URL);\n\n    ws.onopen = () => {\n      log(`node ws connected to ${WEBSOCKET_URL} with ${query}`);\n      ws.send(\n        JSON.stringify({\n          jsonrpc: '2.0',\n          method: 'subscribe',\n          id: '0',\n          params: { query },\n        })\n      );\n    };\n\n    ws.onmessage = (event) => {\n      const message = JSON.parse(event.data);\n      log(`node ws ${address} onmessage`, message);\n      subscriber.next(message.result);\n    };\n\n    ws.onerror = (event) => {\n      log(`node ws ${address} error`, { error: event });\n      subscriber.error(event);\n    };\n\n    ws.onclose = () => {\n      log(`node ws ${address} closed`);\n      subscriber.complete();\n    };\n\n    return () => {\n      ws.close();\n    };\n  });\n}\n","export const isAbortException = (e: Error) =>\n  e instanceof DOMException && e.name === 'AbortError';\n","import { Observable, defer, filter, from, tap } from 'rxjs';\n\nimport { SyncEntryName } from 'src/services/backend/types/services';\nimport { isAbortException } from 'src/utils/exceptions/helpers';\nimport { clone } from 'ramda';\n\nimport ParticlesResolverQueue from '../ParticlesResolverQueue/ParticlesResolverQueue';\nimport { ServiceDeps } from '../types';\nimport { createLoopObservable } from '../utils/rxjs/loop';\nimport BaseSync from './BaseSync';\nimport { SyncServiceParams } from '../../types';\n\nabstract class BaseSyncLoop extends BaseSync {\n  private restartLoop: (() => void) | undefined;\n\n  public readonly loop$: Observable<boolean>;\n\n  constructor(\n    name: SyncEntryName,\n    intervalMs: number,\n    deps: ServiceDeps,\n    particlesResolver: ParticlesResolverQueue,\n    {\n      warmupMs,\n    }: {\n      warmupMs: number;\n    } = { warmupMs: 0 }\n  ) {\n    super(name, deps, particlesResolver);\n\n    const { loop$, restartLoop } = createLoopObservable(\n      this.isInitialized$,\n      // defer(() => from(this.sync())),\n      defer(() => from(this.doSync())),\n      {\n        intervalMs,\n        warmupMs,\n        // onStartInterval: () => this.initAbortController(),\n        onError: (error) => {\n          this.cyblogCh.info(`>>> ${name} error`, error.toString());\n          this.statusApi.sendStatus('error', error.toString());\n        },\n        onChange: (isInitialized) => {\n          this.cyblogCh.info(`>>> ${name} initialized: ${isInitialized}`);\n          this.statusApi.sendStatus(isInitialized ? 'initialized' : 'inactive');\n        },\n      }\n    );\n\n    this.loop$ = loop$;\n    this.restartLoop = restartLoop;\n  }\n\n  public restart() {\n    this.abortController?.abort();\n    this.restartLoop?.();\n    this.cyblogCh.info(`>>> ${this.name} loop restart`);\n  }\n\n  public start() {\n    this.loop$.subscribe(() => this.statusApi.sendStatus('active'));\n    return this;\n  }\n\n  private async doSync() {\n    const params = clone(this.params);\n    this.initAbortController();\n    try {\n      await this.sync(params);\n    } catch (e) {\n      const isAborted = isAbortException(e);\n      this.cyblogCh.info(\n        `>>> ${this.name} ${params.myAddress} sync error [abrt:${isAborted}]:`,\n        {\n          error: e,\n        }\n      );\n\n      if (!isAborted) {\n        throw e;\n      }\n    }\n  }\n\n  protected abstract sync(params: SyncServiceParams): Promise<void>;\n}\n\nexport default BaseSyncLoop;\n","/* eslint-disable import/prefer-default-export */\nimport {\n  Observable,\n  switchMap,\n  interval,\n  startWith,\n  tap,\n  retry,\n  delay,\n  exhaustMap,\n  Subject,\n} from 'rxjs';\nimport { switchWhenInitialized } from './withInitializer';\n\ntype LoopObservableOptions = {\n  warmupMs?: number;\n  retryDelayMs?: number;\n  onStartInterval?: () => void;\n  onError?: (error: any) => void;\n  onChange?: (isInitialized: boolean) => void;\n  intervalMs?: number;\n};\n\nexport const createLoopObservable = (\n  isInitialized$: Observable<boolean>,\n  actionObservable$: Observable<any>,\n  options: LoopObservableOptions = {}\n) => {\n  const {\n    intervalMs,\n    warmupMs = 0,\n    onStartInterval,\n    onError,\n    retryDelayMs = 0,\n    onChange,\n  } = options;\n\n  const restartTrigger$ = new Subject<void>();\n\n  const intervalOrRestart$ = restartTrigger$.pipe(\n    startWith(null),\n    switchMap(() => interval(intervalMs).pipe(startWith(0), delay(warmupMs)))\n  );\n\n  const source$ = switchWhenInitialized(\n    isInitialized$,\n    intervalOrRestart$.pipe(\n      tap(() => onStartInterval && onStartInterval()),\n      exhaustMap(() =>\n        actionObservable$.pipe(\n          retry({\n            delay: (error) => {\n              console.log('retry', error);\n              onError && onError(error);\n              return interval(retryDelayMs);\n            },\n          })\n        )\n      )\n    ),\n    (isInitialized) => onChange?.(isInitialized)\n  );\n\n  return {\n    loop$: source$,\n    restartLoop: () => {\n      // console.log('>>> createLoopObservable restart');\n      // Trigger a restart by emitting a new value\n      restartTrigger$.next();\n    },\n  };\n};\n","import { map, combineLatest, distinctUntilChanged } from 'rxjs';\nimport { EntryType } from 'src/services/CozoDb/types/entities';\nimport { SyncStatusDto } from 'src/services/CozoDb/types/dto';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { NeuronAddress } from 'src/types/base';\n\nimport { mapLinkFromIndexerToDto } from 'src/services/CozoDb/mapping';\nimport { CID_TWEET } from 'src/constants/app';\nimport { dateToUtcNumber } from 'src/utils/date';\nimport { SenseListItem } from 'src/services/backend/types/sense';\nimport { asyncIterableBatchProcessor } from 'src/utils/async/iterable';\nimport { throwIfAborted } from 'src/utils/async/promise';\nimport { entityToDto } from 'src/utils/dto';\n\nimport { ServiceDeps } from '../types';\nimport { fetchCyberlinksAndResolveParticles } from '../utils/links';\n\nimport { changeParticleSyncStatus } from '../../utils';\nimport {\n  fetchCyberlinksByNerounIterable,\n  fetchCyberlinksCount,\n} from '../../../indexer/cyberlinks';\nimport { CYBERLINKS_BATCH_LIMIT } from '../../../indexer/consts';\nimport BaseSyncLoop from '../BaseSyncLoop/BaseSyncLoop';\nimport { MAX_DATABASE_PUT_SIZE } from '../consts';\nimport { SyncServiceParams } from '../../types';\n\nclass SyncParticlesLoop extends BaseSyncLoop {\n  protected createIsInitializedObserver(deps: ServiceDeps) {\n    const isInitialized$ = combineLatest([\n      deps.dbInstance$,\n      deps.ipfsInstance$,\n      deps.params$!.pipe(\n        map((params) => params.myAddress),\n        distinctUntilChanged()\n      ),\n      this.particlesResolver!.isInitialized$,\n    ]).pipe(\n      map(\n        ([dbInstance, ipfsInstance, myAddress, particleResolverInitialized]) =>\n          !!ipfsInstance &&\n          !!dbInstance &&\n          !!particleResolverInitialized &&\n          !!myAddress\n      )\n    );\n\n    return isInitialized$;\n  }\n\n  protected async sync(params: SyncServiceParams): Promise<void> {\n    const { myAddress } = params;\n    const { signal } = this.abortController;\n    this.statusApi.sendStatus('estimating');\n\n    const syncItemParticles = await this.db!.findSyncStatus({\n      ownerId: myAddress!,\n      entryType: EntryType.particle,\n    });\n\n    const timestampUpdate = syncItemParticles.at(0)?.timestampUpdate || 0;\n\n    // Get count of new links after last update\n    const newLinkCount = await fetchCyberlinksCount(\n      myAddress!,\n      [CID_TWEET],\n      timestampUpdate,\n      signal\n    );\n\n    this.cyblogCh.info(\n      `>>> syncMyParticles ${myAddress} count ${newLinkCount}`\n    );\n    this.progressTracker.start(newLinkCount + syncItemParticles.length);\n    this.statusApi.sendStatus(\n      'in-progress',\n      'preparing...',\n      this.progressTracker.progress\n    );\n\n    if (newLinkCount > 0) {\n      // fetch and save new particles\n      const newSyncItemParticles = await this.fetchNewTweets(\n        myAddress!,\n        timestampUpdate,\n        signal\n      );\n\n      // add to fetch-sync linked particles\n      syncItemParticles.push(...newSyncItemParticles);\n    }\n    await this.syncParticles(myAddress!, syncItemParticles, signal);\n  }\n\n  private async fetchNewTweets(\n    myAddress: NeuronAddress,\n    timestampUpdate: number,\n    signal: AbortSignal\n  ) {\n    const tweetsAsyncIterable = await fetchCyberlinksByNerounIterable(\n      myAddress,\n      [CID_TWEET],\n      timestampUpdate,\n      CYBERLINKS_BATCH_LIMIT,\n      this.abortController?.signal\n    );\n\n    const newTweets: SyncStatusDto[] = [];\n    const existingParticles = await this.db!.findSyncStatus({\n      ownerId: myAddress,\n      entryType: EntryType.particle,\n    });\n    const existingParticlesMap = new Map(\n      existingParticles.map((i) => [i.id, i])\n    );\n    // eslint-disable-next-line no-await-in-loop, no-restricted-syntax\n    for await (const tweetsBatch of tweetsAsyncIterable) {\n      this.statusApi.sendStatus(\n        'in-progress',\n        `fetching new tweets...`,\n        this.progressTracker.trackProgress(1)\n      );\n      const syncStatusEntities = tweetsBatch.map(entityToDto).map((item) => {\n        const { timestamp, to } = item;\n        const timestampUpdate = dateToUtcNumber(timestamp);\n\n        // In case my tweet already linked from other neuron, resync from beginning\n        const timestampSyncFrom = existingParticlesMap.get(to)\n          ? dateToUtcNumber(timestamp)\n          : 0;\n\n        // Initial state\n        return {\n          ownerId: myAddress,\n          id: to,\n          entryType: EntryType.particle,\n          timestampUpdate: timestampSyncFrom,\n          timestampRead: timestampUpdate,\n          unreadCount: 0,\n          disabled: false,\n          meta: { ...item, timestamp: timestampUpdate },\n        } as SyncStatusDto;\n      });\n\n      if (syncStatusEntities.length > 0) {\n        await throwIfAborted(\n          this.db!.putSyncStatus,\n          signal\n        )(syncStatusEntities);\n        newTweets.push(...syncStatusEntities);\n      }\n    }\n\n    return newTweets;\n  }\n\n  private async syncParticles(\n    myAddress: NeuronAddress,\n    syncItems: SyncStatusDto[],\n    signal: AbortSignal\n  ) {\n    const updatedSyncItems: SyncStatusDto[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const syncItem of syncItems) {\n      const { id, timestampUpdate } = syncItem;\n\n      this.statusApi.sendStatus(\n        'in-progress',\n        `fetching tweet updates...`,\n        this.progressTracker.trackProgress(1)\n      );\n      // eslint-disable-next-line no-await-in-loop\n      const linksIndexer = await fetchCyberlinksAndResolveParticles(\n        id,\n        timestampUpdate,\n        this.particlesResolver!,\n        QueuePriority.MEDIUM,\n        this.abortController?.signal\n      );\n\n      if (linksIndexer.length > 0) {\n        const links = linksIndexer.map(mapLinkFromIndexerToDto);\n\n        // save links\n        // eslint-disable-next-line no-await-in-loop\n        await asyncIterableBatchProcessor(\n          links,\n          (links) => throwIfAborted(this.db!.putCyberlinks, signal)(links),\n          MAX_DATABASE_PUT_SIZE\n        );\n\n        const newItem = changeParticleSyncStatus(syncItem, links, myAddress);\n\n        updatedSyncItems.push(newItem);\n      }\n    }\n\n    if (updatedSyncItems.length > 0) {\n      await throwIfAborted(this.db!.putSyncStatus, signal)(updatedSyncItems);\n    }\n    this.channelApi.postSenseUpdate(updatedSyncItems as SenseListItem[]);\n  }\n}\n\nexport default SyncParticlesLoop;\n","/* eslint-disable camelcase */\nimport {\n  map,\n  combineLatest,\n  distinctUntilChanged,\n  BehaviorSubject,\n} from 'rxjs';\n\nimport {\n  EntryType,\n  SyncQueueJobType,\n} from 'src/services/CozoDb/types/entities';\n\nimport { NeuronAddress } from 'src/types/base';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { isAbortException } from 'src/utils/exceptions/helpers';\n\nimport { mapLinkFromIndexerToDto } from 'src/services/CozoDb/mapping';\nimport { throwIfAborted } from 'src/utils/async/promise';\n\nimport { SyncEntryName } from 'src/services/backend/types/services';\nimport { SenseItemLinkMeta } from 'src/services/backend/types/sense';\nimport { entityToDto } from 'src/utils/dto';\nimport { ServiceDeps } from '../types';\n\nimport { fetchCyberlinksByNerounIterable } from '../../../indexer/cyberlinks';\nimport { CYBERLINKS_BATCH_LIMIT } from '../../../indexer/consts';\nimport BaseSyncLoop from '../BaseSyncLoop/BaseSyncLoop';\nimport { SyncServiceParams } from '../../types';\nimport { getLastReadInfo } from '../../utils';\n\nimport ParticlesResolverQueue from '../ParticlesResolverQueue/ParticlesResolverQueue';\nimport { SENSE_FRIEND_PARTICLES } from '../consts';\n\nclass SyncMyFriendsLoop extends BaseSyncLoop {\n  protected followings: NeuronAddress[] = [];\n\n  constructor(\n    name: SyncEntryName,\n    intervalMs: number,\n    deps: ServiceDeps,\n    particlesResolver: ParticlesResolverQueue,\n    { warmupMs }: { warmupMs: number } = { warmupMs: 0 }\n  ) {\n    if (!deps.followings$) {\n      throw new Error('followings$ is required');\n    }\n\n    super(name, intervalMs, deps, particlesResolver, {\n      warmupMs,\n    });\n  }\n\n  protected createIsInitializedObserver(deps: ServiceDeps) {\n    const followingsInitialized$ = new BehaviorSubject<boolean>(false);\n    deps.params$\n      ?.pipe(\n        map((params) => params.myAddress),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        followingsInitialized$.next(false);\n      });\n\n    deps.followings$!.subscribe((followings) => {\n      this.followings = followings;\n      followingsInitialized$.next(true);\n\n      this.restart();\n    });\n\n    const isInitialized$ = combineLatest([\n      deps.dbInstance$,\n      deps.params$!,\n      this.particlesResolver!.isInitialized$,\n      followingsInitialized$!,\n    ]).pipe(\n      map(\n        ([dbInstance, params, syncQueueInitialized, followingsInitialized]) =>\n          !!dbInstance &&\n          !!params.myAddress &&\n          !!syncQueueInitialized &&\n          followingsInitialized\n      )\n    );\n\n    return isInitialized$;\n  }\n\n  protected async sync(params: SyncServiceParams) {\n    const { signal } = this.abortController;\n\n    this.statusApi.sendStatus('in-progress', 'preparing...');\n    const { myAddress } = params;\n\n    const { followings } = this;\n\n    this.statusApi.sendStatus('estimating');\n\n    this.cyblogCh.info(\n      `>>> syncMyFriends ${myAddress} count ${followings.length}`,\n      {\n        unit: 'friends-sync',\n        data: followings,\n      }\n    );\n\n    this.progressTracker.start(followings.length);\n    this.statusApi.sendStatus(\n      'in-progress',\n      `sync...`,\n      this.progressTracker.progress\n    );\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const addr of followings) {\n      // eslint-disable-next-line no-await-in-loop\n      await this.syncLinks(myAddress!, addr, signal);\n    }\n  }\n\n  public async syncLinks(\n    myAddress: NeuronAddress,\n    address: NeuronAddress,\n    signal: AbortSignal\n  ) {\n    let syncUpdates = [];\n    try {\n      this.statusApi.sendStatus(\n        'in-progress',\n        `starting sync ${address}...`,\n        this.progressTracker.progress\n      );\n      const { timestampRead, unreadCount, meta } = await this.db!.getSyncStatus(\n        myAddress,\n        address\n      );\n\n      const { timestampUpdateChat = 0, timestampUpdateContent = 0 } =\n        meta || {};\n\n      const timestampFrom = timestampUpdateContent + 1; // ofsset + 1 to fix milliseconds precision bug\n\n      const linksAsyncIterable = await fetchCyberlinksByNerounIterable(\n        address,\n        SENSE_FRIEND_PARTICLES,\n        timestampFrom,\n        CYBERLINKS_BATCH_LIMIT,\n        signal\n      );\n\n      // eslint-disable-next-line no-restricted-syntax\n      for await (const linksBatch of linksAsyncIterable) {\n        this.statusApi.sendStatus(\n          'in-progress',\n          `sync ${address}...`,\n          this.progressTracker.trackProgress(1)\n        );\n\n        const links = linksBatch.map(mapLinkFromIndexerToDto);\n\n        const { timestampRead: newTimestampRead, unreadCount: newUnreadCount } =\n          getLastReadInfo(links, myAddress, timestampRead, unreadCount);\n\n        // const unreadItemsCount = unreadCount + links.length;\n\n        if (links.length > 0) {\n          const lastLink = entityToDto(links.at(-1)!);\n          const newTimestampUpdateContent = lastLink!.timestamp;\n\n          await throwIfAborted(this.db!.putCyberlinks, signal)(links);\n\n          const particles = links.map((t) => t.to);\n          await this.particlesResolver!.enqueueBatch(\n            particles,\n            SyncQueueJobType.particle,\n            QueuePriority.HIGH\n          );\n\n          const newSyncItem = {\n            ownerId: myAddress,\n            entryType: EntryType.chat,\n            id: address,\n            timestampUpdate: Math.max(\n              newTimestampUpdateContent,\n              timestampUpdateChat\n            ),\n            unreadCount: newUnreadCount,\n            timestampRead: newTimestampRead,\n            disabled: false,\n            meta: {\n              ...lastLink!,\n              timestampUpdateContent: newTimestampUpdateContent,\n              timestampUpdateChat,\n            } as SenseItemLinkMeta,\n          };\n          // Update transaction\n          await throwIfAborted(this.db!.putSyncStatus, signal)(newSyncItem);\n\n          syncUpdates.push(newSyncItem);\n        }\n      }\n    } catch (err) {\n      this.cyblogCh.error(`>>> SyncMyFriends ${address} error`, {\n        error: err,\n      });\n      if (!isAbortException(err)) {\n        this.statusApi.sendStatus('error', err.toString());\n      } else {\n        syncUpdates = [];\n        throw err;\n      }\n    } finally {\n      // console.log('-----syncUpdates with redux', syncUpdates);\n      this.channelApi.postSenseUpdate(syncUpdates);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  // protected createRestartObserver(\n  //   params$: Observable<SyncServiceParams>\n  // ): Observable<boolean> {\n  //   return super\n  //     .createRestartObserver(params$)\n  //     .pipe(switchMap((addressChanged) => this.isInitialized$));\n  // }\n}\n\nexport default SyncMyFriendsLoop;\n","import { NeuronAddress, ParticleCid } from 'src/types/base';\nimport { getIpfsHash } from 'src/utils/ipfs/helpers';\nimport { PATTERN_CYBER } from 'src/constants/patterns';\nimport { Subject, Observable } from 'rxjs';\n\nimport DbApiWrapper from '../backend/services/DbApi/DbApi';\nimport { getFollowsAsCid, getFollowers } from './lcd';\nimport { FetchParticleAsync, QueuePriority } from '../QueueManager/types';\nimport { CommunityDto } from '../CozoDb/types/dto';\nimport { FetchIpfsFunc } from '../backend/services/sync/types';\nimport { createCyblogChannel } from 'src/utils/logging/cyblog';\n\nexport type SyncCommunityResult = {\n  action: 'reset' | 'add' | 'complete';\n  items: CommunityDto[];\n};\n\nconst cyblogCh = createCyblogChannel({\n  thread: 'bckd',\n  unit: 'fetchStoredSyncCommunity',\n});\n\n// eslint-disable-next-line import/prefer-default-export, import/no-unused-modules\nexport const fetchStoredSyncCommunity$ = (\n  dbApi: DbApiWrapper,\n  address: NeuronAddress,\n  fetchParticleAsync?: FetchIpfsFunc,\n  signal?: AbortSignal\n): Observable<SyncCommunityResult> => {\n  return new Observable<SyncCommunityResult>((subscriber) => {\n    subscriber.next({ action: 'reset', items: [] });\n\n    (async () => {\n      const storedCommunity = await dbApi.getCommunity(address);\n\n      subscriber.next({ action: 'add', items: storedCommunity });\n\n      const communityUpdatesMap = new Map<ParticleCid, CommunityDto>(\n        storedCommunity.map((c) => [c.particle, c])\n      );\n\n      const getExistingOrDefault = (cid: ParticleCid): Partial<CommunityDto> =>\n        communityUpdatesMap.get(cid) || {\n          ownerId: address,\n          name: '',\n          following: false,\n          follower: false,\n        };\n\n      const followsCids = await getFollowsAsCid(address, signal);\n      const followers = await getFollowers(address, signal);\n\n      const newFollowerCids = followsCids.filter(\n        (cid) => !storedCommunity.some((i) => i.particle === cid && i.following)\n      );\n\n      const newFollowingNeurons = followers.filter(\n        (addr) => !storedCommunity.some((i) => i.neuron === addr && i.follower)\n      );\n\n      cyblogCh.info(\n        `>>>$ sync community ${address} processing, stored ${storedCommunity.length} new followers: ${newFollowerCids.length} new following: ${newFollowingNeurons.length}`\n      );\n\n      const followersCommunity = await Promise.all(\n        newFollowingNeurons.map(async (neuron) => {\n          const cid = await getIpfsHash(neuron);\n\n          const communityItem = {\n            ...getExistingOrDefault(cid),\n            particle: cid,\n            neuron,\n            follower: true,\n          } as CommunityDto;\n\n          await dbApi.putCommunity(communityItem);\n          communityUpdatesMap.set(cid, communityItem);\n          return communityItem;\n        })\n      );\n\n      subscriber.next({ action: 'add', items: followersCommunity });\n\n      await Promise.all(\n        newFollowerCids.map(async (cid: ParticleCid) => {\n          const neuron = (await fetchParticleAsync!(cid, QueuePriority.URGENT))\n            ?.result?.textPreview;\n          if (neuron && neuron.match(PATTERN_CYBER)) {\n            const communityItem = {\n              ...getExistingOrDefault(cid),\n              neuron,\n              particle: cid,\n              following: true,\n            } as CommunityDto;\n\n            await dbApi.putCommunity(communityItem);\n            communityUpdatesMap.set(cid, communityItem);\n            subscriber.next({ action: 'add', items: [communityItem] });\n          }\n        })\n      );\n\n      cyblogCh.info(`>>>$ sync community ${address}, done`);\n      // const communityUpdates = [...communityUpdatesMap.values()];\n\n      // if (communityUpdates.length > 0) {\n      //   subscriber.next(communityUpdates);\n      // }\n      subscriber.next({ action: 'complete', items: [] });\n\n      subscriber.complete();\n    })().catch((err) => {\n      cyblogCh.error(`>>>$ sync community ${address}, error`, { error: err });\n      subscriber.error(err);\n    });\n  });\n};\n\n// eslint-disable-next-line import/no-unused-modules\nexport const fetchCommunity = async (\n  address: NeuronAddress,\n  fetchParticleAsync?: FetchParticleAsync,\n  onResolve?: (community: CommunityDto[]) => void,\n  signal?: AbortSignal\n) => {\n  const communityUpdatesMap = new Map<ParticleCid, CommunityDto>();\n\n  const getExistingOrDefault = (cid: ParticleCid): Partial<CommunityDto> =>\n    communityUpdatesMap.get(cid) || {\n      ownerId: address,\n      name: '',\n      following: false,\n      follower: false,\n    };\n\n  const followsCids = await getFollowsAsCid(address, signal);\n  const followers = await getFollowers(address, signal);\n\n  console.log(`>>> sync community ${address} processing without store`);\n\n  const followsPromise = Promise.all(\n    followsCids.map(async (cid) => {\n      const neuron = (await fetchParticleAsync!(cid))?.result?.textPreview;\n      if (neuron && neuron.match(PATTERN_CYBER)) {\n        const communityItem = {\n          ...getExistingOrDefault(cid),\n          neuron,\n          particle: cid,\n          following: true,\n        } as CommunityDto;\n        communityUpdatesMap.set(cid, communityItem);\n        onResolve && !signal?.aborted && onResolve([communityItem]);\n      }\n    })\n  );\n\n  const followersPromise = Promise.all(\n    followers.map(async (neuron) => {\n      const cid = await getIpfsHash(neuron);\n\n      const communityItem = {\n        ...getExistingOrDefault(cid),\n        particle: cid,\n        neuron,\n        follower: true,\n      } as CommunityDto;\n\n      communityUpdatesMap.set(cid, communityItem);\n      onResolve && !signal?.aborted && onResolve([communityItem]);\n    })\n  );\n\n  await Promise.all([followersPromise, followsPromise]);\n};\n","import { NeuronAddress, ParticleCid } from 'src/types/base';\nimport { CID_FOLLOW } from 'src/constants/app';\nimport { getIpfsHash } from 'src/utils/ipfs/helpers';\nimport { getTransactions } from 'src/services/transactions/lcd';\n\nexport const getFollowsAsCid = async (\n  address: NeuronAddress,\n  signal?: AbortSignal\n): Promise<ParticleCid[]> => {\n  const response = await getTransactions({\n    events: [\n      {\n        key: 'cyberlink.neuron',\n        value: address,\n      },\n      {\n        key: 'cyberlink.particleFrom',\n        value: CID_FOLLOW,\n      },\n    ],\n    pagination: {\n      limit: 1000000000,\n    },\n    config: {\n      signal,\n    },\n  });\n\n  if (!response.txResponses.length) {\n    return [];\n  }\n\n  return response.txResponses.map(\n    (item) => item?.tx?.body.messages[0].links[0].to\n  );\n};\n\n// use src/services/transactions/lcd.tsx\nexport const getFollowers = async (\n  address: NeuronAddress,\n  signal?: AbortSignal\n): Promise<NeuronAddress[]> => {\n  const addressHash = await getIpfsHash(address);\n\n  const response = await getTransactions({\n    events: [\n      {\n        key: 'cyberlink.particleFrom',\n        value: CID_FOLLOW,\n      },\n      {\n        key: 'cyberlink.particleTo',\n        value: addressHash,\n      },\n    ],\n    pagination: {\n      limit: 1000000000,\n    },\n    config: {\n      signal,\n    },\n  });\n\n  if (!response.txResponses.length) {\n    return [];\n  }\n\n  return response.txResponses.map((item) => item?.tx?.body.messages[0].neuron);\n};\n","import { BehaviorSubject, Observable, first } from 'rxjs';\nimport { LinkDto } from 'src/services/CozoDb/types/dto';\nimport { IPFSContent } from 'src/services/ipfs/types';\nimport { mapParticleToEntity } from 'src/services/CozoDb/mapping';\nimport { QueueChannelMessage } from './types';\nimport { CYB_QUEUE_CHANNEL } from '../consts';\n\nimport { enqueueParticleEmbeddingMaybe } from './backendQueueSenders';\nimport ParticlesResolverQueue from '../../services/sync/services/ParticlesResolverQueue/ParticlesResolverQueue';\nimport DbApi from '../../services/DbApi/DbApi';\n\nimport { SyncQueueItem } from '../../services/sync/services/ParticlesResolverQueue/types';\nimport { Option } from 'src/types';\n\nclass BackendQueueChannelListener {\n  private channel = new BroadcastChannel(CYB_QUEUE_CHANNEL);\n\n  private particlesResolver: ParticlesResolverQueue;\n\n  private dbInstance$: BehaviorSubject<Option<DbApi>>;\n\n  constructor(\n    particlesResolver: ParticlesResolverQueue,\n    dbInstance$: Observable<DbApi | undefined>\n  ) {\n    this.particlesResolver = particlesResolver;\n    dbInstance$.subscribe((v) => {\n      this.dbInstance$.next(v);\n    });\n    this.dbInstance$ = new BehaviorSubject<Option<DbApi>>(undefined);\n\n    this.channel.onmessage = (event) => this.onMessage(event);\n\n    this.channel.onmessageerror = (event) =>\n      console.error(`${CYB_QUEUE_CHANNEL} error`, event);\n  }\n\n  private async getDeffredDbApi(): Promise<DbApi> {\n    return new Promise((resolve) => {\n      const dbApi = this.dbInstance$.getValue();\n      if (dbApi) {\n        resolve(dbApi);\n      }\n\n      this.dbInstance$\n        .pipe(\n          first((value) => value !== undefined) // Automatically unsubscribes after the first valid value\n        )\n        .subscribe((value) => {\n          resolve(value as DbApi);\n        });\n    });\n  }\n\n  private async saveLinks(links: LinkDto[]) {\n    const dbApi = await this.getDeffredDbApi();\n    const res = await dbApi.putCyberlinks(links);\n    // console.log('---saveLinks done', links, res);\n  }\n\n  private async saveParticles(content: IPFSContent) {\n    try {\n      const dbApi = await this.getDeffredDbApi();\n      const entity = mapParticleToEntity(content);\n      const result = await dbApi.putParticles(entity);\n      if (result.ok) {\n        await enqueueParticleEmbeddingMaybe(content);\n      }\n    } catch (e) {\n      console.log(\n        '---saveParticle e',\n        content,\n        content.textPreview,\n        e.toString()\n      );\n      throw e;\n    }\n  }\n\n  private async enquueSync(data: SyncQueueItem | SyncQueueItem[]) {\n    // TODO: TMP ASYNC WAIT TO INIT DB\n    await this.getDeffredDbApi();\n\n    this.particlesResolver.enqueue(Array.isArray(data) ? data : [data]);\n  }\n\n  private onMessage(msg: MessageEvent<QueueChannelMessage>) {\n    const { type, data } = msg.data;\n    if (type === 'link') {\n      this.saveLinks(data);\n    } else if (type === 'particle') {\n      this.saveParticles(data);\n    } else if (type === 'sync') {\n      this.enquueSync(data);\n    }\n  }\n}\n\nexport default BackendQueueChannelListener;\n","/* eslint-disable no-restricted-syntax */\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport BroadcastChannelSender from '../../channels/BroadcastChannelSender';\n\nimport ParticlesResolverQueue from './services/ParticlesResolverQueue/ParticlesResolverQueue';\n\n// import SyncIpfsLoop from './services/SyncIpfsLoop/SyncIpfsLoop';\nimport SyncTransactionsLoop from './services/SyncTransactionsLoop/SyncTransactionsLoop';\nimport SyncParticlesLoop from './services/SyncParticlesLoop/SyncParticlesLoop';\n\nimport { ServiceDeps } from './services/types';\nimport {\n  MY_FRIENDS_SYNC_INTERVAL,\n  MY_PARTICLES_SYNC_INTERVAL,\n} from './services/consts';\nimport SyncMyFriendsLoop from './services/SyncMyFriendsLoop/SyncMyFriendsLoop';\nimport { SyncEntryName } from '../../types/services';\nimport BaseSyncLoop from './services/BaseSyncLoop/BaseSyncLoop';\nimport createCommunitySync$ from './services/CommunitySync/CommunitySync';\nimport { createCyblogChannel } from 'src/utils/logging/cyblog';\nimport BackendQueueChannelListener from '../../channels/BackendQueueChannel/BackendQueueChannel';\n\nconst cyblogCh = createCyblogChannel({ thread: 'bckd' });\n\n// eslint-disable-next-line import/prefer-default-export\nexport class SyncService {\n  private isInitialized$: Observable<boolean>;\n\n  private channelApi = new BroadcastChannelSender();\n\n  private loops: Partial<Record<SyncEntryName, BaseSyncLoop>> = {};\n\n  constructor(deps: ServiceDeps) {\n    const { dbInstance$, ipfsInstance$ } = deps;\n\n    const particlesResolver = new ParticlesResolverQueue(deps).start();\n\n    const queueListener = new BackendQueueChannelListener(\n      particlesResolver,\n      dbInstance$\n    );\n\n    this.isInitialized$ = combineLatest([dbInstance$, ipfsInstance$]).pipe(\n      map(([dbInstance, ipfsInstance]) => !!dbInstance && !!ipfsInstance)\n    );\n    // subscribe when started\n    this.isInitialized$.subscribe({\n      next: (result) => {\n        return result && this.channelApi.postServiceStatus('sync', 'started');\n      },\n      error: (err) => this.channelApi.postServiceStatus('sync', 'error', err),\n    });\n\n    const communitySync$ = createCommunitySync$(deps);\n    communitySync$.subscribe((community) => {\n      cyblogCh.info('--> community fetched', {\n        unit: 'community',\n        data: community,\n      });\n    });\n\n    const followings$ = communitySync$.pipe(\n      map((c) => c.filter((i) => i.following)),\n      map((c) => c.map((i) => i.neuron))\n    );\n\n    // new SyncIpfsLoop(deps, particlesResolver).start();\n\n    new SyncTransactionsLoop('transactions', deps, particlesResolver).start();\n\n    new SyncParticlesLoop(\n      'particles',\n      MY_PARTICLES_SYNC_INTERVAL,\n      deps,\n      particlesResolver\n    ).start();\n\n    new SyncMyFriendsLoop(\n      'my-friends',\n      MY_FRIENDS_SYNC_INTERVAL,\n      { ...deps, followings$ },\n      particlesResolver\n      // { warmupMs: 1000 }\n    ).start();\n  }\n\n  public restart(name: SyncEntryName) {\n    this.loops[name]?.restart();\n  }\n}\n","import {\n  Observable,\n  combineLatest,\n  defer,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n} from 'rxjs';\n\nimport {\n  SyncCommunityResult,\n  fetchStoredSyncCommunity$,\n} from 'src/services/community/community';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport { CommunityDto } from 'src/services/CozoDb/types/dto';\nimport { ServiceDeps } from '../types';\n\n// eslint-disable-next-line import/no-unused-modules\nexport default function createCommunitySync$(\n  deps: ServiceDeps\n): Observable<CommunityDto[]> {\n  const { dbInstance$, ipfsInstance$, params$ } = deps;\n  const channel = new BroadcastChannelSender();\n\n  return combineLatest([\n    dbInstance$,\n    params$!.pipe(\n      map((params) => params.myAddress),\n      distinctUntilChanged()\n    ),\n    ipfsInstance$,\n  ]).pipe(\n    filter(\n      ([dbInstance, myAddress, ipfsInstance]) =>\n        !!dbInstance && !!ipfsInstance && !!myAddress\n    ),\n    switchMap(([dbApi, myAddress, ipfsInstance]) => {\n      const { waitForParticleResolve } = deps;\n      let community: CommunityDto[] = []; // Fix: Add type declaration for community array\n      return new Observable<CommunityDto[]>((observer) => {\n        observer.next([]);\n\n        fetchStoredSyncCommunity$(\n          dbApi!,\n          myAddress!,\n          waitForParticleResolve!\n        ).subscribe(({ action, items }: SyncCommunityResult) => {\n          channel.post({ type: 'load_community', value: { action, items } });\n\n          if (action === 'reset') {\n            community = [];\n          } else if (['add', 'complete'].some((s) => s === action)) {\n            community.push(...items);\n          }\n\n          if (action === 'complete') {\n            observer.next(community);\n            observer.complete();\n          }\n        });\n      });\n    })\n  );\n}\n","import Dexie from 'dexie';\n\nconst db = new Dexie('cyber-page-cash');\ndb.version(3).stores({\n  cid: 'cid',\n  following: 'cid',\n});\n\nexport default db;\n","import db from 'src/db';\n\nconst ipfsCacheDb = () => {\n  const add = async (cid: string, raw: Uint8Array): Promise<void> => {\n    const dbValue = await db.table('cid').get({ cid });\n\n    if (!dbValue) {\n      const ipfsContentAddtToInddexdDB = {\n        cid,\n        data: raw,\n      };\n      db.table('cid').add(ipfsContentAddtToInddexdDB);\n    }\n  };\n\n  const get = async (cid: string): Promise<Uint8Array | undefined> => {\n    // TODO: use cursor\n    const dbValue = await db.table('cid').get({ cid });\n\n    // backward compatibility\n    return dbValue?.data || dbValue?.content;\n  };\n\n  return { add, get };\n};\n\nexport default ipfsCacheDb();\n","import {\n  AddResponse,\n  PinResponse,\n} from '@nftstorage/ipfs-cluster/dist/src/interface';\n\nimport { Cluster } from '@nftstorage/ipfs-cluster';\nimport { IPFS_CLUSTER_URL } from '../config';\n\nconst cyberCluster = () => {\n  const cluster = new Cluster(IPFS_CLUSTER_URL);\n\n  const add = async (\n    file: File | string\n  ): Promise<AddResponse | PinResponse | undefined> => {\n    const dataFile =\n      typeof file === 'string' ? new File([file], 'file.txt') : file;\n    return cluster.add(dataFile, { cidVersion: 0, rawLeaves: false });\n  };\n\n  const status = async (cid: string) => cluster.status(cid);\n  return { add, status };\n};\n\nexport default cyberCluster();\n","/* eslint-disable import/no-unused-modules */\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\n\nimport { Option } from 'src/types';\nimport {\n  // getIpfsUserGatewanAndNodeType,\n  IPFSContentMeta,\n  CallBackFuncStatus,\n  IpfsContentSource,\n  IpfsNode,\n  IpfsFileStats,\n  IPFSContent,\n} from '../types';\n\nimport { getMimeFromUint8Array, toAsyncIterableWithMime } from './stream';\n\nimport ipfsCacheDb from './ipfsCacheDb';\nimport cyberCluster from './cluster';\n\nimport {\n  contentToUint8Array,\n  createTextPreview,\n  mimeToBaseContentType,\n} from './content';\n\nimport { CYBER_GATEWAY_URL, FILE_SIZE_DOWNLOAD } from '../config';\n\n// Get data by CID from local storage\nconst loadIPFSContentFromDb = async (\n  cid: string\n): Promise<Option<IPFSContent>> => {\n  // TODO: enable, disabled for tests\n\n  // TODO: use cursor\n  const data = await ipfsCacheDb.get(cid);\n  if (data && data.length) {\n    // TODO: use cursor\n    const mime = await getMimeFromUint8Array(data);\n    const contentType = mimeToBaseContentType(mime);\n\n    const textPreview = createTextPreview(data, contentType);\n\n    const meta: IPFSContentMeta = {\n      type: 'file', // `TODO: ipfs refactor dir support ?\n      size: data.length,\n      sizeLocal: data.length,\n      mime,\n      contentType,\n    };\n    return { result: data, cid, meta, source: 'db', textPreview };\n  }\n\n  return undefined;\n};\n\nconst emptyStats: IpfsFileStats = {\n  type: 'file',\n  size: undefined,\n  sizeLocal: undefined,\n  blocks: undefined,\n};\n\nconst fetchIPFSContentStat = async (\n  cid: string,\n  node?: IpfsNode,\n  signal?: AbortSignal\n): Promise<IpfsFileStats> => {\n  if (node) {\n    const stats = await node.stat(cid, { signal });\n    return stats;\n  }\n  return emptyStats;\n};\n\nconst fetchIPFSContentFromNode = async (\n  cid: string,\n  node?: IpfsNode,\n  controller?: AbortController\n): Promise<Option<IPFSContent>> => {\n  const controllerLegacy = controller || new AbortController();\n  const { signal } = controllerLegacy;\n  let timer: NodeJS.Timeout | undefined;\n\n  if (!node) {\n    console.log('--------fetchIPFSContentFromNode NO NODE INTIALIZED--------');\n    return undefined;\n  }\n\n  if (!controller) {\n    timer = setTimeout(() => {\n      controllerLegacy.abort();\n    }, 1000 * 60 * 1);\n  } // 1 min\n\n  // TODO: cover ipns case\n  try {\n    // const stat = await node.files.stat(path, { signal });\n    const startTime = Date.now();\n    const stats = await fetchIPFSContentStat(cid, node, signal);\n    const meta = stats as IPFSContentMeta;\n    const statsDoneTime = Date.now();\n    meta.statsTime = statsDoneTime - startTime;\n    const allowedSize = stats.size ? stats.size < FILE_SIZE_DOWNLOAD : false;\n    timer && clearTimeout(timer);\n\n    switch (stats.type) {\n      case 'directory': {\n        // TODO: return directory structure\n        return { cid, availableDownload: true, source: 'node', meta: stats };\n      }\n      default: {\n        // Get sample of content\n        const { value: firstChunk } = await node\n          .cat(cid, { signal, length: 2048, offset: 0 })\n          [Symbol.asyncIterator]()\n          .next();\n\n        meta.mime = await getMimeFromUint8Array(firstChunk);\n        meta.contentType = mimeToBaseContentType(meta.mime);\n        const fullyDownloaded =\n          stats.size && stats.size > -1 && firstChunk.length >= stats.size;\n\n        const textPreview = createTextPreview(firstChunk, meta.contentType);\n\n        if (fullyDownloaded) {\n          await ipfsCacheDb.add(cid, uint8ArrayConcat([firstChunk]));\n        }\n\n        // If all content fits in first chunk return byte-array instead iterable\n        const stream = fullyDownloaded\n          ? firstChunk\n          : allowedSize\n          ? node.cat(cid, { signal })\n          : undefined;\n\n        meta.catTime = Date.now() - statsDoneTime;\n\n        // TODO: add to db flag that content is pinned TO local node\n        // if already pinned skip pin\n        if (!meta.local && allowedSize) {\n          node.pin(cid);\n\n          meta.pinTime = Date.now() - meta.catTime;\n        } else {\n          meta.pinTime = -1;\n        }\n\n        return {\n          result: stream,\n          textPreview,\n          cid,\n          meta,\n          source: 'node',\n        };\n        // }\n      }\n    }\n  } catch (error) {\n    console.debug('error fetchIPFSContentFromNode', error);\n    return {\n      cid,\n      availableDownload: true,\n      source: 'node',\n      meta: { ...emptyStats } as IPFSContentMeta,\n    };\n  }\n};\n\nconst fetchIPFSContentFromGateway = async (\n  cid: string,\n  node?: IpfsNode,\n  controller?: AbortController,\n  headers?: Record<string, string>\n): Promise<Option<IPFSContent>> => {\n  // fetch META only from external node(toooo slow), TODO: fetch meta from cybernode\n  const isExternalNode = node?.nodeType === 'external';\n\n  const stats = isExternalNode\n    ? await fetchIPFSContentStat(cid, node, controller?.signal)\n    : emptyStats;\n\n  const contentUrl = `${CYBER_GATEWAY_URL}/ipfs/${cid}`;\n  const response = await fetch(contentUrl, {\n    method: 'GET',\n    signal: controller?.signal,\n    headers,\n  });\n  if (response && response.body) {\n    // fetch doesn't provide any headers in our case :(\n\n    // const contentLength = parseInt(\n    //   response.headers['content-length'] || '-1',\n    //   10\n    // );\n    // const contentType = response.headers['content-type'];\n\n    // Extract meta if ipfs prob/node not started yet\n    // if (!meta.mime) {\n    //   meta = { ...meta, mime: contentType };\n    // }\n\n    // TODO: fix\n    const flushResults = (chunks: Uint8Array[]) =>\n      !isExternalNode\n        ? ipfsCacheDb.add(cid, uint8ArrayConcat(chunks))\n        : Promise.resolve();\n\n    const { mime, result, firstChunk } = await toAsyncIterableWithMime(\n      response.body,\n      flushResults\n    );\n\n    const contentType = mimeToBaseContentType(mime);\n\n    const textPreview = createTextPreview(firstChunk, contentType);\n    return {\n      cid,\n      textPreview,\n      meta: { ...stats, mime, contentType },\n      result,\n      source: 'gateway',\n      contentUrl,\n    };\n  }\n\n  return undefined;\n};\n\ntype fetchContentOptions = {\n  controller?: AbortController;\n  node?: IpfsNode;\n  headers?: Record<string, string>;\n};\n\nasync function fetchIpfsContent(\n  cid: string,\n  source: IpfsContentSource,\n  options: fetchContentOptions\n): Promise<Option<IPFSContent>> {\n  const { node, controller, headers } = options;\n\n  try {\n    switch (source) {\n      case 'db':\n        return loadIPFSContentFromDb(cid);\n      case 'node':\n        return fetchIPFSContentFromNode(cid, node, controller);\n      case 'gateway':\n        return fetchIPFSContentFromGateway(cid, node, controller, headers);\n      default:\n        return undefined;\n    }\n  } catch (e) {\n    console.log('----fetchIpfsContent error', e);\n    return undefined;\n  }\n}\n\nconst getIPFSContent = async (\n  cid: string,\n  node?: IpfsNode,\n  controller?: AbortController,\n  callBackFuncStatus?: CallBackFuncStatus\n): Promise<Option<IPFSContent>> => {\n  const dataRsponseDb = await loadIPFSContentFromDb(cid);\n  if (dataRsponseDb !== undefined) {\n    return dataRsponseDb;\n  }\n\n  if (node) {\n    callBackFuncStatus && callBackFuncStatus('trying to get with a node');\n    // console.log('----Fetch from node', cid);\n    const ipfsContent = await fetchIPFSContentFromNode(cid, node, controller);\n\n    return ipfsContent;\n  }\n\n  callBackFuncStatus && callBackFuncStatus('trying to get with a gatway');\n  // console.log('----Fetch from gateway', cid);\n  const respnseGateway = await fetchIPFSContentFromGateway(\n    cid,\n    node,\n    controller\n  );\n\n  return respnseGateway;\n};\n\nconst catIPFSContentFromNode = (\n  cid: string,\n  node?: IpfsNode,\n  offset?: number,\n  controller?: AbortController\n): AsyncIterable<Uint8Array> | undefined => {\n  if (!node) {\n    console.log(\n      '--------fetchIPFSContentFromNode NO NODE INTIALIZED TODO: cover case--------'\n    );\n    return undefined;\n  }\n\n  // TODO: cover ipns case\n\n  return node.cat(cid, { offset, signal: controller?.signal });\n};\n\n// const nodeContentFindProvs = async (\n//   node: AppIPFS,\n//   cid: string,\n//   offset: number,\n//   controller?: AbortController\n// ): AsyncIterable<number> | undefined => {\n//   if (!node) {\n//     console.log(\n//       '--------fetchIPFSContentFromNode NO NODE INTIALIZED TODO: cover case--------'\n//     );\n//     return undefined;\n//   }\n\n//   // TODO: cover ipns case\n//   const path = `/ipfs/${cid}`;\n\n//   const providers = node.dht.findProvs(path, {\n//     signal: controller?.signal,\n//   });\n\n//   let count = 0;\n//   for await (const provider of providers) {\n//     //  console.log(provider.id.toString())\n//     //  id: PeerId\n//     // multiaddrs: Multiaddr[]\n//     // protocols: string[]\n//     count++;\n//   }\n\n//   return count;\n// };\n\nconst addContenToIpfs = async (\n  node: IpfsNode,\n  content: File | string\n): Promise<Option<string>> => {\n  let cid;\n  if (node) {\n    cid = await node.add(content);\n  }\n  // TODO: WARN - TMP solution make cluster call non-awaitable\n  cyberCluster.add(content);\n  // Save to local cache\n  cid && (await ipfsCacheDb.add(cid, await contentToUint8Array(content)));\n  return cid;\n};\n\nexport {\n  getIPFSContent,\n  catIPFSContentFromNode,\n  fetchIpfsContent,\n  addContenToIpfs,\n};\n","import { IQueueStrategy, QueueSettings, QueueSource } from './types';\n\nexport class QueueStrategy implements IQueueStrategy {\n  settings: QueueSettings;\n\n  order: QueueSource[];\n\n  constructor(settings: QueueSettings, order: QueueSource[]) {\n    this.settings = settings;\n    this.order = order;\n  }\n\n  getNextSource(source: QueueSource): QueueSource | undefined {\n    const index = this.order.indexOf(source);\n    return index < this.order.length ? this.order[index + 1] : undefined;\n  }\n}\n","export class QueueItemTimeoutError extends Error {\n  constructor(timeoutMs: number) {\n    super(`Timeout after ${timeoutMs}`);\n    Object.setPrototypeOf(this, QueueItemTimeoutError.prototype);\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nexport const CustomHeaders = {\n  XCybSource: 'X-Cyb-Source',\n};\n\nexport enum XCybSourceValues {\n  sharedWorker = 'shared-worker',\n}\n","import {\n  BehaviorSubject,\n  EMPTY,\n  Observable,\n  catchError,\n  combineLatest,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  interval,\n  map,\n  merge,\n  mergeMap,\n  of,\n  share,\n  tap,\n  throwError,\n  timeout,\n  withLatestFrom,\n} from 'rxjs';\n\nimport * as R from 'ramda';\n\nimport { CybIpfsNode, IpfsContentSource } from 'src/services/ipfs/types';\nimport { fetchIpfsContent } from 'src/services/ipfs/utils/utils-ipfs';\nimport { ParticleCid } from 'src/types/base';\n\nimport { promiseToObservable } from '../../utils/rxjs/helpers';\n\nimport type {\n  QueueItem,\n  QueueItemAsyncResult,\n  QueueItemCallback,\n  QueueItemOptions,\n  QueueItemResult,\n  QueueSource,\n  QueueStats,\n} from './types';\n\nimport { QueueStrategy } from './QueueStrategy';\n\nimport { enqueueParticleSave } from '../backend/channels/BackendQueueChannel/backendQueueSenders';\nimport BroadcastChannelSender from '../backend/channels/BroadcastChannelSender';\nimport { RuneEngine } from '../scripting/engine';\n\nimport { QueueItemTimeoutError } from './QueueItemTimeoutError';\nimport { CustomHeaders, XCybSourceValues } from './constants';\n\nconst QUEUE_DEBOUNCE_MS = 33;\nconst CONNECTION_KEEPER_RETRY_MS = 15000;\n\nfunction getQueueItemTotalPriority(item: QueueItem): number {\n  return (item.priority || 0) + (item.viewPortPriority || 0);\n}\n\nconst debugCid = (cid: ParticleCid, prefix: string, ...args) => {\n  console.log(`>>> ${prefix}: ${cid}`, ...args);\n};\n\nconst strategies = {\n  external: new QueueStrategy(\n    {\n      db: { timeout: 5000, maxConcurrentExecutions: 999 },\n      node: { timeout: 60 * 1000, maxConcurrentExecutions: 30 },\n      gateway: { timeout: 10000, maxConcurrentExecutions: 11 },\n    },\n    ['db', 'node', 'gateway']\n  ),\n  embedded: new QueueStrategy(\n    {\n      db: { timeout: 5000, maxConcurrentExecutions: 999 },\n      node: { timeout: 60 * 1000, maxConcurrentExecutions: 30 },\n      gateway: { timeout: 21000, maxConcurrentExecutions: 11 },\n    },\n    ['db', 'gateway', 'node']\n  ),\n  helia: new QueueStrategy(\n    {\n      db: { timeout: 5000, maxConcurrentExecutions: 999 },\n      node: { timeout: 60 * 1000, maxConcurrentExecutions: 50 },\n      gateway: { timeout: 10000, maxConcurrentExecutions: 11 },\n    },\n    ['db', 'node', 'gateway']\n  ),\n};\n\ntype QueueMap = Map<ParticleCid, QueueItem>;\n\nclass QueueManager {\n  private queue$ = new BehaviorSubject<QueueMap>(new Map());\n\n  private node: CybIpfsNode | undefined = undefined;\n\n  private strategy: QueueStrategy;\n\n  private queueDebounceMs: number;\n\n  private lastNodeCallTime: number = Date.now();\n\n  private channel = new BroadcastChannelSender();\n\n  private executing: Record<QueueSource, Set<ParticleCid>> = {\n    db: new Set(),\n    node: new Set(),\n    gateway: new Set(),\n  };\n\n  private switchStrategy(strategy: QueueStrategy): void {\n    this.strategy = strategy;\n  }\n\n  public async setNode(node: CybIpfsNode, customStrategy?: QueueStrategy) {\n    console.log(\n      `* switch node from ${this.node?.nodeType || '<none>'} to ${\n        node.nodeType\n      }`\n    );\n    this.node = node;\n    this.switchStrategy(customStrategy || strategies[node.nodeType]);\n  }\n\n  private getItemBySourceAndPriority(queue: QueueMap) {\n    const pendingItems = [...queue.values()].filter(\n      (i) => i.status === 'pending'\n    );\n\n    const pendingBySource = R.groupBy((i) => i.source, pendingItems);\n\n    const itemsToExecute: QueueItem[] = [];\n    // eslint-disable-next-line no-loop-func, no-restricted-syntax\n    for (const [queueSource, items] of Object.entries(pendingBySource)) {\n      const settings = this.strategy.settings[queueSource as IpfsContentSource];\n\n      const executeCount =\n        settings.maxConcurrentExecutions -\n        this.executing[queueSource as IpfsContentSource].size;\n      const itemsByPriority = items\n        .sort(\n          (a, b) => getQueueItemTotalPriority(b) - getQueueItemTotalPriority(a)\n        )\n        .slice(0, executeCount);\n\n      itemsToExecute.push(...itemsByPriority);\n    }\n\n    return itemsToExecute;\n  }\n\n  private postSummary() {\n    const summary = `(total: ${this.queue$.value.size} |  db - ${this.executing.db.size} node - ${this.executing.node.size} gateway - ${this.executing.gateway.size})`;\n    this.channel.postServiceStatus('ipfs', 'started', summary);\n  }\n\n  private fetchData$(item: QueueItem) {\n    const { cid, source, callbacks, controller } = item;\n    // const abortController = controller || new AbortController();\n    const settings = this.strategy.settings[source];\n    this.executing[source].add(cid);\n    this.postSummary();\n    const queueItem = this.queue$.value.get(cid);\n    // Mutate item without next\n    this.queue$.value.set(cid, {\n      ...queueItem,\n      status: 'executing',\n      executionTime: Date.now(),\n      controller: new AbortController(),\n    } as QueueItem);\n    // debugCid(cid, 'fetchData', cid, source);\n    callbacks.map((callback) => callback(cid, 'executing', source));\n\n    return promiseToObservable(async () => {\n      return fetchIpfsContent(cid, source, {\n        controller,\n        node: this.node,\n        headers: {\n          [CustomHeaders.XCybSource]: XCybSourceValues.sharedWorker,\n        },\n      }).then((content) => {\n        // put saveto db msg into bus\n        if (content && source !== 'db') {\n          enqueueParticleSave(content);\n        }\n\n        return content;\n      });\n    }).pipe(\n      timeout({\n        each: settings.timeout,\n        with: () =>\n          throwError(() => {\n            controller?.abort('timeout');\n\n            return new QueueItemTimeoutError(settings.timeout);\n          }),\n      }),\n      map((result): QueueItemResult => {\n        return {\n          item,\n          status: result ? 'completed' : 'error',\n          source,\n          result,\n        };\n      }),\n      catchError((error): Observable<QueueItemResult> => {\n        // debugCid(cid, 'fetchData - fetchIpfsContent catchErr', error);\n        if (error instanceof QueueItemTimeoutError) {\n          return of({\n            item,\n            status: 'timeout',\n            source,\n          });\n        }\n\n        if (error?.name === 'AbortError') {\n          return of({ item, status: 'cancelled', source });\n        }\n        return of({ item, status: 'error', source });\n      })\n    );\n  }\n\n  /**\n   * Mutate queue item, and return new queue\n   * @param cid\n   * @param changes\n   * @returns\n   */\n  private mutateQueueItem(cid: string, changes: Partial<QueueItem>) {\n    const queue = this.queue$.value;\n    const item = queue.get(cid);\n    if (item) {\n      queue.set(cid, { ...item, ...changes });\n    }\n\n    return this.queue$.next(queue);\n  }\n\n  private removeAndNext(cid: string): void {\n    const queue = this.queue$.value;\n    queue.delete(cid);\n    this.queue$.next(queue);\n  }\n\n  // reset status and switch to next source\n  private switchSourceAndNext(item: QueueItem, nextSource: QueueSource): void {\n    item.callbacks.map((callback) => callback(item.cid, 'pending', nextSource));\n\n    this.mutateQueueItem(item.cid, { status: 'pending', source: nextSource });\n  }\n\n  private cancelDeprioritizedItems(queue: QueueMap): QueueMap {\n    (['node', 'gateway'] as IpfsContentSource[]).forEach((source) => {\n      Array.from(this.executing[source]).forEach((cid) => {\n        const item = queue.get(cid);\n        if (item && getQueueItemTotalPriority(item) < 0 && item.controller) {\n          // abort request and move to pending\n          item.controller.abort('cancelled');\n          item.callbacks.map((callback) =>\n            callback(item.cid, 'pending', item.source)\n          );\n\n          queue.set(cid, { ...item, status: 'pending' });\n          // console.log('-----cancel item', item, queue);\n\n          this.executing[source].delete(cid);\n        }\n      });\n    });\n\n    return queue;\n  }\n\n  private releaseExecution(cid: string) {\n    // eslint-disable-next-line no-restricted-syntax\n    Object.keys(this.executing).forEach((key) =>\n      this.executing[key as IpfsContentSource].delete(cid)\n    );\n  }\n\n  constructor(\n    ipfsInstance$: Observable<CybIpfsNode | undefined>,\n    {\n      strategy,\n      queueDebounceMs,\n    }: {\n      strategy?: QueueStrategy;\n      queueDebounceMs?: number;\n    }\n  ) {\n    ipfsInstance$.subscribe((node) => {\n      if (node) {\n        this.setNode(node);\n      }\n    });\n\n    this.strategy = strategy || strategies.embedded;\n    this.queueDebounceMs = queueDebounceMs || QUEUE_DEBOUNCE_MS;\n\n    // Little hack to handle keep-alive connection to swarm cyber node\n    // Fix some lag with node peers(when it shown swarm node in peers but not  connected anymore)\n    interval(CONNECTION_KEEPER_RETRY_MS)\n      .pipe(\n        filter(\n          () =>\n            !!this.node &&\n            !![...this.queue$.value.values()].find((i) => i.source === 'node')\n        )\n      )\n      .subscribe(() => {\n        // console.log(\n        //   '-----reconnect cnt',\n        //   this.queue$.value.size,\n        //   this.queue$.value\n        // );\n        this.node!.reconnectToSwarm(true);\n      });\n\n    const isInitialized$ = combineLatest([ipfsInstance$]).pipe(\n      map(([ipfsInstance]) => !!ipfsInstance && ipfsInstance?.isStarted),\n      distinctUntilChanged(),\n      share()\n    );\n\n    isInitialized$.subscribe((isInitialized) => {\n      isInitialized && console.log('🚦 ipfs queue initialized');\n      this.node?.reconnectToSwarm(true);\n    });\n\n    this.queue$\n      .pipe(\n        withLatestFrom(isInitialized$),\n        filter(([, isInitialized]) => isInitialized),\n        debounceTime(this.queueDebounceMs),\n        map(([queue]) => this.cancelDeprioritizedItems(queue)),\n        mergeMap((queue) => {\n          const workItems = this.getItemBySourceAndPriority(queue);\n          // console.log('---workItems', workItems);\n          if (workItems.length > 0) {\n            // wake up connnection to swarm cyber node\n            this.node?.reconnectToSwarm(false);\n\n            return merge(...workItems.map((item) => this.fetchData$(item)));\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe(({ item, status, source, result }) => {\n        const { cid } = item;\n        const callbacks = this.queue$.value.get(cid)?.callbacks || [];\n        // fix to process dublicated items\n        // debugCid(cid, 'subscribe', cid, source, status, result, callbacks);\n\n        callbacks.map((callback) => callback(cid, status, source, result));\n\n        // HACK to use with GracePeriod for reconnection\n        if (source === 'node') {\n          this.lastNodeCallTime = Date.now();\n        }\n\n        this.executing[source].delete(cid);\n\n        // success execution -> next\n        if (status === 'completed' || status === 'cancelled') {\n          // debugCid(cid, '------done', item, status, source, result);\n          this.removeAndNext(cid);\n        } else {\n          // debugCid(cid, '------error', item, status, source, result);\n\n          // Retry -> (next sources) or -> next\n          const nextSource = this.strategy.getNextSource(source);\n\n          if (nextSource) {\n            this.switchSourceAndNext(item, nextSource);\n          } else {\n            this.removeAndNext(cid);\n            // notify thatn nothing found from all sources\n            callbacks.map((callback) =>\n              callback(cid, 'not_found', source, result)\n            );\n          }\n        }\n\n        this.postSummary();\n      });\n  }\n\n  public enqueue(\n    cid: string,\n    callback: QueueItemCallback,\n    options: QueueItemOptions = {}\n  ): void {\n    const queue = this.queue$.value;\n    const existingItem = queue.get(cid);\n    // debugCid(cid, '----/--enqueue ', cid, existingItem);\n\n    // In case if item already in queue,\n    // just attach one more callback to quieued item\n    if (existingItem) {\n      this.mutateQueueItem(cid, {\n        callbacks: [...existingItem.callbacks, callback],\n      });\n    } else {\n      const source = options.initialSource || this.strategy.order[0];\n      const item: QueueItem = {\n        cid,\n        callbacks: [callback],\n        source, // initial method to fetch\n        status: 'pending',\n        postProcessing: true, // by default rune-post-processing enabled\n        ...options,\n      };\n\n      callback(cid, 'pending', source);\n\n      queue.set(cid, item);\n      this.queue$.next(queue);\n    }\n  }\n\n  public enqueueAndWait(\n    cid: string,\n    options: QueueItemOptions = {}\n  ): Promise<QueueItemAsyncResult> {\n    return new Promise((resolve) => {\n      const callback = ((cid, status, source, result) => {\n        if (status === 'completed' || status === 'not_found') {\n          resolve({ status, source, result });\n        }\n      }) as QueueItemCallback;\n\n      this.enqueue(cid, callback, options);\n    });\n  }\n\n  public updateViewPortPriority(cid: string, viewPortPriority: number) {\n    this.mutateQueueItem(cid, { viewPortPriority });\n  }\n\n  public cancel(cid: string): void {\n    const queue = this.queue$.value;\n    const item = queue.get(cid);\n    // console.log('-----cancel item', item, item?.controller);\n    if (item) {\n      // If item has no abortController we can just remove it,\n      // otherwise abort&keep-to-finalize\n      if (!item.controller) {\n        this.removeAndNext(cid);\n      } else {\n        item.controller.abort('cancelled');\n      }\n    }\n  }\n\n  public cancelByParent(parent: string): void {\n    const queue = this.queue$.value;\n\n    queue.forEach((item, cid) => {\n      if (item.parent === parent) {\n        this.releaseExecution(cid);\n        item.controller?.abort('cancelled');\n        queue.delete(cid);\n      }\n    });\n\n    this.queue$.next(queue);\n  }\n\n  public clear(): void {\n    const queue = this.queue$.value;\n\n    queue.forEach((item, cid) => {\n      this.releaseExecution(cid);\n      item.controller?.abort('cancelled');\n      queue.delete(cid);\n    });\n\n    this.queue$.next(new Map());\n  }\n\n  public getQueueMap(): QueueMap {\n    return this.queue$.value;\n  }\n\n  public getQueueList(): QueueItem[] {\n    return Array.from(this.queue$.value.values());\n  }\n\n  public getStats(): QueueStats[] {\n    const fn = R.pipe(\n      R.countBy<QueueItem>(R.prop('status')),\n      R.toPairs,\n      R.map(R.zipObj(['status', 'count']))\n    );\n\n    return fn(this.getQueueList()) as QueueStats[];\n  }\n}\n\nexport default QueueManager;\n","import { Observable } from 'rxjs';\n\n/**\n * Convert promise to observable\n * @param promiseFactory\n * @returns\n */\nexport function promiseToObservable<T>(promiseFactory: () => Promise<T>) {\n  return new Observable<T>((observer) => {\n    promiseFactory()\n      .then((response) => {\n        observer.next(response);\n        observer.complete();\n      })\n      .catch((error) => {\n        console.debug('----promiseToObservable error', error); //, error\n        observer.error(error);\n      });\n  });\n}\n","import { CID } from 'multiformats/cid';\n\nexport const stringToCid = (s: string) => CID.parse(s);\nexport const stringToIpfsPath = (s: string) => `/ipfs/${s}`;\n","import { IPFSHTTPClient, create as createKuboClient } from 'kubo-rpc-client';\nimport { multiaddr } from '@multiformats/multiaddr';\n\nimport { stringToCid, stringToIpfsPath } from '../../utils/cid';\nimport {\n  AbortOptions,\n  CatOptions,\n  IpfsNodeType,\n  InitOptions,\n  IpfsFileStats,\n  IpfsNode,\n  IpfsNodePrperties,\n} from '../../types';\nimport { CYBER_GATEWAY_URL } from '../../config';\n\nclass KuboNode implements IpfsNode {\n  readonly nodeType: IpfsNodeType = 'external';\n\n  private node?: IPFSHTTPClient;\n\n  private _config: IpfsNodePrperties = {};\n\n  get config() {\n    return this._config;\n  }\n\n  private _isStarted: boolean = false;\n\n  get isStarted() {\n    return this._isStarted;\n  }\n\n  private async initConfig() {\n    const response = await this.node!.config.get('Addresses.Gateway');\n    if (!response) {\n      return { gatewayUrl: CYBER_GATEWAY_URL };\n    }\n    const address = multiaddr(response as string).nodeAddress();\n\n    return { gatewayUrl: `http://${address.address}:${address.port}` };\n  }\n\n  async init(options?: InitOptions) {\n    this.node = createKuboClient(options);\n    this._config = await this.initConfig();\n\n    if (typeof window !== 'undefined') {\n      window.node = this.node;\n      window.toCid = stringToCid;\n    }\n    console.log(\n      'IPFS - Kubo addrs',\n      (await this.node.swarm.localAddrs()).map((a) => a.toString())\n    );\n    this._isStarted = true;\n  }\n\n  async stat(cid: string, options: AbortOptions = {}): Promise<IpfsFileStats> {\n    return this.node!.files.stat(stringToIpfsPath(cid), {\n      ...options,\n      withLocal: true,\n      size: true,\n    }).then((result) => {\n      const { type, size, sizeLocal, local, blocks } = result;\n      return {\n        type,\n        size: size || -1,\n        sizeLocal: sizeLocal || -1,\n        blocks,\n      };\n    });\n  }\n\n  cat(cid: string, options: CatOptions = {}) {\n    return this.node!.cat(stringToCid(cid), options);\n  }\n\n  async add(content: File | string, options: AbortOptions = {}) {\n    return (await this.node!.add(content, options)).cid.toString();\n  }\n\n  async pin(cid: string, options: AbortOptions = {}) {\n    return (await this.node!.pin.add(stringToCid(cid), options)).toString();\n  }\n\n  async getPeers() {\n    return (await this.node!.swarm.peers()).map((c) => c.peer.toString());\n  }\n\n  async stop() {}\n  async start() {}\n\n  async connectPeer(address: string) {\n    const addr = multiaddr(address);\n    await this.node!.bootstrap.add(addr);\n\n    await this.node!.swarm.connect(addr);\n    return true;\n  }\n\n  ls() {\n    return this.node!.pin.ls();\n  }\n\n  async info() {\n    const { repoSize } = await this.node!.stats.repo();\n\n    const responseId = await this.node!.id();\n    const { agentVersion, id } = responseId;\n    return { id: id.toString(), agentVersion, repoSize };\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport default KuboNode;\n","import { Helia, Pin, createHelia } from 'helia';\nimport { IDBBlockstore } from 'blockstore-idb';\nimport { IDBDatastore } from 'datastore-idb';\nimport { Libp2p, createLibp2p } from 'libp2p';\nimport { noise } from '@chainsafe/libp2p-noise';\nimport { yamux } from '@chainsafe/libp2p-yamux';\n// import { mplex } from '@libp2p/mplex';\n\nimport { circuitRelayTransport } from 'libp2p/circuit-relay';\nimport { UnixFS, unixfs, AddOptions } from '@helia/unixfs';\nimport { bootstrap } from '@libp2p/bootstrap';\nimport { webRTC, webRTCDirect } from '@libp2p/webrtc';\nimport { webSockets } from '@libp2p/websockets';\nimport { webTransport } from '@libp2p/webtransport';\nimport { identifyService } from 'libp2p/identify';\nimport { multiaddr, protocols } from '@multiformats/multiaddr';\nimport { LsResult } from 'ipfs-core-types/src/pin';\n\nimport {\n  AbortOptions,\n  CatOptions,\n  IpfsNodeType,\n  IpfsFileStats,\n  IpfsNode,\n} from '../../types';\n// import { all } from '@libp2p/websockets/filters';\nimport { stringToCid } from '../../utils/cid';\nimport { CYBER_GATEWAY_URL } from '../../config';\n\nasync function* mapToLsResult(\n  iterable: AsyncIterable<Pin>\n): AsyncIterable<LsResult> {\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const item of iterable) {\n    const { cid, metadata } = item;\n    yield { cid: cid.toV0(), metadata, type: 'recursive' };\n  }\n}\n\nconst libp2pFactory = async (\n  datastore: IDBDatastore,\n  bootstrapList: string[] = []\n) => {\n  const libp2p = await createLibp2p({\n    datastore,\n    // addresses: {\n    //   listen: [\n    //     '/ip4/127.0.0.1/tcp/0',\n    //     '/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n    //   ],\n    // },\n    transports: [\n      webSockets(),\n      webTransport(),\n      webRTC({\n        rtcConfiguration: {\n          iceServers: [\n            {\n              urls: [\n                'stun:stun.l.google.com:19302',\n                'stun:global.stun.twilio.com:3478',\n                'STUN:freestun.net:3479',\n                'STUN:stun.bernardoprovenzano.net:3478',\n                'STUN:stun.aa.net.uk:3478',\n              ],\n            },\n            {\n              credential: 'free',\n              username: 'free',\n              urls: ['TURN:freestun.net:3479', 'TURNS:freestun.net:5350'],\n            },\n          ],\n        },\n      }),\n      webRTCDirect(),\n      circuitRelayTransport({\n        discoverRelays: 1,\n      }),\n    ],\n    connectionEncryption: [noise()],\n    streamMuxers: [yamux()],\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n        // by default we refuse to dial local addresses from the browser since they\n        // are usually sent by remote peers broadcasting undialable multiaddrs but\n        // here we are explicitly connecting to a local node so do not deny dialing\n        // any discovered address\n      },\n    },\n    peerDiscovery: [\n      bootstrap({\n        list: bootstrapList,\n      }),\n    ],\n    services: {\n      identify: identifyService(),\n    },\n  });\n  return libp2p;\n};\n\nconst addOptionsV0: Partial<AddOptions> = {\n  cidVersion: 0,\n  rawLeaves: false,\n};\n\nclass HeliaNode implements IpfsNode {\n  readonly nodeType: IpfsNodeType = 'helia';\n\n  get config() {\n    return { gatewayUrl: CYBER_GATEWAY_URL };\n  }\n\n  private _isStarted = false;\n\n  get isStarted() {\n    return this._isStarted;\n  }\n\n  private node?: Helia;\n\n  private fs?: UnixFS;\n\n  async init() {\n    const blockstore = new IDBBlockstore('helia-bs');\n    await blockstore.open();\n\n    const datastore = new IDBDatastore('helia-ds');\n    await datastore.open();\n\n    const bootstrapList = [\n      '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n      '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n      '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n      '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n      '/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n    ];\n    const libp2p = await libp2pFactory(datastore, bootstrapList);\n\n    this.node = await createHelia({ blockstore, datastore, libp2p });\n\n    this.fs = unixfs(this.node);\n\n    if (typeof window !== 'undefined') {\n      window.libp2p = libp2p;\n      window.node = this.node;\n      window.fs = this.fs;\n      window.toCid = stringToCid;\n    }\n\n    // DEBUG\n    libp2p.addEventListener('peer:connect', (evt) => {\n      const peerId = evt.detail.toString();\n      const conn = libp2p.getConnections(peerId) || [];\n      const transportsByAddr = Object.fromEntries(\n        conn.map((c) => [\n          c.remoteAddr.toString(),\n          c.remoteAddr.protoCodes().map((v) => protocols(v)?.name),\n        ])\n      );\n      console.debug(`Connected to ${peerId}`, transportsByAddr);\n\n      // console.log(\n      //   '---------ppppp',\n      //   peerId,\n      //   conn,\n      //   conn?.remoteAddr.protoCodes().map((v) => protocols(v)?.name)\n      // ); //.includes(WEBRTC_CODE)\n      // if (conn && conn.stat) {\n      //   const transport = conn.stat.transport; // This might vary based on libp2p version\n      //   console.log(`Connected to ${peerId} using transport ${transport}`);\n      // } else {\n      //   console.log(`Connected to ${peerId}`);\n      // }\n    });\n    libp2p.addEventListener('peer:disconnect', (evt) => {\n      console.debug(`Disconnected from ${evt.detail.toString()}`);\n    });\n    console.log(\n      'IPFS - Helia addrs',\n      libp2p.getMultiaddrs().map((a) => a.toString())\n    );\n    // const webrtcConn = await libp2p.dial(\n    //   multiaddr(\n    //     '/ip4/127.0.0.1/udp/4001/quic-v1/webtransport/certhash/uEiDHumbyZRFV1Av7qH9-2l5HGgU2a2UqM6eloqO0vYz5pQ/certhash/uEiDD_TuVgih5_ua31Z4MVbNq7WSw095UAQmZqdUFMDTVRA/p2p/12D3KooWEYGfgK4dEY3spfuDKVq6Jpiyj4KxP1r6HS5RFp5WHebz'\n    //   )\n    // );\n    // console.log('----webrtcConn', webrtcConn);\n\n    this._isStarted = true;\n  }\n\n  async stat(cid: string, options: AbortOptions = {}): Promise<IpfsFileStats> {\n    return this.fs!.stat(stringToCid(cid), options).then((result) => {\n      const { type, fileSize, localFileSize, blocks, dagSize, mtime } = result;\n      return {\n        type,\n        size: fileSize || -1,\n        sizeLocal: localFileSize || -1,\n        blocks,\n      };\n    });\n  }\n\n  cat(cid: string, options: CatOptions = {}) {\n    return this.fs!.cat(stringToCid(cid), options);\n  }\n\n  async add(content: File | string, options: AbortOptions = {}) {\n    // Options to keep CID in V0 format 'Qm....';\n    const optionsV0 = {\n      ...options,\n      ...addOptionsV0,\n    } as Partial<AddOptions>;\n\n    let cid;\n\n    if (content instanceof File) {\n      const fileName = content.name;\n      const arrayBuffer = await content.arrayBuffer();\n      const data = new Uint8Array(arrayBuffer);\n      cid = await this.fs!.addFile(\n        { path: fileName, content: data },\n        optionsV0\n      );\n    } else {\n      const data = new TextEncoder().encode(content);\n      cid = await this.fs!.addBytes(data, optionsV0);\n    }\n    // console.log('----added to helia', cid.toString());\n    this.pin(cid.toString(), options);\n    return cid.toString();\n  }\n\n  async pin(cid: string, options: AbortOptions = {}) {\n    const cid_ = stringToCid(cid);\n    const isPinned = await this.node?.pins.isPinned(cid_, options);\n    if (!isPinned) {\n      const pinResult = (\n        await this.node?.pins.add(cid_, options)\n      )?.cid.toString();\n      // console.log('------pin', pinResult);\n    }\n    // console.log('------pinned', cid, isPinned);\n    return undefined;\n  }\n\n  async getPeers() {\n    return this.node!.libp2p!.getConnections().map((c) =>\n      c.remotePeer.toString()\n    );\n  }\n\n  async stop() {\n    await this.node?.stop();\n  }\n\n  async start() {\n    await this.node?.start();\n  }\n\n  async connectPeer(address: string) {\n    const conn = await this.node!.libp2p!.dial(multiaddr(address));\n    return true;\n  }\n\n  ls() {\n    const result = mapToLsResult(this.node!.pins.ls());\n    return result;\n  }\n\n  async info() {\n    const id = this.node!.libp2p.peerId.toString();\n    const agentVersion = this.node!.libp2p!.services!.identify!.host!\n      .agentVersion as string;\n    return { id, agentVersion, repoSize: -1 };\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport default HeliaNode;\n","// eslint-disable-next-line import/no-unresolved\nimport { webSockets } from '@libp2p/websockets';\nimport * as filters from '@libp2p/websockets/filters';\nimport { Options } from 'ipfs-core/dist/src/types';\n\nconst configIpfs = (): Options => ({\n  start: true,\n  repo: 'ipfs-repo-cyber-v2',\n  relay: {\n    enabled: false,\n    hop: {\n      enabled: false,\n    },\n  },\n  preload: {\n    enabled: false,\n  },\n  config: {\n    API: {\n      HTTPHeaders: {\n        'Access-Control-Allow-Methods': ['PUT', 'POST'],\n        'Access-Control-Allow-Origin': [\n          'http://localhost:3000',\n          'http://127.0.0.1:5001',\n          'http://127.0.0.1:8888',\n          'http://localhost:8888',\n        ],\n      },\n    },\n    Addresses: {\n      Gateway: '/ip4/127.0.0.1/tcp/8080',\n      Swarm: [\n        // '/dns4/ws-star.discovery.cybernode.ai/tcp/443/wss/p2p-webrtc-star',\n        // '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n        // '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n      ],\n      Delegates: [\n        // '/dns4/node0.delegate.ipfs.io/tcp/443/https',\n        // '/dns4/node1.delegate.ipfs.io/tcp/443/https',\n        // '/dns4/node2.delegate.ipfs.io/tcp/443/https',\n      ],\n    },\n    Discovery: {\n      MDNS: {\n        Enabled: true,\n        Interval: 10,\n      },\n      webRTCStar: {\n        Enabled: false,\n      },\n    },\n    Bootstrap: [\n      // '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n      // '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n      // '/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',\n      // '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n      // '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n      // '/dns4/ws-star.discovery.cybernode.ai/tcp/4430/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n    ],\n    Pubsub: {\n      Enabled: false,\n    },\n    Swarm: {\n      ConnMgr: {\n        HighWater: 300,\n        LowWater: 50,\n      },\n      DisableNatPortMap: false,\n    },\n    Routing: {\n      Type: 'dhtclient',\n    },\n  },\n  libp2p: {\n    transports: [\n      // This is added for local demo!\n      // In a production environment the default filter should be used\n      // where only DNS + WSS addresses will be dialed by websockets in the browser.\n      webSockets({\n        filter: filters.dnsWss,\n      }),\n    ],\n    nat: {\n      enabled: false,\n    },\n  },\n  EXPERIMENTAL: {\n    ipnsPubsub: false,\n  },\n});\n\nexport default configIpfs;\n","import {\n  AbortOptions,\n  CatOptions,\n  IpfsNodeType,\n  IpfsFileStats,\n  IpfsNode,\n  IpfsNodePrperties,\n} from '../../types';\nimport { create as createJsIpfsClient, IPFS } from 'ipfs-core';\nimport { stringToCid, stringToIpfsPath } from '../../utils/cid';\nimport { multiaddr } from '@multiformats/multiaddr';\n\nimport configIpfs from './configs/jsIpfsConfig';\nimport { CYBER_GATEWAY_URL } from '../../config';\n\nclass JsIpfsNode implements IpfsNode {\n  readonly nodeType: IpfsNodeType = 'embedded';\n\n  get config() {\n    return { gatewayUrl: CYBER_GATEWAY_URL };\n  }\n\n  private _isStarted = false;\n\n  get isStarted() {\n    return this._isStarted;\n  }\n\n  private node?: IPFS;\n\n  async init() {\n    this.node = await createJsIpfsClient(configIpfs());\n    if (typeof window !== 'undefined') {\n      window.node = this.node;\n      window.toCid = stringToCid;\n    }\n\n    this._isStarted = true;\n  }\n\n  async stat(cid: string, options: AbortOptions = {}): Promise<IpfsFileStats> {\n    return this.node!.files.stat(stringToIpfsPath(cid), {\n      ...options,\n      withLocal: true,\n      size: true,\n    }).then((result) => {\n      const { type, size, sizeLocal, local, blocks } = result;\n      return {\n        type,\n        size: size || -1,\n        sizeLocal: sizeLocal || -1,\n        blocks,\n      };\n    });\n  }\n\n  cat(cid: string, options: CatOptions = {}) {\n    return this.node!.cat(stringToCid(cid), options);\n  }\n\n  async add(content: File | string, options: AbortOptions = {}) {\n    return (await this.node!.add(content, options)).cid.toString();\n  }\n\n  async pin(cid: string, options: AbortOptions = {}) {\n    return (await this.node!.pin.add(stringToCid(cid), options)).toString();\n  }\n\n  async getPeers() {\n    return (await this.node!.swarm.peers()).map((c) => c.peer.toString());\n  }\n\n  async stop() {}\n  async start() {}\n\n  async connectPeer(address: string) {\n    const addr = multiaddr(address);\n    await this.node!.bootstrap.add(addr);\n\n    await this.node!.swarm.connect(addr);\n    return true;\n  }\n\n  ls() {\n    return this.node!.pin.ls();\n  }\n\n  async info() {\n    const response = await this.node!.stats.repo();\n    const repoSize = Number(response.repoSize);\n\n    const responseId = await this.node!.id();\n    const { agentVersion, id } = responseId;\n    return { id: id.toString(), agentVersion, repoSize };\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport default JsIpfsNode;\n","// import { getNodeAutoDialInterval } from './utils-ipfs';\nimport { IpfsNodeType, IpfsNode, CybIpfsNode, IpfsOptsType } from '../types';\nimport KuboNode from './impl/kubo';\nimport HeliaNode from './impl/helia';\nimport JsIpfsNode from './impl/js-ipfs';\n// import EnhancedIpfsNode from './node/enhancedNode';\nimport {\n  CYBERNODE_SWARM_ADDR_TCP,\n  CYBERNODE_SWARM_ADDR_WSS,\n  CYBER_NODE_SWARM_PEER_ID,\n} from '../config';\nimport { withCybFeatures } from './mixins/withCybFeatures';\n\nconst nodeClassMap: Record<IpfsNodeType, new () => IpfsNode> = {\n  helia: HeliaNode,\n  embedded: JsIpfsNode,\n  external: KuboNode,\n};\n\n// eslint-disable-next-line import/no-unused-modules, import/prefer-default-export\nexport async function initIpfsNode(\n  options: IpfsOptsType\n): Promise<CybIpfsNode> {\n  const { ipfsNodeType, ...restOptions } = options;\n\n  const swarmPeerId = CYBER_NODE_SWARM_PEER_ID;\n\n  const swarmPeerAddress =\n    ipfsNodeType === 'external'\n      ? CYBERNODE_SWARM_ADDR_TCP\n      : CYBERNODE_SWARM_ADDR_WSS;\n\n  const EnhancedClass = withCybFeatures(nodeClassMap[ipfsNodeType], {\n    swarmPeerId,\n    swarmPeerAddress,\n  });\n\n  const instance = new EnhancedClass();\n\n  await instance.init({ url: restOptions.urlOpts });\n  // TODO: REFACT\n  //   instance.connMgrGracePeriod = await getNodeAutoDialInterval(instance);\n  // window.ipfs = instance;\n\n  await instance.reconnectToSwarm();\n  return instance;\n}\n","import { IpfsNode, CybIpfsNode, IpfsContentType } from '../../types';\nimport { parseArrayLikeToDetails } from '../../utils/content';\nimport { addContenToIpfs, getIPFSContent } from '../../utils/utils-ipfs';\n\ntype WithCybFeaturesOptions = {\n  swarmPeerId: string;\n  swarmPeerAddress: string;\n};\n\nfunction withCybFeatures<TBase extends new (...args: any[]) => IpfsNode>(\n  Base: TBase,\n  options: WithCybFeaturesOptions\n) {\n  return class CybIpfsNodeMixin extends Base implements CybIpfsNode {\n    async fetchWithDetails(\n      cid: string,\n      parseAs?: IpfsContentType,\n      abortController?: AbortController\n    ) {\n      const content = await getIPFSContent(cid, this, abortController);\n\n      const details = await parseArrayLikeToDetails(content, cid);\n      return !parseAs\n        ? details\n        : details?.type === parseAs\n        ? details\n        : undefined;\n    }\n\n    async addContent(content: File | string) {\n      return addContenToIpfs(this, content);\n    }\n\n    async isConnectedToSwarm() {\n      const peers = await super.getPeers();\n      return !!peers.find((peerId) => peerId === options.swarmPeerId);\n    }\n\n    async reconnectToSwarm(forced = false) {\n      const isConnectedToSwarm = await this.isConnectedToSwarm();\n      if (!isConnectedToSwarm || forced) {\n        // TODO: refactor using timeout for node config\n\n        //   const needToReconnect =\n        //     Date.now() - lastConnectedTimestamp <\n        //     DEFAULT_CONNECTION_LIFETIME_SECONDS;\n        super\n          .connectPeer(options.swarmPeerAddress)\n          .then(() => {\n            console.log(`🐝 connected to swarm - ${options.swarmPeerAddress}`);\n            return true;\n          })\n          .catch((err) => {\n            console.log(\n              `Can't connect to swarm ${options.swarmPeerAddress}: ${err.message}`\n            );\n            return false;\n          });\n      }\n    }\n  };\n}\n\nexport { withCybFeatures };\n","import {\n  PipelineType,\n  pipeline,\n  env,\n  FeatureExtractionPipeline,\n} from '@xenova/transformers';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport DbApiWrapper from 'src/services/backend/services/DbApi/DbApi';\nimport {\n  Subject,\n  combineLatest,\n  Observable,\n  shareReplay,\n  ReplaySubject,\n  filter,\n} from 'rxjs';\nimport { proxy } from 'comlink';\n\nenv.allowLocalModels = false;\n\ntype MlModelParams = {\n  name: PipelineType;\n  model: string;\n};\nconst mlModelMap: Record<string, MlModelParams> = {\n  featureExtractor: {\n    name: 'feature-extraction',\n    model: 'Xenova/all-MiniLM-L6-v2',\n  },\n  // summarization: {\n  //   name: 'summarization',\n  //   model: 'ahmedaeb/distilbart-cnn-6-6-optimised',\n  // },\n  // qa: {\n  //   name: 'question-answering',\n  //   model: 'Xenova/distilbert-base-uncased-distilled-squad',\n  // },\n};\n\nconst loadPipeline = (\n  name: PipelineType,\n  model: string,\n  onProgress: (data: any) => void\n) => {\n  return pipeline(name, model, {\n    progress_callback: (progressData: any) => {\n      try {\n        const {\n          status,\n          progress,\n          // name: modelName,\n          loaded,\n          total,\n        } = progressData;\n\n        const message = loaded ? `${model} - ${loaded}/${total} bytes` : model;\n\n        const done = ['ready', 'error'].some((s) => s === status);\n\n        const progrssStateItem = {\n          status,\n          message,\n          done,\n          progress: progress ? Math.round(progress) : 0,\n        };\n        // console.log('progress_callback', name, progressData);\n\n        onProgress(progrssStateItem);\n      } catch (e) {\n        console.log('-------progresss error', model, e.toString());\n      }\n    },\n  });\n};\n\nexport type EmbeddingApi = {\n  createEmbedding: (text: string) => Promise<number[]>;\n  searchByEmbedding: (\n    text: string,\n    count?: number\n  ) => ReturnType<DbApiWrapper['searchByEmbedding']>;\n};\n\nconst createEmbeddingApi$ = (\n  dbInstance$: Subject<DbApiWrapper>,\n  featureExtractor$: Subject<FeatureExtractionPipeline>\n) => {\n  const replaySubject = new ReplaySubject(1);\n\n  combineLatest([dbInstance$, featureExtractor$]).subscribe(\n    ([dbInstance, featureExtractor]) => {\n      if (dbInstance && featureExtractor) {\n        const createEmbedding = async (text: string) => {\n          const output = await featureExtractor(text, {\n            pooling: 'mean',\n            normalize: true,\n          });\n\n          return output.data as number[];\n        };\n\n        const searchByEmbedding = async (text: string, count?: number) => {\n          const vec = await createEmbedding(text);\n          // console.log('----searchByEmbedding', vec);\n\n          const rows = await dbInstance.searchByEmbedding(vec, count);\n          //   console.log('----searcByEmbedding rows', rows);\n\n          return rows;\n        };\n\n        const api = {\n          createEmbedding,\n          searchByEmbedding,\n        };\n        replaySubject.next(proxy(api));\n      }\n    }\n  );\n  // .pipe(filter((v) => !!v))\n  return replaySubject as Observable<EmbeddingApi>;\n};\n\n// eslint-disable-next-line import/no-unused-modules, import/prefer-default-export\nexport const createMlApi = (\n  dbInstance$: Subject<DbApiWrapper>,\n  broadcastApi: BroadcastChannelSender\n) => {\n  const featureExtractor$ = new Subject<FeatureExtractionPipeline>();\n  const embeddingApi$ = createEmbeddingApi$(dbInstance$, featureExtractor$);\n\n  const initPipelineInstance = async (alias: keyof typeof mlModelMap) => {\n    const { name, model } = mlModelMap[alias];\n\n    const pipeline = await loadPipeline(name, model, (data) =>\n      broadcastApi.postMlSyncEntryProgress(alias, data)\n    );\n    if (name === 'feature-extraction') {\n      featureExtractor$.next(pipeline as FeatureExtractionPipeline);\n    }\n    console.log(`${alias} - loaded`);\n  };\n\n  const init = async () => {\n    broadcastApi.postServiceStatus('ml', 'starting');\n    console.time('🔋 ml initialized');\n\n    return Promise.all([\n      initPipelineInstance('featureExtractor'),\n      // initMlInstance('summarization'),\n      // initMlInstance('qa'),\n    ])\n      .then((result) => {\n        setTimeout(() => broadcastApi.postServiceStatus('ml', 'started'), 0);\n        console.timeEnd('🔋 ml initialized');\n\n        return result;\n      })\n      .catch((e) =>\n        broadcastApi.postServiceStatus('ml', 'error', e.toString())\n      );\n  };\n\n  init();\n\n  return { embeddingApi$, init };\n};\n","import initAsync, { compile } from 'cyb-rune-wasm';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { TabularKeyValues } from 'src/types/data';\nimport { keyValuesToObject } from 'src/utils/localStorage';\nimport { entityToDto } from 'src/utils/dto';\n\nimport { mapObjIndexed } from 'ramda';\nimport { removeBrokenUnicode } from 'src/utils/string';\n\nimport {\n  BehaviorSubject,\n  ReplaySubject,\n  combineLatest,\n  distinctUntilChanged,\n  map,\n} from 'rxjs';\n\nimport defaultParticleScript from 'src/services/scripting/rune/default/particle.rn';\nimport runtimeScript from 'src/services/scripting/rune/runtime.rn';\n\nimport {\n  ScriptCallback,\n  ScriptParticleParams,\n  ScriptContext,\n  ScriptParticleResult,\n  // ScriptMyParticleParams,\n  ScriptEntrypoints,\n  EntrypointParams,\n  EngineContext,\n  ScriptMyCampanion,\n} from './types';\n\nimport { extractRuneScript } from './helpers';\n\ntype RuneEntrypoint = {\n  readOnly: boolean;\n  execute: boolean;\n  funcName: string;\n  funcParams: any[];\n  params: Object; // context data\n  input: string; // main code\n  script: string; // runtime code\n};\n\ntype RuneRunResult = {\n  output: string;\n  diagnosticsOutput: string;\n  diagnostics: any[];\n  error: string;\n  result: any;\n};\n\nconst compileConfig = {\n  budget: 1_000_000,\n  experimental: false,\n  instructions: false,\n  options: [],\n};\n\nconst defaultRuneEntrypoint: RuneEntrypoint = {\n  readOnly: false,\n  execute: true,\n  funcName: 'main',\n  funcParams: {},\n  params: {},\n  input: defaultParticleScript,\n  script: runtimeScript,\n};\n\nconst toRecord = (item: TabularKeyValues) =>\n  keyValuesToObject(Object.values(item));\n\nexport type LoadParams = {\n  entrypoints: ScriptEntrypoints;\n  secrets: TabularKeyValues;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nfunction enigine() {\n  let entrypoints: Partial<ScriptEntrypoints> = {};\n  let context: EngineContext = { params: {}, user: {}, secrets: {} };\n  const isInitialized$ = new BehaviorSubject<boolean>(false);\n  const entrypoints$ = new BehaviorSubject<Partial<ScriptEntrypoints>>({});\n\n  const scriptCallbacks = new Map<string, ScriptCallback>();\n\n  const isSoulInitialized$ = new ReplaySubject(1);\n  combineLatest([isInitialized$, entrypoints$])\n    .pipe(\n      map(\n        ([isInitialized, entrypoints]) =>\n          !!(isInitialized && entrypoints.particle)\n      ),\n      distinctUntilChanged()\n    )\n    .subscribe((v) => {\n      isSoulInitialized$.next(v);\n    });\n\n  entrypoints$.subscribe((v) => {\n    entrypoints = v;\n  });\n\n  const init = async () => {\n    console.time('🔋 rune initialized');\n    await initAsync();\n    // window.rune = rune; // debug\n    console.timeEnd('🔋 rune initialized');\n    isInitialized$.next(true);\n  };\n\n  const pushContext = <K extends keyof ScriptContext>(\n    name: K,\n    value: ScriptContext[K] //| TabularKeyValues\n  ) => {\n    // context[name] =  toRecord(value as TabularKeyValues);\n    context[name] = value;\n  };\n\n  const popContext = (names: (keyof ScriptContext)[]) => {\n    const newContext = context;\n    names.forEach((name) => {\n      newContext[name] = {};\n    });\n    context = newContext;\n  };\n\n  const setEntrypoints = (scriptEntrypoints: ScriptEntrypoints) => {\n    entrypoints = mapObjIndexed(\n      (v) => ({ ...v, script: extractRuneScript(v.script) }),\n      scriptEntrypoints\n    );\n    entrypoints$.next(entrypoints);\n  };\n\n  const run = async (\n    script: string,\n    compileParams: Partial<RuneEntrypoint>,\n    callback?: ScriptCallback,\n    scripts: Record<string, string> = {}\n  ) => {\n    const refId = uuidv4().toString();\n\n    callback && scriptCallbacks.set(refId, callback);\n    const scriptParams = {\n      app: context,\n      refId,\n    };\n    const compilerParams = {\n      ...defaultRuneEntrypoint,\n      ...compileParams,\n      input: script,\n      scripts: { ...scripts, runtime: runtimeScript },\n      params: scriptParams,\n    };\n    // console.log('-----run', scriptParams);\n    const outputData = await compile(compilerParams, compileConfig);\n\n    // Parse the JSON string\n    const { result, error } = outputData;\n\n    try {\n      scriptCallbacks.delete(refId);\n\n      return {\n        ...entityToDto(outputData),\n        error,\n        result: result\n          ? result === '()'\n            ? ''\n            : JSON.parse(removeBrokenUnicode(result))\n          : { action: 'error', message: 'No result' },\n      } as RuneRunResult;\n    } catch (e) {\n      scriptCallbacks.delete(refId);\n\n      console.log(\n        `engine.run err ${compilerParams.funcName}`,\n        e,\n        outputData,\n        compilerParams\n      );\n      return {\n        diagnosticsOutput: `scripting engine error ${e}`,\n        ...outputData,\n        result: { action: 'error', message: e?.toString() || 'Unknown error' },\n      } as RuneRunResult;\n    }\n  };\n\n  const getParticleScriptOrAction = ():\n    | ['error' | 'pass' | 'script', string] => {\n    if (!entrypoints.particle) {\n      return ['error', ''];\n    }\n\n    const { script, enabled } = entrypoints.particle;\n\n    if (!enabled) {\n      return ['pass', ''];\n    }\n\n    return ['script', script];\n  };\n\n  const personalProcessor = async (\n    params: ScriptParticleParams\n  ): Promise<ScriptParticleResult> => {\n    const [resultType, script] = getParticleScriptOrAction();\n\n    if (resultType === 'error') {\n      return { action: 'error', message: 'No particle entrypoint' };\n    }\n\n    if (resultType !== 'script') {\n      return { action: 'pass' };\n    }\n\n    const { cid, contentType, content } = params;\n    const output = await run(script, {\n      funcName: 'personal_processor',\n      funcParams: [cid, contentType, content], //params as EntrypointParams,\n    });\n    const { action, content: outputContent } = output.result;\n\n    if (action === 'error') {\n      console.error(\n        `RUNE: personalProcessor error: ${params.cid}`,\n        params,\n        output\n      );\n    }\n\n    if (outputContent) {\n      return { ...output.result, content: outputContent };\n    }\n\n    return output.result;\n  };\n\n  const executeFunction = async (\n    script: string,\n    funcName: string,\n    funcParams: EntrypointParams\n  ): Promise<ScriptParticleResult> => {\n    console.log('-----executeFunction rune', funcName, funcParams);\n    const output = await run(script, {\n      funcName,\n      funcParams,\n      readOnly: true, // block to sign tx and add to ipfs\n    });\n\n    return output.result;\n  };\n\n  // const particleInference = async (\n  //   userScript: string,\n  //   funcParams: EntrypointParams\n  // ): Promise<ScriptMyParticleResult> => {\n  //   const output = await run(userScript, {\n  //     funcName: 'particle_inference',\n  //     funcParams,\n  //   });\n\n  //   return output.result;\n  // };\n\n  const askCompanion = async (\n    cid: string,\n    contentType: string,\n    content: string,\n    callback?: ScriptCallback\n  ): Promise<ScriptMyCampanion> => {\n    const [resultType, script] = getParticleScriptOrAction();\n    if (resultType === 'error') {\n      return {\n        action: 'error',\n        metaItems: [[{ type: 'text', text: 'No particle entrypoint' }]],\n      };\n    }\n\n    if (resultType === 'pass') {\n      return { action: 'pass', metaItems: [] };\n    }\n\n    const output = await run(\n      script,\n      {\n        funcName: 'ask_companion',\n        funcParams: [cid, contentType, content],\n      },\n      callback\n    );\n\n    if (output.result.action === 'error') {\n      console.error('---askCompanion error', output);\n      return {\n        action: 'error',\n        metaItems: [[{ type: 'text', text: output.error }]],\n      };\n    }\n\n    return { action: 'answer', metaItems: output.result.content };\n  };\n\n  const executeCallback = async (refId: string, data: any) => {\n    const callback = scriptCallbacks.get(refId);\n\n    if (callback) {\n      await callback(data);\n    }\n  };\n\n  return {\n    init,\n    isSoulInitialized$,\n    run,\n    // particleInference,\n    askCompanion,\n    personalProcessor,\n    setEntrypoints,\n    pushContext,\n    popContext,\n    executeFunction,\n    executeCallback,\n    getDebug: () => ({\n      context,\n      entrypoints,\n    }),\n  };\n}\n\nconst scriptEngine = enigine();\n\nexport type RuneEngine = typeof scriptEngine;\n\nexport default scriptEngine;\n","import { Observable } from 'rxjs';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport rune from 'src/services/scripting/engine';\nimport runeDeps, { RuneInnerDeps } from 'src/services/scripting/runeDeps';\nimport DbApiWrapper from 'src/services/backend/services/DbApi/DbApi';\nimport { EmbeddingApi } from './mlApi';\n\n// eslint-disable-next-line import/no-unused-modules, import/prefer-default-export\nexport const createRuneApi = (\n  embeddingApi$: Observable<EmbeddingApi>,\n  dbInstance$: Observable<DbApiWrapper>,\n  broadcastApi: BroadcastChannelSender\n) => {\n  const setInnerDeps = (deps: Partial<RuneInnerDeps>) =>\n    runeDeps.setInnerDeps(deps);\n\n  embeddingApi$.subscribe((embeddingApi) => {\n    setInnerDeps({ embeddingApi });\n  });\n\n  dbInstance$.subscribe((dbApi) => {\n    setInnerDeps({ dbApi });\n  });\n\n  rune.isSoulInitialized$.subscribe((value) => {\n    value\n      ? setTimeout(() => broadcastApi.postServiceStatus('rune', 'started'), 0)\n      : broadcastApi.postServiceStatus('rune', 'inactive');\n  });\n\n  const init = async () => {\n    broadcastApi.postServiceStatus('rune', 'starting');\n\n    await rune.init();\n    setInnerDeps({ rune });\n  };\n\n  init();\n\n  return { rune, setInnerDeps, abort: runeDeps.abort };\n};\n","import { proxy } from 'comlink';\n\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { ParticleCid } from 'src/types/base';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { RuneInnerDeps } from 'src/services/scripting/runeDeps';\n\nimport { exposeWorkerApi } from '../factoryMethods';\n\nimport { SyncService } from '../../services/sync/sync';\nimport { SyncServiceParams } from '../../services/sync/types';\n\nimport DbApi from '../../services/DbApi/DbApi';\n\nimport BroadcastChannelSender from '../../channels/BroadcastChannelSender';\nimport { createIpfsApi } from './api/ipfsApi';\nimport { createMlApi } from './api/mlApi';\nimport { createRuneApi } from './api/runeApi';\n\n// import { initRuneDeps } from 'src/services/scripting/wasmBindings';\n\nconst createBackgroundWorkerApi = () => {\n  const broadcastApi = new BroadcastChannelSender();\n\n  const dbInstance$ = new Subject<DbApi>();\n\n  const injectDb = (db: DbApi) => dbInstance$.next(db);\n\n  const params$ = new BehaviorSubject<SyncServiceParams>({\n    myAddress: null,\n  });\n\n  const { embeddingApi$ } = createMlApi(dbInstance$, broadcastApi);\n\n  const { setInnerDeps, rune } = createRuneApi(\n    embeddingApi$,\n    dbInstance$,\n    broadcastApi\n  );\n\n  const {\n    ipfsQueue,\n    ipfsInstance$,\n    api: ipfsApi,\n  } = createIpfsApi(rune, broadcastApi);\n\n  const waitForParticleResolve = (\n    cid: ParticleCid,\n    priority: QueuePriority = QueuePriority.MEDIUM\n  ) => ipfsQueue.enqueueAndWait(cid, { postProcessing: false, priority });\n\n  const serviceDeps = {\n    waitForParticleResolve,\n    dbInstance$,\n    ipfsInstance$,\n    embeddingApi$,\n    params$,\n  };\n\n  // service to sync updates about cyberlinks, transactions, swarm etc.\n  const syncService = new SyncService(serviceDeps);\n\n  // INITIALIZATION\n  setInnerDeps({ ipfsApi });\n\n  return {\n    injectDb,\n    isIpfsInitialized: () => !!ipfsInstance$.getValue(),\n    // syncDrive,\n    ipfsApi: proxy(ipfsApi),\n    rune: proxy(rune),\n    embeddingApi$,\n    // ipfsInstance$,\n    ipfsQueue: proxy(ipfsQueue),\n    setRuneDeps: (\n      deps: Partial<Omit<RuneInnerDeps, 'embeddingApi' | 'dbApi'>>\n    ) => setInnerDeps(deps),\n    // restartSync: (name: SyncEntryName) => syncService.restart(name),\n    setParams: (params: Partial<SyncServiceParams>) =>\n      params$.next({ ...params$.value, ...params }),\n  };\n};\n\nconst backgroundWorker = createBackgroundWorkerApi();\n\nexport type BackgroundWorker = typeof backgroundWorker;\n\n// Expose the API to the main thread as shared/regular worker\nexposeWorkerApi(self, backgroundWorker);\n","import { proxy } from 'comlink';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport QueueManager from 'src/services/QueueManager/QueueManager';\nimport {\n  QueueItemCallback,\n  QueueItemOptions,\n} from 'src/services/QueueManager/types';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\nimport { initIpfsNode } from 'src/services/ipfs/node/factory';\n\nimport {\n  CybIpfsNode,\n  IpfsContentType,\n  IpfsOptsType,\n} from 'src/services/ipfs/types';\nimport { RuneEngine } from 'src/services/scripting/engine';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createIpfsApi = (\n  rune: RuneEngine,\n  broadcastApi: BroadcastChannelSender\n) => {\n  const ipfsInstance$ = new BehaviorSubject<CybIpfsNode | undefined>(undefined);\n  const ipfsQueue = new QueueManager(ipfsInstance$, {\n    rune,\n  });\n  const stopIpfs = async () => {\n    const ipfsNode = ipfsInstance$.getValue();\n\n    if (ipfsNode) {\n      await ipfsNode.stop();\n    }\n    ipfsInstance$.next(undefined);\n    broadcastApi.postServiceStatus('ipfs', 'inactive');\n  };\n\n  const startIpfs = async (ipfsOpts: IpfsOptsType) => {\n    try {\n      const ipfsNode = ipfsInstance$.getValue();\n      if (ipfsNode) {\n        // console.log('Ipfs node already started!');\n        setTimeout(() => broadcastApi.postServiceStatus('ipfs', 'started'), 0);\n        return Promise.resolve();\n        // await ipfsNode.stop();\n      }\n      broadcastApi.postServiceStatus('ipfs', 'starting');\n      console.time('🔋 ipfs initialized');\n\n      const newIpfsNode = await initIpfsNode(ipfsOpts);\n      console.timeEnd('🔋 ipfs initialized');\n\n      ipfsInstance$.next(newIpfsNode);\n      setTimeout(() => broadcastApi.postServiceStatus('ipfs', 'started'), 0);\n      return true;\n    } catch (err) {\n      console.log('----ipfs node init error ', err);\n      const msg = err instanceof Error ? err.message : (err as string);\n      broadcastApi.postServiceStatus('ipfs', 'error', msg);\n      throw Error(msg);\n    }\n  };\n\n  const api = {\n    start: startIpfs,\n    stop: stopIpfs,\n    config: async () => ipfsInstance$.getValue()?.config,\n    info: async () => ipfsInstance$.getValue()?.info(),\n    fetchWithDetails: async (\n      cid: string,\n      parseAs?: IpfsContentType,\n      controller?: AbortController\n    ) => {\n      const ipfsNode = ipfsInstance$.getValue();\n      if (!ipfsNode) {\n        throw new Error('ipfs node not initialized');\n      }\n      return ipfsNode.fetchWithDetails(cid, parseAs, controller);\n    },\n    enqueue: async (\n      cid: string,\n      callback: QueueItemCallback,\n      options: QueueItemOptions\n    ) => ipfsQueue.enqueue(cid, callback, options),\n    enqueueAndWait: async (cid: string, options?: QueueItemOptions) =>\n      ipfsQueue!.enqueueAndWait(cid, options),\n    dequeue: async (cid: string) => ipfsQueue.cancel(cid),\n    dequeueByParent: async (parent: string) => ipfsQueue.cancelByParent(parent),\n    clearQueue: async () => ipfsQueue.clear(),\n    addContent: async (content: string | File) =>\n      ipfsInstance$.getValue()?.addContent(content),\n  };\n\n  return { ipfsInstance$, ipfsQueue, api };\n};\n\nexport type IpfsApi = ReturnType<typeof createIpfsApi>['api'];\n","import {\n  wrap,\n  Remote,\n  proxy,\n  releaseProxy,\n  expose,\n  transferHandlers,\n} from 'comlink';\nimport { IPFSContentTransferHandler } from './serializers';\nimport { Observable, Observer, Subscribable, Subscription } from 'rxjs'; // v7.8.0\ntype WorkerType = SharedWorker | Worker;\n\nconst isSharedWorkersSupported = typeof SharedWorker !== 'undefined';\n\nconst isSharedWorkerUsed = isSharedWorkersSupported && !process.env.IS_DEV;\n\n// apply serializers for custom types\nfunction installTransferHandlers() {\n  transferHandlers.set('IPFSContent', IPFSContentTransferHandler);\n  transferHandlers.set('observable', {\n    canHandle: (value: unknown): value is Observable<unknown> => {\n      return value instanceof Observable;\n    },\n    deserialize: (value: MessagePort) => {\n      return new Observable<unknown>((observer) => {\n        const remote = transferHandlers\n          .get('proxy')!\n          .deserialize(value) as Remote<Subscribable<unknown>>;\n\n        remote\n          .subscribe(\n            proxy({\n              next: (next: unknown) => observer.next(next),\n              error: (error: unknown) => observer.error(error),\n              complete: () => observer.complete(),\n            })\n          )\n          .then((subscription) =>\n            observer.add(() => {\n              subscription.unsubscribe();\n              remote[releaseProxy]();\n            })\n          );\n      });\n    },\n    serialize: (value: Observable<unknown>) => {\n      return transferHandlers.get('proxy')!.serialize({\n        subscribe: (observer: Remote<Observer<unknown>>) =>\n          value.subscribe({\n            next: (next: unknown) => observer.next(next).then(),\n            error: (error: unknown) => observer.error(error).then(),\n            complete: () => observer.complete().then(),\n          }),\n      });\n    },\n  });\n\n  transferHandlers.set('subscription', {\n    canHandle: (value: unknown): value is Subscription => {\n      return value instanceof Subscription;\n    },\n    deserialize: (value: MessagePort) => {\n      return new Subscription(() => {\n        const remote = transferHandlers\n          .get('proxy')!\n          .deserialize(value) as Remote<Subscription>;\n\n        remote.unsubscribe().then(() => {\n          remote[releaseProxy]();\n        });\n      });\n    },\n    serialize: (value: Subscription) => {\n      return transferHandlers.get('proxy')!.serialize({\n        unsubscribe: () => value.unsubscribe(),\n      });\n    },\n  });\n}\n\nfunction safeStringify(obj: any): string {\n  try {\n    return JSON.stringify(obj);\n  } catch (error) {\n    return String(obj);\n  }\n}\n\n// Override console.log to send logs to main thread\nfunction overrideLogging(worker: Worker | MessagePort) {\n  const consoleLogMap = {\n    log: { original: console.log },\n    error: { original: console.error },\n    warn: { original: console.warn },\n  };\n  const replaceConsoleLog = (method: keyof typeof consoleLogMap) => {\n    const { original } = consoleLogMap[method];\n\n    consoleLogMap[method].original = console[method];\n\n    console[method] = (...args) => {\n      original.apply(console, args);\n      const serializableArgs = args.map((arg) => safeStringify(arg));\n\n      worker.postMessage({ type: 'console', method, args: serializableArgs });\n    };\n  };\n\n  Object.keys(consoleLogMap).forEach((method) =>\n    replaceConsoleLog(method as keyof typeof consoleLogMap)\n  );\n}\n\n// Install handlers for logging from worker\nfunction installLoggingHandler(worker: Worker | MessagePort, name: string) {\n  // Add event listener\n  worker.addEventListener('message', (event) => {\n    if (event.data.type === 'console') {\n      const { method, args } = event.data;\n\n      console[method](name, ...args);\n    }\n  });\n}\n\n// Create Shared Worker with fallback to usual Worker(in case of DEV too)\nexport function createWorkerApi<T>(\n  workerUrl: URL,\n  workerName: string\n): { worker: WorkerType; workerApiProxy: Remote<T> } {\n  installTransferHandlers();\n  //&& !process.env.IS_DEV\n  if (isSharedWorkerUsed) {\n    const worker = new SharedWorker(workerUrl, { name: workerName });\n    installLoggingHandler(worker.port, workerName);\n    return { worker, workerApiProxy: wrap<T>(worker.port) };\n  }\n\n  const worker = new Worker(workerUrl);\n  // installLoggingHandler(worker, workerName);\n  return { worker, workerApiProxy: wrap<T>(worker) };\n}\n\nexport function exposeWorkerApi<T>(worker: WorkerType, api: T) {\n  installTransferHandlers();\n  if (typeof worker.onconnect !== 'undefined') {\n    worker.onconnect = (e) => {\n      const port = e.ports[0];\n      overrideLogging(port);\n\n      expose(api, port);\n    };\n  } else {\n    // overrideLogging(worker);\n    expose(api);\n  }\n}\n","import type { TransferHandler } from 'comlink';\nimport { IPFSContent } from 'src/services/ipfs/types';\n\nexport type IPFSContentTransferable = Omit<IPFSContent, 'result'> & {\n  port: MessagePort;\n};\n\nfunction createAsyncIterable(port: MessagePort): AsyncIterable<Uint8Array> {\n  return {\n    async *[Symbol.asyncIterator](): AsyncGenerator<\n      Uint8Array,\n      void,\n      undefined\n    > {\n      let done = false;\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        const promise = new Promise<Uint8Array | null>((resolve) => {\n          // resolve = res;\n          port.onmessage = (event: MessageEvent) => {\n            if (event.data === null) {\n              done = true;\n              resolve(null);\n            } else {\n              resolve(event.data);\n            }\n          };\n        });\n        // eslint-disable-next-line no-await-in-loop\n        const value = await promise;\n        // eslint-disable-next-line no-await-in-loop\n        if (value !== null) {\n          yield value;\n        }\n      }\n    },\n  };\n}\n\nconst IPFSContentTransferHandler: TransferHandler<\n  IPFSContent | undefined,\n  IPFSContentTransferable | null\n> = {\n  canHandle: (obj: IPFSContent | undefined) =>\n    obj && obj.result && typeof obj.result[Symbol.asyncIterator] === 'function',\n  serialize(obj: IPFSContent) {\n    if (obj === undefined) {\n      return [null, []];\n    }\n    const { result, ...rest } = obj;\n    const { port1, port2 } = new MessageChannel();\n    if (result) {\n      (async () => {\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const value of result) {\n          port1.postMessage(value);\n        }\n        port1.postMessage(null); // Send  \"end\" message\n\n        port1.close();\n      })();\n    }\n    return [{ ...rest, port: port2 }, [port2]];\n  },\n  deserialize(serializedObj: IPFSContentTransferable | null) {\n    if (!serializedObj) {\n      return undefined;\n    }\n    const { port, ...rest } = serializedObj;\n\n    return {\n      ...rest,\n      result: createAsyncIterable(port),\n    };\n  },\n};\n\nexport {\n  IPFSContentTransferHandler,\n  // serializeIPFSContent,\n  // deserializeIPFSContent,\n};\n","import { IPFSNodes, IpfsOptsType } from './types';\n\nexport const CYBER_NODE_SWARM_PEER_ID =\n  'QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB';\n\nexport const CYBERNODE_SWARM_ADDR_WSS = `/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/${CYBER_NODE_SWARM_PEER_ID}`;\nexport const CYBERNODE_SWARM_ADDR_TCP = `/ip4/88.99.105.146/tcp/4001/p2p/${CYBER_NODE_SWARM_PEER_ID}`;\n\nexport const IPFS_CLUSTER_URL = 'https://io.cybernode.ai';\n\nexport const CYBER_GATEWAY_URL = 'https://gateway.ipfs.cybernode.ai';\n\nexport const FILE_SIZE_DOWNLOAD = 20 * 10 ** 6;\n\nexport const getIpfsOpts = () => {\n  let ipfsOpts: IpfsOptsType = {\n    ipfsNodeType: IPFSNodes.HELIA,\n    urlOpts: '/ip4/127.0.0.1/tcp/5001', // default url\n    userGateway: 'http://127.0.0.1:8080',\n  };\n\n  // get type ipfs\n  const lsTypeIpfs = localStorage.getItem('ipfsState');\n  if (lsTypeIpfs !== null) {\n    const lsTypeIpfsData = JSON.parse(lsTypeIpfs);\n    ipfsOpts = { ...ipfsOpts, ...lsTypeIpfsData };\n  }\n\n  localStorage.setItem('ipfsState', JSON.stringify(ipfsOpts));\n\n  return ipfsOpts as IpfsOptsType;\n};\n","import { toString as uint8ArrayToAsciiString } from 'uint8arrays/to-string';\nimport isSvg from 'is-svg';\nimport { PATTERN_HTTP, PATTERN_IPFS_HASH } from 'src/constants/patterns';\nimport { Option } from 'src/types';\n\nimport { shortenString } from 'src/utils/string';\nimport {\n  IPFSContentDetails,\n  IPFSContent,\n  IpfsContentType,\n  IpfsGatewayContentType,\n} from '../types';\nimport { getResponseResult, onProgressCallback } from './stream';\n\nfunction createObjectURL(rawData: Uint8Array, type: string) {\n  const blob = new Blob([rawData], { type });\n  return URL.createObjectURL(blob);\n}\n\nfunction createImgData(rawData: Uint8Array, type: string) {\n  const imgBase64 = uint8ArrayToAsciiString(rawData, 'base64');\n  const file = `data:${type};base64,${imgBase64}`;\n  return file;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport const detectGatewayContentType = (\n  mime: string | undefined\n): Option<IpfsGatewayContentType> => {\n  if (mime) {\n    if (mime.includes('video')) {\n      return 'video';\n    }\n\n    if (mime.includes('audio')) {\n      return 'audio';\n    }\n\n    if (mime.includes('epub')) {\n      return 'epub';\n    }\n  }\n  return undefined;\n};\n\nconst basic = /\\s?<!doctype html>|(<html\\b[^>]*>|<body\\b[^>]*>|<x-[^>]+>)+/i;\n\nfunction isHtml(string: string) {\n  const newString = string.trim().slice(0, 1000);\n  return basic.test(newString);\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport const chunksToBlob = (\n  chunks: Array<Uint8Array>,\n  mime: string | undefined\n) => new Blob(chunks, mime ? { type: mime } : {});\n\n// eslint-disable-next-line import/no-unused-modules\nexport const mimeToBaseContentType = (\n  mime: string | undefined\n): IpfsContentType => {\n  if (!mime) {\n    return 'other';\n  }\n\n  const initialType = detectGatewayContentType(mime);\n  if (initialType) {\n    return initialType;\n  }\n\n  if (\n    mime.indexOf('text/plain') !== -1 ||\n    mime.indexOf('application/xml') !== -1\n  ) {\n    return 'text';\n  }\n  if (mime.indexOf('image') !== -1) {\n    return 'image';\n  }\n  if (mime.indexOf('application/pdf') !== -1) {\n    return 'pdf';\n  }\n  return 'other';\n};\n\n// eslint-disable-next-line import/no-unused-modules, import/prefer-default-export\nexport const parseArrayLikeToDetails = async (\n  content: Option<IPFSContent>,\n  cid: string,\n  onProgress?: onProgressCallback\n): Promise<IPFSContentDetails> => {\n  // try {\n  if (!content || !content?.result) {\n    return {\n      gateway: true,\n      text: cid.toString(),\n      cid,\n    };\n  }\n\n  const { result, meta } = content;\n\n  const { mime, contentType } = meta;\n\n  if (!mime) {\n    return {\n      cid,\n      gateway: true,\n      text: `Can't detect MIME for ${cid.toString()}`,\n    };\n  }\n  const contentCid = content.cid;\n\n  const response: IPFSContentDetails = {\n    link: `/ipfs/${cid}`,\n    gateway: false,\n    cid: contentCid,\n    type: contentType,\n  };\n\n  if (detectGatewayContentType(mime)) {\n    return { ...response, gateway: true };\n  }\n\n  const rawData =\n    typeof result !== 'string'\n      ? await getResponseResult(result, onProgress)\n      : result;\n\n  const isStringData = typeof rawData === 'string';\n\n  // console.log(rawData);\n  if (!rawData) {\n    return {\n      ...response,\n      gateway: true,\n      text: `Can't parse content for ${cid.toString()}`,\n    };\n  }\n\n  // clarify text-content subtypes\n  if (response.type === 'text') {\n    // render svg as image\n    if (!isStringData && isSvg(Buffer.from(rawData))) {\n      return {\n        ...response,\n        type: 'image',\n        content: createImgData(rawData, 'image/svg+xml'),\n      };\n    }\n\n    const str = isStringData ? rawData : uint8ArrayToAsciiString(rawData);\n\n    if (str.match(PATTERN_IPFS_HASH)) {\n      return {\n        ...response,\n        type: 'cid',\n        content: str,\n      };\n    }\n    if (str.match(PATTERN_HTTP)) {\n      return {\n        ...response,\n        type: 'link',\n        content: str,\n      };\n    }\n    if (isHtml(str)) {\n      return {\n        ...response,\n        type: 'html',\n        gateway: true,\n        content: cid.toString(),\n      };\n    }\n\n    // TODO: search can bel longer for 42???!\n    // also cover ipns links\n    return {\n      ...response,\n      link: str.length > 42 ? `/ipfs/${cid}` : `/search/${str}`,\n      type: 'text',\n      text: shortenString(str),\n      content: str,\n    };\n  }\n\n  if (!isStringData) {\n    if (response.type === 'image') {\n      return { ...response, content: createImgData(rawData, mime) }; // file\n    }\n    if (response.type === 'pdf') {\n      return {\n        ...response,\n        content: createObjectURL(rawData, mime),\n        gateway: true,\n      }; // file\n    }\n  }\n\n  return response;\n  // } catch (e) {\n  //   console.log('----parseRawIpfsData', e, cid);\n  //   return undefined;\n  // }\n};\n\nexport const contentToUint8Array = async (\n  content: File | string\n): Promise<Uint8Array> => {\n  return new Uint8Array(\n    typeof content === 'string'\n      ? Buffer.from(content)\n      : await content.arrayBuffer()\n  );\n};\n\nexport const createTextPreview = (\n  array: Uint8Array | undefined | string,\n  contentType: IpfsContentType,\n  previewLength = 150\n) => {\n  if (!array) {\n    return undefined;\n  }\n  if (typeof array === 'string') {\n    return array.slice(0, previewLength);\n  }\n  return contentType && contentType === 'text'\n    ? uint8ArrayToAsciiString(array).slice(0, previewLength)\n    : undefined;\n};\n","/* eslint-disable valid-jsdoc */\n/* eslint-disable import/no-unused-modules */\nimport { fileTypeFromBuffer } from 'file-type';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { Uint8ArrayLike } from '../types';\n\ntype ResultWithMime = {\n  result: Uint8ArrayLike;\n  mime: string | undefined;\n  firstChunk: Uint8Array | undefined;\n};\n\ntype StreamDoneCallback = (\n  chunks: Array<Uint8Array>,\n  mime: string | undefined\n) => Promise<void> | void;\n\n// interface AsyncIterableWithReturn<T> extends AsyncIterable<T> {\n//   return?: (value?: unknown) => Promise<IteratorResult<T>>;\n// }\n\nexport const getMimeFromUint8Array = async (\n  raw: Uint8Array | undefined\n): Promise<string | undefined> => {\n  if (!raw) {\n    return 'unknown';\n  }\n  // TODO: try to pass only first N-bytes\n  const fileType = await fileTypeFromBuffer(raw);\n\n  return fileType?.mime || 'text/plain';\n};\n\nexport async function toAsyncIterableWithMime(\n  stream: ReadableStream<Uint8Array>,\n  flush?: StreamDoneCallback\n): Promise<ResultWithMime> {\n  const [firstChunkStream, fullStream] = stream.tee();\n  const chunks: Array<Uint8Array> = []; // accumulate all the data to pim/save\n\n  // Read the first chunk from the stream\n  const firstReader = firstChunkStream.getReader();\n  const { value } = await firstReader.read();\n  const mime = value ? await getMimeFromUint8Array(value) : undefined;\n\n  const restReader = fullStream.getReader();\n\n  const asyncIterable: AsyncIterable<Uint8Array> = {\n    async *[Symbol.asyncIterator]() {\n      while (true) {\n        const { done, value } = await restReader.read();\n        if (done) {\n          flush && flush(chunks, mime);\n          return; // Exit the loop when done\n        }\n        flush && chunks.push(value);\n        yield value; // Yield the value to the consumer\n      }\n    },\n  };\n\n  return { mime, result: asyncIterable, firstChunk: value };\n}\n\nexport async function toReadableStreamWithMime(\n  stream: ReadableStream<Uint8Array>,\n  flush?: StreamDoneCallback\n): Promise<ResultWithMime> {\n  const [firstChunkStream, fullStream] = stream.tee();\n  const chunks: Array<Uint8Array> = []; // accumulate all the data to pim/save\n\n  // Read the first chunk from the stream\n  const firstReader = firstChunkStream.getReader();\n  const { value } = await firstReader.read();\n  const mime = value ? await getMimeFromUint8Array(value) : undefined;\n\n  const modifiedStream = new ReadableStream<Uint8Array>({\n    async pull(controller) {\n      const restReader = fullStream.getReader();\n      const { done, value } = await restReader.read();\n      if (done) {\n        controller.close();\n        flush && flush(chunks, mime);\n      } else {\n        controller.enqueue(value);\n        flush && chunks.push(value);\n      }\n      restReader.releaseLock();\n    },\n    cancel() {\n      firstChunkStream.cancel();\n      fullStream.cancel();\n    },\n  });\n\n  return { mime, result: modifiedStream, firstChunk: value };\n}\n\nexport type onProgressCallback = (progress: number) => void;\n\nexport const getResponseResult = async (\n  response: Uint8ArrayLike,\n  onProgress?: onProgressCallback\n) => {\n  let bytesDownloaded = 0;\n  try {\n    if (response instanceof Uint8Array) {\n      onProgress && onProgress(response.byteLength);\n      return response;\n    }\n    const chunks: Array<Uint8Array> = [];\n\n    if (response instanceof ReadableStream) {\n      const reader = response.getReader();\n\n      const readStream = async ({\n        done,\n        value,\n      }: ReadableStreamReadResult<Uint8Array>): Promise<Uint8Array> => {\n        if (done) {\n          return uint8ArrayConcat(chunks);\n        }\n\n        chunks.push(value!);\n        bytesDownloaded += value!.byteLength;\n        onProgress && onProgress(bytesDownloaded);\n        return reader.read().then(readStream);\n      };\n\n      const readArray: Uint8Array = await reader.read().then(readStream);\n\n      return readArray;\n    }\n\n    if (Symbol.asyncIterator in response) {\n      const reader = response[Symbol.asyncIterator]();\n\n      // if (cid === 'QmRqms6Utkk6L4mtyLQXY2spcQ8Pk7fBBTNjvxa9jTNrXp') {\n      //   debugger;\n      // }\n      // eslint-disable-next-line no-restricted-syntax\n      for await (const chunk of reader) {\n        if (chunk instanceof Uint8Array) {\n          chunks.push(chunk);\n          bytesDownloaded += chunk.byteLength;\n          onProgress && onProgress(bytesDownloaded);\n        }\n      }\n      const result = uint8ArrayConcat(chunks);\n      return result;\n    }\n    return undefined;\n  } catch (error) {\n    console.error(\n      `Error reading stream/iterable.\\r\\n Probably Hot reload error!`,\n      error\n    );\n\n    // throw error;\n\n    return undefined;\n  }\n};\n","import { Nullable } from 'src/types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport async function getScriptFromParticle(cid?: Nullable<string>) {\n  throw new Error('Not implemented');\n  // if (!cid || !isCID(cid)) {\n  //   // throw new Error('cid is not valid');\n  //   return undefined;\n  // }\n\n  // const queueResult = await queueManager.enqueueAndWait(cid, {\n  //   postProcessing: false,\n  // });\n  // const result = queueResult?.result;\n  // if (!result?.result || result?.contentType !== 'text') {\n  //   // throw new Error('content is not valid');\n  //   return undefined;\n  // }\n\n  // return getTextFromIpfsContent(result.result);\n}\n\nexport function extractRuneContent(markdown: string) {\n  // Regular expression to match the content between ```rune``` tags\n  const runeRegex = /```rune\\s*([\\s\\S]*?)```/g;\n\n  let match;\n  let runeScript = '';\n  let modifiedMarkdown = markdown;\n  let hasRune = false;\n  // Iterate through all matches of the regular expression\n  while ((match = runeRegex.exec(markdown)) !== null) {\n    hasRune = true;\n    // Append the matched content between ```rune``` tags to runeContent variable\n    runeScript += match[1] + '\\n';\n\n    // Replace the entire matched block, including the tags, with an empty string\n    modifiedMarkdown = modifiedMarkdown.replace(match[0], '');\n  }\n\n  // Returning both the extracted content and the modified markdown without the tags\n  return {\n    script: runeScript.trim(),\n    markdown: modifiedMarkdown,\n    hasRune,\n  };\n}\n\nexport function extractRuneScript(markdown: string) {\n  const { script, markdown: md, hasRune } = extractRuneContent(markdown);\n  // if no rune tag, consider this like pure script\n  return hasRune ? script : md;\n}\n\nexport const generateRefId = () => uuidv4().toString();\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport styles from './styles.module.scss';\n\ninterface MainContainerProps {\n  children: React.ReactNode;\n  width?: string;\n  title?: string;\n}\n\nfunction MainContainer({ children, width = '62%', title }: MainContainerProps) {\n  return (\n    <div style={{ width }} className={styles.wrapper}>\n      {title && (\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n      )}\n\n      <main>{children}</main>\n    </div>\n  );\n}\n\nexport default MainContainer;\n","import { WorkerUrl } from 'worker-url';\nimport { BackgroundWorker } from './worker';\nimport { createWorkerApi } from '../factoryMethods';\n\nconst workerUrl = new WorkerUrl(new URL('./worker.ts', import.meta.url));\n\nexport const { workerApiProxy: backgroundWorkerInstance } =\n  createWorkerApi<BackgroundWorker>(workerUrl, 'cyb~backend');\n\n// export const backendApi;\n","import { WorkerUrl } from 'worker-url';\nimport { CozoDbWorker } from './worker';\nimport { createWorkerApi } from '../factoryMethods';\n\nconst workerUrl = new WorkerUrl(new URL('./worker.ts', import.meta.url));\n\nexport const { workerApiProxy: cozoDbWorkerInstance } =\n  createWorkerApi<CozoDbWorker>(workerUrl, 'cyb~cozodb');\n","import { SyncCommunityResult } from 'src/services/community/community';\nimport { setDefaultAccount } from 'src/redux/features/pocket';\nimport { IndexedDbWriteMessage } from '../../CozoDb/types/types';\n\nexport type SyncEntryName =\n  | 'pin'\n  | 'particles'\n  | 'transactions'\n  | 'resolver'\n  | 'my-friends';\n\nexport type ProgressTracking = {\n  totalCount: number;\n  completeCount: number;\n  estimatedTime: number;\n};\n\nexport type SyncProgress = Partial<{\n  status:\n    | 'active'\n    | 'initialized'\n    | 'listen'\n    | 'estimating'\n    | 'in-progress'\n    | 'error'\n    | 'inactive';\n\n  progress: ProgressTracking;\n  done: boolean;\n  error: string;\n  message: string;\n}>;\n\nexport type ServiceStatus = 'inactive' | 'starting' | 'started' | 'error';\n\nexport type SyncEntryStatus = Record<SyncEntryName, SyncProgress>;\nexport type SyncMlEntryStatus = Record<string, SyncProgress>;\n\nexport type SyncState = {\n  entryStatus: Partial<SyncEntryStatus>;\n  lastError?: string;\n  totalEstimatedTime: number;\n  message: string;\n  inProgress: boolean;\n  completeIntialSyncEntries: SyncEntryName[] | string[];\n  initialSyncDone: boolean;\n};\n\nexport type MlSyncState = {\n  entryStatus: Partial<SyncMlEntryStatus>;\n};\n\nexport type SyncStatusMessage = {\n  type: 'sync_status';\n  value: Omit<SyncState, 'entryStatus'>;\n};\n\nexport type SyncEntryMessage = {\n  type: 'sync_entry';\n  value: {\n    entry: SyncEntryName;\n    state: SyncProgress;\n  };\n};\n\nexport type SyncMlEntryMessage = {\n  type: 'sync_ml_entry';\n  value: {\n    entry: string;\n    state: SyncProgress;\n  };\n};\n\nexport type ServiceName = 'db' | 'ipfs' | 'sync' | 'ml' | 'rune';\n\nexport type ServiceStatusMessage = {\n  type: 'service_status';\n  value: { name: ServiceName; status: ServiceStatus; message?: string };\n};\n\nexport const BC_MSG_LOAD_COMMUNITY = 'load_community';\n\nexport type LoadCommunityMessage = {\n  type: typeof BC_MSG_LOAD_COMMUNITY;\n  value: SyncCommunityResult;\n};\n\nexport const BC_MSG_SET_DEFAULT_ACCOUNT = setDefaultAccount.type;\n\nexport type SetDefaultAccountMessage = typeof setDefaultAccount;\n\n// export type SenseListUpdate = {\n//   type: 'sense_list_update';\n//   list: SenseListItem[];\n// };\n\nexport type BroadcastChannelMessage =\n  | SyncStatusMessage\n  | SyncEntryMessage\n  | IndexedDbWriteMessage\n  | ServiceStatusMessage\n  | LoadCommunityMessage\n  | SyncMlEntryMessage\n  | SetDefaultAccountMessage;\n// | SenseListUpdate\n// | SenseListRemove;\n\nexport const getBroadcastChannemMessageKey = (msg: BroadcastChannelMessage) => {\n  const { type, value } = msg;\n  switch (type) {\n    case 'service_status':\n      return `${type}_${value.name}`;\n    case 'sync_entry':\n      return `${type}_${value.entry}`;\n    case 'sync_ml_entry':\n      return `${type}_${value.entry}`;\n    case 'sync_status':\n    default:\n      return type;\n  }\n};\n","import { AppDispatch } from 'src/redux/store';\nimport { Observable, Subscription, merge } from 'rxjs';\nimport { bufferTime, filter } from 'rxjs/operators';\n\nimport {\n  BC_MSG_LOAD_COMMUNITY,\n  BC_MSG_SET_DEFAULT_ACCOUNT,\n  BroadcastChannelMessage,\n  getBroadcastChannemMessageKey,\n} from '../types/services';\nimport { CYB_BROADCAST_CHANNEL } from './consts';\n\nconst shouldTrottle = (msg: MessageEvent<BroadcastChannelMessage>) =>\n  ['sync_entry', 'sync_status', 'indexeddb_write', 'sync_ml_entry'].some(\n    (name) => name === msg.data.type\n  );\n\nclass RxBroadcastChannelListener {\n  private subscription: Subscription;\n\n  constructor(dispatch: AppDispatch) {\n    const messageObservable = new Observable<\n      MessageEvent<BroadcastChannelMessage>\n    >((subscriber) => {\n      const channel = new BroadcastChannel(CYB_BROADCAST_CHANNEL);\n\n      channel.onmessage = (msg: MessageEvent<BroadcastChannelMessage>) => {\n        if (\n          msg.data.type === BC_MSG_LOAD_COMMUNITY ||\n          msg.data.type === BC_MSG_SET_DEFAULT_ACCOUNT\n        ) {\n          dispatch(msg.data);\n          return;\n        }\n        subscriber.next(msg);\n      };\n\n      return () => {\n        channel.onmessage = null;\n      };\n    });\n\n    const bufferedMessages = messageObservable.pipe(\n      filter((m) => shouldTrottle(m)),\n      bufferTime(2000)\n    ); // Accumulate messages in a 2-second window\n\n    const normalMessages = messageObservable.pipe(\n      filter((m) => !shouldTrottle(m)),\n      bufferTime(0)\n    );\n\n    this.subscription = merge(bufferedMessages, normalMessages)\n      .pipe(filter((m) => m.length > 0))\n      .subscribe((messages) => {\n        if (messages.length > 0) {\n          const items = new Map<string, BroadcastChannelMessage>();\n          messages.forEach((msg) => {\n            const key = getBroadcastChannemMessageKey(msg.data);\n            items.set(key, msg.data);\n          });\n          items.forEach(dispatch);\n        }\n      });\n  }\n\n  close() {\n    this.subscription.unsubscribe();\n  }\n}\n\nexport default RxBroadcastChannelListener;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-unused-modules */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { entityToDto, snakeToCamel } from 'src/utils/dto';\n\nimport { Column, IDBResult } from './types/types';\nimport { DbEntity } from './types/entities';\nimport { serializeString } from 'src/utils/string';\n\nexport function dbResultToDtoList<T>(dbResult: IDBResult): T[] {\n  const { headers, rows } = dbResult;\n\n  // const camelCaseHeadersMap = headers.reduce(\n  //   (acc: Record<string, any>, header) => {\n  //     acc[header] = snakeToCamel(header);\n  //     return acc;\n  //   },\n  //   {}\n  // );\n\n  return rows.map((row) => {\n    const obj: Record<string, any> = {};\n    headers.forEach((header, index) => {\n      // obj[camelCaseHeadersMap[header]] = row[index];\n      obj[header] = row[index];\n    });\n\n    return entityToDto(obj) as T;\n  });\n}\n\nexport async function clearIndexedDBStore(\n  dbName: string,\n  storeName: string\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Open a connection to the database\n    const request = indexedDB.open(dbName);\n\n    request.onerror = (event) => {\n      reject(new Error(`Database error: ${request.error?.message}`));\n    };\n\n    request.onsuccess = (event) => {\n      const db = request.result;\n\n      // Start a transaction and get the store\n      const transaction = db.transaction(storeName, 'readwrite');\n      const store = transaction.objectStore(storeName);\n\n      // Clear the store\n      const clearRequest = store.clear();\n\n      clearRequest.onsuccess = () => {\n        console.log(`Store cleared ${dbName}/${storeName}`);\n        resolve();\n      };\n\n      clearRequest.onerror = () => {\n        reject(\n          new Error(`Error clearing the store: ${clearRequest.error?.message}`)\n        );\n      };\n\n      // Close the database when the transaction is complete\n      transaction.oncomplete = () => {\n        db.close();\n      };\n    };\n  });\n}\nexport const toListOfObjects = <T extends Record<string, any>>({\n  rows,\n  headers,\n}: IDBResult): T[] => {\n  return rows.map((row) => {\n    const obj: Record<string, any> = {};\n    row.forEach((value, index) => {\n      const key = headers[index];\n      obj[key] = value;\n    });\n    return obj as T;\n  });\n};\nexport const entityToArray = (\n  obj: Partial<DbEntity>,\n  columns: Column[]\n): string => {\n  return `[${columns\n    .map((col) => {\n      const key = col.column as keyof DbEntity;\n      const value = obj[key];\n\n      if (/<[a-z]+\\d*;\\d+>/i.test(col.type)) {\n        return `[${value}]`;\n      }\n      return col.type === 'Json'\n        ? `parse_json('${JSON.stringify(value)}')`\n        : col.type === 'String'\n        ? `\"${serializeString(value)}\"`\n        : value;\n    })\n    .join(', ')}]`;\n};\n","import {\n  EmbeddinsDbEntity,\n  EntryType,\n  PinDbEntity,\n  SyncQueueKey,\n  SyncQueueStatus,\n} from 'src/services/CozoDb/types/entities';\nimport { NeuronAddress, ParticleCid } from 'src/types/base';\n\nimport { dbResultToDtoList, toListOfObjects } from 'src/services/CozoDb/utils';\nimport {\n  removeUndefinedFields,\n  dtoListToEntity,\n  dtoToEntity,\n} from 'src/utils/dto';\n\nimport { CozoDbWorker } from 'src/services/backend/workers/db/worker';\nimport {\n  CommunityDto,\n  LinkDto,\n  ParticleDto,\n  SyncQueueDto,\n  SyncQueueKeyDto,\n  SyncStatusDto,\n  TransactionDto,\n} from 'src/services/CozoDb/types/dto';\n\nimport { SenseListItem } from 'src/services/backend/types/sense';\nimport { SyncQueueItem } from '../sync/services/ParticlesResolverQueue/types';\nimport { extractSenseChats } from '../sync/services/utils/sense';\nimport {\n  MSG_MULTI_SEND_TRANSACTION_TYPE,\n  MSG_SEND_TRANSACTION_TYPE,\n} from '../indexer/types';\n\nconst TIMESTAMP_INTITAL = 0;\nconst DEFAULT_SYNC_STATUS = {\n  timestampUpdate: TIMESTAMP_INTITAL,\n  timestampRead: TIMESTAMP_INTITAL,\n  unreadCount: 0,\n  meta: {},\n} as SyncStatusDto;\n\nclass DbApiWrapper {\n  private db: CozoDbWorker | undefined;\n\n  public init(dbApi: CozoDbWorker) {\n    this.db = dbApi;\n    return this;\n  }\n\n  public async getSyncStatus(\n    ownerId: NeuronAddress,\n    id: NeuronAddress | ParticleCid,\n    defaultSyncStatus = DEFAULT_SYNC_STATUS\n  ) {\n    const result = await this.db!.executeGetCommand(\n      'sync_status',\n      undefined,\n      [`id = '${id}'`, `owner_id = '${ownerId}'`],\n      ['id', 'owner_id']\n    );\n\n    return result.rows.length\n      ? dbResultToDtoList<SyncStatusDto>(result)[0]\n      : defaultSyncStatus;\n  }\n\n  public async putSyncStatus(item: SyncStatusDto[] | SyncStatusDto) {\n    const entitites = dtoListToEntity(Array.isArray(item) ? item : [item]);\n    const result = await this.db!.executePutCommand('sync_status', entitites);\n\n    return result;\n  }\n\n  public async updateSyncStatus(\n    entity: Partial<SyncStatusDto> & {\n      id: NeuronAddress | ParticleCid;\n      ownerId: NeuronAddress;\n    }\n  ) {\n    return this.db!.executeUpdateCommand('sync_status', [\n      dtoToEntity(removeUndefinedFields(entity)),\n    ]);\n  }\n\n  public async findSyncStatus({\n    ownerId,\n    entryType,\n    id,\n  }: {\n    ownerId: NeuronAddress;\n    entryType?: EntryType[] | EntryType;\n    id?: NeuronAddress | ParticleCid;\n  }) {\n    const conditions = [`owner_id = '${ownerId}'`];\n\n    entryType &&\n      conditions.push(\n        `entry_type in [${\n          Array.isArray(entryType) ? entryType.join(', ') : entryType\n        }]`\n      );\n\n    id && conditions.push(`id = '${id}'`);\n\n    const result = await this.db!.executeGetCommand(\n      'sync_status',\n      ['id', 'unread_count', 'timestamp_update', 'timestamp_read', 'meta'],\n      conditions,\n      ['entry_type', 'owner_id'],\n      { orderBy: ['-timestamp_update'] }\n    );\n    return dbResultToDtoList<SyncStatusDto>(result);\n  }\n\n  public async putTransactions(transactions: TransactionDto[]) {\n    return this.db!.executePutCommand(\n      'transaction',\n      dtoListToEntity(transactions)\n    );\n  }\n\n  public async putPins(pins: PinDbEntity[] | PinDbEntity) {\n    const entitites = Array.isArray(pins) ? pins : [pins];\n    return this.db!.executePutCommand('pin', entitites);\n  }\n\n  public async getPins(withType = false) {\n    const fields = withType ? ['cid', 'type'] : ['cid'];\n    const result = await this.db!.executeGetCommand('pin', fields);\n\n    return result;\n  }\n\n  public async getCommunity(ownerId: NeuronAddress) {\n    const result = await this.db!.executeGetCommand('community', undefined, [\n      `owner_id = '${ownerId}'`,\n    ]);\n\n    return dbResultToDtoList<CommunityDto>(result);\n  }\n\n  public async putCommunity(community: CommunityDto[] | CommunityDto) {\n    const entitites = dtoListToEntity(\n      Array.isArray(community) ? community : [community]\n    );\n    await this.db!.executePutCommand('community', entitites);\n  }\n\n  public async deletePins(pins: ParticleCid[]) {\n    return this.db!.executeRmCommand(\n      'pin',\n      pins.map((cid) => ({ cid } as Partial<PinDbEntity>))\n    );\n  }\n\n  public async putParticles(particles: ParticleDto[] | ParticleDto) {\n    const entitites = dtoListToEntity(\n      Array.isArray(particles) ? particles : [particles]\n    );\n    return this.db!.executePutCommand('particle', entitites);\n  }\n\n  public async getParticlesRaw(fields: string[]) {\n    const result = await this.db!.executeGetCommand('particle', fields);\n\n    return result;\n  }\n\n  public async getSenseList(myAddress: NeuronAddress = '') {\n    const command = `\n    ss_particles[id, meta] := *sync_status{entry_type,id, meta, owner_id}, entry_type=${EntryType.particle}, owner_id = '${myAddress}'\n\n    ss_chat_all[id, meta, hash, is_link, index] := *sync_status{entry_type, id, meta, owner_id}, entry_type=${EntryType.chat}, index=maybe_get(meta, 'index'), hash=maybe_get(meta, 'transaction_hash'), is_link=!is_null(maybe_get(meta, 'to')), owner_id = '${myAddress}'\n    ss_chat_links[id, meta] := ss_chat_all[id, meta, hash, is_link, index], is_link\n    ss_chat_trans[id, m] := ss_chat_all[id, meta, hash, is_link, index], !is_link, *transaction{hash, index, value, type, timestamp, success, memo},  m=concat(meta, json_object('value', value, 'type', type, 'timestamp', timestamp, 'memo', memo, 'success', success, 'index', index))\n\n    ?[owner_id, entry_type, id, unread_count, timestamp_update, timestamp_read, meta, meta_timestamp] := *sync_status{entry_type, id, unread_count, timestamp_update, timestamp_read, owner_id}, ss_particles[id, meta] or ss_chat_links[id, meta] or ss_chat_trans[id, meta], id!='${myAddress}', owner_id = '${myAddress}', meta_timestamp = maybe_get(meta, 'timestamp')\n    :order -meta_timestamp\n    `;\n\n    const result = await this.db!.runCommand(command, true);\n    const senseList = dbResultToDtoList<SenseListItem>(result);\n\n    return senseList;\n  }\n\n  public async getTransactions(\n    neuron: NeuronAddress,\n    {\n      timestampFrom = 0,\n      order = 'desc',\n    }: { order?: 'desc' | 'asc'; timestampFrom?: number } = {}\n  ) {\n    const conditions = [\n      `neuron = '${neuron}'`,\n      `timestamp >= ${timestampFrom}`,\n    ];\n    const result = await this.db!.executeGetCommand(\n      'transaction',\n      ['hash', 'type', 'success', 'value', 'timestamp', 'memo', 'index'],\n      conditions,\n      ['neuron'],\n      { orderBy: [order === 'desc' ? '-timestamp' : 'timestamp'] }\n    );\n\n    return dbResultToDtoList<TransactionDto>(result);\n  }\n\n  public async getMyChats(\n    myAddress: NeuronAddress,\n    userAddress: NeuronAddress\n  ) {\n    const result = await this.db!.executeGetCommand(\n      'transaction',\n      ['hash', 'type', 'success', 'value', 'timestamp', 'memo'],\n      [\n        `neuron = '${myAddress}', type='${MSG_SEND_TRANSACTION_TYPE}' or type='${MSG_MULTI_SEND_TRANSACTION_TYPE}'`,\n      ],\n      ['neuron'],\n      { orderBy: ['timestamp'] }\n    );\n\n    const sendTransactions = dbResultToDtoList<TransactionDto>(result);\n\n    const chats = extractSenseChats(myAddress, sendTransactions);\n    const userChats = [...chats.values()].find(\n      (c) => c.userAddress === userAddress\n    );\n\n    return userChats ? userChats.transactions : [];\n  }\n\n  public async putCyberlinks(links: LinkDto[] | LinkDto) {\n    const entitites = dtoListToEntity(Array.isArray(links) ? links : [links]);\n    return this.db!.executePutCommand('link', entitites);\n  }\n\n  public async putSyncQueue(item: SyncQueueItem[] | SyncQueueItem) {\n    const entitites = dtoListToEntity(Array.isArray(item) ? item : [item]);\n    return this.db!.executePutCommand('sync_queue', entitites);\n  }\n\n  public async existSyncQueueItem({ id, jobType }: SyncQueueKeyDto) {\n    const result = await this.db!.executeGetCommand(\n      'sync_queue',\n      ['id'],\n      [`id = '${id}'`, `job_type = ${jobType}`],\n      ['id', 'job_type']\n    );\n\n    return result.rows.length > 0;\n  }\n\n  public async existEmbedding(cid: ParticleCid) {\n    const result = await this.db!.executeGetCommand(\n      'embeddings',\n      ['cid'],\n      [`cid = '${cid}'`]\n    );\n\n    return result.rows.length > 0;\n  }\n\n  public async updateSyncQueue(\n    item: Partial<SyncQueueDto>[] | Partial<SyncQueueDto>\n  ) {\n    const entitites = dtoListToEntity(Array.isArray(item) ? item : [item]);\n    try {\n      return this.db!.executeUpdateCommand('sync_queue', entitites);\n    } catch (e) {\n      cyblog.error('----> updateSyncQueue, items will be removed', {\n        error: e,\n        data: item,\n        module: 'dbApiWrapper',\n      });\n      // eslint-disable-next-line no-restricted-syntax\n      for (const entity of entitites) {\n        if (entity) {\n          const { id, job_type: jobType = 0 } = entity;\n          // eslint-disable-next-line no-await-in-loop\n          await this.removeSyncQueue({ id: id!, jobType });\n        }\n      }\n\n      return { ok: true };\n    }\n  }\n\n  public async removeSyncQueue(id: SyncQueueKeyDto | SyncQueueKeyDto[]) {\n    const ids = dtoListToEntity(Array.isArray(id) ? id : [id]);\n\n    return this.db!.executeRmCommand('sync_queue', ids);\n  }\n\n  public async getSyncQueue({\n    statuses,\n    limit,\n  }: {\n    statuses: SyncQueueStatus[];\n    limit?: number;\n  }): Promise<SyncQueueDto[]> {\n    const result = await this.db!.executeGetCommand(\n      'sync_queue',\n      ['id', 'status', 'priority', 'job_type'],\n      [`status in [${statuses.join(',')}]`],\n      [],\n      { orderBy: ['-priority'], limit }\n    );\n\n    return result.rows.map((row) => ({\n      id: row[0] as string,\n      status: row[1] as SyncQueueStatus,\n      priority: row[2] as number,\n      jobType: row[3] as number,\n    }));\n  }\n\n  public async getLinks({\n    cid,\n    neuron,\n    timestampFrom,\n  }: {\n    cid?: ParticleCid | ParticleCid[];\n    neuron?: NeuronAddress;\n    timestampFrom?: number;\n  }) {\n    const conditions = [];\n\n    if (cid) {\n      if (!Array.isArray(cid)) {\n        conditions.push(`from='${cid}' or to='${cid}'`);\n      } else {\n        const listStr = cid.map((i) => `'${i}'`).join(', ');\n        conditions.push(`is_in(from,[${listStr}]) or is_in(to,[${listStr}])`);\n      }\n    }\n\n    neuron && conditions.push(`neuron='${neuron}'`);\n    timestampFrom && conditions.push(`timestamp > ${timestampFrom}`);\n\n    const result = await this.db!.executeGetCommand(\n      'link',\n      ['from', 'to', 'timestamp', 'neuron', 'transaction_hash'],\n      conditions,\n      [],\n      { orderBy: ['timestamp'] }\n    );\n\n    return dbResultToDtoList<LinkDto>(result);\n  }\n\n  public async searchByEmbedding(vec: number[], count?: number) {\n    const queryText = `\n    e[dist, cid] := ~embeddings:semantic{cid | query: vec([${vec}]), bind_distance: dist, k: 20, ef: 50}\n    ?[dist, cid, text] := e[dist, cid], *particle{cid, text}\n    ${count ? `\\r\\n:limit ${count}` : ''}`;\n\n    const result = await this.db!.runCommand(queryText);\n    return toListOfObjects(result);\n  }\n\n  public async putEmbedding(cid: string, vec: number[]) {\n    return this.db!.executePutCommand('embeddings', [\n      {\n        cid,\n        vec,\n      } as EmbeddinsDbEntity,\n    ]);\n  }\n}\n\nexport default DbApiWrapper;\n","type ColumnType = 'String' | 'Int' | 'Bool' | 'Float' | 'Json';\n\nexport interface Column {\n  column: string;\n  type: ColumnType;\n  is_key?: boolean;\n  index: number;\n  is_default: boolean;\n}\n\nexport interface TableSchema {\n  keys: string[];\n  values: string[];\n  columns: Record<string, Column>;\n}\n\nexport type DBValue = string | number | boolean;\n\nexport interface IDBResult {\n  headers: string[];\n  rows: Array<Array<DBValue>>;\n  ok: true;\n}\n\ninterface IDBResultError {\n  code: string;\n  display: string;\n  message: string;\n  severity: string;\n  ok: false;\n}\n\nexport class DBResultError extends Error implements Omit<IDBResultError, 'ok'> {\n  code: string;\n\n  display: string;\n\n  severity: string;\n\n  constructor(error: IDBResultError) {\n    const { message, code, display, severity } = error;\n    super(message);\n    this.code = code;\n    this.display = display;\n    this.severity = severity;\n  }\n}\n\nexport type DBSchema = Record<string, TableSchema>;\n\nexport type IndexedDbWriteMessage = {\n  type: 'indexeddb_write';\n  value: number;\n};\n\nexport type GetCommandOptions = {\n  limit?: number;\n  offset?: number;\n  orderBy?: string[];\n};\n","export default \"{\\n    :create pin {\\n        cid: String =>\\n        type: Int\\n    }\\n}\\n{\\n    :create particle {\\n        cid: String =>\\n        mime: String,\\n        text: String,\\n        blocks: Int,\\n        size: Int,\\n        size_local: Int,\\n        type: String\\n    }\\n}\\n\\n{\\n    :create link {\\n        from: String,\\n        to: String,\\n        neuron: String =>\\n        timestamp: Int,\\n        transaction_hash: String default ''\\n    }\\n}\\n{\\n    :create transaction {\\n        hash: String,\\n        index: Int,\\n        neuron: String,\\n        type: String =>\\n        block_height: Int,\\n        success: Bool,\\n        timestamp: Int,\\n        value: Json,\\n        memo: String\\n    }\\n}\\n\\n{\\n    :create sync_status {\\n        owner_id: String,\\n        id: String =>\\n        entry_type: Int,\\n        disabled: Bool,\\n        timestamp_update: Int,\\n        timestamp_read: Int,\\n        unread_count: Int,\\n        meta: Json\\n    }\\n}\\n\\n{\\n    :create config {\\n        key: String,\\n        group_key: String =>\\n        value: Json\\n    }\\n}\\n\\n{\\n    :create sync_queue {\\n        id: String,\\n        job_type: Int =>\\n        data: String default '',\\n        status: Int default 0,\\n        priority: Float default 0,\\n    }\\n}\\n\\n{\\n    :create community {\\n        owner_id: String,\\n        neuron: String =>\\n        particle: String,\\n        name: String default '',\\n        following: Bool,\\n        follower: Bool\\n    }\\n}\\n{\\n    :create embeddings {\\n        cid: String =>\\n        vec: <F32; 384>\\n    }\\n}\\n{\\n    ::hnsw create embeddings:semantic{\\n        fields: [vec],\\n        dim: 384,\\n        ef: 100,\\n        m: 16\\n    }\\n}\";","import { getRelevance } from 'src/utils/search/utils';\nimport { QueuePriority } from 'src/services/QueueManager/types';\nimport { dtoListToEntity } from 'src/utils/dto';\nimport { ParticleCid } from 'src/types/base';\nimport { DB_VERSION, type CybCozoDb } from '../cozoDb';\nimport { DbEntity, SyncQueueJobType } from '../types/entities';\nimport { SyncQueueDto } from '../types/dto';\n\nexport const fetchInitialEmbeddings = async (\n  saveSyncQueue: (syncItems: Partial<DbEntity>[]) => Promise<void>\n) => {\n  console.log(' [initial]fetch initial particles...');\n  const relevanceParticles = await getRelevance(0, 400);\n\n  const items = relevanceParticles.result.map(\n    ({ particle }: { particle: ParticleCid }) => ({\n      id: particle,\n      data: '',\n      jobType: SyncQueueJobType.particle,\n      priority: QueuePriority.LOW,\n    })\n  ) as SyncQueueDto[];\n\n  await saveSyncQueue(dtoListToEntity(items));\n};\n\nconst migrate = async (db: CybCozoDb) => {\n  const version = await db.getDbVersion();\n  console.log(`* db version - ${version}`);\n  if (version < 1.2) {\n    //\n    console.log('⚡️ Migrating to 1.1');\n    console.log('    add job_type field to sync_queue');\n    const res1 = await db.runCommand(`\n        ?[id,status,priority, job_type, data] := *sync_queue{id,status,priority}, job_type=0, data='';\n        :replace sync_queue {\n            id: String,\n            job_type: Int default 0 =>\n            data: String default '',\n            status: Int default 0,\n            priority: Float default 0,\n        }\n    `);\n    console.log(`       ok: ${res1.ok}`);\n    try {\n      console.log('    create embeddings relation');\n      const res2 = await db.runCommand(`\n        :create embeddings {\n            cid: String =>\n            vec: <F32; 384>\n        }\n      `);\n\n      console.log(`       ok: ${res2.ok}`);\n    } catch (e) {\n      console.log('* embeddings already exist');\n    }\n\n    try {\n      console.log('    create embeddings:semantic index');\n      const res3 = await db.runCommand(`\n        ::hnsw create embeddings:semantic{\n            fields: [vec],\n            dim: 384,\n            ef: 100,\n            m: 16\n        }\n    `);\n      console.log(`       ok: ${res3.ok}`);\n    } catch (e) {\n      console.log('* embeddings semantics already exist');\n    }\n    console.log('    fill queue to calculate embeddings for all particles');\n    const res4 = await db.runCommand(`\n        ?[id, data, job_type, status, priority] := *particle{cid, text, mime}, mime=\"text/plain\", job_type=1, status=0, priority=0.5, id = cid, data=text\n\n        :put sync_queue {\n            id,\n            job_type =>\n            data,\n            status,\n            priority,\n        }\n    `);\n    console.log(`       ok: ${res4.ok}`);\n    await db.setDbVersion(DB_VERSION);\n\n    return true;\n  }\n\n  return false;\n};\n\nexport default migrate;\n","import axios from 'axios';\n\nimport { CyberClient } from '@cybercongress/cyber-js';\nimport { LCD_URL } from 'src/constants/config';\nimport { ParticleCid } from 'src/types/base';\nimport { PATTERN_IPFS_HASH } from 'src/constants/patterns';\n\nimport { getIpfsHash } from '../ipfs/helpers';\nimport { encodeSlash } from '../utils';\n\n// TODO: move rank to features/rank\nexport const formatNumber = (number, toFixed) => {\n  let formatted = +number;\n\n  if (toFixed) {\n    formatted = +formatted.toFixed(toFixed);\n  }\n\n  return formatted.toLocaleString('en').replace(/,/g, ' ');\n};\n\nexport const getRankGrade = (rank) => {\n  let from;\n  let to;\n  let value;\n\n  if (rank > 0.00000276) {\n    from = 0.00000276;\n    to = 0.01;\n    value = 1;\n  } else if (rank > 0.00000254879356777504 && rank <= 0.00000276) {\n    from = 0.00000254879356777504;\n    to = 0.00000276;\n    value = 2;\n  } else if (rank > 0.00000233758713555007 && rank <= 0.00000254879356777504) {\n    from = 0.00000233758713555007;\n    to = 0.00000254879356777504;\n    value = 3;\n  } else if (rank > 0.00000191517427110014 && rank <= 0.00000233758713555007) {\n    from = 0.00000191517427110014;\n    to = 0.00000233758713555007;\n    value = 4;\n  } else if (rank > 0.00000128155497442525 && rank <= 0.00000191517427110014) {\n    from = 0.00000128155497442525;\n    to = 0.00000191517427110014;\n    value = 5;\n  } else if (rank > 0.00000022552281330043 && rank <= 0.00000128155497442525) {\n    from = 0.00000022552281330043;\n    to = 0.00000128155497442525;\n    value = 6;\n  } else if (rank > 0 && rank <= 0.00000022552281330043) {\n    from = 0;\n    to = 0.00000022552281330043;\n    value = 7;\n  } else {\n    from = 'n/a';\n    to = 'n/a';\n    value = 'n/a';\n  }\n\n  return {\n    from,\n    to,\n    value,\n  };\n};\n\nexport const getRelevance = async (page = 0, limit = 50) => {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `${LCD_URL}/cyber/rank/v1beta1/rank/top`,\n      params: {\n        'pagination.page': page,\n        'pagination.perPage': limit,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const keybaseCheck = async (identity) => {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=basics`,\n    });\n    return response.data;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n\nexport const keybaseAvatar = async (identity) => {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=pictures`,\n    });\n    return response.data;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n\nexport const authAccounts = async (address) => {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `${LCD_URL}/cosmos/auth/v1beta1/accounts/${address}`,\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\n// Access-Control-Allow-Origin\nexport const getCredit = async (address) => {\n  try {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    const fromData = {\n      denom: 'boot',\n      address,\n    };\n    const response = await axios({\n      method: 'post',\n      // url: 'http://localhost:8000/credit',\n      url: 'https://titan.cybernode.ai/credit',\n      headers,\n      data: JSON.stringify(fromData),\n    });\n\n    return response;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getSearchQuery = async (query: ParticleCid | string) =>\n  query.match(PATTERN_IPFS_HASH) ? query : getIpfsHash(encodeSlash(query));\n\nexport const searchByHash = async (\n  client: CyberClient,\n  hash: string,\n  page: number\n) => {\n  try {\n    const results = await client.search(hash, page);\n\n    return results;\n  } catch (error) {\n    // TODO: handle\n    console.error(error);\n    return undefined;\n  }\n};\n\n// don't add funcs more\n","import initCozoDb, { CozoDb } from 'cyb-cozo-lib-wasm';\nimport { createCyblogChannel } from 'src/utils/logging/cyblog';\n\nimport {\n  IDBResult,\n  Column,\n  DBSchema,\n  TableSchema,\n  GetCommandOptions,\n  DBResultError,\n} from './types/types';\nimport { DbEntity } from './types/entities';\n\nimport { clearIndexedDBStore, toListOfObjects } from './utils';\n\nimport { createCozoDbCommandFactory } from './cozoDbCommandFactory';\n\nimport initializeScript from './migrations/schema.cozo';\nimport { fetchInitialEmbeddings } from './migrations/migrations';\n\nexport const DB_NAME = 'cyb-cozo-idb';\n\nconst DB_STORE_NAME = 'cozodb';\n\nexport const DB_VERSION = 1.2;\n\ntype OnWrite = (writesCount: number) => void;\n\nlet shouldInitialize = false;\n\nfunction createCozoDb() {\n  let db: CozoDb | undefined;\n\n  let dbSchema: DBSchema = {};\n  let commandFactory: ReturnType<typeof createCozoDbCommandFactory> | undefined;\n  let onIndexedDbWrite: OnWrite | undefined;\n\n  const cyblogCh = createCyblogChannel({ thread: 'cozo' });\n\n  const loadCozoDb = async () => {\n    db = await CozoDb.new_from_indexed_db(\n      DB_NAME,\n      DB_STORE_NAME,\n      onIndexedDbWrite\n    );\n    await initDbSchema();\n  };\n\n  async function init(onWrite?: OnWrite): Promise<void> {\n    onIndexedDbWrite = onWrite;\n    await initCozoDb();\n    await loadCozoDb();\n\n    await performHardReset();\n  }\n\n  const getRelations = async (): Promise<string[]> => {\n    const result = await runCommand('::relations');\n\n    return result.rows.map((row) => row[0] as string);\n  };\n\n  const createSchema = async (tableName: string) => {\n    const columnResult = await runCommand(`::columns ${tableName}`);\n\n    const fields = toListOfObjects<Column>(columnResult);\n    const keys = fields.filter((c) => c.is_key).map((c) => c.column);\n    const values = fields.filter((c) => !c.is_key).map((c) => c.column);\n\n    // map -> column name: {...column props}\n    const columns = fields.reduce((obj, field) => {\n      obj[field.column] = field;\n      return obj;\n    }, {} as Record<string, Column>);\n\n    // schema of the table, with some pre-calc\n    const tableSchema: TableSchema = {\n      keys,\n      values,\n      columns,\n    };\n    return tableSchema;\n  };\n\n  const loadDbSchema = async () => {\n    const relations = await getRelations();\n    const schemasMap = await Promise.all(\n      relations.map(async (table) => {\n        const tableSchema = await createSchema(table);\n        return [table, tableSchema];\n      })\n    );\n    dbSchema = Object.fromEntries(schemasMap);\n    cyblogCh.info('cozoDb schema initialized: ', {\n      data: [dbSchema, relations, schemasMap],\n    });\n\n    commandFactory = createCozoDbCommandFactory(dbSchema);\n\n    cyblogCh.info('cozoDb schema initialized: ', {\n      data: [dbSchema, relations, schemasMap],\n    });\n\n    return dbSchema;\n  };\n\n  const initDbSchema = async (): Promise<void> => {\n    await loadDbSchema();\n\n    shouldInitialize = Object.keys(dbSchema).length === 0;\n    if (shouldInitialize) {\n      cyblogCh.info('   cozoDb - apply DB schema', initializeScript);\n      const result = await runCommand(initializeScript);\n\n      await loadDbSchema();\n\n      // if initialized set initial version\n      await setDbVersion(DB_VERSION);\n\n      await fetchInitialEmbeddings(async (items: Partial<DbEntity>[]) => {\n        console.log(' [initial]save initial particles...');\n        await put('sync_queue', items);\n      });\n    }\n  };\n\n  const getDbVersion = async () => {\n    const versionData = await get(\n      'config',\n      ['value'],\n      ['key = \"DB_VERSION\"'],\n      ['key']\n    );\n\n    return (versionData.rows?.[0]?.[0] as number) || 0;\n  };\n\n  const setDbVersion = async (version: number) => {\n    const result = await put('config', [\n      {\n        key: 'DB_VERSION',\n        group_key: 'system',\n        value: version,\n      },\n    ]);\n\n    // console.log('CozoDb >>> setDbVersion', version, result);\n    return result;\n  };\n\n  const performHardReset = async () => {\n    // if (!dbSchema.community) {\n    //   const result = await runCommand(communityScript);\n    //   console.log('CozoDb >>> migration: creating community relation....');\n    //   dbSchema.community = await createSchema('community');\n    // }\n    if (!dbSchema.transaction.values.includes('block_height')) {\n      cyblogCh.info('💀 HARD RESET experemental db...');\n      await clearIndexedDBStore(DB_NAME, DB_STORE_NAME);\n      await init(onIndexedDbWrite);\n      await setDbVersion(DB_VERSION);\n\n      // await setDbVersion(DB_VERSION);\n    }\n    // const version = await getVersion();\n    // console.log(`DB Version ${version}`);\n  };\n\n  const runCommand = async (\n    command: string,\n    immutable = false\n  ): Promise<IDBResult> => {\n    if (!db) {\n      throw new Error('DB is not initialized');\n    }\n    const resultStr = await db.run(command, '', immutable);\n    const result = JSON.parse(resultStr);\n\n    if (!result.ok) {\n      console.log('----> runCommand error ', command, result);\n      throw new DBResultError(result);\n    }\n\n    return result;\n  };\n\n  const put = async (\n    tableName: string,\n    array: Partial<DbEntity>[]\n  ): Promise<IDBResult> => {\n    if (array.length === 0) {\n      throw new DBResultError({\n        code: '-1',\n        message: `cant PUT [] into ${tableName}`,\n        display: '',\n        severity: '',\n        ok: false,\n      });\n    }\n    return runCommand(commandFactory!.generatePut(tableName, array));\n  };\n\n  const rm = async (\n    tableName: string,\n    keyValues: Partial<DbEntity>[]\n  ): Promise<IDBResult> =>\n    runCommand(commandFactory!.generateRm(tableName, keyValues));\n\n  const update = async (\n    tableName: string,\n    array: Partial<DbEntity>[]\n  ): Promise<IDBResult> =>\n    runCommand(commandFactory!.generateUpdate(tableName, array));\n\n  const get = async (\n    tableName: string,\n    selectFields: string[] = [],\n    conditions: string[] = [],\n    conditionFields: string[] = [],\n    options: GetCommandOptions = {}\n  ): Promise<IDBResult> =>\n    runCommand(\n      commandFactory!.generateGet(\n        tableName,\n        selectFields,\n        conditions,\n        conditionFields,\n        options\n      ),\n      true\n    );\n\n  const importRelations = (content: string) =>\n    JSON.parse(db!.import_relations(content));\n\n  const exportRelations = (relations: string[]) =>\n    JSON.parse(db!.export_relations(JSON.stringify({ relations })));\n\n  return {\n    init,\n    put,\n    get,\n    rm,\n    update,\n    runCommand,\n    getCommandFactory: () => commandFactory,\n    importRelations,\n    exportRelations,\n    getDbVersion,\n    setDbVersion,\n    loadDbSchema,\n  };\n}\n\n// const cozoDb = createCozoDb();\n\nexport type CybCozoDb = ReturnType<typeof createCozoDb>;\n\nexport default createCozoDb();\n","import { Column, DBSchema, GetCommandOptions } from './types/types';\nimport { DbEntity } from './types/entities';\nimport { entityToArray } from './utils';\n\nexport function createCozoDbCommandFactory(dbSchema: DBSchema) {\n  const schema = dbSchema;\n\n  const generateRmCommand = (tableName: string, keys: string[]): string => {\n    return `:rm ${tableName} {${keys}}`;\n  };\n\n  const generateModifyCommand = (\n    tableName: string,\n    command: 'put' | 'update' = 'put',\n    fieldNames: string[] = []\n  ): string => {\n    const { keys, values } = schema[tableName];\n    const hasValues = values.length > 0;\n\n    const actualValues =\n      fieldNames.length > 0\n        ? fieldNames.filter((f) => values.includes(f))\n        : values;\n\n    return !hasValues\n      ? `:${command} ${tableName} {${keys}}`\n      : `:${command} ${tableName} {${keys} => ${actualValues}}`;\n  };\n\n  const generateAtomCommand = (\n    tableName: string,\n    items: Partial<DbEntity>[],\n    fieldNames: string[] = []\n  ): string => {\n    const tableSchema = dbSchema[tableName];\n\n    const selectedColumns =\n      fieldNames.length > 0\n        ? Object.keys(tableSchema.columns).reduce((acc, key) => {\n            if (fieldNames.includes(key)) {\n              acc[key] = tableSchema.columns[key];\n            }\n            return acc;\n          }, {} as Record<string, Column>)\n        : tableSchema.columns;\n\n    const colKeys = Object.keys(selectedColumns);\n    const colValues = Object.values(selectedColumns) as Column[];\n\n    return `?[${colKeys.join(', ')}] <- [${items\n      .map((item) => entityToArray(item, colValues))\n      .join(', ')}]`;\n  };\n\n  const generatePut = (tableName: string, array: Partial<DbEntity>[]) => {\n    const fields = Object.keys(array[0]);\n    const atomCommand = generateAtomCommand(tableName, array, fields);\n    const putCommand = generateModifyCommand(tableName, 'put');\n    return `${atomCommand}\\r\\n${putCommand}`;\n  };\n\n  const generateRm = (tableName: string, keyValues: Partial<DbEntity>[]) => {\n    const { keys } = schema[tableName];\n\n    const atomCommand = generateAtomCommand(tableName, keyValues, keys);\n    const rmCommand = generateRmCommand(tableName, keys);\n    return `${atomCommand}\\r\\n${rmCommand}`;\n  };\n\n  const generateUpdate = (tableName: string, array: Partial<DbEntity>[]) => {\n    // align fields by first entity\n    const fields = Object.keys(array[0]);\n    const atomCommand = generateAtomCommand(tableName, array, fields);\n    const updateCommand = generateModifyCommand(tableName, 'update', fields);\n    return `${atomCommand}\\r\\n${updateCommand}`;\n  };\n\n  const generateGet = (\n    tableName: string,\n    selectFields: string[] = [],\n    conditions: string[] = [],\n    conditionFields: string[] = [],\n    options: GetCommandOptions = {}\n  ) => {\n    const tableSchema = dbSchema[tableName];\n\n    const queryFields =\n      selectFields.length > 0 ? selectFields : Object.keys(tableSchema.columns);\n\n    const requiredFields = [...queryFields, ...conditionFields];\n\n    const conditionsStr =\n      conditions.length > 0 ? `, ${conditions.join(', ')} ` : '';\n\n    const orderByStr = options.orderBy ? `:order ${options.orderBy}` : '';\n    const limitStr = options.limit ? `:limit ${options.limit}` : '';\n    const offsetStr = options.limit ? `:offset ${options.offset}` : '';\n    return `?[${queryFields.join(', ')}] := *${tableName}{${requiredFields.join(\n      ', '\n    )}} ${conditionsStr} ${orderByStr} ${limitStr} ${offsetStr}`;\n  };\n\n  return {\n    generateModifyCommand,\n    generateAtomCommand,\n    generatePut,\n    generateGet,\n    generateUpdate,\n    generateRm,\n  };\n}\n","import {\n  ServiceName,\n  SyncState,\n  ServiceStatus,\n  BroadcastChannelMessage,\n  MlSyncState,\n} from 'src/services/backend/types/services';\nimport { assocPath } from 'ramda';\nimport { CommunityDto } from 'src/services/CozoDb/types/dto';\nimport { NeuronAddress } from 'src/types/base';\n\nimport { removeDublicates } from 'src/utils/list';\nimport { clone } from 'lodash';\nimport { SYNC_ENTRIES_TO_TRACK_PROGRESS } from 'src/services/backend/services/sync/services/consts';\nimport { syncEntryNameToReadable } from 'src/services/backend/services/sync/utils';\n\nexport const RESET_SYNC_STATE_ACTION_NAME = 'reset_sync_entry';\n\ntype BackendState = {\n  dbPendingWrites: number;\n  syncState: SyncState;\n  mlState: MlSyncState;\n  community: {\n    isLoaded: boolean;\n    raw: CommunityDto[];\n    following: NeuronAddress[];\n    followers: NeuronAddress[];\n    friends: NeuronAddress[];\n  };\n  services: {\n    [key in ServiceName]: {\n      status: ServiceStatus;\n      error?: string;\n      message?: string;\n    };\n  };\n};\n\nconst initialSyncState = {\n  // status: 'inactive',\n  entryStatus: {},\n  totalEstimatedTime: 0,\n  message: '',\n  inProgress: false,\n  completeIntialSyncEntries: [],\n  initialSyncDone: false,\n};\n\nconst initialState: BackendState = {\n  dbPendingWrites: 0,\n  community: {\n    isLoaded: false,\n    raw: [],\n    following: [],\n    followers: [],\n    friends: [],\n  },\n  syncState: initialSyncState,\n  mlState: { entryStatus: {} },\n  services: {\n    db: { status: 'inactive' },\n    ipfs: { status: 'inactive' },\n    sync: { status: 'inactive' },\n    ml: { status: 'inactive' },\n    rune: { status: 'inactive' },\n  },\n};\n\n// Backend state\nfunction backendReducer(\n  state = initialState,\n  action:\n    | BroadcastChannelMessage\n    | {\n        type: typeof RESET_SYNC_STATE_ACTION_NAME;\n      }\n) {\n  switch (action.type) {\n    case 'indexeddb_write': {\n      return assocPath(['dbPendingWrites'], action.value, state);\n    }\n\n    case RESET_SYNC_STATE_ACTION_NAME: {\n      return { ...state, syncState: initialSyncState };\n    }\n    case 'sync_entry': {\n      const { entry, state: entryState } = action.value;\n      const updatedEntry = {\n        ...state.syncState.entryStatus[entry],\n        ...entryState,\n      };\n      const newState = assocPath(\n        ['syncState', 'entryStatus', entry],\n        updatedEntry,\n        state\n      );\n\n      const messages: string[] = [];\n      let totalEstimatedTime = 0;\n      const { entryStatus, completeIntialSyncEntries } = newState.syncState;\n      const newCompleteIntitalSyncEntries = clone(completeIntialSyncEntries);\n      SYNC_ENTRIES_TO_TRACK_PROGRESS.forEach((name) => {\n        if (entryStatus[name]) {\n          const { progress, status } = newState.syncState.entryStatus[name]!;\n\n          // Push flags that initial sync was done\n          if (\n            status &&\n            ['active', 'listen'].some((s) => s === status) &&\n            !completeIntialSyncEntries.some((entryName) => entryName === name)\n          ) {\n            newCompleteIntitalSyncEntries.push(name);\n          }\n\n          if (progress && status === 'in-progress') {\n            totalEstimatedTime += progress.estimatedTime;\n            const percents = Math.round(\n              (progress.completeCount / progress.totalCount) * 100\n            );\n            messages.push(`${syncEntryNameToReadable(name)}: ${percents}%`);\n          }\n        }\n      });\n\n      const initialSyncDone = SYNC_ENTRIES_TO_TRACK_PROGRESS.reduce(\n        (prev, curr) =>\n          prev && newCompleteIntitalSyncEntries.some((n) => n === curr),\n        true\n      );\n\n      newState.syncState = {\n        ...newState.syncState,\n        message: messages.join(', '),\n        totalEstimatedTime,\n        inProgress: messages.length > 0,\n        completeIntialSyncEntries: newCompleteIntitalSyncEntries,\n        initialSyncDone,\n      };\n\n      return newState;\n    }\n\n    case 'service_status': {\n      const { name, status, message } = action.value;\n      return assocPath(['services', name], { status, message }, state);\n    }\n\n    case 'load_community': {\n      const { action: stateAction, items } = action.value;\n      // console.log('------------load_community', stateAction, items, state);\n      if (stateAction === 'reset') {\n        const community = {\n          isLoaded: false,\n          raw: [],\n          following: [],\n          followers: [],\n          friends: [],\n        };\n        return { ...state, community };\n      }\n      const allItems = [...state.community.raw, ...items];\n\n      const community = {\n        isLoaded: stateAction === 'complete',\n        raw: allItems,\n        following: removeDublicates(\n          allItems\n            .filter((item) => item.following && !item.follower)\n            .map((item) => item.neuron)\n        ),\n        followers: removeDublicates(\n          allItems\n            .filter((item) => item.follower && !item.following)\n            .map((item) => item.neuron)\n        ),\n        friends: removeDublicates(\n          allItems\n            .filter((item) => item.follower && item.following)\n            .map((item) => item.neuron)\n        ),\n      };\n\n      return { ...state, community };\n    }\n\n    case 'sync_ml_entry': {\n      const { entry, state: entryState } = action.value;\n\n      // console.log('------sync_ml_entry', action, entryState);\n      const newState = assocPath(\n        ['mlState', 'entryStatus', entry],\n        entryState,\n        state\n      );\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default backendReducer;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { proxy, Remote } from 'comlink';\nimport { backgroundWorkerInstance } from 'src/services/backend/workers/background/service';\nimport { cozoDbWorkerInstance } from 'src/services/backend/workers/db/service';\nimport RxBroadcastChannelListener from 'src/services/backend/channels/RxBroadcastChannelListener';\n\nimport { CybIpfsNode } from 'src/services/ipfs/types';\nimport { getIpfsOpts } from 'src/services/ipfs/config';\nimport { selectCurrentAddress } from 'src/redux/features/pocket';\nimport DbApiWrapper from 'src/services/backend/services/DbApi/DbApi';\nimport { CozoDbWorker } from 'src/services/backend/workers/db/worker';\nimport { BackgroundWorker } from 'src/services/backend/workers/background/worker';\n\nimport { DB_NAME } from 'src/services/CozoDb/cozoDb';\nimport { RESET_SYNC_STATE_ACTION_NAME } from 'src/redux/reducers/backend';\nimport BroadcastChannelSender from 'src/services/backend/channels/BroadcastChannelSender';\n// import BroadcastChannelListener from 'src/services/backend/channels/BroadcastChannelListener';\n\nimport { Observable } from 'rxjs';\nimport { EmbeddingApi } from 'src/services/backend/workers/background/api/mlApi';\nimport { SenseApi, createSenseApi } from './services/senseApi';\nimport { RuneEngine } from 'src/services/scripting/engine';\nimport { Option } from 'src/types';\n\nconst setupStoragePersistence = async () => {\n  let isPersistedStorage = await navigator.storage.persisted();\n  if (!isPersistedStorage) {\n    await navigator.permissions.query({ name: 'persistent-storage' });\n    isPersistedStorage = await navigator.storage.persisted();\n  }\n  const message = isPersistedStorage\n    ? `🔰 storage is persistent`\n    : `⚠️ storage is non-persitent`;\n\n  console.log(message);\n\n  return isPersistedStorage;\n};\n\ntype BackendProviderContextType = {\n  cozoDbRemote: Remote<CozoDbWorker> | null;\n  senseApi: SenseApi;\n  ipfsApi: Remote<BackgroundWorker['ipfsApi']> | null;\n  dbApi: DbApiWrapper | null;\n  ipfsError?: string | null;\n  isIpfsInitialized: boolean;\n  isDbInitialized: boolean;\n  isSyncInitialized: boolean;\n  isReady: boolean;\n  embeddingApi$: Promise<Observable<EmbeddingApi>>;\n  rune: Remote<RuneEngine>;\n};\n\nconst valueContext = {\n  cozoDbRemote: null,\n  senseApi: null,\n  isIpfsInitialized: false,\n  isDbInitialized: false,\n  isSyncInitialized: false,\n  isReady: false,\n  dbApi: null,\n  ipfsApi: null,\n};\n\nconst BackendContext =\n  React.createContext<BackendProviderContextType>(valueContext);\n\nexport function useBackend() {\n  return useContext(BackendContext);\n}\n\nwindow.cyb.db = {\n  clear: () => indexedDB.deleteDatabase(DB_NAME),\n};\n\nfunction BackendProvider({ children }: { children: React.ReactNode }) {\n  const dispatch = useAppDispatch();\n  // const { defaultAccount } = useAppSelector((state) => state.pocket);\n\n  const [ipfsError, setIpfsError] = useState(null);\n\n  const isDbInitialized = useAppSelector(\n    (state) => state.backend.services.db.status === 'started'\n  );\n  const isIpfsInitialized = useAppSelector(\n    (state) => state.backend.services.ipfs.status === 'started'\n  );\n  const isSyncInitialized = useAppSelector(\n    (state) => state.backend.services.sync.status === 'started'\n  );\n\n  const myAddress = useAppSelector(selectCurrentAddress);\n\n  const { friends, following } = useAppSelector(\n    (state) => state.backend.community\n  );\n\n  // // TODO: preload from DB\n  const followings = useMemo(() => {\n    return Array.from(new Set([...friends, ...following]));\n  }, [friends, following]);\n\n  const isReady = isDbInitialized && isIpfsInitialized && isSyncInitialized;\n  const [embeddingApi$, setEmbeddingApi] =\n    useState<Option<Observable<EmbeddingApi>>>(undefined);\n  // const embeddingApiRef = useRef<Observable<EmbeddingApi>>();\n  useEffect(() => {\n    console.log(\n      process.env.IS_DEV\n        ? '🧪 Starting backend in DEV mode...'\n        : '🧬 Starting backend in PROD mode...'\n    );\n\n    (async () => {\n      // embeddingApiRef.current = await backgroundWorkerInstance.embeddingApi$;\n      const embeddingApiInstance$ =\n        await backgroundWorkerInstance.embeddingApi$;\n      setEmbeddingApi(embeddingApiInstance$);\n    })();\n\n    setupStoragePersistence();\n\n    const channel = new RxBroadcastChannelListener(dispatch);\n\n    backgroundWorkerInstance.ipfsApi\n      .start(getIpfsOpts())\n      .then(() => {\n        setIpfsError(null);\n      })\n      .catch((err) => {\n        setIpfsError(err);\n        console.log(`☠️ Ipfs error: ${err}`);\n      });\n\n    cozoDbWorkerInstance.init().then(() => {\n      // const dbApi = createDbApi();\n      const dbApi = new DbApiWrapper();\n\n      dbApi.init(proxy(cozoDbWorkerInstance));\n      setDbApi(dbApi);\n      // pass dbApi into background worker\n      return backgroundWorkerInstance.injectDb(proxy(dbApi));\n    });\n  }, []);\n\n  useEffect(() => {\n    backgroundWorkerInstance.setParams({ myAddress });\n    dispatch({ type: RESET_SYNC_STATE_ACTION_NAME });\n  }, [myAddress, dispatch]);\n\n  useEffect(() => {\n    isReady && console.log('🟢 backend started!');\n  }, [isReady]);\n\n  const [dbApi, setDbApi] = useState<DbApiWrapper | null>(null);\n\n  const senseApi = useMemo(() => {\n    if (isDbInitialized && dbApi && myAddress) {\n      return createSenseApi(dbApi, myAddress, followings);\n    }\n    return null;\n  }, [isDbInitialized, dbApi, myAddress, followings]);\n\n  useEffect(() => {\n    (async () => {\n      backgroundWorkerInstance.setRuneDeps({\n        address: myAddress,\n        // TODO: proxify particular methods\n        // senseApi: senseApi ? proxy(senseApi) : undefined,\n        // signingClient: signingClient ? proxy(signingClient) : undefined,\n      });\n    })();\n  }, [myAddress]);\n\n  const ipfsApi = useMemo(\n    () => (isIpfsInitialized ? backgroundWorkerInstance.ipfsApi : null),\n    [isIpfsInitialized]\n  );\n\n  const valueMemo = useMemo(\n    () =>\n      ({\n        rune: backgroundWorkerInstance.rune,\n        embeddingApi$: backgroundWorkerInstance.embeddingApi$,\n        cozoDbRemote: cozoDbWorkerInstance,\n        ipfsApi,\n        dbApi,\n        senseApi,\n        ipfsError,\n        isIpfsInitialized,\n        isDbInitialized,\n        isSyncInitialized,\n        isReady,\n      } as BackendProviderContextType),\n    [\n      isReady,\n      isIpfsInitialized,\n      isDbInitialized,\n      isSyncInitialized,\n      ipfsError,\n      senseApi,\n      dbApi,\n      ipfsApi,\n    ]\n  );\n\n  return (\n    <BackendContext.Provider value={valueMemo}>\n      {children}\n    </BackendContext.Provider>\n  );\n}\n\nexport default BackendProvider;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Dots.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Dots.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { CONTRACT_ADDRESS_PASSPORT } from 'src/containers/portal/utils';\nimport { toAscii, toBase64 } from '@cosmjs/encoding';\nimport { PassportContractQuery } from 'src/services/soft.js/api/passport';\n\nimport axios from 'axios';\nimport defaultNetworks from 'src/constants/defaultNetworks';\n\n// need this request to query passports with any queryClient chain\n// eslint-disable-next-line import/prefer-default-export\nexport async function getPassport(query: PassportContractQuery) {\n  const response = await axios.get(\n    `${\n      defaultNetworks.bostrom.LCD_URL\n    }/cosmwasm/wasm/v1/contract/${CONTRACT_ADDRESS_PASSPORT}/smart/${toBase64(\n      toAscii(JSON.stringify(query))\n    )}`\n  );\n  return response.data.data;\n}\n","import {\n  PayloadAction,\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n} from '@reduxjs/toolkit';\nimport { Citizenship } from 'src/types/citizenship';\nimport { CyberClient } from '@cybercongress/cyber-js';\nimport { RootState } from 'src/redux/store';\nimport { AppThunk } from 'src/redux/types';\nimport { selectCurrentAddress } from 'src/redux/features/pocket';\nimport { Accounts } from 'src/types/defaultAccount';\nimport { PASSPORT_NOT_EXISTS_ERROR } from './constants';\nimport { getPassport as getPassportQuery } from 'src/services/passports/lcd';\n\nexport type SliceState = {\n  // address\n  [key in string]?: {\n    data?: Citizenship | null;\n    loading: boolean;\n  };\n};\n\nconst initialState: SliceState = {};\n\nexport function getCommunityPassports(queryClient: CyberClient): AppThunk {\n  return (dispatch, getState) => {\n    const {\n      backend: { community },\n      passports,\n    } = getState();\n    const { following, followers, friends } = community;\n    [...friends, ...following, ...followers].forEach((address) => {\n      const passport = passports[address];\n      if (!passport?.data && !passport?.loading) {\n        dispatch(getPassport({ address, queryClient }));\n      }\n    });\n  };\n}\n\nexport function getAccountsPassports(queryClient: CyberClient): AppThunk {\n  return (dispatch, getState) => {\n    const { pocket, passports } = getState();\n    const { accounts } = pocket;\n\n    if (accounts === null) {\n      return;\n    }\n\n    Object.keys(accounts).forEach((key) => {\n      const item = accounts[key];\n      const address = item.cyber.bech32;\n      const passport = passports[address];\n      if (!passport?.data && !passport?.loading) {\n        dispatch(getPassport({ address, queryClient }));\n      }\n    });\n  };\n}\n\nconst getPassport = createAsyncThunk(\n  'passports/getPassport',\n  async ({ address }: { address: string }) => {\n    const response = await getPassportQuery({\n      active_passport: {\n        address,\n      },\n    });\n\n    return response;\n  }\n);\n\nconst slice = createSlice({\n  name: 'passports',\n  initialState,\n  reducers: {\n    addAddress: (\n      state,\n      {\n        payload: { address, currentAddress },\n      }: PayloadAction<{\n        address: string;\n        currentAddress: string;\n      }>\n    ) => {\n      if (\n        !(\n          state[currentAddress]?.data &&\n          state[currentAddress].data.extension.addresses\n        )\n      ) {\n        return;\n      }\n\n      state[currentAddress].data.extension.addresses.push({\n        label: null,\n        address,\n      });\n    },\n\n    deleteAddress: (\n      state,\n      {\n        payload: { address, currentAddress },\n      }: PayloadAction<{\n        address: string;\n        currentAddress: string;\n      }>\n    ) => {\n      if (\n        !(\n          state[currentAddress]?.data &&\n          state[currentAddress].data.extension.addresses\n        )\n      ) {\n        return;\n      }\n\n      state[currentAddress].data.extension.addresses = state[\n        currentAddress\n      ].data.extension.addresses.filter((item) => item.address !== address);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getPassport.pending, (state, action) => {\n      state[action.meta.arg.address] = {\n        loading: true,\n      };\n    });\n\n    builder.addCase(getPassport.fulfilled, (state, action) => {\n      Object.assign(state[action.meta.arg.address]!, {\n        loading: false,\n        data: action.payload,\n      });\n    });\n\n    builder.addCase(getPassport.rejected, (state, action) => {\n      if (action.error.message !== PASSPORT_NOT_EXISTS_ERROR) {\n        console.error(action);\n      }\n\n      Object.assign(state[action.meta.arg.address]!, {\n        loading: false,\n        data: null,\n      });\n    });\n  },\n});\n\nexport const selectCommunityPassports = createSelector(\n  (state: RootState) => state.backend.community,\n  (state: RootState) => state.passports,\n  (community, passports) => {\n    const { following, followers, friends } = community;\n\n    function process(addresses: string[]) {\n      return addresses.reduce<SliceState>((acc, value) => {\n        acc[value] = passports[value];\n        return acc;\n      }, {});\n    }\n\n    return {\n      following: process(following),\n      followers: process(followers),\n      friends: process(friends),\n    };\n  }\n);\n\nexport const selectAccountsPassports = createSelector(\n  (state: RootState) => state.pocket.accounts,\n  (state: RootState) => state.passports,\n  (accounts, passports) => {\n    function process(addresses: Accounts) {\n      return Object.keys(addresses).reduce<SliceState>((acc, key) => {\n        const item = addresses[key];\n        const address = item.cyber.bech32;\n        acc[address] = passports[address];\n        return acc;\n      }, {});\n    }\n\n    return {\n      accounts: accounts ? process(accounts) : {},\n    };\n  }\n);\n\nexport const selectCurrentPassport = createSelector(\n  selectCurrentAddress,\n  (state: RootState) => state.passports,\n  (address, passports) => (address ? passports[address]?.data : undefined)\n);\n\nexport const { deleteAddress, addAddress } = slice.actions;\n\nexport { getPassport };\n\nexport default slice.reducer;\n","export const PASSPORT_NOT_EXISTS_ERROR =\n  'Query failed with (18): alloc::string::String not found: query wasm contract failed: invalid request';\n","import { useEffect, useRef, useState, useCallback } from 'react';\nimport {\n  FetchParticleAsync,\n  QueueItemOptions,\n  QueueItemStatus,\n  QueuePriority,\n} from 'src/services/QueueManager/types';\n\nimport {\n  FetchWithDetailsFunc,\n  IPFSContent,\n  IpfsContentSource,\n} from 'src/services/ipfs/types';\nimport { useBackend } from 'src/contexts/backend/backend';\nimport { proxy } from 'comlink';\nimport { Option } from 'src/types';\n\ntype UseIpfsContentReturn = {\n  isReady: boolean;\n  status: QueueItemStatus;\n  source?: IpfsContentSource;\n  content: Option<IPFSContent>;\n  clear?: () => Promise<void>;\n  cancel?: (cid: string) => Promise<void>;\n  fetchParticle?: (cid: string, rank?: number) => Promise<void>;\n  fetchParticleAsync?: FetchParticleAsync;\n  fetchWithDetails?: FetchWithDetailsFunc;\n};\n\nfunction useQueueIpfsContent(parentId?: string): UseIpfsContentReturn {\n  const [status, setStatus] = useState<QueueItemStatus>();\n  const [source, setSource] = useState<IpfsContentSource | undefined>();\n  const [content, setContent] = useState<Option<IPFSContent>>();\n  const prevParentIdRef = useRef<string | undefined>();\n\n  const {\n    // backgroundWorker: backendApi,\n    ipfsApi,\n    isIpfsInitialized,\n  } = useBackend();\n\n  const fetchParticle = useCallback(\n    async (cid: string, rank?: number) => {\n      setContent(undefined);\n      setStatus('pending');\n      setSource(undefined);\n\n      const callback = (\n        cid: string,\n        status: QueueItemStatus,\n        source: IpfsContentSource,\n        result: Option<IPFSContent>\n      ) => {\n        setStatus(status);\n        setSource(source);\n        if (status === 'completed') {\n          (async () => Promise.resolve(result).then(setContent))();\n        }\n      };\n      await ipfsApi?.enqueue(cid, proxy(callback), {\n        parent: parentId,\n        priority: QueuePriority.URGENT, //rank || 0,\n        viewPortPriority: 0,\n      });\n    },\n    [parentId, ipfsApi]\n  );\n\n  const fetchParticleAsync = useCallback(\n    async (cid: string, options?: QueueItemOptions) =>\n      ipfsApi?.enqueueAndWait(cid, options),\n    [ipfsApi]\n  );\n\n  useEffect(() => {\n    if (prevParentIdRef.current !== parentId) {\n      if (prevParentIdRef.current) {\n        ipfsApi?.dequeueByParent(prevParentIdRef.current);\n      }\n      prevParentIdRef.current = parentId;\n    }\n  }, [parentId, ipfsApi]);\n\n  return {\n    isReady: !!ipfsApi && isIpfsInitialized,\n    status,\n    source,\n    content,\n    cancel: ipfsApi ? (cid: string) => ipfsApi.dequeue(cid) : undefined,\n    clear: ipfsApi ? async () => ipfsApi.clearQueue() : undefined,\n    fetchParticle: ipfsApi ? fetchParticle : undefined,\n    fetchParticleAsync: ipfsApi ? fetchParticleAsync : undefined,\n    fetchWithDetails: ipfsApi ? ipfsApi.fetchWithDetails : undefined,\n  };\n}\n\nexport default useQueueIpfsContent;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import useQueueIpfsContent from 'src/hooks/useQueueIpfsContent';\nimport cx from 'classnames';\nimport { useQuery } from '@tanstack/react-query';\nimport styles from './styles.module.scss';\n\nconst getRoboHashImage = (addressCyber: string) =>\n  `https://robohash.org/${addressCyber}`;\n\ntype Props = {\n  cidAvatar?: string;\n  img?: string;\n  addressCyber?: string;\n  className?: string;\n};\n\nfunction AvatarImgIpfs({\n  img = '',\n  cidAvatar,\n  addressCyber,\n  className,\n  ...props\n}: Props) {\n  const { fetchWithDetails } = useQueueIpfsContent();\n\n  const { data: avatar } = useQuery(\n    ['getAvatar', cidAvatar],\n    async () => {\n      const details = await fetchWithDetails!(cidAvatar!, 'image');\n      return details?.content || null;\n    },\n    {\n      enabled: Boolean(fetchWithDetails && cidAvatar),\n    }\n  );\n\n  const avatarImage =\n    avatar ||\n    (addressCyber && getRoboHashImage(addressCyber)) ||\n    img ||\n    getRoboHashImage('null');\n\n  return (\n    <img\n      {...props}\n      src={avatarImage}\n      className={cx(styles.imgAvatar, className)}\n      alt=\"img-avatar\"\n    />\n  );\n}\n\nexport default AvatarImgIpfs;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./account.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./account.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { Props as AdviserProps } from './Adviser/Adviser';\n\ntype ContextType = {\n  setAdviser: (\n    content: AdviserProps['children'],\n    color?: AdviserProps['color']\n  ) => void;\n  setAdviserNew: (\n    id: string,\n    content: AdviserProps['children'],\n    color?: AdviserProps['color']\n  ) => void;\n  content: AdviserProps['children'];\n  color?: AdviserProps['color'];\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n};\n\nconst AdviserContext = React.createContext<ContextType>({\n  content: '',\n\n  /*\n   * @deprecated use setAdviserNew\n   */\n  setAdviser: () => {},\n  setAdviserNew: () => {},\n  isOpen: false,\n  setIsOpen: () => {},\n});\n\nconst AdviserContext2 = React.createContext<ContextType['setAdviserNew']>({});\n\nexport function useAdviser() {\n  const context = React.useContext(AdviserContext);\n  if (!context) {\n    throw new Error('useAdviser must be used within a AdviserProvider');\n  }\n  return context;\n}\n\nexport function useSetAdviser() {\n  const setAdviser = useContext(AdviserContext2);\n\n  return { setAdviser };\n}\n\n// enum Priority {\n//   HIGH,\n// }\n\ntype StateItem = {\n  id: string;\n  content: AdviserProps['children'];\n  color?: AdviserProps['color'];\n  isPriority: boolean;\n};\n\ntype State = StateItem[];\n\nconst NO_ID = 'NO_ID';\n\nfunction AdviserProvider({ children }: { children: React.ReactNode }) {\n  const [isOpen, setIsOpen] = useState<ContextType['isOpen']>(false);\n\n  const [state, setState] = useState<State>([]);\n\n  const handleSetAdviser = useCallback(\n    (id: string, content, color, priority) => {\n      setState((prev) => {\n        const newState = prev.filter((item) => item.id !== id);\n\n        const n = [...newState];\n\n        if (content) {\n          n.push({\n            id,\n            content,\n            color,\n            isPriority: priority,\n          });\n        }\n\n        return n;\n      });\n\n      setIsOpen(true);\n    },\n    []\n  );\n\n  const handleSetAdviserLegacy = useCallback(\n    (content, color) => {\n      handleSetAdviser(NO_ID, content, color);\n    },\n    [handleSetAdviser]\n  );\n\n  const priorityItem = [...state].reverse().find((item) => item.isPriority);\n  const lastItem = priorityItem || state[state.length - 1];\n\n  const { content, color } = lastItem || {};\n\n  const value = useMemo(() => {\n    return {\n      setAdviser: handleSetAdviserLegacy,\n      // need some refactor\n      setAdviserNew: handleSetAdviser,\n      content,\n      color,\n      setIsOpen,\n      isOpen,\n    };\n  }, [content, color, isOpen, handleSetAdviser, handleSetAdviserLegacy]);\n\n  return (\n    <AdviserContext.Provider value={value}>\n      {/* second context to prevent rerenders */}\n      <AdviserContext2.Provider value={handleSetAdviser}>\n        {children}\n      </AdviserContext2.Provider>\n    </AdviserContext.Provider>\n  );\n}\n\nexport default AdviserProvider;\n","import { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useSetAdviser } from 'src/features/adviser/context';\nimport { routes } from 'src/routes';\nimport { Dots } from 'src/components';\nimport useId from 'src/hooks/useId';\nimport { Props as AdviserProps } from 'src/features/adviser/Adviser/Adviser';\n\ntype Props =\n  | {\n      isLoading?: boolean;\n      loadingText?: string;\n      error?: string | undefined;\n      defaultText?: string | Element;\n      successText?: string;\n      txHash?: string;\n\n      priority?: boolean;\n    }\n  | undefined;\n\nfunction useAdviserTexts(\n  {\n    isLoading,\n    error,\n    defaultText,\n    txHash,\n    loadingText,\n    successText,\n    priority,\n  } = {} as Props\n) {\n  const { setAdviser } = useSetAdviser();\n\n  const [messageShowed, setMessageShowed] = useState(false);\n\n  const key = useId();\n\n  const setAdviserFunc = useCallback(\n    (\n      content: AdviserProps['children'],\n      color?: AdviserProps['color'],\n      priority\n    ) => {\n      setAdviser(key, content, color, priority);\n    },\n    [setAdviser, key]\n  );\n\n  const set2 = useCallback(() => {\n    setTimeout(() => {\n      setMessageShowed(true);\n    }, 4 * 1000);\n  }, [setMessageShowed]);\n\n  useEffect(() => {\n    let adviserText = '';\n    let color;\n\n    if (error && !messageShowed) {\n      adviserText = (\n        <p>\n          {error}{' '}\n          {txHash && (\n            <Link to={routes.txExplorer.getLink(txHash)}>check tx</Link>\n          )}\n        </p>\n      );\n      color = 'red';\n    } else if (isLoading) {\n      adviserText = loadingText ? (\n        <>\n          {loadingText}\n          <Dots />\n        </>\n      ) : (\n        'Loading...'\n      );\n      color = 'yellow';\n    } else if (successText && !messageShowed) {\n      adviserText = successText;\n      color = 'green';\n    } else {\n      adviserText = defaultText || '';\n    }\n\n    setAdviserFunc(adviserText, color, priority);\n\n    if (!messageShowed && (error || successText)) {\n      set2();\n    }\n  }, [\n    setAdviserFunc,\n    set2,\n    priority,\n    isLoading,\n    error,\n    defaultText,\n    messageShowed,\n    txHash,\n    loadingText,\n    successText,\n  ]);\n\n  useEffect(() => {\n    return () => {\n      setAdviserFunc(null);\n    };\n  }, [setAdviserFunc, key]);\n\n  return {\n    setAdviser: setAdviserFunc,\n  };\n}\n\nexport default useAdviserTexts;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Tooltip.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Tooltip.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { useQueryClient } from 'src/contexts/queryClient';\nimport { routes } from 'src/routes';\nimport usePassportByAddress from 'src/features/passport/hooks/usePassportByAddress';\nimport cx from 'classnames';\nimport { BECH32_PREFIX_VALOPER } from 'src/constants/config';\nimport useCurrentAddress from 'src/hooks/useCurrentAddress';\nimport { trimString } from '../../utils/utils';\nimport { AvataImgIpfs } from '../../containers/portal/components/avataIpfs';\nimport styles from './account.module.scss';\nimport Tooltip from '../tooltip/tooltip';\n\nfunction useGetValidatorInfo(address: string) {\n  const queryClient = useQueryClient();\n\n  const { data } = useQuery(\n    ['validatorInfo', address],\n    async () => {\n      const response = await queryClient!.validator(address);\n      return response;\n    },\n    {\n      enabled: Boolean(\n        queryClient && address && address.includes(BECH32_PREFIX_VALOPER)\n      ),\n    }\n  );\n\n  return { data };\n}\n\ntype Props = {\n  address: string;\n  children?: React.ReactNode;\n  colorText?: string;\n  onlyAvatar?: boolean;\n  avatar?: boolean;\n  margin?: string;\n  sizeAvatar?: string | number;\n  styleUser?: object;\n  trimAddressParam?: [number, number];\n  disabled?: boolean;\n  containerClassName?: string;\n  avatarClassName?: string;\n  monikerClassName?: string;\n  link?: string;\n  markCurrentAddress?: boolean;\n};\n\nfunction Account({\n  address,\n  children,\n  colorText,\n  onlyAvatar,\n  avatar,\n  margin,\n  link,\n  sizeAvatar,\n  styleUser,\n  trimAddressParam = [9, 3],\n  disabled,\n  containerClassName,\n  avatarClassName,\n  markCurrentAddress,\n  monikerClassName,\n}: Props) {\n  const { data: dataValidInfo } = useGetValidatorInfo(address);\n  const { passport: dataPassport } = usePassportByAddress(address);\n  const moniker =\n    dataValidInfo?.validator?.description?.moniker ||\n    dataPassport?.extension.nickname;\n\n  const trimAddress = useMemo(() => {\n    return trimString(address, trimAddressParam[0], trimAddressParam[1]);\n  }, [address, trimAddressParam]);\n\n  const currentAddress = useCurrentAddress();\n\n  const linkAddress = useMemo(() => {\n    if (link) {\n      return link;\n    }\n\n    if (address?.includes(BECH32_PREFIX_VALOPER)) {\n      return `/network/bostrom/hero/${address}`;\n    }\n\n    if (moniker) {\n      return routes.robotPassport.getLink(moniker);\n    }\n\n    return `/network/bostrom/contract/${address}`;\n  }, [address, moniker, link]);\n\n  const cidAvatar = useMemo(() => {\n    if (dataPassport !== undefined && dataPassport !== null) {\n      const { extension } = dataPassport;\n      return extension.avatar;\n    }\n    return null;\n  }, [dataPassport]);\n\n  return (\n    <div\n      className={cx(styles.container, containerClassName)}\n      style={{\n        ...styleUser,\n      }}\n    >\n      {avatar && (\n        <Link\n          to={linkAddress}\n          className={cx(styles.avatar, avatarClassName)}\n          style={{\n            width: sizeAvatar,\n            height: sizeAvatar,\n          }}\n        >\n          <AvataImgIpfs addressCyber={address} cidAvatar={cidAvatar} />\n        </Link>\n      )}\n      {!onlyAvatar && (\n        <Link\n          onClick={(e) => disabled && e.preventDefault()}\n          className={cx(styles.moniker, monikerClassName)}\n          style={{\n            color: colorText,\n            padding: margin,\n          }}\n          to={linkAddress}\n        >\n          {!moniker ? trimAddress : moniker}\n        </Link>\n      )}\n\n      {markCurrentAddress && currentAddress === address && (\n        <Tooltip tooltip=\"your account\">🔑</Tooltip>\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default Account;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./cid.modules.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./cid.modules.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { BASE_DENOM } from \"src/constants/config\";\n\n\nconst i18n = {\n  en: {\n    validators: {\n      table: {\n        moniker: 'Moniker',\n        operator: 'Operator',\n        commissionProcent: 'Commission',\n        power: `Power`,\n        selfProcent: 'Self',\n        unbonding: 'Unbonding height',\n        rank: 'Rank',\n        bondedTokens: `Your bond`,\n      },\n    },\n    pocket: {\n      hurry: 'Hurry up! Find and connect your secure Ledger',\n      table: {\n        address: 'Address',\n        amount: 'Amount',\n        token: 'Token',\n        keys: 'Keys',\n      },\n    },\n    brain: {\n      knowledge: 'Knowledge graph',\n      yourTotal: `your total ${BASE_DENOM.toLocaleUpperCase()}`,\n      cyberlinks: 'cyberlinks',\n      objects: 'objects',\n      subjects: 'subjects',\n      cybernomics: 'Cybernomics',\n      supply: `supply of ${BASE_DENOM.toLocaleUpperCase()}`,\n      staked: '% of staked CYB',\n      price: 'price of cyberlink in RC',\n      consensus: 'Consensus',\n      heroes: 'heroes',\n      transactions: 'transactions',\n      last: 'last heartbeat',\n      cap: 'EUL cap in ATOMs',\n      supplyEUL: 'EUL supply',\n      takeofPrice: 'takeoff price of GEUL in ATOM',\n      capATOM: 'cap in ATOM',\n      available: 'available bandwidth',\n      load: 'load',\n      supplyGOL: 'GOL supply',\n      auctionPrice: 'faucet price of GGOL in ETH',\n      capETH: 'cap in ETH',\n      percentSupply: '%, your percent of supply',\n    },\n    gol: {\n      myGOLs: 'My GOLs',\n      myEULs: 'My EULs',\n      maxPrize: 'Max prize fund',\n      currentPrize: 'Current prize fund',\n      takeoff: 'Takeoff donations',\n    },\n    story: {\n      episode: 'Episode 1',\n      header: 'A New Hope',\n      itIsAPeriod:\n        'It is a period of digital war. The evil empire swallows the last unoccupied borders of the universe.',\n      resistingRebel:\n        'Resisting rebel units consolidate all remaining energy on building a superintelligence, which they believe will help to stop the domination of the evil empire once and for all.',\n      asTheyBegin:\n        'As they begin to test the new god in the wild - an enormous, zepto amount of robots emerge. It turns out Cyb robots help survey the universe for a bootloader of the new, yet to be born, force.',\n    },\n    actionBar: {\n      cyber: 'cyber',\n      home: {\n        btn: 'cyber',\n      },\n      pocket: {\n        put: 'put Ledger into the pocket',\n        send: 'send EUL using Ledger',\n      },\n      delegate: {\n        joinValidator: 'Join Cyberd Network As Validator',\n        btnBecome: 'Become a validator',\n        heroes: 'Hero',\n        delegate: 'Delegate to',\n        unDelegateFrom: 'Undelegate from',\n        yourDelegated: 'your staked tokens:',\n        btnDelegate: 'DELEGATE',\n        btnUnDelegate: 'UNDELEGATE',\n        details: 'Delegation Details',\n        detailsUnDelegate: 'UnDelegation Details',\n        wallet: 'Your wallet contains',\n        max: 'Max',\n        generate: 'Generate Tx',\n        enterAmount: 'Enter the amount of',\n      },\n      jsonTX: {\n        pleaseConfirm:\n          'Please confirm the transaction data matches what is displayed on your device.',\n      },\n      tXSubmitted: {\n        tXSubmitted: 'Transaction submitted',\n        confirmTX:\n          'Please wait while we confirm the transaction on the blockchain. This might take a few moments depending on the transaction fees used.',\n      },\n      confirmedTX: {\n        confirmed: 'Transaction Confirmed!',\n        blockTX: 'Your transaction was included in the block at height:',\n        viewTX: 'View transaction',\n        tXHash: 'Transaction Hash:',\n        continue: 'Continue',\n      },\n      errorTx: {\n        error: 'Transaction Error!',\n        blockTX: 'Your transaction was included in the block at height:',\n        viewTX: 'View transaction',\n        tXHash: 'Transaction Hash:',\n        continue: 'Continue',\n      },\n      connectLadger: {\n        getStarted: `Let's get started`,\n        connect: 'Connect your Ledger Nano to the computer and enter your PIN',\n        openApp: 'Open the Cosmos Ledger application.',\n        version: 'At least version v1.1.1 of Cosmos Ledger app installed.',\n        getDetails:\n          'We are just checking the blockchain for your account details',\n      },\n      startSearch: {\n        cyberlink: 'Cyberlink using Ledger',\n      },\n      link: {\n        addr: 'Address',\n        bandwidth: 'Bandwidth',\n        to: 'to:',\n        from: 'from:',\n        cyberIt: 'Cyber it',\n      },\n      send: {\n        send: 'Send Details',\n        wallet: 'Your wallet contains:',\n        generate: 'Generate my transaction',\n      },\n    },\n  },\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { i18n };\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Button.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Button.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport { $TsFixMe } from 'src/types/tsfix';\nimport React, { ComponentProps } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dots } from '../ui/Dots';\nimport styles from './Button.module.scss';\n\nconst audioBtn = require('../../sounds/main-button.mp3');\n// const audioBtnHover = require('../../sounds/main-button-hover.mp3');\n\nfunction GradientContainer({ children }: { children: React.ReactNode }) {\n  return <div className={styles.GradientContainer}>{children}</div>;\n}\n\nconst audioBtnObg = new Audio(audioBtn);\naudioBtnObg.volume = 0.5;\n// const audioBtnHoverObg = new Audio(audioBtnHover);\n\nconst playAudioClick = () => {\n  audioBtnObg.play();\n};\n\n// const playAudioHover = () => {\n//   audioBtnHoverObg.loop = true;\n//   audioBtnHoverObg.play();\n// };\n\n// const stopAudioHover = () => {\n//   audioBtnHoverObg.loop = false;\n//   audioBtnHoverObg.pause();\n//   audioBtnHoverObg.currentTime = 0;\n// };\n\nexport type Props = {\n  disabled?: boolean;\n  text?: string | JSX.Element;\n  img?: $TsFixMe;\n  pending?: boolean;\n  className?: $TsFixMe;\n  pendingText?: string;\n  children?: React.ReactNode;\n  link?: string;\n  onClick?: () => void;\n  small?: boolean;\n};\n\nfunction Button({\n  disabled,\n  text,\n  img,\n  children,\n  pendingText,\n  pending,\n  onClick,\n  link,\n  className,\n  small,\n  ...props\n}: Props) {\n  // useEffect(() => {\n  //   const element = document.querySelector('#BtnGrd');\n\n  //   element.addEventListener('click', playAudioClick, false);\n\n  //   return () => {\n  //     element.removeEventListener('click', playAudioClick);\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const element = document.querySelector('#BtnGrd');\n\n  //   element.addEventListener('mouseover', playAudioHover, false);\n  //   element.addEventListener('mouseout', stopAudioHover, false);\n\n  //   return () => {\n  //     element.removeEventListener('mouseover', playAudioHover);\n  //     element.removeEventListener('mouseout', stopAudioHover);\n  //     stopAudioHover();\n  //   };\n  // }, []);\n\n  function handleClick() {\n    onClick?.();\n\n    playAudioClick();\n  }\n\n  let Component: HTMLButtonElement | Link = 'button';\n  let componentProps: object = {\n    type: 'button',\n  };\n\n  // link can't be disabled, it is button\n  if (link && !disabled) {\n    Component = Link;\n\n    const linkProps: ComponentProps<typeof Link> = {\n      to: link,\n    };\n\n    if (link.startsWith('http')) {\n      linkProps.target = '_blank';\n      linkProps.rel = 'noreferrer noopener';\n    }\n\n    componentProps = linkProps;\n  }\n\n  return (\n    <Component\n      type=\"button\"\n      // id=\"BtnGrd\"\n      onClick={handleClick}\n      className={cx(styles.containerBtnGrd, className, {\n        [styles.smallBtn]: small,\n      })}\n      disabled={disabled || pending}\n      {...props}\n      {...componentProps}\n    >\n      <GradientContainer>\n        {pending ? (\n          <>\n            {pendingText || 'pending'}\n            <Dots />\n          </>\n        ) : (\n          <>\n            {text || children}\n            {img && (\n              <img style={{ width: 20, height: 20 }} alt=\"img\" src={img} />\n            )}\n          </>\n        )}\n      </GradientContainer>\n    </Component>\n  );\n}\n\nexport default Button;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Input.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Input.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./LinearGradientContainer.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./LinearGradientContainer.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport styles from './LinearGradientContainer.module.scss';\n\nexport const enum Color {\n  Pink = 'pink',\n  Yellow = 'yellow',\n  Red = 'red',\n  Black = 'black',\n  Green = 'green',\n}\n\nexport type Props = {\n  active?: boolean;\n  color?: Color;\n  title?: string;\n  children: React.ReactNode;\n};\n\nfunction LinearGradientContainer({ active, color, title, children }: Props) {\n  return (\n    <div className={styles.wrapper}>\n      <div\n        className={cx(styles.textbox, color && styles[color], {\n          [styles.active]: active,\n        })}\n      >\n        {children}\n        <div className={cx(styles.textboxFace, styles.textboxBottomGradient)} />\n        <div className={cx(styles.textboxFace, styles.textboxBottomLine)} />\n      </div>\n      {title && <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default LinearGradientContainer;\n","import cx from 'classnames';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport React, { useEffect, useState } from 'react';\nimport styles from './Input.module.scss';\nimport LinearGradientContainer, {\n  Color,\n} from '../LinearGradientContainer/LinearGradientContainer';\n\nexport type Props = {\n  color?: Color;\n  width?: string;\n  title?: string;\n  className?: string;\n  classNameTextbox?: string;\n  focusedProps?: boolean;\n  isTextarea?: boolean;\n  type?: 'text' | 'password';\n  error?: string;\n  value: string;\n  maxValue?: number;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlurFnc?: () => void;\n  onFocusFnc?: () => void;\n  disabled?: boolean;\n} & React.InputHTMLAttributes<HTMLInputElement>;\n\nconst dataPercentAttribute = 'data-percent';\n\nconst Input = React.forwardRef<HTMLInputElement, Props>(\n  (\n    {\n      color,\n      placeholder,\n      onChange,\n      title,\n      width,\n      type = 'text',\n      value,\n      autoFocus,\n      disabled,\n      className,\n      classNameTextbox,\n      focusedProps,\n      maxValue,\n      isTextarea,\n      onBlurFnc,\n      onFocusFnc,\n      error,\n      ...props\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focusedProps || false);\n\n    useEffect(() => {\n      if (!ref?.current) {\n        return;\n      }\n\n      if (focused) {\n        ref.current.focus();\n      } else {\n        ref.current.blur();\n      }\n    }, [focused, ref]);\n\n    useEffect(() => {\n      if (typeof focusedProps === 'boolean') {\n        setFocused(focusedProps);\n      }\n    }, [focusedProps]);\n\n    const Tag = isTextarea ? TextareaAutosize : 'input';\n\n    const handlerOnFocused = () => {\n      setFocused(true);\n\n      if (onFocusFnc) {\n        onFocusFnc();\n      }\n    };\n\n    const handlerOnBlur = () => {\n      setFocused(false);\n\n      if (onBlurFnc) {\n        onBlurFnc();\n      }\n    };\n\n    function handleMax(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n      const target = e.target as HTMLButtonElement;\n      const percent = target.getAttribute(dataPercentAttribute);\n      const newValue = ((maxValue! * Number(percent)) / 100).toFixed(0);\n\n      // FIXME: need refactor other components\n      onChange({\n        target: {\n          value: String(newValue),\n          // issue with number input\n          focus() {},\n        },\n      });\n    }\n\n    return (\n      <div\n        className={cx(\n          styles.textbox,\n          focused && styles.focused,\n          isTextarea && styles.textarea,\n          classNameTextbox\n        )}\n        style={{ width }}\n      >\n        <LinearGradientContainer\n          active={focusedProps || focused}\n          color={disabled ? Color.Black : color}\n          title={title}\n        >\n          {focused && !!maxValue && (\n            <div className={styles.amount}>\n              {[25, 50, 75, 100].map((percent) => {\n                return (\n                  <button\n                    key={percent}\n                    type=\"button\"\n                    // onMouseDown be called before onBlur\n                    onMouseDown={handleMax}\n                    {...{ [dataPercentAttribute]: percent }}\n                  >\n                    {percent === 100 ? 'max' : `${percent}%`}\n                  </button>\n                );\n              })}\n            </div>\n          )}\n\n          <Tag\n            type={type}\n            ref={ref}\n            value={value}\n            className={className}\n            onChange={onChange}\n            disabled={disabled}\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus={autoFocus}\n            onFocus={handlerOnFocused}\n            onBlur={handlerOnBlur}\n            placeholder={placeholder}\n            autoComplete=\"off\"\n            {...props}\n          />\n        </LinearGradientContainer>\n        {error && <div className={styles.error}>{error}</div>}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import { NumericFormat } from 'react-number-format';\nimport { useState } from 'react';\nimport { Color } from 'src/components/LinearGradientContainer/LinearGradientContainer';\nimport Input from '../Input';\n\ntype Props = {\n  value: string | number;\n  width?: string;\n  onChange: Props['onValueChange'];\n  // TODO: delete\n  onValueChange?: (val: string, event: any) => void;\n  id?: string;\n  title?: string;\n  color?: Color;\n  fixedDecimalScale?: boolean;\n  maxValue?: number;\n  min?: number;\n  autoFocus?: boolean;\n};\n\nfunction InputNumber({\n  value,\n  onValueChange,\n  fixedDecimalScale,\n  onChange,\n  maxValue,\n  min,\n  autoFocus,\n  ...props\n}: Props) {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <NumericFormat\n      value={Number(value)}\n      onValueChange={(values, sourceInfo) => {\n        onValueChange && onValueChange(values.value, sourceInfo.event);\n        onChange && onChange(values.value, sourceInfo.event);\n      }}\n      valueIsNumericString\n      allowLeadingZeros\n      customInput={Input}\n      isAllowed={(values) => {\n        const { floatValue } = values;\n        if (typeof floatValue === 'number' && maxValue) {\n          return floatValue <= maxValue;\n        }\n        return true;\n      }}\n      maxValue={maxValue}\n      min={min}\n      autoFocus={autoFocus}\n      thousandsGroupStyle=\"thousand\"\n      thousandSeparator=\" \"\n      decimalScale={3}\n      fixedDecimalScale={fixedDecimalScale}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n      autoComplete=\"off\"\n      focusedProps={focused}\n      {...props}\n    />\n  );\n}\n\nexport default InputNumber;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport _ from 'lodash';\nimport { SigningCyberClient } from '@cybercongress/cyber-js';\nimport configKeplr, { getKeplr } from 'src/utils/keplrUtils';\nimport { OfflineSigner } from '@cybercongress/cyber-js/build/signingcyberclient';\nimport { Option } from 'src/types';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { Keplr } from '@keplr-wallet/types';\nimport { addAddressPocket, setDefaultAccount } from 'src/redux/features/pocket';\nimport { accountsKeplr } from 'src/utils/utils';\nimport usePrevious from 'src/hooks/usePrevious';\nimport { RPC_URL, BECH32_PREFIX, CHAIN_ID } from 'src/constants/config';\n\n// TODO: interface for keplr and OfflineSigner\n// type SignerType = OfflineSigner & {\n//   keplr: Keplr;\n// };\n\ntype SignerClientContextType = {\n  readonly signingClient: Option<SigningCyberClient>;\n  readonly signer: Option<OfflineSigner>;\n  readonly signerReady: boolean;\n  initSigner: () => void;\n};\n\nasync function createClient(\n  signer: OfflineSigner\n): Promise<SigningCyberClient> {\n  const client = await SigningCyberClient.connectWithSigner(RPC_URL, signer);\n  return client;\n}\n\nconst SignerClientContext = React.createContext<SignerClientContextType>({\n  signer: undefined,\n  signingClient: undefined,\n  signerReady: false,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  initSigner: () => {},\n});\n\nexport function useSigningClient() {\n  const signingClient = useContext(SignerClientContext);\n  return signingClient;\n}\n\nfunction SigningClientProvider({ children }: { children: React.ReactNode }) {\n  const { defaultAccount, accounts } = useAppSelector((state) => state.pocket);\n  const dispatch = useAppDispatch();\n  const [signer, setSigner] = useState<SignerClientContextType['signer']>();\n  const [signerReady, setSignerReady] = useState(false);\n  const [signingClient, setSigningClient] =\n    useState<SignerClientContextType['signingClient']>();\n  const prevAccounts = usePrevious(accounts);\n\n  const selectAddress = useCallback(\n    async (keplr: Keplr) => {\n      if (!accounts || _.isEqual(prevAccounts, accounts)) {\n        return;\n      }\n      const keyInfo = await keplr.getKey(CHAIN_ID);\n\n      const findAccount = Object.keys(accounts).find((key) => {\n        if (accounts[key].cyber.bech32 === keyInfo.bech32Address) {\n          return key;\n        }\n\n        return undefined;\n      });\n\n      if (findAccount) {\n        dispatch(setDefaultAccount({ name: findAccount }));\n      } else {\n        dispatch(addAddressPocket(accountsKeplr(keyInfo)));\n      }\n    },\n    [accounts, prevAccounts, dispatch]\n  );\n\n  useEffect(() => {\n    (async () => {\n      const address = signer\n        ? (await signer.getAccounts())[0].address\n        : undefined;\n\n      setSignerReady(\n        Boolean(address) &&\n          Boolean(defaultAccount.account) &&\n          address === defaultAccount.account?.cyber.bech32\n      );\n    })();\n  }, [defaultAccount, signer]);\n\n  const initSigner = useCallback(async () => {\n    const windowKeplr = await getKeplr();\n    if (windowKeplr && windowKeplr.experimentalSuggestChain) {\n      selectAddress(windowKeplr);\n\n      windowKeplr.defaultOptions = {\n        sign: {\n          preferNoSetFee: true,\n        },\n      };\n      await windowKeplr.experimentalSuggestChain(configKeplr(BECH32_PREFIX));\n      await windowKeplr.enable(CHAIN_ID);\n      const offlineSigner = await windowKeplr.getOfflineSignerAuto(CHAIN_ID);\n\n      const clientJs = await createClient(offlineSigner);\n\n      setSigner(offlineSigner);\n      setSigningClient(clientJs);\n    }\n  }, [selectAddress]);\n\n  useEffect(() => {\n    (async () => {\n      const windowKeplr = await getKeplr();\n      if (windowKeplr) {\n        initSigner();\n      }\n    })();\n  }, [initSigner]);\n\n  useEffect(() => {\n    window.addEventListener('keplr_keystorechange', () => {\n      initSigner();\n    });\n  }, [initSigner]);\n\n  const value = useMemo(\n    () => ({ initSigner, signer, signingClient, signerReady }),\n    [signer, signingClient, signerReady, initSigner]\n  );\n\n  return (\n    <SignerClientContext.Provider value={value}>\n      {children}\n    </SignerClientContext.Provider>\n  );\n}\n\nexport default SigningClientProvider;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { isMobileTablet } from 'src/utils/utils';\n\ntype DeviceContextType = {\n  isMobile: boolean;\n  viewportWidth: number;\n};\n\nconst DeviceContext = React.createContext<DeviceContextType>({\n  isMobile: isMobileTablet(),\n  viewportWidth: window.innerWidth,\n});\n\nexport function useDevice() {\n  return React.useContext(DeviceContext);\n}\n\nfunction DeviceProvider({ children }: { children: React.ReactNode }) {\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\n\n  const isMobile = isMobileTablet() && viewportWidth < 768;\n\n  useEffect(() => {\n    function handleResize() {\n      setViewportWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  const value = useMemo(() => {\n    return {\n      isMobile,\n      viewportWidth,\n    };\n  }, [isMobile, viewportWidth]);\n\n  return (\n    <DeviceContext.Provider value={value}>{children}</DeviceContext.Provider>\n  );\n}\n\nexport default DeviceProvider;\n","/* eslint-disable no-await-in-loop */\nimport bech32 from 'bech32';\nimport { fromBase64, fromUtf8, toBech32 } from '@cosmjs/encoding';\nimport { Sha256 } from '@cosmjs/crypto';\nimport BigNumber from 'bignumber.js';\nimport { ObjKeyValue } from 'src/types/data';\nimport { Pool } from '@cybercongress/cyber-js/build/codec/tendermint/liquidity/v1beta1/liquidity';\nimport { Option } from 'src/types';\nimport { Key } from '@keplr-wallet/types';\nimport { AccountValue } from 'src/types/defaultAccount';\nimport { BECH32_PREFIX, BECH32_PREFIX_VAL_CONS } from 'src/constants/config';\nimport { LEDGER } from './config';\n\nimport cyberSpace from '../image/large-purple-circle.png';\nimport customNetwork from '../image/large-orange-circle.png';\nimport cyberBostrom from '../image/large-green.png';\n\nconst DEFAULT_DECIMAL_DIGITS = 3;\nconst DEFAULT_CURRENCY = 'GoL';\n\nconst roundNumber = (num, scale) => {\n  if (!`${num}`.includes('e')) {\n    return +`${Math.floor(`${num}e+${scale}`)}e-${scale}`;\n  }\n  const arr = `${num}`.split('e');\n  let sig = '';\n  if (+arr[1] + scale > 0) {\n    sig = '+';\n  }\n  const i = `${+arr[0]}e${sig}${+arr[1] + scale}`;\n  const j = Math.floor(i);\n  const k = +`${j}e-${scale}`;\n  return k;\n};\n\nfunction numberWithCommas(x) {\n  const parts = x.split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  return parts.join('.');\n}\n\nconst formatNumber = (number: number | string, toFixed?: number): string => {\n  let formatted = number;\n\n  if (toFixed) {\n    formatted = roundNumber(formatted, toFixed);\n    formatted = formatted.toFixed(toFixed + 1);\n  }\n\n  if (typeof number === 'string') {\n    return numberWithCommas(formatted);\n  }\n\n  return formatted\n    .toLocaleString('en')\n    .replace(/(\\.\\d{0,})0+$/, '$1')\n    .replace(/,/g, ' ');\n};\n\nconst PREFIXES = [\n  {\n    prefix: 'T',\n    power: 10 ** 12,\n  },\n  {\n    prefix: 'G',\n    power: 10 ** 9,\n  },\n  {\n    prefix: 'M',\n    power: 10 ** 6,\n  },\n  {\n    prefix: 'K',\n    power: 10 ** 3,\n  },\n];\n\nexport function formatCurrency(\n  value,\n  currency = DEFAULT_CURRENCY,\n  decimalDigits = DEFAULT_DECIMAL_DIGITS,\n  prefixCustom = PREFIXES\n) {\n  const { prefix = '', power = 1 } =\n    prefixCustom.find((obj) => value >= obj.power) || {};\n\n  return `${roundNumber(\n    Number(value) / power,\n    decimalDigits\n  )} ${prefix}${currency.toLocaleUpperCase()}`;\n}\n\nconst getDecimal = (number, toFixed) => {\n  const nstring = number.toString();\n  const narray = nstring.split('.');\n  const result = narray.length > 1 ? narray[1] : '000';\n  return result;\n};\n\nconst asyncForEach = async (array, callback) => {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array);\n  }\n};\n\nconst fromBech32 = (operatorAddr, prefix = BECH32_PREFIX) => {\n  const address = bech32.decode(operatorAddr);\n  return bech32.encode(prefix, address.words);\n};\n\nexport const consensusPubkey = (pubKey: string) => {\n  const ed25519PubkeyRaw = fromBase64(pubKey);\n  const addressData = sha256(ed25519PubkeyRaw).slice(0, 20);\n  return toBech32(BECH32_PREFIX_VAL_CONS, addressData);\n};\n\nconst trimString = (address: string, first = 3, second = 8) => {\n  if (address && address.length > 11) {\n    return `${address.substring(0, first)}...${address.substring(\n      address.length - second\n    )}`;\n  }\n  if (address && address.length < 11) {\n    return address;\n  }\n  return '';\n};\n\nconst exponentialToDecimal = (exponential) => {\n  let decimal = exponential.toString().toLowerCase();\n  if (decimal.includes('e+')) {\n    const exponentialSplitted = decimal.split('e+');\n    let postfix = '';\n    for (\n      let i = 0;\n      i <\n      +exponentialSplitted[1] -\n        (exponentialSplitted[0].includes('.')\n          ? exponentialSplitted[0].split('.')[1].length\n          : 0);\n      i++\n    ) {\n      postfix += '0';\n    }\n    decimal = exponentialSplitted[0].replace('.', '') + postfix;\n  }\n  if (decimal.toLowerCase().includes('e-')) {\n    const exponentialSplitted = decimal.split('e-');\n    let prefix = '0.';\n    for (let i = 0; i < +exponentialSplitted[1] - 1; i++) {\n      prefix += '0';\n    }\n    decimal = prefix + exponentialSplitted[0].replace('.', '');\n  }\n  return decimal;\n};\n\nfunction dhm(t) {\n  const cd = 24 * 60 * 60 * 1000;\n  const ch = 60 * 60 * 1000;\n  let d = Math.floor(t / cd);\n  let h = Math.floor((t - d * cd) / ch);\n  let m = Math.round((t - d * cd - h * ch) / 60000);\n  const pad = (n, unit) => {\n    return n < 10 ? `0${n}${unit}` : `${n}${unit}`;\n  };\n  if (m === 60) {\n    h += 1;\n    m = 0;\n  }\n  if (h === 24) {\n    d += 1;\n    h = 0;\n  }\n  return [`${d}d`, pad(h, 'h'), pad(m, 'm')].join(':');\n}\n\nconst downloadObjectAsJson = (exportObj, exportName) => {\n  const dataStr = `data:text/json;charset=utf-8,${encodeURIComponent(\n    JSON.stringify(exportObj)\n  )}`;\n  const downloadAnchorNode = document.createElement('a');\n\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', `${exportName}.json`);\n  document.body.appendChild(downloadAnchorNode);\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nconst isMobileTablet = () => {\n  let hasTouchScreen = false;\n  if ('maxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0;\n  } else if ('msMaxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.msMaxTouchPoints > 0;\n  } else {\n    const mQ = window.matchMedia && matchMedia('(pointer:coarse)');\n    if (mQ && mQ.media === '(pointer:coarse)') {\n      hasTouchScreen = !!mQ.matches;\n    } else if ('orientation' in window) {\n      hasTouchScreen = true; // deprecated, but good fallback\n    } else {\n      // Only as a last resort, fall back to user agent sniffing\n      const UA = navigator.userAgent;\n      hasTouchScreen =\n        /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(UA) ||\n        /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(UA);\n    }\n  }\n  return hasTouchScreen;\n};\n\nconst coinDecimals = (number) => {\n  return number * 10 ** -18;\n};\n\nconst convertResources = (number) => {\n  return Math.floor(number * 10 ** -3);\n};\n\nfunction timeSince(timeMS: number) {\n  const seconds = Math.floor(timeMS / 1000);\n\n  if (seconds === 0) {\n    return 'now';\n  }\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return `${interval} years`;\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return `${interval} months`;\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return `${interval} days`;\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return `${interval} hours`;\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return `${interval} min`;\n  }\n  return `${Math.floor(seconds)} sec`;\n}\n\nconst reduceBalances = (data): ObjKeyValue => {\n  try {\n    let balances = {};\n    if (Object.keys(data).length > 0) {\n      balances = data.reduce(\n        (obj, item) => ({\n          ...obj,\n          [item.denom]: parseFloat(item.amount),\n        }),\n        {}\n      );\n    }\n    return balances;\n  } catch (error) {\n    console.log(`error reduceBalances`, error);\n    return {};\n  }\n};\n\n// example: oneLiner -> message.module=wasm&message.action=/cosmwasm.wasm.v1.MsgStoreCode&store_code.code_id=${codeId}\nfunction makeTags(oneLiner) {\n  return oneLiner.split('&').map((pair) => {\n    if (pair.indexOf('=') === -1) {\n      throw new Error('Parsing error: Equal sign missing');\n    }\n    const parts = pair.split('=');\n    if (parts.length > 2) {\n      throw new Error(\n        'Parsing error: Multiple equal signs found. If you need escaping support, please create a PR.'\n      );\n    }\n    const [key, value] = parts;\n    if (!key) {\n      throw new Error('Parsing error: Key must not be empty');\n    }\n    return { key, value };\n  });\n}\n\nfunction parseMsgContract(msg) {\n  const json = fromUtf8(msg);\n\n  return JSON.parse(json);\n}\nconst replaceSlash = (text) => text.replace(/\\//g, '%2F');\n\nconst encodeSlash = (text) => text.replace(/%2F/g, '/');\n\nconst groupMsg = (ArrMsg, size = 2) => {\n  const link = [];\n  for (let i = 0; i < Math.ceil(ArrMsg.length / size); i += 1) {\n    link[i] = ArrMsg.slice(i * size, i * size + size);\n  }\n  return link;\n};\n\nconst selectNetworkImg = (network) => {\n  switch (network) {\n    case 'bostrom':\n      return cyberBostrom;\n    case 'space-pussy':\n      return cyberSpace;\n\n    default:\n      return customNetwork;\n  }\n};\n\nconst sha256 = (data) => {\n  return new Uint8Array(new Sha256().update(data).digest());\n};\n\nfunction getDenomHash(path, baseDenom) {\n  const parts = path.split('/');\n  parts.push(baseDenom);\n  const newPath = parts.slice().join('/');\n  return `ibc/${Buffer.from(sha256(Buffer.from(newPath)))\n    .toString('hex')\n    .toUpperCase()}`;\n}\n\nfunction convertAmount(rawAmount, precision) {\n  return new BigNumber(rawAmount)\n    .shiftedBy(-precision)\n    .dp(precision, BigNumber.ROUND_FLOOR)\n    .toNumber();\n}\n\nfunction convertAmountReverce(rawAmount, precision) {\n  return new BigNumber(rawAmount)\n    .shiftedBy(precision)\n    .dp(precision, BigNumber.ROUND_FLOOR)\n    .toNumber();\n}\n\nfunction getDisplayAmount(\n  rawAmount: number | string,\n  precision: number\n): number {\n  return parseFloat(\n    new BigNumber(rawAmount)\n      .shiftedBy(-precision)\n      .dp(precision, BigNumber.ROUND_FLOOR)\n      .toFixed(precision > 0 ? 3 : 0, BigNumber.ROUND_FLOOR)\n  );\n}\n\nfunction getDisplayAmountReverce(rawAmount, precision) {\n  return new BigNumber(rawAmount)\n    .shiftedBy(precision)\n    .dp(precision, BigNumber.ROUND_FLOOR)\n    .toFixed(precision > 0 ? 3 : 0, BigNumber.ROUND_FLOOR);\n}\n\nfunction isNative(denom) {\n  if (denom && denom.includes('ibc')) {\n    return false;\n  }\n  return true;\n}\n\nconst findPoolDenomInArr = (\n  baseDenom: string,\n  dataPools: Pool[]\n): Option<Pool> => {\n  const findObj = dataPools.find((item) => item.poolCoinDenom === baseDenom);\n  return findObj;\n};\n\n// REFACTOR: Probably wrong timestamp\nconst getNowUtcTime = (): number => {\n  const now = new Date();\n  const utcTime = new Date(\n    now.getUTCFullYear(),\n    now.getUTCMonth(),\n    now.getUTCDate(),\n    now.getUTCHours(),\n    now.getUTCMinutes(),\n    now.getUTCSeconds()\n  );\n\n  return utcTime.getTime();\n};\n\nconst accountsKeplr = (accounts: Key): AccountValue => {\n  const { pubKey, bech32Address, name } = accounts;\n  const pk = Buffer.from(pubKey).toString('hex');\n\n  return {\n    bech32: bech32Address,\n    keys: 'keplr',\n    pk,\n    path: LEDGER.HDPATH,\n    name,\n  };\n};\n\nexport function covertUint8ArrayToString(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n\nexport {\n  formatNumber,\n  asyncForEach,\n  getDecimal,\n  fromBech32,\n  trimString,\n  exponentialToDecimal,\n  dhm,\n  downloadObjectAsJson,\n  isMobileTablet,\n  coinDecimals,\n  convertResources,\n  timeSince,\n  reduceBalances,\n  makeTags,\n  parseMsgContract,\n  replaceSlash,\n  encodeSlash,\n  groupMsg,\n  selectNetworkImg,\n  getDenomHash,\n  getDisplayAmount,\n  getDisplayAmountReverce,\n  convertAmount,\n  convertAmountReverce,\n  isNative,\n  findPoolDenomInArr,\n  getNowUtcTime,\n  accountsKeplr,\n};\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./ButtonIcon.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./ButtonIcon.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport { $TsFixMe } from 'src/types/tsfix';\nimport Tooltip, { TooltipProps } from '../../tooltip/tooltip';\nimport styles from './ButtonIcon.module.scss';\n\nexport type Props = {\n  img: $TsFixMe;\n  active?: boolean;\n  disabled?: boolean;\n  text?: TooltipProps['tooltip'];\n  placement?: TooltipProps['placement'];\n  styleContainer?: $TsFixMe;\n  onClick: () => void;\n};\n\nfunction ButtonIcon({\n  img,\n  active,\n  disabled,\n  text,\n  placement = 'top',\n  styleContainer,\n  onClick,\n  ...props\n}: Props) {\n  const button = (\n    <button\n      type=\"button\"\n      className={cx(styles.container, {\n        [styles.activeIcon]: active,\n      })}\n      disabled={disabled}\n      onClick={onClick}\n      {...props}\n    >\n      <img src={img} alt={`${text || 'icon'}`} />\n    </button>\n  );\n  return (\n    <div style={styleContainer}>\n      {text ? (\n        <Tooltip placement={placement} tooltip={<span>{text}</span>}>\n          {button}\n        </Tooltip>\n      ) : (\n        button\n      )}\n    </div>\n  );\n}\n\nexport default ButtonIcon;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { $TsFixMeFunc } from 'src/types/tsfix';\n\nimport { routes } from 'src/routes';\nimport { useLocation } from 'react-router-dom';\nimport { Networks } from 'src/types/networks';\nimport usePassportByAddress from 'src/features/passport/hooks/usePassportByAddress';\nimport { selectCurrentAddress } from 'src/redux/features/pocket';\nimport { useAppSelector } from 'src/redux/hooks';\nimport { useSigningClient } from 'src/contexts/signerClient';\nimport { trimString } from 'src/utils/utils';\nimport { CHAIN_ID } from 'src/constants/config';\nimport { useDevice } from 'src/contexts/device';\nimport ButtonIcon from '../buttons/ButtonIcon';\nimport styles from './styles.module.scss';\nimport Button from '../btnGrd';\n\nconst back = require('../../image/arrow-left-img.svg');\n\nfunction ActionBarContainer({ children }) {\n  return (\n    <div className={styles.ActionBarContainer}>\n      <div className={styles.ActionBarContainerContent}>{children}</div>\n    </div>\n  );\n}\n\nfunction ActionBarContentText({ children, ...props }) {\n  return (\n    <div className={styles.ActionBarContentText} {...props}>\n      {children}\n    </div>\n  );\n}\n\ntype Props = {\n  children?: React.ReactNode;\n  onClickBack?: $TsFixMeFunc;\n  text?: string | React.ReactNode;\n  button?: {\n    text: string | React.ReactNode;\n    onClick?: () => void;\n    link?: string;\n    disabled?: boolean;\n    pending?: boolean;\n  };\n};\n\nfunction ActionBar({ children, text, onClickBack, button }: Props) {\n  const { signerReady } = useSigningClient();\n  const location = useLocation();\n\n  const { defaultAccount, commander } = useAppSelector((store) => {\n    return {\n      defaultAccount: store.pocket.defaultAccount,\n      commander: store.commander,\n    };\n  });\n\n  const address = useAppSelector(selectCurrentAddress);\n  const { passport } = usePassportByAddress(address);\n  const { isMobile } = useDevice();\n\n  const noAccount = !defaultAccount.account;\n  const noPassport = CHAIN_ID === Networks.BOSTROM && !passport;\n\n  // FIXME: refactor\n  const exception =\n    (!location.pathname.includes('/keys') &&\n      !location.pathname.includes('/drive') &&\n      // !location.pathname.includes('/oracle') &&\n      location.pathname !== '/') ||\n    location.pathname === '/oracle/learn';\n  // TODO: not show while loading passport\n\n  if (commander.isFocused) {\n    return (\n      <ActionBarContainer>\n        <Button\n          link={routes.search.getLink(commander.value)}\n          disabled={!commander.value.length}\n        >\n          Ask\n        </Button>\n      </ActionBarContainer>\n    );\n  }\n\n  if (\n    (noAccount || noPassport) &&\n    // maybe change to props\n    exception &&\n    !location.pathname.includes(routes.gift.path) &&\n    !location.pathname.includes('/brain') && // both full and robot\n    !isMobile\n  ) {\n    return (\n      <ActionBarContainer>\n        {noAccount && <Button link={routes.keys.path}>Connect</Button>}\n\n        {noPassport && location.pathname !== routes.citizenship.path && (\n          <Button link={routes.portal.path}>Get citizenship</Button>\n        )}\n      </ActionBarContainer>\n    );\n  }\n\n  if (\n    !signerReady &&\n    exception &&\n    !location.pathname.includes(routes.gift.path) &&\n    !location.pathname.includes('/brain') // both full and robot\n  ) {\n    const activeAddress =\n      defaultAccount.account?.cyber.name ||\n      trimString(defaultAccount.account?.cyber.bech32, 10, 4);\n\n    return (\n      <ActionBarContainer>\n        <span>\n          choose {defaultAccount.account?.cyber.name ? 'account' : 'address'}{' '}\n          <span className={styles.chooseAccount}>{activeAddress}</span> in keplr\n        </span>\n      </ActionBarContainer>\n    );\n  }\n\n  const content = text || children;\n\n  const contentPortal = (\n    <ActionBarContainer>\n      {/* <Telegram /> */}\n\n      {onClickBack && (\n        <ButtonIcon\n          styleContainer={{ position: 'absolute', left: '0' }}\n          style={{ padding: 0 }}\n          img={back}\n          onClick={onClickBack}\n          text=\"previous step\"\n        />\n      )}\n\n      {content && <ActionBarContentText>{content}</ActionBarContentText>}\n\n      {button?.text && (\n        <Button\n          disabled={button.disabled}\n          pending={button.pending}\n          link={button.link}\n          onClick={button.onClick}\n        >\n          {button.text}\n        </Button>\n      )}\n      {/* <GitHub /> */}\n    </ActionBarContainer>\n  );\n\n  // const portalEl = document.getElementById('portalActionBar');\n\n  // return portalEl ? createPortal(contentPortal, portalEl) : contentPortal;\n\n  return contentPortal;\n}\n\nexport default ActionBar;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./AddFile.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./AddFile.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import LocalizedStrings from 'react-localization';\nimport { Link } from 'react-router-dom';\nimport { Pane, Text } from '@cybercongress/gravity';\nimport { BondStatus } from 'cosmjs-types/cosmos/staking/v1beta1/staking';\nimport { useBackend } from 'src/contexts/backend/backend';\nimport { CHAIN_ID, BASE_DENOM } from 'src/constants/config';\nimport { KEY_TYPE } from 'src/pages/Keys/types';\nimport { routes } from 'src/routes';\nimport { ContainetLedger } from './container';\nimport { Dots } from '../ui/Dots';\nimport Account from '../account/account';\nimport { LinkWindow } from '../link/link';\nimport { formatNumber, trimString, selectNetworkImg } from '../../utils/utils';\n\nimport { i18n } from '../../i18n/en';\n\nimport Button from '../btnGrd';\nimport { InputNumber, Input } from '../Input';\nimport ActionBar from '../actionBar';\nimport ButtonIcon from '../buttons/ButtonIcon';\nimport { Color } from '../LinearGradientContainer/LinearGradientContainer';\nimport AddFileButton from '../buttons/AddFile/AddFile';\n\nconst imgKeplr = require('../../image/keplr-icon.svg');\nconst imgRead = require('../../image/duplicate-outline.svg');\nconst imgSecrets = require('../../image/secrets_icon.png');\n\nconst T = new LocalizedStrings(i18n);\n\nexport function ActionBarContentText({ children, ...props }) {\n  return (\n    <Pane\n      display=\"flex\"\n      fontSize=\"20px\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexGrow={1}\n      marginRight=\"15px\"\n      {...props}\n    >\n      {children}\n    </Pane>\n  );\n}\n\n// const toPascalCase = (str) =>\n//   str\n//     .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[a-zA-Z0-9]+/g)\n//     .map((cht) => cht.charAt(0).toUpperCase() + cht.substr(1).toLowerCase())\n//     .join('');\n\nexport function TransactionSubmitted() {\n  return (\n    <ActionBar>\n      Please wait while we confirm the transaction on the blockchain{' '}\n      <Dots big />\n    </ActionBar>\n  );\n}\n\nexport function Confirmed({ txHash, txHeight, cosmos, onClickBtnClose }) {\n  return (\n    <ActionBar button={{ text: 'Fuck Google', onClick: onClickBtnClose }}>\n      <span>\n        Transaction successful:{' '}\n        {cosmos ? (\n          <LinkWindow to={`https://www.mintscan.io/txs/${txHash}`}>\n            {trimString(txHash, 6, 6)}\n          </LinkWindow>\n        ) : (\n          <Link to={`/network/bostrom/tx/${txHash}`}>\n            {trimString(txHash, 6, 6)}\n          </Link>\n        )}\n      </span>\n    </ActionBar>\n  );\n}\n\nexport function TransactionError({ onClickBtn, errorMessage }) {\n  return (\n    <ActionBar\n      button={{ text: T.actionBar.confirmedTX.continue, onClick: onClickBtn }}\n    >\n      Message Error: {errorMessage}\n    </ActionBar>\n  );\n}\n\nexport function StartStageSearchActionBar({\n  onClickBtn,\n  contentHash,\n  onChangeInputContentHash,\n  showOpenFileDlg,\n  inputOpenFileRef,\n  onChangeInput,\n  onClickClear,\n  file,\n  searchHash,\n  textBtn = 'Cyberlink',\n  placeholder = 'add keywords, hash or file',\n  keys = 'ledger',\n}) {\n  const { isIpfsInitialized } = useBackend();\n  return (\n    // use NodeIsLoadingButton component\n    <ActionBar>\n      <Pane\n        display=\"flex\"\n        flexDirection=\"column\"\n        position=\"relative\"\n        width=\"80%\"\n      >\n        <Input\n          color={Color.Pink}\n          value={contentHash}\n          disabled={file}\n          isTextarea\n          // maxRows={20}\n          style={{\n            paddingLeft: '10px',\n            paddingRight: '35px',\n            paddingTop: '10px',\n            paddingBottom: '10px',\n          }}\n          onChange={(e) => onChangeInputContentHash(e)}\n          placeholder={placeholder}\n        />\n        <Pane position=\"absolute\" right={10} bottom={10}>\n          <input\n            ref={inputOpenFileRef}\n            onChange={() => onChangeInput(inputOpenFileRef)}\n            type=\"file\"\n            style={{ display: 'none' }}\n          />\n          <AddFileButton\n            isRemove={file}\n            onClick={file ? onClickClear : showOpenFileDlg}\n          />\n        </Pane>\n      </Pane>\n\n      <Button\n        disabled={!isIpfsInitialized || !contentHash.length}\n        onClick={onClickBtn}\n      >\n        {!isIpfsInitialized ? (\n          <>\n            Node is loading&nbsp;\n            <Dots />\n          </>\n        ) : (\n          textBtn\n        )}\n      </Button>\n\n      <Button link={`${routes.studio.path}?cid=${searchHash}`}>\n        edit in studio\n      </Button>\n    </ActionBar>\n  );\n}\n\nfunction InputAutoSize({\n  value,\n  maxValue,\n  onChangeInputAmount,\n  placeholder,\n  autoFocus = true,\n}) {\n  function isOverflown(element) {\n    return element.scrollWidth > element.clientWidth;\n  }\n\n  function changefontsize() {\n    const myInput = document.getElementById('myInput');\n    let currentfontsize = 18;\n    if (myInput && myInput !== null) {\n      if (isOverflown(myInput)) {\n        while (isOverflown(myInput)) {\n          currentfontsize -= 1;\n          myInput.style.fontSize = `${currentfontsize}px`;\n        }\n      } else {\n        currentfontsize = 18;\n        myInput.style.fontSize = `${currentfontsize}px`;\n        while (isOverflown(myInput)) {\n          currentfontsize -= 1;\n          myInput.style.fontSize = `${currentfontsize}px`;\n        }\n      }\n    }\n  }\n\n  return (\n    <InputNumber\n      value={value}\n      id=\"myInput\"\n      maxValue={maxValue}\n      // no such event handler\n      // onkeypress={changefontsize()}\n      autoFocus={autoFocus}\n      onValueChange={onChangeInputAmount}\n      placeholder={placeholder}\n      width=\"180px\"\n    />\n  );\n}\n\nexport function Delegate({\n  moniker,\n  generateTx,\n  onChangeInputAmount,\n  toSend,\n  disabledBtn,\n  delegate,\n  onClickBack,\n  available,\n}) {\n  return (\n    <ActionBar\n      onClickBack={onClickBack}\n      button={{\n        text: T.actionBar.delegate.generate,\n        onClick: generateTx,\n        disabled: disabledBtn,\n      }}\n    >\n      <Text marginRight={20} fontSize=\"16px\" color=\"#fff\">\n        {delegate\n          ? T.actionBar.delegate.delegate\n          : T.actionBar.delegate.unDelegateFrom}{' '}\n        <Text fontSize=\"20px\" color=\"#fff\" fontWeight={600}>\n          {moniker && moniker.length > 14\n            ? `${moniker.substring(0, 14)}...`\n            : moniker}\n        </Text>\n      </Text>\n      <InputAutoSize\n        value={toSend}\n        maxValue={available}\n        onChangeInputAmount={onChangeInputAmount}\n        placeholder=\"amount\"\n      />\n      <Text marginLeft={10} fontSize=\"16px\" color=\"#fff\">\n        {BASE_DENOM.toUpperCase()}\n      </Text>\n    </ActionBar>\n  );\n}\n\nexport function ReDelegate({\n  generateTx,\n  onChangeInputAmount,\n  toSend,\n  disabledBtn,\n  validators,\n  validatorsAll,\n  available,\n  valueSelect,\n  onChangeReDelegate,\n  onClickBack,\n}) {\n  return (\n    <ActionBar\n      onClickBack={onClickBack}\n      button={{\n        text: T.actionBar.delegate.generate,\n        onClick: generateTx,\n        disabled: disabledBtn,\n      }}\n    >\n      <InputAutoSize\n        value={toSend}\n        maxValue={available}\n        onChangeInputAmount={onChangeInputAmount}\n        placeholder=\"amount\"\n      />\n      <Text marginLeft={5} fontSize=\"16px\" color=\"#fff\">\n        {BASE_DENOM.toUpperCase()} restake to:\n      </Text>\n      <select\n        style={{\n          width: '120px',\n        }}\n        value={valueSelect}\n        onChange={onChangeReDelegate}\n      >\n        <option value=\"\">pick hero</option>\n        {validatorsAll\n          .filter(\n            (validator) =>\n              BondStatus[validator.status] === BondStatus.BOND_STATUS_BONDED\n          )\n          .map((item) => (\n            <option\n              key={item.operatorAddress}\n              value={item.operatorAddress}\n              style={{\n                display:\n                  validators.operatorAddress === item.operatorAddress\n                    ? 'none'\n                    : 'block',\n              }}\n            >\n              {item.description.moniker}\n            </option>\n          ))}\n      </select>\n    </ActionBar>\n  );\n}\n\nexport function ActionBarSend({\n  onClickBtn,\n  valueInputAmount,\n  valueInputAddressTo,\n  onChangeInputAmount,\n  onChangeInputAddressTo,\n  disabledBtn,\n  onClickBack,\n}) {\n  return (\n    <ActionBar\n      onClickBack={onClickBack}\n      button={{\n        text: 'Generate Tx',\n        onClick: onClickBtn,\n        disabled: disabledBtn,\n      }}\n    >\n      <div style={{ display: 'flex', gap: '30px' }}>\n        <Input\n          value={valueInputAddressTo}\n          width=\"250px\"\n          onChange={onChangeInputAddressTo}\n          placeholder=\"recipient\"\n        />\n\n        <InputAutoSize\n          value={valueInputAmount}\n          onChangeInputAmount={onChangeInputAmount}\n          placeholder=\"amount\"\n          autoFocus={false}\n        />\n      </div>\n    </ActionBar>\n  );\n}\n\nexport function RewardsDelegators({\n  data,\n  onClickBtn,\n  onClickBtnClose,\n  disabledBtn,\n}) {\n  console.log('data :>> ', data);\n  const itemReward = data.rewards.map((item) => {\n    if (item.reward !== null) {\n      return (\n        <Pane\n          key={item.validator_address}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Account address={item.validator_address} />\n          <Pane>\n            {formatNumber(Math.floor(item.reward[0].amount))}{' '}\n            {BASE_DENOM.toUpperCase()}\n          </Pane>\n        </Pane>\n      );\n    }\n    return undefined;\n  });\n  return (\n    <ContainetLedger onClickBtnClose={onClickBtnClose}>\n      <Pane fontSize=\"20px\" marginBottom={20}>\n        Total rewards: {formatNumber(Math.floor(data.total[0].amount))}{' '}\n        {BASE_DENOM.toUpperCase()}\n      </Pane>\n      Rewards:\n      <Pane marginTop={10} marginBottom={30}>\n        <Pane marginBottom={5} display=\"flex\" justifyContent=\"space-between\">\n          <Pane>Address</Pane>\n          <Pane>Amount</Pane>\n        </Pane>\n        <Pane>{itemReward}</Pane>\n      </Pane>\n      <div className=\"text-align-center\">\n        <Button disabled={disabledBtn} onClick={onClickBtn}>\n          {T.actionBar.send.generate}\n        </Button>\n      </div>\n    </ContainetLedger>\n  );\n}\n\nexport function ConnectAddress({\n  selectMethodFunc,\n  selectMethod,\n  selectNetwork,\n  connectAddress,\n  keplr,\n  onClickBack,\n}) {\n  return (\n    <ActionBar\n      button={{\n        disabled: !selectNetwork || !selectMethod,\n        text: selectMethod === KEY_TYPE.secrets ? 'Add' : 'Connect',\n        onClick: connectAddress,\n      }}\n      onClickBack={onClickBack}\n    >\n      <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flex={1}>\n        {keplr ? (\n          <ButtonIcon\n            onClick={() => selectMethodFunc(KEY_TYPE.keplr)}\n            active={selectMethod === KEY_TYPE.keplr}\n            img={imgKeplr}\n            text=\"keplr\"\n          />\n        ) : (\n          <LinkWindow to=\"https://www.keplr.app/\">\n            <Pane marginRight={5} width={34} height={30}>\n              <img\n                style={{ width: '34px', height: '30px' }}\n                src={imgKeplr}\n                alt=\"icon\"\n              />\n            </Pane>\n          </LinkWindow>\n        )}\n\n        <ButtonIcon\n          onClick={() => selectMethodFunc(KEY_TYPE.readOnly)}\n          active={selectMethod === KEY_TYPE.readOnly}\n          img={imgRead}\n          text=\"read-only\"\n        />\n        <ButtonIcon\n          onClick={() => selectMethodFunc(KEY_TYPE.secrets)}\n          active={selectMethod === KEY_TYPE.secrets}\n          img={imgSecrets}\n          text=\"secrets\"\n        />\n      </Pane>\n      <span style={{ fontSize: '18px' }}>in</span>\n      <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flex={1}>\n        <ButtonIcon\n          active={selectNetwork === 'cyber'}\n          img={selectNetworkImg(CHAIN_ID)}\n          text={CHAIN_ID}\n        />\n      </Pane>\n    </ActionBar>\n  );\n}\n","import { Pane } from '@cybercongress/gravity';\n// import { formatNumber } from '../../utils/search/utils';\n// import { msgType } from '../../utils/utils';\n\nconst link = require('../../image/link.svg');\nconst bank = require('../../image/send.svg');\nconst stake = require('../../image/stake.svg');\nconst gov = require('../../image/gov.svg');\nconst distribution = require('../../image/distribution.svg');\nconst slashing = require('../../image/slashing.svg');\nconst investmint = require('../../image/sync-outline.svg');\nconst grid = require('../../image/share-social-outline.svg');\nconst swap = require('../../image/swap-horizontal.svg');\nconst addLiquidity = require('../../image/msgs_ic_pooladd.svg');\nconst subLiquidity = require('../../image/msgs_ic_poolremove.svg');\nconst createPool = require('../../image/flask-outline.svg');\n\nfunction ContainerTitle({ img, children }) {\n  return (\n    <Pane display=\"flex\" alignItems=\"center\">\n      {img && (\n        <img\n          alt={children}\n          style={{\n            width: '30px',\n            height: '30px',\n            marginRight: '5px',\n          }}\n          src={img}\n        />\n      )}\n      {children}\n    </Pane>\n  );\n}\n\nfunction MsgType({ type }) {\n  // if (type.includes('Link')) {\n  //   return <ContainerTitle img={link}>Link</ContainerTitle>;\n  // }\n\n  if (type.includes('MsgCyberlink')) {\n    return <ContainerTitle img={link}>Cyberlink</ContainerTitle>;\n  }\n\n  // investmint\n\n  if (type.includes('MsgInvestmint')) {\n    return <ContainerTitle img={investmint}>Investmint</ContainerTitle>;\n  }\n\n  // grid\n\n  if (type.includes('MsgCreateRoute')) {\n    return <ContainerTitle img={grid}>Create Route</ContainerTitle>;\n  }\n  if (type.includes('MsgEditRoute')) {\n    return <ContainerTitle img={grid}>Edit Route</ContainerTitle>;\n  }\n  if (type.includes('MsgDeleteRoute')) {\n    return <ContainerTitle img={grid}>Delete Route</ContainerTitle>;\n  }\n  if (type.includes('MsgEditRouteName')) {\n    return <ContainerTitle img={grid}>Edit Route Name</ContainerTitle>;\n  }\n\n  // swap\n  if (type.includes('MsgSwapWithinBatch')) {\n    return <ContainerTitle img={swap}>Swap</ContainerTitle>;\n  }\n  if (type.includes('MsgDepositWithinBatch')) {\n    return <ContainerTitle img={addLiquidity}>Add Liquidity</ContainerTitle>;\n  }\n  if (type.includes('MsgWithdrawWithinBatch')) {\n    return <ContainerTitle img={subLiquidity}>Sub Liquidity</ContainerTitle>;\n  }\n  if (type.includes('MsgCreatePool')) {\n    return <ContainerTitle img={createPool}>Create Pool</ContainerTitle>;\n  }\n\n  // bank\n\n  if (type.includes('MsgSend')) {\n    return <ContainerTitle img={bank}>Send</ContainerTitle>;\n  }\n  if (type.includes('MsgMultiSend')) {\n    return <ContainerTitle img={bank}>Multi Send</ContainerTitle>;\n  }\n  if (type.includes('Receive')) {\n    return <ContainerTitle img={bank}>Receive</ContainerTitle>;\n  }\n\n  // staking\n  if (type.includes('MsgCreateValidator')) {\n    return <ContainerTitle img={stake}>Create Validator</ContainerTitle>;\n  }\n\n  if (type.includes('MsgEditValidator')) {\n    return <ContainerTitle img={stake}>Edit Validator</ContainerTitle>;\n  }\n  if (type.includes('MsgDelegate')) {\n    return <ContainerTitle img={stake}>Delegate</ContainerTitle>;\n  }\n  if (type.includes('MsgUndelegate')) {\n    return <ContainerTitle img={stake}>Undelegate</ContainerTitle>;\n  }\n\n  if (type.includes('MsgBeginRedelegate')) {\n    return <ContainerTitle img={stake}>Redelegate</ContainerTitle>;\n  }\n\n  // gov\n  if (type.includes('MsgSubmitProposal')) {\n    return <ContainerTitle img={gov}>Submit Proposal</ContainerTitle>;\n  }\n\n  if (type.includes('MsgDeposit')) {\n    return <ContainerTitle img={gov}>Deposit</ContainerTitle>;\n  }\n  if (type.includes('MsgVote')) {\n    return <ContainerTitle img={gov}>Vote</ContainerTitle>;\n  }\n\n  // distribution\n  if (type.includes('MsgWithdrawValidatorCommission')) {\n    return (\n      <ContainerTitle img={distribution}>Withdraw Commission</ContainerTitle>\n    );\n  }\n\n  if (type.includes('MsgWithdrawDelegatorReward')) {\n    return <ContainerTitle img={distribution}>Withdraw Reward</ContainerTitle>;\n  }\n  if (type.includes('MsgModifyWithdrawAddress')) {\n    return (\n      <ContainerTitle img={distribution}>\n        Modify Withdraw Address\n      </ContainerTitle>\n    );\n  }\n\n  // slashing\n  if (type.includes('MsgUnjail')) {\n    return <ContainerTitle img={slashing}>Unjail</ContainerTitle>;\n  }\n\n  // ibc\n\n  if (type.includes('MsgUpdateClient')) {\n    return <ContainerTitle img={investmint}>IBC Update Client</ContainerTitle>;\n  }\n\n  if (type.includes('MsgRecvPacket')) {\n    return <ContainerTitle img={investmint}>IBC Recv Packet</ContainerTitle>;\n  }\n\n  if (type.includes('MsgAcknowledgement')) {\n    return <ContainerTitle img={investmint}>IBC Ack Packet</ContainerTitle>;\n  }\n\n  if (type.includes('MsgTransfer')) {\n    return <ContainerTitle img={bank}>IBC Transfer</ContainerTitle>;\n  }\n\n  // wasm\n\n  if (type.includes('MsgExecuteContract')) {\n    return <ContainerTitle img={bank}>Execute Program</ContainerTitle>;\n  }\n\n  if (type.includes('MsgInstantiateContract')) {\n    return <ContainerTitle img={bank}>Instantiate Program</ContainerTitle>;\n  }\n\n  if (type.includes('MsgStoreCode')) {\n    return <ContainerTitle img={bank}>Store Program Code</ContainerTitle>;\n  }\n\n  if (type.includes('MsgMigrateContract')) {\n    return <ContainerTitle img={bank}>Migrate Program</ContainerTitle>;\n  }\n\n  if (type.includes('MsgUpdateAdmin')) {\n    return <ContainerTitle img={bank}>Update Program Admin</ContainerTitle>;\n  }\n\n  if (type.includes('MsgClearAdmin')) {\n    return <ContainerTitle img={bank}>Clear Program Admin</ContainerTitle>;\n  }\n\n  return <div>{type}</div>;\n}\n\nexport default MsgType;\n","import { Text } from '@cybercongress/gravity';\n\ninterface TextTableProps {\n  children: React.ReactNode;\n  fontSize?: number;\n  color?: string;\n  display?: string;\n}\n\nfunction TextTable({\n  children,\n  fontSize,\n  color,\n  display,\n  style,\n  ...props\n}: TextTableProps) {\n  return (\n    <Text\n      fontSize={`${fontSize || 16}px`}\n      color={`${color || '#fff'}`}\n      display={`${display || 'inline-flex'}`}\n      alignItems=\"center\"\n      style={style}\n      {...props}\n    >\n      {children}\n    </Text>\n  );\n}\n\nexport default TextTable;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Vitalik.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Vitalik.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import Button from '../btnGrd';\n\nfunction ButtonImgText({ img, text = 'Send', ...props }) {\n  return (\n    <Button style={{ margin: '0 10px' }} {...props}>\n      {text}{' '}\n      {img && (\n        <img\n          style={{\n            width: 20,\n            height: 20,\n            marginLeft: '5px',\n            paddingTop: '2px',\n            objectFit: 'contain',\n          }}\n          src={img}\n          alt=\"img\"\n        />\n      )}\n    </Button>\n  );\n}\n\nexport default ButtonImgText;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./QuestionBtn.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./QuestionBtn.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Pane, Text } from '@cybercongress/gravity';\n\nconst noitem = require('../../image/noitem.svg');\n\nfunction Img({ img }) {\n  return <img style={{ width: '45px', height: '45px' }} src={img} alt=\"img\" />;\n}\n\nfunction NoItems({ text }) {\n  return (\n    <Pane\n      display=\"flex\"\n      paddingY={40}\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      textTransform=\"lowercase\"\n    >\n      <Img img={noitem} />\n      <Text fontSize=\"18px\" color=\"#fff\">\n        {text}\n      </Text>\n    </Pane>\n  );\n}\n\nexport default NoItems;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ValueImg.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ValueImg.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { checkIsEmoji } from 'src/utils/emoji';\nimport { trimString } from '../../utils/utils';\nimport styles from './ValueImg.module.scss';\n\nconst hydrogen = require('../../image/hydrogen.svg');\nconst tocyb = require('../../image/boot.png');\nconst boot = require('../../image/large-green.png');\nconst downOutline = require('../../image/chevronDownOutline.svg');\nconst gol = require('../../image/seedling.png');\nconst atom = require('../../image/cosmos-2.svg');\nconst eth = require('../../image/Ethereum_logo_2014.svg');\nconst pool = require('../../image/gravitydexPool.png');\nconst ibc = require('../../image/ibc-unauth.png');\nconst cosmos = require('../../image/cosmos-2.svg');\nconst osmosis = require('../../image/osmosis.svg');\nconst customNetwork = require('../../image/large-orange-circle.png');\n\nconst pussy = '🟣';\n\nfunction ValueImg({\n  text,\n  onlyImg,\n  marginImg,\n  marginContainer,\n  justifyContent,\n  zIndexImg,\n  flexDirection,\n  size,\n  type,\n  ...props\n}) {\n  let img = null;\n  let textCurency = text;\n\n  switch (text) {\n    case 'millivolt':\n      img = '⚡️';\n      textCurency = 'V';\n      break;\n\n    case 'milliampere':\n      img = '💡';\n      textCurency = 'A';\n      break;\n\n    case 'hydrogen':\n      img = hydrogen;\n      textCurency = 'H';\n      break;\n\n    case 'liquidpussy':\n      img = hydrogen;\n      textCurency = 'LP';\n      break;\n\n    case 'boot':\n      img = boot;\n      textCurency = 'BOOT';\n      break;\n\n    case 'tocyb':\n      img = tocyb;\n      textCurency = 'TOCYB';\n      break;\n\n    case 'choose':\n      img = downOutline;\n      textCurency = 'choose';\n      break;\n\n    case 'GOL':\n      img = gol;\n      textCurency = 'GOL';\n      break;\n\n    case 'ATOM':\n    case 'atom':\n      img = atom;\n      textCurency = 'ATOM';\n      break;\n\n    case 'eth':\n      img = eth;\n      textCurency = 'ETH';\n      break;\n\n    case 'cosmos':\n      img = cosmos;\n      textCurency = 'cosmos';\n      break;\n\n    case 'bostrom':\n      img = boot;\n      textCurency = 'bostrom';\n      break;\n\n    case 'osmo':\n    case 'OSMO':\n      img = osmosis;\n      textCurency = 'OSMO';\n      break;\n\n    case 'osmosis':\n      img = osmosis;\n      textCurency = 'osmosis';\n      break;\n\n    case 'pussy':\n    case 'PUSSY':\n      img = pussy;\n      textCurency = 'PUSSY';\n      break;\n\n    case 'space-pussy':\n      img = pussy;\n      textCurency = 'space-pussy';\n      break;\n\n    default:\n      if (text.includes('pool')) {\n        textCurency = trimString(text, 3, 3);\n        img = pool;\n        break;\n      } else if (text.includes('ibc')) {\n        textCurency = trimString(text, 3, 3);\n        img = ibc;\n        break;\n      } else if (text.length > 32) {\n        textCurency = text.slice(0, 32);\n        img = customNetwork;\n        break;\n      } else {\n        textCurency = text;\n        img = customNetwork;\n        break;\n      }\n  }\n\n  if (type && type === 'pool') {\n    img = pool;\n  }\n  if (type && type === 'ibc') {\n    img = ibc;\n  }\n\n  const emojiIcon = checkIsEmoji(img);\n\n  return (\n    <div\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: justifyContent || 'flex-start',\n        margin: marginContainer || 0,\n        flexDirection: flexDirection || 'unset',\n      }}\n      {...props}\n    >\n      {!onlyImg && (\n        <>\n          <span\n            style={{\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textTransform: 'uppercase',\n            }}\n          >\n            {textCurency}\n          </span>\n          &nbsp;\n          {img && (\n            <>\n              {emojiIcon ? (\n                <span className={styles.emojiIcon}>{img}</span>\n              ) : (\n                <img\n                  style={{\n                    margin: marginImg || 0,\n                    width: size || 20,\n                    height: size || 20,\n                    // objectFit: 'cover',\n                    zIndex: zIndexImg || 0,\n                  }}\n                  src={img}\n                  alt=\"text\"\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ValueImg;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./TextDenom.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./TextDenom.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Option } from 'src/types';\nimport { NetworkList, ChannelList, TokenList } from 'src/types/hub';\n\nconst enum Hub {\n  channels = 'channels',\n  tokens = 'tokens',\n  networks = 'networks',\n}\n\ntype SliceState = {\n  [Hub.channels]: Option<ChannelList>;\n  [Hub.tokens]: Option<TokenList>;\n  [Hub.networks]: Option<NetworkList>;\n};\n\nconst keyLS = (key: Hub) => `hub-${key}`;\n\nfunction getItem(key: Hub) {\n  const poolsGetItem = localStorage.getItem(keyLS(key));\n\n  return poolsGetItem ? JSON.parse(poolsGetItem) : undefined;\n}\n\nfunction saveToLocalStorage(key: Hub, state: SliceState) {\n  const data = state[key];\n\n  localStorage.setItem(keyLS(key), JSON.stringify(data));\n}\n\nconst initialState: SliceState = {\n  [Hub.channels]: getItem(Hub.channels),\n  [Hub.tokens]: getItem(Hub.tokens),\n  [Hub.networks]: getItem(Hub.networks),\n};\n\nconst slice = createSlice({\n  name: 'hub',\n  initialState,\n  reducers: {\n    setTokens: (state, { payload }: PayloadAction<TokenList>) => {\n      state[Hub.tokens] = payload;\n\n      saveToLocalStorage(Hub.tokens, state);\n    },\n    setNetworks: (state, { payload }: PayloadAction<NetworkList>) => {\n      state[Hub.networks] = payload;\n\n      saveToLocalStorage(Hub.networks, state);\n    },\n    setChannels: (state, { payload }: PayloadAction<ChannelList>) => {\n      state[Hub.channels] = payload;\n\n      saveToLocalStorage(Hub.channels, state);\n    },\n  },\n});\n\nexport const { setTokens, setNetworks, setChannels } = slice.actions;\n\nexport default slice.reducer;\n","import { Pane } from '@cybercongress/gravity';\nimport { formatNumber } from '../../utils/utils';\nimport DenomArr from '../denom';\nimport { BASE_DENOM } from 'src/constants/config';\n\nfunction NumberCurrency({\n  amount,\n  fontSizeDecimal,\n  currencyNetwork = BASE_DENOM,\n  onlyImg,\n  onlyText = true,\n  ...props\n}) {\n  // const number = formatNumber(amount / CYBER.DIVISOR_CYBER_G, 3);\n  return (\n    <Pane\n      display=\"grid\"\n      gridTemplateColumns=\"1fr 45px\"\n      gridGap=\"5px\"\n      {...props}\n    >\n      <Pane whiteSpace=\"nowrap\" display=\"flex\" alignItems=\"center\">\n        <span>{formatNumber(Math.floor(amount))}</span>\n      </Pane>\n      <div\n        style={{ textAlign: 'start', alignItems: 'center', display: 'flex' }}\n      >\n        <DenomArr\n          denomValue={currencyNetwork}\n          onlyText={onlyText}\n          onlyImg={onlyImg}\n        />\n      </div>\n    </Pane>\n  );\n}\n\nexport default NumberCurrency;\n","/* eslint-disable camelcase */\nimport { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadJsonFromLocalStorage,\n  saveJsonToLocalStorage,\n  loadStringFromLocalStorage,\n  saveStringToLocalStorage,\n  getEntrypointKeyName,\n} from 'src/utils/localStorage';\n\nimport {\n  ScriptEntrypointNames,\n  ScriptContext,\n  ScriptEntrypoints,\n} from 'src/services/scripting/types';\n\nimport { TabularKeyValues } from 'src/types/data';\n\nimport type { AppThunk, SliceActions } from 'src/redux/types';\n\nimport defaultParticleScript from 'src/services/scripting/rune/default/particle.rn';\nimport { RootState } from '../store';\n\ntype SliceState = {\n  context: ScriptContext; // Omit<ScriptContext, 'secrets' | 'user'>;\n  scripts: {\n    entrypoints: ScriptEntrypoints;\n  };\n};\n\nconst particleEnabled = loadStringFromLocalStorage(\n  getEntrypointKeyName('particle', 'enabled'),\n  undefined\n);\n\nconst isParticleScriptEnabled =\n  particleEnabled !== undefined ? !!particleEnabled : true;\n\nconsole.log('----isParticleScriptEnabled', isParticleScriptEnabled);\n\nconst initialScriptEntrypoints: ScriptEntrypoints = {\n  particle: {\n    title: 'Personal processor',\n    script: loadStringFromLocalStorage(\n      'particle',\n      defaultParticleScript\n    ) as string,\n    enabled: !!isParticleScriptEnabled,\n  },\n  // myParticle: {\n  //   title: 'Social inference',\n  //   script: '',\n  //   enabled: true,\n  // },\n};\n\nconst initialState: SliceState = {\n  context: {\n    secrets: loadJsonFromLocalStorage('secrets', {}),\n    params: {},\n    user: {},\n  },\n  scripts: {\n    entrypoints: initialScriptEntrypoints,\n  },\n};\n\n// export function setSecrets(secrets: TabularKeyValues): AppThunk {\n//   return (dispatch) => {\n//     saveJsonToLocalStorage('secrets', secrets);\n//     dispatch(setContext({ name: 'secrets', item: secrets }));\n//   };\n// }\n\nconst slice = createSlice({\n  name: 'scripting',\n  initialState,\n  reducers: {\n    setContext: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        name: keyof ScriptContext;\n        item: ScriptContext[keyof ScriptContext];\n      }>\n    ) => {\n      state.context = { ...state.context, [payload.name]: payload.item };\n    },\n    setEntrypoint: (\n      state,\n      { payload }: PayloadAction<{ name: ScriptEntrypointNames; code: string }>\n    ) => {\n      const { name, code } = payload;\n      if (code) {\n        state.scripts.entrypoints[name].script = code;\n      }\n    },\n    setSecret: (\n      state,\n      { payload }: PayloadAction<{ key: string; value: string }>\n    ) => {\n      state.context.secrets[payload.key] = payload.value;\n      saveJsonToLocalStorage('secrets', state.context.secrets);\n    },\n    removeSecret: (state, { payload }: PayloadAction<{ key: string }>) => {\n      delete state.context.secrets[payload.key];\n      saveJsonToLocalStorage('secrets', state.context.secrets);\n    },\n    setEntrypointEnabled: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{ name: ScriptEntrypointNames; enabled: boolean }>\n    ) => {\n      const { name, enabled } = payload;\n      saveStringToLocalStorage(\n        getEntrypointKeyName(name, 'enabled'),\n        enabled ? 'true' : ''\n      );\n\n      state.scripts.entrypoints[name].enabled = enabled;\n    },\n  },\n});\n\nexport const selectRuneEntypoints = (store: RootState) =>\n  store.scripting.scripts.entrypoints;\n\nexport type ScriptingActionTypes = SliceActions<typeof slice.actions>;\n\nexport const {\n  setEntrypoint,\n  setEntrypointEnabled,\n  setContext,\n  setSecret,\n  removeSecret,\n} = slice.actions;\n\nexport default slice.reducer;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { UserContext } from 'src/services/scripting/types';\nimport { Remote, proxy } from 'comlink';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport {\n  selectRuneEntypoints,\n  setEntrypoint,\n} from 'src/redux/reducers/scripting';\nimport { selectCurrentPassport } from 'src/features/passport/passports.redux';\nimport { RuneEngine } from 'src/services/scripting/engine';\nimport { Option } from 'src/types';\nimport { EmbeddingApi } from 'src/services/backend/workers/background/api/mlApi';\nimport { useBackend } from '../backend/backend';\n\ntype RuneFrontend = Omit<RuneEngine, 'isSoulInitialized$'>;\n\ntype ScriptingContextType = {\n  isSoulInitialized: boolean;\n  rune: Option<Remote<RuneFrontend>>;\n  embeddingApi: Option<EmbeddingApi>;\n};\n\nconst ScriptingContext = React.createContext<ScriptingContextType>({\n  isSoulInitialized: false,\n  rune: undefined,\n  embeddingApi: undefined,\n});\n\nexport function useScripting() {\n  return React.useContext(ScriptingContext);\n}\n\nfunction ScriptingProvider({ children }: { children: React.ReactNode }) {\n  const {\n    rune: runeBackend,\n    ipfsApi,\n    isIpfsInitialized,\n    embeddingApi$,\n  } = useBackend();\n\n  const [isSoulInitialized, setIsSoulInitialized] = useState(false);\n  const runeRef = useRef<Option<Remote<RuneFrontend>>>();\n  const embeddingApiRef = useRef<Option<Remote<EmbeddingApi>>>();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    runeBackend.pushContext('secrets', secrets);\n\n    const setupObservervable = async () => {\n      const { isSoulInitialized$ } = runeBackend;\n\n      const soulSubscription = (await isSoulInitialized$).subscribe((v) => {\n        if (v) {\n          runeRef.current = runeBackend;\n          console.log('👻 soul initalized');\n        }\n        setIsSoulInitialized(!!v);\n      });\n\n      const embeddingApiSubscription = (await embeddingApi$).subscribe(\n        proxy((embeddingApi) => {\n          if (embeddingApi) {\n            embeddingApiRef.current = embeddingApi;\n            console.log('+ embedding api initalized', embeddingApi);\n          }\n        })\n      );\n\n      return () => {\n        soulSubscription.unsubscribe();\n        embeddingApiSubscription.unsubscribe();\n      };\n    };\n\n    setupObservervable();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const runeEntryPoints = useAppSelector(selectRuneEntypoints);\n\n  const citizenship = useAppSelector(selectCurrentPassport);\n  const secrets = useAppSelector((state) => state.scripting.context.secrets);\n\n  useEffect(() => {\n    if (!isSoulInitialized || !runeRef.current) {\n      return;\n    }\n\n    if (citizenship) {\n      const particleCid = citizenship.extension.particle;\n\n      runeRef.current.pushContext('user', {\n        address: citizenship.owner,\n        nickname: citizenship.extension.nickname,\n        citizenship,\n        particle: particleCid,\n      } as UserContext);\n    } else {\n      runeRef.current.popContext(['user']);\n    }\n  }, [citizenship, isSoulInitialized]);\n\n  useEffect(() => {\n    if (isSoulInitialized && runeRef.current) {\n      runeRef.current.pushContext('secrets', secrets);\n    }\n  }, [secrets, isSoulInitialized]);\n\n  useEffect(() => {\n    (async () => {\n      if (citizenship && ipfsApi) {\n        const particleCid = citizenship.extension.particle;\n\n        if (particleCid && isIpfsInitialized) {\n          (async () => {\n            const result = await ipfsApi.fetchWithDetails(particleCid, 'text');\n\n            dispatch(\n              setEntrypoint({ name: 'particle', code: result?.content || '' })\n            );\n          })();\n        }\n      }\n    })();\n  }, [citizenship, isIpfsInitialized, ipfsApi, dispatch]);\n\n  useEffect(() => {\n    runeBackend.setEntrypoints(runeEntryPoints);\n  }, [runeEntryPoints, runeBackend]);\n\n  const value = useMemo(() => {\n    return {\n      rune: runeRef.current,\n      embeddingApi: embeddingApiRef.current,\n      isSoulInitialized,\n    };\n  }, [isSoulInitialized]);\n\n  return (\n    <ScriptingContext.Provider value={value}>\n      {children}\n    </ScriptingContext.Provider>\n  );\n}\n\nexport default ScriptingProvider;\n","import { useEffect, useState } from 'react';\nimport {\n  IPFSContentDetails,\n  IPFSContentDetailsMutated,\n} from 'src/services/ipfs/types';\nimport { ParticleCid } from 'src/types/base';\nimport { parseArrayLikeToDetails } from 'src/services/ipfs/utils/content';\nimport { QueueItemStatus } from 'src/services/QueueManager/types';\nimport { Option } from 'src/types';\nimport useQueueIpfsContent from './useQueueIpfsContent';\nimport useRuneMutation from './useRuneMutation';\n\nconst useParticle = (\n  cid: ParticleCid,\n  parentId: Option<string> = undefined,\n  rank: Option<number> = undefined\n) => {\n  const {\n    fetchParticle,\n    status: queueItemStatus,\n    content,\n  } = useQueueIpfsContent(parentId);\n  const [details, setDetails] = useState<\n    IPFSContentDetails | IPFSContentDetailsMutated\n  >();\n  const [status, setStatus] = useState<QueueItemStatus>('pending');\n  const [hidden, setHidden] = useState(false);\n  const [mutated, setMutated] = useState(false);\n  const { state, mutatedDetails } = useRuneMutation(cid, details);\n  useEffect(() => {\n    if (cid && fetchParticle) {\n      setStatus('pending');\n      setDetails(undefined);\n      setMutated(false);\n      fetchParticle(cid, rank);\n    }\n  }, [cid, fetchParticle, rank]);\n\n  useEffect(() => {\n    if (queueItemStatus === 'completed') {\n      parseArrayLikeToDetails(\n        content,\n        cid\n        // (progress: number) => console.log(`${cid} progress: ${progress}`)\n      ).then((details) => {\n        setDetails(details);\n        setStatus('completed');\n      });\n    } else {\n      setStatus(queueItemStatus);\n    }\n  }, [content, queueItemStatus, cid]);\n\n  useEffect(() => {\n    if (state === 'done') {\n      const hiddenByRune =\n        !!mutatedDetails?.mutation && mutatedDetails.mutation === 'hidden';\n      setHidden(hiddenByRune);\n      setDetails(mutatedDetails);\n      setMutated(true);\n    }\n  }, [state, mutatedDetails]);\n\n  return { status, details, hidden, content, mutated };\n};\n\nexport default useParticle;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport styles from './styles.module.scss';\nimport Tooltip from '../tooltip/tooltip';\n\nconst size = '15 Mb';\n\nexport type StatusType =\n  | 'executing'\n  | 'timeout'\n  | 'availableDownload'\n  | 'completed'\n  | 'sparkApp'\n  | 'legacy';\n\nconst typeStatus = (type: StatusType) => {\n  let status = {\n    color: '#546e7a',\n    text: 'IPFS',\n  };\n\n  switch (type) {\n    case 'executing':\n      status = {\n        color: '#00b0ff',\n        text: 'cyb: I am getting content meta information',\n      };\n      break;\n    case 'timeout':\n      status = {\n        color: '#ff3d00',\n        text: 'cyb: I was unable to find traces of this in dht :-(',\n      };\n      break;\n    case 'availableDownload':\n      status = {\n        color: '#ffd600',\n        text: `cyb: ${size} answer is available for download`,\n      };\n      break;\n    case 'completed':\n      status = {\n        color: '#00e676',\n        text: `cyb: ${size} answer is loaded`,\n      };\n      break;\n    case 'sparkApp':\n      status = {\n        color: '#d500f9',\n        text: 'cyb: Answer is loaded instantly through spark app',\n      };\n      break;\n    case 'legacy':\n      status = {\n        color: '#ff9100',\n        text: 'cyb: I can not load content from legacy web. You have to go and do it yourself. But I would recommend to ~transform it',\n      };\n      break;\n    default:\n      status = {\n        color: '#546e7a',\n        text: 'IPFS',\n      };\n      break;\n  }\n  return status;\n};\n\ntype Props = {\n  status: StatusType;\n};\n\nfunction Status({ status }: Props) {\n  const { color, text } = typeStatus(status);\n\n  return (\n    <div>\n      <Tooltip placement=\"bottom\" tooltip={text}>\n        <div\n          className={cx(styles.customPill, {\n            [styles.glow]: status === 'executing',\n          })}\n          style={{ backgroundColor: color }}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default Status;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./Display.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./Display.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { QueryLiquidityPoolsResponse } from '@cybercongress/cyber-js/build/codec/tendermint/liquidity/v1beta1/query';\nimport { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ntype SliceState = {\n  pools: undefined | QueryLiquidityPoolsResponse;\n};\n\nconst localStoragePoolsKey = 'liquidityPools';\n\nconst poolsGetItem = localStorage.getItem(localStoragePoolsKey);\n\nconst poolsInitState = poolsGetItem ? JSON.parse(poolsGetItem) : undefined;\n\nconst initialState: SliceState = {\n  pools: poolsInitState,\n};\n\nfunction saveToLocalStorage(state: SliceState) {\n  const { pools } = state;\n\n  localStorage.setItem(localStoragePoolsKey, JSON.stringify(pools));\n}\n\nconst slice = createSlice({\n  name: 'warp',\n  initialState,\n  reducers: {\n    setPools: (\n      state,\n      { payload }: PayloadAction<QueryLiquidityPoolsResponse>\n    ) => {\n      state.pools = payload;\n\n      saveToLocalStorage(state);\n    },\n  },\n});\n\nexport const { setPools } = slice.actions;\n\nexport default slice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { IbcDenomsArr } from 'src/types/ibc';\n\ntype SliceState = {\n  denomTraces: undefined | IbcDenomsArr;\n};\n\nconst localStoragePoolsKey = 'denomTraces';\n\nconst poolsGetItem = localStorage.getItem(localStoragePoolsKey);\n\nconst poolsInitState = poolsGetItem ? JSON.parse(poolsGetItem) : undefined;\n\nconst initialState: SliceState = {\n  denomTraces: poolsInitState,\n};\n\nfunction saveToLocalStorage(state: SliceState) {\n  const { denomTraces } = state;\n\n  localStorage.setItem(localStoragePoolsKey, JSON.stringify(denomTraces));\n}\n\nconst slice = createSlice({\n  name: 'ibcDenom',\n  initialState,\n  reducers: {\n    setDenomTraces: (state, { payload }: PayloadAction<IbcDenomsArr>) => {\n      state.denomTraces = payload;\n\n      saveToLocalStorage(state);\n    },\n  },\n});\n\nexport const { setDenomTraces } = slice.actions;\n\nexport default slice.reducer;\n","import React, { useContext, useMemo } from 'react';\nimport { useChannels, useNetworks, useTokens } from 'src/hooks/useHub';\nimport { Option } from 'src/types';\nimport { ObjectKey } from 'src/types/data';\nimport { Channel, Network, Token } from 'src/types/hub';\n\ntype HubProviderContextType = {\n  channels: Option<ObjectKey<Channel>>;\n  tokens: Option<ObjectKey<Token>>;\n  networks: Option<ObjectKey<Network>>;\n};\n\nconst valueContext = {\n  channels: undefined,\n  tokens: undefined,\n  networks: undefined,\n};\n\nconst HubProviderContext =\n  React.createContext<HubProviderContextType>(valueContext);\n\nexport function useHub() {\n  return useContext(HubProviderContext);\n}\n\nfunction HubProvider({ children }: { children: React.ReactNode }) {\n  const { networks } = useNetworks();\n  const { tokens } = useTokens();\n  const { channels } = useChannels();\n\n  const valueMemo = useMemo(\n    () => ({\n      networks,\n      tokens,\n      channels,\n    }),\n    [networks, tokens, channels]\n  );\n\n  return (\n    <HubProviderContext.Provider value={valueMemo}>\n      {children}\n    </HubProviderContext.Provider>\n  );\n}\n\nexport default HubProvider;\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport usePoolListInterval from 'src/hooks/usePoolListInterval';\nimport { Option } from 'src/types';\nimport {\n  IbcDenomsArr,\n  TracesDenomFuncResponse,\n  TracesDenomFuncType,\n} from 'src/types/ibc';\nimport { findPoolDenomInArr, isNative } from 'src/utils/utils';\nimport useAllDenomTraces from 'src/hooks/useAllDenomTraces';\nimport { useHub } from './hub';\n\ntype IbcDenomContextContextType = {\n  ibcDenoms: Option<IbcDenomsArr>;\n  tracesDenom: TracesDenomFuncType;\n};\n\nconst valueContext = {\n  ibcDenoms: undefined,\n  tracesDenom: () => [],\n};\n\nconst IbcDenomContext =\n  React.createContext<IbcDenomContextContextType>(valueContext);\n\nexport function useIbcDenom() {\n  return useContext(IbcDenomContext);\n}\n\nfunction IbcDenomProvider({ children }: { children: React.ReactNode }) {\n  const poolsData = usePoolListInterval();\n  const allDenomTraces = useAllDenomTraces();\n  const { tokens } = useHub();\n\n  const tracesDenom = useCallback<TracesDenomFuncType>(\n    (denomTraces: string): TracesDenomFuncResponse[] => {\n      const infoDenomTemp: TracesDenomFuncResponse = {\n        denom: denomTraces,\n        coinDecimals: 0,\n        path: '',\n        coinImageCid: '',\n        native: true,\n      };\n\n      // pool token is array [denom1, denom2]\n      if (denomTraces.includes('pool') && poolsData) {\n        const findPool = findPoolDenomInArr(denomTraces, poolsData);\n        if (findPool) {\n          const { reserveCoinDenoms } = findPool;\n          const denomA = tracesDenom(reserveCoinDenoms[0]);\n          const denomB = tracesDenom(reserveCoinDenoms[1]);\n          return [...denomA, ...denomB];\n        }\n      }\n\n      // check hub contracts\n      if (tokens && tokens[denomTraces]) {\n        const {\n          decimals,\n          ticker,\n          logo,\n          channel_id: channelId,\n          contract,\n        } = tokens[denomTraces];\n\n        infoDenomTemp.denom = ticker;\n        infoDenomTemp.coinDecimals = parseFloat(decimals);\n        infoDenomTemp.coinImageCid = contract.includes('ibc') ? logo : '';\n        infoDenomTemp.path = channelId;\n      } else if (\n        // response lcd all denom traces\n        !isNative(denomTraces) &&\n        allDenomTraces &&\n        allDenomTraces[denomTraces]\n      ) {\n        const { baseDenom, sourceChannelId: sourceChannelIFromPath } =\n          allDenomTraces[denomTraces];\n        infoDenomTemp.native = false;\n        infoDenomTemp.denom = baseDenom;\n        infoDenomTemp.path = sourceChannelIFromPath;\n      } else {\n        infoDenomTemp.denom = denomTraces.toUpperCase();\n      }\n\n      return [{ ...infoDenomTemp }];\n    },\n\n    [allDenomTraces, poolsData, tokens]\n  );\n\n  const value = useMemo(\n    () => ({ ibcDenoms: allDenomTraces, tracesDenom }),\n    [allDenomTraces, tracesDenom]\n  );\n\n  return (\n    <IbcDenomContext.Provider value={value}>\n      {children}\n    </IbcDenomContext.Provider>\n  );\n}\n\nexport default IbcDenomProvider;\n","import { useQuery } from '@tanstack/react-query';\nimport { useEffect, useState } from 'react';\nimport { reduceBalances, isNative } from 'src/utils/utils';\nimport { Option } from 'src/types';\nimport { ObjKeyValue } from 'src/types/data';\nimport { CyberClient } from '@cybercongress/cyber-js';\nimport { useQueryClient } from 'src/contexts/queryClient';\nimport { BASE_DENOM, DENOM_LIQUID } from 'src/constants/config';\nimport { useHub } from 'src/contexts/hub';\n\ntype OptionInterval = {\n  refetchInterval?: number | false;\n};\n\nconst defaultTokenList = {\n  [BASE_DENOM]: 0,\n  [DENOM_LIQUID]: 0,\n  milliampere: 0,\n  millivolt: 0,\n  tocyb: 0,\n};\n\nconst totalSupplyFetcher = (client: Option<CyberClient>) => {\n  if (!client) {\n    return undefined;\n  }\n\n  return client.totalSupply();\n};\n\nfunction useGetTotalSupply(\n  option: OptionInterval = { refetchInterval: false }\n) {\n  const queryClient = useQueryClient();\n  const { tokens } = useHub();\n  const [totalSupplyAll, setTotalSupplyAll] =\n    useState<Option<ObjKeyValue>>(undefined);\n  const [totalSupplyProofList, setTotalSupplyProofList] =\n    useState<Option<ObjKeyValue>>(undefined);\n  const { data: dataGetTotalSupply } = useQuery(\n    ['totalSupply'],\n    () => totalSupplyFetcher(queryClient),\n    {\n      enabled: Boolean(queryClient),\n      refetchInterval: option.refetchInterval,\n    }\n  );\n\n  useEffect(() => {\n    const getTotalSupply = async () => {\n      if (dataGetTotalSupply) {\n        const datareduceTotalSupply = reduceBalances(dataGetTotalSupply);\n\n        if (Object.keys(datareduceTotalSupply).length > 0) {\n          setTotalSupplyAll(datareduceTotalSupply);\n        }\n\n        const reduceData = {};\n\n        if (tokens) {\n          Object.keys(datareduceTotalSupply).forEach((key) => {\n            const value = datareduceTotalSupply[key];\n            if (!isNative(key)) {\n              if (tokens[key]) {\n                reduceData[key] = value;\n              }\n            } else if (key.indexOf('pool') !== 0) {\n              reduceData[key] = value;\n            }\n          });\n        }\n\n        if (Object.keys(reduceData).length > 0) {\n          setTotalSupplyProofList({ ...defaultTokenList, ...reduceData });\n        } else {\n          setTotalSupplyProofList({\n            ...defaultTokenList,\n            ...datareduceTotalSupply,\n          });\n        }\n      }\n    };\n\n    getTotalSupply();\n  }, [tokens, dataGetTotalSupply]);\n\n  return { totalSupplyProofList, totalSupplyAll };\n}\n\nexport default useGetTotalSupply;\n","import { useState, useEffect, useCallback } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useQueryClient } from 'src/contexts/queryClient';\nimport { useIbcDenom } from 'src/contexts/ibcDenom';\nimport { DENOM_LIQUID, BASE_DENOM } from 'src/constants/config';\nimport useGetTotalSupply from './useGetTotalSupply';\nimport usePoolListInterval from './usePoolListInterval';\nimport { reduceBalances, convertAmount } from '../utils/utils';\n\nconst defaultTokenList = {\n  [BASE_DENOM]: 0,\n  [DENOM_LIQUID]: 0,\n  milliampere: 0,\n  millivolt: 0,\n  tocyb: 0,\n};\n\nconst calculatePrice = (coinsPair, balances, tracesDenom) => {\n  let price = 0;\n  const tokenA = coinsPair[0];\n  const tokenB = coinsPair[1];\n  const [{ coinDecimals: coinDecimalsA }] = tracesDenom(tokenA);\n  const [{ coinDecimals: coinDecimalsB }] = tracesDenom(tokenB);\n\n  const amountA = new BigNumber(convertAmount(balances[tokenA], coinDecimalsA));\n  const amountB = new BigNumber(convertAmount(balances[tokenB], coinDecimalsB));\n\n  if (amountA.comparedTo(0) && amountB.comparedTo(0)) {\n    price = amountA.dividedBy(amountB).toNumber();\n  }\n\n  return price;\n};\n\nconst getPoolPrice = (data, tracesDenom) => {\n  const copyObj = { ...data };\n  Object.keys(copyObj).forEach((key) => {\n    const element = copyObj[key];\n    if (element.balances) {\n      const coinsPair = element.reserveCoinDenoms;\n      const { balances } = element;\n      let price = 0;\n      if (coinsPair[0] === DENOM_LIQUID || coinsPair[1] === DENOM_LIQUID) {\n        if (coinsPair[0] === DENOM_LIQUID) {\n          price = calculatePrice(coinsPair, balances, tracesDenom);\n        } else {\n          price = calculatePrice(\n            [...coinsPair].reverse(),\n            balances,\n            tracesDenom\n          );\n          copyObj[key].reserveCoinDenoms = [...coinsPair].reverse();\n        }\n      } else {\n        price = calculatePrice(coinsPair, balances, tracesDenom);\n      }\n      element.price = price;\n    }\n  });\n  return copyObj;\n};\n\nconst getPoolsBalance = async (data, client) => {\n  const copyObj = { ...data };\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in copyObj) {\n    if (Object.hasOwnProperty.call(copyObj, key)) {\n      const element = copyObj[key];\n      const { reserveAccountAddress } = element;\n      // eslint-disable-next-line no-await-in-loop\n      const dataBalsnce = await client.getAllBalances(reserveAccountAddress);\n      const reduceDataBalances = reduceBalances(dataBalsnce);\n      element.balances = reduceDataBalances;\n    }\n  }\n  return copyObj;\n};\n\nfunction useGetMarketData() {\n  const queryClient = useQueryClient();\n  const { tracesDenom } = useIbcDenom();\n  // const [fetchDataWorker] = useWorker(getMarketData);\n  const [dataTotal, setDataTotal] = useState({});\n  const [poolsTotal, setPoolsTotal] = useState([]);\n  const [marketData, setMarketData] = useState({});\n  const { totalSupplyAll: dataTotalSupply } = useGetTotalSupply({\n    refetchInterval: 1000 * 60 * 3,\n  });\n  const dataPools = usePoolListInterval();\n  // const dataPools = usePoolListInterval({ refetchInterval: 1000 * 60 * 3 });\n\n  useEffect(() => {\n    const marketDataLS = localStorage.getItem('marketData');\n    if (marketDataLS !== null) {\n      const marketDataLSPObj = JSON.parse(marketDataLS);\n      setMarketData({ ...marketDataLSPObj });\n    }\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (dataTotalSupply && Object.keys(dataTotalSupply).length > 0) {\n        setDataTotal({ ...defaultTokenList, ...dataTotalSupply });\n      }\n    } catch (error) {\n      console.log('error', error);\n      setDataTotal([]);\n    }\n  }, [dataTotalSupply]);\n\n  useEffect(() => {\n    const getPpools = async () => {\n      try {\n        if (dataPools && dataPools.length > 0) {\n          const reduceObj = dataPools.reduce(\n            (obj, item) => ({\n              ...obj,\n              [item.poolCoinDenom]: {\n                ...item,\n              },\n            }),\n            {}\n          );\n          const poolsBalance = await getPoolsBalance(reduceObj, queryClient);\n          const poolPriceObj = getPoolPrice(poolsBalance, tracesDenom);\n          setPoolsTotal(poolPriceObj);\n        }\n      } catch (error) {\n        console.log('error', error);\n        setPoolsTotal([]);\n      }\n    };\n    getPpools();\n  }, [dataPools, queryClient, tracesDenom]);\n\n  useEffect(() => {\n    try {\n      if (\n        Object.keys(dataTotal).length > 0 &&\n        Object.keys(poolsTotal).length > 0\n      ) {\n        const marketDataObj = {};\n        marketDataObj[DENOM_LIQUID] = 1;\n        Object.keys(dataTotal).forEach((keyI) => {\n          Object.keys(poolsTotal).forEach((keyJ) => {\n            const itemJ = poolsTotal[keyJ];\n            const { reserveCoinDenoms } = itemJ;\n            if (\n              reserveCoinDenoms[0] === DENOM_LIQUID &&\n              reserveCoinDenoms[1] === keyI\n            ) {\n              marketDataObj[keyI] = itemJ.price;\n            }\n          });\n        });\n        const tempdataPool = getMarketDataPool(marketDataObj);\n        const resultMarketDataObj = { ...marketDataObj, ...tempdataPool };\n        setMarketData(resultMarketDataObj);\n        saveToLocalStorage(resultMarketDataObj);\n      }\n    } catch (error) {\n      console.log('error', error);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dataTotal, poolsTotal]);\n\n  const saveToLocalStorage = (obj) => {\n    if (Object.keys(obj).length > 0) {\n      localStorage.setItem('marketData', JSON.stringify(obj));\n    }\n  };\n\n  const getMarketDataPool = useCallback(\n    (data) => {\n      try {\n        const tempMarketData = {};\n        if (Object.keys(dataTotal).length > 0) {\n          const filteredDataTotalSupply = Object.keys(dataTotal).filter(\n            (item) => item.includes('pool')\n          );\n\n          filteredDataTotalSupply.forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(poolsTotal, key)) {\n              const { reserveCoinDenoms, balances } = poolsTotal[key];\n\n              if (\n                Object.prototype.hasOwnProperty.call(data, reserveCoinDenoms[0])\n              ) {\n                let marketCapTemp = 0;\n                reserveCoinDenoms.forEach((itemJ) => {\n                  if (data[itemJ] && balances[itemJ]) {\n                    const marketDataPrice = data[itemJ];\n                    const [{ coinDecimals }] = tracesDenom(itemJ);\n                    const balancesConvert = convertAmount(\n                      balances[itemJ],\n                      coinDecimals\n                    );\n                    const marketCapaTemp = marketDataPrice * balancesConvert;\n                    marketCapTemp += marketCapaTemp;\n                  }\n                });\n                if (marketCapTemp > 0) {\n                  const total = dataTotal[key];\n                  const price = marketCapTemp / total;\n                  tempMarketData[key] = price;\n                }\n              }\n            }\n          });\n        }\n        return tempMarketData;\n      } catch (error) {\n        console.log('error', error);\n        return {};\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dataTotal, poolsTotal]\n  );\n\n  return { marketData, dataTotal };\n}\n\nexport default useGetMarketData;\n","import BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport defaultNetworks from 'src/constants/defaultNetworks';\nimport { Networks } from 'src/types/networks';\nimport { getDenomHash, reduceBalances } from 'src/utils/utils';\nimport useGetPoolsWarp from './api/useGetPoolsWarp';\nimport useConnectBostrom from './api/useConnectBostrom';\n\nconst BOSTROM_CONFIG = defaultNetworks[Networks.BOSTROM];\nconst PUSSY_CONFIG = defaultNetworks[Networks.SPACE_PUSSY];\n\nfunction useFindPoolPrice() {\n  const [poolPrice, setPoolPrice] = useState<number | undefined>(undefined);\n  const { queryClient } = useConnectBostrom();\n  const { data } = useGetPoolsWarp(queryClient);\n\n  const denomIbcLP = getDenomHash(\n    'transfer/channel-11',\n    PUSSY_CONFIG.DENOM_LIQUID\n  );\n\n  useEffect(() => {\n    (async () => {\n      if (!data || !queryClient) {\n        return;\n      }\n\n      const findPool = data.pools.find(\n        (item) =>\n          item.reserveCoinDenoms[0] === BOSTROM_CONFIG.DENOM_LIQUID &&\n          item.reserveCoinDenoms[1] === denomIbcLP\n      );\n\n      if (!findPool) {\n        return;\n      }\n\n      const tokenA = findPool.reserveCoinDenoms[0];\n      const tokenB = findPool.reserveCoinDenoms[1];\n\n      const balances = await queryClient.getAllBalances(\n        findPool.reserveAccountAddress\n      );\n\n      const amount = reduceBalances(balances);\n\n      const price = new BigNumber(amount[tokenA])\n        .div(amount[tokenB])\n        .toNumber();\n\n      setPoolPrice(price);\n    })();\n  }, [data, queryClient, denomIbcLP]);\n\n  return poolPrice;\n}\n\nexport default useFindPoolPrice;\n","import React, { useMemo } from 'react';\nimport { WEBSOCKET_URL } from 'src/constants/config';\nimport useWebSocket, { Socket } from './hook';\n\nconst WebsocketsContext = React.createContext<{ cyber: Socket | null }>({\n  cyber: null,\n});\n\nexport function useWebsockets() {\n  return React.useContext(WebsocketsContext);\n}\n\nfunction WebsocketsProvider({ children }: { children: React.ReactNode }) {\n  const cyberWebsocket = useWebSocket(WEBSOCKET_URL);\n\n  const value = useMemo(() => {\n    return {\n      cyber: cyberWebsocket,\n      // may be added more\n    };\n  }, [cyberWebsocket]);\n\n  return (\n    <WebsocketsContext.Provider value={value}>\n      {children}\n    </WebsocketsContext.Provider>\n  );\n}\n\nexport default WebsocketsProvider;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport useQueryContract from 'src/hooks/contract/useQueryContract';\nimport useGetMarketData from 'src/hooks/useGetMarketData';\nimport useConvertMarketData from 'src/hooks/warp/useConvertMarketData';\nimport { ObjKeyValue } from 'src/types/data';\nimport { useWebsockets } from 'src/websockets/context';\n\ntype OptionObj<T> = T | object;\n\ntype ObjData = OptionObj<ObjKeyValue>;\n\ntype DataProviderContextType = {\n  marketData: ObjData;\n  dataTotalSupply: ObjData;\n  block: number | null;\n  filterParticles: string[];\n};\n\nconst valueContext = {\n  marketData: {},\n  dataTotalSupply: {},\n  block: null,\n  filterParticles: [],\n};\n\nexport const FILTERING_CONTRACT =\n  'bostrom1p8drdvmwygrreesp4e425q6xs77zkcsj7z7h9as7sketuv5w334slsxv7l';\n\nconst DataProviderContext =\n  React.createContext<DataProviderContextType>(valueContext);\n\nexport function useAppData() {\n  return useContext(DataProviderContext);\n}\n\nfunction DataProvider({ children }: { children: React.ReactNode }) {\n  const { marketData, dataTotal } = useGetMarketData();\n  const convertMarketData = useConvertMarketData(marketData);\n  const { cyber } = useWebsockets();\n  const [blockHeight, setBlockHeight] = useState<number | null>(null);\n\n  const filterContractQuery = useQueryContract(FILTERING_CONTRACT, {\n    particles: {},\n  });\n\n  const filterParticles = filterContractQuery?.data?.map((item) => item[1]);\n\n  const resultMarketData = Object.keys(convertMarketData).length\n    ? convertMarketData\n    : marketData;\n\n  useEffect(() => {\n    if (!cyber?.connected) {\n      return;\n    }\n\n    const param = \"tm.event='NewBlockHeader'\";\n\n    if (cyber.subscriptions.includes(param)) {\n      return;\n    }\n\n    cyber.sendMessage({\n      method: 'subscribe',\n      params: [param],\n      id: '1',\n      jsonrpc: '2.0',\n    });\n  }, [cyber, cyber?.connected]);\n\n  useEffect(() => {\n    if (!cyber?.message?.result) {\n      return;\n    }\n\n    const message = cyber?.message;\n\n    if (\n      Object.keys(message.result).length > 0 &&\n      message.result.data.type === 'tendermint/event/NewBlockHeader'\n    ) {\n      const { height } = message.result.data.value.header;\n      setBlockHeight(height);\n    }\n  }, [cyber?.message]);\n\n  const valueMemo = useMemo(\n    () => ({\n      marketData: resultMarketData,\n      dataTotalSupply: dataTotal,\n      block: blockHeight,\n      filterParticles: filterParticles || [],\n    }),\n    [resultMarketData, dataTotal, blockHeight, filterParticles]\n  );\n\n  return (\n    <DataProviderContext.Provider value={valueMemo}>\n      {children}\n    </DataProviderContext.Provider>\n  );\n}\n\nexport default DataProvider;\n","/* eslint-disable import/prefer-default-export */\nimport { useCallback } from 'react';\nimport type { EpubView } from 'react-reader';\n\nconst epubKey = 'cyb:epub';\n\nconst getEPubMap = (): Record<string, EpubView['location']> => {\n  try {\n    const epubMapString = localStorage.getItem(epubKey) || '';\n    const epubMap = JSON.parse(epubMapString);\n\n    return epubMap;\n  } catch (error) {\n    console.error('Failed to parse epub locations map:', error);\n\n    return {};\n  }\n};\n\nconst getLocation = (url: string) => {\n  const epubMap = getEPubMap();\n\n  return epubMap[url] ?? null;\n};\n\nconst getSetEPubLocation =\n  (url: string) => (location: EpubView['location']) => {\n    const epubMap = getEPubMap();\n\n    try {\n      epubMap[url] = location;\n      localStorage.setItem(epubKey, JSON.stringify(epubMap));\n    } catch (error) {\n      console.error('Failed to save EPub location:', error);\n    }\n  };\n\nconst useEPubLocation = (\n  url: string\n): [EpubView['location'], (url: string) => void] => {\n  const currentLocation = getLocation(url);\n  const setEPubLocation = useCallback(getSetEPubLocation(url), [url]);\n\n  return [currentLocation, setEPubLocation];\n};\n\nexport default useEPubLocation;\n","import React, {\n  CSSProperties,\n  ComponentProps,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { ReactReader } from 'react-reader';\nimport useEPubLocation from 'src/hooks/useEPubLocation';\n\ninterface IProps {\n  url: string;\n  search?: boolean;\n  style?: CSSProperties;\n}\n\ntype EpubInitOptions = ComponentProps<typeof ReactReader>['epubInitOptions'];\nconst epubInitOptions: EpubInitOptions = { openAs: 'epub' };\n\nfunction EPubView({ url, search, style }: IProps) {\n  const [location, setLocation] = useEPubLocation(url);\n  const currentLocation = location && !search ? location : 0;\n\n  const currentStyle = useMemo(\n    () => ({ height: search ? '300px' : '60vh', ...style }),\n    [style, search]\n  );\n\n  const onLocationChange = useCallback(\n    (loc: string) => {\n      if (!search) {\n        setLocation(loc);\n      }\n    },\n    [search, setLocation]\n  );\n\n  return (\n    <div style={currentStyle}>\n      <ReactReader\n        url={url}\n        location={currentLocation}\n        locationChanged={onLocationChange}\n        epubInitOptions={epubInitOptions}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(EPubView);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import Iframe from '../Iframe/Iframe';\n\ntype Props = {\n  content: string;\n  search?: boolean;\n};\n\nfunction Pdf({ content, search }: Props) {\n  return (\n    <Iframe\n      height={search ? '400px' : '700px'}\n      url={content}\n\n      // TODO: USE loaded content\n      // url={`${CYBER.CYBER_GATEWAY}${ipfsDataDetails?.link}`}\n    />\n  );\n}\n\nexport default Pdf;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/* eslint-disable no-restricted-syntax */\nimport { useEffect, useState } from 'react';\nimport { IPFSContent, IPFSContentDetails } from 'src/services/ipfs/types';\nimport { useBackend } from 'src/contexts/backend/backend';\nimport { CYBER_GATEWAY_URL } from 'src/services/ipfs/config';\n\ninterface VideoPlayerProps {\n  content: IPFSContent;\n  details: IPFSContentDetails;\n}\n\nfunction VideoPlayerGatewayOnly({ content, details }: VideoPlayerProps) {\n  const { ipfsApi } = useBackend();\n  const [contentUrl, setContentUrl] = useState<string>('');\n  useEffect(() => {\n    const load = async () => {\n      if (content?.source === 'node') {\n        setContentUrl(`${CYBER_GATEWAY_URL}/ipfs/${content.cid}`);\n      } else if (content?.source === 'gateway') {\n        setContentUrl(content.contentUrl);\n      } else if (details?.gateway) {\n        setContentUrl(`${CYBER_GATEWAY_URL}${details.link}`);\n      } else {\n        setContentUrl(URL.createObjectURL(new Blob([content.result])));\n      }\n    };\n    load();\n  }, [ipfsApi, content]);\n\n  return contentUrl ? (\n    <video style={{ width: '100%' }} src={contentUrl} controls />\n  ) : null;\n  x;\n}\n\nexport default VideoPlayerGatewayOnly;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./Audio.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./Audio.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { IPFSContent } from 'src/utils/ipfs/ipfs';\nimport styles from './Audio.module.scss';\n\nfunction Audio({ content }: { content: IPFSContent }) {\n  const { result, meta } = content;\n\n  const audioBlob = new Blob([new Uint8Array(result)], { type: meta.mime });\n  const audioUrl = URL.createObjectURL(audioBlob);\n\n  return (\n    <audio controls className={styles.wrapper}>\n      <source src={audioUrl} type={meta.mime} />\n      Your browser does not support the audio tag.\n    </audio>\n  );\n}\n\nexport default Audio;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./steles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./steles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import Iframe from 'src/components/Iframe/Iframe';\nimport styles from './steles.scss';\n\nfunction GatewayContent({ url }: { url: string }) {\n  return (\n    <div className={styles.gatewayCantainer}>\n      <Iframe url={url} />\n    </div>\n  );\n}\n\nexport default GatewayContent;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./steles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./steles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useEffect, useMemo, useState } from 'react';\nimport { TracesDenomFuncResponse } from 'src/types/ibc';\nimport { Option } from 'src/types';\nimport { useIbcDenom } from 'src/contexts/ibcDenom';\nimport Denom from './index';\n\n// generated, recheck\ntype PossibleTokens =\n  | 'millivolt'\n  | 'milliampere'\n  | 'hydrogen'\n  | 'h'\n  | 'liquidpussy'\n  | 'lp'\n  | 'boot'\n  | 'pussy'\n  | 'tocyb'\n  | 'eth'\n  | 'bostrom'\n  | 'space-pussy'\n  | 'cosmos'\n  | 'osmo'\n  | 'terra';\n\ntype DenomArrProps = {\n  denomValue: PossibleTokens | any;\n  onlyText?: boolean;\n  onlyImg?: boolean;\n  tooltipStatusImg?: boolean;\n  tooltipStatusText?: boolean;\n  type?: 'network';\n  size?: number;\n};\n\nfunction DenomArr({\n  denomValue,\n  onlyText,\n  onlyImg,\n  tooltipStatusImg,\n  tooltipStatusText,\n  type,\n  size,\n}: DenomArrProps) {\n  const { tracesDenom } = useIbcDenom();\n\n  const [denom, setDenom] = useState<TracesDenomFuncResponse[]>();\n\n  useEffect(() => {\n    if (type) {\n      return;\n    }\n    const denomTraces = tracesDenom(denomValue);\n\n    setDenom(denomTraces);\n  }, [denomValue, tracesDenom, type]);\n\n  if (type === 'network') {\n    return (\n      <Denom\n        onlyImg={onlyImg}\n        onlyText={onlyText}\n        denomValue={denomValue}\n        tooltipStatusImg={tooltipStatusImg}\n        tooltipStatusText={tooltipStatusText}\n        type={type}\n        infoDenom={{}}\n        gap={13}\n        size={size}\n      />\n    );\n  }\n\n  if (denom && denom.length === 1) {\n    return (\n      <Denom\n        onlyImg={onlyImg}\n        onlyText={onlyText}\n        denomValue={denom[0].denom}\n        tooltipStatusImg={tooltipStatusImg}\n        tooltipStatusText={tooltipStatusText}\n        type={type}\n        infoDenom={denom[0]}\n        gap={13}\n        size={size}\n      />\n    );\n  }\n\n  if (denom && denom.length > 1) {\n    return (\n      <div style={{ display: 'flex' }}>\n        {!onlyText && (\n          <>\n            <Denom\n              type={type}\n              denomValue={denom[0].denom}\n              onlyImg\n              tooltipStatusImg={tooltipStatusImg}\n              tooltipStatusText={tooltipStatusText}\n              infoDenom={denom[0]}\n              size={size}\n            />\n            <Denom\n              type={type}\n              denomValue={denom[1].denom}\n              marginContainer={\n                onlyImg ? '0px 0px 0px -12px' : '0px 5px 0px -12px'\n              }\n              onlyImg\n              tooltipStatusImg={tooltipStatusImg}\n              tooltipStatusText={tooltipStatusText}\n              infoDenom={denom[1]}\n              size={size}\n            />\n          </>\n        )}\n\n        {!onlyImg && (\n          <>\n            <Denom\n              type={type}\n              denomValue={denom[0].denom}\n              onlyText\n              tooltipStatusImg={tooltipStatusImg}\n              tooltipStatusText={tooltipStatusText}\n              infoDenom={denom[0]}\n              size={size}\n            />\n            -\n            <Denom\n              type={type}\n              denomValue={denom[1].denom}\n              onlyText\n              tooltipStatusImg={tooltipStatusImg}\n              tooltipStatusText={tooltipStatusText}\n              infoDenom={denom[1]}\n              size={size}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default DenomArr;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ContainerGradient.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ContainerGradient.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./DisplayTitle.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./DisplayTitle.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// TODO: need use Display component for this\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport styles from './ContainerGradient.module.scss';\nimport { trimString } from '../../utils/utils';\nimport Display from './Display/Display';\nimport { ColorLamp } from './types';\nimport DisplayTitle from './DisplayTitle/DisplayTitle';\n\nconst classNames = require('classnames');\n\nfunction ContainerLamp({ style, children }) {\n  return (\n    <div\n      className={classNames(styles.wrapContainerLamp, {\n        [styles.wrapContainerLampGreen]: style === 'green',\n        [styles.wrapContainerLampBlue]: style === 'blue' || style === 'grey',\n        [styles.wrapContainerLampRed]: style === 'red',\n        [styles.wrapContainerLampYellow]: style === 'yellow',\n        [styles.wrapContainerLampPurple]: style === 'purple',\n        [styles.wrapContainerLampPink]: style === 'pink',\n        [styles.wrapContainerLampDefault]: !style,\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n\ntype Txs = {\n  status: 'pending' | 'confirmed' | 'error';\n  txHash?: string;\n  rawLog?: string;\n};\n\ntype TxsProps = {\n  data: Txs;\n};\n\n// TODO: move to action bar\nfunction TxsStatus({ data }: TxsProps) {\n  let style;\n  switch (data.status) {\n    case 'pending':\n      style = 'yellow';\n      break;\n    case 'confirmed':\n      style = 'green';\n      break;\n    case 'error':\n      style = 'red';\n      break;\n\n    default:\n      break;\n  }\n  return (\n    <ContainerLamp style={style}>\n      <div\n        className={classNames(styles.containerTxs, {\n          [styles.containerTxsPending]: data.status === 'pending',\n          [styles.containerTxsConfirmed]: data.status === 'confirmed',\n          [styles.containerTxsDanger]: data.status === 'error',\n        })}\n      >\n        {data.txHash && (\n          <div className={styles.containerTxsTxHash}>\n            <Link to={`/network/bostrom/tx/${data.txHash}`}>\n              <div>{trimString(data.txHash, 5, 5)}</div>\n            </Link>\n            <div>{data.status}</div>\n          </div>\n        )}\n        {data.rawLog && (\n          <div className={styles.containerTxsRawLog}>{data.rawLog}</div>\n        )}\n      </div>\n    </ContainerLamp>\n  );\n}\n\ninterface Props {\n  title?: string;\n  closedTitle?: string;\n\n  children?: React.ReactNode;\n  txs?: Txs;\n  userStyleContent?: React.CSSProperties;\n  stateOpen?: boolean;\n  initState?: boolean;\n  styleLampContent?: ColorLamp;\n  styleLampTitle?: ColorLamp;\n  togglingDisable?: boolean;\n}\n\nfunction ContainerGradient({\n  title = 'Moon Citizenship',\n  closedTitle,\n  children,\n  txs,\n  userStyleContent,\n  stateOpen,\n  initState = true,\n  styleLampContent = 'blue',\n  styleLampTitle,\n  togglingDisable,\n}: Props) {\n  const [isOpen, setIsOpen] = useState(initState);\n\n  useEffect(() => {\n    if (stateOpen !== undefined) {\n      setIsOpen(stateOpen);\n    }\n  }, [stateOpen]);\n\n  const toggling = () => {\n    if (togglingDisable === undefined || togglingDisable === false) {\n      return setIsOpen(!isOpen);\n    }\n    return undefined;\n  };\n\n  const useTitle = useCallback(\n    (state) => {\n      if (\n        !isOpen &&\n        closedTitle &&\n        closedTitle !== null &&\n        state === 'exited'\n      ) {\n        return closedTitle;\n      }\n      if (state === 'entered') {\n        return title;\n      }\n\n      return title;\n    },\n    [isOpen, closedTitle, title]\n  );\n\n  return (\n    <div>\n      {/* TODO: use Display component */}\n      <div\n        className={classNames(styles.containerContainerGradient, {\n          [styles.togglingDisable]: togglingDisable,\n          [styles.containerContainerGradientPrimary]: !styleLampContent,\n          [styles.containerContainerGradientPrimary]:\n            styleLampContent === 'blue',\n          [styles.containerContainerGradientDanger]: styleLampContent === 'red',\n          [styles.containerContainerGradientGreen]:\n            styleLampContent === 'green',\n        })}\n      >\n        <Transition in={isOpen} timeout={500}>\n          {(state) => {\n            return (\n              <>\n                <button\n                  type=\"button\"\n                  onClick={!togglingDisable ? toggling : undefined}\n                  role={!togglingDisable ? 'presentation' : undefined}\n                  style={{\n                    position: 'relative',\n                    left: -2,\n                    width: '100%',\n                    color: 'inherit',\n                  }}\n                  className={classNames({\n                    [styles.titleTogglingActive]: !togglingDisable,\n                  })}\n                >\n                  <DisplayTitle\n                    title={useTitle(state)}\n                    animationState={state}\n                    color={styleLampTitle}\n                  />\n                </button>\n\n                <div\n                  style={userStyleContent}\n                  className={classNames(\n                    styles.containerContainerGradientContent,\n                    {\n                      [styles.containerContainerGradientContentPrimary]:\n                        !styleLampContent,\n                      [styles.containerContainerGradientContentPrimary]:\n                        styleLampContent === 'blue',\n                      [styles.containerContainerGradientContentDanger]:\n                        styleLampContent === 'red',\n                      [styles.containerContainerGradientContentGreen]:\n                        styleLampContent === 'green',\n                    },\n                    styles[`containerContainerGradientContent${state}`]\n                  )}\n                >\n                  {children}\n                </div>\n              </>\n            );\n          }}\n        </Transition>\n      </div>\n      {txs && <TxsStatus data={txs} />}\n    </div>\n  );\n}\n\nexport const ContainerGradientText = Display;\n\nexport default ContainerGradient;\n","import { useState } from 'react';\nimport { Titile } from './components';\nimport useGetCreator from 'src/containers/ipfs/hooks/useGetCreator';\n\nfunction Particle({ cid }) {\n  const { creator } = useGetCreator(cid);\n  // const [content, setContent] = useState('');\n  // const [textPreview, setTextPreview] = useState(cid);\n  // const [typeContent, setTypeContent] = useState('');\n  const [status] = useState('understandingState');\n  // const [link, setLink] = useState(`/ipfs/${cid}`);\n\n  // useEffect(() => {\n  //   const feachData = async () => {\n  //     let responseData = null;\n\n  //     const dataResponseByCid = await getIPFSContent(node, cid);\n\n  //     if (dataResponseByCid !== undefined) {\n  //       if (dataResponseByCid === 'availableDownload') {\n  //         setStatus('availableDownload');\n  //         setTextPreview(cid);\n  //       } else {\n  //         responseData = dataResponseByCid;\n  //       }\n  //     } else {\n  //       setStatus('impossibleLoad');\n  //     }\n\n  //     if (responseData !== null) {\n  //       const { data } = responseData;\n  //       const dataTypeContent = await getTypeContent(data, cid);\n\n  //       const {\n  //         text: textContent,\n  //         type,\n  //         content: contentCid,\n  //         link: linkContent,\n  //       } = dataTypeContent;\n\n  //       setTextPreview(textContent);\n  //       setTypeContent(type);\n  //       setContent(contentCid);\n  //       setLink(linkContent);\n  //       setStatus('downloaded');\n  //     }\n  //   };\n  //   feachData();\n  // }, [cid, node]);\n\n  return (\n    <div>\n      <Titile cid={cid} creator={creator} status={status} />\n    </div>\n  );\n}\n\nexport default Particle;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Select.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Select.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { createContext, useContext } from 'react';\nimport { $TsFixMeFunc } from 'src/types/tsfix';\n\ntype SelectContextProps = {\n  selectedOption: string;\n  changeSelectedOption: $TsFixMeFunc;\n};\n\nconst SelectContext = createContext<SelectContextProps>({\n  selectedOption: '',\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  changeSelectedOption: () => {},\n});\n\nconst useSelectContext = () => {\n  const context = useContext(SelectContext);\n  if (!context) {\n    throw new Error('Error in creating the context');\n  }\n  return context;\n};\n\nexport { useSelectContext, SelectContext };\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState, useRef, useMemo } from 'react';\n\nimport { $TsFixMe, $TsFixMeFunc } from 'src/types/tsfix';\nimport classNames from 'classnames';\nimport styles from './Select.module.scss';\nimport { SelectContext, useSelectContext } from './selectContext';\n\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nimport LinearGradientContainer, {\n  Color,\n} from '../LinearGradientContainer/LinearGradientContainer';\n\ntype OptionSelectProps = {\n  text: React.ReactNode;\n  value: string;\n  img?: React.ReactNode;\n  bgrImg?: boolean;\n};\n\nexport function OptionSelect({ text, img, bgrImg, value }: OptionSelectProps) {\n  const { changeSelectedOption } = useSelectContext();\n  return (\n    <div\n      className={styles.listItem}\n      onClick={() => changeSelectedOption(value)}\n    >\n      {(bgrImg || img) && (\n        <div\n          className={styles.bgrImg}\n          style={bgrImg ? { boxShadow: 'none', background: 'transparent' } : {}}\n        >\n          {img}\n        </div>\n      )}\n      <div>{text || '-'}</div>\n    </div>\n  );\n}\n\nexport type SelectOption = {\n  text: string | JSX.Element;\n  value: string;\n  img?: React.ReactNode;\n};\n\ntype SelectProps = {\n  valueSelect: $TsFixMe;\n  onChangeSelect?: $TsFixMeFunc;\n  children?: React.ReactNode;\n  width?: string | number;\n  disabled?: boolean;\n  options?: SelectOption[];\n  currentValue: React.ReactNode;\n  color?: Color;\n  title?: string;\n  small?: boolean;\n};\n\nfunction Select({\n  valueSelect,\n  onChangeSelect,\n  children,\n  width,\n  disabled,\n  options,\n  currentValue,\n  small,\n  color = Color.Yellow,\n  title,\n}: SelectProps) {\n  const selectContainerRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const toggling = () => {\n    if (!disabled) {\n      setIsOpen((item) => !item);\n    }\n  };\n\n  const clickOutsideHandler = () => setIsOpen(false);\n\n  const updateSelectedOption = (value: SelectOption['value']) => {\n    if (value === currentValue?.value) {\n      return;\n    }\n\n    onChangeSelect && onChangeSelect(value);\n    setIsOpen(false);\n  };\n\n  useOnClickOutside(selectContainerRef, clickOutsideHandler);\n\n  const { current: refCurrent } = selectContainerRef;\n  const isDropUp = useMemo(() => {\n    if (refCurrent) {\n      // maybe improve\n      const { bottom } = refCurrent.getBoundingClientRect();\n      const spaceBelow = window.innerHeight - bottom;\n      return spaceBelow < window.innerHeight / 2;\n    }\n    return false;\n  }, [refCurrent]);\n\n  function renderTitle() {\n    let value = currentValue;\n    if (valueSelect !== undefined && options) {\n      const item = options.find((item) => item.value === valueSelect);\n\n      if (item) {\n        value = (\n          <>\n            {item.img} {item.text}\n          </>\n        );\n      }\n    }\n\n    return value;\n  }\n\n  return (\n    <SelectContext.Provider\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\n      value={{\n        selectedOption: valueSelect,\n        changeSelectedOption: updateSelectedOption,\n      }}\n    >\n      <div\n        style={{ width: width || '120px' }}\n        className={classNames(styles.dropDown, {\n          [styles.small]: small,\n          [styles.disabled]: disabled,\n        })}\n        ref={selectContainerRef}\n      >\n        <div className={styles.dropDownContainer}>\n          <button\n            type=\"button\"\n            onClick={toggling}\n            className={styles.dropDownContainerHeader}\n          >\n            <LinearGradientContainer\n              active={isOpen}\n              color={disabled ? Color.Black : color}\n              title={title}\n            >\n              <span className={styles.dropDownHeader}>{renderTitle()}</span>\n            </LinearGradientContainer>\n          </button>\n          {isOpen && (\n            <div\n              className={classNames(styles.dropDownListContainer, {\n                [styles.dropUp]: isDropUp,\n              })}\n            >\n              <div className={styles.dropDownList}>\n                {/* {placeholder && (\n                  <OptionSelect text={placeholder} value={null} />\n                )} */}\n                {options\n                  ? options.map((option) => {\n                      const { value, text, img } = option;\n                      return (\n                        <OptionSelect\n                          key={value}\n                          text={text}\n                          value={value}\n                          img={img}\n                        />\n                      );\n                    })\n                  : children}\n              </div>\n\n              <div\n                className={classNames(\n                  styles.ListContainer,\n                  styles.dropDownBottomLine\n                )}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </SelectContext.Provider>\n  );\n}\n\nexport default Select;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Loading.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Loading.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import styles from './Loading.module.scss';\n\nfunction Loading() {\n  return (\n    <div className={styles.container}>\n      <div className={styles['lds-grid']}>\n        {Array.from(Array(9)).map((_, index) => (\n          <div key={index} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./DonutChart.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./DonutChart.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useMemo } from 'react';\nimport styles from './DonutChart.module.scss';\n\ntype Item = {\n  value: number;\n  color: string;\n};\n\ninterface ItemReduce extends Item {\n  itemRatio: number;\n  offset: number;\n  angle: number;\n  filled: number;\n}\n\nexport type Props = {\n  data: Item[];\n};\n\nfunction DonutChart({ data }: Props) {\n  const cx = 100;\n  const cy = 100;\n  const strokeWidth = 3;\n  const radius = Math.min(cx, cy) / 2;\n  const dashArray = 2 * Math.PI * radius;\n  const startAngle = -90;\n\n  let filled = 0;\n\n  const sum = data.reduce((sum, item) => {\n    return sum + item.value;\n  }, 0);\n\n  const ratio = sum > 0 ? 100 / sum : 0;\n\n  const dataReduce = useMemo(() => {\n    return data.reduce<ItemReduce[]>((acc, obj) => {\n      if (ratio === 0) {\n        const newObj = {\n          ...obj,\n          itemRatio: 0,\n          offset: dashArray / 100,\n          angle: startAngle,\n          filled,\n        };\n        return [newObj];\n      }\n      const itemRatio = ratio * obj.value;\n      const angle = (filled * 360) / 100 + startAngle;\n      const offset = dashArray - (dashArray * itemRatio) / 100;\n\n      const newObj = { ...obj, itemRatio, offset, angle, filled };\n      filled += itemRatio;\n\n      return [...acc, newObj];\n    }, []);\n  }, [data]);\n\n  return (\n    <div className={styles.donutChart}>\n      <svg width=\"100px\" height=\"100px\" viewBox=\"35 35 135 135\">\n        {dataReduce.map((item, index) => (\n          <>\n            <filter key={`filter_${index}`} id=\"dropshadow\" height=\"130%\">\n              <feDropShadow\n                dx=\"0\"\n                dy=\"0\"\n                stdDeviation=\"2\"\n                floodColor={item.color}\n                floodOpacity=\"1\"\n              />\n            </filter>\n            <circle\n              key={index}\n              // filter=\"url(#dropshadow)\"\n              cx={cx}\n              cy={cy}\n              r={radius}\n              fill=\"transparent\"\n              strokeWidth={strokeWidth}\n              stroke={item.color}\n              filter={`drop-shadow(0px 0px 2px ${item.color})`}\n              strokeDasharray={dashArray}\n              strokeDashoffset={item.offset}\n              transform={`rotate(${item.angle} ${cx} ${cy})`}\n            >\n              <animateTransform\n                attributeName=\"transform\"\n                attributeType=\"XML\"\n                type=\"rotate\"\n                from={`${startAngle} ${cx} ${cy}`}\n                to={`${item.angle} ${cx} ${cy}`}\n                dur=\"1s\"\n              />\n            </circle>\n          </>\n        ))}\n      </svg>\n    </div>\n  );\n}\n\nexport default DonutChart;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./AvailableAmount.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./AvailableAmount.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { formatNumber } from 'src/utils/utils';\nimport styles from './AvailableAmount.module.scss';\nimport LinearGradientContainer, {\n  Color,\n} from '../LinearGradientContainer/LinearGradientContainer';\n\ntype Props = {\n  amountToken: number | string;\n  title?: string;\n};\n\nfunction AvailableAmount({ amountToken, title = 'available amount' }: Props) {\n  return (\n    <div className={styles.containerAvailableAmount}>\n      <LinearGradientContainer color={Color.Black} title={title}>\n        <div className={styles.containerValue}>{formatNumber(amountToken)}</div>\n      </LinearGradientContainer>\n    </div>\n  );\n}\n\nexport default AvailableAmount;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./FormatNumberTokens.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./FormatNumberTokens.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { convertAmount } from 'src/utils/utils';\nimport { useIbcDenom } from 'src/contexts/ibcDenom';\nimport { CSSProperties } from 'react';\nimport FormatNumberTokens from '../FormatNumberTokens/FormatNumberTokens';\n\ntype Props = {\n  amountValue: number;\n  denom: string;\n  styleValue?: CSSProperties;\n};\n\nfunction AmountDenom({ amountValue, denom, styleValue }: Props) {\n  const { tracesDenom } = useIbcDenom();\n\n  let amount = 0;\n\n  if (amountValue && amountValue > 0) {\n    const [{ coinDecimals }] = tracesDenom(denom);\n    amount = convertAmount(amountValue, coinDecimals);\n  }\n\n  return (\n    <FormatNumberTokens text={denom} value={amount} styleValue={styleValue} />\n  );\n}\n\nexport default AmountDenom;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./index.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./index.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import imgSwap from 'images/exchange-arrows.svg';\nimport styles from './index.module.scss';\n\nfunction ButtonSwap({\n  disabled,\n  onClick,\n  ...props\n}: {\n  img: string;\n  disabled?: boolean;\n  props: any;\n  onClick: () => void;\n}) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.buttonIcon}\n      disabled={disabled}\n      onClick={onClick}\n      {...props}\n    >\n      <img src={imgSwap} alt=\"img\" />\n    </button>\n  );\n}\n\nexport default ButtonSwap;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Slider.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Slider.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n\nimport cx from 'classnames';\nimport SliderComponent, { SliderProps as RcSliderProps } from 'rc-slider';\nimport imgSwap from 'src/image/exchange-arrows.svg';\nimport 'rc-slider/assets/index.css';\nimport styles from './Slider.module.scss';\nimport './styles.override.css';\nimport DenomArr from '../denom/denomArr';\nimport FormatNumberTokens from '../FormatNumberTokens/FormatNumberTokens';\n\nfunction SpetionLabel({ value }: { value: number }) {\n  let position = '';\n\n  if (value <= 5) {\n    position = 'left';\n  } else if (value === 10) {\n    position = 'center';\n  } else {\n    position = 'right';\n  }\n  return (\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\n    <label className={styles.trackLabel}>\n      <div className={styles.trackMarkBgBlur} />\n      <div\n        className={cx(\n          styles.trackMarkGradient,\n          styles[`trackMarkGradient${position}`]\n        )}\n      />\n\n      <div\n        className={cx(styles.trackMarkLabel, {\n          [styles.trackMarkLabelColorBlue]: value === 100,\n        })}\n      >\n        {value < 100 ? `${value}%` : 'Max'}\n      </div>\n    </label>\n  );\n}\n\nfunction SphereValue({\n  angle,\n  children,\n}: {\n  angle: number;\n  children: React.ReactNode;\n}) {\n  return (\n    <div\n      className={cx(styles.debtAmountPosToken)}\n      style={{ transform: `rotate(${angle}deg)` }}\n    >\n      <div\n        className={styles.debtAmountPosTokenObj}\n        style={{ transform: `rotate(${angle * -1}deg)` }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst SphereValueMemo = React.memo(SphereValue);\n\nfunction SphereValueWithToken({\n  tokenName,\n  angle,\n  price,\n}: {\n  tokenName: string;\n  angle: number;\n  price?: number;\n}) {\n  return (\n    <SphereValueMemo angle={angle}>\n      <DenomArr denomValue={tokenName} onlyImg tooltipStatusImg={false} />\n      {price && (\n        <div className={styles.imgValue}>\n          <FormatNumberTokens value={price} />\n        </div>\n      )}\n    </SphereValueMemo>\n  );\n}\n\ntype TokenPair = {\n  tokenA: string;\n  tokenB: string;\n  priceA: number;\n  priceB: number;\n};\n\nconst angleDeg = 135;\n\nconst scaleMin = 1;\nconst scaleMax = 101;\nconst minlVal = Math.log(scaleMin);\nconst maxlVal = Math.log(scaleMax);\n\nconst scale = (maxlVal - minlVal) / scaleMax;\n\nconst scalePercents = [1, 2, 5, 10, 20, 50, 100];\n\nfunction roundToOneDecimalPlace(num: number) {\n  return Math.round(num * 10) / 10;\n}\nconst positionToPercents = (position: number) =>\n  position === 0\n    ? 0\n    : roundToOneDecimalPlace(Math.exp(minlVal + scale * position)) - 1;\n\nconst percentsToPosition = (percents: number) =>\n  (Math.log(percents + 1) - minlVal) / scale;\n\nconst scaleMarks = Object.fromEntries(\n  scalePercents.map((percents) => [\n    percentsToPosition(percents),\n    <SpetionLabel key={`slider_mark_${percents}`} value={percents} />,\n  ])\n);\n\nexport type SliderProps = {\n  onChange: (value: number) => void;\n  onSwapClick?: () => void;\n  valuePercents: number;\n  disabled?: boolean;\n  tokenPair?: TokenPair;\n  text?: string | React.ReactNode;\n};\n\nfunction Slider({\n  onChange,\n  onSwapClick,\n  valuePercents,\n  disabled,\n  tokenPair,\n  text,\n}: SliderProps) {\n  const [valueSilder, setValueSilder] = useState(0);\n  const [currentPercents, setCurrentPercent] = useState(0);\n  const [draggingMode, setDraggingMode] = useState(false);\n  const [isHadleFocused, setIsHandleFocused] = useState(false);\n  const draggingDetectorTimer = useRef(undefined);\n\n  const finishDragging = useCallback(() => {\n    clearTimeout(draggingDetectorTimer.current);\n    if (!draggingMode) {\n      onSwapClick && onSwapClick();\n    }\n\n    setDraggingMode(false);\n  }, [draggingMode, onSwapClick]);\n\n  const startDragging = () => {\n    draggingDetectorTimer.current = setTimeout(() => {\n      clearTimeout(draggingDetectorTimer.current);\n      setDraggingMode(true);\n    }, 300);\n  };\n\n  useEffect(() => {\n    const percents = valuePercents;\n\n    if (percents > 100) {\n      setCurrentPercent(100);\n      setValueSilder(scaleMax);\n      return;\n    }\n    if (percents <= 0) {\n      setValueSilder(scaleMin);\n      setCurrentPercent(0);\n      return;\n    }\n\n    setCurrentPercent(percents);\n\n    const position = percentsToPosition(percents);\n\n    setValueSilder(position < 0 ? 0 : position);\n  }, [valuePercents]);\n\n  const onSliderChange = (position: number) => {\n    // Hack to avoid glitch when click on handle\n    if (isHadleFocused && !draggingMode) {\n      return;\n    }\n    setDraggingMode(true);\n    setValueSilder(position);\n    requestAnimationFrame(() => {\n      const value = positionToPercents(position);\n      setCurrentPercent(value);\n      onChange && onChange(value);\n    });\n  };\n\n  const renderCustomHandle: RcSliderProps['handle'] = useCallback(\n    ({ value }) => {\n      const percents =\n        currentPercents < 2\n          ? currentPercents.toFixed(1)\n          : Math.round(currentPercents || 0);\n      return (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n          className={styles.debtAmountPos}\n          style={{\n            left: `${value - scaleMin}%`,\n          }}\n          onMouseEnter={() => setIsHandleFocused(true)}\n          onMouseLeave={() => setIsHandleFocused(false)}\n          onMouseDown={() => startDragging()}\n          onTouchStart={() => startDragging()}\n          onMouseUp={() => finishDragging()}\n          onTouchEnd={() => finishDragging()}\n        >\n          <SphereValueMemo angle={90}>\n            <div>{percents}%</div>\n          </SphereValueMemo>\n          {tokenPair && (\n            <>\n              <SphereValueWithToken\n                tokenName={tokenPair.tokenA}\n                angle={angleDeg}\n                price={tokenPair.priceA}\n              />\n              <SphereValueWithToken\n                tokenName={tokenPair.tokenB}\n                angle={-angleDeg}\n                price={tokenPair.priceB}\n              />\n            </>\n          )}\n          <button type=\"button\" className={styles.buttonIcon}>\n            <img src={imgSwap} alt=\"swap\" draggable=\"false\" />\n          </button>\n        </div>\n      );\n    },\n    [tokenPair, currentPercents, disabled, finishDragging]\n  );\n\n  return (\n    <div className={styles.formWrapper}>\n      <div className={styles.debtAmountSlider}>\n        <div style={{ width: '100%', padding: '0 25px' }}>\n          <SliderComponent\n            disabled={disabled}\n            value={valueSilder}\n            min={scaleMin}\n            max={scaleMax}\n            step={1}\n            handle={renderCustomHandle}\n            onChange={(pos) => onSliderChange(pos)}\n            marks={scaleMarks}\n            trackStyle={{ backgroundColor: '#C5C5C5', height: '2px' }}\n            railStyle={{ backgroundColor: '#C5C5C5', height: '2px' }}\n            dotStyle={{\n              background: 'none',\n              border: 'none',\n            }}\n          />\n          {text && (\n            <div\n              className={cx(styles.text, valueSilder > 80 && styles.textLeft)}\n            >\n              {text}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slider;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreatedAt.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreatedAt.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { timeSince } from 'src/utils/utils';\nimport { dateToUtcNumber, getNowUtcNumber } from 'src/utils/date';\nimport styles from './CreatedAt.module.scss';\n\nexport type Props = {\n  timeAt: string | number;\n};\n\nfunction CreatedAt({ timeAt }: Props) {\n  let timeAgoInMS = 0;\n\n  const timeUtc = typeof timeAt === 'string' ? dateToUtcNumber(timeAt) : timeAt;\n\n  const time = getNowUtcNumber() - timeUtc;\n  if (time && time > 0) {\n    timeAgoInMS = time;\n  }\n\n  const timeSinceValue = timeSince(timeAgoInMS);\n\n  return (\n    <span className={styles.createdAt}>\n      {timeSinceValue === 'now' ? timeSinceValue : `${timeSinceValue} ago`}\n    </span>\n  );\n}\n\nexport default CreatedAt;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./TabItem.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./TabItem.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { ReactNode } from 'react';\nimport styles from './TabItem.module.scss';\n\nexport const enum Position {\n  Right = 'right',\n  Left = 'left',\n}\n\nexport type Props = {\n  type?: Position;\n  text: string | ReactNode;\n  step?: number;\n  isSelected: boolean;\n  to?: string;\n  disable?: boolean;\n  onClick?: () => void;\n};\n\nfunction TabItem({\n  type,\n  text,\n  step,\n  to,\n  isSelected,\n  disable,\n  onClick,\n  ...props\n}: Props) {\n  let Component: HTMLButtonElement | Link = 'button';\n  let componentProps: object = {\n    type: 'button',\n  };\n\n  if (to) {\n    Component = Link;\n    componentProps = {\n      to,\n    };\n  }\n\n  if (disable && to) {\n    componentProps = {\n      ...componentProps,\n      onClick: (e) => e.preventDefault(),\n    };\n  }\n\n  return (\n    <Component\n      to={to}\n      onClick={onClick}\n      className={cx(\n        styles.tabButton,\n        type && styles[`${type}`],\n        isSelected && styles[type ? `${type}Active` : 'tabButtonActive'],\n        disable && styles.disable\n      )}\n      {...props}\n      {...componentProps}\n    >\n      {step && <span>step {step}</span>}\n      {text && <span>{text}</span>}\n    </Component>\n  );\n}\n\nexport default TabItem;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Tabs.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Tabs.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ReactNode } from 'react';\nimport TabItem, { Position } from './TabItem/TabItem';\nimport style from './Tabs.module.scss';\n\ntype optionsProps = {\n  to?: string;\n  onClick?: () => void;\n  key: string;\n  text?: ReactNode;\n};\n\ntype Props = {\n  options: optionsProps[];\n  selected: string;\n};\n\nfunction Tabs({ options, selected }: Props) {\n  return (\n    <div className={style.wrapper}>\n      {options.map((item, index) => {\n        const type =\n          index === 0\n            ? Position.Left\n            : index === options.length - 1\n            ? Position.Right\n            : undefined;\n\n        const isSelected = selected === item.key;\n        return (\n          <TabItem\n            key={index}\n            type={type}\n            isSelected={isSelected}\n            to={item.to}\n            onClick={item.onClick}\n            text={item.text || item.key}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Tabs;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./time.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./time.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { formatNumber } from 'src/utils/utils';\nimport { convertTimestampToString } from 'src/utils/date';\nimport styles from './time.module.scss';\n\nfunction Time({ msTime }: { msTime: number }) {\n  const [valueTime, prefixTime] = convertTimestampToString(msTime).split(' ');\n\n  return (\n    <span className={styles.wrapper}>\n      <span>{formatNumber(valueTime)}</span>\n      <span className={styles.prefix}>{prefixTime}</span>\n    </span>\n  );\n}\n\nexport default Time;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Row.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Row.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ReactNode } from 'react';\nimport styles from './Row.module.scss';\n\nfunction Row({ value, title }: { title: ReactNode; value: ReactNode }) {\n  return (\n    <div className={styles.container}>\n      <span className={styles.key}>{title}:</span>\n      <span className={styles.value}>{value}</span>\n    </div>\n  );\n}\n\nexport function RowsContainer({ children }: { children: ReactNode }) {\n  return <div className={styles.rowsContainer}>{children}</div>;\n}\n\nexport default Row;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Dot.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Dot.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import cx from 'classnames';\nimport { useEffect, useRef } from 'react';\nimport styles from './Dot.module.scss';\n\nexport enum DotColors {\n  blue = 'blue',\n  green = 'green',\n  red = 'red',\n  purple = 'purple',\n  yellow = 'yellow',\n}\n\ntype Props = {\n  color: DotColors | keyof typeof DotColors;\n  className?: string;\n  animation?: boolean;\n  size?: number;\n};\n\nfunction Dot({ color, className, animation, size = 4 }: Props) {\n  const ref = useRef<HTMLLabelElement | null>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.setProperty('--size', `${size}px`);\n    }\n  }, [ref, size]);\n\n  return (\n    <span\n      ref={ref}\n      className={cx(styles.dot, styles[`color_${color}`], className, {\n        [styles.animation]: animation,\n      })}\n    />\n  );\n}\n\nexport default Dot;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Copy.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Copy.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Pane, Text } from '@cybercongress/gravity';\nimport { ProposalStatus } from 'cosmjs-types/cosmos/gov/v1beta1/gov';\nimport { BASE_DENOM } from 'src/constants/config';\nimport { formatNumber } from '../../utils/search/utils';\nimport Tooltip from '../tooltip/tooltip';\nimport styles from './styles.module.scss';\n\nconst submitted = require('../../image/ionicons_svg_ios-battery-full.svg');\nconst voting = require('../../image/ionicons_svg_ios-people.svg');\nconst passed = require('../../image/ionicons_svg_ios-checkmark-circle.svg');\nconst rejected = require('../../image/ionicons_svg_ios-close-circle.svg');\nconst failed = require('../../image/ionicons_svg_ios-remove-circle.svg');\nconst defaultIcon = require('../../image/ionicons_svg_ios-warning.svg');\n\nconst toFixedNumber = (number, toFixed) => {\n  return Math.floor(number * 10 ** toFixed) / 10 ** toFixed;\n};\n\n// function Legend({ color, text, ...props }) {\n//   return (\n//     <Pane display=\"flex\" alignItems=\"center\" {...props}>\n//       <Pane\n//         width={12}\n//         height={12}\n//         borderRadius=\"2px\"\n//         display=\"inline-block\"\n//         marginRight={10}\n//         backgroundColor={color}\n//         verticalalign=\"middle\"\n//       />\n//       <Text color=\"#fff\" fontSize=\"16px\">\n//         {text}\n//       </Text>\n//     </Pane>\n//   );\n// }\n\nexport const Votes = ({ finalVotes }) => {\n  try {\n    return (\n      <div className={styles.votesContainer}>\n        <div\n          className={`${styles.voteSection} ${styles.voteYes}`}\n          style={{ width: `${toFixedNumber(finalVotes.yes, 2)}%` }}\n        >\n          <Tooltip\n            placement=\"top\"\n            tooltip={<div>Yes: {toFixedNumber(finalVotes.yes, 2)}%</div>}\n            contentStyle={{ flexGrow: 1 }}\n          />\n        </div>\n        <div\n          className={`${styles.voteSection} ${styles.voteAbstain}`}\n          style={{ width: `${toFixedNumber(finalVotes.abstain, 2)}%` }}\n        >\n          <Tooltip\n            tooltip={`Abstain: ${toFixedNumber(finalVotes.abstain, 2)}%`}\n            placement=\"top\"\n            contentStyle={{ flexGrow: 1 }}\n          />\n        </div>\n        <div\n          className={`${styles.voteSection} ${styles.voteNo}`}\n          style={{ width: `${toFixedNumber(finalVotes.no, 2)}%` }}\n        >\n          <Tooltip\n            tooltip={`No: ${toFixedNumber(finalVotes.no, 2)}%`}\n            placement=\"top\"\n            contentStyle={{ flexGrow: 1 }}\n          />\n        </div>\n        <div\n          className={`${styles.voteSection} ${styles.voteNoWithVeto}`}\n          style={{ width: `${toFixedNumber(finalVotes.noWithVeto, 2)}%` }}\n        >\n          <Tooltip\n            tooltip={`No With Veto: ${toFixedNumber(\n              finalVotes.noWithVeto,\n              2\n            )}%`}\n            placement=\"top\"\n            contentStyle={{ flexGrow: 1 }}\n          />\n        </div>\n      </div>\n    );\n  } catch (error) {\n    return (\n      <div className={styles.votesContainer}>\n        <div className={styles.voteSection} style={{ width: '0%' }}>\n          <Tooltip placement=\"top\" tooltip=\"Yes: 0%\" />\n        </div>\n        <div className={styles.voteSection} style={{ width: '0%' }}>\n          <Tooltip tooltip=\"Abstain: 0%\" placement=\"top\" />\n        </div>\n        <div className={styles.voteSection} style={{ width: '0%' }}>\n          <Tooltip tooltip=\"No: 0%\" placement=\"top\" />\n        </div>\n        <div className={styles.voteSection} style={{ width: '0%' }}>\n          <Tooltip tooltip=\"No With Veto: 0%\" placement=\"top\" />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport function IconStatus({ status, size, text, ...props }) {\n  let imgIcon;\n  let statusText = '';\n\n  switch (status) {\n    case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD: {\n      imgIcon = submitted;\n      statusText = 'deposit period';\n      break;\n    }\n    case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD: {\n      imgIcon = voting;\n      statusText = 'voting period';\n      break;\n    }\n    case ProposalStatus.PROPOSAL_STATUS_PASSED: {\n      imgIcon = passed;\n      statusText = 'passed';\n      break;\n    }\n    case ProposalStatus.PROPOSAL_STATUS_REJECTED: {\n      imgIcon = rejected;\n      statusText = 'rejected';\n      break;\n    }\n    case ProposalStatus.PROPOSAL_STATUS_FAILED: {\n      imgIcon = failed;\n      statusText = 'failed';\n      break;\n    }\n    default: {\n      imgIcon = defaultIcon;\n    }\n  }\n  return (\n    <Pane display=\"flex\" alignItems=\"center\" {...props}>\n      <Pane marginRight={5} width={size || 20} height={size || 20}>\n        <img src={imgIcon} alt=\"icon\" />\n      </Pane>\n      {text && (\n        <Text fontSize=\"16px\" color=\"#fff\">\n          {statusText}\n        </Text>\n      )}\n    </Pane>\n  );\n}\n\nexport function Deposit({ totalDeposit, minDeposit }) {\n  let procentDeposit = 0;\n\n  if (totalDeposit > minDeposit) {\n    procentDeposit = (minDeposit / totalDeposit) * 100;\n  } else {\n    procentDeposit = (totalDeposit / minDeposit) * 100;\n  }\n\n  return (\n    <Pane\n      backgroundColor=\"#ffffff14\"\n      borderRadius={5}\n      overflow=\"visible\"\n      height={10}\n      width=\"100%\"\n      display=\"flex\"\n      position=\"relative\"\n    >\n      <Pane\n        backgroundColor=\"#3ab793\"\n        display=\"flex\"\n        height=\"100%\"\n        borderRadius={5}\n        position=\"absolute\"\n        width={`${totalDeposit < minDeposit ? procentDeposit : 100}%`}\n      >\n        <Pane position=\"absolute\" left=\"100%\" top=\"20px\">\n          <Text\n            whiteSpace=\"nowrap\"\n            color=\"#fff\"\n            position=\"relative\"\n            right=\"50%\"\n            width=\"100%\"\n            className=\"tooltip-text-deposit\"\n          >\n            Total Deposit {formatNumber(totalDeposit)}{' '}\n            {BASE_DENOM.toUpperCase()}\n          </Text>\n        </Pane>\n      </Pane>\n\n      {totalDeposit > minDeposit && (\n        <Pane\n          backgroundColor=\"#007bff\"\n          display=\"flex\"\n          height=\"100%\"\n          borderRadius={5}\n          position=\"absolute\"\n          zIndex={1}\n          right={0}\n          width={`${100 - procentDeposit}%`}\n        />\n      )}\n    </Pane>\n  );\n}\n\nexport function Item({ title, value, ...props }) {\n  return (\n    <Pane {...props} display=\"flex\">\n      <Text minWidth=\"150px\" color=\"#fff\" fontSize=\"16px\">\n        {title}:{' '}\n      </Text>\n      <Text color=\"#fff\" fontSize=\"16px\">\n        {value}\n      </Text>\n    </Pane>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nfunction useMediaQuery(query) {\n  const getMatches = (queryM) => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(queryM).matches;\n    }\n    return false;\n  };\n\n  const [matches, setMatches] = useState(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n\n    // Triggered at the first client-side load and if query changes\n    handleChange();\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return matches;\n}\n\nexport default useMediaQuery;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./GitHub.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./GitHub.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { MainContainer } from 'src/components';\nimport Display from 'src/components/containerGradient/Display/Display';\nimport DisplayTitle from 'src/components/containerGradient/DisplayTitle/DisplayTitle';\nimport useAdviserTexts from 'src/features/adviser/useAdviserTexts';\nimport { Social } from 'src/pages/Social/Social';\nimport Socials from './Socials';\n\nexport const HUB_LINK = 'https://docs.cyb.ai/#/page/aicosystem';\n\n// TODO: folder is dirty, can be refactored\nfunction Social() {\n  useAdviserTexts({\n    defaultText: 'join our community 🤖',\n  });\n\n  return (\n    <MainContainer>\n      <Display title={<DisplayTitle title=\"Socials\" />} noPaddingX>\n        <Socials />\n      </Display>\n    </MainContainer>\n  );\n}\n\nexport default Social;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Social.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./Social.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./Telegram.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./Telegram.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./APIError.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./APIError.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext } from 'react';\nimport { CyberClient } from '@cybercongress/cyber-js';\nimport { Option } from 'src/types';\nimport { useQuery } from '@tanstack/react-query';\nimport { RPC_URL } from 'src/constants/config';\nimport APIError from 'src/components/ErrorBoundary/APIError/APIError';\n\nconst QueryClientContext = React.createContext<Option<CyberClient>>(undefined);\n\n/**\n * @deprecated use queryCyberClient\n */\nexport function useQueryClient() {\n  return useContext(QueryClientContext);\n}\n\nfunction QueryClientProvider({ children }: { children: React.ReactNode }) {\n  const {\n    data: client,\n    error,\n    isFetching,\n  } = useQuery({\n    queryKey: ['cyberClient', 'connect'],\n    queryFn: async () => {\n      return CyberClient.connect(RPC_URL);\n    },\n  });\n\n  if (isFetching) {\n    return null;\n  }\n\n  if (error) {\n    console.error('Error queryClient connect: ', error.message);\n\n    return <APIError />;\n  }\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  );\n}\n\nexport default QueryClientProvider;\n","import { useEffect, useState, useMemo } from 'react';\nimport axios from 'axios';\nimport { useQueryClient } from 'src/contexts/queryClient';\nimport { AccountValue } from 'src/types/defaultAccount';\nimport { useQuery } from '@tanstack/react-query';\nimport { Nullable } from 'src/types';\nimport { Citizenship } from 'src/types/citizenship';\nimport { CyberClient } from '@cybercongress/cyber-js';\nimport { getPassport } from 'src/services/passports/lcd';\n\nconst AMOUNT_ALL_STAGE = 90;\nconst NEW_RELEASE = 1000; // release 1% every 1k claims\nconst CONSTITUTION_HASH = 'QmcHB9GKHAKCLQhmSj71qNJhENJJg8Gymd1PvvsCQBhG7M';\n\n// test root\n// const CONTRACT_ADDRESS_GIFT =\n//   'bostrom1dwzfa74hzpt6393czajlldnxjup8zk3xh3skegnm67yzqx33k2cssyduk8';\n// const CONTRACT_ADDRESS_PASSPORT =\n//   'bostrom1fzm6gzyccl8jvdv3qq6hp9vs6ylaruervs4m06c7k0ntzn2f8faq7ha2z2';\n\n// prod root\nconst CONTRACT_ADDRESS_GIFT =\n  'bostrom16t6tucgcqdmegye6c9ltlkr237z8yfndmasrhvh7ucrfuqaev6xq7cpvek';\nconst CONTRACT_ADDRESS_PASSPORT =\n  'bostrom1xut80d09q0tgtch8p0z4k5f88d3uvt8cvtzm5h3tu3tsy4jk9xlsfzhxel';\n\nconst DICTIONARY = {\n  Astronauts: 'Astronaut',\n  'Average Citizens. ETH Analysis': 'Average Citizens',\n  'Cyberpunks. ERC20 and ERC721 Analysis': 'Cyberpunk',\n  'Extraordinary Hackers. Gas Analysis': 'Extraordinary Hacker',\n  'Key Opinion Leaders. ERC20 Analysis': 'Key Opinion Leader',\n  'Masters of the Great Web. Gas and ERC721 Analysis':\n    'Master of the Great Web',\n  'Passionate Investors. ERC20 Analysis': 'Passionate Investor',\n  'Heroes of the Great Web. Genesis and ETH2 Stakers':\n    'True Hero of the Great Web',\n  Leeches: 'Devil',\n};\n\nconst GIFT_ICON = '🎁';\nconst BOOT_ICON = '🟢';\n\nconst useGetActivePassport = (\n  addressActive: Nullable<AccountValue>,\n  updateFunc?: number\n) => {\n  const queryClient = useQueryClient();\n  const data = useQuery(\n    ['active_passport', addressActive?.bech32],\n    () => activePassport(queryClient, addressActive?.bech32),\n    {\n      enabled: Boolean(addressActive) && Boolean(queryClient),\n    }\n  );\n\n  useEffect(() => {\n    if (updateFunc) {\n      data.refetch();\n    }\n  }, [updateFunc]);\n\n  return {\n    citizenship: data.data,\n    loading: data.isFetching,\n  };\n};\n\n// TODO: replace with hook\nconst activePassport = async (\n  client: CyberClient,\n  address: string\n): Promise<Nullable<Citizenship>> => {\n  try {\n    const query = {\n      active_passport: {\n        address,\n      },\n    };\n    const response = await client.queryContractSmart(\n      CONTRACT_ADDRESS_PASSPORT,\n      query\n    );\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst parseValue = (data) => {\n  if (data.length > 0) {\n    const newData = data.replace(/'/g, '\"');\n    return JSON.parse(newData);\n  }\n  return null;\n};\n\nconst parseValueDetails = (data) => {\n  const value = parseValue(data);\n  if (value !== null) {\n    const details = {};\n    value.forEach((item) => {\n      details[DICTIONARY[item.audience]] = { gift: item.gift };\n    });\n    return details;\n  }\n  return null;\n};\n\nconst parseResponse = (obj) => {\n  return {\n    ...obj,\n    details: parseValueDetails(obj.details),\n    proof: parseValue(obj.proof),\n  };\n};\n\nconst checkGift = async (address) => {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: `https://titan.cybernode.ai/graphql/api/rest/get-cybergift/${address}`, // prod root\n      // url: `https://titan.cybernode.ai/graphql/api/rest/get-test-gift/${address}`, // test root\n    });\n\n    if (response && response.data) {\n      const { data } = response;\n      if (\n        Object.prototype.hasOwnProperty.call(data, 'cyber_gift_proofs') &&\n        Object.keys(data.cyber_gift_proofs).length > 0\n      ) {\n        const { cyber_gift_proofs: cyberGiftData } = data;\n        return parseResponse(cyberGiftData[0]);\n      }\n      if (\n        Object.prototype.hasOwnProperty.call(data, 'test_gift') &&\n        Object.keys(data.test_gift).length > 0\n      ) {\n        const { test_gift: cyberGiftData } = data;\n        return parseResponse(cyberGiftData[0]);\n      }\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n};\n\nconst queryContractSmartPassport = async (client, query) => {\n  try {\n    const response = await getPassport(query);\n    // const response = await client.queryContractSmart(\n    //   CONTRACT_ADDRESS_PASSPORT,\n    //   query\n    // );\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst queryContractSmartGift = async (client, query) => {\n  try {\n    const response = await client.queryContractSmart(\n      CONTRACT_ADDRESS_GIFT,\n      query\n    );\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getStateGift = async (client) => {\n  try {\n    const query = {\n      state: {},\n    };\n    const response = await queryContractSmartGift(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getConfigGift = async (client) => {\n  try {\n    const query = {\n      config: {},\n    };\n    const response = await queryContractSmartGift(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getReleaseState = async (client, address) => {\n  try {\n    const query = {\n      release_state: {\n        address,\n      },\n    };\n    const response = await queryContractSmartGift(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getClaimedAmount = async (client, address) => {\n  try {\n    const query = {\n      claim: {\n        address,\n      },\n    };\n    const response = await queryContractSmartGift(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getIsClaimed = async (client, address) => {\n  try {\n    const query = {\n      is_claimed: {\n        address,\n      },\n    };\n    const response = await queryContractSmartGift(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getPassportByNickname = async (client, nickname) => {\n  try {\n    const query = {\n      passport_by_nickname: {\n        nickname,\n      },\n    };\n    const response = await queryContractSmartPassport(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst getNumTokens = async (client) => {\n  try {\n    const query = {\n      num_tokens: {},\n    };\n    const response = await queryContractSmartPassport(client, query);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n    return null;\n  }\n};\n\nconst tooMuthAddressError =\n  'failed to execute message; message index: 0: Address is not eligible to claim airdrop, Too many addresses: execute wasm contract failed';\n\nconst canProve8AddressNewError =\n  'You can prove only 8 addresses for one passport';\n\nconst parseRowLog = (rawlog) => {\n  if (rawlog === tooMuthAddressError) {\n    return canProve8AddressNewError;\n  }\n\n  return rawlog;\n};\n\nexport {\n  activePassport,\n  CONTRACT_ADDRESS_PASSPORT,\n  useGetActivePassport,\n  CONSTITUTION_HASH,\n  CONTRACT_ADDRESS_GIFT,\n  GIFT_ICON,\n  BOOT_ICON,\n  AMOUNT_ALL_STAGE,\n  NEW_RELEASE,\n  checkGift,\n  getConfigGift,\n  getStateGift,\n  getReleaseState,\n  getClaimedAmount,\n  getIsClaimed,\n  getPassportByNickname,\n  parseRowLog,\n  getNumTokens,\n};\n","import { DeliverTxResponse } from '@cosmjs/stargate';\n\nexport class SigningCyberClientError extends Error {\n  public code: number;\n\n  constructor(response: string[] | DeliverTxResponse) {\n    let message = '';\n    let code = -1;\n    if (response instanceof Array) {\n      message = response.join('\\r\\n');\n    } else if (response.rawLog) {\n      message = response.rawLog.toString();\n      code = response.code;\n    } else {\n      message = message?.error;\n    }\n\n    super(message);\n    cyblog.error(message, { error: response });\n\n    this.code = code;\n  }\n}\n\nexport const throwErrorOrResponse = (\n  response: string[] | DeliverTxResponse\n) => {\n  const isResponseError = response instanceof Array || response.code !== 0;\n  if (isResponseError) {\n    throw new SigningCyberClientError(response);\n  }\n  return response as DeliverTxResponse;\n};\n","/* eslint-disable import/no-unused-modules */\nimport { Coin, OfflineSigner, StdFee } from '@cosmjs/launchpad';\nimport { SigningCyberClient } from '@cybercongress/cyber-js';\nimport { SenseApi } from 'src/contexts/backend/services/senseApi';\nimport { CyberLinkSimple, NeuronAddress, ParticleCid } from 'src/types/base';\nimport { getNowUtcNumber } from 'src/utils/date';\n\nimport { DEFAULT_GAS_LIMITS } from 'src/constants/config';\nimport { CONTRACT_ADDRESS_PASSPORT } from 'src/containers/portal/utils';\nimport BigNumber from 'bignumber.js';\nimport { asyncForEach } from 'src/utils/utils';\nimport { LinkDto } from '../CozoDb/types/dto';\nimport { throwErrorOrResponse } from './errors';\n\nimport Soft3MessageFactory from '../soft.js/api/msgs';\n\nconst defaultFee = {\n  amount: [],\n  gas: DEFAULT_GAS_LIMITS.toString(),\n} as StdFee;\n\nexport const sendCyberlink = async (\n  neuron: NeuronAddress,\n  from: ParticleCid,\n  to: ParticleCid,\n  {\n    senseApi,\n    signingClient,\n  }: {\n    senseApi: SenseApi;\n    signingClient: SigningCyberClient;\n  },\n  fee: StdFee = defaultFee\n) => {\n  const response = await signingClient!.cyberlink(neuron, from, to, fee);\n  const result = throwErrorOrResponse(response);\n\n  const { transactionHash } = result;\n  const link = {\n    from,\n    to,\n    transactionHash,\n    timestamp: getNowUtcNumber(),\n    neuron,\n  } as LinkDto;\n\n  // TODO: add from/toparticle to DB ??\n  await senseApi?.putCyberlink(link);\n  await senseApi?.addCyberlinkLocal(link);\n\n  return transactionHash;\n};\n\nexport const sendCyberlinkArray = async (\n  neuron: NeuronAddress,\n  arrLinks: CyberLinkSimple[],\n  {\n    signingClient,\n    senseApi,\n  }: {\n    senseApi: SenseApi;\n    signingClient: SigningCyberClient;\n  }\n) => {\n  const multiplier = new BigNumber(2).multipliedBy(arrLinks.length);\n\n  const cyberlinkMsg = {\n    typeUrl: '/cyber.graph.v1beta1.MsgCyberlink',\n    value: {\n      neuron,\n      links: arrLinks,\n    },\n  };\n\n  const response = await signingClient.signAndBroadcast(\n    neuron,\n    [cyberlinkMsg],\n    Soft3MessageFactory.fee(multiplier.toNumber())\n  );\n\n  const result = throwErrorOrResponse(response);\n\n  const { transactionHash } = result;\n\n  const links = arrLinks.map((item) => {\n    return {\n      from: item.from,\n      to: item.to,\n      transactionHash,\n      timestamp: getNowUtcNumber(),\n      neuron,\n    } as LinkDto;\n  });\n\n  await senseApi?.putCyberlink(links);\n\n  await asyncForEach(links, async (item: LinkDto) => {\n    await senseApi?.addCyberlinkLocal(item);\n  });\n\n  return transactionHash;\n};\n\nexport const sendTokensWithMessage = async (\n  address: NeuronAddress,\n  recipient: string,\n  offerCoin: Coin[],\n  memo: string | ParticleCid,\n  {\n    senseApi,\n    signingClient,\n  }: { signingClient: SigningCyberClient; senseApi: SenseApi }\n) => {\n  const response = await signingClient.sendTokens(\n    address,\n    recipient,\n    offerCoin,\n    'auto',\n    memo\n  );\n  const result = throwErrorOrResponse(response);\n  const { transactionHash } = result;\n\n  await senseApi?.addMsgSendAsLocal({\n    transactionHash,\n    fromAddress: address,\n    toAddress: recipient,\n    amount: offerCoin,\n    memo,\n  });\n\n  return transactionHash;\n};\n\nexport const investmint = async (\n  address: NeuronAddress,\n  amount: Coin,\n  resource: string,\n  length: number,\n  signingClient: SigningCyberClient\n) => {\n  const response = await signingClient.investmint(\n    address,\n    amount,\n    resource,\n    length,\n    'auto'\n  );\n\n  const { transactionHash } = throwErrorOrResponse(response);\n  return transactionHash;\n};\n\nexport const updatePassportParticle = async (\n  nickname: string,\n  particle: ParticleCid,\n  {\n    signer,\n    signingClient,\n  }: {\n    signer: OfflineSigner;\n    signingClient: SigningCyberClient;\n  }\n) => {\n  const [{ address }] = await signer.getAccounts();\n\n  const msgObject = {\n    update_particle: {\n      nickname,\n      particle,\n    },\n  };\n  return signingClient.execute(\n    address,\n    CONTRACT_ADDRESS_PASSPORT,\n    msgObject,\n    'auto'\n  );\n};\n","import { ProxyMarked, Remote } from 'comlink';\n\nimport { BehaviorSubject, Subject, first, tap } from 'rxjs';\nimport { CyberClient, SigningCyberClient } from '@cybercongress/cyber-js';\nimport { RPC_URL } from 'src/constants/config';\nimport { SenseApi } from 'src/contexts/backend/services/senseApi';\nimport { Option } from 'src/types';\nimport { getSearchQuery, searchByHash } from 'src/utils/search/utils';\nimport { NeuronAddress, ParticleCid } from 'src/types/base';\nimport { getPassportByNickname } from 'src/containers/portal/utils';\nimport { sendCyberlink } from '../neuron/neuronApi';\n\nimport { extractRuneScript } from './helpers';\nimport { RuneEngine } from './engine';\nimport DbApiWrapper from '../backend/services/DbApi/DbApi';\nimport { IpfsApi } from '../backend/workers/background/api/ipfsApi';\nimport { EmbeddingApi } from '../backend/workers/background/api/mlApi';\n\nexport type RuneInnerDeps = {\n  ipfsApi: Option<IpfsApi>;\n  rune: Option<RuneEngine>;\n  queryClient: Option<CyberClient>;\n  embeddingApi: Option<EmbeddingApi>;\n  dbApi: Option<DbApiWrapper>;\n  signingClient: Option<SigningCyberClient & ProxyMarked>;\n  // signer?: Option<OfflineSigner>;\n  senseApi: Option<SenseApi & ProxyMarked>;\n  address: Option<NeuronAddress>;\n};\n\ntype SubjectDeps<T> = {\n  [K in keyof T]: BehaviorSubject<T[K]> | Subject<T[K]>;\n};\n\nconst createRuneDeps = () => {\n  const subjectDeps: SubjectDeps<RuneInnerDeps> = {\n    // Initialize subjects for each dependency\n    ipfsApi: new BehaviorSubject<RuneInnerDeps['ipfsApi']>(undefined),\n    rune: new BehaviorSubject<RuneInnerDeps['rune']>(undefined),\n    queryClient: new BehaviorSubject<RuneInnerDeps['queryClient']>(undefined),\n    embeddingApi: new BehaviorSubject<Option<EmbeddingApi>>(undefined),\n    signingClient: new BehaviorSubject<RuneInnerDeps['signingClient']>(\n      undefined\n    ),\n    senseApi: new BehaviorSubject<RuneInnerDeps['senseApi']>(undefined),\n    address: new BehaviorSubject<RuneInnerDeps['address']>(undefined),\n    dbApi: new BehaviorSubject<RuneInnerDeps['dbApi']>(undefined),\n  };\n\n  let abortController: Option<AbortController>;\n\n  const defferedDependency = (\n    name: keyof RuneInnerDeps\n  ): Promise<RuneInnerDeps[typeof name]> => {\n    return new Promise((resolve) => {\n      const item$ = subjectDeps[name] as BehaviorSubject<\n        RuneInnerDeps[typeof name]\n      >;\n      if (item$.getValue()) {\n        resolve(item$.getValue());\n      }\n\n      item$\n        .pipe(\n          first((value) => !!value) // Automatically unsubscribes after the first valid value\n          // tap((v) => console.log('------defferedDependency', name, v))\n        )\n        .subscribe((value) => {\n          resolve(value);\n        });\n    });\n  };\n\n  CyberClient.connect(RPC_URL).then((client) => {\n    subjectDeps.queryClient?.next(client);\n  });\n\n  const setInnerDeps = (externalDeps: Partial<RuneInnerDeps>) => {\n    Object.keys(externalDeps)\n      .filter((name) => externalDeps[name as keyof RuneInnerDeps] !== undefined)\n      .forEach((name) => {\n        const item = externalDeps[name as keyof RuneInnerDeps];\n        subjectDeps[name as keyof RuneInnerDeps].next(item);\n      });\n  };\n\n  const graphSearch = async (query: string, page = 0) => {\n    const queryClient = (await defferedDependency(\n      'queryClient'\n    )) as CyberClient;\n\n    const keywordHash = await getSearchQuery(query);\n\n    return searchByHash(queryClient, keywordHash, page);\n  };\n\n  const getIpfsTextConent = async (cid: string) => {\n    const ipfsApi = (await defferedDependency('ipfsApi')) as IpfsApi;\n    return ipfsApi.fetchWithDetails(cid, 'text');\n  };\n\n  const evalScriptFromIpfs = async (\n    cid: ParticleCid,\n    funcName: string,\n    params = {}\n  ) => {\n    try {\n      const result = await getIpfsTextConent(cid);\n      if (result?.content === undefined) {\n        return { action: 'error', message: 'Particle not found' };\n      }\n      // in case of soul script is mixed with markdown\n      // need to extract pure script\n      const pureScript = extractRuneScript(result.content);\n\n      const rune = (await defferedDependency('rune')) as RuneEngine;\n\n      return rune.executeFunction(pureScript, funcName, params);\n    } catch (e) {\n      return { action: 'error', message: e.toString() };\n    }\n  };\n\n  const executeScriptCallback = async (refId: string, data = {}) => {\n    try {\n      const rune = (await defferedDependency('rune')) as RuneEngine;\n      return rune.executeCallback(refId, data);\n    } catch (e) {\n      return { action: 'error', message: e.toString() };\n    }\n  };\n\n  const createAbortController = () => {\n    abortController = new AbortController();\n    return abortController;\n  };\n\n  const abort = () => {\n    abortController?.abort();\n  };\n\n  const cybApi = {\n    createAbortController,\n    graphSearch,\n    cyberlink: async (from: string, to: string) => {\n      const address = subjectDeps.address.getValue();\n      if (!address) {\n        throw new Error('Connect your wallet first');\n      }\n      const senseApi = (await defferedDependency('senseApi')) as SenseApi;\n      const signingClient = (await defferedDependency(\n        'signingClient'\n      )) as SigningCyberClient;\n\n      return sendCyberlink(address, from, to, {\n        senseApi,\n        signingClient,\n      });\n    },\n    getPassportByNickname: async (nickname: string) => {\n      const queryClient = await defferedDependency('queryClient');\n      const passport = await getPassportByNickname(queryClient, nickname);\n\n      return passport;\n    },\n    searcByEmbedding: async (text: string, count = 10) => {\n      const embeddingApi = (await defferedDependency(\n        'embeddingApi'\n      )) as EmbeddingApi;\n      await defferedDependency('dbApi');\n      // console.log('----searcByEmbedding', text);\n      return embeddingApi.searchByEmbedding(text, count);\n    },\n    evalScriptFromIpfs,\n    getIpfsTextConent,\n    addContenToIpfs: async (content: string) => {\n      const ipfsApi = (await defferedDependency('ipfsApi')) as IpfsApi;\n\n      return ipfsApi.addContent(content);\n    },\n    executeScriptCallback,\n  };\n\n  return { setInnerDeps, cybApi, abort };\n};\n\nconst runeDeps = createRuneDeps();\n\nexport type RuneDeps = typeof runeDeps;\n\n// export type EngineDeps = ReturnType<typeof createRuneDeps>;\n\nexport default runeDeps;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-unused-modules */\n\n// https://platform.openai.com/docs/models/overview\n// gpt-3.5-turbo\n\ntype OpenAiMessage = {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n};\n\ninterface OpenAIParams {\n  model: string;\n  messages: OpenAiMessage[];\n  stream?: boolean;\n  [key: string]: any;\n}\n\nconst defaultOpenAIParams: Partial<OpenAIParams> = {\n  model: 'gpt-3.5-turbo',\n};\n\nexport const openAICompletion = async (\n  messages: OpenAiMessage[],\n  apiKey: string,\n  params: Partial<OpenAIParams> = {},\n  cb: (s: string) => Promise<void>,\n  abortController?: AbortController\n): Promise<string> => {\n  const body = JSON.stringify({\n    messages,\n    ...defaultOpenAIParams,\n    ...params,\n  });\n\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  };\n\n  const response = await fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    signal: abortController?.signal,\n    headers,\n    body,\n  });\n\n  if (!params.stream) {\n    // Non-streaming request\n    const data = await response.json();\n    return data.choices[0].message.content;\n  }\n  // Streaming request\n  const reader = response.body?.getReader();\n  const decoder = new TextDecoder();\n  let result = '';\n  let buffer = '';\n\n  if (reader) {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // eslint-disable-next-line no-await-in-loop\n      const { done, value } = await reader.read();\n      if (done || abortController?.signal.aborted) {\n        break;\n      }\n\n      buffer += decoder.decode(value, { stream: true });\n      const lines = buffer.split('\\n');\n\n      // Keep the last partial line in the buffer\n      buffer = lines.pop() || '';\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const line of lines) {\n        const message = line.replace(/^data: /, '');\n        if (message === '[DONE]') {\n          return result;\n        }\n        try {\n          const parsed = JSON.parse(message);\n          if (parsed.choices && parsed.choices.length > 0) {\n            const { content } = parsed.choices[0].delta;\n            result += content;\n            if (content) {\n              // eslint-disable-next-line no-await-in-loop\n              await cb(content);\n            }\n          }\n        } catch (error) {\n          console.error('Error parsing stream message:', message, error);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n","/* eslint-disable import/no-unused-modules */\n\nimport { getFromLink, getToLink } from '../transactions/lcd';\nimport runeDeps from './runeDeps';\nimport { openAICompletion } from './services/llmRequests/openai';\n\n// let runeDeps;\n\n// export const initRuneDeps = (deps) => {\n//   console.log('---initRuneDeps', deps);\n\n//   runeDeps = deps;\n// };\nexport async function jsCyberSearch(query) {\n  return runeDeps.cybApi.graphSearch(query);\n}\n\nexport async function jsCyberLink(fromCid, toCid) {\n  return runeDeps.cybApi.cyberlink(fromCid, toCid);\n}\n\nexport async function jsGetPassportByNickname(nickname) {\n  return runeDeps.cybApi.getPassportByNickname(nickname);\n}\n\nexport async function jsEvalScriptFromIpfs(cid, funcName, params = {}) {\n  return runeDeps.cybApi.evalScriptFromIpfs(cid, funcName, params);\n}\n\nexport async function jsGetIpfsTextContent(cid) {\n  return runeDeps.getIpfsTextConent(cid);\n}\n\nexport async function jsAddContenToIpfs(content) {\n  return runeDeps.addContenToIpfs(content);\n}\n\nexport async function jsExecuteScriptCallback(refId, data) {\n  console.log('exec deps callback', refId);\n  return runeDeps.cybApi.executeScriptCallback(refId, data);\n}\n\nexport async function jsOpenAICompletions(messages, apiKey, params, refId) {\n  const callback = async (data) => jsExecuteScriptCallback(refId, data);\n  const result = await openAICompletion(\n    messages,\n    apiKey,\n    params,\n    callback,\n    runeDeps.cybApi.createAbortController()\n  );\n  return result;\n}\n\nexport async function jsSearchByEmbedding(text, count) {\n  return runeDeps.cybApi.searcByEmbedding(text, count);\n}\n\nexport async function jsCyberLinksFrom(cid) {\n  const result = await getFromLink(cid);\n  return result;\n}\n\nexport async function jsCyberLinksTo(cid) {\n  const result = await getToLink(cid);\n  return result;\n}\n","import {\n  GetTxsEventRequest,\n  GetTxsEventResponse,\n  GetTxsEventResponseAmino,\n  OrderBy,\n} from '@cybercongress/cyber-ts/cosmos/tx/v1beta1/service';\nimport axios from 'axios';\nimport { CID_FOLLOW, CID_TWEET } from 'src/constants/app';\nimport { LCD_URL } from 'src/constants/config';\nimport { LinksType, LinksTypeFilter } from 'src/containers/Search/types';\n\ntype PropsTx = {\n  events: ReadonlyArray<{ key: string; value: string }>;\n  pagination?: GetTxsEventRequest['pagination'];\n  orderBy?: GetTxsEventRequest['orderBy'];\n};\n\nexport const getTxs = async (txsHash) => {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: `${LCD_URL}/cosmos/tx/v1beta1/txs/${txsHash}`,\n    });\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n\n/**\n * @deprecated don't use lcd, use cyber-ts instead\n */\nexport async function getTransactions({\n  events,\n  pagination = { limit: 20, offset: 0 },\n  orderBy,\n  config,\n}: PropsTx) {\n  const { offset, limit } = pagination;\n  const response = await axios.get<GetTxsEventResponseAmino>(\n    `${LCD_URL}/cosmos/tx/v1beta1/txs`,\n    {\n      params: {\n        'pagination.offset': offset,\n        'pagination.limit': limit,\n        orderBy,\n        events: events.map((evn) => `${evn.key}='${evn.value}'`),\n      },\n      paramsSerializer: {\n        indexes: null,\n      },\n      signal: config?.signal,\n    }\n  );\n\n  const { txs } = response.data;\n\n  // bullshit formatting FIXME:\n  // const formatted = GetTxsEventResponse.fromAmino(response.data);\n  // from amino to protobuf\n  const formatted = {\n    txs,\n    pagination: response.data.pagination || {\n      total: response.data.total,\n    },\n    txResponses: response.data.tx_responses,\n  } as GetTxsEventResponse;\n\n  if (!formatted.pagination?.total) {\n    formatted.pagination.total = formatted.txResponses.length;\n  }\n\n  return formatted;\n}\n\nconst getLink = async (\n  cid: string,\n  type: LinksType = LinksTypeFilter.from,\n  { offset, limit, order = OrderBy.ORDER_BY_DESC }\n) => {\n  try {\n    const response = await getTransactions({\n      events: [\n        {\n          key: `cyberlink.particle${\n            type === LinksTypeFilter.to ? 'To' : 'From'\n          }`,\n          value: cid,\n        },\n      ],\n      pagination: {\n        limit,\n        offset,\n      },\n      orderBy: order,\n    });\n\n    return response;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n\nexport const getFromLink = async (cid, offset, limit) => {\n  return getLink(cid, LinksTypeFilter.from, { offset, limit });\n};\n\nexport const getToLink = async (cid, offset, limit) => {\n  return getLink(cid, LinksTypeFilter.to, { offset, limit });\n};\n\nexport const getFollows = async (address) => {\n  try {\n    const response = await getTransactions({\n      events: [\n        { key: 'cyberlink.particleFrom', value: CID_FOLLOW },\n        { key: 'cyberlink.neuron', value: address },\n      ],\n      pagination: { limit: 1000000000 },\n    });\n\n    return response;\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n\nexport const getTweet = async (address) => {\n  try {\n    const response = await getTransactions({\n      events: [\n        { key: 'cyberlink.particleFrom', value: CID_TWEET },\n        { key: 'cyberlink.neuron', value: address },\n      ],\n      pagination: { limit: 1000000000 },\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const checkFollow = async (address, addressFollowHash) => {\n  try {\n    const response = await getTransactions({\n      events: [\n        { key: 'cyberlink.particleFrom', value: CID_FOLLOW },\n        { key: 'cyberlink.neuron', value: address },\n        { key: 'cyberlink.particleTo', value: addressFollowHash },\n      ],\n      pagination: { limit: 1000000000 },\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const getFollowers = async (addressHash) => {\n  try {\n    const response = await getTransactions({\n      events: [\n        {\n          key: 'cyberlink.particleFrom',\n          value: CID_FOLLOW,\n        },\n        {\n          key: 'cyberlink.particleTo',\n          value: addressHash,\n        },\n      ],\n      pagination: {\n        limit: 1000000000,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n","export const enum Networks {\n  BOSTROM = 'bostrom',\n  SPACE_PUSSY = 'space-pussy',\n  ETH = 'eth',\n  OSMO = 'osmo',\n  TERRA = 'terra',\n  COSMOS = 'cosmoshub-4',\n}\n\nexport type NetworkConfig = {\n  CHAIN_ID: Networks;\n  BASE_DENOM: string;\n  DENOM_LIQUID: string;\n  RPC_URL: string;\n  LCD_URL: string;\n  WEBSOCKET_URL: string;\n  INDEX_HTTPS: string;\n  INDEX_WEBSOCKET: string;\n  BECH32_PREFIX: string;\n  MEMO_KEPLR: string;\n};\n\nexport type NetworksList = {\n  [key in Networks]: NetworkConfig;\n};\n","export async function waitUntil(cond: () => boolean, timeoutDuration = 60000) {\n  if (cond()) {\n    return true;\n  }\n\n  const waitPromise = new Promise((resolve) => {\n    const interval = setInterval(() => {\n      if (cond()) {\n        clearInterval(interval);\n        resolve(true);\n      }\n    }, 10);\n  });\n\n  const timeoutPromise = new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error('waitUntil timed out!'));\n    }, timeoutDuration);\n  });\n\n  return Promise.race([waitPromise, timeoutPromise]);\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport function makeCancellable<T extends (...args: any[]) => Promise<any>>(\n  func: T,\n  signal: AbortSignal\n): (...funcArgs: Parameters<T>) => Promise<ReturnType<T>> {\n  return async (...args: Parameters<T>): Promise<ReturnType<T>> => {\n    // Promise that listens for the abort signal\n    const abortPromise = new Promise<ReturnType<T>>((_, reject) => {\n      const abortHandler = () => {\n        signal.removeEventListener('abort', abortHandler); // Clean up the event listener\n        reject(new DOMException('The operation was aborted.', 'AbortError'));\n      };\n      signal.addEventListener('abort', abortHandler, { once: true });\n    });\n\n    // Wrapping the original function in a promise\n    const taskPromise = new Promise<ReturnType<T>>(async (resolve, reject) => {\n      try {\n        const result = await func(...args);\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    });\n\n    // Using Promise.race to handle cancellation\n    return Promise.race([taskPromise, abortPromise]);\n  };\n}\n\nexport function throwIfAborted<T extends (...args: any[]) => Promise<any>>(\n  func: T,\n  signal: AbortSignal\n): (...funcArgs: Parameters<T>) => Promise<ReturnType<T>> {\n  return async (...args: Parameters<T>): Promise<ReturnType<T>> => {\n    if (signal.aborted) {\n      throw new DOMException('The operation was aborted.', 'AbortError');\n    }\n    return func(...args);\n  };\n}\n\n/**\n * Promise will be rejected after timeout.\n *\n * @param promise\n * @param timeout ms\n * @param abortController trigger abort\n * @returns\n */\n// eslint-disable-next-line import/no-unused-modules\nexport async function withTimeout<T>(\n  promise: Promise<T>,\n  timeout: number,\n  abortController?: AbortController\n): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) => {\n      const timer = setTimeout(() => {\n        abortController?.abort('timeout');\n        clearTimeout(timer);\n        reject(new DOMException('timeout', 'AbortError'));\n      }, timeout);\n    }),\n  ]);\n}\n","const LEDGER = {\n  STAGE_INIT: 0,\n  STAGE_SELECTION: 1,\n  STAGE_LEDGER_INIT: 2,\n  STAGE_READY: 3,\n  STAGE_WAIT: 4,\n  STAGE_GENERATED: 5,\n  STAGE_SUBMITTED: 6,\n  STAGE_CONFIRMING: 7,\n  STAGE_CONFIRMED: 8,\n  STAGE_ERROR: 15,\n  HDPATH: [44, 118, 0, 0, 0],\n};\n\nconst GENESIS_SUPPLY = 1000000000000000;\nconst TOTAL_GOL_GENESIS_SUPPLY = 50000000000000;\n\nconst POCKET = {\n  STAGE_TWEET_ACTION_BAR: {\n    ADD_AVATAR: 'addAvatar',\n    FOLLOW: 'follow',\n    TWEET: 'tweet',\n  },\n};\n\nexport { LEDGER, GENESIS_SUPPLY, TOTAL_GOL_GENESIS_SUPPLY, POCKET };\n","import dateFormat from 'dateformat';\n\nexport const numberToUtcDate = (timestamp: number) =>\n  dateFormat(new Date(timestamp), 'yyyy-mm-dd\"T\"HH:MM:ss.l', true);\n\nexport const dateToUtcNumber = (isoString: string) =>\n  Date.parse(isoString.endsWith('Z') ? isoString : `${isoString}Z`);\n\nexport const getNowUtcNumber = () => Date.now();\n\nfunction roundMilliseconds(dateTimeString: string) {\n  const date = new Date(dateTimeString);\n  const roundedMilliseconds = Math.round(date.getMilliseconds() / 1000) * 1000;\n  date.setMilliseconds(roundedMilliseconds);\n  return dateFormat(date, 'yyyy-mm-dd\"T\"HH:MM:ss.l');\n}\nfunction getCurrentTimezoneOffset() {\n  const now = new Date();\n  return -now.getTimezoneOffset() / 60;\n}\n\nfunction pluralizeUnit(quantity: number, unit: string): string {\n  return quantity === 1 ? unit : `${unit}s`;\n}\n\nconst minuteInMs = 60000; // 60 seconds * 1000 milliseconds\nconst hourInMs = 3600000; // 60 minutes * 60 seconds * 1000 milliseconds\nconst dayInMs = 86400000; // 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\n\nfunction convertTimestampToString(timestamp: number): string {\n  if (timestamp < minuteInMs) {\n    const seconds = Math.floor(timestamp / 1000);\n    return `${seconds} ${pluralizeUnit(seconds, 'second')}`;\n  }\n  if (timestamp < hourInMs) {\n    const minutes = Math.floor(timestamp / minuteInMs);\n    return `${minutes} ${pluralizeUnit(minutes, 'minute')}`;\n  }\n  if (timestamp < dayInMs) {\n    const hours = Math.floor(timestamp / hourInMs);\n    return `${hours} ${pluralizeUnit(hours, 'hour')}`;\n  }\n\n  const days = Math.floor(timestamp / dayInMs);\n  return `${days} ${pluralizeUnit(days, 'day')}`;\n}\n\nexport { roundMilliseconds, convertTimestampToString };\n","import { EntityToDto, DtoToEntity } from 'src/types/dto';\nimport { deserializeString } from './string';\n\nexport const snakeToCamel = (str: string) =>\n  str.replace(/([-_][a-z])/g, (group) =>\n    group.toUpperCase().replace('-', '').replace('_', '')\n  );\n\nexport const camelToSnake = (str: string) =>\n  str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n// Function to transform a DB entity to a DTO\n\n// eslint-disable-next-line import/no-unused-modules\nexport function entityToDto<T extends Record<string, any>>(\n  dbEntity: T\n): EntityToDto<T> {\n  if (!dbEntity || typeof dbEntity !== 'object') {\n    return dbEntity;\n  }\n  const dto: Record<string, any> = {}; // Specify the type for dto\n  Object.keys(dbEntity).forEach((key) => {\n    if (Object.prototype.hasOwnProperty.call(dbEntity, key)) {\n      const camelCaseKey = snakeToCamel(key);\n      let value = dbEntity[key];\n      if (Array.isArray(dbEntity[key])) {\n        value = dbEntity[key].map((item) => entityToDto(item));\n      } else if (typeof dbEntity[key] === 'object') {\n        value = entityToDto(dbEntity[key]);\n      } else if (typeof dbEntity[key] === 'string') {\n        value = deserializeString(value);\n      }\n      dto[camelCaseKey] = value;\n    }\n  });\n  return dto as EntityToDto<T>;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport function dtoToEntity<T extends Record<string, any>>(\n  dto: T\n): DtoToEntity<T> {\n  // in case of recursive calls\n  if (!dto || typeof dto !== 'object') {\n    return dto;\n  }\n  const dbEntity: any = {};\n\n  Object.keys(dto).forEach((key) => {\n    if (Object.prototype.hasOwnProperty.call(dto, key)) {\n      const snakeCaseKey = camelToSnake(key);\n      let value = dto[key];\n      if (Array.isArray(value)) {\n        value = value.map((item) => dtoToEntity(item));\n      } else if (typeof value === 'object') {\n        value = dtoToEntity(value);\n      }\n      //  else if (typeof value === 'string') {\n      //   value = replaceQuotes(value);\n      // }\n      dbEntity[snakeCaseKey] = value;\n    }\n  });\n  return dbEntity as DtoToEntity<T>; // Replace T with the appropriate DB Entity type if known\n}\n\nexport function dtoListToEntity<T extends Record<string, any>>(\n  array: T[]\n): DtoToEntity<T>[] {\n  return array.map((dto) => dtoToEntity(dto));\n}\n\nexport function entityListToDto<T extends Record<string, any>>(\n  array: T[]\n): EntityToDto<T>[] {\n  return array.map((dto) => entityToDto(dto));\n}\n\nexport function removeUndefinedFields(entity: Record<string, any>) {\n  Object.keys(entity).forEach((key) => {\n    if (entity[key] === undefined) {\n      delete entity[key];\n    }\n  });\n  return entity;\n}\n","import Unixfs from 'ipfs-unixfs';\nimport { DAGNode, util as DAGUtil } from 'ipld-dag-pb';\nimport { isString } from 'lodash';\nimport { RemoteIpfsApi } from 'src/services/backend/workers/background/worker';\nimport { ParticleCid } from 'src/types/base';\nimport { PATTERN_IPFS_HASH } from 'src/constants/patterns';\nimport { Remote } from 'comlink';\nimport { IpfsApi } from 'src/services/backend/workers/background/api/ipfsApi';\n\nexport const isCID = (cid: string): boolean => {\n  return cid.match(PATTERN_IPFS_HASH) !== null;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getIpfsHash = (string: string): Promise<ParticleCid> =>\n  new Promise((resolve, reject) => {\n    const unixFsFile = new Unixfs('file', Buffer.from(string));\n\n    const buffer = unixFsFile.marshal();\n    DAGNode.create(buffer, (err, dagNode) => {\n      if (err) {\n        reject(new Error('Cannot create ipfs DAGNode'));\n      }\n\n      DAGUtil.cid(dagNode, (error, cid) => {\n        resolve(cid.toBaseEncodedString());\n      });\n    });\n  });\nexport const addIfpsMessageOrCid = async (\n  message: string | ParticleCid | File,\n  { ipfsApi }: { ipfsApi: Remote<IpfsApi> | null }\n) => {\n  if (!ipfsApi) {\n    throw Error('IpfsApi is not initialized');\n  }\n\n  return (\n    isString(message) && message.match(PATTERN_IPFS_HASH)\n      ? message\n      : ((await ipfsApi!.addContent(message)) as string)\n  ) as ParticleCid;\n};\n","import { ScriptEntrypointNames } from 'src/services/scripting/types';\nimport { KeyValueString } from 'src/types/data';\n\ntype JsonTypeKeys = 'secrets';\n\ntype StringTypeKeys =\n  | ScriptEntrypointNames\n  | `${ScriptEntrypointNames[0]}_enabled`\n  | `${ScriptEntrypointNames[1]}_enabled`;\n\nexport type JsonRecord = Record<string, string | number | boolean>;\n\nconst jsonKeyMap: Record<JsonTypeKeys, string> = {\n  secrets: 'secrets',\n};\n\nconst stringKeyMap: Record<StringTypeKeys, string> = {\n  particle: 'script_particle',\n  // myParticle: 'script_particle_inference',\n};\n\nconst keyValuesToObject = (data: KeyValueString[]) => {\n  return Object.fromEntries(\n    Object.values(data)\n      .filter((row) => !!row?.key)\n      .map((row) => [row.key, row.value])\n  );\n};\n\nconst saveJsonToLocalStorage = (storageKey: JsonTypeKeys, data: JsonRecord) => {\n  localStorage.setItem(jsonKeyMap[storageKey], JSON.stringify(data));\n};\n\nconst loadJsonFromLocalStorage = (\n  storageKey: JsonTypeKeys,\n  defaultData: JsonRecord = {}\n) => {\n  const raw = localStorage.getItem(jsonKeyMap[storageKey]);\n  return raw ? JSON.parse(raw) : defaultData;\n};\n\nconst loadStringFromLocalStorage = (\n  name: StringTypeKeys,\n  defaultValue?: string\n) => {\n  const keyName = stringKeyMap[name] || name;\n  const result = localStorage.getItem(keyName) || defaultValue;\n  return result;\n};\n\nconst saveStringToLocalStorage = (name: StringTypeKeys, value: string) => {\n  const keyName = stringKeyMap[name] || name;\n  localStorage.setItem(keyName, value);\n};\n\nconst getEntrypointKeyName = (\n  name: ScriptEntrypointNames,\n  prefix: 'enabled'\n): StringTypeKeys => `${name}_${prefix}`;\n\nexport {\n  saveJsonToLocalStorage,\n  loadJsonFromLocalStorage,\n  loadStringFromLocalStorage,\n  saveStringToLocalStorage,\n  getEntrypointKeyName,\n  keyValuesToObject,\n};\n","export const CYBLOG_LOG_SHOW = 'cyblog_show';\n\nexport const CYBLOG_BROADCAST_CHANNEL_NAME = 'CYBLOG_BROADCST_CHANNEL';\n\nexport const CYBLOG_CONSOLE_PARAMS_DEFAULT = {\n  thread: 'all',\n  unit: 'all',\n  module: 'all',\n};\n","import _, { isEmpty } from 'lodash';\nimport { ConsoleLogParams, LogContext, LogItem, LogLevel } from './types';\nimport { CYBLOG_BROADCAST_CHANNEL_NAME } from './constants';\n\nconst logList: LogItem[] = [];\n\nfunction createCybLog<T>(defaultContext: Partial<LogContext<T>> = {}) {\n  function appendLog(logItem: LogItem, truncate = true) {\n    logList.push(logItem);\n\n    while (truncate && logList.length > 1000) {\n      logList.shift(); // Remove the first element to keep the list size <= 1000\n    }\n  }\n  let consoleLogParams = {} as ConsoleLogParams;\n\n  const channel = new BroadcastChannel(CYBLOG_BROADCAST_CHANNEL_NAME);\n\n  channel.onmessage = (event) => {\n    if (event.data.type === 'params') {\n      consoleLogParams = { ...consoleLogParams, ...event.data.value };\n    }\n  };\n\n  const getConsoleLogParams = () => consoleLogParams;\n\n  function consoleLog<T>(\n    level: LogLevel,\n    message: T,\n    context: Partial<LogContext<T>>\n  ) {\n    const ctx = _.omit(context, [\n      'formatter',\n      'thread',\n      'module',\n      'unit',\n      'data',\n    ]);\n    const { thread = '', module = '', unit = '', data = '' } = context;\n    const ctxItem = isEmpty(ctx) ? '' : ctx;\n\n    if (Array.isArray(message)) {\n      console[level](...message, ctxItem);\n      return;\n    }\n\n    if (context?.formatter) {\n      console[level](context?.formatter(message), ctxItem);\n      return;\n    }\n\n    console[level](`[${thread}:${module}:${unit}] ${message}`, data, ctxItem);\n  }\n\n  // eslint-disable-next-line import/no-unused-modules\n  function log<T>(\n    level: LogLevel,\n    message: string | T,\n    context: LogContext<any> = defaultContext\n  ) {\n    try {\n      const formattedMessage = context?.formatter\n        ? context?.formatter(message)\n        : message;\n\n      const logEntry = {\n        timestamp: new Date(),\n        level,\n        message: formattedMessage,\n        stacktrace: context?.stacktrace,\n        context: _.omit(context, ['formatter', 'stacktrace']),\n      };\n\n      appendLog(logEntry);\n      // !!localStorage.getItem(LOCAL_STORAGE_USE_CONSOLE_LOG_KEY) &&\n      const showConsoleLog = Object.keys(consoleLogParams).reduce(\n        (acc: boolean, key: string) => {\n          const params = consoleLogParams[key];\n          const contextItem = context[key];\n          if (params && contextItem) {\n            return (\n              acc ||\n              params === 'all' ||\n              params.length === 0 ||\n              params.some((p) => p === contextItem)\n            );\n          }\n          return acc;\n        },\n        false\n      );\n\n      if (showConsoleLog) {\n        consoleLog(level, message, context);\n      }\n    } catch (error) {\n      console.log('cyblog error', error);\n    }\n  }\n\n  function info<T>(message: T, context?: LogContext<string | T>) {\n    return log('info', message, context);\n  }\n\n  function error<T>(message: T, context?: LogContext<string | T>) {\n    return log('error', message, context);\n  }\n\n  function warn<T>(message: T, context?: LogContext<string | T>) {\n    return log('warn', message, context);\n  }\n\n  function trace<T>(message: T, context?: LogContext<string | T>) {\n    return log('warn', message, context);\n  }\n\n  function normalizeLog() {\n    return logList.map((logItem) => {\n      const { context, ...rest } = logItem;\n      const {\n        unit = '',\n        module = '',\n        thread = '',\n        data = '',\n        error = '',\n        stacktrace = '',\n      } = context || {};\n      return {\n        ...rest,\n        unit,\n        module,\n        thread,\n        data, //: JSON.stringify(data),\n        error,\n        stacktrace,\n      };\n    });\n  }\n\n  return {\n    log,\n    info,\n    error,\n    warn,\n    trace,\n    logList,\n    getLogs: () => normalizeLog(),\n    clear: () => logList.splice(0, logList.length),\n    getConsoleLogParams,\n  };\n}\n\nexport const createCyblogChannel = (\n  defaultContext: Partial<LogContext<T>> = {}\n) => {\n  const channel = new BroadcastChannel(CYBLOG_BROADCAST_CHANNEL_NAME);\n\n  function postLogToChannel<T>(\n    level: LogLevel,\n    message: T,\n    context?: LogContext<string | T>\n  ) {\n    const ctx = { ...defaultContext, ...context };\n    if (context?.error) {\n      ctx.error = JSON.stringify(context.error);\n    }\n    channel.postMessage({\n      type: 'log',\n      value: { level, message, context: ctx },\n    });\n  }\n\n  function info<T>(message: T, context?: LogContext<string | T>) {\n    return postLogToChannel('info', message, context);\n  }\n\n  function error<T>(message: T, context?: LogContext<string | T>) {\n    return postLogToChannel('error', message, context);\n  }\n\n  function warn<T>(message: T, context?: LogContext<string | T>) {\n    return postLogToChannel('warn', message, context);\n  }\n\n  function trace<T>(message: T, context?: LogContext<string | T>) {\n    return postLogToChannel('warn', message, context);\n  }\n\n  return { info, error, warn, trace };\n};\n\nconst cyblog = createCybLog({ thread: 'main' });\n\nexport type LogFunc = (message: T, context?: LogContext<string | T>) => void;\n\nexport type CyblogChannel = ReturnType<typeof createCyblogChannel>;\n\nexport default cyblog;\n","export function shortenString(string: string, length = 300) {\n  return string.length > length ? `${string.slice(0, length)}...` : string;\n}\n\nexport function replaceQuotes(string: string) {\n  return string.replace(/\"/g, \"'\");\n}\n\nexport function serializeString(input: string): string {\n  return input\n    .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n    .replace(/\"/g, \"\\\\''\") // Escape double quotes\n    .replace(/'/g, \"\\\\'\") // Escape single quotes\n    .replace(/\\n/g, '\\\\n') // Escape newlines\n    .replace(/\\r/g, '\\\\r') // Escape carriage returns\n    .replace(/#/g, '\\\\!!'); // Escape  - that's comment in cozo\n}\n\nexport function deserializeString(serialized: string): string {\n  return serialized\n    .replace(/\\\\r/g, '\\r') // Unescape carriage returns\n    .replace(/\\\\n/g, '\\n') // Unescape newlines\n    .replace(/\\\\'/g, \"'\") // Unescape single quotes\n    .replace(/\\\\''/g, '\"') // Unescape double quotes\n    .replace(/\\\\\\\\/g, '\\\\') // Unescape backslashes\n    .replace(/\\\\!!/g, '#'); // Unescape # cozo comment\n}\n\nconst specialCharsRegexe = /\\\\u\\{[a-fA-F0-9]+\\}/g;\n\nexport function removeBrokenUnicode(string: string): string {\n  return string.replace(specialCharsRegexe, '');\n}\n\nexport function removeMarkdownFormatting(markdown: string): string {\n  // Remove headers\n  let text = markdown.replace(/^#{1,6}\\s+/gm, '');\n\n  // Remove emphasis (bold, italic, strikethrough)\n  text = text.replace(/(\\*\\*|__)(.*?)\\1/g, '$2');\n  text = text.replace(/(\\*|_)(.*?)\\1/g, '$2');\n  text = text.replace(/(~~)(.*?)\\1/g, '$2');\n\n  // Remove inline code and code blocks\n  text = text.replace(/`{1,3}[^`](.*?)`{1,3}/g, '$1');\n  text = text.replace(/```[\\s\\S]*?```/g, '');\n\n  // Remove blockquotes\n  text = text.replace(/^\\s{0,3}>\\s?/gm, '');\n\n  // Remove links\n  text = text.replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1');\n\n  // Remove images\n  text = text.replace(/!\\[(.*?)\\]\\(.*?\\)/g, '$1');\n\n  // Remove horizontal rules\n  text = text.replace(/^-{3,}$/gm, '');\n\n  // Remove unordered lists\n  text = text.replace(/^\\s*[-+*]\\s+/gm, '');\n\n  // Remove ordered lists\n  text = text.replace(/^\\s*\\d+\\.\\s+/gm, '');\n\n  // Remove extra spaces and new lines\n  text = text.replace(/\\n{2,}/g, '\\n\\n');\n  text = text.replace(/^\\s+|\\s+$/g, '');\n\n  return text;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [342,958,772,564,748,854,235,418], function() { return __webpack_require__(87400); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames not based on template\n\tif (chunkId === 342) return \"342.30dd4deb.js\";\n\tif (chunkId === 958) return \"958.b2e105d5.js\";\n\tif (chunkId === 772) return \"772.8fb1fa04.js\";\n\tif (chunkId === 564) return \"564.b75839d4.js\";\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"198\":\"44cc2170\",\"235\":\"c8ba16cc\",\"418\":\"c293c0f2\",\"543\":\"23c0d02b\",\"748\":\"b6782391\",\"854\":\"d2b02017\",\"979\":\"5bd4d045\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t979: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcyb\"] = self[\"webpackChunkcyb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","__webpack_require__.nc = undefined;","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","___CSS_LOADER_EXPORT___","push","module","id","locals","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","CID_TWEET","CID_FOLLOW","isWorker","WorkerGlobalScope","self","DEFAULT_CHAIN_ID","localStorage","getItem","LCD_URL","RPC_URL","WEBSOCKET_URL","INDEX_HTTPS","INDEX_WEBSOCKET","BECH32_PREFIX","BECH32_PREFIX_VAL","BECH32_PREFIX_VALOPER","BASE_DENOM","DENOM_LIQUID","DEFAULT_GAS_LIMITS","MEMO_KEPLR","defaultNetworks","bostrom","CHAIN_ID","BOSTROM","SPACE_PUSSY","localStorageKeys","pocket","POCKET","POCKET_ACCOUNT","MENU_SHOW","settings","adviserAudio","adviserVoice","PATTERN_CYBER","RegExp","PATTERN_IPFS_HASH","PATTERN_COSMOS","PATTERN_HTTP","LinksTypeFilter","isParticle","value","Boolean","match","initialState","list","isLoading","data","error","chats","summary","unreadCount","total","particles","neurons","llm","threads","JSON","parse","currentThreadId","formatApiData","item","entryType","chat","meta","to","particle","formatted","timestamp","Date","toISOString","transactionHash","hash","transaction_hash","memo","senseChatId","transactions","type","from","ownerId","fromAddress","inputs","address","Object","assign","neuron","fromLog","getSenseList","async","senseApi","getList","map","getSenseChat","getLinks","filter","getFriendItems","markAsRead","newChatStructure","checkIfMessageExists","newMessage","slice","some","msg","name","reducers","updateSenseList","reducer","state","action","payload","forEach","message","concat","caseReducers","orderSenseList","prepare","addSenseItem","status","newList","unshift","updateSenseItem","chatId","txHash","isSuccess","find","sorted","keys","reduce","acc","length","lastMsg","sort","a","b","i","reset","createLLMThread","newThread","messages","dateUpdated","now","title","setItem","stringify","selectLLMThread","addLLMMessageToThread","thread","t","threadId","replaceLastLLMMessageInThread","deleteLLMThread","newT","console","log","clearLLMThreads","removeItem","extraReducers","builder","addCase","pending","fulfilled","rejected","arg","sense","unreadCountParticle","unreadCountNeuron","values","actions","actionBar","tweet","STAGE_TWEET_ACTION_BAR","TWEET","isInitialized","defaultAccount","account","accounts","saveToLocalStorage","l","setDefaultAccount","setAccounts","setInitialized","setStageTweetActionBar","deleteAddress","accountKey","networkKey","bech32","cyber","entryCyber","entries","selectCurrentAddress","store","EntryType","SyncQueueStatus","SyncQueueJobType","QueuePriority","constructor","this","channel","BroadcastChannel","postServiceStatus","postMessage","postSyncEntryProgress","entry","postMlSyncEntryProgress","postSenseUpdate","senseList","postSetDefaultAccount","post","CYB_BROADCAST_CHANNEL","CYB_QUEUE_CHANNEL","MSG_SEND_TRANSACTION_TYPE","MSG_MULTI_SEND_TRANSACTION_TYPE","CYBER_LINK_TRANSACTION_TYPE","syncMyChats","db","myAddress","timestampFrom","signal","shouldUpdateTimestamp","syncItems","findSyncStatus","syncItemsMap","Map","myTransactions","getTransactions","order","myChats","results","syncItem","get","userAddress","lastTransaction","at","transactionTimestamp","index","syncItemHeader","timestampRead","timestampUpdate","prevUnreadCount","lastTimestampRead","Math","max","lastSendTimestamp","timestampUpdateContent","timestampUpdateChat","timestampUnreadFrom","newTimestampUpdateChat","syncStatusChanges","updateSyncStatus","bind","newItem","disabled","putSyncStatus","MY_PARTICLES_SYNC_INTERVAL","MY_FRIENDS_SYNC_INTERVAL","MAX_DATABASE_PUT_SIZE","MAX_LINKS_RESOLVE_BATCH","SENSE_FRIEND_PARTICLES","extractSenseChats","outputs","isSender","updateSenseChat","coins","toAddress","amount","addr","set","last","direction","getLastReadInfo","links","prevTimestampRead","lastUnreadLinks","link","lastMyLinkIndex","findLastIndex","changeParticleSyncStatus","syncStatus","lastLink","broadcastStatus","channelApi","sendStatus","progress","done","s","asyncIterableBatchProcessor","items","batchProcess","batchSize","batch","fetchIterableByOffset","fetchFunction","params","offset","busSender","enqueue","createBackendQueueSender","enqueueParticleEmbeddingMaybe","content","contentToEmbed","getTextContentIfShouldEmbed","cid","jobType","embedding","priority","MEDIUM","contentType","textPreview","getContentToEmbed","shouldEmbed","deps","statusApi","BroadcastChannelSender","_syncQueue$","BehaviorSubject","waitForParticleResolve","Error","embeddingApi$","subscribe","embeddingApi","queue","size","dbInstance$","pipe","first","loadSyncQueue","isInitialized$","combineLatest","ipfsInstance$","dbInstance","ipfsInstance","canEmbed","getValue","loop$","_loop$","then","result","catch","text","existEmbedding","vec","createEmbedding","putEmbedding","err","toString","pendingItems","Promise","all","jobPromise","resolve","saveEmbedding","resolveIpfsParticle","removeSyncQueue","updateSyncQueue","delete","start","source$","tap","q","mergeMap","executing","jobTypeFilter","processSyncQueue","share","cids","putSyncQueue","getSyncQueue","statuses","mapIndexerTransactionToEntity","tx","transaction","block","height","success","date","blockHeight","mapLinkFromIndexerToDto","Order_By","CyberlinksByParticleDocument","CyberlinksCountByNeuronDocument","MessagesByAddressCountDocument","MessagesByAddressSenseDocument","MessagesByAddressSenseWsDocument","mapWebsocketTxToTransactions","events","transactionType","Tx","decode","fromBase64","body","msgType","typeUrl","MsgSend","MsgMultiSend","extractTxData","TxResult","cyberGraphQLWsLink","url","shouldRetry","errOrCloseEvent","retryAttempts","retryWait","retries","setTimeout","min","createIndexerClient","abortSignal","fetchCyberlinks","particleCid","request","limit","orderBy","Asc","where","_or","particle_to","_eq","particle_from","_gt","cyberlinks","fetchCyberlinksByNeroun","particlesFrom","_and","_in","fetchCyberlinksByNerounIterable","getUniqueParticlesFromLinks","Set","fetchCyberlinksAndResolveParticles","particlesResolver","queuePriority","cyberlinksIterable","fetchCyberlinksIterable","enqueueBatch","mapMessagesByAddressVariables","types","orderDirection","timestamp_from","join","order_direction","fetchTransactions","res","messages_by_address","ProgressTracker","onProgressUpdate","requestRecords","totalRequests","completedRequests","estimatedTime","totalCount","completeCount","add","extraRequests","trackProgress","processedCount","addRequestRecord","shift","estimatedRemainingTime","calculateAverageTimePerItem","round","itemCount","totalDiff","totalItems","timeDiff","progressTracker","abortController","AbortController","cyblogCh","params$","createIsInitializedObserver","info","switchMap","createRestartObserver","restart","initAbortController","distinctUntilChanged","addrBefore","addrAfter","v","switchWhenInitialized","actionObservable$","onChange","initialized","super","reloadTrigger$","Subject","startWith","createInitObservable","createClientObservable","onUpdate","abort","syncQueueInitialized","variables","indexerObservable$","query","apolloObservable","ApolloClient","cache","Observable","subscriber","subscription","complete","unsubscribe","createIndexerWebsocket","response","source","nodeObservample$","ws","WebSocket","onopen","send","jsonrpc","method","onmessage","event","onerror","onclose","close","createNodeWebsocketObservable","ctx","unit","isEmpty","merge","defer","initSync","getSyncStatus","lastTransactionTimestamp","syncTransactions","syncStatusItems","processBatchTransactions","putTransactions","syncLinks","lastTimestampFrom","newSyncItem","totalMessageCount","messages_by_address_aggregate","aggregate","count","fetchTransactionMessagesCount","ceil","transactionsAsyncIterable","fetchTransactionsIterable","transactionCount","tweets","particlesFound","txLink","extractCybelinksFromTransaction","putCyberlinks","tweetParticles","nonTweetParticles","includes","HIGH","LOW","isAbortException","e","DOMException","intervalMs","warmupMs","restartLoop","options","onStartInterval","onError","retryDelayMs","restartTrigger$","intervalOrRestart$","interval","delay","exhaustMap","retry","createLoopObservable","doSync","sync","isAborted","particleResolverInitialized","syncItemParticles","newLinkCount","particles_from","cyberlinks_aggregate","fetchCyberlinksCount","newSyncItemParticles","fetchNewTweets","syncParticles","tweetsAsyncIterable","newTweets","existingParticles","existingParticlesMap","tweetsBatch","syncStatusEntities","timestampSyncFrom","updatedSyncItems","linksIndexer","followings$","followings","followingsInitialized$","followingsInitialized","syncUpdates","linksAsyncIterable","linksBatch","newTimestampRead","newUnreadCount","newTimestampUpdateContent","fetchStoredSyncCommunity$","dbApi","fetchParticleAsync","storedCommunity","getCommunity","communityUpdatesMap","c","getExistingOrDefault","following","follower","followsCids","key","pagination","config","txResponses","followers","addressHash","newFollowerCids","newFollowingNeurons","followersCommunity","communityItem","putCommunity","URGENT","onMessage","onmessageerror","getDeffredDbApi","entity","mime","blocks","sizeLocal","size_local","mapParticleToEntity","putParticles","ok","Array","isArray","saveLinks","saveParticles","enquueSync","SyncService","loops","BackendQueueChannel","communitySync$","community","observer","createCommunitySync$","version","stores","raw","table","ipfsContentAddtToInddexdDB","dbValue","cluster","file","dataFile","File","cidVersion","rawLeaves","loadIPFSContentFromDb","emptyStats","fetchIPFSContentStat","node","stat","fetchIPFSContentFromNode","controller","controllerLegacy","timer","startTime","stats","statsDoneTime","statsTime","allowedSize","clearTimeout","availableDownload","firstChunk","cat","Symbol","asyncIterator","fullyDownloaded","stream","catTime","local","pin","pinTime","debug","fetchIPFSContentFromGateway","headers","isExternalNode","nodeType","contentUrl","fetch","flushResults","chunks","getIPFSContent","callBackFuncStatus","dataRsponseDb","addContenToIpfs","QueueStrategy","getNextSource","indexOf","QueueItemTimeoutError","timeoutMs","setPrototypeOf","prototype","CustomHeaders","XCybSourceValues","getQueueItemTotalPriority","viewPortPriority","strategies","external","timeout","maxConcurrentExecutions","gateway","embedded","helia","strategy","queueDebounceMs","queue$","lastNodeCallTime","setNode","reconnectToSwarm","isStarted","withLatestFrom","debounceTime","cancelDeprioritizedItems","workItems","getItemBySourceAndPriority","fetchData$","callbacks","callback","removeAndNext","nextSource","switchSourceAndNext","postSummary","switchStrategy","customStrategy","pendingBySource","itemsToExecute","queueSource","executeCount","itemsByPriority","queueItem","executionTime","promiseFactory","fetchIpfsContent","sharedWorker","enqueueParticleSave","each","with","throwError","catchError","of","mutateQueueItem","changes","releaseExecution","existingItem","initialSource","postProcessing","enqueueAndWait","updateViewPortPriority","cancel","cancelByParent","parent","clear","getQueueMap","getQueueList","getStats","fn","stringToCid","stringToIpfsPath","_config","_isStarted","gatewayUrl","nodeAddress","port","initConfig","window","toCid","swarm","localAddrs","files","withLocal","peers","peer","bootstrap","connect","ls","repoSize","repo","responseId","agentVersion","addOptionsV0","blockstore","open","datastore","libp2p","bootstrapList","transports","rtcConfiguration","iceServers","urls","credential","username","discoverRelays","connectionEncryption","streamMuxers","connectionGater","denyDialMultiaddr","peerDiscovery","services","identify","libp2pFactory","fs","addEventListener","evt","peerId","detail","conn","getConnections","transportsByAddr","fromEntries","remoteAddr","protoCodes","getMultiaddrs","fileSize","localFileSize","dagSize","mtime","optionsV0","fileName","arrayBuffer","Uint8Array","addFile","path","TextEncoder","encode","addBytes","cid_","pins","isPinned","remotePeer","stop","dial","iterable","metadata","toV0","mapToLsResult","host","relay","enabled","hop","preload","API","HTTPHeaders","Addresses","Gateway","Swarm","Delegates","Discovery","MDNS","Enabled","Interval","webRTCStar","Bootstrap","Pubsub","ConnMgr","HighWater","LowWater","DisableNatPortMap","Routing","Type","filters","nat","EXPERIMENTAL","ipnsPubsub","Number","nodeClassMap","initIpfsNode","ipfsNodeType","restOptions","swarmPeerId","swarmPeerAddress","EnhancedClass","Base","parseAs","details","getPeers","forced","isConnectedToSwarm","connectPeer","withCybFeatures","instance","init","urlOpts","allowLocalModels","mlModelMap","featureExtractor","model","createMlApi","broadcastApi","featureExtractor$","replaySubject","ReplaySubject","pooling","normalize","searchByEmbedding","api","createEmbeddingApi$","initPipelineInstance","alias","pipeline","onProgress","progress_callback","progressData","loaded","progrssStateItem","loadPipeline","time","timeEnd","compileConfig","budget","experimental","instructions","defaultRuneEntrypoint","readOnly","execute","funcName","funcParams","input","script","scriptEngine","entrypoints","context","user","secrets","entrypoints$","scriptCallbacks","isSoulInitialized$","run","compileParams","scripts","refId","compilerParams","runtime","app","outputData","diagnosticsOutput","getParticleScriptOrAction","askCompanion","resultType","metaItems","output","personalProcessor","outputContent","setEntrypoints","scriptEntrypoints","pushContext","popContext","names","newContext","executeFunction","executeCallback","getDebug","enigine","backgroundWorker","setInnerDeps","rune","runeDeps","createRuneApi","ipfsQueue","ipfsApi","ipfsOpts","newIpfsNode","ipfsNode","fetchWithDetails","dequeue","dequeueByParent","clearQueue","addContent","createIpfsApi","serviceDeps","injectDb","isIpfsInitialized","setRuneDeps","setParams","createBackgroundWorkerApi","isSharedWorkerUsed","SharedWorker","process","env","IS_DEV","installTransferHandlers","canHandle","deserialize","remote","serialize","overrideLogging","worker","consoleLogMap","original","warn","replaceConsoleLog","args","apply","serializableArgs","obj","String","safeStringify","createWorkerApi","workerUrl","workerName","installLoggingHandler","workerApiProxy","Worker","exposeWorkerApi","onconnect","ports","createAsyncIterable","promise","IPFSContentTransferHandler","rest","port1","port2","MessageChannel","serializedObj","CYBER_NODE_SWARM_PEER_ID","CYBERNODE_SWARM_ADDR_WSS","CYBERNODE_SWARM_ADDR_TCP","IPFS_CLUSTER_URL","CYBER_GATEWAY_URL","FILE_SIZE_DOWNLOAD","createObjectURL","rawData","blob","Blob","createImgData","detectGatewayContentType","basic","mimeToBaseContentType","initialType","parseArrayLikeToDetails","isStringData","Buffer","str","string","newString","trim","test","isHtml","contentToUint8Array","createTextPreview","array","previewLength","getMimeFromUint8Array","fileType","toAsyncIterableWithMime","flush","firstChunkStream","fullStream","tee","firstReader","getReader","read","restReader","asyncIterable","getResponseResult","bytesDownloaded","byteLength","ReadableStream","reader","readStream","chunk","extractRuneScript","markdown","md","hasRune","runeRegex","runeScript","modifiedMarkdown","exec","replace","extractRuneContent","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","entityToArray","columns","col","column","DBResultError","code","display","severity","fetchInitialEmbeddings","saveSyncQueue","page","getRelevance","dto","DB_NAME","DB_STORE_NAME","shouldInitialize","commandFactory","onIndexedDbWrite","dbSchema","onWrite","new_from_indexed_db","initDbSchema","loadCozoDb","performHardReset","loadDbSchema","relations","runCommand","rows","row","getRelations","schemasMap","tableName","fields","is_key","field","createSchema","schema","generateModifyCommand","command","fieldNames","hasValues","actualValues","f","generateAtomCommand","tableSchema","selectedColumns","colKeys","colValues","generatePut","generateGet","selectFields","conditions","conditionFields","queryFields","requiredFields","conditionsStr","orderByStr","limitStr","offsetStr","generateUpdate","generateRm","keyValues","atomCommand","rmCommand","generateRmCommand","createCozoDbCommandFactory","setDbVersion","put","group_key","dbName","storeName","reject","indexedDB","onsuccess","clearRequest","objectStore","oncomplete","clearIndexedDBStore","immutable","resultStr","cozoDbRemote","isDbInitialized","isSyncInitialized","isReady","cyb","deleteDatabase","toBase64","toAscii","active_passport","addAddress","currentAddress","extension","addresses","label","loading","backend","passports","friends","setAdviser","setAdviserNew","isOpen","setIsOpen","i18n","en","validators","moniker","operator","commissionProcent","power","selfProcent","unbonding","rank","bondedTokens","hurry","token","brain","knowledge","yourTotal","toLocaleUpperCase","objects","subjects","cybernomics","supply","staked","price","consensus","heroes","cap","supplyEUL","takeofPrice","capATOM","available","load","supplyGOL","auctionPrice","capETH","percentSupply","gol","myGOLs","myEULs","maxPrize","currentPrize","takeoff","story","episode","header","itIsAPeriod","resistingRebel","asTheyBegin","home","btn","delegate","joinValidator","btnBecome","unDelegateFrom","yourDelegated","btnDelegate","btnUnDelegate","detailsUnDelegate","wallet","generate","enterAmount","jsonTX","pleaseConfirm","tXSubmitted","confirmTX","confirmedTX","confirmed","blockTX","viewTX","tXHash","continue","errorTx","connectLadger","getStarted","openApp","getDetails","startSearch","cyberlink","bandwidth","cyberIt","audioBtn","audioBtnObg","Audio","volume","undefined","Color","active","color","children","className","wrapper","textbox","textboxFace","textboxBottomGradient","textboxBottomLine","dataPercentAttribute","placeholder","width","autoFocus","classNameTextbox","focusedProps","maxValue","isTextarea","onBlurFnc","onFocusFnc","props","ref","focused","setFocused","useState","useEffect","current","focus","blur","Tag","handleMax","percent","target","getAttribute","newValue","toFixed","textarea","style","Black","onMouseDown","onFocus","onBlur","autoComplete","displayName","signer","signingClient","signerReady","initSigner","isMobile","hasTouchScreen","navigator","maxTouchPoints","msMaxTouchPoints","mQ","matchMedia","media","matches","UA","userAgent","viewportWidth","innerWidth","LocalizedStrings","keyLS","poolsGetItem","setTokens","setNetworks","setChannels","particleEnabled","isParticleScriptEnabled","initialScriptEntrypoints","setContext","setEntrypoint","setSecret","removeSecret","setEntrypointEnabled","isSoulInitialized","localStoragePoolsKey","pools","setPools","denomTraces","setDenomTraces","channels","tokens","networks","ibcDenoms","tracesDenom","marketData","dataTotalSupply","filterParticles","epubKey","getEPubMap","epubMapString","currentLocation","getLocation","useCallback","location","epubMap","getSetEPubLocation","epubInitOptions","openAs","search","setLocation","currentStyle","useMemo","onLocationChange","loc","locationChanged","createContext","selectedOption","changeSelectedOption","SpetionLabel","position","trackLabel","trackMarkBgBlur","trackMarkGradient","trackMarkLabel","trackMarkLabelColorBlue","angle","debtAmountPosToken","transform","debtAmountPosTokenObj","scaleMax","minlVal","scale","percentsToPosition","percents","queryContractSmartPassport","client","SigningCyberClientError","rawLog","defaultFee","gas","sendCyberlink","fee","putCyberlink","addCyberlinkLocal","subjectDeps","queryClient","defferedDependency","item$","CyberClient","getIpfsTextConent","cybApi","createAbortController","graphSearch","keywordHash","getSearchQuery","searchByHash","getPassportByNickname","nickname","passport","passport_by_nickname","searcByEmbedding","evalScriptFromIpfs","pureScript","executeScriptCallback","externalDeps","createRuneDeps","defaultOpenAIParams","openAICompletion","apiKey","cb","Authorization","json","choices","decoder","TextDecoder","buffer","aborted","lines","split","pop","line","parsed","delta","jsCyberSearch","jsCyberLink","fromCid","jsGetPassportByNickname","jsEvalScriptFromIpfs","jsGetIpfsTextContent","jsAddContenToIpfs","jsExecuteScriptCallback","jsOpenAICompletions","jsSearchByEmbedding","jsCyberLinksFrom","jsCyberLinksTo","evn","paramsSerializer","indexes","txs","tx_responses","getLink","ORDER_BY_DESC","getFromLink","getToLink","Networks","throwIfAborted","func","ADD_AVATAR","FOLLOW","numberToUtcDate","dateToUtcNumber","isoString","endsWith","getNowUtcNumber","snakeToCamel","group","toUpperCase","camelToSnake","letter","toLowerCase","entityToDto","dbEntity","hasOwnProperty","call","camelCaseKey","dtoToEntity","snakeCaseKey","dtoListToEntity","getIpfsHash","marshal","DAGNode","dagNode","toBaseEncodedString","jsonKeyMap","stringKeyMap","saveJsonToLocalStorage","storageKey","loadJsonFromLocalStorage","defaultData","loadStringFromLocalStorage","defaultValue","keyName","saveStringToLocalStorage","getEntrypointKeyName","prefix","CYBLOG_BROADCAST_CHANNEL_NAME","logList","createCyblogChannel","defaultContext","postLogToChannel","level","trace","cyblog","consoleLogParams","formattedMessage","formatter","logItem","truncate","appendLog","stacktrace","contextItem","p","ctxItem","consoleLog","getLogs","splice","getConsoleLogParams","createCybLog","shortenString","replaceQuotes","serializeString","deserializeString","serialized","specialCharsRegexe","removeBrokenUnicode","removeMarkdownFormatting","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","m","x","__webpack_exports__","O","amdO","chunkIds","notFulfilled","Infinity","j","every","r","n","getter","__esModule","d","getPrototypeOf","__proto__","mode","ns","create","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","chunkId","promises","u","miniCssF","g","globalThis","Function","hmd","prop","toStringTag","nmd","paths","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","nc"],"sourceRoot":""}