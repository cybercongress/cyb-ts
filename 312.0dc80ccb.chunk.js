!function(){var t,e,s,n,a={28379:function(t,e,s){"use strict";var n=s(99870),a=s(89546),r=s(91026),i=s(38161);const o=t=>i.k0.parse(t),c=t=>`/ipfs/${t}`;const u="QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB",d=`/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/${u}`,l=`/ip4/88.99.105.146/tcp/4001/p2p/${u}`,p="https://gateway.ipfs.cybernode.ai";var h=s(25108);var m=class{constructor(){this.nodeType="external",this._config={},this._isStarted=!1}get config(){return this._config}get isStarted(){return this._isStarted}async initConfig(){const t=await this.node.config.get("Addresses.Gateway");if(!t)return{gatewayUrl:p};const e=(0,r.HM)(t).nodeAddress();return{gatewayUrl:`http://${e.address}:${e.port}`}}async init(t){this.node=(0,a.Ue)(t),this._config=await this.initConfig(),"undefined"!=typeof window&&(window.node=this.node,window.toCid=o),h.log("IPFS - Kubo addrs",(await this.node.swarm.localAddrs()).map((t=>t.toString()))),this._isStarted=!0}async stat(t,e={}){return this.node.files.stat(c(t),{...e,withLocal:!0,size:!0}).then((t=>{const{type:e,size:s,sizeLocal:n,local:a,blocks:r}=t;return{type:e,size:s||-1,sizeLocal:n||-1,blocks:r}}))}cat(t,e={}){return this.node.cat(o(t),e)}async add(t,e={}){return(await this.node.add(t,e)).cid.toString()}async pin(t,e={}){return(await this.node.pin.add(o(t),e)).toString()}async getPeers(){return(await this.node.swarm.peers()).map((t=>t.peer.toString()))}async stop(){}async start(){}async connectPeer(t){const e=(0,r.HM)(t);return await this.node.bootstrap.add(e),await this.node.swarm.connect(e),!0}ls(){return this.node.pin.ls()}async info(){const{repoSize:t}=await this.node.stats.repo(),e=await this.node.id(),{agentVersion:s,id:n}=e;return{id:n.toString(),agentVersion:s,repoSize:t}}},g=s(21771),y=s(33634),f=s(55472),b=s(63718),w=s(99644),S=s(79071),$=s(69850),v=s(53184),x=s(44913),C=s(46177),_=s(57392),A=s(15624),P=s(35092),T=s(25108);const k={cidVersion:0,rawLeaves:!1};var I=class{constructor(){this.nodeType="helia",this._isStarted=!1}get config(){return{gatewayUrl:p}}get isStarted(){return this._isStarted}async init(){const t=new y.Y("helia-bs");await t.open();const e=new f.s("helia-ds");await e.open();const s=await(async(t,e=[])=>await(0,b.N)({datastore:t,transports:[(0,_.E)(),(0,A.d)(),(0,C.Z)({rtcConfiguration:{iceServers:[{urls:["stun:stun.l.google.com:19302","stun:global.stun.twilio.com:3478","STUN:freestun.net:3479","STUN:stun.bernardoprovenzano.net:3478","STUN:stun.aa.net.uk:3478"]},{credential:"free",username:"free",urls:["TURN:freestun.net:3479","TURNS:freestun.net:5350"]}]}}),(0,C.R)(),(0,$.f)({discoverRelays:1})],connectionEncryption:[(0,w.t)()],streamMuxers:[(0,S.P)()],connectionGater:{denyDialMultiaddr:()=>!1},peerDiscovery:[(0,x.U)({list:e})],services:{identify:(0,P.HA)()}}))(e,["/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN","/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa","/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb","/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt","/dns4/swarm.io.cybernode.ai/tcp/443/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB"]);this.node=await(0,g.F)({blockstore:t,datastore:e,libp2p:s}),this.fs=(0,v.Y4)(this.node),"undefined"!=typeof window&&(window.libp2p=s,window.node=this.node,window.fs=this.fs,window.toCid=o),s.addEventListener("peer:connect",(t=>{const e=t.detail.toString(),n=s.getConnections(e)||[],a=Object.fromEntries(n.map((t=>[t.remoteAddr.toString(),t.remoteAddr.protoCodes().map((t=>(0,r.a_)(t)?.name))])));T.debug(`Connected to ${e}`,a)})),s.addEventListener("peer:disconnect",(t=>{T.debug(`Disconnected from ${t.detail.toString()}`)})),T.log("IPFS - Helia addrs",s.getMultiaddrs().map((t=>t.toString()))),this._isStarted=!0}async stat(t,e={}){return this.fs.stat(o(t),e).then((t=>{const{type:e,fileSize:s,localFileSize:n,blocks:a,dagSize:r,mtime:i}=t;return{type:e,size:s||-1,sizeLocal:n||-1,blocks:a}}))}cat(t,e={}){return this.fs.cat(o(t),e)}async add(t,e={}){const s={...e,...k};let n;if(t instanceof File){const e=t.name,a=await t.arrayBuffer(),r=new Uint8Array(a);n=await this.fs.addFile({path:e,content:r},s)}else{const e=(new TextEncoder).encode(t);n=await this.fs.addBytes(e,s)}return this.pin(n.toString(),e),n.toString()}async pin(t,e={}){const s=o(t);if(!await(this.node?.pins.isPinned(s,e))){(await(this.node?.pins.add(s,e)))?.cid.toString()}}async getPeers(){return this.node.libp2p.getConnections().map((t=>t.remotePeer.toString()))}async stop(){await(this.node?.stop())}async start(){await(this.node?.start())}async connectPeer(t){await this.node.libp2p.dial((0,r.HM)(t));return!0}ls(){const t=async function*(t){for await(const e of t){const{cid:t,metadata:s}=e;yield{cid:t.toV0(),metadata:s,type:"recursive"}}}(this.node.pins.ls());return t}async info(){return{id:this.node.libp2p.peerId.toString(),agentVersion:this.node.libp2p.services.identify.host.agentVersion,repoSize:-1}}},E=s(27864),M=s(38134);var R=()=>({start:!0,repo:"ipfs-repo-cyber-v2",relay:{enabled:!1,hop:{enabled:!1}},preload:{enabled:!1},config:{API:{HTTPHeaders:{"Access-Control-Allow-Methods":["PUT","POST"],"Access-Control-Allow-Origin":["http://localhost:3000","http://127.0.0.1:5001","http://127.0.0.1:8888","http://localhost:8888"]}},Addresses:{Gateway:"/ip4/127.0.0.1/tcp/8080",Swarm:[],Delegates:[]},Discovery:{MDNS:{Enabled:!0,Interval:10},webRTCStar:{Enabled:!1}},Bootstrap:[],Pubsub:{Enabled:!1},Swarm:{ConnMgr:{HighWater:300,LowWater:50},DisableNatPortMap:!1},Routing:{Type:"dhtclient"}},libp2p:{transports:[(0,_.E)({filter:M.FR})],nat:{enabled:!1}},EXPERIMENTAL:{ipnsPubsub:!1}});var q=class{constructor(){this.nodeType="embedded",this._isStarted=!1}get config(){return{gatewayUrl:p}}get isStarted(){return this._isStarted}async init(){this.node=await(0,E.Ue)(R()),"undefined"!=typeof window&&(window.node=this.node,window.toCid=o),this._isStarted=!0}async stat(t,e={}){return this.node.files.stat(c(t),{...e,withLocal:!0,size:!0}).then((t=>{const{type:e,size:s,sizeLocal:n,local:a,blocks:r}=t;return{type:e,size:s||-1,sizeLocal:n||-1,blocks:r}}))}cat(t,e={}){return this.node.cat(o(t),e)}async add(t,e={}){return(await this.node.add(t,e)).cid.toString()}async pin(t,e={}){return(await this.node.pin.add(o(t),e)).toString()}async getPeers(){return(await this.node.swarm.peers()).map((t=>t.peer.toString()))}async stop(){}async start(){}async connectPeer(t){const e=(0,r.HM)(t);return await this.node.bootstrap.add(e),await this.node.swarm.connect(e),!0}ls(){return this.node.pin.ls()}async info(){const t=await this.node.stats.repo(),e=Number(t.repoSize),s=await this.node.id(),{agentVersion:n,id:a}=s;return{id:a.toString(),agentVersion:n,repoSize:e}}},O=s(49784),U=s(41487),z=s.n(U),D=(t=>(t.BOSTROM="bostrom",t.SPACE_PUSSY="space-pussy",t.ETH="eth",t.OSMO="osmo",t.TERRA="terra",t.COSMOS="cosmoshub-4",t))(D||{});var L={bostrom:{CHAIN_ID:D.BOSTROM,BASE_DENOM:"boot",DENOM_LIQUID:"hydrogen",RPC_URL:"https://rpc.bostrom.cybernode.ai",LCD_URL:"https://lcd.bostrom.cybernode.ai",WEBSOCKET_URL:"wss://rpc.bostrom.cybernode.ai/websocket",INDEX_HTTPS:"https://index.bostrom.cybernode.ai/v1/graphql",INDEX_WEBSOCKET:"wss://index.bostrom.cybernode.ai/v1/graphql",BECH32_PREFIX:"bostrom",MEMO_KEPLR:"[bostrom] cyb.ai, using keplr"},"space-pussy":{CHAIN_ID:D.SPACE_PUSSY,BASE_DENOM:"pussy",DENOM_LIQUID:"liquidpussy",RPC_URL:"https://rpc.space-pussy.cybernode.ai/",LCD_URL:"https://lcd.space-pussy.cybernode.ai",WEBSOCKET_URL:"wss://rpc.space-pussy.cybernode.ai/websocket",INDEX_HTTPS:"https://index.space-pussy.cybernode.ai/v1/graphql",INDEX_WEBSOCKET:"wss://index.space-pussy.cybernode.ai/v1/graphql",BECH32_PREFIX:"pussy",MEMO_KEPLR:"[space-pussy] cyb.ai, using keplr"}};const N=D.BOSTROM,B=L[N].LCD_URL,F=(L[N].RPC_URL,L[N].WEBSOCKET_URL),j=L[N].INDEX_HTTPS,H=L[N].INDEX_WEBSOCKET,Q=L[N].BECH32_PREFIX,W=`${Q}val`,G=`${W}oper`,{MEMO_KEPLR:Z}=(L[N].BASE_DENOM,L[N].DENOM_LIQUID,L[N]),X=new RegExp(`^${Q}[a-zA-Z0-9]{39}$`,"g"),K=/^Qm[a-zA-Z0-9]{44}$/g,V=(new RegExp(`^${Q}[a-zA-Z0-9]{59}$`,"g"),new RegExp(`^${G}valoper[a-zA-Z0-9]{39}$`,"g"),/^https:\/\/|^http:\/\//g);var J=s(50145),Y=s(41690),tt=s(25108);const et=async t=>{if(!t)return"unknown";const e=await(0,J.pM)(t);return e?.mime||"text/plain"};var st=s(23085).lW,nt=s(25108);function at(t,e){return`data:${e};base64,${(0,O.B)(t,"base64")}`}const rt=/\s?<!doctype html>|(<html\b[^>]*>|<body\b[^>]*>|<x-[^>]+>)+/i;const it=async(t,e,s)=>{try{const n=t?.meta?.mime,a={link:`/ipfs/${e}`,gateway:!1,cid:e},r=(t=>{if(t){if(t.includes("video"))return"video";if(t.includes("audio"))return"audio"}return"other"})(n);if(["video","audio"].indexOf(r)>-1)return{...a,type:r,gateway:!0};const i=t?.result?await(async(t,e)=>{let s=0;try{if(t instanceof Uint8Array)return e&&e(t.byteLength),t;const n=[];if(t instanceof ReadableStream){const a=t.getReader(),r=async({done:t,value:i})=>t?(0,Y.z)(n):(n.push(i),s+=i.byteLength,e&&e(s),a.read().then(r));return await a.read().then(r)}if(Symbol.asyncIterator in t){const a=t[Symbol.asyncIterator]();for await(const t of a)t instanceof Uint8Array&&(n.push(t),s+=t.byteLength,e&&e(s));return(0,Y.z)(n)}return}catch(t){return void tt.error("Error reading stream/iterable.\r\n Probably Hot reload error!",t)}})(t.result,s):void 0;if(n)if(-1!==n.indexOf("text/plain")||-1!==n.indexOf("application/xml"))if(z()(st.from(i)))a.type="image",a.content=at(i,"image/svg+xml");else{const t=(0,O.B)(i);a.link=t.length>42?`/ipfs/${e}`:`/search/${t}`,t.match(K)?(a.gateway=!0,a.type="other",a.content=t,a.link=`/ipfs/${e}`):t.match(V)?(a.type="link",a.gateway=!1,a.content=t,a.link=`/ipfs/${e}`):!function(t){const e=t.trim().slice(0,1e3);return rt.test(e)}(t)?(a.type="text",a.content=t,a.text=function(t,e=300){return t.length>e?`${t.slice(0,e)}...`:t}(t)):(a.type="other",a.gateway=!0,a.content=e.toString())}else-1!==n.indexOf("image")?(a.content=at(i,n),a.type="image",a.gateway=!1):-1!==n.indexOf("application/pdf")&&(a.type="pdf",a.content=function(t,e){const s=new Blob([t],{type:e});return URL.createObjectURL(s)}(i,n),a.gateway=!0);else a.text=`Can't detect MIME for ${e.toString()}`,a.gateway=!0;return a}catch(t){return void nt.log("----parseRawIpfsData",t,e)}},ot=(t,e,s=150)=>t&&e&&"text/plain"===e?(0,O.B)(t).slice(0,s):void 0;const ct=new(s(39387).ZP)("cyber-page-cash");ct.version(3).stores({cid:"cid",following:"cid"});var ut=ct;var dt={add:async(t,e)=>{if(!await ut.table("cid").get({cid:t})){const s={cid:t,data:e};ut.table("cid").add(s)}},get:async t=>{const e=await ut.table("cid").get({cid:t});return e?.data||e?.content}},lt=s(86107);var pt=(()=>{const t=new lt.vu("https://io.cybernode.ai");return{add:async e=>{const s="string"==typeof e?new File([e],"file.txt"):e;return t.add(s,{cidVersion:0,rawLeaves:!1})},status:async e=>t.status(e)}})(),ht=s(25108);const mt=async t=>{const e=await dt.get(t);if(e&&e.length){const s=await et(e),n=ot(e,s);return{result:e,cid:t,meta:{type:"file",size:e.length,sizeLocal:e.length,mime:s},source:"db",textPreview:n}}},gt={type:"file",size:void 0,local:void 0,sizeLocal:void 0},yt=async(t,e,s)=>{if(e){return await e.stat(t,{signal:s})}return gt},ft=async(t,e,s)=>{const n=s||new AbortController,{signal:a}=n;let r;if(e){s||(r=setTimeout((()=>{n.abort()}),6e4));try{const s=Date.now(),n=await yt(t,e,a),i=Date.now();n.statsTime=i-s;const o=!!n.size&&n.size<2e7;if(r&&clearTimeout(r),"directory"===n.type)return{cid:t,availableDownload:!0,source:"node",meta:n};{const{value:s}=await e.cat(t,{signal:a,length:2048,offset:0})[Symbol.asyncIterator]().next(),r=await et(s),c=n.size&&n.size>-1&&s.length>=n.size,u=ot(s,r);c&&await dt.add(t,(0,Y.z)([s]));const d=c?s:o?e.cat(t,{signal:a}):void 0;return n.catTime=Date.now()-i,!n.local&&o?(e.pin(t),n.pinTime=Date.now()-n.catTime):n.pinTime=-1,{result:d,textPreview:u,cid:t,meta:{...n,mime:r},source:"node"}}}catch(e){return ht.debug("error fetchIPFSContentFromNode",e),{cid:t,availableDownload:!0,source:"node",meta:gt}}}else ht.log("--------fetchIPFSContentFromNode NO NODE INTIALIZED--------")},bt=async(t,e,s,n)=>{const a="external"===e?.nodeType,r=a?await yt(t,e,s?.signal):gt,i=`${p}/ipfs/${t}`,o=await fetch(i,{method:"GET",signal:s?.signal,headers:n});if(o&&o.body){const e=e=>a?Promise.resolve():dt.add(t,(0,Y.z)(e)),{mime:s,result:n,firstChunk:c}=await async function(t,e){const[s,n]=t.tee(),a=[],r=s.getReader(),{value:i}=await r.read(),o=i?await et(i):void 0,c=n.getReader(),u={async*[Symbol.asyncIterator](){for(;;){const{done:t,value:s}=await c.read();if(t)return void(e&&e(a,o));e&&a.push(s),yield s}}};return{mime:o,result:u,firstChunk:i}}(o.body,e),u=ot(c,s);return{cid:t,textPreview:u,meta:{...r,mime:s},result:n,source:"gateway",contentUrl:i}}};const wt=async(t,e,s,n)=>{const a=await mt(t);if(void 0!==a)return a;if(e){n&&n("trying to get with a node");return await ft(t,e,s)}n&&n("trying to get with a gatway");return await bt(t,e,s)},St=async(t,e)=>{let s;return t&&(s=await t.add(e)),pt.add(e),s&&await dt.add(s,await(async t=>new Uint8Array("string"==typeof t?st.from(t):await t.arrayBuffer()))(e)),s};var $t=s(25108);const vt={helia:I,embedded:q,external:m};async function xt(t){const{ipfsNodeType:e,...s}=t,n=function(t,e){return class extends t{async fetchWithDetails(t,e){const s=await wt(t,this),n=await it(s,t);return e?n?.type===e?n:void 0:n}async addContent(t){return St(this,t)}async isConnectedToSwarm(){return!!(await super.getPeers()).find((t=>t===e.swarmPeerId))}async reconnectToSwarm(t){await this.isConnectedToSwarm()||super.connectPeer(e.swarmPeerAddress).then((()=>($t.log(`🐝 connected to swarm - ${e.swarmPeerAddress}`),!0))).catch((t=>($t.log(`Can't connect to swarm ${e.swarmPeerAddress}: ${t.message}`),!1)))}}}(vt[e],{swarmPeerId:u,swarmPeerAddress:"external"===e?l:d}),a=new n;return await a.init({url:s.urlOpts}),await a.reconnectToSwarm(),a}var Ct=s(86515),_t=s(16697),At=s(94975),Pt=s(42965),Tt=s(29127),kt=s(87877),It=s(23071),Et=s(1545),Mt=s(25211),Rt=s(28368),qt=s(79878),Ot=s(32817),Ut=s(90183),zt=s(81480),Dt=s(25108);class Lt{constructor(t,e){this.settings=t,this.order=e}getNextSource(t){const e=this.order.indexOf(t);return e<this.order.length?this.order[e+1]:void 0}}var Nt=s(29829),Bt=s(22222);function Ft(t){return Boolean(t.match(/^Qm[a-zA-Z0-9]{44}$/g))}var jt=(t=>(t[t.transactions=1]="transactions",t[t.particle=2]="particle",t[t.chat=3]="chat",t))(jt||{}),Ht=(t=>(t[t.pending=0]="pending",t[t.executing=1]="executing",t[t.done=2]="done",t[t.error=-1]="error",t))(Ht||{}),Qt=s(25108);const Wt={list:{isLoading:!1,data:[],error:void 0},chats:{},summary:{unreadCount:{total:0,particles:0,neurons:0}}};function Gt(t){t.entryType===jt.chat&&t.meta.to&&(t.entryType=jt.particle);const{meta:e}=t,s={timestamp:new Date(e.timestamp).toISOString(),transactionHash:t.transactionHash||t.hash||t.meta.transaction_hash||t.meta.hash||t.meta.transactionHash,memo:t.memo||e.memo,senseChatId:t.id,unreadCount:t.unreadCount||0};switch(t.entryType){case jt.chat:case jt.transactions:{const e=t.meta,{type:n}=e;let a=t.ownerId;if("cosmos.bank.v1beta1.MsgSend"===n){a=e.value.fromAddress}else if("cosmos.bank.v1beta1.MsgMultiSend"===n){a=e.value.inputs[0].address}Object.assign(s,{type:n,from:a,meta:t.meta.value});break}case jt.particle:{const e=t.meta;Object.assign(s,{type:"cyber.graph.v1beta1.MsgCyberlink",from:e.neuron,meta:e,fromLog:!0});break}default:return{}}return s}const Zt=(0,Nt.hg)("sense/getSenseList",(async t=>(await t.getList()).map(Gt))),Xt=(0,Nt.hg)("sense/getSenseChat",(async({id:t,senseApi:e})=>{if(Ft(t)){return(await e.getLinks(t)).map((e=>{if(0!==e.timestamp)return Gt({...e,id:t,entryType:jt.particle,meta:e})})).filter(Boolean)}return(await e.getFriendItems(t)).map((e=>{const s=e.to?jt.particle:jt.chat;return Gt({...e,entryType:s,id:t,meta:e})}))})),Kt=(0,Nt.hg)("sense/markAsRead",(async({id:t,senseApi:e})=>e.markAsRead(t))),Vt={id:"",isLoading:!1,data:[],error:void 0,unreadCount:0};function Jt(t,e){return t.data.slice(-5).some((t=>t.transactionHash===e.transactionHash))}const Yt=(0,Nt.oM)({name:"sense",initialState:Wt,reducers:{updateSenseList:{reducer:(t,e)=>{e.payload.forEach((e=>{const{senseChatId:s}=e;t.chats[s]||(t.chats[s]={...Vt});const n=t.chats[s];Object.assign(n,{id:s,unreadCount:e.unreadCount||0}),Jt(n,e)||(n.data=n.data.concat(e))})),Yt.caseReducers.orderSenseList(t)},prepare:t=>({payload:t.map(Gt)})},addSenseItem(t,e){const{id:s,item:n}=e.payload;t.chats[s].data.push({...n,meta:n.meta,status:"pending"});const a=t.list.data.filter((t=>t!==s));a.unshift(s),t.list.data=a},updateSenseItem(t,e){const{chatId:s,txHash:n,isSuccess:a}=e.payload,r=t.chats[s].data.find((t=>t.transactionHash===n));r&&(a?delete r.status:r.status="error")},orderSenseList(t){const e=Object.keys(t.chats).reduce(((e,s)=>{const n=t.chats[s];if(!n.data.length)return e;const a=n.data[n.data.length-1];return e.push({id:s,lastMsg:a}),e}),[]).sort(((t,e)=>Date.parse(e.lastMsg.timestamp)-Date.parse(t.lastMsg.timestamp)));t.list.data=e.map((t=>t.id))},reset:()=>Wt},extraReducers:t=>{t.addCase(Zt.pending,(t=>{t.list.isLoading=!0})),t.addCase(Zt.fulfilled,((t,e)=>{t.list.isLoading=!1;const s=[];e.payload.forEach((e=>{const{senseChatId:n}=e;t.chats[n]||(t.chats[n]={...Vt});const a=t.chats[n];Object.assign(a,{id:n,unreadCount:e.unreadCount||0}),Jt(a,e)||(a.data=a.data.concat(e)),s.push(n)})),t.list.data=s})),t.addCase(Zt.rejected,((t,e)=>{Qt.error(e),t.list.isLoading=!1,t.list.error=e.error.message})),t.addCase(Xt.pending,((t,e)=>{const{id:s}=e.meta.arg;t.chats[s]||(t.chats[s]={...Vt}),t.chats[s].isLoading=!0})),t.addCase(Xt.fulfilled,((t,e)=>{const{id:s}=e.meta.arg,n=t.chats[s];n.isLoading=!1,n.id=s,n.data=e.payload})),t.addCase(Xt.rejected,((t,e)=>{Qt.error(e);const s=t.chats[e.meta.arg.id];s.isLoading=!1,s.error=e.error.message})),t.addCase(Kt.fulfilled,((t,e)=>{const{id:s}=e.meta.arg,n=t.chats[s],a=Ft(s),{unreadCount:r}=n;t.summary.unreadCount.total-=r,a?t.summary.unreadCount.particles-=r:t.summary.unreadCount.neurons-=r,n.unreadCount=0}))}}),{addSenseItem:te,updateSenseItem:ee,updateSenseList:se,reset:ne}=((0,Bt.P1)((t=>t.sense.chats),(t=>{let e=0,s=0;Object.values(t).forEach((({id:t,unreadCount:n})=>{Ft(t)?e+=n:s+=n}));return{total:e+s,particles:e,neurons:s}})),Yt.actions);Yt.reducer;const ae={POCKET:"pocket",POCKET_ACCOUNT:"pocketAccount"},re={actionBar:{tweet:"tweet"},defaultAccount:{name:null,account:null},accounts:null};function ie(t){const{defaultAccount:e,accounts:s}=t;e&&localStorage.setItem(ae.POCKET,JSON.stringify({[e.name]:e.account})),s&&localStorage.setItem(ae.POCKET_ACCOUNT,JSON.stringify(s))}const oe=(0,Nt.oM)({name:"pocket",initialState:re,reducers:{setDefaultAccount:(t,{payload:{name:e,account:s}})=>{t.defaultAccount={name:e,account:s||t.accounts?.[e]||null},ie(t)},setAccounts:(t,{payload:e})=>{t.accounts=e,ie(t)},setStageTweetActionBar:(t,{payload:e})=>{t.actionBar.tweet=e},deleteAddress:(t,{payload:e})=>{t.accounts&&Object.keys(t.accounts).forEach((s=>{Object.keys(t.accounts[s]).forEach((n=>{if(t.accounts[s][n].bech32===e){if(delete t.accounts[s][n],0===Object.keys(t.accounts[s]).length&&delete t.accounts[s],t.defaultAccount?.account?.cyber?.bech32===e){const e=Object.entries(t.accounts).find((([,t])=>t.cyber?.bech32));t.defaultAccount=e?{name:e[0],account:e[1]}:{name:null,account:null}}ie(t)}}))}))}}}),{setDefaultAccount:ce,setAccounts:ue,setStageTweetActionBar:de,deleteAddress:le}=oe.actions;oe.reducer;var pe=class{constructor(){this.channel=new BroadcastChannel("cyb-broadcast-channel")}postServiceStatus(t,e,s){this.channel.postMessage({type:"service_status",value:{name:t,status:e,message:s}})}postSyncEntryProgress(t,e){this.channel.postMessage({type:"sync_entry",value:{entry:t,state:e}})}postSenseUpdate(t){t.length>0&&this.channel.postMessage(se(t))}postSetDefaultAccount(t,e){this.channel.postMessage(ce({name:t,account:e}))}post(t){this.channel.postMessage(t)}};class he extends Error{constructor(t){super(`Timeout after ${t}`),Object.setPrototypeOf(this,he.prototype)}}const me="X-Cyb-Source";var ge=(t=>(t.sharedWorker="shared-worker",t))(ge||{}),ye=s(25108);function fe(t){return(t.priority||0)+(t.viewPortPriority||0)}const be={external:new Lt({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e4,maxConcurrentExecutions:50},gateway:{timeout:21e3,maxConcurrentExecutions:11}},["db","node","gateway"]),embedded:new Lt({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e4,maxConcurrentExecutions:50},gateway:{timeout:21e3,maxConcurrentExecutions:11}},["db","gateway","node"]),helia:new Lt({db:{timeout:5e3,maxConcurrentExecutions:999},node:{timeout:6e3,maxConcurrentExecutions:50},gateway:{timeout:3e3,maxConcurrentExecutions:11}},["db","node","gateway"])};var we=class{constructor(t,{strategy:e,queueDebounceMs:s,defferedDbSaver:n}){this.queue$=new Ct.X(new Map),this.node=void 0,this.lastNodeCallTime=Date.now(),this.channel=new pe,this.executing={db:new Set,node:new Set,gateway:new Set},t.subscribe((t=>{t&&this.setNode(t)})),this.strategy=e||be.embedded,this.queueDebounceMs=s||33,this.defferedDbSaver=n,(0,_t.F)(5e3).pipe((0,At.h)((()=>this.queue$.value.size>0&&!!this.node))).subscribe((()=>this.node.reconnectToSwarm(this.lastNodeCallTime))),this.queue$.pipe((0,Pt.b)(this.queueDebounceMs),(0,Tt.U)((t=>this.cancelDeprioritizedItems(t))),(0,kt.z)((t=>{const e=this.getItemBySourceAndPriority(t);return e.length>0?(this.node?.reconnectToSwarm(this.lastNodeCallTime),(0,It.T)(...e.map((t=>this.fetchData$(t))))):Et.E}))).subscribe((({item:t,status:e,source:s,result:n})=>{const{cid:a}=t,r=this.queue$.value.get(a)?.callbacks||[];if(r.map((t=>t(a,e,s,n))),"node"===s&&(this.lastNodeCallTime=Date.now()),this.executing[s].delete(a),"completed"===e||"cancelled"===e)this.removeAndNext(a);else{const e=this.strategy.getNextSource(s);e?this.switchSourceAndNext(t,e):(this.removeAndNext(a),r.map((t=>t(a,"not_found",s,n))))}this.postSummary()}))}switchStrategy(t){this.strategy=t}async setNode(t,e){ye.log(`switch node from ${this.node?.nodeType} to ${t.nodeType}`),this.node=t,this.switchStrategy(e||be[t.nodeType])}getItemBySourceAndPriority(t){const e=[...t.values()].filter((t=>"pending"===t.status)),s=Ut.vMG((t=>t.source),e),n=[];for(const[t,e]of Object.entries(s)){const s=this.strategy.settings[t].maxConcurrentExecutions-this.executing[t].size,a=e.sort(((t,e)=>fe(e)-fe(t))).slice(0,s);n.push(...a)}return n}postSummary(){const t=`(total: ${this.queue$.value.size} |  db - ${this.executing.db.size} node - ${this.executing.node.size} gateway - ${this.executing.gateway.size})`;this.channel.postServiceStatus("ipfs","started",t)}fetchData$(t){const{cid:e,source:s,callbacks:n,controller:a}=t,r=this.strategy.settings[s];this.executing[s].add(e),this.postSummary();const i=this.queue$.value.get(e);return this.queue$.value.set(e,{...i,status:"executing",executionTime:Date.now(),controller:new AbortController}),n.map((t=>t(e,"executing",s))),(o=async()=>{try{const t=await async function(t,e,s){const{node:n,controller:a,headers:r}=s;try{switch(e){case"db":return mt(t);case"node":return ft(t,n,a);case"gateway":return bt(t,n,a,r);default:return}}catch(t){return void ht.log("----fetchIpfsContent error",t)}}(e,s,{controller:a,node:this.node,headers:{[me]:ge.sharedWorker}}).then((t=>(this.defferedDbSaver?.enqueueIpfsContent(t),t)));return t}catch(t){throw t}},new zt.y((t=>{o().then((e=>{t.next(e),t.complete()})).catch((e=>{Dt.debug("----promiseToObservable error",e),t.error(e)}))}))).pipe((0,Mt.V)({each:r.timeout,with:()=>(0,Rt._)((()=>(a?.abort("timeout"),new he(r.timeout))))}),(0,Tt.U)((e=>({item:t,status:e?"completed":"error",source:s,result:e}))),(0,qt.K)((e=>e instanceof he?(0,Ot.of)({item:t,status:"timeout",source:s}):"AbortError"===e?.name?(0,Ot.of)({item:t,status:"cancelled",source:s}):(0,Ot.of)({item:t,status:"error",source:s}))));var o}mutateQueueItem(t,e){const s=this.queue$.value,n=s.get(t);return n&&s.set(t,{...n,...e}),this.queue$.next(s)}removeAndNext(t){const e=this.queue$.value;e.delete(t),this.queue$.next(e)}switchSourceAndNext(t,e){t.callbacks.map((s=>s(t.cid,"pending",e))),this.mutateQueueItem(t.cid,{status:"pending",source:e})}cancelDeprioritizedItems(t){return["node","gateway"].forEach((e=>{Array.from(this.executing[e]).forEach((s=>{const n=t.get(s);n&&fe(n)<0&&n.controller&&(n.controller.abort("cancelled"),n.callbacks.map((t=>t(n.cid,"pending",n.source))),t.set(s,{...n,status:"pending"}),this.executing[e].delete(s))}))})),t}releaseExecution(t){Object.keys(this.executing).forEach((e=>this.executing[e].delete(t)))}enqueue(t,e,s={}){const n=this.queue$.value,a=n.get(t);if(a)this.mutateQueueItem(t,{callbacks:[...a.callbacks,e]});else{const a=s.initialSource||this.strategy.order[0],r={cid:t,callbacks:[e],source:a,status:"pending",postProcessing:!0,...s};e(t,"pending",a),n.set(t,r),this.queue$.next(n)}}enqueueAndWait(t,e={}){return new Promise((s=>{this.enqueue(t,((t,e,n,a)=>{"completed"!==e&&"not_found"!==e||s({status:e,source:n,result:a})}),e)}))}updateViewPortPriority(t,e){this.mutateQueueItem(t,{viewPortPriority:e})}cancel(t){const e=this.queue$.value.get(t);e&&(e.controller?e.controller.abort("cancelled"):this.removeAndNext(t))}cancelByParent(t){const e=this.queue$.value;e.forEach(((s,n)=>{s.parent===t&&(this.releaseExecution(n),s.controller?.abort("cancelled"),e.delete(n))})),this.queue$.next(e)}clear(){const t=this.queue$.value;t.forEach(((e,s)=>{this.releaseExecution(s),e.controller?.abort("cancelled"),t.delete(s)})),this.queue$.next(new Map)}getQueueMap(){return this.queue$.value}getQueueList(){return Array.from(this.queue$.value.values())}getStats(){return Ut.zGw(Ut.VFc(Ut.vgT("status")),Ut.Zpf,Ut.UID(Ut._Qy(["status","count"])))(this.getQueueList())}},Se=(t=>(t[t.ZERO=0]="ZERO",t[t.LOW=.1]="LOW",t[t.MEDIUM=.5]="MEDIUM",t[t.HIGH=.9]="HIGH",t[t.URGENT=1]="URGENT",t))(Se||{}),$e=s(12550);function ve(t){return{async*[Symbol.asyncIterator](){let e=!1;for(;!e;){const s=new Promise((s=>{t.onmessage=t=>{null===t.data?(e=!0,s(null)):s(t.data)}})),n=await s;null!==n&&(yield n)}}}}const xe={canHandle:t=>t&&t.result&&"function"==typeof t.result[Symbol.asyncIterator],serialize(t){if(void 0===t)return[null,[]];const{result:e,...s}=t,{port1:n,port2:a}=new MessageChannel;return e&&(async()=>{for await(const t of e)n.postMessage(t);n.postMessage(null),n.close()})(),[{...s,port:a},[a]]},deserialize(t){if(!t)return;const{port:e,...s}=t;return{...s,result:ve(e)}}};var Ce=s(34155),_e=s(25108);"undefined"!=typeof SharedWorker&&Ce.env.IS_DEV;function Ae(){n.Y6.set("IPFSContent",xe)}function Pe(t){const e={log:{original:_e.log},error:{original:_e.error},warn:{original:_e.warn}},s=s=>{const{original:n}=e[s];e[s].original=_e[s],_e[s]=(...e)=>{n.apply(_e,e);const a=e.map((t=>function(t){try{return JSON.stringify(t)}catch(e){return String(t)}}(t)));t.postMessage({type:"console",method:s,args:a})}};Object.keys(e).forEach((t=>s(t)))}var Te=s(97255),ke=s(42006),Ie=s(65583);const Ee=(t,e)=>({sendStatus:(s,n,a)=>{e.postSyncEntryProgress(t,{status:s,message:n,progress:a,done:["active","error","listen"].some((t=>t===s))})}});async function Me(t,e,s=10){let n=[];for await(const a of t)n.push(a),n.length===s&&(await e(n),n=[]);n.length>0&&await e(n)}async function*Re(t,e){let s=0;for(;;){const n=await t({...e,offset:s});if(0===n.length)break;yield n,s+=n.length}}const qe="QmbdH2WBamyKLPE5zu4mJ9v49qvY8BFfoumoVPMR5V4Rvx",Oe="QmPLSA5oPqYxgc8F7EwrM8WS9vKrr1zPoDniSRFh8HSrxx",Ue=[qe,Oe];var ze=s(25108);var De=class{constructor(t){if(this.statusApi=Ee("resolver",new pe),this._syncQueue$=new Ct.X(new Map),!t.waitForParticleResolve)throw new Error("waitForParticleResolve is not defined");this.waitForParticleResolve=t.waitForParticleResolve,t.dbInstance$.subscribe((async t=>{this.db=t,await this.loadSyncQueue()})),this.isInitialized$=(0,Te.a)([t.dbInstance$,t.ipfsInstance$]).pipe((0,Tt.U)((([t,e])=>!!e&&!!t)))}get queue(){return this._syncQueue$.getValue()}get loop$(){return this._loop$}async processSyncQueue(t){const e=t.length;this.statusApi.sendStatus("in-progress",`processing batch ${e}/${e} batch. ${this.queue.size} pending...`);let s=e;await Promise.all(t.map((async t=>{const{id:n}=t;return this.waitForParticleResolve(n,Se.MEDIUM).then((async t=>{"not_found"===t.status?await this.db.updateSyncQueue({id:n,status:Ht.error}):await this.db.removeSyncQueue(n);const a=this._syncQueue$.value;a.delete(n),s--,this._syncQueue$.next(a),this.statusApi.sendStatus("in-progress",`processing batch ${e-s}/${e} batch. ${this.queue.size} pending...`)}))})))}start(){const t=this.isInitialized$.pipe((0,ke.b)((t=>ze.log(`sync queue isInitialized - ${t}`))),(0,At.h)((t=>!0===t)),(0,kt.z)((()=>this._syncQueue$)),(0,At.h)((t=>t.size>0)),(0,kt.z)((t=>{const e=[...t.values()],s=100-e.filter((t=>t.status===Ht.executing)).length;if(s>0){const n=e.filter((t=>t.status===Ht.pending)).sort(((t,e)=>t.priority-e.priority)).slice(0,s);if(n.length>0)return n.forEach((e=>{t.set(e.id,{...e,status:Ht.executing})})),this._syncQueue$.next(t),this.statusApi.sendStatus("in-progress","starting..."),this.processSyncQueue(n)}return Et.E})));return this._loop$=t.pipe((0,Ie.B)()),this._loop$.subscribe({next:t=>{this.statusApi.sendStatus("active")},error:t=>this.statusApi.sendStatus("error",t.toString())}),this}async fetchDirect(t){return this.waitForParticleResolve(t,Se.URGENT)}async enqueueBatch(t,e){return Me(t,(t=>this.enqueue(t.map((t=>({id:t,priority:e}))))),500)}async enqueue(t){if(0===t.length)return;await this.db.putSyncQueue(t);const e=this._syncQueue$.value;t.forEach((t=>e.set(t.id,{...t,status:Ht.pending}))),this._syncQueue$.next(e)}async loadSyncQueue(){const t=await this.db.getSyncQueue({statuses:[Ht.pending]}).then((t=>new Map(t.map((t=>[t.id,t])))));this._syncQueue$.next(new Map([...t,...this.queue]))}},Le=s(98431),Ne=s(19917),Be=s(11954),Fe=s(96486),je=s(48116),He=s.n(je);const Qe=t=>He()(new Date(t),'yyyy-mm-dd"T"HH:MM:ss.l',!0),We=t=>Date.parse(t.endsWith("Z")?t:`${t}Z`);const Ge=(t,e)=>{const{transaction_hash:s,index:n,transaction:{memo:a,block:{timestamp:r,height:i},success:o},type:c,value:u}=e;return{hash:s,index:n,type:c,timestamp:We(r),memo:a,value:u,success:o,neuron:t,blockHeight:i}},Ze=({from:t,to:e,neuron:s,timestamp:n,transaction_hash:a})=>({from:t,to:e,neuron:s,timestamp:We(n),transactionHash:a});function Xe(t,e){return async(...s)=>{if(e.aborted)throw new DOMException("The operation was aborted.","AbortError");return t(...s)}}var Ke=s(31230);var Ve=(t=>(t.Asc="asc",t.AscNullsFirst="asc_nulls_first",t.AscNullsLast="asc_nulls_last",t.Desc="desc",t.DescNullsFirst="desc_nulls_first",t.DescNullsLast="desc_nulls_last",t))(Ve||{});Ke.Ps`
    subscription Transactions {
  transaction(offset: 0, limit: 200, order_by: {height: desc}) {
    success
    messages
    height
    hash
  }
}
    `;Ke.Ps`
    query accountCount {
  account_aggregate {
    aggregate {
      count(columns: address)
    }
  }
}
    `;Ke.Ps`
    query blockByHeight($blockId: bigint) {
  block(where: {height: {_eq: $blockId}}) {
    hash
    height
    proposer_address
    timestamp
    transactions {
      messages
      hash
      height
      success
    }
  }
}
    `;Ke.Ps`
    query blocks($limit: Int, $offset: Int, $where: block_bool_exp) {
  block(where: $where, limit: $limit, offset: $offset, order_by: {height: desc}) {
    hash
    height
    proposer_address
    transactions_aggregate {
      aggregate {
        count
      }
    }
    timestamp
  }
}
    `;Ke.Ps`
    query contractsCount {
  contracts_aggregate {
    aggregate {
      count
    }
  }
}
    `;const Je=Ke.Ps`
    query CyberlinksByParticle($limit: Int, $offset: Int, $orderBy: [cyberlinks_order_by!], $where: cyberlinks_bool_exp) {
  cyberlinks(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    from: particle_from
    to: particle_to
    timestamp
    neuron
    transaction_hash
  }
}
    `;const Ye=Ke.Ps`
    query CyberlinksCountByNeuron($address: String, $particles_from: [String!], $timestamp: timestamp) {
  cyberlinks_aggregate(
    where: {_and: [{neuron: {_eq: $address}}, {particle_from: {_in: $particles_from}}, {timestamp: {_gt: $timestamp}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;Ke.Ps`
    query cyberlinksCountByParticle($cid: String, $where: cyberlinks_bool_exp) {
  cyberlinks_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;const ts=Ke.Ps`
    query MessagesByAddressCount($address: _text, $timestamp: timestamp) {
  messages_by_address_aggregate(
    args: {addresses: $address, limit: "100000000", offset: "0", types: "{}"}
    where: {transaction: {block: {timestamp: {_gt: $timestamp}}}}
  ) {
    aggregate {
      count
    }
  }
}
    `;const es=Ke.Ps`
    query MessagesByAddressSense($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {timestamp: $order_direction}}}
    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}
  ) {
    transaction_hash
    index
    value
    transaction {
      success
      block {
        timestamp
        height
      }
      memo
    }
    type
  }
}
    `;const ss=Ke.Ps`
    subscription MessagesByAddressSenseWs($address: _text, $limit: bigint, $offset: bigint, $timestamp_from: timestamp, $types: _text, $order_direction: order_by) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {timestamp: $order_direction}}}
    where: {transaction: {block: {timestamp: {_gt: $timestamp_from}}}}
  ) {
    transaction_hash
    index
    value
    transaction {
      success
      block {
        timestamp
        height
      }
      memo
    }
    type
  }
}
    `;Ke.Ps`
    query transactionCount {
  transaction_aggregate {
    aggregate {
      count(columns: hash)
    }
  }
}
    `;Ke.Ps`
    query uptimeByAddress($address: String) {
  uptime(where: {consensus_address: {_eq: $address}}) {
    uptime
  }
}
    `;Ke.Ps`
    query wasmDashboardPage($offset: Int, $limit: Int) {
  contracts(limit: $limit, offset: $offset, order_by: {tx: desc}) {
    address
    admin
    code_id
    creator
    fees
    gas
    label
    tx
  }
  contracts_aggregate {
    aggregate {
      sum {
        gas
        fees
        tx
      }
      count(columns: address)
    }
  }
}
    `;Ke.Ps`
    query MessagesByAddress($address: _text, $limit: bigint, $offset: bigint, $types: _text) {
  messages_by_address(
    args: {addresses: $address, limit: $limit, offset: $offset, types: $types}
    order_by: {transaction: {block: {height: desc}}}
  ) {
    transaction_hash
    value
    transaction {
      success
      height
      logs
      memo
      block {
        timestamp
      }
    }
    type
  }
}
    `;var ns=s(29639),as=s(98994),rs=s(28972);const is="cosmos.bank.v1beta1.MsgSend",os="cosmos.bank.v1beta1.MsgMultiSend",cs=(t,e)=>{const{data:s,events:n}=e,a=n["tx.hash"][0],r=n["message.action"][0].slice(1),i=Date.now(),o=n["tx.height"][0],{memo:c="",messages:u}=(t=>{const e=ns.Tx.decode((0,rs.Gh)(t)),s=e.body?.memo,n=e.body?.messages.map((t=>{const e=t.typeUrl.slice(1);return e===is?as.MsgSend.decode(t.value):e===os?as.MsgMultiSend.decode(t.value):void 0})).filter((t=>void 0!==t));return{memo:s,messages:n}})(s.value.TxResult.tx),d=[];return u.forEach(((e,s)=>{d.push({hash:a,index:s,type:r,timestamp:i,success:!0,value:e,memo:c,neuron:t,blockHeight:o})})),d};var us=s(17118),ds=s(85185),ls=s(95210),ps=s(78699),hs=s(26461);const ms=new ls.g((0,hs.eI)({url:H,shouldRetry:t=>!0,retryAttempts:10,retryWait:async t=>{setTimeout((()=>Promise.resolve()),Math.min(1e3*2**t,1e4))}})),gs=t=>new ps.g6(j,{signal:t});const ys=async({particleCid:t,timestampFrom:e,offset:s=0,abortSignal:n})=>(await gs(n).request(Je,{limit:200,offset:s,orderBy:[{timestamp:Ve.Asc}],where:{_or:[{particle_to:{_eq:t}},{particle_from:{_eq:t}}],timestamp:{_gt:Qe(e)}}})).cyberlinks,fs=async({neuron:t,particlesFrom:e,timestampFrom:s,batchSize:n,offset:a=0,abortSignal:r})=>{const i={_and:[{timestamp:{_gt:Qe(s)}},{neuron:{_eq:t}},{particle_from:{_in:e}}]};return(await gs(r).request(Je,{limit:n,offset:a,orderBy:[{timestamp:Ve.Asc}],where:i})).cyberlinks},bs=async(t,e,s,n,a)=>Re(fs,{neuron:t,particlesFrom:e,timestampFrom:s,batchSize:n,abortSignal:a}),ws=t=>[...new Set([...t.map((t=>t.to)),...t.map((t=>t.from))])],Ss=async(t,e,s,n,a)=>{const r=((t,e,s)=>Re(ys,{particleCid:t,timestampFrom:e,abortSignal:s}))(t,e,a),i=[];for await(const t of r){i.push(...t);const e=ws(t);e.length>0&&await Me(e,(t=>s.enqueueBatch(t,n)),20)}return i};const $s=({neuron:t,timestampFrom:e,offset:s=0,types:n=[],orderDirection:a="desc",limit:r})=>({address:`{${t}}`,limit:r,timestamp_from:Qe(e),offset:s,types:`{${n.map((t=>`"${t}"`)).join(" ,")}}`,order_direction:a}),vs=async({neuron:t,timestampFrom:e,offset:s=0,types:n=[],orderDirection:a="desc",limit:r,abortSignal:i})=>{const o=await gs(i).request(es,$s({neuron:t,timestampFrom:e,offset:s,types:n,orderDirection:a,limit:r,abortSignal:i}));return o?.messages_by_address},xs=(t,e,s,n,a)=>{const r=t.get(e),i=r?.transactions||[];return i.push(s),t.set(e,{userAddress:e,lastSendTimestamp:a?s.timestamp:r?.lastSendTimestamp||0,last:{amount:n,memo:s.memo,direction:a?"to":"from"},transactions:i}),t},Cs=async(t,e,s,n,a=!0)=>{const r=await t.findSyncStatus({ownerId:e,entryType:jt.chat}),i=new Map(r?.map((t=>[t.id,t]))),o=((t,e)=>{if(0===(e.filter((t=>t.type===is||t.type===os))||[]).length)return[];const s=new Map;return e.forEach((e=>{let n="";if(e.type===os){const{inputs:n,outputs:a}=e.value,r=n.find((e=>e.address===t));(r?a:n).forEach((t=>xs(s,t.address,e,t.coins,r)))}else if(e.type===is){const{fromAddress:a,toAddress:r,amount:i}=e.value,o=a===t;n=o?r:a,xs(s,n,e,i,o)}})),s})(e,await t.getTransactions(e,{order:"asc",timestampFrom:s})),c=[];for(const s of o.values()){const r=i.get(s.userAddress),o=s.transactions.at(-1),{timestamp:u,hash:d,index:l}=o,p={entryType:jt.chat,ownerId:e,meta:{transactionHash:d,index:l}};if(r){const{id:e,timestampRead:i,timestampUpdate:d,meta:l,unreadCount:h}=r,m=Math.max(i,s.lastSendTimestamp),{timestampUpdateContent:g=0,timestampUpdateChat:y=0}=l,f=Math.max(s.lastSendTimestamp,y),b=h+s.transactions.filter((t=>t.timestamp>f)).length;if(d<u){const s=a?u:y,i={...p,id:e,unreadCount:b,timestampRead:m,timestampUpdate:Math.max(u,g,s),meta:{...p.meta,timestampUpdateChat:s,timestampUpdateContent:g}};await Xe(t.updateSyncStatus.bind(t),n)(i),c.push({...r,...i,meta:o})}}else{const e=s.transactions.filter((t=>t.timestamp>s.lastSendTimestamp)).length,r={...p,id:s.userAddress,unreadCount:e,timestampUpdate:a?u:0,timestampRead:s.lastSendTimestamp,disabled:!1};await Xe(t.putSyncStatus.bind(t),n)(r),c.push({...r,meta:o})}}return c};var _s=s(98430),As=s(34978),Ps=s(93994);class Ts{constructor(t){this.requestRecords=[],this.totalRequests=0,this.completedRequests=0,this.estimatedTime=-1,this.batchSize=1,this.onProgressUpdate=t}get progress(){return{totalCount:this.totalRequests,completeCount:this.completedRequests,estimatedTime:this.estimatedTime}}start(t,e=1){return this.totalRequests=t,this.requestRecords=[],this.completedRequests=0,this.estimatedTime=-1,this.batchSize=e,this.progress}add(t){return this.totalRequests+=t,this.progress}trackProgress(t){if(this.addRequestRecord(t),this.requestRecords.length>10&&this.requestRecords.shift(),this.requestRecords.length>1){const e=this.calculateAverageTimePerItem()*((this.totalRequests-this.completedRequests)*t);this.completedRequests+=t,this.estimatedTime=Math.round(e),this.onProgressUpdate&&this.onProgressUpdate(this.progress)}return this.progress}addRequestRecord(t){this.requestRecords.push({timestamp:Date.now(),itemCount:t})}calculateAverageTimePerItem(){let t=0,e=0;for(let s=1;s<this.requestRecords.length;s++){const n=this.requestRecords[s].timestamp-this.requestRecords[s-1].timestamp,{itemCount:a}=this.requestRecords[s];t+=n*a,e+=a}return 0===e?0:t/e}}var ks=class{constructor(t,e,s){if(this.progressTracker=new Ts,this.channelApi=new pe,this.params={myAddress:null},this.name=t,this.abortController=new AbortController,this.statusApi=Ee(t,this.channelApi),this.particlesResolver=s,this.cyblogCh=(0,Ps.B)({thread:"bckd",module:t}),!e.params$)throw new Error("params$ is not defined");e.dbInstance$.subscribe((t=>{this.db=t})),this.particlesResolver=s,this.isInitialized$=this.createIsInitializedObserver(e),this.isInitialized$.subscribe((t=>{this.cyblogCh.info(`>>> ${this.name} - ${t?"initialized":"inactive"}`),this.statusApi.sendStatus(t?"initialized":"inactive")})),this.isInitialized$.pipe((0,As.w)((()=>e.params$))).subscribe((t=>{this.params=t,this.cyblogCh.info(`>>> ${this.name} - params updated`,{data:t})})),this.isInitialized$.pipe((0,At.h)((t=>!!t)),(0,As.w)((()=>this.createRestartObserver(e.params$)))).subscribe((()=>{this.restart()}))}initAbortController(){this.abortController=new AbortController}createRestartObserver(t){return t.pipe((0,Tt.U)((t=>t.myAddress)),(0,Le.x)(((t,e)=>t===e)),(0,Tt.U)((t=>!!t)),(0,At.h)((t=>!!t)))}};const Is=(t,e,s)=>t.pipe((0,Le.x)(),(0,ke.b)((t=>s?.(t))),(0,At.h)((t=>t)),(0,As.w)((()=>e)),(0,Ie.B)());var Es=s(25108);var Ms=class extends ks{constructor(t,e,s){super(t,e,s),this.reloadTrigger$=new $e.x;const n=Is(this.isInitialized$,this.reloadTrigger$.pipe((0,_s.O)(null),(0,ke.b)((()=>{this.initAbortController()})),(0,As.w)((()=>this.createInitObservable().pipe((0,As.w)((t=>this.createClientObservable(t).pipe((0,ke.b)((()=>this.statusApi.sendStatus("listen"))),(0,As.w)((t=>(0,Be.D)(this.onUpdate(t,this.params))))))))))),(e=>{Es.log(`>>> ${t} isInitialized`,e),this.statusApi.sendStatus(e?"initialized":"inactive")}));n.subscribe({next:()=>{this.statusApi.sendStatus("listen")},error:t=>{this.statusApi.sendStatus("error",t)}}),this.source$=n}restart(){this.abortController?.abort(),this.reloadTrigger$.next(),Es.log(`>>> ${this.name} client restart`)}start(){return this.source$.subscribe((()=>{})),this}};var Rs=class extends Ms{createIsInitializedObserver(t){return(0,Te.a)([t.dbInstance$,t.params$.pipe((0,Tt.U)((t=>t.myAddress)),(0,Le.x)()),this.particlesResolver.isInitialized$]).pipe((0,Tt.U)((([t,e,s])=>!!t&&!!s&&!!e)))}createClientObservable(t){const{myAddress:e}=this.params;this.cyblogCh.info(`>>> ${this.name} subscribe ${e} from ${Qe(t)}`);const s=$s({neuron:e,timestampFrom:t,types:[],orderDirection:"desc",limit:100}),n=function(t,e){const s=new us.f({link:ms,cache:new ds.h}).subscribe({query:t,variables:e});return new zt.y((t=>{const e=s.subscribe({next(e){t.next(e.data)},error(e){t.error(e)},complete(){t.complete()}});return()=>e.unsubscribe()}))}(ss,s).pipe((0,Tt.U)((t=>({source:"indexer",transactions:t.messages_by_address.map((t=>Ge(e,t)))})))),a=function(t,e,s){return new zt.y((n=>{const a=new WebSocket(F);return a.onopen=()=>{s(`node ws connected to ${F} with ${e}`),a.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"0",params:{query:e}}))},a.onmessage=e=>{const a=JSON.parse(e.data);s(`node ws ${t} onmessage`,a),n.next(a.result)},a.onerror=e=>{s(`node ws ${t} error`,{error:e}),n.error(e)},a.onclose=()=>{s(`node ws ${t} closed`),n.complete()},()=>{a.close()}}))}(e,(r=e,`tm.event='Tx' AND transfer.recipient='${r}'`),((t,e)=>this.cyblogCh.info(t,{unit:"node-ws",...e}))).pipe((0,At.h)((t=>!(0,Fe.isEmpty)(t))),(0,Tt.U)((t=>({source:"node",transactions:cs(e,t)}))));var r;return(0,It.T)(n,a)}createInitObservable(){return(0,Ne.P)((()=>(0,Be.D)(this.initSync())))}async initSync(){const{myAddress:t}=this.params,{signal:e}=this.abortController,s=await this.db.getSyncStatus(t,t),n=await this.syncTransactions(t,t,s);this.statusApi.sendStatus("in-progress","sync my chats");const a=await Cs(this.db,t,s.timestampUpdate,e);return this.channelApi.postSenseUpdate(a),this.statusApi.sendStatus("active"),n}async onUpdate({source:t,transactions:e},s){const{myAddress:n}=s,{signal:a}=this.abortController;if(0===e.length)return void this.cyblogCh.info(`>>> ${this.name} ${n} recived 0 updates `);const r=await this.db.getSyncStatus(n,n);await this.processBatchTransactions(n,n,e,r,t),this.statusApi.sendStatus("in-progress","sync my chats");const i=await Cs(this.db,n,r.timestampUpdate,a,"node"!==t);this.channelApi.postSenseUpdate(i),this.statusApi.sendStatus("listen")}async processBatchTransactions(t,e,s,{timestampRead:n,unreadCount:a,timestampUpdate:r},i){const{signal:o}=this.abortController,c="node"!==i;this.cyblogCh.info(`   syncTransactions - process ${e}[${i}],  count: ${s.length}, from: ${s.at(0)?.timestamp}, to: ${s.at(-1)?.timestamp}`),await Xe(this.db.putTransactions,o)(s),this.syncLinks(s,o);const{hash:u,index:d,timestamp:l}=s.at(-1),p=l,h={ownerId:t,entryType:jt.transactions,id:e,timestampUpdate:c?p:r,unreadCount:a+s.length,timestampRead:n||0,disabled:!1,meta:{transactionHash:u,index:d}};return await Xe(this.db.putSyncStatus,o)(h),p}async syncTransactions(t,e,s){const{unreadCount:n,timestampUpdate:a}=s,r=a+1;this.statusApi.sendStatus("estimating");const i=await(async(t,e,s)=>{const n=await gs(s).request(ts,{address:`{${t}}`,timestamp:Qe(e)});return n?.messages_by_address_aggregate.aggregate?.count})(e,r,this.abortController.signal);if(this.cyblogCh.info(`>>> syncTransactions - start ${e},  count: ${i}, from: ${r}`),0===i)return r;this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.start(Math.ceil(i/500)));const o=(({neuron:t,timestampFrom:e,types:s,orderDirection:n,limit:a,abortSignal:r})=>Re(vs,{neuron:t,timestampFrom:e,types:s,orderDirection:n,limit:a,abortSignal:r}))({neuron:e,timestampFrom:r,types:[],orderDirection:"asc",limit:500,abortSignal:this.abortController?.signal});let c=0,u=r;for await(const a of o){this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.trackProgress(1)),c+=a.length;const r=a.map((t=>Ge(e,t)));u=await this.processBatchTransactions(t,e,r,{...s,unreadCount:n+c},"indexer")}return u}async syncLinks(t,e){const{tweets:s,particlesFound:n,links:a}=function(t){const e=t.filter((t=>"cyber.graph.v1beta1.MsgCyberlink"===t.type)),s=new Set,n=[];return{tweets:e.reduce(((t,{value:e,hash:a,timestamp:r})=>(e.links.forEach((i=>{s.add(i.to),s.add(i.from);const o={...i,timestamp:r,neuron:e.neuron,transactionHash:a};n.push(o),i.from===qe&&(t[o.to]=o)})),t)),{}),particlesFound:[...s],links:n}}(t);a.length>0&&await Me(a,(t=>Xe(this.db.putCyberlinks,e)(t)),500);const r=Object.keys(s),i=n.filter((t=>!r.includes(t)));await this.particlesResolver.enqueueBatch(r,Se.HIGH),i.length>0&&await this.particlesResolver.enqueueBatch(i,Se.LOW)}};const qs=t=>t.replace(/([-_][a-z])/g,(t=>t.toUpperCase().replace("-","").replace("_","")));function Os(t){if(!t||"object"!=typeof t)return t;const e={};return Object.keys(t).forEach((s=>{if(Object.prototype.hasOwnProperty.call(t,s)){const n=qs(s);let a=t[s];Array.isArray(t[s])?a=t[s].map((t=>Os(t))):"object"==typeof t[s]&&(a=Os(t[s])),e[n]=a}})),e}function Us(t,e,s=0,n=0){const a=t.filter((t=>t.timestamp>s)),r=(0,Fe.findLastIndex)(a,(t=>t.neuron===e)),i=r<0?n+a.length:a.length-r-1;return{timestampRead:r<0?s:t[r].timestamp,unreadCount:i}}function zs(t,e,s,n=!0){const{timestampRead:a,unreadCount:r}=Us(e,s,t.timestampRead,t.unreadCount),i=Os(e[e.length-1]),o=i.timestamp;return{...t,ownerId:s,entryType:jt.particle,disabled:!1,unreadCount:r,meta:{...i,timestamp:o},timestampRead:a,timestampUpdate:n?o:t.timestampUpdate}}const Ds=t=>t instanceof DOMException&&"AbortError"===t.name;var Ls=s(66584),Ns=s(16899),Bs=s(96371),Fs=s(25108);var js=class extends ks{constructor(t,e,s,n,{warmupMs:a}={warmupMs:0}){super(t,s,n);const{loop$:r,restartLoop:i}=((t,e,s={})=>{const{intervalMs:n,warmupMs:a=0,onStartInterval:r,onError:i,retryDelayMs:o=0,onChange:c}=s,u=new $e.x,d=u.pipe((0,_s.O)(null),(0,As.w)((()=>(0,_t.F)(n).pipe((0,_s.O)(0),(0,Ls.g)(a)))));return{loop$:Is(t,d.pipe((0,ke.b)((()=>r&&r())),(0,Ns.z)((()=>e.pipe((0,Bs.X)({delay:t=>(Fs.log("retry",t),i&&i(t),(0,_t.F)(o))}))))),(t=>c?.(t))),restartLoop:()=>{u.next()}}})(this.isInitialized$,(0,Ne.P)((()=>(0,Be.D)(this.doSync()))),{intervalMs:e,warmupMs:a,onError:e=>{this.cyblogCh.info(`>>> ${t} error`,e.toString()),this.statusApi.sendStatus("error",e.toString())},onChange:e=>{this.cyblogCh.info(`>>> ${t} initialized: ${e}`),this.statusApi.sendStatus(e?"initialized":"inactive")}});this.loop$=r,this.restartLoop=i}restart(){this.abortController?.abort(),this.restartLoop?.(),this.cyblogCh.info(`>>> ${this.name} loop restart`)}start(){return this.loop$.subscribe((()=>this.statusApi.sendStatus("active"))),this}async doSync(){const t=(0,Ut.d9v)(this.params);this.initAbortController();try{await this.sync(t)}catch(e){const s=Ds(e);if(this.cyblogCh.info(`>>> ${this.name} ${t.myAddress} sync error [abrt:${s}]:`,{error:e}),!s)throw e}}};var Hs=class extends js{createIsInitializedObserver(t){return(0,Te.a)([t.dbInstance$,t.ipfsInstance$,t.params$.pipe((0,Tt.U)((t=>t.myAddress)),(0,Le.x)()),this.particlesResolver.isInitialized$]).pipe((0,Tt.U)((([t,e,s,n])=>!!(e&&t&&n&&s))))}async sync(t){const{myAddress:e}=t,{signal:s}=this.abortController;this.statusApi.sendStatus("estimating");const n=await this.db.findSyncStatus({ownerId:e,entryType:jt.particle}),a=n.at(0)?.timestampUpdate||0,r=await(async(t,e,s,n)=>{const a=await gs(n).request(Ye,{address:t,particles_from:e,timestamp:Qe(s)});return a.cyberlinks_aggregate.aggregate?.count})(e,[qe],a,s);if(this.cyblogCh.info(`>>> syncMyParticles ${e} count ${r}`),this.progressTracker.start(r+n.length),this.statusApi.sendStatus("in-progress","preparing...",this.progressTracker.progress),r>0){const t=await this.fetchNewTweets(e,a,s);n.push(...t)}await this.syncParticles(e,n,s)}async fetchNewTweets(t,e,s){const n=await bs(t,[qe],e,200,this.abortController?.signal),a=[],r=await this.db.findSyncStatus({ownerId:t,entryType:jt.particle}),i=new Map(r.map((t=>[t.id,t])));for await(const e of n){this.statusApi.sendStatus("in-progress","fetching new tweets...",this.progressTracker.trackProgress(1));const n=e.map(Os).map((e=>{const{timestamp:s,to:n}=e,a=We(s),r=i.get(n)?We(s):0;return{ownerId:t,id:n,entryType:jt.particle,timestampUpdate:r,timestampRead:a,unreadCount:0,disabled:!1,meta:{...e,timestamp:a}}}));n.length>0&&(await Xe(this.db.putSyncStatus,s)(n),a.push(...n))}return a}async syncParticles(t,e,s){const n=[];for(const a of e){const{id:e,timestampUpdate:r}=a;this.statusApi.sendStatus("in-progress","fetching tweet updates...",this.progressTracker.trackProgress(1));const i=await Ss(e,r,this.particlesResolver,Se.MEDIUM,this.abortController?.signal);if(i.length>0){const e=i.map(Ze);await Me(e,(t=>Xe(this.db.putCyberlinks,s)(t)),500);const r=zs(a,e,t);n.push(r)}}n.length>0&&await Xe(this.db.putSyncStatus,s)(n),this.channelApi.postSenseUpdate(n)}};var Qs=class extends js{constructor(t,e,s,n,{warmupMs:a}={warmupMs:0}){if(!s.followings$)throw new Error("followings$ is required");super(t,e,s,n,{warmupMs:a}),this.followings=[]}createIsInitializedObserver(t){const e=new Ct.X(!1);t.params$?.pipe((0,Tt.U)((t=>t.myAddress)),(0,Le.x)()).subscribe((()=>{e.next(!1)})),t.followings$.subscribe((t=>{this.followings=t,e.next(!0),this.restart()}));return(0,Te.a)([t.dbInstance$,t.params$,this.particlesResolver.isInitialized$,e]).pipe((0,Tt.U)((([t,e,s,n])=>!!t&&!!e.myAddress&&!!s&&n)))}async sync(t){const{signal:e}=this.abortController;this.statusApi.sendStatus("in-progress","preparing...");const{myAddress:s}=t,{followings:n}=this;this.statusApi.sendStatus("estimating"),this.cyblogCh.info(`>>> syncMyFriends ${s} count ${n.length}`,{unit:"friends-sync",data:n}),this.progressTracker.start(n.length),this.statusApi.sendStatus("in-progress","sync...",this.progressTracker.progress);for(const t of n)await this.syncLinks(s,t,e)}async syncLinks(t,e,s){let n=[];try{this.statusApi.sendStatus("in-progress",`starting sync ${e}...`,this.progressTracker.progress);const{timestampRead:a,unreadCount:r,meta:i}=await this.db.getSyncStatus(t,e),{timestampUpdateChat:o=0,timestampUpdateContent:c=0}=i||{},u=c+1,d=await bs(e,Ue,u,200,s);for await(const i of d){this.statusApi.sendStatus("in-progress",`sync ${e}...`,this.progressTracker.trackProgress(1));const c=i.map(Ze),{timestampRead:u,unreadCount:d}=Us(c,t,a,r);if(c.length>0){const a=Os(c.at(-1)),r=a.timestamp;await Xe(this.db.putCyberlinks,s)(c);const i=c.map((t=>t.to));await this.particlesResolver.enqueueBatch(i,Se.HIGH);const l={ownerId:t,entryType:jt.chat,id:e,timestampUpdate:Math.max(r,o),unreadCount:d,timestampRead:u,disabled:!1,meta:{...a,timestampUpdateContent:r,timestampUpdateChat:o}};await Xe(this.db.putSyncStatus,s)(l),n.push(l)}}}catch(t){if(this.cyblogCh.error(`>>> SyncMyFriends ${e} error`,{error:t}),Ds(t))throw n=[],t;this.statusApi.sendStatus("error",t.toString())}finally{this.channelApi.postSenseUpdate(n)}}},Ws=s(89862),Gs=s.n(Ws),Zs=s(6581),Xs=s(23085).lW;const Ks=t=>new Promise(((e,s)=>{const n=new(Gs())("file",Xs.from(t)).marshal();Zs.DAGNode.create(n,((t,n)=>{t&&s(new Error("Cannot create ipfs DAGNode")),Zs.util.cid(n,((t,s)=>{e(s.toBaseEncodedString())}))}))}));var Vs=s(71257);s(25108);const Js=(0,Ps.B)({thread:"bckd",unit:"fetchStoredSyncCommunity"}),Ys=(t,e,s,n)=>new zt.y((a=>{a.next({action:"reset",items:[]}),(async()=>{const r=await t.getCommunity(e);a.next({action:"add",items:r});const i=new Map(r.map((t=>[t.particle,t]))),o=t=>i.get(t)||{ownerId:e,name:"",following:!1,follower:!1},c=await(async(t,e)=>{const s=await(0,Vs.Z)({method:"get",url:`${B}/txs?cyberlink.neuron=${t}&cyberlink.particleFrom=${Oe}&limit=1000000000`,signal:e});return s.data.txs?s.data.txs.map((t=>t.tx.value.msg[0].value.links[0].to)):[]})(e,n),u=await(async(t,e)=>{const s=await Ks(t),n=await(0,Vs.Z)({method:"get",url:`${B}/txs?cyberlink.particleFrom=${Oe}&cyberlink.particleTo=${s}&limit=1000000000`,signal:e});return n.data.txs?n.data.txs.map((t=>t.tx.value.msg[0].value.neuron)):[]})(e,n),d=c.filter((t=>!r.some((e=>e.particle===t&&e.following)))),l=u.filter((t=>!r.some((e=>e.neuron===t&&e.follower))));Js.info(`>>>$ sync community ${e} processing, stored ${r.length} new followers: ${d.length} new following: ${l.length}`);const p=await Promise.all(l.map((async e=>{const s=await Ks(e),n={...o(s),particle:s,neuron:e,follower:!0};return await t.putCommunity(n),i.set(s,n),n})));a.next({action:"add",items:p}),await Promise.all(d.map((async e=>{const n=(await s(e,Se.URGENT))?.result?.textPreview;if(n&&n.match(X)){const s={...o(e),neuron:n,particle:e,following:!0};await t.putCommunity(s),i.set(e,s),a.next({action:"add",items:[s]})}}))),Js.info(`>>>$ sync community ${e}, done`),a.next({action:"complete",items:[]}),a.complete()})().catch((t=>{Js.error(`>>>$ sync community ${e}, error`,{error:t}),a.error(t)}))}));const tn=(0,Ps.B)({thread:"bckd"});class en{constructor(t){this.channelApi=new pe,this.loops={};const{dbInstance$:e,ipfsInstance$:s}=t;this.isInitialized$=(0,Te.a)([e,s]).pipe((0,Tt.U)((([t,e])=>!!t&&!!e))),this.isInitialized$.subscribe({next:t=>t&&this.channelApi.postServiceStatus("sync","started"),error:t=>this.channelApi.postServiceStatus("sync","error",t)});const n=new De(t).start(),a=function(t){const{dbInstance$:e,ipfsInstance$:s,params$:n}=t,a=new pe;return(0,Te.a)([e,n.pipe((0,Tt.U)((t=>t.myAddress)),(0,Le.x)()),s]).pipe((0,At.h)((([t,e,s])=>!!t&&!!s&&!!e)),(0,As.w)((([e,s,n])=>{const{waitForParticleResolve:r}=t;let i=[];return new zt.y((t=>{t.next([]),Ys(e,s,r).subscribe((({action:e,items:s})=>{a.post({type:"load_community",value:{action:e,items:s}}),"reset"===e?i=[]:["add","complete"].some((t=>t===e))&&i.push(...s),"complete"===e&&(t.next(i),t.complete())}))}))})))}(t);a.subscribe((t=>{tn.info("--\x3e community fetched",{unit:"community",data:t})}));const r=a.pipe((0,Tt.U)((t=>t.filter((t=>t.following)))),(0,Tt.U)((t=>t.map((t=>t.neuron)))));new Rs("transactions",t,n).start(),new Hs("particles",3e5,t,n).start(),new Qs("my-friends",3e5,{...t,followings$:r},n).start()}restart(t){this.loops[t]?.restart()}}var sn=s(44586),nn=s(93994).Z,an=s(25108);var rn=class{constructor(t){this.queue$=new Ct.X(new Map),t.subscribe((t=>{this.dbApi=t})),t.pipe((0,At.h)((t=>!!t)),(0,ke.b)((()=>nn.info("DeferredDbSaver - initialized"))),(0,kt.z)((()=>this.queue$)),(0,At.h)((t=>t.size>0)),(0,kt.z)((t=>(0,Ne.P)((()=>(0,Be.D)(this.processQueue(t))))))).subscribe({error:t=>an.error("Error processing IPFS queue",t)})}get queue(){return this.queue$.getValue()}enqueueIpfsContent(t){if(!t)return;const{cid:e}=t;this.queue$.next(new Map(this.queue$.value).set(e,{content:t}))}enqueueLinks(t){if(!t||!t.length)return;const e=(0,sn.Z)();this.queue$.next(new Map(this.queue$.value).set(e,{links:t}))}async processQueue(t){this.queue$.next(new Map);for(const[e,s]of t)await this.processQueueItem(s),t.delete(e)}async processQueueItem(t){const{content:e,links:s}=t;if(e){const t=(t=>{const{cid:e,result:s,meta:n,textPreview:a}=t,{size:r,mime:i,type:o,blocks:c,sizeLocal:u}=n;return{cid:e,size:r||0,mime:i||"unknown",type:o,text:a?.replace(/"/g,"'")||"",size_local:u||-1,blocks:c||0}})(e);await this.dbApi.putParticles(t)}s&&s.length>0&&await this.dbApi.putCyberlinks(s)}},on=s(25108);const cn=(()=>{const t=new $e.x,e=new Ct.X(void 0),s=new Ct.X({myAddress:null});let a;const r=new rn(t),i=new we(e,{defferedDbSaver:r}),o=new pe,c=new en({waitForParticleResolve:async(t,e=Se.MEDIUM)=>i.enqueueAndWait(t,{postProcessing:!0,priority:e}),dbInstance$:t,ipfsInstance$:e,params$:s}),u={importCyberlinks:t=>{r.enqueueLinks(t)}},d={start:async t=>{try{return a&&(on.log("Ipfs node already started!"),await a.stop()),o.postServiceStatus("ipfs","starting"),a=await xt(t),e.next(a),setTimeout((()=>o.postServiceStatus("ipfs","started")),0),!0}catch(t){on.log("----ipfs node init error ",t);const e=t instanceof Error?t.message:t;throw o.postServiceStatus("ipfs","error",e),Error(e)}},stop:async()=>{a&&await a.stop(),e.next(void 0),o.postServiceStatus("ipfs","inactive")},getIpfsNode:async()=>a&&(0,n.sj)(a),config:async()=>a?.config,info:async()=>a?.info(),fetchWithDetails:async(t,e)=>a?.fetchWithDetails(t,e),enqueue:async(t,e,s)=>i.enqueue(t,e,s),enqueueAndWait:async(t,e)=>i.enqueueAndWait(t,e),dequeue:async t=>i.cancel(t),dequeueByParent:async t=>i.cancelByParent(t),clearQueue:async()=>i.clear(),addContent:async t=>a?.addContent(t)};return{init:async e=>{t.next(e)},isInitialized:()=>!!e.value,ipfsApi:(0,n.sj)(d),defferedDbApi:(0,n.sj)(u),ipfsQueue:(0,n.sj)(i),restartSync:t=>c.restart(t),setParams:t=>s.next({...s.value,...t})}})();var un,dn;un=self,dn=cn,Ae(),void 0!==un.onconnect?un.onconnect=t=>{const e=t.ports[0];Pe(e),(0,n.Jj)(dn,e)}:(0,n.Jj)(dn)},96407:function(t,e,s){"use strict";s.d(e,{bG:function(){return n}});const n="CYBLOG_BROADCST_CHANNEL"},93994:function(t,e,s){"use strict";s.d(e,{B:function(){return c}});var n=s(96486),a=s.n(n),r=s(96407),i=s(25108);const o=[];const c=(t={})=>{const e=new BroadcastChannel(r.bG);function s(s,n,a){const r={...t,...a};a?.error&&(r.error=JSON.stringify(a.error)),e.postMessage({type:"log",value:{level:s,message:n,context:r}})}return{info:function(t,e){return s("info",t,e)},error:function(t,e){return s("error",t,e)},warn:function(t,e){return s("warn",t,e)},trace:function(t,e){return s("warn",t,e)}}},u=function(t={}){let e={};function s(s,r,c=t){try{const t=c?.formatter?c?.formatter(r):r;!function(t,e=!0){for(o.push(t);e&&o.length>1e3;)o.shift()}({timestamp:new Date,level:s,message:t,stacktrace:c?.stacktrace,context:a().omit(c,["formatter","stacktrace"])});Object.keys(e).reduce(((t,s)=>{const n=e[s],a=c[s];return n&&a?t||"all"===n||0===n.length||n.some((t=>t===a)):t}),!1)&&function(t,e,s){const r=a().omit(s,["formatter","thread","module","unit","data"]),{thread:o="",module:c="",unit:u="",data:d=""}=s,l=(0,n.isEmpty)(r)?"":r;Array.isArray(e)?i[t](...e,l):s?.formatter?i[t](s?.formatter(e),l):i[t](`[${o}:${c}:${u}] ${e}`,d,l)}(s,r,c)}catch(t){i.log("cyblog error",t)}}return new BroadcastChannel(r.bG).onmessage=t=>{"params"===t.data.type&&(e={...e,...t.data.value})},{log:s,info:function(t,e){return s("info",t,e)},error:function(t,e){return s("error",t,e)},warn:function(t,e){return s("warn",t,e)},trace:function(t,e){return s("warn",t,e)},logList:o,getLogs:()=>o.map((t=>{const{context:e,...s}=t,{unit:n="",module:a="",thread:r="",data:i="",error:o="",stacktrace:c=""}=e||{};return{...s,unit:n,module:a,thread:r,data:i,error:o,stacktrace:c}})),clear:()=>o.splice(0,o.length),getConsoleLogParams:()=>e}}({thread:"main"});e.Z=u},67064:function(){},81949:function(){},95856:function(){},35883:function(){},66778:function(){},10465:function(){},52596:function(){},63897:function(){},85104:function(){},83886:function(){},52:function(){},25819:function(){},81265:function(){},35539:function(){},99283:function(){},43838:function(){}},r={};function i(t){var e=r[t];if(void 0!==e)return e.exports;var s=r[t]={id:t,loaded:!1,exports:{}};return a[t].call(s.exports,s,s.exports,i),s.loaded=!0,s.exports}i.m=a,i.x=function(){var t=i.O(void 0,[385,775,746,356,975],(function(){return i(28379)}));return t=i.O(t)},i.amdO={},t=[],i.O=function(e,s,n,a){if(!s){var r=1/0;for(d=0;d<t.length;d++){s=t[d][0],n=t[d][1],a=t[d][2];for(var o=!0,c=0;c<s.length;c++)(!1&a||r>=a)&&Object.keys(i.O).every((function(t){return i.O[t](s[c])}))?s.splice(c--,1):(o=!1,a<r&&(r=a));if(o){t.splice(d--,1);var u=n();void 0!==u&&(e=u)}}return e}a=a||0;for(var d=t.length;d>0&&t[d-1][2]>a;d--)t[d]=t[d-1];t[d]=[s,n,a]},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},s=Object.getPrototypeOf?function(t){return Object.getPrototypeOf(t)}:function(t){return t.__proto__},i.t=function(t,n){if(1&n&&(t=this(t)),8&n)return t;if("object"==typeof t&&t){if(4&n&&t.__esModule)return t;if(16&n&&"function"==typeof t.then)return t}var a=Object.create(null);i.r(a);var r={};e=e||[null,s({}),s([]),s(s)];for(var o=2&n&&t;"object"==typeof o&&!~e.indexOf(o);o=s(o))Object.getOwnPropertyNames(o).forEach((function(e){r[e]=function(){return t[e]}}));return r.default=function(){return t},i.d(a,r),a},i.d=function(t,e){for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.f={},i.e=function(t){return Promise.all(Object.keys(i.f).reduce((function(e,s){return i.f[s](t,e),e}),[]))},i.u=function(t){return 385===t?"385.613cfe5b.js":t+"."+{356:"cf28752a",746:"35674002",775:"8cd4fdf0",827:"89ce62da",975:"353b60ef"}[t]+".chunk.js"},i.miniCssF=function(t){},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},i.p="/",function(){var t={312:1};i.f.i=function(e,s){t[e]||importScripts(i.p+i.u(e))};var e=self.webpackChunkcyb=self.webpackChunkcyb||[],s=e.push.bind(e);e.push=function(e){var n=e[0],a=e[1],r=e[2];for(var o in a)i.o(a,o)&&(i.m[o]=a[o]);for(r&&r(i);n.length;)t[n.pop()]=1;s(e)}}(),n=i.x,i.x=function(){return Promise.all([385,775,746,356,975].map(i.e,i)).then(n)};i.x()}();
//# sourceMappingURL=312.0dc80ccb.chunk.js.map