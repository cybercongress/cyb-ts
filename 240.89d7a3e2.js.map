{"version":3,"file":"240.89d7a3e2.js","mappings":"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QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,WACxJ,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,QAAQ,UACpI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,EAAE,QAAQ,QAAQ,QAAQ,QAAQ,Q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QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,EAAE,EAAE,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UAC7H,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UAC7H,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,QAAQ,UAC7H,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,IACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,S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QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,QAAQ,UAC7H,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,WACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,EAAE,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,S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AQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,IACvH,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,UAC3G,IAAIA,YAAY,CAAC,EAAE,EAAE,EAAE,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACvH,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UACzI,IAAIA,YAAY,C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AAeptE,UAAUutE,EACpC,CACA,MACMG,EAAO,IADoB,oBAAblzE,SAA2B,EAAeA,UAE9DkzE,EAAKC,OAAO,aAAcP,EAAeptE,UAAU2mD,IACnD,MAAMrlD,EAAM,CAAC,EACb,IAAIvG,EAAI,EASR,OARAsyE,EAAM9wE,SAASirD,IACXlmD,IAAMvG,GAAKysD,CAAK,IAEpBkmB,EAAKC,OAAO,MAAOP,EAAeptE,UAAUsB,IAC5CvG,EAAI,EACJsyE,EAAM9wE,SAAQ,CAACirD,EAAOomB,KAClBF,EAAKC,OAAO,MAAK5yE,EAAK6yE,EAAK,IAExBF,CAAI,EC3CR,MC6BMG,EAA2B,CAACC,EAActxB,KAAauxB,KAChE,MAAOZ,EAAWa,GAAkBD,EACpC,OAAOD,EAAatxB,SACdsxB,EACA,CACEvuC,IAAKuuC,EACLtxB,SAAUA,EACV2wB,YACAa,iBACAzuB,YAAQ51C,EACX,4BC/BT,MAAM8L,EAAgB,gCAEtB,SAASC,EAAgBrO,GACvB,OAAOsO,EAAgBtO,EAAIT,WAAW,GACxC,CAEA,MAAM+O,EAAkB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,MACA,MACA,MACA,UACA,MACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,GACA,GACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,G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,CAAC,OAAQ,SACf/tD,IAAK,CAAC,OAAQ,SACdguD,SAAU,CAAC,OAAQ,UAErBjB,SAAU,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,SACA,KACA,IACA,MACA,OACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,IACA,KACA,KACA,QACA,QACA,QACA,QACA,aACA,KACA,KACA,KACA,MACA,IACA,OACA,MACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,SACA,UACA,UACA,UACA,SACA,aACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,SAEFX,WAAY,CACV37C,EAAG,CAAC,QACJw9C,IAAK,CAAC,MAAO,YACb7mD,MAAO,CACL,CAAC,OAAQ,YACT,CAAC,YAAY,IAEf8mD,GAAI,CAAC,CAAC,YAAa,mBACnBC,IAAK,CAAC,YAAa,YACnBC,WAAY,CAAC,QACbC,IAAK,CAAC,QACNC,IAAK,CAAC,QACN/xC,EAAG,CAAC,QACJ,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,kBACA,aACA,YACA,iBACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,SACA,WACA,MACA,WACA,UACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,KACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,UACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,aAGJg6B,SAAU,CACRnvC,MAAO,CACLjc,KAAM,WACNojE,UAAU,wFCxKT,MAAMC,EAAmB,CAC9B,OACA,OACA,WACA,UACA,KACA,MACA,UACA,QACA,QACA,KACA,QACA,MACA,QACA,UACA,SACA,OACA,WACA,OACA,SACA,QACA,SACA,QACA,4FCrBK,MAAMC,EAAeC,EAAS,GACxBC,EAAgBD,GAAU,GAOvC,SAAS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","sources":["webpack://cyb/./node_modules/@ipld/car/node_modules/varint/decode.js","webpack://cyb/./node_modules/@ipld/car/node_modules/varint/encode.js","webpack://cyb/./node_modules/@ipld/car/node_modules/varint/index.js","webpack://cyb/./node_modules/@ipld/car/node_modules/varint/length.js","webpack://cyb/./node_modules/graphql-request/node_modules/form-data/lib/browser.js","webpack://cyb/./node_modules/graphql-tag/node_modules/tslib/tslib.es6.js","webpack://cyb/./node_modules/graphql-tag/lib/index.js","webpack://cyb/./node_modules/graphql/jsutils/devAssert.js","webpack://cyb/./node_modules/graphql/jsutils/devAssert.mjs","webpack://cyb/./node_modules/graphql/jsutils/inspect.js","webpack://cyb/./node_modules/graphql/jsutils/inspect.mjs","webpack://cyb/./node_modules/graphql/language/ast.js","webpack://cyb/./node_modules/graphql/language/ast.mjs","webpack://cyb/./node_modules/graphql/language/blockString.js","webpack://cyb/./node_modules/graphql/language/blockString.mjs","webpack://cyb/./node_modules/graphql/language/characterClasses.js","webpack://cyb/./node_modules/graphql/language/characterClasses.mjs","webpack://cyb/./node_modules/graphql/language/kinds.js","webpack://cyb/./node_modules/graphql/language/kinds.mjs","webpack://cyb/./node_modules/graphql/jsutils/invariant.mjs","webpack://cyb/./node_modules/graphql/language/location.mjs","webpack://cyb/./node_modules/graphql/language/printLocation.mjs","webpack://cyb/./node_modules/graphql/error/GraphQLError.mjs","webpack://cyb/./node_modules/graphql/jsutils/isObjectLike.mjs","webpack://cyb/./node_modules/graphql/error/syntaxError.mjs","webpack://cyb/./node_modules/graphql/language/directiveLocation.mjs","webpack://cyb/./node_modules/graphql/language/tokenKind.mjs","webpack://cyb/./node_modules/graphql/language/lexer.mjs","webpack://cyb/./node_modules/graphql/jsutils/instanceOf.mjs","webpack://cyb/./node_modules/graphql/language/source.mjs","webpack://cyb/./node_modules/graphql/language/parser.mjs","webpack://cyb/./node_modules/graphql/language/printString.js","webpack://cyb/./node_modules/graphql/language/printer.js","webpack://cyb/./node_modules/graphql/language/visitor.js","webpack://cyb/./node_modules/graphql/utilities/getOperationAST.js","webpack://cyb/./node_modules/has-property-descriptors/index.js","webpack://cyb/./node_modules/has-symbols/index.js","webpack://cyb/./node_modules/has-symbols/shams.js","webpack://cyb/./node_modules/has-tostringtag/shams.js","webpack://cyb/./node_modules/has/src/index.js","webpack://cyb/./node_modules/hash-base/index.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/errors-browser.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://cyb/./node_modules/hash-base/node_modules/readable-stream/readable-browser.js","webpack://cyb/./node_modules/hash.js/lib/hash.js","webpack://cyb/./node_modules/hash.js/lib/hash/common.js","webpack://cyb/./node_modules/hash.js/lib/hash/hmac.js","webpack://cyb/./node_modules/hash.js/lib/hash/ripemd.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/1.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/224.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/256.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/384.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/512.js","webpack://cyb/./node_modules/hash.js/lib/hash/sha/common.js","webpack://cyb/./node_modules/hash.js/lib/hash/utils.js","webpack://cyb/./node_modules/hashlru/index.js","webpack://cyb/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://cyb/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://cyb/./node_modules/https-browserify/index.js","webpack://cyb/./node_modules/idna-uts46-hx/idna-map.js","webpack://cyb/./node_modules/idna-uts46-hx/node_modules/punycode/punycode.js","webpack://cyb/./node_modules/idna-uts46-hx/uts46.js","webpack://cyb/./node_modules/ieee754/index.js","webpack://cyb/./node_modules/immer/dist/immer.esm.mjs","webpack://cyb/./node_modules/index-array-by/dist/index-array-by.mjs","webpack://cyb/./node_modules/inherits/inherits_browser.js","webpack://cyb/./node_modules/inline-style-parser/index.js","webpack://cyb/./node_modules/ipaddr.js/lib/ipaddr.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/varint/decode.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/varint/encode.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/varint/index.js","webpack://cyb/./node_modules/ipfs-bitswap/node_modules/varint/length.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-core/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-core/node_modules/varint/decode.js","webpack://cyb/./node_modules/ipfs-core/node_modules/varint/encode.js","webpack://cyb/./node_modules/ipfs-core/node_modules/varint/index.js","webpack://cyb/./node_modules/ipfs-core/node_modules/varint/length.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/varint/decode.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/varint/encode.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/varint/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/node_modules/varint/length.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/ipfs-unixfs/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs/src/unixfs.proto.js","webpack://cyb/./node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js","webpack://cyb/./node_modules/ipfs-utils/node_modules/it-all/index.js","webpack://cyb/./node_modules/ipfs-utils/src/env.js","webpack://cyb/./node_modules/ipfs-utils/src/fetch.browser.js","webpack://cyb/./node_modules/ipfs-utils/src/files/url-source.js","webpack://cyb/./node_modules/ipfs-utils/src/http.js","webpack://cyb/./node_modules/ipfs-utils/src/http/error.js","webpack://cyb/./node_modules/ipfs-utils/src/http/fetch.browser.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/asyncify.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/initialParams.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/once.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/onlyOnce.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/setImmediate.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/slice.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/internal/wrapAsync.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/setImmediate.js","webpack://cyb/./node_modules/ipld-dag-pb/node_modules/async/waterfall.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-link/create.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-link/index.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-link/util.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/addLink.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/clone.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/create.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/index.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/rmLink.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag-node/util.js","webpack://cyb/./node_modules/ipld-dag-pb/src/dag.proto.js","webpack://cyb/./node_modules/ipld-dag-pb/src/index.js","webpack://cyb/./node_modules/ipld-dag-pb/src/resolver.js","webpack://cyb/./node_modules/ipld-dag-pb/src/util.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/ipns/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/is-arguments/index.js","webpack://cyb/./node_modules/is-callable/index.js","webpack://cyb/./node_modules/is-dom/index.js","webpack://cyb/./node_modules/is-domain-name/index.js","webpack://cyb/./node_modules/is-electron/index.js","webpack://cyb/./node_modules/is-function/index.js","webpack://cyb/./node_modules/is-generator-function/index.js","webpack://cyb/./node_modules/is-hex-prefixed/src/index.js","webpack://cyb/./node_modules/is-nan/implementation.js","webpack://cyb/./node_modules/is-nan/index.js","webpack://cyb/./node_modules/is-nan/polyfill.js","webpack://cyb/./node_modules/is-nan/shim.js","webpack://cyb/./node_modules/is-object/index.js","webpack://cyb/./node_modules/is-promise/index.js","webpack://cyb/./node_modules/is-svg/index.js","webpack://cyb/./node_modules/is-typed-array/index.js","webpack://cyb/./node_modules/is-window/index.js","webpack://cyb/./node_modules/iso-constants/index.browser.js","webpack://cyb/./node_modules/iso-random-stream/src/random.browser.js","webpack://cyb/./node_modules/iso-url/index.js","webpack://cyb/./node_modules/iso-url/src/relative.js","webpack://cyb/./node_modules/iso-url/src/url-browser.js","webpack://cyb/./node_modules/isomorphic-ws/browser.js","webpack://cyb/./node_modules/jerrypick/dist/jerrypick.mjs","webpack://cyb/./node_modules/js-sha3/src/sha3.js","webpack://cyb/./node_modules/jsbi/dist/jsbi-umd.js","webpack://cyb/./node_modules/json-schema-compare/src/index.js","webpack://cyb/./node_modules/json-schema-merge-allof/src/index.js","webpack://cyb/./node_modules/jsonpointer/jsonpointer.js","webpack://cyb/./node_modules/k-bucket/index.js","webpack://cyb/./node_modules/kapsule/dist/kapsule.mjs","webpack://cyb/./node_modules/@ipld/dag-cbor/src/index.js","webpack://cyb/./node_modules/@ipld/dag-json/src/index.js","webpack://cyb/./node_modules/@ipld/dag-pb/src/pb-decode.js","webpack://cyb/./node_modules/@ipld/dag-pb/src/pb-encode.js","webpack://cyb/./node_modules/@ipld/dag-pb/src/util.js","webpack://cyb/./node_modules/@ipld/dag-pb/src/index.js","webpack://cyb/./node_modules/graphql-request/build/esm/defaultJsonSerializer.js","webpack://cyb/./node_modules/graphql-request/build/esm/createRequestBody.js","webpack://cyb/./node_modules/graphql-request/build/esm/helpers.js","webpack://cyb/./node_modules/graphql-request/build/esm/parseArgs.js","webpack://cyb/./node_modules/graphql/language/printString.mjs","webpack://cyb/./node_modules/graphql/language/visitor.mjs","webpack://cyb/./node_modules/graphql/language/printer.mjs","webpack://cyb/./node_modules/graphql-request/build/esm/resolveRequestDocument.js","webpack://cyb/./node_modules/graphql-request/build/esm/types.js","webpack://cyb/./node_modules/graphql-request/build/esm/index.js","webpack://cyb/./node_modules/hast-util-sanitize/lib/index.js","webpack://cyb/./node_modules/hast-util-sanitize/lib/schema.js","webpack://cyb/./node_modules/html-void-elements/index.js","webpack://cyb/./node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack://cyb/./node_modules/hast-util-to-html/lib/omission/omission.js","webpack://cyb/./node_modules/hast-util-to-html/lib/omission/closing.js","webpack://cyb/./node_modules/hast-util-to-html/lib/omission/opening.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/element.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/text.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/index.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/comment.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/doctype.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/raw.js","webpack://cyb/./node_modules/hast-util-to-html/lib/handle/root.js","webpack://cyb/./node_modules/hast-util-to-html/lib/index.js","webpack://cyb/./node_modules/hast-util-whitespace/index.js","webpack://cyb/./node_modules/interface-datastore/dist/src/key.js","webpack://cyb/./node_modules/interface-datastore/node_modules/nanoid/index.browser.js","webpack://cyb/./node_modules/internmap/src/index.js","webpack://cyb/./node_modules/ip-regex/index.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/ipfs-unixfs/src/unixfs.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/ipfs-unixfs/src/index.js","webpack://cyb/./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core-utils/src/agent.browser.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-content.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/utils.js","webpack://cyb/./node_modules/ipfs-core-utils/src/multibases.js","webpack://cyb/./node_modules/ipfs-core-utils/src/multicodecs.js","webpack://cyb/./node_modules/ipfs-core-utils/src/multihashes.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js","webpack://cyb/./node_modules/ipfs-core-utils/src/mode-to-string.js","webpack://cyb/./node_modules/ipfs-core-utils/src/multipart-request.browser.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js","webpack://cyb/./node_modules/ipfs-core-utils/src/pins/normalise-input.js","webpack://cyb/./node_modules/ipfs-core-utils/src/to-url-string.js","webpack://cyb/./node_modules/ipfs-core/node_modules/ipfs-unixfs/src/unixfs.js","webpack://cyb/./node_modules/ipfs-core/node_modules/ipfs-unixfs/src/index.js","webpack://cyb/./node_modules/ipfs-core/src/errors.js","webpack://cyb/./node_modules/is-ipfs/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core-utils/src/errors.js","webpack://cyb/./node_modules/ipfs-core-utils/src/with-timeout-option.js","webpack://cyb/./node_modules/ipfs-core-utils/src/to-cid-and-path.js","webpack://cyb/./node_modules/ipfs-core/src/utils.js","webpack://cyb/./node_modules/ipfs-core/src/utils/service.js","webpack://cyb/./node_modules/ipfs-core-config/src/dns.browser.js","webpack://cyb/./node_modules/ipfs-core-config/src/utils/tlru.js","webpack://cyb/./node_modules/ipfs-core/src/components/dns.js","webpack://cyb/./node_modules/ipfs-core/src/components/resolve.js","webpack://cyb/./node_modules/ipfs-repo/src/pin-types.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/ls.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/add-all.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/add.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/rm-all.js","webpack://cyb/./node_modules/ipfs-core/src/components/pin/rm.js","webpack://cyb/./node_modules/ipns/dist/src/errors.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/utils.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/codec.js","webpack://cyb/./node_modules/ipns/dist/src/pb/ipns.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/codecs/enum.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/codecs/message.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/encode.js","webpack://cyb/./node_modules/ipns/node_modules/protons-runtime/dist/src/decode.js","webpack://cyb/./node_modules/ipns/dist/src/utils.js","webpack://cyb/./node_modules/ipns/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/publisher.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/republisher.js","webpack://cyb/./node_modules/ipns/dist/src/validator.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/resolver.js","webpack://cyb/./node_modules/ipfs-core/src/utils/tlru.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/index.js","webpack://cyb/./node_modules/ipns/dist/src/selector.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/routing/pubsub-datastore.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/routing/offline-datastore.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/routing/dht-datastore.js","webpack://cyb/./node_modules/ipfs-core/src/components/ipns.js","webpack://cyb/./node_modules/ipfs-core/src/ipns/routing/config.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/utils.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/publish.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/resolve.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/pubsub/utils.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/pubsub/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/pubsub/cancel.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/pubsub/state.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/pubsub/subs.js","webpack://cyb/./node_modules/ipfs-core/src/components/name/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/refs/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/refs/local.js","webpack://cyb/./node_modules/ipfs-core/src/components/bitswap/stat.js","webpack://cyb/./node_modules/ipfs-core/src/components/bitswap/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/bitswap/wantlist.js","webpack://cyb/./node_modules/ipfs-core/src/components/bitswap/wantlist-for-peer.js","webpack://cyb/./node_modules/ipfs-core/src/components/bitswap/unwant.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/utils.js","webpack://cyb/./node_modules/ipfs-core-config/src/config.browser.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/add.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/list.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/rm.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/clear.js","webpack://cyb/./node_modules/ipfs-core/src/components/bootstrap/reset.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/utils.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/get.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/put.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/rm.js","webpack://cyb/./node_modules/ipfs-core/src/components/block/stat.js","webpack://cyb/./node_modules/it-batch/dist/src/index.js","webpack://cyb/./node_modules/it-parallel-batch/dist/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/options.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/unixfs.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/utils/persist.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/buffer-importer.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dag-builder/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dir.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dir-flat.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/bucket.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/consumable-buffer.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/consumable-hash.js","webpack://cyb/./node_modules/hamt-sharding/dist/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/dir-sharded.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/flat-to-shard.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/utils/to-path-components.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/tree-builder.js","webpack://cyb/./node_modules/ipfs-unixfs-importer/src/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/add-all/utils.js","webpack://cyb/./node_modules/ipfs-core/src/components/add-all/index.js","webpack://cyb/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/ipfs-unixfs/src/unixfs.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/node_modules/ipfs-unixfs/src/index.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/index.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/raw.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/dag-cbor.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/identity.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/resolvers/index.js","webpack://cyb/./node_modules/ipfs-unixfs-exporter/src/index.js","webpack://cyb/./node_modules/it-tar/dist/src/extract-headers.js","webpack://cyb/./node_modules/it-to-buffer/dist/src/index.js","webpack://cyb/./node_modules/it-tar/dist/src/pack-headers.js","webpack://cyb/./node_modules/it-tar/dist/src/pack.js","webpack://cyb/./node_modules/ipfs-core/src/components/root.js","webpack://cyb/./node_modules/ipfs-core/src/components/add.js","webpack://cyb/./node_modules/ipfs-core/src/components/cat.js","webpack://cyb/./node_modules/ipfs-core/src/components/get.js","webpack://cyb/./node_modules/ipfs-core/src/components/ls.js","webpack://cyb/./node_modules/ipfs-core/src/version.js","webpack://cyb/./node_modules/ipfs-core/src/components/id.js","webpack://cyb/./node_modules/just-safe-set/index.mjs","webpack://cyb/./node_modules/ipfs-core/src/components/config/profiles.js","webpack://cyb/./node_modules/ipfs-core/src/components/config/index.js","webpack://cyb/./node_modules/@ipld/car/src/encoder.js","webpack://cyb/./node_modules/@ipld/car/src/iterator-channel.js","webpack://cyb/./node_modules/@ipld/car/src/header-validator.js","webpack://cyb/./node_modules/@ipld/car/src/decoder-common.js","webpack://cyb/./node_modules/@ipld/car/src/decoder.js","webpack://cyb/./node_modules/@ipld/car/src/writer-browser.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/export.js","webpack://cyb/./node_modules/@ipld/car/src/iterator.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/import.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/get.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/resolve.js","webpack://cyb/./node_modules/ipfs-core/src/components/dag/put.js","webpack://cyb/./node_modules/ipfs-core-config/src/preload.browser.js","webpack://cyb/./node_modules/ipfs-core/src/preload.js","webpack://cyb/./node_modules/ipfs-core/src/mfs-preload.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/create-lock.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/with-mfs-root.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/to-path-components.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/to-mfs-path.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/stat.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/to-trail.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/persist.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/hamt-constants.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/dir-sharded.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/add-link.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/update-tree.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/update-mfs-root.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/mkdir.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/create-node.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/cp.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/remove-link.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/rm.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/chmod.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/flush.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/mv.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/touch.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/read.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/write.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/ls.js","webpack://cyb/./node_modules/ipfs-core/src/components/files/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/gen.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/list.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/rm.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/rename.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/export.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/import.js","webpack://cyb/./node_modules/ipfs-core/src/components/key/info.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/get.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/links.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/put.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/patch/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/patch/add-link.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/patch/append-data.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/patch/rm-link.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/patch/set-data.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/data.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/new.js","webpack://cyb/./node_modules/ipfs-core/src/components/object/stat.js","webpack://cyb/./node_modules/ipfs-core/src/components/repo/gc.js","webpack://cyb/./node_modules/ipfs-core/src/components/repo/stat.js","webpack://cyb/./node_modules/ipfs-repo/src/constants.js","webpack://cyb/./node_modules/ipfs-core/src/components/repo/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/repo/version.js","webpack://cyb/./node_modules/ipfs-core/src/components/stats/bw.js","webpack://cyb/./node_modules/ipfs-core/src/components/stats/index.js","webpack://cyb/./node_modules/just-safe-get/index.mjs","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-8/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/pin.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/utils.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/pin-set.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/utils.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-10/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-11/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/proto-book.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/address-book.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/peer.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/envelope.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/peer-record.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/migrations/index.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/errors.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/repo/init.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/repo/version.js","webpack://cyb/./node_modules/ipfs-repo-migrations/src/index.js","webpack://cyb/./node_modules/ipfs-repo/src/errors.js","webpack://cyb/./node_modules/ipfs-repo/src/utils/level.js","webpack://cyb/./node_modules/ipfs-repo/src/version.js","webpack://cyb/./node_modules/ipfs-repo/src/config.js","webpack://cyb/./node_modules/ipfs-repo/src/spec.js","webpack://cyb/./node_modules/ipfs-repo/src/api-addr.js","webpack://cyb/./node_modules/ipfs-repo/src/idstore.js","webpack://cyb/./node_modules/ipfs-repo/src/locks/memory.js","webpack://cyb/./node_modules/ipfs-repo/src/default-options.js","webpack://cyb/./node_modules/ipfs-repo/src/default-datastore.js","webpack://cyb/./node_modules/ipfs-repo/src/utils/blockstore.js","webpack://cyb/./node_modules/ipfs-repo/src/utils/walk-dag.js","webpack://cyb/./node_modules/ipfs-repo/node_modules/quick-lru/index.js","webpack://cyb/./node_modules/ipfs-repo/src/pin-manager.js","webpack://cyb/./node_modules/ipfs-repo/src/pinned-blockstore.js","webpack://cyb/./node_modules/ipfs-repo/src/gc.js","webpack://cyb/./node_modules/ipfs-repo/src/index.js","webpack://cyb/./node_modules/ipfs-core-config/src/repo.browser.js","webpack://cyb/./node_modules/ipfs-core-config/src/libp2p-pubsub-routers.browser.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/core.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/configure.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/mode-to-string.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/parse-mtime.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/to-url-search-params.js","webpack://cyb/./node_modules/ipfs-http-client/src/bitswap/wantlist.js","webpack://cyb/./node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js","webpack://cyb/./node_modules/ipfs-http-client/src/bitswap/stat.js","webpack://cyb/./node_modules/ipfs-http-client/src/bitswap/unwant.js","webpack://cyb/./node_modules/ipfs-http-client/src/bitswap/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/block/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/abort-signal.js","webpack://cyb/./node_modules/ipfs-http-client/src/block/put.js","webpack://cyb/./node_modules/ipfs-http-client/src/block/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/block/stat.js","webpack://cyb/./node_modules/ipfs-http-client/src/block/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/add.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/clear.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/list.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/reset.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/bootstrap/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/profiles/apply.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/object-to-camel.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/profiles/list.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/profiles/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/get-all.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/replace.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/set.js","webpack://cyb/./node_modules/ipfs-http-client/src/config/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/export.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/resolve.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/import.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/put.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/resolve.js","webpack://cyb/./node_modules/ipfs-http-client/src/dag/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/response-types.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/map-event.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/find-peer.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/find-provs.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/provide.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/put.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/query.js","webpack://cyb/./node_modules/ipfs-http-client/src/dht/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/diag/cmds.js","webpack://cyb/./node_modules/ipfs-http-client/src/diag/net.js","webpack://cyb/./node_modules/ipfs-http-client/src/diag/sys.js","webpack://cyb/./node_modules/ipfs-http-client/src/diag/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/chmod.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/cp.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/flush.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/mkdir.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/mv.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/read.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/stat.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/touch.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/write.js","webpack://cyb/./node_modules/ipfs-http-client/src/files/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/export.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/gen.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/import.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/info.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/list.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/rename.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/key/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/log/level.js","webpack://cyb/./node_modules/ipfs-http-client/src/log/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/log/tail.js","webpack://cyb/./node_modules/ipfs-http-client/src/log/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/publish.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/resolve.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/pubsub/cancel.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/pubsub/state.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/pubsub/subs.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/pubsub/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/name/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/data.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/links.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/new.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/put.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/stat.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/patch/add-link.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/patch/append-data.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/patch/rm-link.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/patch/set-data.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/patch/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/object/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/add-all.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/add.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/rm-all.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/utils.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/add.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/rm-all.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/service/utils.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/service/add.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/service/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/service/rm.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/service/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/remote/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/pin/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/peers.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/publish.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/subscribe.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/unsubscribe.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js","webpack://cyb/./node_modules/ipfs-http-client/src/pubsub/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/refs/local.js","webpack://cyb/./node_modules/ipfs-http-client/src/refs/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/repo/gc.js","webpack://cyb/./node_modules/ipfs-http-client/src/repo/stat.js","webpack://cyb/./node_modules/ipfs-http-client/src/repo/version.js","webpack://cyb/./node_modules/ipfs-http-client/src/repo/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/stats/bw.js","webpack://cyb/./node_modules/ipfs-http-client/src/stats/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/addrs.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/connect.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/disconnect.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/local-addrs.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/peers.js","webpack://cyb/./node_modules/ipfs-http-client/src/swarm/index.js","webpack://cyb/./node_modules/ipfs-http-client/src/add-all.js","webpack://cyb/./node_modules/ipfs-http-client/src/add.js","webpack://cyb/./node_modules/ipfs-http-client/src/cat.js","webpack://cyb/./node_modules/ipfs-http-client/src/commands.js","webpack://cyb/./node_modules/ipfs-http-client/src/dns.js","webpack://cyb/./node_modules/ipfs-http-client/src/get-endpoint-config.js","webpack://cyb/./node_modules/ipfs-http-client/src/get.js","webpack://cyb/./node_modules/ipfs-http-client/src/id.js","webpack://cyb/./node_modules/ipfs-http-client/src/is-online.js","webpack://cyb/./node_modules/ipfs-http-client/src/ls.js","webpack://cyb/./node_modules/ipfs-http-client/src/mount.js","webpack://cyb/./node_modules/ipfs-http-client/src/ping.js","webpack://cyb/./node_modules/ipfs-http-client/src/resolve.js","webpack://cyb/./node_modules/ipfs-http-client/src/start.js","webpack://cyb/./node_modules/ipfs-http-client/src/stop.js","webpack://cyb/./node_modules/ipfs-http-client/src/version.js","webpack://cyb/./node_modules/ipfs-core/node_modules/p-timeout/index.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/dist/src/socket-to-conn.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/dist/src/constants.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/node_modules/@multiformats/mafmt/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/dist/src/index.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/dist/src/listener.browser.js","webpack://cyb/./node_modules/ipfs-core/node_modules/@libp2p/websockets/dist/src/filters.js","webpack://cyb/./node_modules/ipfs-core/src/components/libp2p.js","webpack://cyb/./node_modules/ipfs-core-config/src/libp2p.browser.js","webpack://cyb/./node_modules/ipfs-http-client/src/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/storage.js","webpack://cyb/./node_modules/ipfs-bitswap/src/utils/varint-encoder.js","webpack://cyb/./node_modules/ipfs-bitswap/src/wantlist/entry.js","webpack://cyb/./node_modules/ipfs-bitswap/src/message/message.js","webpack://cyb/./node_modules/ipfs-bitswap/src/wantlist/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/message/entry.js","webpack://cyb/./node_modules/ipfs-bitswap/src/utils/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/message/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/constants.js","webpack://cyb/./node_modules/just-debounce-it/index.mjs","webpack://cyb/./node_modules/ipfs-bitswap/src/want-manager/msg-queue.js","webpack://cyb/./node_modules/ipfs-bitswap/src/want-manager/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/network.js","webpack://cyb/./node_modules/ipfs-bitswap/src/decision-engine/ledger.js","webpack://cyb/./node_modules/ipfs-bitswap/src/utils/sorted-map.js","webpack://cyb/./node_modules/ipfs-bitswap/src/decision-engine/req-queue.js","webpack://cyb/./node_modules/ipfs-bitswap/src/decision-engine/task-merger.js","webpack://cyb/./node_modules/ipfs-bitswap/src/decision-engine/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/notifications.js","webpack://cyb/./node_modules/ipfs-bitswap/src/stats/stat.js","webpack://cyb/./node_modules/ipfs-bitswap/src/stats/index.js","webpack://cyb/./node_modules/ipfs-bitswap/src/bitswap.js","webpack://cyb/./node_modules/ipfs-core/src/block-storage.js","webpack://cyb/./node_modules/ipfs-core/src/components/network.js","webpack://cyb/./node_modules/ipfs-bitswap/src/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/addrs.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/connect.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/disconnect.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/local-addrs.js","webpack://cyb/./node_modules/ipfs-core/src/components/swarm/peers.js","webpack://cyb/./node_modules/ipfs-core/src/components/ping.js","webpack://cyb/./node_modules/ipfs-core/src/components/dht.js","webpack://cyb/./node_modules/ipfs-core/src/components/pubsub.js","webpack://cyb/./node_modules/ipfs-core/src/components/index.js","webpack://cyb/./node_modules/ipfs-core/src/components/is-online.js","webpack://cyb/./node_modules/ipfs-core/src/components/start.js","webpack://cyb/./node_modules/ipfs-core/src/components/stop.js","webpack://cyb/./node_modules/ipfs-core/src/components/version.js","webpack://cyb/./node_modules/ipfs-core/src/index.js","webpack://cyb/./node_modules/is-loopback-addr/dist/src/index.js","webpack://cyb/./node_modules/it-batched-bytes/dist/src/index.js","webpack://cyb/./node_modules/it-drain/dist/src/index.js","webpack://cyb/./node_modules/it-filter/dist/src/index.js","webpack://cyb/./node_modules/it-first/dist/src/index.js","webpack://cyb/./node_modules/it-handshake/dist/src/index.js","webpack://cyb/./node_modules/it-last/dist/src/index.js","webpack://cyb/./node_modules/it-length-prefixed/dist/src/encode.js","webpack://cyb/./node_modules/it-length-prefixed/dist/src/alloc.js","webpack://cyb/./node_modules/it-length-prefixed/dist/src/decode.js","webpack://cyb/./node_modules/it-length/dist/src/index.js","webpack://cyb/./node_modules/it-map/dist/src/index.js","webpack://cyb/./node_modules/it-merge/dist/src/index.js","webpack://cyb/./node_modules/it-pair/dist/src/index.js","webpack://cyb/./node_modules/it-pair/dist/src/duplex.js","webpack://cyb/./node_modules/it-parallel/dist/src/index.js","webpack://cyb/./node_modules/it-pb-stream/dist/src/index.js","webpack://cyb/./node_modules/it-peekable/dist/src/index.js","webpack://cyb/./node_modules/it-pipe/dist/src/index.js","webpack://cyb/./node_modules/it-pushable/dist/src/fifo.js","webpack://cyb/./node_modules/it-pushable/dist/src/index.js","webpack://cyb/./node_modules/it-reader/dist/src/index.js","webpack://cyb/./node_modules/it-sort/dist/src/index.js","webpack://cyb/./node_modules/it-sort/node_modules/it-all/dist/src/index.js","webpack://cyb/./node_modules/it-take/dist/src/index.js","webpack://cyb/./node_modules/it-ws/dist/src/web-socket.browser.js","webpack://cyb/./node_modules/it-ws/dist/src/source.js","webpack://cyb/./node_modules/it-ws/dist/src/ready.js","webpack://cyb/./node_modules/it-ws/dist/src/sink.js","webpack://cyb/./node_modules/it-ws/dist/src/duplex.js","webpack://cyb/./node_modules/it-ws/dist/src/ws-url.js","webpack://cyb/./node_modules/it-ws/dist/src/client.js"],"sourcesContent":["module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.devAssert = devAssert;\n\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.dedentBlockStringLines = dedentBlockStringLines;\nexports.isPrintableAsBlockString = isPrintableAsBlockString;\nexports.printBlockString = printBlockString;\n\nvar _characterClasses = require('./characterClasses.js');\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (\n    i < str.length &&\n    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))\n  ) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every(\n        (line) =>\n          line.length === 0 ||\n          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),\n      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine =\n    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isDigit = isDigit;\nexports.isLetter = isLetter;\nexports.isNameContinue = isNameContinue;\nexports.isNameStart = isNameStart;\nexports.isWhiteSpace = isWhiteSpace;\n\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printString = printString;\n\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.BREAK = void 0;\nexports.getEnterLeaveForKind = getEnterLeaveForKind;\nexports.getVisitFn = getVisitFn;\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _ast = require('./ast.js');\n\nvar _kinds = require('./kinds.js');\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      (0, _ast.isNode)(node) ||\n        (0, _devAssert.devAssert)(\n          false,\n          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,\n        );\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if ((0, _ast.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/* This file is generated from the Unicode IDNA table, using\n   the build-unicode-tables.py script. Please edit that\n   script instead of this file. */\n\n/* istanbul ignore next */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () { return factory(); });\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.uts46_map = factory();\n  }\n}(this, function () {\nvar blocks = [\n  new Uint32Array([2157250,2157314,2157378,2157442,2157506,2157570,2157634,0,2157698,2157762,2157826,2157890,2157954,0,2158018,0]),\n  new Uint32Array([2179041,6291456,2179073,6291456,2179105,6291456,2179137,6291456,2179169,6291456,2179201,6291456,2179233,6291456,2179265,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,2113729,2197345,2197377,2113825,2197409,2197441,2113921,2197473,2114017,2197505,2197537,2197569,2197601,2197633,2197665]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672,23068672,0,0,0,0,23068672]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064]),\n  new Uint32Array([2196001,2196033,2196065,2196097,2196129,2196161,2196193,2196225,2196257,2196289,2196321,2196353,2196385,2196417,2196449,2196481]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2177025,6291456,2177057,6291456,2177089,6291456,2177121,6291456,2177153,6291456,2177185,6291456,2177217,6291456,2177249,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456]),\n  new Uint32Array([2134435,2134531,2134627,2134723,2134723,2134819,2134819,2134915,2134915,2135011,2105987,2135107,2135203,2135299,2131587,2135395]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,2168673,2169249,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354,2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354]),\n  new Uint32Array([2125219,2125315,2152834,2152898,2125411,2152962,2153026,2125506,2125507,2125603,2153090,2153154,2153218,2153282,2153346,2105348]),\n  new Uint32Array([2203393,6291456,2203425,6291456,2203457,6291456,2203489,6291456,6291456,6291456,6291456,2203521,6291456,2181281,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,6291456,2145538,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,6291456]),\n  new Uint32Array([2139426,2160834,2160898,2160962,2134242,2161026,2161090,2161154,2161218,2161282,2161346,2161410,2138658,2161474,2161538,2134722]),\n  new Uint32Array([2119939,2124930,2125026,2106658,2125218,2128962,2129058,2129154,2129250,2129346,2129442,2108866,2108770,2150466,2150530,2150594]),\n  new Uint32Array([2201601,6291456,2201633,6291456,2201665,6291456,2201697,6291456,2201729,6291456,2201761,6291456,2201793,6291456,2201825,6291456]),\n  new Uint32Array([2193537,2193569,2193601,2193633,2193665,2193697,2193729,2193761,2193793,2193825,2193857,2193889,2193921,2193953,2193985,2194017]),\n  new Uint32Array([6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2190561,6291456,2190593,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2190625,6291456,2190657,6291456,23068672]),\n  new Uint32Array([2215905,2215937,2215969,2216001,2216033,2216065,2216097,2216129,2216161,2216193,2216225,2216257,2105441,2216289,2216321,2216353]),\n  new Uint32Array([23068672,18884130,23068672,23068672,23068672,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2191233,2191265,2191297,2191329,2191361,2191393,2191425,2117377,2191457,2191489,2191521,2191553,2191585,2191617,2191649,2117953]),\n  new Uint32Array([2132227,2132323,2132419,2132419,2132515,2132515,2132611,2132707,2132707,2132803,2132899,2132899,2132995,2132995,2133091,2133187]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10609889,10610785,10609921,10610817,2222241]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([2219969,2157121,2157441,2157505,2157889,2157953,2220001,2158465,2158529,10575617,2156994,2157058,2129923,2130019,2157122,2157186]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2185249,6291456,2185281,6291456,2185313,6291456,2185345,6291456,2185377,6291456,2185409,6291456,2185441,6291456,2185473,6291456]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,6291456,0]),\n  new Uint32Array([2183361,6291456,2183393,6291456,2183425,6291456,2183457,6291456,2183489,6291456,2183521,6291456,2183553,6291456,2183585,6291456]),\n  new Uint32Array([2192161,2192193,2192225,2192257,2192289,2192321,2192353,2192385,2192417,2192449,2192481,2192513,2192545,2192577,2192609,2192641]),\n  new Uint32Array([2212001,2212033,2212065,2212097,2212129,2212161,2212193,2212225,2212257,2212289,2212321,2212353,2212385,2212417,2212449,2207265]),\n  new Uint32Array([2249825,2249857,2249889,2249921,2249954,2250018,2250082,2250145,2250177,2250209,2250241,2250274,2250337,2250370,2250433,2250465]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147905,2147969,2148033,2148097,2148161,2148225,2148289,2148353]),\n  new Uint32Array([10485857,6291456,2197217,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2180353,2180385,2144033,2180417,2180449,2180481,2180513,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10610209,10610465,10610241,10610753,10609857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2223842,2223906,2223970,2224034,2224098,2224162,2224226,2224290,2224354,2224418,2224482,2224546,2224610,2224674,2224738,2224802]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,18923650,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,18923714,23068672,23068672]),\n  new Uint32Array([2126179,2125538,2126275,2126371,2126467,2125634,2126563,2105603,2105604,2125346,2126659,2126755,2126851,2098179,2098181,2098182]),\n  new Uint32Array([2227426,2227490,2227554,2227618,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2192353,2240642,2240642,2240705,2240737,2240737,2240769,2240802,2240866,2240929,2240961,2240993,2241025,2241057,2241089,2241121]),\n  new Uint32Array([6291456,2170881,2170913,2170945,6291456,2170977,6291456,2171009,2171041,6291456,6291456,6291456,2171073,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2132226,2132514,2163586,2132610,2160386,2133090,2133186,2160450,2160514,2160578,2133570,2106178,2160642,2133858,2160706,2160770]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10532162,10532226,10532290,10532354,10532418,10532482,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2098209,2108353,2108193,2108481,2170241,2111713,2105473,2105569,2105601,2112289,2112481,2098305,2108321,0,0,0]),\n  new Uint32Array([2209121,2209153,2209185,2209217,2209249,2209281,2209313,2209345,2209377,2209409,2209441,2209473,2207265,2209505,2209537,2209569]),\n  new Uint32Array([2189025,6291456,2189057,6291456,2189089,6291456,2189121,6291456,2189153,6291456,2189185,6291456,2189217,6291456,2189249,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2165764,2140004]),\n  new Uint32Array([2215105,6291456,2215137,6291456,6291456,2215169,2215201,6291456,6291456,6291456,2215233,2215265,2215297,2215329,2215361,2215393]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,23068672,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([10505091,10505187,10505283,10505379,10505475,10505571,10505667,10505763,10505859,10505955,10506051,10506147,10506243,10506339,10506435,10506531]),\n  new Uint32Array([2229730,2229794,2229858,2229922,2229986,2230050,2230114,2230178,2230242,2230306,2230370,2230434,2230498,2230562,2230626,2230690]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,0,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([6291456,6291456,6291456,6291456,10502115,10502178,10502211,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2190305,6291456,2190337,6291456,2190369,6291456,2190401,6291456,2190433,6291456,2190465,6291456,2190497,6291456,2190529,6291456]),\n  new Uint32Array([2173793,2173985,2174017,6291456,2173761,2173697,6291456,2174689,6291456,2174017,2174721,6291456,6291456,2174753,2174785,2174817]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609,2100033]),\n  new Uint32Array([2132898,2163842,2163906,2133282,2132034,2131938,2137410,2132802,2132706,2164866,2133282,2160578,2165186,2165186,6291456,6291456]),\n  new Uint32Array([10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059,10501155,10501251,10501347,10501443]),\n  new Uint32Array([2163458,2130978,2131074,2131266,2131362,2163522,2160130,2132066,2131010,2131106,2106018,2131618,2131298,2132034,2131938,2137410]),\n  new Uint32Array([2212961,2116993,2212993,2213025,2213057,2213089,2213121,2213153,2213185,2213217,2213249,2209633,2213281,2213313,2213345,2213377]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2113729,2113825,2113921,2114017,2114113,2114209,2114305,2114401,2114497,2114593,2114689,2114785,2114881,2114977,2115073,2115169]),\n  new Uint32Array([2238177,2238209,2238241,2238273,2238305,2238337,2238337,2217537,2238369,2238401,2238433,2238465,2215649,2238497,2238529,2238561]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0]),\n  new Uint32Array([6291456,0,6291456,2145026,0,6291456,2145090,0,6291456,6291456,0,0,23068672,0,23068672,23068672]),\n  new Uint32Array([2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129,2100289]),\n  new Uint32Array([6291456,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0]),\n  new Uint32Array([2187681,2187713,2187745,2187777,2187809,2187841,2187873,2187905,2187937,2187969,2188001,2188033,2188065,2188097,2188129,2188161]),\n  new Uint32Array([0,10554498,10554562,10554626,10554690,10554754,10554818,10554882,10554946,10555010,10555074,6291456,6291456,0,0,0]),\n  new Uint32Array([2235170,2235234,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0]),\n  new Uint32Array([2181153,6291456,2188897,6291456,6291456,2188929,6291456,6291456,6291456,6291456,6291456,6291456,2111905,2100865,2188961,2188993]),\n  new Uint32Array([2100833,2100897,0,0,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,2112289]),\n  new Uint32Array([6291456,2172833,6291456,2172865,2172897,2172929,2172961,6291456,2172993,6291456,2173025,6291456,2173057,6291456,2173089,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,2190721]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456]),\n  new Uint32Array([2184993,6291456,2185025,6291456,2185057,6291456,2185089,6291456,2185121,6291456,2185153,6291456,2185185,6291456,2185217,6291456]),\n  new Uint32Array([2115265,2115361,2115457,2115553,2115649,2115745,2115841,2115937,2116033,2116129,2116225,2116321,2150658,2150722,2200225,6291456]),\n  new Uint32Array([2168321,6291456,2168353,6291456,2168385,6291456,2168417,6291456,2168449,6291456,2168481,6291456,2168513,6291456,2168545,6291456]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,0,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2186625,0,0,6291456,6291456,2186657,2186689,2186721,2173505,0,10496067,10496163,10496259]),\n  new Uint32Array([2178785,6291456,2178817,6291456,2178849,6291456,2178881,6291456,2178913,6291456,2178945,6291456,2178977,6291456,2179009,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2097152,0,0,0,2097152,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2197857,2197889,2197921,2197953,2197985,2198017,0,0,2198049,2198081,2198113,2198145,2198177,2198209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2098209,2167297,2111137,6291456]),\n  new Uint32Array([2171393,6291456,2171425,6291456,2171457,6291456,2171489,6291456,2171521,6291456,2171553,6291456,2171585,6291456,2171617,6291456]),\n  new Uint32Array([2206753,2206785,2195457,2206817,2206849,2206881,2206913,2197153,2197153,2206945,2117857,2206977,2207009,2207041,2207073,2207105]),\n  new Uint32Array([0,0,0,0,0,0,0,23068672,0,0,0,0,2144834,2144898,0,2144962]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,0,2105505,2098241]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,2202049,6291456,2202081,6291456,2202113,6291456,2202145,6291456,2202177,6291456,2202209,6291456,2202241,6291456]),\n  new Uint32Array([10501155,10501251,10501347,10501443,10501539,10501635,10501731,10501827,10501923,10502019,2141731,2105505,2098177,2155586,2166530,0]),\n  new Uint32Array([2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441]),\n  new Uint32Array([2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330,2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10502307,10502403,10502499,10502595,10502691,10502787,10502883,10502979,10503075,10503171,10503267,10503363,10503459,10503555,10503651,10503747]),\n  new Uint32Array([2179937,2179969,2180001,2180033,2156545,2180065,2156577,2180097,2180129,2180161,2180193,2180225,2180257,2180289,2156737,2180321]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,0,0,6291456,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([2227682,2227746,2227810,2227874,2227938,2228002,2228066,2228130,2228194,2228258,2228322,2228386,2228450,2228514,2228578,2228642]),\n  new Uint32Array([2105601,2169121,2108193,2170049,2181025,2181057,2112481,2108321,2108289,2181089,2170497,2100865,2181121,2173601,2173633,2173665]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180641,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,6291456,0,6291456,0,6291456,0,0,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2178273,6291456,2178305,6291456,2178337,6291456,2178369,6291456,2178401,6291456,2178433,6291456,2178465,6291456,2178497,6291456]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2237377,2237409,2236225,2237441,2237473,2217441,2215521,2215553,2217473,2237505,2237537,2209697,2237569,2215585,2237601,2237633]),\n  new Uint32Array([2221985,2165601,2165601,2165665,2165665,2222017,2222017,2165729,2165729,2158913,2158913,2158913,2158913,2097281,2097281,2105921]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2149634,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2176897,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2176929,6291456,2176961,6291456,2176993,6291456]),\n  new Uint32Array([2172641,6291456,2172673,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2172705,2172737,6291456,2172769,2172801,6291456]),\n  new Uint32Array([2099173,2104196,2121667,2099395,2121763,2152258,2152322,2098946,2152386,2121859,2121955,2099333,2122051,2104324,2099493,2122147]),\n  new Uint32Array([6291456,6291456,6291456,2145794,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2145858,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,0,0,6291456,0]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,0,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2239074,2239138,2239201,2239233,2239265,2239297,2239329,2239361,0,2239393,2239425,2239425,2239458,2239521,2239553,2209569]),\n  new Uint32Array([14680064,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,6291456,23068672]),\n  new Uint32Array([2108321,2108289,2113153,2098209,2180897,2180929,2180961,2111137,2098241,2108353,2170241,2170273,2180993,2105825,6291456,2105473]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146114,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2105921,2105921,2105921,2222049,2222049,2130977,2130977,2130977,2130977,2160065,2160065,2160065,2160065,2097729,2097729,2097729]),\n  new Uint32Array([2218145,2214785,2207937,2218177,2218209,2192993,2210113,2212769,2218241,2218273,2216129,2218305,2216161,2218337,2218369,2218401]),\n  new Uint32Array([0,0,0,2156546,2156610,2156674,2156738,2156802,0,0,0,0,0,2156866,23068672,2156930]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2213409,2213441,2213473,2213505,2213537,2213569,2213601,2213633,2213665,2195681,2213697,2213729,2213761,2213793,2213825,2213857]),\n  new Uint32Array([2100033,2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2201857,6291456,2201889,6291456,2201921,6291456,2201953,6291456,2201985,6291456,2202017,6291456,2176193,2176257,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2188193,2188225,2188257,2188289,2188321,2188353,2188385,2188417,2188449,2188481,2188513,2188545,2188577,2188609,2188641,0]),\n  new Uint32Array([10554529,2221089,0,10502113,10562017,10537921,10538049,2221121,2221153,0,0,0,0,0,0,0]),\n  new Uint32Array([2213889,2213921,2213953,2213985,2214017,2214049,2214081,2194177,2214113,2214145,2214177,2214209,2214241,2214273,2214305,2214337]),\n  new Uint32Array([2166978,2167042,2099169,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180545,6291456,6291456,6291456]),\n  new Uint32Array([10518915,10519011,10519107,10519203,2162242,2162306,2159554,2162370,2159362,2159618,2105922,2162434,2159746,2162498,2159810,2159874]),\n  new Uint32Array([2161730,2161794,2135586,2161858,2161922,2137186,2131810,2160290,2135170,2161986,2137954,2162050,2162114,2162178,10518723,10518819]),\n  new Uint32Array([10506627,10506723,10506819,10506915,10507011,10507107,10507203,10507299,10507395,10507491,10507587,10507683,10507779,10507875,10507971,10508067]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2175873,2175905,2175937,2175969,2176001,2176033,2176065,2176097,2176129,2176161,2176193,2176225,2176257,2176289,2176321,2176353]),\n  new Uint32Array([2140006,2140198,2140390,2140582,2140774,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241]),\n  new Uint32Array([0,23068672,0,0,0,0,0,0,0,2145154,2145218,2145282,6291456,0,2145346,0]),\n  new Uint32Array([0,0,0,0,10531458,10495395,2148545,2143201,2173473,2148865,2173505,0,2173537,0,2173569,2149121]),\n  new Uint32Array([10537282,10495683,2148738,2148802,2148866,0,6291456,2148930,2186593,2173473,2148737,2148865,2148802,10495779,10495875,10495971]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2215425,2215457,2215489,2215521,2215553,2215585,2215617,2215649,2215681,2215713,2215745,2215777,2192033,2215809,2215841,2215873]),\n  new Uint32Array([2242049,2242081,2242113,2242145,2242177,2242209,2242241,2242273,2215937,2242305,2242338,2242401,2242433,2242465,2242497,2216001]),\n  new Uint32Array([10554529,2221089,0,0,10562017,10502113,10538049,10537921,2221185,10489601,10489697,10609889,10609921,2141729,2141793,10610273]),\n  new Uint32Array([2141923,2142019,2142115,2142211,2142307,2142403,2142499,2142595,2142691,0,0,0,0,0,0,0]),\n  new Uint32Array([0,2221185,2221217,10609857,10609857,10489601,10489697,10609889,10609921,2141729,2141793,2221345,2221377,2221409,2221441,2187105]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18923970,23068672,23068672,23068672,0,6291456,6291456]),\n  new Uint32Array([2183105,6291456,2183137,6291456,2183169,6291456,2183201,6291456,2183233,6291456,2183265,6291456,2183297,6291456,2183329,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134434,2134818,2097666,2097186,2097474,2097698,2105986,2131586,2132450,2131874,2131778,2135970,2135778,2161602,2136162,2161666]),\n  new Uint32Array([2236865,2236897,2236930,2236993,2237025,2235681,2237058,2237121,2237153,2237185,2237217,2217281,2237250,2191233,2237313,2237345]),\n  new Uint32Array([2190049,6291456,2190081,6291456,2190113,6291456,2190145,6291456,2190177,6291456,2190209,6291456,2190241,6291456,2190273,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2101922,2102050,2102178,2102306,10498755,10498851,10498947,10499043,10499139,10499235,10499331,10499427,10499523,10489604,10489732,10489860]),\n  new Uint32Array([2166914,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2181601,2170561,2181633,2181665,2170753,2181697,2172897,2170881,2181729,2170913,2172929,2113441,2181761,2181793,2171009,2173761]),\n  new Uint32Array([0,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2248001,2248033,2248066,2248130,2248193,2248226,2248289,2248322,2248385,2248417,2216673,2248450,2248514,2248577,2248610,2248673]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2169729,6291456,2169761,6291456,2169793,6291456,2169825,6291456,2169857,2169889,6291456,2169921,6291456,2143329,6291456,2098305]),\n  new Uint32Array([2162178,2163202,2163266,2135170,2136226,2161986,2137954,2159426,2159490,2163330,2159554,2163394,2159682,2139522,2136450,2159746]),\n  new Uint32Array([2173953,2173985,0,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2174209,2174241,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,4271169,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2174273]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2190785,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2189793,6291456,2189825,6291456,2189857,6291456,2189889,6291456,2189921,6291456,2189953,6291456,2189985,6291456,2190017,6291456]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,0,2098305,2108321,2108289,2100865,2113153,2108481,2113345,0,2098209,2111137]),\n  new Uint32Array([2172129,6291456,2172161,6291456,2172193,6291456,2172225,6291456,2172257,6291456,2172289,6291456,2172321,6291456,2172353,6291456]),\n  new Uint32Array([2214753,6291456,2214785,6291456,6291456,2214817,2214849,2214881,2214913,2214945,2214977,2215009,2215041,2215073,2194401,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([10610305,10610337,10575617,2221761,10610401,10610433,10502177,0,10610465,10610497,10610529,10610561,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2187105,2187137,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2199393,2199425,2199457,2199489,2199521,2199553,2199585,2199617,2199649,2199681,2199713,2199745,2199777,2199809,2199841,0]),\n  new Uint32Array([2217249,2217281,2217313,2217345,2217377,2217409,2217441,2217473,2215617,2217505,2217537,2217569,2214753,2217601,2217633,2217665]),\n  new Uint32Array([2170273,2170305,6291456,2170337,2170369,6291456,2170401,2170433,2170465,6291456,6291456,6291456,2170497,2170529,6291456,2170561]),\n  new Uint32Array([2188673,6291456,2188705,2188737,2188769,6291456,6291456,2188801,6291456,2188833,6291456,2188865,6291456,2180929,2181505,2180897]),\n  new Uint32Array([10489988,10490116,10490244,10490372,10490500,10490628,10490756,10490884,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147393,2147457,2147521,2147585,2147649,2147713,2147777,2147841]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2241153,2241185,2241217,2215809,2241250,2241313,2241345,2241377,2217921,2241377,2241409,2215873,2241441,2241473,2241505,2241537]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220417,2220417,2220449,2220449,2220481,2220481,2220513,2220513,2220545,2220545,2220577,2220577,2220609,2220609,2220641,2220641]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2144002,0,6291456,6291456,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2167105,2167137,2167169,2167201,2167233,2167265,2167297,2167329,2167361,2167393,2167425,2167457,2167489,2167521,2167553,2167585]),\n  new Uint32Array([10575521,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2234146,2234210,2234274,2234338,2234402,2234466,2234530,2234594,2234658,2234722,2234786,2234850,2234914,2234978,2235042,2235106]),\n  new Uint32Array([0,0,0,0,0,0,0,2180577,0,0,0,0,0,2180609,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456]),\n  new Uint32Array([2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2242529,2242561,2242593,2242625,2242657,2242689,2242721,2242753,2207937,2218177,2242785,2242817,2242849,2242882,2242945,2242977]),\n  new Uint32Array([2118049,2105345,2118241,2105441,2118433,2118529,2118625,2118721,2118817,2200257,2200289,2191809,2200321,2200353,2200385,2200417]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2185505,6291456,2185537,6291456,2185569,6291456,2185601,6291456,2185633,6291456,2185665,6291456,2185697,6291456,2185729,6291456]),\n  new Uint32Array([2231970,2232034,2232098,2232162,2232226,2232290,2232354,2232418,2232482,2232546,2232610,2232674,2232738,2232802,2232866,2232930]),\n  new Uint32Array([2218625,2246402,2246466,2246530,2246594,2246657,2246689,2246689,2218657,2219681,2246721,2246753,2246785,2246818,2246881,2208481]),\n  new Uint32Array([2197025,2197057,2197089,2197121,2197153,2197185,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2219137,2216961,2219169,2219201,2219233,2219265,2219297,2217025,2215041,2219329,2217057,2219361,2217089,2219393,2197153,2219426]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713]),\n  new Uint32Array([2243522,2243585,2243617,2243649,2243681,2210113,2243713,2243746,2243810,2243874,2243937,2243970,2244033,2244065,2244097,2244129]),\n  new Uint32Array([2178017,6291456,2178049,6291456,2178081,6291456,2178113,6291456,2178145,6291456,2178177,6291456,2178209,6291456,2178241,6291456]),\n  new Uint32Array([10553858,2165314,10518722,6291456,10518818,0,10518914,2130690,10519010,2130786,10519106,2130882,10519202,2165378,10554050,2165506]),\n  new Uint32Array([0,0,2135491,2135587,2135683,2135779,2135875,2135971,2135971,2136067,2136163,2136259,2136355,2136355,2136451,2136547]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2220033,2220033,2220065,2220065,2220065,2220065,2220097,2220097,2220097,2220097,2220129,2220129,2220129,2220129,2220161,2220161]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2100897,2100898,2100899,2150018,2100865,2100866,2100867,2100868,2150082,2108481,2109858,2109859,2105569,2105505,2098241,2105601]),\n  new Uint32Array([2097217,2097505,2097505,2097505,2097505,2165570,2165570,2165634,2165634,2165698,2165698,2097858,2097858,0,0,2097152]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10503843,10503939,10504035,10504131,10504227,10504323,10504419,10504515,10504611,10504707,10504803,10504899,10504995,10491140,10491268,0]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,2235297,2220769,2235329,2235361]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2222401,2222433,2222465,10531394,2222497,2222529,2222561,0,2222593,2222625,2222657,2222689,2222721,2222753,2222785,0]),\n  new Uint32Array([2184481,6291456,2184513,6291456,2184545,6291456,2184577,6291456,2184609,6291456,2184641,6291456,2184673,6291456,2184705,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2105570,2156034,2126947,2156098,2153666,2127043,2127139,2156162,0,2127235,2156226,2156290,2156354,2156418,2127331,2127427]),\n  new Uint32Array([2215905,2207041,2153185,2241569,2241601,2241633,2241665,2241697,2241730,2241793,2241825,2241857,2241889,2241921,2241954,2242017]),\n  new Uint32Array([2203777,6291456,2203809,6291456,2203841,6291456,2203873,6291456,2203905,6291456,2173121,2180993,2181249,2203937,2181313,0]),\n  new Uint32Array([2168577,6291456,2168609,6291456,2168641,6291456,2168673,6291456,2168705,6291456,2168737,6291456,2168769,6291456,2168801,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2210113,2195521,2210145,2210177,2210209,2210241,2210273,2210305,2210337,2210369,2210401,2210433,2210465,2210497,2210529,2210561]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2228706,2228770,2228834,2228898,2228962,2229026,2229090,2229154,2229218,2229282,2229346,2229410,2229474,2229538,2229602,2229666]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,18874368,18874368,18874368,0,0]),\n  new Uint32Array([2133089,2133281,2133281,2133281,2133281,2160577,2160577,2160577,2160577,2097441,2097441,2097441,2097441,2133857,2133857,2133857]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089]),\n  new Uint32Array([2178529,6291456,2178561,6291456,2178593,6291456,2178625,6291456,2178657,6291456,2178689,6291456,2178721,6291456,2178753,6291456]),\n  new Uint32Array([2221025,2221025,2221057,2221057,2159329,2159329,2159329,2159329,2097217,2097217,2158914,2158914,2158978,2158978,2159042,2159042]),\n  new Uint32Array([2208161,2208193,2208225,2208257,2194433,2208289,2208321,2208353,2208385,2208417,2208449,2208481,2208513,2208545,2208577,2208609]),\n  new Uint32Array([2169217,6291456,2169249,6291456,2169281,6291456,2169313,6291456,2169345,6291456,2169377,6291456,2169409,6291456,2169441,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133187,2133283,2133283,2133379,2133475,2133571,2133667,2133667,2133763,2133859,2133955,2134051,2134147,2134147,2134243,2134339]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,0]),\n  new Uint32Array([2193089,2193121,2193153,2193185,2117665,2117569,2193217,2193249,2193281,2193313,2193345,2193377,2193409,2193441,2193473,2193505]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184225,6291456,2184257,6291456,2184289,6291456,2184321,6291456,2184353,6291456,2184385,6291456,2184417,6291456,2184449,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2100833,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2200801,2200833,2200865,0]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2181153,2105505,2181185,2167617,2180993]),\n  new Uint32Array([2160002,2160066,2160130,2160194,2160258,2132066,2131010,2131106,2106018,2131618,2160322,2131298,2132034,2131938,2137410,2132226]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2183617,6291456,2183649,6291456,2183681,6291456,2183713,6291456,2183745,6291456,2183777,6291456,2183809,6291456,2183841,6291456]),\n  new Uint32Array([0,6291456,6291456,0,6291456,0,0,6291456,6291456,0,6291456,0,0,6291456,0,0]),\n  new Uint32Array([2250977,2251009,2251041,2251073,2195009,2251106,2251169,2251201,2251233,2251265,2251297,2251330,2251394,2251457,2251489,2251521]),\n  new Uint32Array([2205729,2205761,2205793,2205825,2205857,2205889,2205921,2205953,2205985,2206017,2206049,2206081,2206113,2206145,2206177,2206209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2143170,2168993,6291456,2169025,6291456,2169057,6291456,2169089,6291456,2143234,2169121,6291456,2169153,6291456,2169185,6291456]),\n  new Uint32Array([23068672,23068672,2190689,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2248706,2248769,2248801,2248833,2248865,2248897,2248929,2248962,2249026,2249090,2249154,2240705,2249217,2249249,2249281,2249313]),\n  new Uint32Array([10485857,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10495394,6291456,2098209,6291456,6291456,2097152,6291456,10531394]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([6291456,2186977,6291456,6291456,6291456,6291456,6291456,10537858,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2209601,2209633,2209665,2209697,2209729,2209761,2209793,2209825,2209857,2209889,2209921,2209953,2209985,2210017,2210049,2210081]),\n  new Uint32Array([10501539,10501635,10501731,10501827,10501923,10502019,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2194561,2194593,2194625,2119777,2119873,2194657,2194689,2194721,2194753,2194785,2194817,2194849,2194881,2194913,2194945,2194977]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569]),\n  new Uint32Array([2222818,2222882,2222946,2223010,2223074,2223138,2223202,2223266,2223330,2223394,2223458,2223522,2223586,2223650,2223714,2223778]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672]),\n  new Uint32Array([0,2179553,2179585,2179617,2179649,2144001,2179681,2179713,2179745,2179777,2179809,2156705,2179841,2156833,2179873,2179905]),\n  new Uint32Array([6291456,23068672,6291456,2145602,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2196513,2196545,2196577,2196609,2196641,2196673,2196705,2196737,2196769,2196801,2196833,2196865,2196897,2196929,2196961,2196993]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2177281,6291456,2177313,6291456,2177345,6291456,2177377,6291456,2177409,6291456,2177441,6291456,2177473,6291456,2177505,6291456]),\n  new Uint32Array([2187137,2221473,2221505,2221537,2221569,6291456,6291456,10610209,10610241,10537986,10537986,10537986,10537986,10609857,10609857,10609857]),\n  new Uint32Array([2243009,2243041,2216033,2243074,2243137,2243169,2243201,2219617,2243233,2243265,2243297,2243329,2243362,2243425,2243457,2243489]),\n  new Uint32Array([10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,2097152,4194304,4194304,0,0]),\n  new Uint32Array([2143042,6291456,2143106,2143106,2168833,6291456,2168865,6291456,6291456,2168897,6291456,2168929,6291456,2168961,6291456,2143170]),\n  new Uint32Array([6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2204193,2204225,2204257,2204289,2204321,2204353,2204385,2204417,2204449,2204481,2204513,2204545,2204577,2204609,2204641,2204673]),\n  new Uint32Array([2202753,6291456,2202785,6291456,2202817,6291456,2202849,6291456,2202881,6291456,2202913,6291456,2202945,6291456,2202977,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321]),\n  new Uint32Array([2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842,2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842]),\n  new Uint32Array([2253313,2253346,2253409,2253441,2253473,2253505,2253537,2253569,2253601,2253634,2219393,2253697,2253729,2253761,2253793,2253825]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([2162562,2162626,2131362,2162690,2159938,2160002,2162754,2162818,2160130,2162882,2160194,2160258,2160834,2160898,2161026,2161090]),\n  new Uint32Array([2175361,2175393,2175425,2175457,2175489,2175521,2175553,2175585,2175617,2175649,2175681,2175713,2175745,2175777,2175809,2175841]),\n  new Uint32Array([2253858,2253921,2253954,2254018,2254082,2196737,2254145,2196865,2254177,2254209,2254241,2254273,2197025,2254306,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2202113,2204129,2188705,2204161]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953]),\n  new Uint32Array([2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,0,2108417,0,2111713,2100897,2111905]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2175425,2175489,2175809,2175905,2175937,2175937,2176193,2176417,2180865,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,2143298,2143298,2143298,2143362,2143362,2143362,2143426,2143426,2143426,2171105,6291456,2171137]),\n  new Uint32Array([2120162,2120258,2151618,2151682,2151746,2151810,2151874,2151938,2152002,2120035,2120131,2120227,2152066,2120323,2152130,2120419]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2195361,2142433,2236065,2236097,2236129,2236161,2118241,2117473,2236193,2236225,2236257,2236289,0,0,0,0]),\n  new Uint32Array([2189281,6291456,2189313,6291456,2189345,6291456,2189377,6291456,2189409,6291456,2189441,6291456,2189473,6291456,2189505,6291456]),\n  new Uint32Array([6291456,6291456,2145922,6291456,6291456,6291456,6291456,2145986,6291456,6291456,6291456,6291456,2146050,6291456,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10502113,10562017,10610401,10502177,10610433,10538049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,2186401,0,2186433,0,2186465,0,2186497]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,23068672,23068672]),\n  new Uint32Array([0,0,2198241,2198273,2198305,2198337,2198369,2198401,0,0,2198433,2198465,2198497,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,0,23068672,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,2133281,2097505,2105889,0,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2197889,2197921,2197953,2197985,2198017,2198049,2198081,2198113,2198145,2198177,2198209,2198241,2198273,2198305,2198337,2198369]),\n  new Uint32Array([2132514,2132610,2160386,2133090,2133186,2160450,2160514,2133282,2160578,2133570,2106178,2160642,2133858,2160706,2160770,2134146]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,6291456,23068672,23068672,6291456,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2184737,6291456,2184769,6291456,2184801,6291456,2184833,6291456,2184865,6291456,2184897,6291456,2184929,6291456,2184961,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2186753,6291456,6291456,6291456,6291456,2186785,2186817,2186849,2173569,2186881,10496355,10495395,10575521]),\n  new Uint32Array([0,0,2097729,0,0,0,0,2106017,0,2097505,0,2097185,0,2135777,2097633,2097441]),\n  new Uint32Array([2189537,6291456,2189569,6291456,2189601,6291456,2189633,6291456,2189665,6291456,2189697,6291456,2189729,6291456,2189761,6291456]),\n  new Uint32Array([2202497,6291456,2202529,6291456,2202561,6291456,2202593,6291456,2202625,6291456,2202657,6291456,2202689,6291456,2202721,6291456]),\n  new Uint32Array([2245217,2218369,2245249,2245282,2245345,2245377,2245410,2245474,2245537,2245569,2245601,2245633,2245665,2245665,2245697,2245729]),\n  new Uint32Array([6291456,0,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,23068672,6291456,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,2097377,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2176641,6291456,2176673,6291456,2176705,6291456,2176737,6291456,2176769,6291456,2176801,6291456,2176833,6291456,2176865,6291456]),\n  new Uint32Array([2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2174369,2174369,0,0,2100833,2100737]),\n  new Uint32Array([2116513,2190817,2190849,2190881,2190913,2190945,2116609,2190977,2191009,2191041,2191073,2117185,2191105,2191137,2191169,2191201]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2167617,2167649,2167681,2167713,2167745,2167777,2167809,6291456,2167841,2167873,2167905,2167937,2167969,2168001,2168033,4240130]),\n  new Uint32Array([2165122,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122,2134562,2132162,2132834,2136866]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2186209,2186241,2186273,2186305,2186337,2186369,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,0,23068672,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([0,10537921,10610689,10610273,10610497,10610529,10610305,10610721,10489601,10489697,10610337,10575617,10554529,2221761,2197217,10496577]),\n  new Uint32Array([2105473,2105569,2105601,2112289,0,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2125346,2153410,2153474,2127394,2153538,2153602,2153666,2153730,2105507,2105476,2153794,2153858,2153922,2153986,2154050,2105794]),\n  new Uint32Array([2200449,2119681,2200481,2153313,2199873,2199905,2199937,2200513,2200545,2200577,2200609,2119105,2119201,2119297,2119393,2119489]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2175777,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2222273,2197217,2221473,2221505,2221089,2222305,2200865,2099681,2104481,2222337,2099905,2120737,2222369,2103713,2100225,2098785]),\n  new Uint32Array([2201377,6291456,2201409,6291456,2201441,6291456,2201473,6291456,2201505,6291456,2201537,6291456,2201569,6291456,6291456,23068672]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([2200897,6291456,2200929,6291456,2200961,6291456,2200993,6291456,2201025,6291456,2180865,6291456,2201057,6291456,2201089,6291456]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2161154,2161410,2138658,2161474,2161538,2097666,2097186,2097474,2162946,2132450,2163010,2163074,2136162,2163138,2161666,2161730]),\n  new Uint32Array([2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953]),\n  new Uint32Array([0,0,0,0,0,0,23068672,23068672,0,0,0,0,2145410,2145474,0,6291456]),\n  new Uint32Array([2244161,2216065,2212769,2244193,2244225,2244257,2244290,2244353,2244385,2244417,2244449,2218273,2244481,2244514,2244577,2244609]),\n  new Uint32Array([2125730,2125699,2125795,2125891,2125987,2154114,2154178,2154242,2154306,2154370,2154434,2154498,2126082,2126178,2126274,2126083]),\n  new Uint32Array([2237665,2237697,2237697,2237697,2237730,2237793,2237825,2237857,2237890,2237953,2237985,2238017,2238049,2238081,2238113,2238145]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150146,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2214369,2238593,2238625,2238657,2238689,2238721,2238753,2238785,2238817,2238850,2238913,2238945,2238977,2235457,2239009,2239041]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2252066,2252130,2252193,2252225,2252257,2252290,2252353,2252385,2252417,2252449,2252481,2252513,2252545,2252578,2252641,2252673]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,2197857]),\n  new Uint32Array([2224866,2224930,2224994,2225058,2225122,2225186,2225250,2225314,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2219490,2219554,2219617,2219649,2219681,2219714,2219778,2219842,2219905,2219937,0,0,0,0,0,0]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2220161,2220161,2220193,2220193,2220193,2220193,2220225,2220225,2220225,2220225,2220257,2220257,2220257,2220257,2220289,2220289]),\n  new Uint32Array([2192673,2192705,2192737,2192769,2192801,2192833,2192865,2118049,2192897,2117473,2117761,2192929,2192961,2192993,2193025,2193057]),\n  new Uint32Array([2179297,6291456,2179329,6291456,2179361,6291456,2179393,6291456,2179425,6291456,2179457,6291456,2179489,6291456,2179521,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2235745,2235777,2193633,2235809,2235841,2235873,2235905,2235937,2235969,2116513,2116705,2236001,2200513,2199905,2200545,2236033]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2232993,2233025,0,0,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761]),\n  new Uint32Array([2170593,6291456,2170625,6291456,2170657,6291456,2170689,2170721,6291456,2170753,6291456,6291456,2170785,6291456,2170817,2170849]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2166786,2166850,0,0,0,0]),\n  new Uint32Array([23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,0]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134562,2132162,2132834,2136866,2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058]),\n  new Uint32Array([6291456,6291456,2098337,2101441,10531458,2153473,6291456,6291456,10531522,2100737,2108193,6291456,2106499,2106595,2106691,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2233122,2233186,2233250,2233314,2233378,2233442,2233506,2233570,2233634,2233698,2233762,2233826,2233890,2233954,2234018,2234082]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2205217,2205249,2205281,2205313,2205345,2205377,2205409,2205441,2205473,2205505,2205537,2205569,2205601,2205633,2205665,2205697]),\n  new Uint32Array([6291456,0,6291456,0,0,0,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([2173601,2173761,2174081,2173569,2174241,2174113,2173953,6291456,2174305,6291456,2174337,6291456,2174369,6291456,2174401,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2152450,2152514,2099653,2104452,2099813,2122243,2099973,2152578,2122339,2122435,2122531,2122627,2122723,2104580,2122819,2152642]),\n  new Uint32Array([2236385,2236417,2236449,2236482,2236545,2215425,2236577,2236609,2236641,2236673,2215457,2236705,2236737,2236770,2215489,2236833]),\n  new Uint32Array([2163394,2159746,2163458,2131362,2163522,2160130,2163778,2132226,2163842,2132898,2163906,2161410,2138658,2097666,2136162,2163650]),\n  new Uint32Array([2218721,2246913,2246946,2216385,2247010,2247074,2215009,2247137,2247169,2216481,2247201,2247233,2247266,2247330,2247330,0]),\n  new Uint32Array([2129730,2129762,2129858,2129731,2129827,2156482,2156482,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0,0,0,0,6291456,0,0]),\n  new Uint32Array([2203969,2204001,2181377,2204033,2204065,6291456,2204097,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2169473,6291456,2169505,6291456,2169537,6291456,2169569,6291456,2169601,6291456,2169633,6291456,2169665,6291456,2169697,6291456]),\n  new Uint32Array([2141542,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220801,2220801,2220801,2220801,2220833,2220833,2220865,2220865,2220865,2220865,2220897,2220897,2220897,2220897,2139873,2139873]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,0,0,0,0,0,0,6291456,0]),\n  new Uint32Array([2214849,2218433,2218465,2218497,2218529,2218561,2214881,2218593,2218625,2218657,2218689,2218721,2218753,2216545,2218785,2218817]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058,2165122,2132802,2132706,2164866]),\n  new Uint32Array([2207649,2207681,2207713,2207745,2207777,2207809,2207841,2207873,2207905,2207937,2207969,2208001,2208033,2208065,2208097,2208129]),\n  new Uint32Array([2123683,2105092,2152706,2123779,2105220,2152770,2100453,2098755,2123906,2124002,2124098,2124194,2124290,2124386,2124482,2124578]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,0,0,0,0,0,0,0,10485857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([10508163,10508259,10508355,10508451,2200129,2200161,2192737,2200193,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203553,6291456,2203585,6291456,6291456,6291456,2203617,6291456,2203649,6291456,2203681,6291456,2203713,6291456,2203745,6291456]),\n  new Uint32Array([18884449,18884065,23068672,18884417,18884034,18921185,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18874368]),\n  new Uint32Array([2247393,2247426,2247489,2247521,2247553,2247586,2247649,2247681,2247713,2247745,2247777,2247810,2247873,2247905,2247937,2247969]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,2160577,2133857,2235297,0,2235329,0]),\n  new Uint32Array([2182593,6291456,2182625,6291456,2182657,6291456,2182689,6291456,2182721,6291456,2182753,6291456,2182785,6291456,2182817,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102402,2102403,6291456,2110050]),\n  new Uint32Array([2149890,2108323,2149954,6291456,2113441,6291456,2149057,6291456,2113441,6291456,2105473,2167265,2111137,2105505,6291456,2108353]),\n  new Uint32Array([2219105,2219137,2195233,2251554,2251617,2251649,2251681,2251713,2251746,2251810,2251873,2251905,2251937,2251970,2252033,2219169]),\n  new Uint32Array([2203009,6291456,2203041,6291456,2203073,6291456,2203105,6291456,2203137,6291456,2203169,6291456,2203201,6291456,2203233,6291456]),\n  new Uint32Array([2128195,2128291,2128387,2128483,2128579,2128675,2128771,2128867,2128963,2129059,2129155,2129251,2129347,2129443,2129539,2129635]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2140964,2141156,2140966,2141158,2141350]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2225378,2225442,2225506,2225570,2225634,2225698,2225762,2225826,2225890,2225954,2226018,2226082,2226146,2226210,2226274,2226338]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417]),\n  new Uint32Array([2108353,2108417,0,2105601,2108193,2157121,2157313,2157377,2157441,2100897,6291456,2108419,2173953,2173633,2173633,2173953]),\n  new Uint32Array([2111713,2173121,2111905,2098177,2173153,2173185,2173217,2113153,2113345,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2190753]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,2197249,6291456,2117377,2197281,2197313,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,23068672]),\n  new Uint32Array([2173281,6291456,2173313,6291456,2173345,6291456,2173377,6291456,0,0,10532546,6291456,6291456,6291456,10562017,2173441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2159426,2159490,2159554,2159362,2159618,2159682,2139522,2136450,2159746,2159810,2159874,2130978,2131074,2131266,2131362,2159938]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203233,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2203265,6291456,2203297,6291456,2203329,2203361,6291456]),\n  new Uint32Array([6291456,6291456,2148418,2148482,2148546,0,6291456,2148610,2186529,2186561,2148417,2148545,2148482,10495778,2143969,10495778]),\n  new Uint32Array([2134146,2139426,2160962,2134242,2161218,2161282,2161346,2161410,2138658,2134722,2134434,2134818,2097666,2097346,2097698,2105986]),\n  new Uint32Array([2198881,2198913,2198945,2198977,2199009,2199041,2199073,2199105,2199137,2199169,2199201,2199233,2199265,2199297,2199329,2199361]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([10610561,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2183873,6291456,2183905,6291456,2183937,6291456,2183969,6291456,2184001,6291456,2184033,6291456,2184065,6291456,2184097,6291456]),\n  new Uint32Array([2244642,2244706,2244769,2244801,2218305,2244833,2244865,2244897,2244929,2244961,2244993,2245026,2245089,2245122,2245185,0]),\n  new Uint32Array([6291456,6291456,2116513,2116609,2116705,2116801,2199873,2199905,2199937,2199969,2190913,2200001,2200033,2200065,2200097,2191009]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2180673,2180705,2180737,2180769,2180801,2180833,0,0]),\n  new Uint32Array([2098081,2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150402]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,2145666,2145730,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2187073,6291456,6291456,6291456,6291456,2098241,2098241,2108353,2100897,2111905,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102404,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2100612,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10485857]),\n  new Uint32Array([2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([2217697,2217729,2217761,2217793,2217825,2217857,2217889,2217921,2217953,2215873,2217985,2215905,2218017,2218049,2218081,2218113]),\n  new Uint32Array([2211233,2218849,2216673,2218881,2218913,2218945,2218977,2219009,2216833,2219041,2215137,2219073,2216865,2209505,2219105,2216897]),\n  new Uint32Array([2240097,2240129,2240161,2240193,2240225,2240257,2240289,2240321,2240353,2240386,2240449,2240481,2240513,2240545,2207905,2240578]),\n  new Uint32Array([6291456,6291456,2202273,6291456,2202305,6291456,2202337,6291456,2202369,6291456,2202401,6291456,2202433,6291456,2202465,6291456]),\n  new Uint32Array([0,23068672,23068672,18923394,23068672,18923458,18923522,18884099,18923586,18884195,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2201121,6291456,2201153,6291456,2201185,6291456,2201217,6291456,2201249,6291456,2201281,6291456,2201313,6291456,2201345,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2211041,2211073,2211105,2211137,2211169,2211201,2211233,2211265,2211297,2211329,2211361,2211393,2211425,2211457,2211489,2211521]),\n  new Uint32Array([2181825,6291456,2181857,6291456,2181889,6291456,2181921,6291456,2181953,6291456,2181985,6291456,2182017,6291456,2182049,6291456]),\n  new Uint32Array([2162337,2097633,2097633,2097633,2097633,2132705,2132705,2132705,2132705,2097153,2097153,2097153,2097153,2133089,2133089,2133089]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2148545,6291456,2173473,6291456,2148865,6291456,2173505,6291456,2173537,6291456,2173569,6291456,2149121,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2207137,2207169,2207201,2207233,2207265,2207297,2207329,2207361,2207393,2207425,2207457,2207489,2207521,2207553,2207585,2207617]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,23068672,23068672,0,0,0,0,0,0]),\n  new Uint32Array([2198401,2198433,2198465,2198497,0,2198529,2198561,2198593,2198625,2198657,2198689,2198721,2198753,2198785,2198817,2198849]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2216385,2118721,2216417,2216449,2216481,2216513,2216545,2211233,2216577,2216609,2216641,2216673,2216705,2216737,2216737,2216769]),\n  new Uint32Array([2216801,2216833,2216865,2216897,2216929,2216961,2216993,2215169,2217025,2217057,2217089,2217121,2217154,2217217,0,0]),\n  new Uint32Array([2210593,2191809,2210625,2210657,2210689,2210721,2210753,2210785,2210817,2210849,2191297,2210881,2210913,2210945,2210977,2211009]),\n  new Uint32Array([0,0,2105825,0,0,2111905,2105473,0,0,2112289,2108193,2112481,2112577,0,2098305,2108321]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,2097153,2134241,0,2132705,0,0,2131297,0,2133089,0,2133857,0,2220769,0,2235361]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,6291456,6291456,14680064]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2171873,6291456,2171905,6291456,2171937,6291456,2171969,6291456,2172001,6291456,2172033,6291456,2172065,6291456,2172097,6291456]),\n  new Uint32Array([2220929,2220929,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133857,2134145,2134145,2134145,2134145,2134241,2134241,2134241,2134241,2105889,2105889,2105889,2105889,2097185,2097185,2097185]),\n  new Uint32Array([2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,10499619,10499715,10499811,10499907]),\n  new Uint32Array([0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2144322,2144386,2144450,2144514,2144578,2144642,2144706,2144770]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0,0,2111905,2105473,2105569]),\n  new Uint32Array([2236321,2236353,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2152194,2121283,2103684,2103812,2097986,2098533,2097990,2098693,2098595,2098853,2099013,2103940,2121379,2121475,2121571,2104068]),\n  new Uint32Array([2206241,2206273,2206305,2206337,2206369,2206401,2206433,2206465,2206497,2206529,2206561,2206593,2206625,2206657,2206689,2206721]),\n  new Uint32Array([6291456,6291456,6291456,6291456,16777216,16777216,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,10538818,10538882,6291456,6291456,2150338]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2214369,2214401,2214433,2214465,2214497,2214529,2214561,2214593,2194977,2214625,2195073,2214657,2214689,2214721,6291456,6291456]),\n  new Uint32Array([2097152,2097152,2097152,2097152,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2182081,6291456,2182113,6291456,2182145,6291456,2182177,6291456,2182209,6291456,2182241,6291456,2182273,6291456,2182305,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146881,2146945,2147009,2147073,2147137,2147201,2147265,2147329]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2122915,2123011,2123107,2104708,2123203,2123299,2123395,2100133,2104836,2100290,2100293,2104962,2104964,2098052,2123491,2123587]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,2171169,6291456,2171201,6291456,2171233,6291456,2171265,6291456,2171297,6291456,2171329,6291456,6291456,2171361,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2148994,2149058,2149122,0,6291456,2149186,2186945,2173537,2148993,2149121,2149058,10531458,10496066,0]),\n  new Uint32Array([2195009,2195041,2195073,2195105,2195137,2195169,2195201,2195233,2195265,2195297,2195329,2195361,2195393,2195425,2195457,2195489]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,0,0,6291456,6291456]),\n  new Uint32Array([2182849,6291456,2182881,6291456,2182913,6291456,2182945,6291456,2182977,6291456,2183009,6291456,2183041,6291456,2183073,6291456]),\n  new Uint32Array([2211553,2210081,2211585,2211617,2211649,2211681,2211713,2211745,2211777,2211809,2209569,2211841,2211873,2211905,2211937,2211969]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2166594,2127298,2166658,2142978,2141827,2166722]),\n  new Uint32Array([2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2185761,2185793,2185825,2185857,2185889,2185921,0,0]),\n  new Uint32Array([6291456,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456]),\n  new Uint32Array([0,0,0,2220961,2220961,2220961,2220961,2144193,2144193,2159201,2159201,2159265,2159265,2144194,2220993,2220993]),\n  new Uint32Array([2192641,2235393,2235425,2152257,2116609,2235457,2235489,2200065,2235521,2235553,2235585,2212449,2235617,2235649,2235681,2235713]),\n  new Uint32Array([2194049,2194081,2194113,2194145,2194177,2194209,2194241,2194273,2194305,2194337,2194369,2194401,2194433,2194465,2194497,2194529]),\n  new Uint32Array([2196673,2208641,2208673,2208705,2208737,2208769,2208801,2208833,2208865,2208897,2208929,2208961,2208993,2209025,2209057,2209089]),\n  new Uint32Array([2191681,2191713,2191745,2191777,2153281,2191809,2191841,2191873,2191905,2191937,2191969,2192001,2192033,2192065,2192097,2192129]),\n  new Uint32Array([2230946,2231010,2231074,2231138,2231202,2231266,2231330,2231394,2231458,2231522,2231586,2231650,2231714,2231778,2231842,2231906]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2185953,2185985,2186017,2186049,2186081,2186113,2186145,2186177]),\n  new Uint32Array([2139811,2139907,2097284,2105860,2105988,2106116,2106244,2097444,2097604,2097155,10485778,10486344,2106372,6291456,0,0]),\n  new Uint32Array([2110051,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2172385,6291456,2172417,6291456,2172449,6291456,2172481,6291456,2172513,6291456,2172545,6291456,2172577,6291456,2172609,6291456]),\n  new Uint32Array([0,0,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2249345,2249377,2249409,2249441,2249473,2249505,2249537,2249570,2210209,2249633,2249665,2249697,2249729,2249761,2249793,2216769]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2187169,2187201,2187233,2187265,2187297,2187329,2187361,2187393,2187425,2187457,2187489,2187521,2187553,2187585,2187617,2187649]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,6291456,6291456,0,0,0,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2182337,6291456,2182369,6291456,2182401,6291456,2182433,6291456,2182465,6291456,2182497,6291456,2182529,6291456,2182561,6291456]),\n  new Uint32Array([2138179,2138275,2138371,2138467,2134243,2134435,2138563,2138659,2138755,2138851,2138947,2139043,2138947,2138755,2139139,2139235]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2250498,2250562,2250625,2250657,2208321,2250689,2250721,2250753,2250785,2250817,2250849,2218945,2250881,2250913,2250945,0]),\n  new Uint32Array([2170369,2105569,2098305,2108481,2173249,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,0,2108193,0,0,0,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2100897,2100897,2105569,2105569,6291456,2112289,2149826,6291456,6291456,2112481,2112577,2098177,2098177,2098177,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2169953,2169985,6291456,2170017,6291456,2170049,2170081,6291456,2170113,2170145,2170177,6291456,6291456,2170209,2170241]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220641,2220641,2220673,2220673,2220673,2220673,2220705,2220705,2220705,2220705,2220737,2220737,2220737,2220737,2220769,2220769]),\n  new Uint32Array([2127650,2127746,2127842,2127938,2128034,2128130,2128226,2128322,2128418,2127523,2127619,2127715,2127811,2127907,2128003,2128099]),\n  new Uint32Array([2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177]),\n  new Uint32Array([0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2204705,2204737,2204769,2204801,2204833,2204865,2204897,2204929,2204961,2204993,2205025,2205057,2205089,2205121,2205153,2205185]),\n  new Uint32Array([2176385,6291456,2176417,6291456,2176449,6291456,2176481,6291456,2176513,6291456,2176545,6291456,2176577,6291456,2176609,6291456]),\n  new Uint32Array([2195521,2195553,2195585,2195617,2195649,2195681,2117857,2195713,2195745,2195777,2195809,2195841,2195873,2195905,2195937,2195969]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113]),\n  new Uint32Array([2131586,2132450,2135970,2135778,2161602,2136162,2163650,2161794,2135586,2163714,2137186,2131810,2160290,2135170,2097506,2159554]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,0,0,0,0]),\n  new Uint32Array([2116513,2116609,2116705,2116801,2116897,2116993,2117089,2117185,2117281,2117377,2117473,2117569,2117665,2117761,2117857,2117953]),\n  new Uint32Array([2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100802,2101154,2101282,2101410,2101538,2101666,2101794]),\n  new Uint32Array([2100289,2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2098977,2150241,2150305]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,2109955,6291456,6291456,0,0,0,0]),\n  new Uint32Array([18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,0,0]),\n  new Uint32Array([2130979,2131075,2131075,2131171,2131267,2131363,2131459,2131555,2131651,2131651,2131747,2131843,2131939,2132035,2132131,2132227]),\n  new Uint32Array([0,2177793,6291456,2177825,6291456,2177857,6291456,2177889,6291456,2177921,6291456,2177953,6291456,2177985,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2113345,0,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2136643,2136739,2136835,2136931,2137027,2137123,2137219,2137315,2137411,2137507,2137603,2137699,2137795,2137891,2137987,2138083]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2174433,6291456,2174465,6291456,2174497,6291456,2174529,6291456,2174561,6291456,2174593,6291456,2174625,6291456,2174657,6291456]),\n  new Uint32Array([0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([10496547,10496643,2105505,2149698,6291456,10496739,10496835,2170273,6291456,2149762,2105825,2111713,2111713,2111713,2111713,2168673]),\n  new Uint32Array([6291456,2143490,2143490,2143490,2171649,6291456,2171681,2171713,2171745,6291456,2171777,6291456,2171809,6291456,2171841,6291456]),\n  new Uint32Array([2159106,2159106,2159170,2159170,2159234,2159234,2159298,2159298,2159298,2159362,2159362,2159362,2106401,2106401,2106401,2106401]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137]),\n  new Uint32Array([2108417,2181217,2181249,2181281,2170433,2170401,2181313,2181345,2181377,2181409,2181441,2181473,2181505,2181537,2170529,2181569]),\n  new Uint32Array([2218433,2245761,2245793,2245825,2245857,2245890,2245953,2245986,2209665,2246050,2246113,2246146,2246210,2246274,2246337,2246369]),\n  new Uint32Array([2230754,2230818,2230882,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184129,6291456,2184161,6291456,2184193,6291456,6291456,6291456,6291456,6291456,2146818,2183361,6291456,6291456,2142978,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2135170,2097506,2130691,2130787,2130883,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122]),\n  new Uint32Array([2108515,2108611,2100740,2108707,2108803,2108899,2108995,2109091,2109187,2109283,2109379,2109475,2109571,2109667,2109763,2100738]),\n  new Uint32Array([2102788,2102916,2103044,2120515,2103172,2120611,2120707,2098373,2103300,2120803,2120899,2120995,2103428,2103556,2121091,2121187]),\n  new Uint32Array([2158082,2158146,0,2158210,2158274,0,2158338,2158402,2158466,2129922,2158530,2158594,2158658,2158722,2158786,2158850]),\n  new Uint32Array([10499619,10499715,10499811,10499907,10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059]),\n  new Uint32Array([2239585,2239618,2239681,2239713,0,2191969,2239745,2239777,2192033,2239809,2239841,2239874,2239937,2239970,2240033,2240065]),\n  new Uint32Array([2252705,2252738,2252801,2252833,2252865,2252897,2252930,2252994,2253057,2253089,2253121,2253154,2253217,2253250,2219361,2219361]),\n  new Uint32Array([2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,10538050,10538114,10538178,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2226402,2226466,2226530,2226594,2226658,2226722,2226786,2226850,2226914,2226978,2227042,2227106,2227170,2227234,2227298,2227362]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,2144066,2144130,2144194,2144258,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2124674,2124770,2123875,2123971,2124067,2124163,2124259,2124355,2124451,2124547,2124643,2124739,2124835,2124931,2125027,2125123]),\n  new Uint32Array([2168065,6291456,2168097,6291456,2168129,6291456,2168161,6291456,2168193,6291456,2168225,6291456,2168257,6291456,2168289,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2100610,2100611,6291456,2107842,2107843,6291456,6291456,6291456,6291456,10537922,6291456,10537986,6291456]),\n  new Uint32Array([2174849,2174881,2174913,2174945,2174977,2175009,2175041,2175073,2175105,2175137,2175169,2175201,2175233,2175265,2175297,2175329]),\n  new Uint32Array([2154562,2154626,2154690,2154754,2141858,2154818,2154882,2127298,2154946,2127298,2155010,2155074,2155138,2155202,2155266,2155202]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0]),\n  new Uint32Array([2200641,2150786,2150850,2150914,2150978,2151042,2106562,2151106,2150562,2151170,2151234,2151298,2151362,2151426,2151490,2151554]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456]),\n  new Uint32Array([2220289,2220289,2220321,2220321,2220321,2220321,2220353,2220353,2220353,2220353,2220385,2220385,2220385,2220385,2220417,2220417]),\n  new Uint32Array([2155330,2155394,0,2155458,2155522,2155586,2105732,0,2155650,2155714,2155778,2125314,2155842,2155906,2126274,2155970]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0]),\n  new Uint32Array([2097729,2106017,2106017,2106017,2106017,2131297,2131297,2131297,2131297,2106081,2106081,2162049,2162049,2105953,2105953,2162337]),\n  new Uint32Array([2097185,2097697,2097697,2097697,2097697,2135777,2135777,2135777,2135777,2097377,2097377,2097377,2097377,2097601,2097601,2097217]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([2139331,2139427,2139523,2139043,2133571,2132611,2139619,2139715,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2174113,2174145,2100897,2098177,2108289,2100865,2173601,2173633,2173985,2174113,2174145,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,23068672,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,18923778,23068672,23068672,23068672,23068672,18923842,23068672,23068672,23068672,23068672,18923906,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,0,2133857,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2177537,6291456,2177569,6291456,2177601,6291456,2177633,6291456,2177665,6291456,2177697,6291456,2177729,6291456,2177761,6291456]),\n  new Uint32Array([2212481,2212513,2212545,2212577,2197121,2212609,2212641,2212673,2212705,2212737,2212769,2212801,2212833,2212865,2212897,2212929]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2098241,2108353,2170209,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,6291456,2108193,2172417,2112481,2098177]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n];\nvar blockIdxes = new Uint16Array([616,616,565,147,161,411,330,2,131,131,328,454,241,408,86,86,696,113,285,350,325,301,473,214,639,232,447,64,369,598,124,672,567,223,621,154,107,86,86,86,86,86,86,505,86,68,634,86,218,218,218,218,486,218,218,513,188,608,216,86,217,463,668,85,700,360,184,86,86,86,647,402,153,10,346,718,662,260,145,298,117,1,443,342,138,54,563,86,240,572,218,70,387,86,118,460,641,602,86,86,306,218,86,692,86,86,86,86,86,162,707,86,458,26,86,218,638,86,86,86,86,86,65,449,86,86,306,183,86,58,391,667,86,157,131,131,131,131,86,433,131,406,31,218,247,86,86,693,218,581,351,86,438,295,69,462,45,126,173,650,14,295,69,97,168,187,641,78,523,390,69,108,287,664,173,219,83,295,69,108,431,426,173,694,412,115,628,52,257,398,641,118,501,121,69,579,151,423,173,620,464,121,69,382,151,476,173,27,53,121,86,594,578,226,173,86,632,130,86,96,228,268,641,622,563,86,86,21,148,650,131,131,321,43,144,343,381,531,131,131,178,20,86,399,156,375,164,541,30,60,715,198,92,118,131,131,86,86,306,407,86,280,457,196,488,358,131,131,244,86,86,143,86,86,86,86,86,667,563,86,86,86,86,86,86,86,86,86,86,86,86,86,336,363,86,86,336,86,86,380,678,67,86,86,86,678,86,86,86,512,86,307,86,708,86,86,86,86,86,528,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,563,307,86,86,86,86,86,104,450,337,86,720,86,32,450,397,86,86,86,587,218,558,708,708,293,708,86,86,86,86,86,694,205,86,8,86,86,86,86,549,86,667,697,697,679,86,458,460,86,86,650,86,708,543,86,86,86,245,86,86,86,140,218,127,708,708,458,197,131,131,131,131,500,86,86,483,251,86,306,510,515,86,722,86,86,86,65,201,86,86,483,580,470,86,86,86,368,131,131,131,694,114,110,555,86,86,123,721,163,142,713,418,86,317,675,209,218,218,218,371,545,592,629,490,603,199,46,320,525,680,310,279,388,111,42,252,593,607,235,617,410,377,50,548,135,356,17,520,189,116,392,600,349,332,482,699,690,535,119,106,451,71,152,667,131,218,218,265,671,637,492,504,533,683,269,269,658,86,86,86,86,86,86,86,86,86,491,619,86,86,6,86,86,86,86,86,86,86,86,86,86,86,229,86,86,86,86,86,86,86,86,86,86,86,86,667,86,86,171,131,118,131,656,206,234,571,89,334,670,246,311,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,534,86,86,86,86,86,86,82,86,86,86,86,86,430,86,86,86,86,86,86,86,86,86,599,86,324,86,470,69,640,264,131,626,101,174,86,86,667,233,105,73,374,394,221,204,84,28,326,86,86,471,86,86,86,109,573,86,171,200,200,200,200,218,218,86,86,86,86,460,131,131,131,86,506,86,86,86,86,86,220,404,34,614,47,442,305,25,612,338,601,648,7,344,255,131,131,51,86,312,507,563,86,86,86,86,588,86,86,86,86,86,530,511,86,458,3,435,384,556,522,230,527,86,118,86,86,717,86,137,273,79,181,484,23,93,112,655,249,417,703,370,87,98,313,684,585,155,465,596,481,695,18,416,428,61,701,706,282,643,495,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,86,86,86,171,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,650,131,422,542,420,263,24,172,86,86,86,86,86,566,86,86,132,540,395,353,494,519,19,485,284,472,131,131,131,16,714,86,211,708,86,86,86,694,698,86,86,483,704,708,218,272,86,86,120,86,159,478,86,307,247,86,86,663,597,459,627,667,86,86,277,455,39,302,86,250,86,86,86,271,99,452,306,281,329,400,200,86,86,362,549,352,646,461,323,586,86,86,4,708,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,717,86,518,86,86,650,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,125,554,480,300,613,72,333,288,561,544,604,48,719,91,169,176,590,224,76,191,29,559,560,231,537,166,477,538,256,437,131,131,469,167,40,0,685,266,441,705,239,642,475,568,640,610,299,673,517,318,385,22,202,180,179,359,424,215,90,66,521,653,467,682,453,409,479,88,131,661,35,303,15,262,666,630,712,131,131,618,659,175,218,195,347,193,227,261,150,165,709,546,294,569,710,270,413,376,524,55,242,38,419,529,170,657,3,304,122,379,278,131,651,86,67,576,458,458,131,131,86,86,86,86,86,86,86,118,309,86,86,547,86,86,86,86,667,650,664,131,131,86,86,56,131,131,131,131,131,131,131,131,86,307,86,86,86,664,238,650,86,86,717,86,118,86,86,315,86,59,86,86,574,549,131,131,340,57,436,86,86,86,86,86,86,458,708,499,691,62,86,650,86,86,694,86,86,86,319,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,86,549,694,131,131,131,131,131,131,131,131,131,77,86,86,139,86,502,86,86,86,667,595,131,131,131,86,12,86,13,86,609,131,131,131,131,86,86,86,625,86,669,86,86,182,129,86,5,694,104,86,86,86,86,131,131,86,86,386,171,86,86,86,345,86,324,86,589,86,213,36,131,131,131,131,131,86,86,86,86,104,131,131,131,141,290,80,677,86,86,86,267,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,515,86,86,33,136,669,86,711,515,86,86,550,640,86,104,708,515,86,159,372,717,86,86,444,515,86,86,663,37,86,563,460,86,390,624,702,131,131,131,131,389,59,708,86,86,341,208,708,635,295,69,108,431,508,100,190,131,131,131,131,131,131,131,131,86,86,86,649,516,660,131,131,86,86,86,218,631,708,131,131,131,131,131,131,131,131,131,131,86,86,341,575,238,514,131,131,86,86,86,218,291,708,307,131,86,86,306,367,708,131,131,131,86,378,697,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,615,253,86,86,86,292,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,104,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,69,86,341,553,549,86,307,86,86,645,275,455,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,708,131,131,131,131,131,131,86,86,86,86,86,86,667,460,86,86,86,86,86,86,86,86,86,86,86,86,717,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,104,86,667,459,131,131,131,131,131,131,86,458,225,86,86,86,516,549,11,390,405,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,460,44,218,197,711,515,131,131,131,131,664,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,118,307,104,286,591,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,681,86,86,75,185,314,582,86,358,496,474,86,104,131,86,86,86,86,146,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,171,86,640,131,131,131,131,131,131,131,131,246,503,689,339,674,81,258,415,439,128,562,366,414,246,503,689,583,222,557,316,636,665,186,355,95,670,246,503,689,339,674,557,258,415,439,186,355,95,670,246,503,689,446,644,536,652,331,532,335,440,274,421,297,570,74,425,364,425,606,552,403,509,134,365,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,218,218,218,498,218,218,577,627,551,497,572,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,553,354,236,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,296,455,131,131,456,243,103,86,41,459,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,9,276,158,716,393,564,383,489,401,654,210,654,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,650,86,86,86,86,86,86,717,667,563,563,563,86,549,102,686,133,246,605,86,448,86,86,207,307,131,131,131,641,86,177,611,445,373,194,584,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,307,171,86,86,86,86,86,86,86,717,86,86,86,86,86,460,131,131,650,86,86,86,694,708,86,86,694,86,458,131,131,131,131,131,131,667,694,289,650,667,131,131,86,640,131,131,664,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,460,86,86,86,86,86,86,86,86,86,86,86,86,86,458,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,466,203,149,429,94,432,160,687,539,63,237,283,192,248,348,259,427,526,396,676,254,468,487,212,327,623,49,633,322,493,434,688,357,361,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131]);\nvar mappingStr = \"صلى الله عليه وسلمجل جلالهキロメートルrad∕s2エスクードキログラムキロワットグラムトンクルゼイロサンチームパーセントピアストルファラッドブッシェルヘクタールマンションミリバールレントゲン′′′′1⁄10viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)∫∫∫∫(오전)(오후)アパートアルファアンペアイニングエーカーカラットカロリーキュリーギルダークローネサイクルシリングバーレルフィートポイントマイクロミクロンメガトンリットルルーブル株式会社kcalm∕s2c∕kgاكبرمحمدصلعمرسولریال1⁄41⁄23⁄4 ̈́ྲཱྀླཱྀ ̈͂ ̓̀ ̓́ ̓͂ ̔̀ ̔́ ̔͂ ̈̀‵‵‵a/ca/sc/oc/utelfax1⁄71⁄91⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8xii0⁄3∮∮∮(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)pte10月11月12月ergltdアールインチウォンオンスオームカイリガロンガンマギニーケースコルナコーポセンチダースノットハイツパーツピクルフランペニヒヘルツペンスページベータボルトポンドホールホーンマイルマッハマルクヤードヤールユアンルピー10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv∕ma∕m10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galffifflשּׁשּׂ ٌّ ٍّ َّ ُّ ِّ ّٰـَّـُّـِّتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمجممخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلے𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯〔s〕ppv〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕 ̄ ́ ̧ssi̇ijl·ʼndžljnjdz ̆ ̇ ̊ ̨ ̃ ̋ ιեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມགྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀླྀྒྷྜྷྡྷྦྷྫྷྐྵaʾἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶι ͂ὴιηιήιῆιὼιωιώιῶι ̳!! ̅???!!?rs°c°fnosmtmivix⫝̸ ゙ ゚よりコト333435참고주의363738394042444546474849503月4月5月6月7月8月9月hgevギガデシドルナノピコビルペソホンリラレムdaauovpciu平成昭和大正明治naμakakbmbgbpfnfμfμgmgμlmldlklfmnmμmpsnsμsmsnvμvkvpwnwμwmwkwkωmωbqcccddbgyhainkkktlnlxphprsrsvwbstմնմեմիվնմխיִײַשׁשׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלئائەئوئۇئۆئۈئېئىئجئحئمئيبجبمبىبيتىتيثجثمثىثيخحضجضمطحظمغجفجفحفىفيقحقىقيكاكجكحكخكلكىكينخنىنيهجهىهييىذٰرٰىٰئرئزئنبزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخنههٰثهسهشهطىطيعىعيغىغيسىسيشىشيصىصيضىضيشخشرسرصرضراً ًـًـّ ْـْلآلألإ𝅗𝅥0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmddjほかココàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĵķĺļľłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁʕͱͳʹͷ;ϳέίόύβγδεζθκλνξοπρστυφχψϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդզէըթժլծկհձղճյշոչպջռստրցփքօֆ་ⴧⴭნᏰᏱᏲᏳᏴᏵꙋɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἐἑἒἓἔἕἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗᾰᾱὲΐῐῑὶΰῠῡὺῥ`ὸ‐+−∑〈〉ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟丨丶丿乙亅亠人儿入冂冖冫几凵刀力勹匕匚匸卜卩厂厶又口囗士夂夊夕女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无曰欠止歹殳毋比毛氏气爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅ᄁᆪᆬᆭᄄᆰᆱᆲᆳᆴᆵᄚᄈᄡᄊ짜ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ上中下甲丙丁天地問幼箏우秘男適優印注項写左右医宗夜テヌモヨヰヱヲꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꬷꭒᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵令囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎עםٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھۓڭۋۅۉ、〖〗—–_{}【】《》「」『』[]#&*-<>\\\\$%@ءؤة\\\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟ıȷ∇∂𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ字双多解交映無前後再新初終販声吹演投捕遊指禁空合満申割営配得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀\";\n\nfunction mapChar(codePoint) {\n  if (codePoint >= 0x30000) {\n    // High planes are special cased.\n    if (codePoint >= 0xE0100 && codePoint <= 0xE01EF)\n      return 18874368;\n    return 0;\n  }\n  return blocks[blockIdxes[codePoint >> 4]][codePoint & 15];\n}\n\nreturn {\n  mapStr: mappingStr,\n  mapChar: mapChar\n};\n}));\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","(function(root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define(['punycode', './idna-map'], function(punycode, idna_map) {\n      return factory(punycode, idna_map);\n    });\n  }\n  else if (typeof exports === 'object') {\n    module.exports = factory(require('punycode'), require('./idna-map'));\n  }\n  else {\n    root.uts46 = factory(root.punycode, root.idna_map);\n  }\n}(this, function(punycode, idna_map) {\n\n  function mapLabel(label, useStd3ASCII, transitional) {\n    var mapped = [];\n    var chars = punycode.ucs2.decode(label);\n    for (var i = 0; i < chars.length; i++) {\n      var cp = chars[i];\n      var ch = punycode.ucs2.encode([chars[i]]);\n      var composite = idna_map.mapChar(cp);\n      var flags = (composite >> 23);\n      var kind = (composite >> 21) & 3;\n      var index = (composite >> 5) & 0xffff;\n      var length = composite & 0x1f;\n      var value = idna_map.mapStr.substr(index, length);\n      if (kind === 0 || (useStd3ASCII && (flags & 1))) {\n        throw new Error(\"Illegal char \" + ch);\n      }\n      else if (kind === 1) {\n        mapped.push(value);\n      }\n      else if (kind === 2) {\n        mapped.push(transitional ? value : ch);\n      }\n      /* istanbul ignore next */\n      else if (kind === 3) {\n        mapped.push(ch);\n      }\n    }\n\n    var newLabel = mapped.join(\"\").normalize(\"NFC\");\n    return newLabel;\n  }\n\n  function process(domain, transitional, useStd3ASCII) {\n    /* istanbul ignore if */\n    if (useStd3ASCII === undefined)\n      useStd3ASCII = false;\n    var mappedIDNA = mapLabel(domain, useStd3ASCII, transitional);\n\n    // Step 3. Break\n    var labels = mappedIDNA.split(\".\");\n\n    // Step 4. Convert/Validate\n    labels = labels.map(function(label) {\n      if (label.startsWith(\"xn--\")) {\n        label = punycode.decode(label.substring(4));\n        validateLabel(label, useStd3ASCII, false);\n      }\n      else {\n        validateLabel(label, useStd3ASCII, transitional);\n      }\n      return label;\n    });\n\n    return labels.join(\".\");\n  }\n\n  function validateLabel(label, useStd3ASCII, transitional) {\n    // 2. The label must not contain a U+002D HYPHEN-MINUS character in both the\n    // third position and fourth positions.\n    if (label[2] === '-' && label[3] === '-')\n      throw new Error(\"Failed to validate \" + label);\n\n    // 3. The label must neither begin nor end with a U+002D HYPHEN-MINUS\n    // character.\n    if (label.startsWith('-') || label.endsWith('-'))\n      throw new Error(\"Failed to validate \" + label);\n\n    // 4. The label must not contain a U+002E ( . ) FULL STOP.\n    // this should nerver happen as label is chunked internally by this character\n    /* istanbul ignore if */\n    if (label.includes('.'))\n      throw new Error(\"Failed to validate \" + label);\n\n    if (mapLabel(label, useStd3ASCII, transitional) !== label)\n      throw new Error(\"Failed to validate \" + label);\n\n    // 5. The label must not begin with a combining mark, that is:\n    // General_Category=Mark.\n    var ch = label.codePointAt(0);\n    if (idna_map.mapChar(ch) & (0x2 << 23))\n      throw new Error(\"Label contains illegal character: \" + ch);\n  }\n\n  function toAscii(domain, options) {\n    if (options === undefined)\n      options = {};\n    var transitional = 'transitional' in options ? options.transitional : true;\n    var useStd3ASCII = 'useStd3ASCII' in options ? options.useStd3ASCII : false;\n    var verifyDnsLength = 'verifyDnsLength' in options ? options.verifyDnsLength : false;\n    var labels = process(domain, transitional, useStd3ASCII).split('.');\n    var asciiLabels = labels.map(punycode.toASCII);\n    var asciiString = asciiLabels.join('.');\n    var i;\n    if (verifyDnsLength) {\n      if (asciiString.length < 1 || asciiString.length > 253) {\n        throw new Error(\"DNS name has wrong length: \" + asciiString);\n      }\n      for (i = 0; i < asciiLabels.length; i++) {//for .. of replacement\n        var label = asciiLabels[i];\n        if (label.length < 1 || label.length > 63)\n          throw new Error(\"DNS label has wrong length: \" + label);\n      }\n    }\n    return asciiString;\n  }\n\n  function toUnicode(domain, options) {\n    if (options === undefined)\n      options = {};\n    var useStd3ASCII = 'useStd3ASCII' in options ? options.useStd3ASCII : false;\n    return process(domain, false, useStd3ASCII);\n  }\n\n  return {\n    toUnicode: toUnicode,\n    toAscii: toAscii,\n  };\n}));\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){var r;return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!(null===(r=n.constructor)||void 0===r?void 0:r[L])||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?n.add(t):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0)),n}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function g(n){O(n),n.p.forEach(S),n.p=null}function O(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.g=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.O||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(g(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),g(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o,u=o,a=!1;3===e.i&&(u=new Set(o),o.clear(),a=!0),i(u,(function(r,i){return A(n,e,o,r,i,t,a)})),x(n,o,!1),t&&n.u&&b(\"Patches\").N(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s,v){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var p=M(e,c,s&&i&&3!==i.i&&!u(i.R,a)?s.concat(a):void 0);if(f(o,a,p),!r(p))return;e.m=!1}else v&&o.add(c);if(t(c)&&!y(c)){if(!e.h.D&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),!n.l&&n.h.D&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function N(n,r,t){var e=s(r)?b(\"MapSet\").F(r,t):v(r)?b(\"MapSet\").T(r,t):n.O?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function R(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=D(r,c),u.I=!1}else e=D(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function D(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function F(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.g&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:i,o:null,g:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.R,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=i[s];\"string\"!=typeof p&&\"number\"!=typeof p&&(p=\"\"+p),0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},N:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.R,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.R,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.R=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=N(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.g&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,R:void 0,t:n,k:this,C:!1,g:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.R.set(n,!0),t.o.set(n,r),t.R.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.R.set(n,!1):r.R.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.R=new Map,i(n.t,(function(r){n.R.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=N(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,g:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{F:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){F(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=N(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.R[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&(void 0!==t||r in n.o)||Number.isNaN(t)&&Number.isNaN(n.o[r])||(n.o[r]=t,n.R[r]=!0),!0},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.R[r]=!1,E(n),k(n)):delete n.R[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.O=B,this.D=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=N(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?g(c):O(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw g(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.D&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=R(e));var i=w(this),o=N(this,e,void 0);return o[Q].C=!0,O(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.D=n},i.setUseProxies=function(r){r&&!B&&n(20),this.O=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,R as current,J as enableAllPlugins,F as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar index = (function () {\n  var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keyAccessors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var multiItem = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var flattenKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var keys = (keyAccessors instanceof Array ? keyAccessors.length ? keyAccessors : [undefined] : [keyAccessors]).map(function (key) {\n    return {\n      keyAccessor: key,\n      isProp: !(key instanceof Function)\n    };\n  });\n  var indexedResult = list.reduce(function (res, item) {\n    var iterObj = res;\n    var itemVal = item;\n    keys.forEach(function (_ref, idx) {\n      var keyAccessor = _ref.keyAccessor,\n        isProp = _ref.isProp;\n      var key;\n      if (isProp) {\n        var _itemVal = itemVal,\n          propVal = _itemVal[keyAccessor],\n          rest = _objectWithoutProperties(_itemVal, [keyAccessor].map(_toPropertyKey));\n        key = propVal;\n        itemVal = rest;\n      } else {\n        key = keyAccessor(itemVal, idx);\n      }\n      if (idx + 1 < keys.length) {\n        if (!iterObj.hasOwnProperty(key)) {\n          iterObj[key] = {};\n        }\n        iterObj = iterObj[key];\n      } else {\n        // Leaf key\n        if (multiItem) {\n          if (!iterObj.hasOwnProperty(key)) {\n            iterObj[key] = [];\n          }\n          iterObj[key].push(itemVal);\n        } else {\n          iterObj[key] = itemVal;\n        }\n      }\n    });\n    return res;\n  }, {});\n  if (multiItem instanceof Function) {\n    // Reduce leaf multiple values\n    (function reduce(node) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      if (level === keys.length) {\n        Object.keys(node).forEach(function (k) {\n          return node[k] = multiItem(node[k]);\n        });\n      } else {\n        Object.values(node).forEach(function (child) {\n          return reduce(child, level + 1);\n        });\n      }\n    })(indexedResult); // IIFE\n  }\n\n  var result = indexedResult;\n  if (flattenKeys) {\n    // flatten into array\n    result = [];\n    (function flatten(node) {\n      var accKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (accKeys.length === keys.length) {\n        result.push({\n          keys: accKeys,\n          vals: node\n        });\n      } else {\n        Object.entries(node).forEach(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            val = _ref3[1];\n          return flatten(val, [].concat(_toConsumableArray(accKeys), [key]));\n        });\n      }\n    })(indexedResult); //IIFE\n\n    if (keyAccessors instanceof Array && keyAccessors.length === 0 && result.length === 1) {\n      // clear keys if there's no key accessors (single result)\n      result[0].keys = [];\n    }\n  }\n  return result;\n});\n\nexport { index as default };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","(function (root) {\n    'use strict';\n    // A list of regular expressions that match arbitrary IPv4 addresses,\n    // for which a number of weird notations exist.\n    // Note that an address like 0010.0xa5.1.1 is considered legal.\n    const ipv4Part = '(0?\\\\d+|0x[a-f0-9]+)';\n    const ipv4Regexes = {\n        fourOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        threeOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        twoOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        longValue: new RegExp(`^${ipv4Part}$`, 'i')\n    };\n\n    // Regular Expression for checking Octal numbers\n    const octalRegex = new RegExp(`^0[0-7]+$`, 'i');\n    const hexRegex = new RegExp(`^0x[a-f0-9]+$`, 'i');\n\n    const zoneIndex = '%[0-9a-z]{1,}';\n\n    // IPv6-matching regular expressions.\n    // For IPv6, the task is simpler: it is enough to match the colon-delimited\n    // hexadecimal IPv6 and a transitional variant with dotted-decimal IPv4 at\n    // the end.\n    const ipv6Part = '(?:[0-9a-f]+::?)+';\n    const ipv6Regexes = {\n        zoneIndex: new RegExp(zoneIndex, 'i'),\n        'native': new RegExp(`^(::)?(${ipv6Part})?([0-9a-f]+)?(::)?(${zoneIndex})?$`, 'i'),\n        deprecatedTransitional: new RegExp(`^(?:::)(${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?)$`, 'i'),\n        transitional: new RegExp(`^((?:${ipv6Part})|(?:::)(?:${ipv6Part})?)${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?$`, 'i')\n    };\n\n    // Expand :: in an IPv6 address or address part consisting of `parts` groups.\n    function expandIPv6 (string, parts) {\n        // More than one '::' means invalid adddress\n        if (string.indexOf('::') !== string.lastIndexOf('::')) {\n            return null;\n        }\n\n        let colonCount = 0;\n        let lastColon = -1;\n        let zoneId = (string.match(ipv6Regexes.zoneIndex) || [])[0];\n        let replacement, replacementCount;\n\n        // Remove zone index and save it for later\n        if (zoneId) {\n            zoneId = zoneId.substring(1);\n            string = string.replace(/%.+$/, '');\n        }\n\n        // How many parts do we already have?\n        while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n            colonCount++;\n        }\n\n        // 0::0 is two parts more than ::\n        if (string.substr(0, 2) === '::') {\n            colonCount--;\n        }\n\n        if (string.substr(-2, 2) === '::') {\n            colonCount--;\n        }\n\n        // The following loop would hang if colonCount > parts\n        if (colonCount > parts) {\n            return null;\n        }\n\n        // replacement = ':' + '0:' * (parts - colonCount)\n        replacementCount = parts - colonCount;\n        replacement = ':';\n        while (replacementCount--) {\n            replacement += '0:';\n        }\n\n        // Insert the missing zeroes\n        string = string.replace('::', replacement);\n\n        // Trim any garbage which may be hanging around if :: was at the edge in\n        // the source strin\n        if (string[0] === ':') {\n            string = string.slice(1);\n        }\n\n        if (string[string.length - 1] === ':') {\n            string = string.slice(0, -1);\n        }\n\n        parts = (function () {\n            const ref = string.split(':');\n            const results = [];\n\n            for (let i = 0; i < ref.length; i++) {\n                results.push(parseInt(ref[i], 16));\n            }\n\n            return results;\n        })();\n\n        return {\n            parts: parts,\n            zoneId: zoneId\n        };\n    }\n\n    // A generic CIDR (Classless Inter-Domain Routing) RFC1518 range matcher.\n    function matchCIDR (first, second, partSize, cidrBits) {\n        if (first.length !== second.length) {\n            throw new Error('ipaddr: cannot match CIDR for objects with different lengths');\n        }\n\n        let part = 0;\n        let shift;\n\n        while (cidrBits > 0) {\n            shift = partSize - cidrBits;\n            if (shift < 0) {\n                shift = 0;\n            }\n\n            if (first[part] >> shift !== second[part] >> shift) {\n                return false;\n            }\n\n            cidrBits -= partSize;\n            part += 1;\n        }\n\n        return true;\n    }\n\n    function parseIntAuto (string) {\n        // Hexadedimal base 16 (0x#)\n        if (hexRegex.test(string)) {\n            return parseInt(string, 16);\n        }\n        // While octal representation is discouraged by ECMAScript 3\n        // and forbidden by ECMAScript 5, we silently allow it to\n        // work only if the rest of the string has numbers less than 8.\n        if (string[0] === '0' && !isNaN(parseInt(string[1], 10))) {\n        if (octalRegex.test(string)) {\n            return parseInt(string, 8);\n        }\n            throw new Error(`ipaddr: cannot parse ${string} as octal`);\n        }\n        // Always include the base 10 radix!\n        return parseInt(string, 10);\n    }\n\n    function padPart (part, length) {\n        while (part.length < length) {\n            part = `0${part}`;\n        }\n\n        return part;\n    }\n\n    const ipaddr = {};\n\n    // An IPv4 address (RFC791).\n    ipaddr.IPv4 = (function () {\n        // Constructs a new IPv4 address from an array of four octets\n        // in network order (MSB first)\n        // Verifies the input.\n        function IPv4 (octets) {\n            if (octets.length !== 4) {\n                throw new Error('ipaddr: ipv4 octet count should be 4');\n            }\n\n            let i, octet;\n\n            for (i = 0; i < octets.length; i++) {\n                octet = octets[i];\n                if (!((0 <= octet && octet <= 255))) {\n                    throw new Error('ipaddr: ipv4 octet should fit in 8 bits');\n                }\n            }\n\n            this.octets = octets;\n        }\n\n        // Special IPv4 address ranges.\n        // See also https://en.wikipedia.org/wiki/Reserved_IP_addresses\n        IPv4.prototype.SpecialRanges = {\n            unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n            broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n            // RFC3171\n            multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n            // RFC3927\n            linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n            // RFC5735\n            loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n            // RFC6598\n            carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n            // RFC1918\n            'private': [\n                [new IPv4([10, 0, 0, 0]), 8],\n                [new IPv4([172, 16, 0, 0]), 12],\n                [new IPv4([192, 168, 0, 0]), 16]\n            ],\n            // Reserved and testing-only ranges; RFCs 5735, 5737, 2544, 1700\n            reserved: [\n                [new IPv4([192, 0, 0, 0]), 24],\n                [new IPv4([192, 0, 2, 0]), 24],\n                [new IPv4([192, 88, 99, 0]), 24],\n                [new IPv4([198, 51, 100, 0]), 24],\n                [new IPv4([203, 0, 113, 0]), 24],\n                [new IPv4([240, 0, 0, 0]), 4]\n            ]\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv4.prototype.kind = function () {\n            return 'ipv4';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv4.prototype.match = function (other, cidrRange) {\n            let ref;\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv4') {\n                throw new Error('ipaddr: cannot match ipv4 address with non-ipv4 one');\n            }\n\n            return matchCIDR(this.octets, other.octets, 8, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv4 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv4.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 8,\n                128: 7,\n                192: 6,\n                224: 5,\n                240: 4,\n                248: 3,\n                252: 2,\n                254: 1,\n                255: 0\n            };\n            let i, octet, zeros;\n\n            for (i = 3; i >= 0; i -= 1) {\n                octet = this.octets[i];\n                if (octet in zerotable) {\n                    zeros = zerotable[octet];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 8) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 32 - cidr;\n        };\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv4.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv4.prototype.toByteArray = function () {\n            return this.octets.slice(0);\n        };\n\n        // Converts this IPv4 address to an IPv4-mapped IPv6 address.\n        IPv4.prototype.toIPv4MappedAddress = function () {\n            return ipaddr.IPv6.parse(`::ffff:${this.toString()}`);\n        };\n\n        // Symmetrical method strictly for aligning with the IPv6 methods.\n        IPv4.prototype.toNormalizedString = function () {\n            return this.toString();\n        };\n\n        // Returns the address in convenient, decimal-dotted format.\n        IPv4.prototype.toString = function () {\n            return this.octets.join('.');\n        };\n\n        return IPv4;\n    })();\n\n    // A utility function to return broadcast address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {\n\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 4) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Checks if a given string is formatted like IPv4 address.\n    ipaddr.IPv4.isIPv4 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks if a given string is a valid IPv4 address.\n    ipaddr.IPv4.isValid = function (string) {\n        try {\n            new this(this.parser(string));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // Checks if a given string is a full four-part IPv4 Address.\n    ipaddr.IPv4.isValidFourPartDecimal = function (string) {\n        if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 4) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Tries to parse and validate a string with IPv4 address.\n    // Throws an error if it fails.\n    ipaddr.IPv4.parse = function (string) {\n        const parts = this.parser(string);\n\n        if (parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv4 Address');\n        }\n\n        return new this(parts);\n    };\n\n    // Parses the string as an IPv4 Address with CIDR Notation.\n    ipaddr.IPv4.parseCIDR = function (string) {\n        let match;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            const maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 32) {\n                const parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv4 CIDR range');\n    };\n\n    // Classful variants (like a.b, where a is an octet, and b is a 24-bit\n    // value representing last three octets; this corresponds to a class C\n    // address) are omitted due to classless nature of modern Internet.\n    ipaddr.IPv4.parser = function (string) {\n        let match, part, value;\n\n        // parseInt recognizes all that octal & hexadecimal weirdness for us\n        if ((match = string.match(ipv4Regexes.fourOctet))) {\n            return (function () {\n                const ref = match.slice(1, 6);\n                const results = [];\n\n                for (let i = 0; i < ref.length; i++) {\n                    part = ref[i];\n                    results.push(parseIntAuto(part));\n                }\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.longValue))) {\n            value = parseIntAuto(match[1]);\n            if (value > 0xffffffff || value < 0) {\n                throw new Error('ipaddr: address outside defined range');\n            }\n\n            return ((function () {\n                const results = [];\n                let shift;\n\n                for (shift = 0; shift <= 24; shift += 8) {\n                    results.push((value >> shift) & 0xff);\n                }\n\n                return results;\n            })()).reverse();\n        } else if ((match = string.match(ipv4Regexes.twoOctet))) {\n            return (function () {\n                const ref = match.slice(1, 4);\n                const results = [];\n\n                value = parseIntAuto(ref[1]);\n                if (value > 0xffffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push((value >> 16) & 0xff);\n                results.push((value >>  8) & 0xff);\n                results.push( value        & 0xff);\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.threeOctet))) {\n            return (function () {\n                const ref = match.slice(1, 5);\n                const results = [];\n\n                value = parseIntAuto(ref[2]);\n                if (value > 0xffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push(parseIntAuto(ref[1]));\n                results.push((value >> 8) & 0xff);\n                results.push( value       & 0xff);\n\n                return results;\n            })();\n        } else {\n            return null;\n        }\n    };\n\n    // A utility function to return subnet mask in IPv4 format given the prefix length\n    ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 32) {\n            throw new Error('ipaddr: invalid IPv4 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 4) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // An IPv6 address (RFC2460)\n    ipaddr.IPv6 = (function () {\n        // Constructs an IPv6 address from an array of eight 16 - bit parts\n        // or sixteen 8 - bit parts in network order(MSB first).\n        // Throws an error if the input is invalid.\n        function IPv6 (parts, zoneId) {\n            let i, part;\n\n            if (parts.length === 16) {\n                this.parts = [];\n                for (i = 0; i <= 14; i += 2) {\n                    this.parts.push((parts[i] << 8) | parts[i + 1]);\n                }\n            } else if (parts.length === 8) {\n                this.parts = parts;\n            } else {\n                throw new Error('ipaddr: ipv6 part count should be 8 or 16');\n            }\n\n            for (i = 0; i < this.parts.length; i++) {\n                part = this.parts[i];\n                if (!((0 <= part && part <= 0xffff))) {\n                    throw new Error('ipaddr: ipv6 part should fit in 16 bits');\n                }\n            }\n\n            if (zoneId) {\n                this.zoneId = zoneId;\n            }\n        }\n\n        // Special IPv6 ranges\n        IPv6.prototype.SpecialRanges = {\n            // RFC4291, here and after\n            unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n            linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n            multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n            loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n            uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n            ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n            // RFC6145\n            rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n            // RFC6052\n            rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n            // RFC3056\n            '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n            // RFC6052, RFC6146\n            teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n            // RFC4291\n            reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n        };\n\n        // Checks if this address is an IPv4-mapped IPv6 address.\n        IPv6.prototype.isIPv4MappedAddress = function () {\n            return this.range() === 'ipv4Mapped';\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv6.prototype.kind = function () {\n            return 'ipv6';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv6.prototype.match = function (other, cidrRange) {\n            let ref;\n\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv6') {\n                throw new Error('ipaddr: cannot match ipv6 address with non-ipv6 one');\n            }\n\n            return matchCIDR(this.parts, other.parts, 16, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv6 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv6.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 16,\n                32768: 15,\n                49152: 14,\n                57344: 13,\n                61440: 12,\n                63488: 11,\n                64512: 10,\n                65024: 9,\n                65280: 8,\n                65408: 7,\n                65472: 6,\n                65504: 5,\n                65520: 4,\n                65528: 3,\n                65532: 2,\n                65534: 1,\n                65535: 0\n            };\n            let part, zeros;\n\n            for (let i = 7; i >= 0; i -= 1) {\n                part = this.parts[i];\n                if (part in zerotable) {\n                    zeros = zerotable[part];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 16) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 128 - cidr;\n        };\n\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv6.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv6.prototype.toByteArray = function () {\n            let part;\n            const bytes = [];\n            const ref = this.parts;\n            for (let i = 0; i < ref.length; i++) {\n                part = ref[i];\n                bytes.push(part >> 8);\n                bytes.push(part & 0xff);\n            }\n\n            return bytes;\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:0db8:0008:0066:0000:0000:0000:0001\n        IPv6.prototype.toFixedLengthString = function () {\n            const addr = ((function () {\n                const results = [];\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(padPart(this.parts[i].toString(16), 4));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Converts this address to IPv4 address if it is an IPv4-mapped IPv6 address.\n        // Throws an error otherwise.\n        IPv6.prototype.toIPv4Address = function () {\n            if (!this.isIPv4MappedAddress()) {\n                throw new Error('ipaddr: trying to convert a generic ipv6 address to ipv4');\n            }\n\n            const ref = this.parts.slice(-2);\n            const high = ref[0];\n            const low = ref[1];\n\n            return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:db8:8:66:0:0:0:1\n        //\n        // Deprecated: use toFixedLengthString() instead.\n        IPv6.prototype.toNormalizedString = function () {\n            const addr = ((function () {\n                const results = [];\n\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(this.parts[i].toString(16));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        // in line with RFC 5952 (see https://tools.ietf.org/html/rfc5952#section-4)\n        IPv6.prototype.toRFC5952String = function () {\n            const regex = /((^|:)(0(:|$)){2,})/g;\n            const string = this.toNormalizedString();\n            let bestMatchIndex = 0;\n            let bestMatchLength = -1;\n            let match;\n\n            while ((match = regex.exec(string))) {\n                if (match[0].length > bestMatchLength) {\n                    bestMatchIndex = match.index;\n                    bestMatchLength = match[0].length;\n                }\n            }\n\n            if (bestMatchLength < 0) {\n                return string;\n            }\n\n            return `${string.substring(0, bestMatchIndex)}::${string.substring(bestMatchIndex + bestMatchLength)}`;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        //\n        // Deprecated: use toRFC5952String() instead.\n        IPv6.prototype.toString = function () {\n            // Replace the first sequence of 1 or more '0' parts with '::'\n            return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n        };\n\n        return IPv6;\n\n    })();\n\n    // A utility function to return broadcast address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.broadcastAddressFromCIDR = function (string) {\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 16) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Checks if a given string is formatted like IPv6 address.\n    ipaddr.IPv6.isIPv6 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks to see if string is a valid IPv6 Address\n    ipaddr.IPv6.isValid = function (string) {\n\n        // Since IPv6.isValid is always called first, this shortcut\n        // provides a substantial performance gain.\n        if (typeof string === 'string' && string.indexOf(':') === -1) {\n            return false;\n        }\n\n        try {\n            const addr = this.parser(string);\n            new this(addr.parts, addr.zoneId);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 16) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Tries to parse and validate a string with IPv6 address.\n    // Throws an error if it fails.\n    ipaddr.IPv6.parse = function (string) {\n        const addr = this.parser(string);\n\n        if (addr.parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv6 Address');\n        }\n\n        return new this(addr.parts, addr.zoneId);\n    };\n\n    ipaddr.IPv6.parseCIDR = function (string) {\n        let maskLength, match, parsed;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 128) {\n                parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv6 CIDR range');\n    };\n\n    // Parse an IPv6 address.\n    ipaddr.IPv6.parser = function (string) {\n        let addr, i, match, octet, octets, zoneId;\n\n        if ((match = string.match(ipv6Regexes.deprecatedTransitional))) {\n            return this.parser(`::ffff:${match[1]}`);\n        }\n        if (ipv6Regexes.native.test(string)) {\n            return expandIPv6(string, 8);\n        }\n        if ((match = string.match(ipv6Regexes.transitional))) {\n            zoneId = match[6] || '';\n            addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n            if (addr.parts) {\n                octets = [\n                    parseInt(match[2]),\n                    parseInt(match[3]),\n                    parseInt(match[4]),\n                    parseInt(match[5])\n                ];\n                for (i = 0; i < octets.length; i++) {\n                    octet = octets[i];\n                    if (!((0 <= octet && octet <= 255))) {\n                        return null;\n                    }\n                }\n\n                addr.parts.push(octets[0] << 8 | octets[1]);\n                addr.parts.push(octets[2] << 8 | octets[3]);\n                return {\n                    parts: addr.parts,\n                    zoneId: addr.zoneId\n                };\n            }\n        }\n\n        return null;\n    };\n\n    // A utility function to return subnet mask in IPv6 format given the prefix length\n    ipaddr.IPv6.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 128) {\n            throw new Error('ipaddr: invalid IPv6 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 16) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // Try to parse an array in network order (MSB first) for IPv4 and IPv6\n    ipaddr.fromByteArray = function (bytes) {\n        const length = bytes.length;\n\n        if (length === 4) {\n            return new ipaddr.IPv4(bytes);\n        } else if (length === 16) {\n            return new ipaddr.IPv6(bytes);\n        } else {\n            throw new Error('ipaddr: the binary input is neither an IPv6 nor IPv4 address');\n        }\n    };\n\n    // Checks if the address is valid IP address\n    ipaddr.isValid = function (string) {\n        return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n    };\n\n\n    // Attempts to parse an IP Address, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parse = function (string) {\n        if (ipaddr.IPv6.isValid(string)) {\n            return ipaddr.IPv6.parse(string);\n        } else if (ipaddr.IPv4.isValid(string)) {\n            return ipaddr.IPv4.parse(string);\n        } else {\n            throw new Error('ipaddr: the address has neither IPv6 nor IPv4 format');\n        }\n    };\n\n    // Attempt to parse CIDR notation, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parseCIDR = function (string) {\n        try {\n            return ipaddr.IPv6.parseCIDR(string);\n        } catch (e) {\n            try {\n                return ipaddr.IPv4.parseCIDR(string);\n            } catch (e2) {\n                throw new Error('ipaddr: the address has neither IPv6 nor IPv4 CIDR format');\n            }\n        }\n    };\n\n    // Parse an address and return plain IPv4 address if it is an IPv4-mapped address\n    ipaddr.process = function (string) {\n        const addr = this.parse(string);\n\n        if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n            return addr.toIPv4Address();\n        } else {\n            return addr;\n        }\n    };\n\n    // An utility function to ease named range matching. See examples below.\n    // rangeList can contain both IPv4 and IPv6 subnet entries and will not throw errors\n    // on matching IPv4 addresses to IPv6 ranges or vice versa.\n    ipaddr.subnetMatch = function (address, rangeList, defaultName) {\n        let i, rangeName, rangeSubnets, subnet;\n\n        if (defaultName === undefined || defaultName === null) {\n            defaultName = 'unicast';\n        }\n\n        for (rangeName in rangeList) {\n            if (Object.prototype.hasOwnProperty.call(rangeList, rangeName)) {\n                rangeSubnets = rangeList[rangeName];\n                // ECMA5 Array.isArray isn't available everywhere\n                if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n                    rangeSubnets = [rangeSubnets];\n                }\n\n                for (i = 0; i < rangeSubnets.length; i++) {\n                    subnet = rangeSubnets[i];\n                    if (address.kind() === subnet[0].kind() && address.match.apply(address, subnet)) {\n                        return rangeName;\n                    }\n                }\n            }\n        }\n\n        return defaultName;\n    };\n\n    // Export for both the CommonJS and browser-like environment\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = ipaddr;\n\n    } else {\n        root.ipaddr = ipaddr;\n    }\n\n}(this));\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","'use strict'\n\nconst protons = require('protons')\nconst pb = protons(require('./unixfs.proto'))\n// encode/decode\nconst unixfsData = pb.Data\n// const unixfsMetadata = pb.MetaData // encode/decode\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nfunction Data (type, data) {\n  if (!(this instanceof Data)) {\n    return new Data(type, data)\n  }\n  if (types.indexOf(type) === -1) {\n    throw new Error('Type: ' + type + ' is not valid')\n  }\n\n  this.type = type\n  this.data = data\n  this.blockSizes = []\n\n  if (this.type === 'file') {\n    this.mode = parseInt('0644', 8)\n  }\n\n  if (this.type === 'directory' || this.type === 'hamt-sharded-directory') {\n    this.mode = parseInt('0755', 8)\n  }\n\n  this.addBlockSize = (size) => {\n    this.blockSizes.push(size)\n  }\n\n  this.removeBlockSize = (index) => {\n    this.blockSizes.splice(index, 1)\n  }\n\n  // data.length + blockSizes\n  this.fileSize = () => {\n    if (dirTypes.indexOf(this.type) >= 0) {\n      // dirs don't have file size\n      return undefined\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n    if (data) {\n      sum += data.length\n    }\n    return sum\n  }\n\n  // encode to protobuf\n  this.marshal = () => {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = unixfsData.DataType.Raw; break\n      case 'directory': type = unixfsData.DataType.Directory; break\n      case 'file': type = unixfsData.DataType.File; break\n      case 'metadata': type = unixfsData.DataType.Metadata; break\n      case 'symlink': type = unixfsData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = unixfsData.DataType.HAMTShard; break\n      default:\n        throw new Error(`Unkown type: \"${this.type}\"`)\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let blockSizes = this.blockSizes\n\n    if (!this.blockSizes || !this.blockSizes.length) {\n      blockSizes = undefined\n    }\n\n    if ((this.type === 'directory' || this.type === 'hamt-sharded-directory') && this.mode === parseInt('0755', 8)) {\n      delete this.mode\n    }\n\n    if (this.type === 'file' && this.mode === parseInt('0644', 8)) {\n      delete this.mode\n    }\n\n    return unixfsData.encode({\n      Type: type,\n      Data: data,\n      filesize: this.fileSize(),\n      blocksizes: blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode: this.mode,\n      mtime: this.mtime\n    })\n  }\n}\n\n// decode from protobuf https://github.com/ipfs/go-ipfs/blob/master/unixfs/format.go#L24\nData.unmarshal = (marsheled) => {\n  const decoded = unixfsData.decode(marsheled)\n  if (!decoded.Data) {\n    decoded.Data = undefined\n  }\n  const obj = new Data(types[decoded.Type], decoded.Data)\n  obj.blockSizes = decoded.blocksizes\n\n  if (decoded.mode) {\n    obj.mode = decoded.mode\n  }\n\n  if (decoded.mtime) {\n    obj.mtime = decoded.mtime\n  }\n\n  return obj\n}\n\nexports = module.exports = Data\n","'use strict'\n\nmodule.exports = `message Data {\n  enum DataType {\n    Raw = 0;\n    Directory = 1;\n    File = 2;\n    Metadata = 3;\n    Symlink = 4;\n    HAMTShard = 5;\n  }\n\n  required DataType Type = 1;\n  optional bytes Data = 2;\n  optional uint64 filesize = 3;\n  repeated uint64 blocksizes = 4;\n  optional uint64 hashType = 5;\n  optional uint64 fanout = 6;\n  optional uint32 mode = 7;\n  optional int64 mtime = 8;\n}\n\nmessage Metadata {\n  optional string MimeType = 1;\n}`\n","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n","'use strict'\n\n/**\n * @typedef {globalThis.Headers} Headers\n * @typedef {globalThis.Request} Request\n * @typedef {globalThis.Response} Response\n */\n\n// use window.fetch if it is available, fall back to node-fetch if not\nmodule.exports = require('native-fetch')\n","'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n","/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\nconst browserReableStreamToIt = require('browser-readablestream-to-it')\nconst { isBrowser, isWebWorker } = require('./env')\nconst all = require('it-all')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    if (globalThis.ReadableStream != null && opts.body instanceof globalThis.ReadableStream && (isBrowser || isWebWorker)) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n      opts.body = new Blob(await all(browserReableStreamToIt(opts.body)))\n    }\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers,\n\n          // https://fetch.spec.whatwg.org/#dom-requestinit-duplex\n          // https://github.com/whatwg/fetch/issues/1254\n          duplex: 'half'\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n","'use strict'\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n","'use strict'\n\nconst { TimeoutError, AbortError } = require('./error')\n// @ts-expect-error\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\n\n/**\n * @typedef {import('../types').FetchOptions} FetchOptions\n * @typedef {import('../types').ProgressFn} ProgressFn\n */\n\n/**\n * Fetch with progress\n *\n * @param {string | Request} url\n * @param {FetchOptions} [options]\n * @returns {Promise<ResponseWithURL>}\n */\nconst fetchWithProgress = (url, options = {}) => {\n  const request = new XMLHttpRequest()\n  request.open(options.method || 'GET', url.toString(), true)\n\n  const { timeout, headers } = options\n\n  if (timeout && timeout > 0 && timeout < Infinity) {\n    request.timeout = timeout\n  }\n\n  if (options.overrideMimeType != null) {\n    request.overrideMimeType(options.overrideMimeType)\n  }\n\n  if (headers) {\n    for (const [name, value] of new Headers(headers)) {\n      request.setRequestHeader(name, value)\n    }\n  }\n\n  if (options.signal) {\n    options.signal.onabort = () => request.abort()\n  }\n\n  if (options.onUploadProgress) {\n    request.upload.onprogress = options.onUploadProgress\n  }\n\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\n  // instances coming from JSDOM are not compatible with `Response` from\n  // node-fetch (which is the setup we get when testing with jest because\n  // it uses JSDOM which does not provide a global fetch\n  // https://github.com/jsdom/jsdom/issues/1724)\n  request.responseType = 'arraybuffer'\n\n  return new Promise((resolve, reject) => {\n    /**\n     * @param {Event} event\n     */\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'error': {\n          resolve(Response.error())\n          break\n        }\n        case 'load': {\n          resolve(\n            new ResponseWithURL(request.responseURL, request.response, {\n              status: request.status,\n              statusText: request.statusText,\n              headers: parseHeaders(request.getAllResponseHeaders())\n            })\n          )\n          break\n        }\n        case 'timeout': {\n          reject(new TimeoutError())\n          break\n        }\n        case 'abort': {\n          reject(new AbortError())\n          break\n        }\n        default: {\n          break\n        }\n      }\n    }\n    request.onerror = handleEvent\n    request.onload = handleEvent\n    request.ontimeout = handleEvent\n    request.onabort = handleEvent\n\n    // @ts-expect-error options.body can be a node readable stream, which isn't compatible with XHR, but this\n    // file is a browser override so you won't get a node readable stream so ignore the error\n    request.send(options.body)\n  })\n}\n\nconst fetchWithStreaming = fetch\n\n/**\n * @param {string | Request} url\n * @param {FetchOptions} options\n */\nconst fetchWith = (url, options = {}) =>\n  (options.onUploadProgress != null)\n    ? fetchWithProgress(url, options)\n    : fetchWithStreaming(url, options)\n\n/**\n * Parse Headers from a XMLHttpRequest\n *\n * @param {string} input\n * @returns {Headers}\n */\nconst parseHeaders = (input) => {\n  const headers = new Headers()\n  for (const line of input.trim().split(/[\\r\\n]+/)) {\n    const index = line.indexOf(': ')\n    if (index > 0) {\n      headers.set(line.slice(0, index), line.slice(index + 1))\n    }\n  }\n\n  return headers\n}\n\nclass ResponseWithURL extends Response {\n  /**\n   * @param {string} url\n   * @param {BodyInit} body\n   * @param {ResponseInit} options\n   */\n  constructor (url, body, options) {\n    super(body, options)\n    Object.defineProperty(this, 'url', { value: url })\n  }\n}\n\nmodule.exports = {\n  fetch: fetchWith,\n  Request,\n  Headers\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _isObject = require('lodash/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _initialParams = require('./internal/initialParams');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if ((0, _isObject2.default)(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                invokeCallback(callback, null, value);\n            }, function (err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        (0, _setImmediate2.default)(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (fn) {\n    return function () /*...args, callback*/{\n        var args = (0, _slice2.default)(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = once;\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = onlyOnce;\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.hasNextTick = exports.hasSetImmediate = undefined;\nexports.fallback = fallback;\nexports.wrap = wrap;\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn /*, ...args*/) {\n        var args = (0, _slice2.default)(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexports.default = wrap(_defer);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = slice;\nfunction slice(arrayLike, start) {\n    start = start | 0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for (var idx = 0; idx < newLen; idx++) {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAsync = undefined;\n\nvar _asyncify = require('../asyncify');\n\nvar _asyncify2 = _interopRequireDefault(_asyncify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n}\n\nexports.default = wrapAsync;\nexports.isAsync = isAsync;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name setImmediate\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.nextTick]{@link module:Utils.nextTick}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nexports.default = _setImmediate2.default;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (tasks, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    if (!(0, _isArray2.default)(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);\n        args.push((0, _onlyOnce2.default)(next));\n        task.apply(null, args);\n    }\n\n    function next(err /*, ...args*/) {\n        if (err || taskIndex === tasks.length) {\n            return callback.apply(null, arguments);\n        }\n        nextTask((0, _slice2.default)(arguments, 1));\n    }\n\n    nextTask([]);\n};\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */","'use strict'\n\nconst DAGLink = require('./index.js')\n\nfunction create (name, size, cid, callback) {\n  const link = new DAGLink(name, size, cid)\n  callback(null, link)\n}\n\nmodule.exports = create\n","'use strict'\n\nconst CID = require('cids')\nconst assert = require('assert')\nconst withIs = require('class-is')\n\n// Link represents an IPFS Merkle DAG Link between Nodes.\nclass DAGLink {\n  constructor (name, size, cid) {\n    assert(cid, 'A link requires a cid to point to')\n    // assert(size, 'A link requires a size')\n    //  note - links should include size, but this assert is disabled\n    //  for now to maintain consistency with go-ipfs pinset\n\n    this._name = name || ''\n    this._nameBuf = null\n    this._size = size\n    this._cid = new CID(cid)\n  }\n\n  toString () {\n    return `DAGLink <${this._cid.toBaseEncodedString()} - name: \"${this.name}\", size: ${this.size}>`\n  }\n\n  toJSON () {\n    if (!this._json) {\n      this._json = Object.freeze({\n        name: this.name,\n        size: this.size,\n        cid: this._cid.toBaseEncodedString()\n      })\n    }\n\n    return Object.assign({}, this._json)\n  }\n\n  get name () {\n    return this._name\n  }\n\n  // Memoize the Buffer representation of name\n  // We need this to sort the links, otherwise\n  // we will reallocate new buffers every time\n  get nameAsBuffer () {\n    if (this._nameBuf !== null) {\n      return this._nameBuf\n    }\n\n    this._nameBuf = Buffer.from(this._name)\n    return this._nameBuf\n  }\n\n  set name (name) {\n    throw new Error(\"Can't set property: 'name' is immutable\")\n  }\n\n  get size () {\n    return this._size\n  }\n\n  set size (size) {\n    throw new Error(\"Can't set property: 'size' is immutable\")\n  }\n\n  get cid () {\n    return this._cid\n  }\n\n  set cid (cid) {\n    throw new Error(\"Can't set property: 'cid' is immutable\")\n  }\n}\n\nexports = module.exports = withIs(DAGLink, { className: 'DAGLink', symbolName: '@ipld/js-ipld-dag-pb/daglink' })\nexports.create = require('./create')\nexports.util = require('./util')\n","'use strict'\n\nconst DAGLink = require('./index')\n\nfunction createDagLinkFromB58EncodedHash (link) {\n  return new DAGLink(\n    link.name ? link.name : link.Name,\n    link.size ? link.size : link.Size,\n    link.hash || link.Hash || link.multihash || link.cid\n  )\n}\n\nexports = module.exports\nexports.createDagLinkFromB58EncodedHash = createDagLinkFromB58EncodedHash\n","'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst toDAGLink = dagNodeUtil.toDAGLink\nconst DAGLink = require('../dag-link')\nconst DAGNode = require('./index')\nconst create = require('./create')\n\nfunction asDAGLink (link, callback) {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n\n    return callback(null, link)\n  }\n\n  if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    return toDAGLink(link, {}, callback)\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  try {\n    callback(null, new DAGLink(link.name, link.size, link.multihash || link.hash || link.cid))\n  } catch (err) {\n    return callback(err)\n  }\n}\n\nfunction addLink (node, link, callback) {\n  const links = cloneLinks(node)\n  const data = cloneData(node)\n\n  asDAGLink(link, (error, link) => {\n    if (error) {\n      return callback(error)\n    }\n\n    links.push(link)\n    create(data, links, callback)\n  })\n}\n\nmodule.exports = addLink\n","'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst create = require('./create')\n\nfunction clone (dagNode, callback) {\n  const data = cloneData(dagNode)\n  const links = cloneLinks(dagNode)\n  create(data, links, callback)\n}\n\nmodule.exports = clone\n","'use strict'\n\nconst sort = require('stable')\nconst {\n  serialize\n} = require('../util.js')\nconst dagNodeUtil = require('./util.js')\nconst linkSort = dagNodeUtil.linkSort\nconst DAGNode = require('./index.js')\nconst DAGLink = require('../dag-link')\n\nfunction create (data, links, callback) {\n  if (typeof data === 'function') {\n    callback = data\n    data = undefined\n  } else if (typeof data === 'string') {\n    data = Buffer.from(data)\n  }\n  if (typeof links === 'function') {\n    callback = links\n    links = []\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    return callback(new Error('Passed \\'data\\' is not a buffer or a string!'))\n  }\n\n  links = links.map((link) => {\n    return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link)\n  })\n  links = sort(links, linkSort)\n\n  serialize({\n    data, links\n  }, (err, buffer) => {\n    if (err) {\n      return callback(err)\n    }\n\n    return callback(null, new DAGNode(data, links, buffer.length))\n  })\n}\n\nmodule.exports = create\n","'use strict'\n\nconst assert = require('assert')\nconst withIs = require('class-is')\n\nclass DAGNode {\n  constructor (data, links, serializedSize) {\n    if (serializedSize !== 0) {\n      assert(serializedSize, 'A DAGNode requires it\\'s serialized size')\n    }\n\n    this._data = data || Buffer.alloc(0)\n    this._links = links || []\n    this._serializedSize = serializedSize\n  }\n\n  toJSON () {\n    if (!this._json) {\n      this._json = Object.freeze({\n        data: this.data,\n        links: this.links.map((l) => l.toJSON()),\n        size: this.size\n      })\n    }\n\n    return Object.assign({}, this._json)\n  }\n\n  toString () {\n    return `DAGNode <data: \"${this.data.toString('base64')}\", links: ${this.links.length}, size: ${this.size}>`\n  }\n\n  get data () {\n    return this._data\n  }\n\n  set data (data) {\n    throw new Error(\"Can't set property: 'data' is immutable\")\n  }\n\n  get links () {\n    return this._links\n  }\n\n  set links (links) {\n    throw new Error(\"Can't set property: 'links' is immutable\")\n  }\n\n  get size () {\n    if (this._size === undefined) {\n      this._size = this.links.reduce((sum, l) => sum + l.size, this._serializedSize)\n    }\n\n    return this._size\n  }\n\n  set size (size) {\n    throw new Error(\"Can't set property: 'size' is immutable\")\n  }\n}\n\nexports = module.exports = withIs(DAGNode, { className: 'DAGNode', symbolName: '@ipld/js-ipld-dag-pb/dagnode' })\nexports.create = require('./create')\nexports.clone = require('./clone')\nexports.addLink = require('./addLink')\nexports.rmLink = require('./rmLink')\n","'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst create = require('./create')\nconst CID = require('cids')\n\nfunction rmLink (dagNode, nameOrCid, callback) {\n  const data = cloneData(dagNode)\n  let links = cloneLinks(dagNode)\n\n  if (typeof nameOrCid === 'string') {\n    links = links.filter((link) => link.name !== nameOrCid)\n  } else if (Buffer.isBuffer(nameOrCid) || CID.isCID(nameOrCid)) {\n    links = links.filter((link) => !link.cid.equals(nameOrCid))\n  } else {\n    return callback(new Error('second arg needs to be a name or CID'), null)\n  }\n\n  create(data, links, callback)\n}\n\nmodule.exports = rmLink\n","'use strict'\n\nconst DAGLink = require('./../dag-link')\nconst {\n  cid\n} = require('../util')\n\nexports = module.exports\n\nfunction cloneData (dagNode) {\n  let data\n\n  if (dagNode.data && dagNode.data.length > 0) {\n    data = Buffer.alloc(dagNode.data.length)\n    dagNode.data.copy(data)\n  } else {\n    data = Buffer.alloc(0)\n  }\n\n  return data\n}\n\nfunction cloneLinks (dagNode) {\n  return dagNode.links.slice()\n}\n\nfunction linkSort (a, b) {\n  return Buffer.compare(a.nameAsBuffer, b.nameAsBuffer)\n}\n\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\nfunction toDAGLink (node, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  cid(node, options, (error, cid) => {\n    if (error) {\n      return callback(error)\n    }\n\n    callback(null, new DAGLink(options.name || '', node.size, cid))\n  })\n}\n\nexports.cloneData = cloneData\nexports.cloneLinks = cloneLinks\nexports.linkSort = linkSort\nexports.toDAGLink = toDAGLink\n","'use strict'\n\nmodule.exports = `// An IPFS MerkleDAG Link\nmessage PBLink {\n\n  // multihash of the target object\n  optional bytes Hash = 1;\n\n  // utf string name. should be unique per object\n  optional string Name = 2;\n\n  // cumulative size of target object\n  optional uint64 Tsize = 3;\n}\n\n// An IPFS MerkleDAG Node\nmessage PBNode {\n\n  // refs to other objects\n  repeated PBLink Links = 2;\n\n  // opaque user data\n  optional bytes Data = 1;\n}`\n","'use strict'\n\nexports.DAGNode = require('./dag-node')\nexports.DAGLink = require('./dag-link')\n\n/*\n * Functions to fulfil IPLD Format interface\n * https://github.com/ipld/interface-ipld-format\n */\nexports.resolver = require('./resolver')\nexports.util = require('./util')\n","'use strict'\n\nconst waterfall = require('async/waterfall')\nconst CID = require('cids')\n\nconst util = require('./util')\n\nexports = module.exports\nexports.multicodec = 'dag-pb'\nexports.defaultHashAlg = 'sha2-256'\n\n/*\n * resolve: receives a path and a binary blob and returns the value on path,\n * throw if not possible. `binaryBlob` is the ProtocolBuffer encoded data.\n */\nexports.resolve = (binaryBlob, path, callback) => {\n  waterfall([\n    (cb) => util.deserialize(binaryBlob, cb),\n    (node, cb) => {\n      // Return the deserialized block if no path is given\n      if (!path) {\n        return callback(null, {\n          value: node,\n          remainderPath: ''\n        })\n      }\n\n      const split = path.split('/')\n\n      if (split[0] === 'Links') {\n        let remainderPath = ''\n\n        // all links\n        if (!split[1]) {\n          return cb(null, {\n            value: node.links.map((l) => l.toJSON()),\n            remainderPath: ''\n          })\n        }\n\n        // select one link\n\n        const values = {}\n\n        // populate both index number and name to enable both cases\n        // for the resolver\n        node.links.forEach((l, i) => {\n          const link = l.toJSON()\n          values[i] = values[link.name] = {\n            cid: link.cid,\n            name: link.name,\n            size: link.size\n          }\n        })\n\n        let value = values[split[1]]\n\n        // if remainderPath exists, value needs to be CID\n        if (split[2] === 'Hash') {\n          value = { '/': value.cid }\n        } else if (split[2] === 'Tsize') {\n          value = value.size\n        } else if (split[2] === 'Name') {\n          value = value.name\n        }\n\n        remainderPath = split.slice(3).join('/')\n\n        cb(null, { value: value, remainderPath: remainderPath })\n      } else if (split[0] === 'Data') {\n        cb(null, { value: node.data, remainderPath: '' })\n      } else {\n        // If split[0] is not 'Data' or 'Links' then we might be trying to refer\n        // to a named link from the Links array. This is because go-ipfs and\n        // js-ipfs have historically supported the ability to do\n        // `ipfs dag get CID/a` where a is a named link in a dag-pb.\n        const values = {}\n\n        node.links.forEach((l, i) => {\n          const link = l.toJSON()\n          values[link.name] = {\n            cid: link.cid,\n            name: link.name,\n            size: link.size\n          }\n        })\n\n        const value = values[split[0]]\n\n        if (value) {\n          return cb(null, {\n            value: { '/': value.cid },\n            remainderPath: split.slice(1).join('/')\n          })\n        }\n\n        cb(new Error('path not available'))\n      }\n    }\n  ], callback)\n}\n\n/*\n * tree: returns a flattened array with paths: values of the project. options\n * is an object that can carry several options (i.e. nestness)\n */\nexports.tree = (binaryBlob, options, callback) => {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options = options || {}\n\n  util.deserialize(binaryBlob, (err, node) => {\n    if (err) {\n      return callback(err)\n    }\n\n    const paths = []\n\n    paths.push('Links')\n\n    node.links.forEach((link, i) => {\n      paths.push(`Links/${i}/Name`)\n      paths.push(`Links/${i}/Tsize`)\n      paths.push(`Links/${i}/Hash`)\n    })\n\n    paths.push('Data')\n\n    callback(null, paths)\n  })\n}\n\n/*\n * isLink: returns the Link if a given path in a binary blob is a Link,\n * false otherwise\n */\nexports.isLink = (binaryBlob, path, callback) => {\n  exports.resolve(binaryBlob, path, (err, result) => {\n    if (err) {\n      return callback(err)\n    }\n\n    if (result.remainderPath.length > 0) {\n      return callback(new Error('path out of scope'))\n    }\n\n    if (typeof result.value === 'object' && result.value['/']) {\n      let valid\n      try {\n        valid = CID.isCID(new CID(result.value['/']))\n      } catch (err) {\n        valid = false\n      }\n      if (valid) {\n        return callback(null, result.value)\n      }\n    }\n\n    callback(null, false)\n  })\n}\n","'use strict'\n\nconst CID = require('cids')\nconst protons = require('protons')\nconst proto = protons(require('./dag.proto.js'))\nconst resolver = require('./resolver')\nconst DAGLink = require('./dag-link')\nconst DAGNode = require('./dag-node')\nconst multihashing = require('multihashing-async')\nconst waterfall = require('async/waterfall')\nconst setImmediate = require('async/setImmediate')\n\nexports = module.exports\n\n/**\n * @callback CidCallback\n * @param {?Error} error - Error if getting the CID failed\n * @param {?CID} cid - CID if call was successful\n */\n/**\n * Get the CID of the DAG-Node.\n *\n * @param {Object} dagNode - Internal representation\n * @param {Object} [options] - Options to create the CID\n * @param {number} [options.version] - CID version number. Defaults to zero if hashAlg == 'sha2-256'; otherwise, 1.\n * @param {string} [options.hashAlg] - Defaults to hashAlg for the resolver\n * @param {CidCallback} callback - Callback that handles the return value\n * @returns {void}\n */\nfunction cid (dagNode, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n  options = options || {}\n  const hashAlg = options.hashAlg || resolver.defaultHashAlg\n  let version = options.version\n  if (typeof version === 'undefined') {\n    version = hashAlg === 'sha2-256' ? 0 : 1\n  }\n  waterfall([\n    (cb) => {\n      if (Buffer.isBuffer(dagNode)) {\n        return cb(null, dagNode)\n      }\n\n      serialize(dagNode, cb)\n    },\n    (serialized, cb) => multihashing(serialized, hashAlg, cb),\n    (mh, cb) => cb(null, new CID(version, resolver.multicodec, mh))\n  ], callback)\n}\n\nfunction serialize (node, callback) {\n  let serialized\n  let {\n    data,\n    links = []\n  } = node\n\n  // If the node is not an instance of a DAGNode, the link.hash might be a Base58 encoded string; decode it\n  if (!DAGNode.isDAGNode(node) && links) {\n    links = links.map((link) => {\n      return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link)\n    })\n  }\n\n  try {\n    serialized = proto.PBNode.encode(toProtoBuf({\n      data, links\n    }))\n  } catch (err) {\n    return callback(err)\n  }\n\n  callback(null, serialized)\n}\n\nfunction deserialize (buffer, callback) {\n  const pbn = proto.PBNode.decode(buffer)\n\n  const links = pbn.Links.map((link) => {\n    return new DAGLink(link.Name, link.Tsize, link.Hash)\n  })\n\n  const data = pbn.Data == null ? Buffer.alloc(0) : pbn.Data\n\n  setImmediate(() => callback(null, new DAGNode(data, links, buffer.length)))\n}\n\nfunction toProtoBuf (node) {\n  const pbn = {}\n\n  if (node.data && node.data.length > 0) {\n    pbn.Data = node.data\n  } else {\n    // NOTE: this has to be null in order to match go-ipfs serialization `null !== new Buffer(0)`\n    pbn.Data = null\n  }\n\n  if (node.links && node.links.length > 0) {\n    pbn.Links = node.links\n      .map((link) => ({\n        Hash: link.cid.buffer,\n        Name: link.name,\n        Tsize: link.size\n      }))\n  } else {\n    pbn.Links = null\n  }\n\n  return pbn\n}\n\nexports.serialize = serialize\nexports.deserialize = deserialize\nexports.cid = cid\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","var isObject = require('is-object')\nvar isWindow = require('is-window')\n\nfunction isNode (val) {\n  if (!isObject(val) || !isWindow(window) || typeof window.Node !== 'function') {\n    return false\n  }\n\n  return typeof val.nodeType === 'number' &&\n    typeof val.nodeName === 'string'\n}\n\nmodule.exports = isNode\n","'use strict'\n\n// Adapted from RFC 2181 (See section 11)\n//\n// The RFC defines a Domain Name to be at most 255 chars including seperators\n// between labels.\n// Subdomains are labels plus a seperator. A label is a string starting and\n// ending with an alphanum, with dashes allowed in the middle. It is between 1 and 63 chars.\n//\n// We make some assumptions below that go beyond the RFC. We assume the TLD\n// to be at least 2 chars. The regex also allows domains longer than 255 chars,\n// but allows at most 127 subdomains, as assuming a lower-bound of one char per\n// subdomain will yield 252, and adding a TLD of 2 chars sums to 254.\n/*\n(?:                   // Group 1: This is for subdomain, which is composed of a label and a seperator (length = [1, 63] + 1)\n  [a-z0-9]\n  (?:\n    [a-z0-9\\-]{0,61} // Limited to 61 chars as we have at least two chars if we reach this group (61 + 2 = 63 which is the limit)\n    [a-z0-9]\n  )?\n  \\.                  // Label seperator\n){0,126}             // If we assume the lower-bound of 1 char labels, we can at most have 126 groups before approaching the total limit of 255 chars\n(?:                   // Group 2: Assume that the TLD is at least 2 chars (for sanity)\n  [a-z0-9]\n  [a-z0-9\\-]{0,61}\n  [a-z0-9]\n)\n\\.?                   // Some consider a trailing dot to be considered valid as it signifies the root of the domain tree\n */\nvar domainNameRegex = /^(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?\\.){0,126}(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9]))\\.?$/i\n\n/**\n * Test whether a string is a valid domain name, optionally checking for a root dot as well\n * @param  {String}  domainName\n * @param  {Boolean} rootDot    Check for a root dot eg. 'example.com.'. Defaults to false\n * @return {Boolean}\n */\nmodule.exports = function isDomainName (domainName, rootDot) {\n  if (rootDot == null) rootDot = false\n\n  if (domainName.length < 2) return false\n  if (domainName.length > 255) return false\n\n  var lastChar = domainName[domainName.length - 1]\n  if (rootDot) {\n    if (lastChar !== '.') return false\n  } else {\n    if (lastChar === '.') return false\n  }\n\n  return domainNameRegex.test(domainName)\n}\n","// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === 'object' && x !== null;\n};\n","module.exports = isPromise;\r\n\r\nfunction isPromise(obj) {\r\n  return obj && typeof obj.then === 'function';\r\n}","'use strict';\nconst {XMLParser, XMLValidator} = require('fast-xml-parser');\n\nconst isSvg = input => {\n\tif (input === undefined || input === null) {\n\t\treturn false;\n\t}\n\n\tinput = input.toString().trim();\n\n\tif (input.length === 0) {\n\t\treturn false;\n\t}\n\n\t// Has to be `!==` as it can also return an object with error info.\n\tif (XMLValidator.validate(input) !== true) {\n\t\treturn false;\n\t}\n\n\tlet jsonObject;\n\tconst parser = new XMLParser();\n\n\ttry {\n\t\tjsonObject = parser.parse(input);\n\t} catch (_) {\n\t\treturn false;\n\t}\n\n\tif (!jsonObject) {\n\t\treturn false;\n\t}\n\n\tif (!('svg' in jsonObject)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nmodule.exports = isSvg;\n// TODO: Remove this for the next major release\nmodule.exports.default = isSvg;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nmodule.exports = function (obj) {\n\n  if (obj == null) {\n    return false;\n  }\n\n  var o = Object(obj);\n\n  return o === o.window;\n};\n","\n'use strict';\n\nmodule.exports = {\n    'RTLD_LAZY': 1,\n    'RTLD_NOW': 2,\n    'RTLD_GLOBAL': 256,\n    'RTLD_LOCAL': 0,\n    'RTLD_DEEPBIND': 8,\n    'E2BIG': 7,\n    'EACCES': 13,\n    'EADDRINUSE': 98,\n    'EADDRNOTAVAIL': 99,\n    'EAFNOSUPPORT': 97,\n    'EAGAIN': 11,\n    'EALREADY': 114,\n    'EBADF': 9,\n    'EBADMSG': 74,\n    'EBUSY': 16,\n    'ECANCELED': 125,\n    'ECHILD': 10,\n    'ECONNABORTED': 103,\n    'ECONNREFUSED': 111,\n    'ECONNRESET': 104,\n    'EDEADLK': 35,\n    'EDESTADDRREQ': 89,\n    'EDOM': 33,\n    'EDQUOT': 122,\n    'EEXIST': 17,\n    'EFAULT': 14,\n    'EFBIG': 27,\n    'EHOSTUNREACH': 113,\n    'EIDRM': 43,\n    'EILSEQ': 84,\n    'EINPROGRESS': 115,\n    'EINTR': 4,\n    'EINVAL': 22,\n    'EIO': 5,\n    'EISCONN': 106,\n    'EISDIR': 21,\n    'ELOOP': 40,\n    'EMFILE': 24,\n    'EMLINK': 31,\n    'EMSGSIZE': 90,\n    'EMULTIHOP': 72,\n    'ENAMETOOLONG': 36,\n    'ENETDOWN': 100,\n    'ENETRESET': 102,\n    'ENETUNREACH': 101,\n    'ENFILE': 23,\n    'ENOBUFS': 105,\n    'ENODATA': 61,\n    'ENODEV': 19,\n    'ENOENT': 2,\n    'ENOEXEC': 8,\n    'ENOLCK': 37,\n    'ENOLINK': 67,\n    'ENOMEM': 12,\n    'ENOMSG': 42,\n    'ENOPROTOOPT': 92,\n    'ENOSPC': 28,\n    'ENOSR': 63,\n    'ENOSTR': 60,\n    'ENOSYS': 38,\n    'ENOTCONN': 107,\n    'ENOTDIR': 20,\n    'ENOTEMPTY': 39,\n    'ENOTSOCK': 88,\n    'ENOTSUP': 95,\n    'ENOTTY': 25,\n    'ENXIO': 6,\n    'EOPNOTSUPP': 95,\n    'EOVERFLOW': 75,\n    'EPERM': 1,\n    'EPIPE': 32,\n    'EPROTO': 71,\n    'EPROTONOSUPPORT': 93,\n    'EPROTOTYPE': 91,\n    'ERANGE': 34,\n    'EROFS': 30,\n    'ESPIPE': 29,\n    'ESRCH': 3,\n    'ESTALE': 116,\n    'ETIME': 62,\n    'ETIMEDOUT': 110,\n    'ETXTBSY': 26,\n    'EWOULDBLOCK': 11,\n    'EXDEV': 18,\n    'PRIORITY_LOW': 19,\n    'PRIORITY_BELOW_NORMAL': 10,\n    'PRIORITY_NORMAL': 0,\n    'PRIORITY_ABOVE_NORMAL': -7,\n    'PRIORITY_HIGH': -14,\n    'PRIORITY_HIGHEST': -20,\n    'SIGHUP': 1,\n    'SIGINT': 2,\n    'SIGQUIT': 3,\n    'SIGILL': 4,\n    'SIGTRAP': 5,\n    'SIGABRT': 6,\n    'SIGIOT': 6,\n    'SIGBUS': 7,\n    'SIGFPE': 8,\n    'SIGKILL': 9,\n    'SIGUSR1': 10,\n    'SIGSEGV': 11,\n    'SIGUSR2': 12,\n    'SIGPIPE': 13,\n    'SIGALRM': 14,\n    'SIGTERM': 15,\n    'SIGCHLD': 17,\n    'SIGSTKFLT': 16,\n    'SIGCONT': 18,\n    'SIGSTOP': 19,\n    'SIGTSTP': 20,\n    'SIGTTIN': 21,\n    'SIGTTOU': 22,\n    'SIGURG': 23,\n    'SIGXCPU': 24,\n    'SIGXFSZ': 25,\n    'SIGVTALRM': 26,\n    'SIGPROF': 27,\n    'SIGWINCH': 28,\n    'SIGIO': 29,\n    'SIGPOLL': 29,\n    'SIGPWR': 30,\n    'SIGSYS': 31,\n    'UV_FS_SYMLINK_DIR': 1,\n    'UV_FS_SYMLINK_JUNCTION': 2,\n    'O_RDONLY': 0,\n    'O_WRONLY': 1,\n    'O_RDWR': 2,\n    'UV_DIRENT_UNKNOWN': 0,\n    'UV_DIRENT_FILE': 1,\n    'UV_DIRENT_DIR': 2,\n    'UV_DIRENT_LINK': 3,\n    'UV_DIRENT_FIFO': 4,\n    'UV_DIRENT_SOCKET': 5,\n    'UV_DIRENT_CHAR': 6,\n    'UV_DIRENT_BLOCK': 7,\n    'S_IFMT': 61440,\n    'S_IFREG': 32768,\n    'S_IFDIR': 16384,\n    'S_IFCHR': 8192,\n    'S_IFBLK': 24576,\n    'S_IFIFO': 4096,\n    'S_IFLNK': 40960,\n    'S_IFSOCK': 49152,\n    'O_CREAT': 64,\n    'O_EXCL': 128,\n    'UV_FS_O_FILEMAP': 0,\n    'O_NOCTTY': 256,\n    'O_TRUNC': 512,\n    'O_APPEND': 1024,\n    'O_DIRECTORY': 65536,\n    'O_NOATIME': 262144,\n    'O_NOFOLLOW': 131072,\n    'O_SYNC': 1052672,\n    'O_DSYNC': 4096,\n    'O_DIRECT': 16384,\n    'O_NONBLOCK': 2048,\n    'S_IRWXU': 448,\n    'S_IRUSR': 256,\n    'S_IWUSR': 128,\n    'S_IXUSR': 64,\n    'S_IRWXG': 56,\n    'S_IRGRP': 32,\n    'S_IWGRP': 16,\n    'S_IXGRP': 8,\n    'S_IRWXO': 7,\n    'S_IROTH': 4,\n    'S_IWOTH': 2,\n    'S_IXOTH': 1,\n    'F_OK': 0,\n    'R_OK': 4,\n    'W_OK': 2,\n    'X_OK': 1,\n    'UV_FS_COPYFILE_EXCL': 1,\n    'COPYFILE_EXCL': 1,\n    'UV_FS_COPYFILE_FICLONE': 2,\n    'COPYFILE_FICLONE': 2,\n    'UV_FS_COPYFILE_FICLONE_FORCE': 4,\n    'COPYFILE_FICLONE_FORCE': 4,\n    'OPENSSL_VERSION_NUMBER': 805306496,\n    'SSL_OP_ALL': 2147485776,\n    'SSL_OP_ALLOW_NO_DHE_KEX': 1024,\n    'SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION': 262144,\n    'SSL_OP_CIPHER_SERVER_PREFERENCE': 4194304,\n    'SSL_OP_CISCO_ANYCONNECT': 32768,\n    'SSL_OP_COOKIE_EXCHANGE': 8192,\n    'SSL_OP_CRYPTOPRO_TLSEXT_BUG': 2147483648,\n    'SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS': 2048,\n    'SSL_OP_EPHEMERAL_RSA': 0,\n    'SSL_OP_LEGACY_SERVER_CONNECT': 4,\n    'SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER': 0,\n    'SSL_OP_MICROSOFT_SESS_ID_BUG': 0,\n    'SSL_OP_MSIE_SSLV2_RSA_PADDING': 0,\n    'SSL_OP_NETSCAPE_CA_DN_BUG': 0,\n    'SSL_OP_NETSCAPE_CHALLENGE_BUG': 0,\n    'SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG': 0,\n    'SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG': 0,\n    'SSL_OP_NO_COMPRESSION': 131072,\n    'SSL_OP_NO_ENCRYPT_THEN_MAC': 524288,\n    'SSL_OP_NO_QUERY_MTU': 4096,\n    'SSL_OP_NO_RENEGOTIATION': 1073741824,\n    'SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION': 65536,\n    'SSL_OP_NO_SSLv2': 0,\n    'SSL_OP_NO_SSLv3': 33554432,\n    'SSL_OP_NO_TICKET': 16384,\n    'SSL_OP_NO_TLSv1': 67108864,\n    'SSL_OP_NO_TLSv1_1': 268435456,\n    'SSL_OP_NO_TLSv1_2': 134217728,\n    'SSL_OP_NO_TLSv1_3': 536870912,\n    'SSL_OP_PKCS1_CHECK_1': 0,\n    'SSL_OP_PKCS1_CHECK_2': 0,\n    'SSL_OP_PRIORITIZE_CHACHA': 2097152,\n    'SSL_OP_SINGLE_DH_USE': 0,\n    'SSL_OP_SINGLE_ECDH_USE': 0,\n    'SSL_OP_SSLEAY_080_CLIENT_DH_BUG': 0,\n    'SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG': 0,\n    'SSL_OP_TLS_BLOCK_PADDING_BUG': 0,\n    'SSL_OP_TLS_D5_BUG': 0,\n    'SSL_OP_TLS_ROLLBACK_BUG': 8388608,\n    'ENGINE_METHOD_RSA': 1,\n    'ENGINE_METHOD_DSA': 2,\n    'ENGINE_METHOD_DH': 4,\n    'ENGINE_METHOD_RAND': 8,\n    'ENGINE_METHOD_EC': 2048,\n    'ENGINE_METHOD_CIPHERS': 64,\n    'ENGINE_METHOD_DIGESTS': 128,\n    'ENGINE_METHOD_PKEY_METHS': 512,\n    'ENGINE_METHOD_PKEY_ASN1_METHS': 1024,\n    'ENGINE_METHOD_ALL': 65535,\n    'ENGINE_METHOD_NONE': 0,\n    'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n    'DH_CHECK_P_NOT_PRIME': 1,\n    'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n    'DH_NOT_SUITABLE_GENERATOR': 8,\n    'ALPN_ENABLED': 1,\n    'RSA_PKCS1_PADDING': 1,\n    'RSA_NO_PADDING': 3,\n    'RSA_PKCS1_OAEP_PADDING': 4,\n    'RSA_X931_PADDING': 5,\n    'RSA_PKCS1_PSS_PADDING': 6,\n    'RSA_PSS_SALTLEN_DIGEST': -1,\n    'RSA_PSS_SALTLEN_MAX_SIGN': -2,\n    'RSA_PSS_SALTLEN_AUTO': -2,\n    'defaultCoreCipherList': 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n    'TLS1_VERSION': 769,\n    'TLS1_1_VERSION': 770,\n    'TLS1_2_VERSION': 771,\n    'TLS1_3_VERSION': 772,\n    'POINT_CONVERSION_COMPRESSED': 2,\n    'POINT_CONVERSION_UNCOMPRESSED': 4,\n    'POINT_CONVERSION_HYBRID': 6,\n    'defaultCipherList': 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'\n};\n\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst MAX_BYTES = 65536\n\n/**\n * @param {number} size\n */\nfunction randomBytes(size) {\n  const bytes = new Uint8Array(size)\n  let generated = 0\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      while (generated < size) {\n        if (generated + MAX_BYTES > size) {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + (size - generated))\n          )\n          generated += size - generated\n        } else {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + MAX_BYTES)\n          )\n          generated += MAX_BYTES\n        }\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  return bytes\n}\n\nmodule.exports = randomBytes\n","'use strict'\n\nconst {\n  URLWithLegacySupport,\n  format,\n  URLSearchParams,\n  defaultBase\n} = require('./src/url')\nconst relative = require('./src/relative')\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams,\n  format,\n  relative,\n  defaultBase\n}\n","'use strict'\n\nconst { URLWithLegacySupport, format } = require('./url')\n\n/**\n * @param {string | undefined} url\n * @param {any} [location]\n * @param {any} [protocolMap]\n * @param {any} [defaultProtocol]\n */\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n  let protocol = location.protocol\n    ? location.protocol.replace(':', '')\n    : 'http'\n\n  // Check protocol map\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':'\n  let urlParsed\n\n  try {\n    urlParsed = new URLWithLegacySupport(url)\n  } catch (err) {\n    urlParsed = {}\n  }\n\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  })\n\n  return new URLWithLegacySupport(url, format(base)).toString()\n}\n","'use strict'\n\nconst isReactNative =\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n\nfunction getDefaultBase () {\n  if (isReactNative) {\n    return 'http://localhost'\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return ''\n  }\n\n  return self.location.protocol + '//' + self.location.host\n}\n\nconst URL = self.URL\nconst defaultBase = getDefaultBase()\n\nclass URLWithLegacySupport {\n  constructor (url = '', base = defaultBase) {\n    this.super = new URL(url, base)\n    this.path = this.pathname + this.search\n    this.auth =\n            this.username && this.password\n              ? this.username + ':' + this.password\n              : null\n\n    this.query =\n            this.search && this.search.startsWith('?')\n              ? this.search.slice(1)\n              : null\n  }\n\n  get hash () {\n    return this.super.hash\n  }\n\n  get host () {\n    return this.super.host\n  }\n\n  get hostname () {\n    return this.super.hostname\n  }\n\n  get href () {\n    return this.super.href\n  }\n\n  get origin () {\n    return this.super.origin\n  }\n\n  get password () {\n    return this.super.password\n  }\n\n  get pathname () {\n    return this.super.pathname\n  }\n\n  get port () {\n    return this.super.port\n  }\n\n  get protocol () {\n    return this.super.protocol\n  }\n\n  get search () {\n    return this.super.search\n  }\n\n  get searchParams () {\n    return this.super.searchParams\n  }\n\n  get username () {\n    return this.super.username\n  }\n\n  set hash (hash) {\n    this.super.hash = hash\n  }\n\n  set host (host) {\n    this.super.host = host\n  }\n\n  set hostname (hostname) {\n    this.super.hostname = hostname\n  }\n\n  set href (href) {\n    this.super.href = href\n  }\n\n  set password (password) {\n    this.super.password = password\n  }\n\n  set pathname (pathname) {\n    this.super.pathname = pathname\n  }\n\n  set port (port) {\n    this.super.port = port\n  }\n\n  set protocol (protocol) {\n    this.super.protocol = protocol\n  }\n\n  set search (search) {\n    this.super.search = search\n  }\n\n  set username (username) {\n    this.super.username = username\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL (o) {\n    return URL.createObjectURL(o)\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL (o) {\n    URL.revokeObjectURL(o)\n  }\n\n  toJSON () {\n    return this.super.toJSON()\n  }\n\n  toString () {\n    return this.super.toString()\n  }\n\n  format () {\n    return this.toString()\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format (obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj)\n\n    return url.toString()\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass =\n            // @ts-ignore its not supported in node but we normalise\n            obj.username && obj.password\n              // @ts-ignore its not supported in node but we normalise\n              ? `${obj.username}:${obj.password}@`\n              : ''\n    const auth = obj.auth ? obj.auth + '@' : ''\n    const port = obj.port ? ':' + obj.port : ''\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\n    const host = obj.host || ''\n    const hostname = obj.hostname || ''\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\n    const hash = obj.hash || ''\n    const pathname = obj.pathname || ''\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search\n\n    return `${protocol}${userPass || auth}${\n            host || hostname + port\n        }${path}${hash}`\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar pluck = function pluck(obj, keys) {\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(keys.map(function (key) {\n    return _defineProperty({}, key, obj[key]);\n  }))));\n};\nvar omit = function omit(obj, keys) {\n  var keySet = new Set(keys);\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(obj).filter(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n      key = _ref3[0];\n    return !keySet.has(key);\n  }).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      key = _ref5[0],\n      val = _ref5[1];\n    return _defineProperty({}, key, val);\n  }))));\n};\n\nexport { omit, pluck };\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","(function(i,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_():\"function\"==typeof define&&define.amd?define(_):(i=i||self,i.JSBI=_())})(this,function(){'use strict';var i=Math.imul,_=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(20>r){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(20===r)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d,d=0;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i,d=0}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}return o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){var _=Math.LN2,t=Math.log;return 0===i?30:0|29-(0|t(i>>>0)/_)},o.__imul=i||function(i,_){return 0|i*_},o});\n//# sourceMappingURL=jsbi-umd.js.map\n","var isEqual = require('lodash/isEqual')\nvar sortBy = require('lodash/sortBy')\nvar uniq = require('lodash/uniq')\nvar uniqWith = require('lodash/uniqWith')\nvar defaults = require('lodash/defaults')\nvar intersectionWith = require('lodash/intersectionWith')\nvar isPlainObject = require('lodash/isPlainObject')\nvar isBoolean = require('lodash/isBoolean')\n\nvar normalizeArray = val => Array.isArray(val)\n  ? val : [val]\nvar undef = val => val === undefined\nvar keys = obj => isPlainObject(obj) || Array.isArray(obj) ? Object.keys(obj) : []\nvar has = (obj, key) => obj.hasOwnProperty(key)\nvar stringArray = arr => sortBy(uniq(arr))\nvar undefEmpty = val => undef(val) || (Array.isArray(val) && val.length === 0)\nvar keyValEqual = (a, b, key, compare) => b && has(b, key) && a && has(a, key) && compare(a[key], b[key])\nvar undefAndZero = (a, b) => (undef(a) && b === 0) || (undef(b) && a === 0) || isEqual(a, b)\nvar falseUndefined = (a, b) => (undef(a) && b === false) || (undef(b) && a === false) || isEqual(a, b)\nvar emptySchema = schema => undef(schema) || isEqual(schema, {}) || schema === true\nvar emptyObjUndef = schema => undef(schema) || isEqual(schema, {})\nvar isSchema = val => undef(val) || isPlainObject(val) || val === true || val === false\n\nfunction undefArrayEqual(a, b) {\n  if (undefEmpty(a) && undefEmpty(b)) {\n    return true\n  } else {\n    return isEqual(stringArray(a), stringArray(b))\n  }\n}\n\nfunction unsortedNormalizedArray(a, b) {\n  a = normalizeArray(a)\n  b = normalizeArray(b)\n  return isEqual(stringArray(a), stringArray(b))\n}\n\nfunction schemaGroup(a, b, key, compare) {\n  var allProps = uniq(keys(a).concat(keys(b)))\n  if (emptyObjUndef(a) && emptyObjUndef(b)) {\n    return true\n  } else if (emptyObjUndef(a) && keys(b).length) {\n    return false\n  } else if (emptyObjUndef(b) && keys(a).length) {\n    return false\n  }\n\n  return allProps.every(function(key) {\n    var aVal = a[key]\n    var bVal = b[key]\n    if (Array.isArray(aVal) && Array.isArray(bVal)) {\n      return isEqual(stringArray(a), stringArray(b))\n    } else if (Array.isArray(aVal) && !Array.isArray(bVal)) {\n      return false\n    } else if (Array.isArray(bVal) && !Array.isArray(aVal)) {\n      return false\n    }\n    return keyValEqual(a, b, key, compare)\n  })\n}\n\nfunction items(a, b, key, compare) {\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return compare(a, b)\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return schemaGroup(a, b, key, compare)\n  } else {\n    return isEqual(a, b)\n  }\n}\n\nfunction unsortedArray(a, b, key, compare) {\n  var uniqueA = uniqWith(a, compare)\n  var uniqueB = uniqWith(b, compare)\n  var inter = intersectionWith(uniqueA, uniqueB, compare)\n  return inter.length === Math.max(uniqueA.length, uniqueB.length)\n}\n\nvar comparers = {\n  title: isEqual,\n  uniqueItems: falseUndefined,\n  minLength: undefAndZero,\n  minItems: undefAndZero,\n  minProperties: undefAndZero,\n  required: undefArrayEqual,\n  enum: undefArrayEqual,\n  type: unsortedNormalizedArray,\n  items: items,\n  anyOf: unsortedArray,\n  allOf: unsortedArray,\n  oneOf: unsortedArray,\n  properties: schemaGroup,\n  patternProperties: schemaGroup,\n  dependencies: schemaGroup\n}\n\nvar acceptsUndefined = [\n  'properties',\n  'patternProperties',\n  'dependencies',\n  'uniqueItems',\n  'minLength',\n  'minItems',\n  'minProperties',\n  'required'\n]\n\nvar schemaProps = ['additionalProperties', 'additionalItems', 'contains', 'propertyNames', 'not']\n\nfunction compare(a, b, options) {\n  options = defaults(options, {\n    ignore: []\n  })\n\n  if (emptySchema(a) && emptySchema(b)) {\n    return true\n  }\n\n  if (!isSchema(a) || !isSchema(b)) {\n    throw new Error('Either of the values are not a JSON schema.')\n  }\n  if (a === b) {\n    return true\n  }\n\n  if (isBoolean(a) && isBoolean(b)) {\n    return a === b\n  }\n\n  if ((a === undefined && b === false) || (b === undefined && a === false)) {\n    return false\n  }\n\n  if ((undef(a) && !undef(b)) || (!undef(a) && undef(b))) {\n    return false\n  }\n\n  var allKeys = uniq(Object.keys(a).concat(Object.keys(b)))\n\n  if (options.ignore.length) {\n    allKeys = allKeys.filter(k => options.ignore.indexOf(k) === -1)\n  }\n\n  if (!allKeys.length) {\n    return true\n  }\n\n  function innerCompare(a, b) {\n    return compare(a, b, options)\n  }\n\n  return allKeys.every(function(key) {\n    var aValue = a[key]\n    var bValue = b[key]\n\n    if (schemaProps.indexOf(key) !== -1) {\n      return compare(aValue, bValue, options)\n    }\n\n    var comparer = comparers[key]\n    if (!comparer) {\n      comparer = isEqual\n    }\n\n    // do simple lodash check first\n    if (isEqual(aValue, bValue)) {\n      return true\n    }\n\n    if (acceptsUndefined.indexOf(key) === -1) {\n      if ((!has(a, key) && has(b, key)) || (has(a, key) && !has(b, key))) {\n        return aValue === bValue\n      }\n    }\n\n    var result = comparer(aValue, bValue, key, innerCompare)\n    if (!isBoolean(result)) {\n      throw new Error('Comparer must return true or false')\n    }\n    return result\n  })\n}\n\nmodule.exports = compare\n","var cloneDeep = require('lodash/cloneDeep')\nvar compare = require('json-schema-compare')\nvar computeLcm = require('compute-lcm')\nvar defaultsDeep = require('lodash/defaultsDeep')\nvar flatten = require('lodash/flatten')\nvar flattenDeep = require('lodash/flattenDeep')\nvar intersection = require('lodash/intersection')\nvar intersectionWith = require('lodash/intersectionWith')\nvar isEqual = require('lodash/isEqual')\nvar isPlainObject = require('lodash/isPlainObject')\nvar pullAll = require('lodash/pullAll')\nvar sortBy = require('lodash/sortBy')\nvar forEach = require('lodash/forEach')\nvar uniq = require('lodash/uniq')\nvar uniqWith = require('lodash/uniqWith')\nvar without = require('lodash/without')\n\nvar withoutArr = (arr, ...rest) => without.apply(null, [arr].concat(flatten(rest)))\nvar isPropertyRelated = (key) => contains(propertyRelated, key)\nvar isItemsRelated = (key) => contains(itemsRelated, key)\nvar contains = (arr, val) => arr.indexOf(val) !== -1\nvar isEmptySchema = (obj) => (!keys(obj).length) && obj !== false && obj !== true\nvar isSchema = (val) => isPlainObject(val) || val === true || val === false\nvar isFalse = (val) => val === false\nvar isTrue = (val) => val === true\nvar schemaResolver = (compacted, key, mergeSchemas) => mergeSchemas(compacted)\nvar stringArray = (values) => sortBy(uniq(flattenDeep(values)))\nvar notUndefined = (val) => val !== undefined\nvar allUniqueKeys = (arr) => uniq(flattenDeep(arr.map(keys)))\n\n// resolvers\nvar first = compacted => compacted[0]\nvar required = compacted => stringArray(compacted)\nvar maximumValue = compacted => Math.max.apply(Math, compacted)\nvar minimumValue = compacted => Math.min.apply(Math, compacted)\nvar uniqueItems = compacted => compacted.some(isTrue)\nvar examples = compacted => uniqWith(flatten(compacted), isEqual)\n\nfunction compareProp(key) {\n  return function(a, b) {\n    return compare({\n      [key]: a\n    }, {[key]: b})\n  }\n}\n\nfunction getAllOf(schema) {\n  if (Array.isArray(schema.allOf)) {\n    var allOf = schema.allOf\n    delete schema.allOf\n    return [schema].concat(allOf.map(function(allSchema) {\n      return getAllOf(allSchema)\n    }))\n  } else {\n    return [schema]\n  }\n}\n\nfunction getValues(schemas, key) {\n  return schemas.map(function(schema) {\n    return schema && schema[key]\n  })\n}\n\nfunction getItemSchemas(subSchemas, key) {\n  return subSchemas.map(function(sub) {\n    if (!sub) {\n      return\n    }\n\n    if (Array.isArray(sub.items)) {\n      var schemaAtPos = sub.items[key]\n      if (isSchema(schemaAtPos)) {\n        return schemaAtPos\n      } else if (sub.hasOwnProperty('additionalItems')) {\n        return sub.additionalItems\n      }\n    } else {\n      return sub.items\n    }\n  })\n}\n\nfunction tryMergeSchemaGroups(schemaGroups, mergeSchemas) {\n  return schemaGroups.map(function(schemas, index) {\n    try {\n      return mergeSchemas(schemas, index)\n    } catch (e) {\n      return undefined\n    }\n  }).filter(notUndefined)\n}\n\nfunction getAdditionalSchemas(subSchemas) {\n  return subSchemas.map(function(sub) {\n    if (!sub) {\n      return\n    }\n    if (Array.isArray(sub.items)) {\n      return sub.additionalItems\n    }\n    return sub.items\n  })\n}\n\nfunction keys(obj) {\n  if (isPlainObject(obj) || Array.isArray(obj)) {\n    return Object.keys(obj)\n  } else {\n    return []\n  }\n}\n\nfunction getAnyOfCombinations(arrOfArrays, combinations) {\n  combinations = combinations || []\n  if (!arrOfArrays.length) {\n    return combinations\n  }\n\n  var values = arrOfArrays.slice(0).shift()\n  var rest = arrOfArrays.slice(1)\n  if (combinations.length) {\n    return getAnyOfCombinations(rest, flatten(combinations.map(combination => values.map(item => ([item].concat(combination))))))\n  }\n  return getAnyOfCombinations(rest, values.map(item => (item)))\n}\n\nfunction mergeWithArray(base, newItems) {\n  if (Array.isArray(base)) {\n    base.splice.apply(base, [0, 0].concat(newItems))\n    return base\n  } else {\n    return newItems\n  }\n}\n\nfunction throwIncompatible(values, paths) {\n  var asJSON\n  try {\n    asJSON = values.map(function(val) {\n      return JSON.stringify(val, null, 2)\n    }).join('\\n')\n  } catch (variable) {\n    asJSON = values.join(', ')\n  }\n  throw new Error('Could not resolve values for path:\"' + paths.join('.') + '\". They are probably incompatible. Values: \\n' + asJSON)\n}\n\nfunction cleanupReturnValue(returnObject) {\n  // cleanup empty\n  for (var prop in returnObject) {\n    if (returnObject.hasOwnProperty(prop) && isEmptySchema(returnObject[prop])) {\n      delete returnObject[prop]\n    }\n  }\n  return returnObject\n}\n\nfunction createRequiredSubMerger(mergeSchemas, key, parents) {\n  return function(schemas, subKey) {\n    if (subKey === undefined) {\n      throw new Error('You need to call merger with a key for the property name or index if array.')\n    }\n    subKey = String(subKey)\n    return mergeSchemas(schemas, null, parents.concat(key, subKey))\n  }\n}\n\nfunction callGroupResolver(keys, resolverName, schemas, mergeSchemas, options, parents) {\n  if (keys.length) {\n    var resolver = options.resolvers[resolverName]\n    if (!resolver) {\n      throw new Error('No resolver found for ' + resolverName)\n    }\n\n    var compacted = uniqWith(schemas.map(function(schema) {\n      return keys.reduce(function(all, key) {\n        if (schema[key] !== undefined) {\n          all[key] = schema[key]\n        }\n        return all\n      }, {})\n    }).filter(notUndefined), compare)\n\n    var related = resolverName === 'properties'\n      ? propertyRelated\n      : itemsRelated\n\n    var mergers = related.reduce(function(all, key) {\n      if (contains(schemaGroupProps, key)) {\n        all[key] = createRequiredSubMerger(mergeSchemas, key, parents)\n      } else {\n        all[key] = function(schemas) {\n          return mergeSchemas(schemas, null, parents.concat(key))\n        }\n      }\n      return all\n    }, {})\n\n    if (resolverName === 'items') {\n      mergers.itemsArray = createRequiredSubMerger(mergeSchemas, 'items', parents)\n      mergers.items = function(schemas) {\n        return mergeSchemas(schemas, null, parents.concat('items'))\n      }\n    }\n\n    var result = resolver(compacted, parents.concat(resolverName), mergers, options)\n\n    if (!isPlainObject(result)) {\n      throwIncompatible(compacted, parents.concat(resolverName))\n    }\n\n    return cleanupReturnValue(result)\n  }\n}\n\n// Provide source when array\nfunction mergeSchemaGroup(group, mergeSchemas, source) {\n  var allKeys = allUniqueKeys(source || group)\n  var extractor = source\n    ? getItemSchemas\n    : getValues\n  return allKeys.reduce(function(all, key) {\n    var schemas = extractor(group, key)\n    var compacted = uniqWith(schemas.filter(notUndefined), compare)\n    all[key] = mergeSchemas(compacted, key)\n    return all\n  }, source\n    ? []\n    : {})\n}\n\nfunction removeFalseSchemas(target) {\n  forEach(target, function(schema, prop) {\n    if (schema === false) {\n      delete target[prop]\n    }\n  })\n}\n\nfunction removeFalseSchemasFromArray(target) {\n  forEach(target, function(schema, index) {\n    if (schema === false) {\n      target.splice(index, 1)\n    }\n  })\n}\n\nfunction createRequiredMetaArray(arr) {\n  return {required: arr}\n}\n\nvar propertyRelated = ['properties', 'patternProperties', 'additionalProperties']\nvar itemsRelated = ['items', 'additionalItems']\nvar schemaGroupProps = ['properties', 'patternProperties', 'definitions', 'dependencies']\nvar schemaArrays = ['anyOf', 'oneOf']\nvar schemaProps = [\n  'additionalProperties',\n  'additionalItems',\n  'contains',\n  'propertyNames',\n  'not',\n  'items'\n]\n\nvar defaultResolvers = {\n  type(compacted) {\n    if (compacted.some(Array.isArray)) {\n      var normalized = compacted.map(function(val) {\n        return Array.isArray(val)\n          ? val\n          : [val]\n      })\n      var common = intersection.apply(null, normalized)\n\n      if (common.length === 1) {\n        return common[0]\n      } else if (common.length > 1) {\n        return uniq(common)\n      }\n    }\n  },\n  properties(values, key, mergers, options) {\n    // first get rid of all non permitted properties\n    if (!options.ignoreAdditionalProperties) {\n      values.forEach(function(subSchema) {\n        var otherSubSchemas = values.filter(s => s !== subSchema)\n        var ownKeys = keys(subSchema.properties)\n        var ownPatternKeys = keys(subSchema.patternProperties)\n        var ownPatterns = ownPatternKeys.map(k => new RegExp(k))\n        otherSubSchemas.forEach(function(other) {\n          var allOtherKeys = keys(other.properties)\n          var keysMatchingPattern = allOtherKeys.filter(k => ownPatterns.some(pk => pk.test(k)))\n          var additionalKeys = withoutArr(allOtherKeys, ownKeys, keysMatchingPattern)\n          additionalKeys.forEach(function(key) {\n            other.properties[key] = mergers.properties([\n              other.properties[key], subSchema.additionalProperties\n            ], key)\n          })\n        })\n      })\n\n      // remove disallowed patternProperties\n      values.forEach(function(subSchema) {\n        var otherSubSchemas = values.filter(s => s !== subSchema)\n        var ownPatternKeys = keys(subSchema.patternProperties)\n        if (subSchema.additionalProperties === false) {\n          otherSubSchemas.forEach(function(other) {\n            var allOtherPatterns = keys(other.patternProperties)\n            var additionalPatternKeys = withoutArr(allOtherPatterns, ownPatternKeys)\n            additionalPatternKeys.forEach(key => delete other.patternProperties[key])\n          })\n        }\n      })\n    }\n\n    var returnObject = {\n      additionalProperties: mergers.additionalProperties(values.map(s => s.additionalProperties)),\n      patternProperties: mergeSchemaGroup(values.map(s => s.patternProperties), mergers.patternProperties),\n      properties: mergeSchemaGroup(values.map(s => s.properties), mergers.properties)\n    }\n\n    if (returnObject.additionalProperties === false) {\n      removeFalseSchemas(returnObject.properties)\n    }\n\n    return returnObject\n  },\n  dependencies(compacted, paths, mergeSchemas) {\n    var allChildren = allUniqueKeys(compacted)\n\n    return allChildren.reduce(function(all, childKey) {\n      var childSchemas = getValues(compacted, childKey)\n      var innerCompacted = uniqWith(childSchemas.filter(notUndefined), isEqual)\n\n      // to support dependencies\n      var innerArrays = innerCompacted.filter(Array.isArray)\n\n      if (innerArrays.length) {\n        if (innerArrays.length === innerCompacted.length) {\n          all[childKey] = stringArray(innerCompacted)\n        } else {\n          var innerSchemas = innerCompacted.filter(isSchema)\n          var arrayMetaScheams = innerArrays.map(createRequiredMetaArray)\n          all[childKey] = mergeSchemas(innerSchemas.concat(arrayMetaScheams), childKey)\n        }\n        return all\n      }\n\n      innerCompacted = uniqWith(innerCompacted, compare)\n\n      all[childKey] = mergeSchemas(innerCompacted, childKey)\n      return all\n    }, {})\n  },\n  items(values, paths, mergers) {\n    var items = values.map(s => s.items)\n    var itemsCompacted = items.filter(notUndefined)\n    var returnObject = {}\n\n    if (itemsCompacted.every(isSchema)) {\n      returnObject.items = mergers.items(items)\n    } else {\n      returnObject.items = mergeSchemaGroup(values, mergers.itemsArray, items)\n    }\n\n    var schemasAtLastPos\n    if (itemsCompacted.every(Array.isArray)) {\n      schemasAtLastPos = values.map(s => s.additionalItems)\n    } else if (itemsCompacted.some(Array.isArray)) {\n      schemasAtLastPos = getAdditionalSchemas(values)\n    }\n\n    if (schemasAtLastPos) {\n      returnObject.additionalItems = mergers.additionalItems(schemasAtLastPos)\n    }\n\n    if (returnObject.additionalItems === false && Array.isArray(returnObject.items)) {\n      removeFalseSchemasFromArray(returnObject.items)\n    }\n\n    return returnObject\n  },\n  oneOf(compacted, paths, mergeSchemas) {\n    var combinations = getAnyOfCombinations(cloneDeep(compacted))\n    var result = tryMergeSchemaGroups(combinations, mergeSchemas)\n    var unique = uniqWith(result, compare)\n\n    if (unique.length) {\n      return unique\n    }\n  },\n  not(compacted) {\n    return {anyOf: compacted}\n  },\n  pattern(compacted, paths, mergeSchemas, options, reportUnresolved) {\n    var key = paths.pop()\n    reportUnresolved(compacted.map(function(regexp) {\n      return {[key]: regexp}\n    }))\n  },\n  multipleOf(compacted) {\n    var integers = compacted.slice(0)\n    var factor = 1\n    while (integers.some(n => !Number.isInteger(n))) {\n      integers = integers.map(n => n * 10)\n      factor = factor * 10\n    }\n    return computeLcm(integers) / factor\n  },\n  enum(compacted) {\n    var enums = intersectionWith.apply(null, compacted.concat(isEqual))\n    if (enums.length) {\n      return sortBy(enums)\n    }\n  }\n}\n\ndefaultResolvers.$id = first\ndefaultResolvers.$ref = first\ndefaultResolvers.$schema = first\ndefaultResolvers.additionalItems = schemaResolver\ndefaultResolvers.additionalProperties = schemaResolver\ndefaultResolvers.anyOf = defaultResolvers.oneOf\ndefaultResolvers.contains = schemaResolver\ndefaultResolvers.default = first\ndefaultResolvers.definitions = defaultResolvers.dependencies\ndefaultResolvers.description = first\ndefaultResolvers.examples = examples\ndefaultResolvers.exclusiveMaximum = minimumValue\ndefaultResolvers.exclusiveMinimum = maximumValue\ndefaultResolvers.maximum = minimumValue\ndefaultResolvers.maxItems = minimumValue\ndefaultResolvers.maxLength = minimumValue\ndefaultResolvers.maxProperties = minimumValue\ndefaultResolvers.minimum = maximumValue\ndefaultResolvers.minItems = maximumValue\ndefaultResolvers.minLength = maximumValue\ndefaultResolvers.minProperties = maximumValue\ndefaultResolvers.propertyNames = schemaResolver\ndefaultResolvers.required = required\ndefaultResolvers.title = first\ndefaultResolvers.uniqueItems = uniqueItems\n\nfunction merger(rootSchema, options, totalSchemas) {\n  totalSchemas = totalSchemas || []\n  options = defaultsDeep(options, {\n    ignoreAdditionalProperties: false,\n    resolvers: defaultResolvers\n  })\n\n  function mergeSchemas(schemas, base, parents) {\n    schemas = cloneDeep(schemas.filter(notUndefined))\n    parents = parents || []\n    var merged = isPlainObject(base)\n      ? base\n      : {}\n\n    // return undefined, an empty schema\n    if (!schemas.length) {\n      return\n    }\n\n    if (schemas.some(isFalse)) {\n      return false\n    }\n\n    if (schemas.every(isTrue)) {\n      return true\n    }\n\n    // there are no false and we don't need the true ones as they accept everything\n    schemas = schemas.filter(isPlainObject)\n\n    var allKeys = allUniqueKeys(schemas)\n\n    if (contains(allKeys, 'allOf')) {\n      return merger({\n        allOf: schemas\n      }, options, totalSchemas)\n    }\n\n    var propertyKeys = allKeys.filter(isPropertyRelated)\n    pullAll(allKeys, propertyKeys)\n\n    var itemKeys = allKeys.filter(isItemsRelated)\n    pullAll(allKeys, itemKeys)\n\n    allKeys.forEach(function(key) {\n      var values = getValues(schemas, key)\n      var compacted = uniqWith(values.filter(notUndefined), compareProp(key))\n\n      // arrayprops like anyOf and oneOf must be merged first, as they contains schemas\n      // allOf is treated differently alltogether\n      if (compacted.length === 1 && contains(schemaArrays, key)) {\n        merged[key] = compacted[0].map(function(schema) {\n          return mergeSchemas([schema], schema)\n        })\n        // prop groups must always be resolved\n      } else if (compacted.length === 1 && !contains(schemaGroupProps, key) && !contains(schemaProps, key)) {\n        merged[key] = compacted[0]\n      } else {\n        var resolver = options.resolvers[key] || options.resolvers.defaultResolver\n\n        if (!resolver) {\n          throw new Error('No resolver found for key ' + key + '. You can provide a resolver for this keyword in the options, or provide a default resolver.')\n        }\n\n        var merger\n        // get custom merger for groups\n        if (contains(schemaGroupProps, key) || contains(schemaArrays, key)) {\n          merger = createRequiredSubMerger(mergeSchemas, key, parents)\n        } else {\n          merger = function(schemas) {\n            return mergeSchemas(schemas, null, parents.concat(key))\n          }\n        }\n\n        var calledWithArray = false\n        merged[key] = resolver(compacted, parents.concat(key), merger, options, function(unresolvedSchemas) {\n          calledWithArray = Array.isArray(unresolvedSchemas)\n          return addToAllOf(unresolvedSchemas)\n        })\n\n        if (merged[key] === undefined && !calledWithArray) {\n          throwIncompatible(compacted, parents.concat(key))\n        } else if (merged[key] === undefined) {\n          delete merged[key]\n        }\n      }\n    })\n\n    Object.assign(merged, callGroupResolver(propertyKeys, 'properties', schemas, mergeSchemas, options, parents))\n    Object.assign(merged, callGroupResolver(itemKeys, 'items', schemas, mergeSchemas, options, parents))\n\n    function addToAllOf(unresolvedSchemas) {\n      merged.allOf = mergeWithArray(merged.allOf, unresolvedSchemas)\n    }\n\n    return merged\n  }\n\n  var allSchemas = flattenDeep(getAllOf(rootSchema))\n  var merged = mergeSchemas(allSchemas, rootSchema)\n\n  return merged\n}\n\nmerger.options = {\n  resolvers: defaultResolvers\n}\n\nmodule.exports = merger\n","var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n","/*\nindex.js - Kademlia DHT K-bucket implementation as a binary tree.\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2021 Tristan Slominski\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n'use strict'\n\nconst randomBytes = require('randombytes')\nconst { EventEmitter } = require('events')\n\n/**\n * @param  {Uint8Array} array1\n * @param  {Uint8Array} array2\n * @return {Boolean}\n */\nfunction arrayEquals (array1, array2) {\n  if (array1 === array2) {\n    return true\n  }\n  if (array1.length !== array2.length) {\n    return false\n  }\n  for (let i = 0, length = array1.length; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction createNode () {\n  return { contacts: [], dontSplit: false, left: null, right: null }\n}\n\nfunction ensureInt8 (name, val) {\n  if (!(val instanceof Uint8Array)) {\n    throw new TypeError(name + ' is not a Uint8Array')\n  }\n}\n\n/**\n * Implementation of a Kademlia DHT k-bucket used for storing\n * contact (peer node) information.\n *\n * @extends EventEmitter\n */\nclass KBucket extends EventEmitter {\n  /**\n   * `options`:\n   *   `distance`: _Function_\n   *     `function (firstId, secondId) { return distance }` An optional\n   *     `distance` function that gets two `id` Uint8Arrays\n   *     and return distance (as number) between them.\n   *   `arbiter`: _Function_ _(Default: vectorClock arbiter)_\n   *     `function (incumbent, candidate) { return contact; }` An optional\n   *     `arbiter` function that givent two `contact` objects with the same `id`\n   *     returns the desired object to be used for updating the k-bucket. For\n   *     more details, see [arbiter function](#arbiter-function).\n   *   `localNodeId`: _Uint8Array_ An optional Uint8Array representing the local node id.\n   *     If not provided, a local node id will be created via `randomBytes(20)`.\n   *     `metadata`: _Object_ _(Default: {})_ Optional satellite data to include\n   *     with the k-bucket. `metadata` property is guaranteed not be altered by,\n   *     it is provided as an explicit container for users of k-bucket to store\n   *     implementation-specific data.\n   *   `numberOfNodesPerKBucket`: _Integer_ _(Default: 20)_ The number of nodes\n   *     that a k-bucket can contain before being full or split.\n   *     `numberOfNodesToPing`: _Integer_ _(Default: 3)_ The number of nodes to\n   *     ping when a bucket that should not be split becomes full. KBucket will\n   *     emit a `ping` event that contains `numberOfNodesToPing` nodes that have\n   *     not been contacted the longest.\n   *\n   * @param {Object=} options optional\n   */\n  constructor (options = {}) {\n    super()\n\n    this.localNodeId = options.localNodeId || randomBytes(20)\n    this.numberOfNodesPerKBucket = options.numberOfNodesPerKBucket || 20\n    this.numberOfNodesToPing = options.numberOfNodesToPing || 3\n    this.distance = options.distance || KBucket.distance\n    // use an arbiter from options or vectorClock arbiter by default\n    this.arbiter = options.arbiter || KBucket.arbiter\n    this.metadata = Object.assign({}, options.metadata)\n\n    ensureInt8('option.localNodeId as parameter 1', this.localNodeId)\n\n    this.root = createNode()\n  }\n\n  /**\n   * Default arbiter function for contacts with the same id. Uses\n   * contact.vectorClock to select which contact to update the k-bucket with.\n   * Contact with larger vectorClock field will be selected. If vectorClock is\n   * the same, candidat will be selected.\n   *\n   * @param  {Object} incumbent Contact currently stored in the k-bucket.\n   * @param  {Object} candidate Contact being added to the k-bucket.\n   * @return {Object}           Contact to updated the k-bucket with.\n   */\n  static arbiter (incumbent, candidate) {\n    return incumbent.vectorClock > candidate.vectorClock ? incumbent : candidate\n  }\n\n  /**\n   * Default distance function. Finds the XOR\n   * distance between firstId and secondId.\n   *\n   * @param  {Uint8Array} firstId  Uint8Array containing first id.\n   * @param  {Uint8Array} secondId Uint8Array containing second id.\n   * @return {Number}              Integer The XOR distance between firstId\n   *                               and secondId.\n   */\n  static distance (firstId, secondId) {\n    let distance = 0\n    let i = 0\n    const min = Math.min(firstId.length, secondId.length)\n    const max = Math.max(firstId.length, secondId.length)\n    for (; i < min; ++i) {\n      distance = distance * 256 + (firstId[i] ^ secondId[i])\n    }\n    for (; i < max; ++i) distance = distance * 256 + 255\n    return distance\n  }\n\n  /**\n   * Adds a contact to the k-bucket.\n   *\n   * @param {Object} contact the contact object to add\n   */\n  add (contact) {\n    ensureInt8('contact.id', (contact || {}).id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      // this is not a leaf node but an inner node with 'low' and 'high'\n      // branches; we will check the appropriate bit of the identifier and\n      // delegate to the appropriate node for further processing\n      node = this._determineNode(node, contact.id, bitIndex++)\n    }\n\n    // check if the contact already exists\n    const index = this._indexOf(node, contact.id)\n    if (index >= 0) {\n      this._update(node, index, contact)\n      return this\n    }\n\n    if (node.contacts.length < this.numberOfNodesPerKBucket) {\n      node.contacts.push(contact)\n      this.emit('added', contact)\n      return this\n    }\n\n    // the bucket is full\n    if (node.dontSplit) {\n      // we are not allowed to split the bucket\n      // we need to ping the first this.numberOfNodesToPing\n      // in order to determine if they are alive\n      // only if one of the pinged nodes does not respond, can the new contact\n      // be added (this prevents DoS flodding with new invalid contacts)\n      this.emit('ping', node.contacts.slice(0, this.numberOfNodesToPing), contact)\n      return this\n    }\n\n    this._split(node, bitIndex)\n    return this.add(contact)\n  }\n\n  /**\n   * Get the n closest contacts to the provided node id. \"Closest\" here means:\n   * closest according to the XOR metric of the contact node id.\n   *\n   * @param  {Uint8Array} id  Contact node id\n   * @param  {Number=} n      Integer (Default: Infinity) The maximum number of\n   *                          closest contacts to return\n   * @return {Array}          Array Maximum of n closest contacts to the node id\n   */\n  closest (id, n = Infinity) {\n    ensureInt8('id', id)\n\n    if ((!Number.isInteger(n) && n !== Infinity) || n <= 0) {\n      throw new TypeError('n is not positive number')\n    }\n\n    let contacts = []\n\n    for (let nodes = [this.root], bitIndex = 0; nodes.length > 0 && contacts.length < n;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        const detNode = this._determineNode(node, id, bitIndex++)\n        nodes.push(node.left === detNode ? node.right : node.left)\n        nodes.push(detNode)\n      } else {\n        contacts = contacts.concat(node.contacts)\n      }\n    }\n\n    return contacts\n      .map(a => [this.distance(a.id, id), a])\n      .sort((a, b) => a[0] - b[0])\n      .slice(0, n)\n      .map(a => a[1])\n  }\n\n  /**\n   * Counts the total number of contacts in the tree.\n   *\n   * @return {Number} The number of contacts held in the tree\n   */\n  count () {\n    // return this.toArray().length\n    let count = 0\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else count += node.contacts.length\n    }\n    return count\n  }\n\n  /**\n   * Determines whether the id at the bitIndex is 0 or 1.\n   * Return left leaf if `id` at `bitIndex` is 0, right leaf otherwise\n   *\n   * @param  {Object} node     internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id   Id to compare localNodeId with.\n   * @param  {Number} bitIndex Integer (Default: 0) The bit index to which bit\n   *                           to check in the id Uint8Array.\n   * @return {Object}          left leaf if id at bitIndex is 0, right leaf otherwise.\n   */\n  _determineNode (node, id, bitIndex) {\n    // **NOTE** remember that id is a Uint8Array and has granularity of\n    // bytes (8 bits), whereas the bitIndex is the _bit_ index (not byte)\n\n    // id's that are too short are put in low bucket (1 byte = 8 bits)\n    // (bitIndex >> 3) finds how many bytes the bitIndex describes\n    // bitIndex % 8 checks if we have extra bits beyond byte multiples\n    // if number of bytes is <= no. of bytes described by bitIndex and there\n    // are extra bits to consider, this means id has less bits than what\n    // bitIndex describes, id therefore is too short, and will be put in low\n    // bucket\n    const bytesDescribedByBitIndex = bitIndex >> 3\n    const bitIndexWithinByte = bitIndex % 8\n    if ((id.length <= bytesDescribedByBitIndex) && (bitIndexWithinByte !== 0)) {\n      return node.left\n    }\n\n    const byteUnderConsideration = id[bytesDescribedByBitIndex]\n\n    // byteUnderConsideration is an integer from 0 to 255 represented by 8 bits\n    // where 255 is 11111111 and 0 is 00000000\n    // in order to find out whether the bit at bitIndexWithinByte is set\n    // we construct (1 << (7 - bitIndexWithinByte)) which will consist\n    // of all bits being 0, with only one bit set to 1\n    // for example, if bitIndexWithinByte is 3, we will construct 00010000 by\n    // (1 << (7 - 3)) -> (1 << 4) -> 16\n    if (byteUnderConsideration & (1 << (7 - bitIndexWithinByte))) {\n      return node.right\n    }\n\n    return node.left\n  }\n\n  /**\n   * Get a contact by its exact ID.\n   * If this is a leaf, loop through the bucket contents and return the correct\n   * contact if we have it or null if not. If this is an inner node, determine\n   * which branch of the tree to traverse and repeat.\n   *\n   * @param  {Uint8Array} id The ID of the contact to fetch.\n   * @return {Object|Null}   The contact if available, otherwise null\n   */\n  get (id) {\n    ensureInt8('id', id)\n\n    let bitIndex = 0\n\n    let node = this.root\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    // index of uses contact id for matching\n    const index = this._indexOf(node, id)\n    return index >= 0 ? node.contacts[index] : null\n  }\n\n  /**\n   * Returns the index of the contact with provided\n   * id if it exists, returns -1 otherwise.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id  Contact node id.\n   * @return {Number}         Integer Index of contact with provided id if it\n   *                          exists, -1 otherwise.\n   */\n  _indexOf (node, id) {\n    for (let i = 0; i < node.contacts.length; ++i) {\n      if (arrayEquals(node.contacts[i].id, id)) return i\n    }\n\n    return -1\n  }\n\n  /**\n   * Removes contact with the provided id.\n   *\n   * @param  {Uint8Array} id The ID of the contact to remove.\n   * @return {Object}        The k-bucket itself.\n   */\n  remove (id) {\n    ensureInt8('the id as parameter 1', id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    const index = this._indexOf(node, id)\n    if (index >= 0) {\n      const contact = node.contacts.splice(index, 1)[0]\n      this.emit('removed', contact)\n    }\n\n    return this\n  }\n\n  /**\n   * Splits the node, redistributes contacts to the new nodes, and marks the\n   * node that was split as an inner node of the binary tree of nodes by\n   * setting this.root.contacts = null\n   *\n   * @param  {Object} node     node for splitting\n   * @param  {Number} bitIndex the bitIndex to which byte to check in the\n   *                           Uint8Array for navigating the binary tree\n   */\n  _split (node, bitIndex) {\n    node.left = createNode()\n    node.right = createNode()\n\n    // redistribute existing contacts amongst the two newly created nodes\n    for (const contact of node.contacts) {\n      this._determineNode(node, contact.id, bitIndex).contacts.push(contact)\n    }\n\n    node.contacts = null // mark as inner tree node\n\n    // don't split the \"far away\" node\n    // we check where the local node would end up and mark the other one as\n    // \"dontSplit\" (i.e. \"far away\")\n    const detNode = this._determineNode(node, this.localNodeId, bitIndex)\n    const otherNode = node.left === detNode ? node.right : node.left\n    otherNode.dontSplit = true\n  }\n\n  /**\n   * Returns all the contacts contained in the tree as an array.\n   * If this is a leaf, return a copy of the bucket. If this is not a leaf,\n   * return the union of the low and high branches (themselves also as arrays).\n   *\n   * @return {Array} All of the contacts in the tree, as an array\n   */\n  toArray () {\n    let result = []\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else result = result.concat(node.contacts)\n    }\n    return result\n  }\n\n  /**\n   * Similar to `toArray()` but instead of buffering everything up into an\n   * array before returning it, yields contacts as they are encountered while\n   * walking the tree.\n   *\n   * @return {Iterable} All of the contacts in the tree, as an iterable\n   */\n  * toIterable () {\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        yield * node.contacts\n      }\n    }\n  }\n\n  /**\n   * Updates the contact selected by the arbiter.\n   * If the selection is our old contact and the candidate is some new contact\n   * then the new contact is abandoned (not added).\n   * If the selection is our old contact and the candidate is our old contact\n   * then we are refreshing the contact and it is marked as most recently\n   * contacted (by being moved to the right/end of the bucket array).\n   * If the selection is our new contact, the old contact is removed and the new\n   * contact is marked as most recently contacted.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Number} index   the index in the bucket where contact exists\n   *                          (index has already been computed in a previous\n   *                          calculation)\n   * @param  {Object} contact The contact object to update.\n   */\n  _update (node, index, contact) {\n    // sanity check\n    if (!arrayEquals(node.contacts[index].id, contact.id)) {\n      throw new Error('wrong index for _update')\n    }\n\n    const incumbent = node.contacts[index]\n    const selection = this.arbiter(incumbent, contact)\n    // if the selection is our old contact and the candidate is some new\n    // contact, then there is nothing to do\n    if (selection === incumbent && incumbent !== contact) return\n\n    node.contacts.splice(index, 1) // remove old contact\n    node.contacts.push(selection) // add more recent contact version\n    this.emit('updated', incumbent, selection)\n  }\n}\n\nmodule.exports = KBucket\n","import debounce from 'debounce';\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar Prop = /*#__PURE__*/_createClass(function Prop(name, _ref) {\n  var _ref$default = _ref[\"default\"],\n    defaultVal = _ref$default === void 0 ? null : _ref$default,\n    _ref$triggerUpdate = _ref.triggerUpdate,\n    triggerUpdate = _ref$triggerUpdate === void 0 ? true : _ref$triggerUpdate,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function (newVal, state) {} : _ref$onChange;\n  _classCallCheck(this, Prop);\n  this.name = name;\n  this.defaultVal = defaultVal;\n  this.triggerUpdate = triggerUpdate;\n  this.onChange = onChange;\n});\nfunction index (_ref2) {\n  var _ref2$stateInit = _ref2.stateInit,\n    stateInit = _ref2$stateInit === void 0 ? function () {\n      return {};\n    } : _ref2$stateInit,\n    _ref2$props = _ref2.props,\n    rawProps = _ref2$props === void 0 ? {} : _ref2$props,\n    _ref2$methods = _ref2.methods,\n    methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n    _ref2$aliases = _ref2.aliases,\n    aliases = _ref2$aliases === void 0 ? {} : _ref2$aliases,\n    _ref2$init = _ref2.init,\n    initFn = _ref2$init === void 0 ? function () {} : _ref2$init,\n    _ref2$update = _ref2.update,\n    updateFn = _ref2$update === void 0 ? function () {} : _ref2$update;\n  // Parse props into Prop instances\n  var props = Object.keys(rawProps).map(function (propName) {\n    return new Prop(propName, rawProps[propName]);\n  });\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Holds component state\n    var state = Object.assign({}, stateInit instanceof Function ? stateInit(options) : stateInit,\n    // Support plain objects for backwards compatibility\n    {\n      initialised: false\n    });\n\n    // keeps track of which props triggered an update\n    var changedProps = {};\n\n    // Component constructor\n    function comp(nodeElement) {\n      initStatic(nodeElement, options);\n      digest();\n      return comp;\n    }\n    var initStatic = function initStatic(nodeElement, options) {\n      initFn.call(comp, nodeElement, state, options);\n      state.initialised = true;\n    };\n    var digest = debounce(function () {\n      if (!state.initialised) {\n        return;\n      }\n      updateFn.call(comp, state, changedProps);\n      changedProps = {};\n    }, 1);\n\n    // Getter/setter methods\n    props.forEach(function (prop) {\n      comp[prop.name] = getSetProp(prop);\n      function getSetProp(_ref3) {\n        var prop = _ref3.name,\n          _ref3$triggerUpdate = _ref3.triggerUpdate,\n          redigest = _ref3$triggerUpdate === void 0 ? false : _ref3$triggerUpdate,\n          _ref3$onChange = _ref3.onChange,\n          onChange = _ref3$onChange === void 0 ? function (newVal, state) {} : _ref3$onChange,\n          _ref3$defaultVal = _ref3.defaultVal,\n          defaultVal = _ref3$defaultVal === void 0 ? null : _ref3$defaultVal;\n        return function (_) {\n          var curVal = state[prop];\n          if (!arguments.length) {\n            return curVal;\n          } // Getter mode\n\n          var val = _ === undefined ? defaultVal : _; // pick default if value passed is undefined\n          state[prop] = val;\n          onChange.call(comp, val, state, curVal);\n\n          // track changed props\n          !changedProps.hasOwnProperty(prop) && (changedProps[prop] = curVal);\n          if (redigest) {\n            digest();\n          }\n          return comp;\n        };\n      }\n    });\n\n    // Other methods\n    Object.keys(methods).forEach(function (methodName) {\n      comp[methodName] = function () {\n        var _methods$methodName;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return (_methods$methodName = methods[methodName]).call.apply(_methods$methodName, [comp, state].concat(args));\n      };\n    });\n\n    // Link aliases\n    Object.entries(aliases).forEach(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n        alias = _ref5[0],\n        target = _ref5[1];\n      return comp[alias] = comp[target];\n    });\n\n    // Reset all component props to their default value\n    comp.resetProps = function () {\n      props.forEach(function (prop) {\n        comp[prop.name](prop.defaultVal);\n      });\n      return comp;\n    };\n\n    //\n\n    comp.resetProps(); // Apply all prop defaults\n    state._rerender = digest; // Expose digest method\n\n    return comp;\n  };\n}\n\nexport { index as default };\n","import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(data, decodeOptions)\n","/* eslint max-depth: [\"error\", 7] */\nimport { CID } from 'multiformats'\nimport { base64 } from 'multiformats/bases/base64'\nimport { Token, Type } from 'cborg'\nimport * as cborgJson from 'cborg/json'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @template T\n * @typedef {import('multiformats').ToString<T>} ToString\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.string, cidString, cidString.length), // value\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.map, Infinity, 1), // value\n    new Token(Type.string, 'bytes', 5), // inner key\n    new Token(Type.string, bytesString, bytesString.length), // inner value\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder, // TODO: all the typedarrays\n    Buffer: bytesEncoder, // TODO: all the typedarrays\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new Token(Type.tag, 42, 0)\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = base64.decode(`m${innerValueToken.value}`)\n              return new Token(Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = CID.parse\n\nexport const name = 'dag-json'\nexport const code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborgJson.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => {\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) })\n  return cborgJson.decode(data, options)\n}\n\n/**\n * @template T\n * @param {T} node\n * @returns {ToString<T>}\n */\nexport const format = (node) => utf8Decoder.decode(encode(node))\nexport { format as stringify }\nconst utf8Decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {ToString<T>} data\n * @returns {T}\n */\nexport const parse = (data) => decode(utf8Encoder.encode(data))\nconst utf8Encoder = new TextEncoder()\n","const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n","const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n","import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n","import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const pbn = decodeNode(bytes)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n","export const defaultJsonSerializer = {\n    parse: JSON.parse,\n    stringify: JSON.stringify,\n};\n//# sourceMappingURL=defaultJsonSerializer.js.map","import { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { extractFiles, isExtractableFile } from 'extract-files';\nimport FormDataNode from 'form-data';\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nconst isExtractableFileEnhanced = (value) => isExtractableFile(value) ||\n    (value !== null && typeof value === `object` && typeof value.pipe === `function`);\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nconst createRequestBody = (query, variables, operationName, jsonSerializer = defaultJsonSerializer) => {\n    const { clone, files } = extractFiles({ query, variables, operationName }, ``, isExtractableFileEnhanced);\n    if (files.size === 0) {\n        if (!Array.isArray(query)) {\n            return jsonSerializer.stringify(clone);\n        }\n        if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n            throw new Error(`Cannot create request body with given variable type, array expected`);\n        }\n        // Batch support\n        const payload = query.reduce((accu, currentQuery, index) => {\n            accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n            return accu;\n        }, []);\n        return jsonSerializer.stringify(payload);\n    }\n    const Form = typeof FormData === `undefined` ? FormDataNode : FormData;\n    const form = new Form();\n    form.append(`operations`, jsonSerializer.stringify(clone));\n    const map = {};\n    let i = 0;\n    files.forEach((paths) => {\n        map[++i] = paths;\n    });\n    form.append(`map`, jsonSerializer.stringify(map));\n    i = 0;\n    files.forEach((paths, file) => {\n        form.append(`${++i}`, file);\n    });\n    return form;\n};\nexport default createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","export const uppercase = (str) => str.toUpperCase();\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers) => {\n    const o = {};\n    headers.forEach((v, k) => {\n        o[k] = v;\n    });\n    return o;\n};\n//# sourceMappingURL=helpers.js.map","export const parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {\n    return documentOrOptions.document\n        ? documentOrOptions\n        : {\n            document: documentOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {\n    return queryOrOptions.query\n        ? queryOrOptions\n        : {\n            query: queryOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseBatchRequestArgs = (documentsOrOptions, requestHeaders) => {\n    return documentsOrOptions.documents\n        ? documentsOrOptions\n        : {\n            documents: documentsOrOptions,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRequestExtendedArgs = (urlOrOptions, document, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.document\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            document: document,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.query\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            query: query,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\n//# sourceMappingURL=parseArgs.js.map","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { parse, print } from 'graphql';\n/**\n * helpers\n */\nconst extractOperationName = (document) => {\n    let operationName = undefined;\n    const operationDefinitions = document.definitions.filter((definition) => definition.kind === `OperationDefinition`);\n    if (operationDefinitions.length === 1) {\n        operationName = operationDefinitions[0]?.name?.value;\n    }\n    return operationName;\n};\nexport const resolveRequestDocument = (document) => {\n    if (typeof document === `string`) {\n        let operationName = undefined;\n        try {\n            const parsedDocument = parse(document);\n            operationName = extractOperationName(parsedDocument);\n        }\n        catch (err) {\n            // Failed parsing the document, the operationName will be undefined\n        }\n        return { query: document, operationName };\n    }\n    const operationName = extractOperationName(document);\n    return { query: print(document), operationName };\n};\n//# sourceMappingURL=resolveRequestDocument.js.map","export class ClientError extends Error {\n    constructor(response, request) {\n        const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n            response,\n            request,\n        })}`;\n        super(message);\n        Object.setPrototypeOf(this, ClientError.prototype);\n        this.response = response;\n        this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === `function`) {\n            Error.captureStackTrace(this, ClientError);\n        }\n    }\n    static extractMessage(response) {\n        return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;\n    }\n}\n//# sourceMappingURL=types.js.map","import createRequestBody from './createRequestBody.js';\nimport { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js';\nimport { parseBatchRequestArgs, parseRawRequestArgs, parseRawRequestExtendedArgs, parseRequestArgs, parseRequestExtendedArgs, } from './parseArgs.js';\nimport { resolveRequestDocument } from './resolveRequestDocument.js';\nimport { ClientError, } from './types.js';\nimport crossFetch, * as CrossFetch from 'cross-fetch';\nexport { ClientError, };\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers) => {\n    let oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== `undefined` && headers instanceof Headers) ||\n            (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(([name, value]) => {\n                if (name && value !== undefined) {\n                    oHeaders[name] = value;\n                }\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str) => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim();\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = (params) => {\n    if (!Array.isArray(params.query)) {\n        const params_ = params;\n        const search = [`query=${encodeURIComponent(cleanQuery(params_.query))}`];\n        if (params.variables) {\n            search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`);\n        }\n        if (params_.operationName) {\n            search.push(`operationName=${encodeURIComponent(params_.operationName)}`);\n        }\n        return search.join(`&`);\n    }\n    if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n        throw new Error(`Cannot create query with given variable type, array expected`);\n    }\n    // Batch support\n    const params_ = params;\n    const payload = params.query.reduce((acc, currentQuery, index) => {\n        acc.push({\n            query: cleanQuery(currentQuery),\n            variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n        });\n        return acc;\n    }, []);\n    return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;\n};\nconst createHttpMethodFetcher = (method) => async (params) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params;\n    const headers = { ...params.headers };\n    let queryParams = ``;\n    let body = undefined;\n    if (method === `POST`) {\n        body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);\n        if (typeof body === `string`) {\n            // @ts-expect-error todo\n            headers[`Content-Type`] = `application/json`;\n        }\n    }\n    else {\n        // @ts-expect-error todo needs ADT for TS to understand the different states\n        queryParams = buildRequestConfig({\n            query,\n            variables,\n            operationName,\n            jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n        });\n    }\n    const init = {\n        method,\n        headers,\n        body,\n        ...fetchOptions,\n    };\n    let urlResolved = url;\n    let initResolved = init;\n    if (middleware) {\n        const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }));\n        const { url: urlNew, ...initNew } = result;\n        urlResolved = urlNew;\n        initResolved = initNew;\n    }\n    if (queryParams) {\n        urlResolved = `${urlResolved}?${queryParams}`;\n    }\n    return await fetch(urlResolved, initResolved);\n};\n/**\n * GraphQL Client.\n */\nexport class GraphQLClient {\n    constructor(url, requestConfig = {}) {\n        this.url = url;\n        this.requestConfig = requestConfig;\n        /**\n         * Send a GraphQL query to the server.\n         */\n        this.rawRequest = async (...args) => {\n            const [queryOrOptions, variables, requestHeaders] = args;\n            const rawRequestOptions = parseRawRequestArgs(queryOrOptions, variables, requestHeaders);\n            const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n            const { url } = this;\n            if (rawRequestOptions.signal !== undefined) {\n                fetchOptions.signal = rawRequestOptions.signal;\n            }\n            const { operationName } = resolveRequestDocument(rawRequestOptions.query);\n            return makeRequest({\n                url,\n                query: rawRequestOptions.query,\n                variables: rawRequestOptions.variables,\n                headers: {\n                    ...resolveHeaders(callOrIdentity(headers)),\n                    ...resolveHeaders(rawRequestOptions.requestHeaders),\n                },\n                operationName,\n                fetch,\n                method,\n                fetchOptions,\n                middleware: requestMiddleware,\n            })\n                .then((response) => {\n                if (responseMiddleware) {\n                    responseMiddleware(response);\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (responseMiddleware) {\n                    responseMiddleware(error);\n                }\n                throw error;\n            });\n        };\n    }\n    async request(documentOrOptions, ...variablesAndRequestHeaders) {\n        const [variables, requestHeaders] = variablesAndRequestHeaders;\n        const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders);\n        const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n        const { url } = this;\n        if (requestOptions.signal !== undefined) {\n            fetchOptions.signal = requestOptions.signal;\n        }\n        const { query, operationName } = resolveRequestDocument(requestOptions.document);\n        return makeRequest({\n            url,\n            query,\n            variables: requestOptions.variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(requestOptions.requestHeaders),\n            },\n            operationName,\n            fetch,\n            method,\n            fetchOptions,\n            middleware: requestMiddleware,\n        })\n            .then((response) => {\n            if (responseMiddleware) {\n                responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (responseMiddleware) {\n                responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    // prettier-ignore\n    batchRequests(documentsOrOptions, requestHeaders) {\n        const batchRequestOptions = parseBatchRequestArgs(documentsOrOptions, requestHeaders);\n        const { headers, ...fetchOptions } = this.requestConfig;\n        if (batchRequestOptions.signal !== undefined) {\n            fetchOptions.signal = batchRequestOptions.signal;\n        }\n        const queries = batchRequestOptions.documents.map(({ document }) => resolveRequestDocument(document).query);\n        const variables = batchRequestOptions.documents.map(({ variables }) => variables);\n        return makeRequest({\n            url: this.url,\n            query: queries,\n            // @ts-expect-error TODO reconcile batch variables into system.\n            variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(batchRequestOptions.requestHeaders),\n            },\n            operationName: undefined,\n            fetch: this.requestConfig.fetch ?? crossFetch,\n            method: this.requestConfig.method || `POST`,\n            fetchOptions,\n            middleware: this.requestConfig.requestMiddleware,\n        })\n            .then((response) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    setHeaders(headers) {\n        this.requestConfig.headers = headers;\n        return this;\n    }\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    setHeader(key, value) {\n        const { headers } = this.requestConfig;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.requestConfig.headers = { [key]: value };\n        }\n        return this;\n    }\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    setEndpoint(value) {\n        this.url = value;\n        return this;\n    }\n}\nconst makeRequest = async (params) => {\n    const { query, variables, fetchOptions } = params;\n    const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`));\n    const isBatchingQuery = Array.isArray(params.query);\n    const response = await fetcher(params);\n    const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer);\n    const successfullyReceivedData = Array.isArray(result)\n        ? !result.some(({ data }) => !data)\n        : Boolean(result.data);\n    const successfullyPassedErrorPolicy = Array.isArray(result) ||\n        !result.errors ||\n        (Array.isArray(result.errors) && !result.errors.length) ||\n        fetchOptions.errorPolicy === `all` ||\n        fetchOptions.errorPolicy === `ignore`;\n    if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n        // @ts-expect-error TODO fixme\n        const { errors, ...rest } = Array.isArray(result) ? result : result;\n        const data = fetchOptions.errorPolicy === `ignore` ? rest : result;\n        const dataEnvelope = isBatchingQuery ? { data } : data;\n        // @ts-expect-error TODO\n        return {\n            ...dataEnvelope,\n            headers: response.headers,\n            status: response.status,\n        };\n    }\n    else {\n        const errorResult = typeof result === `string`\n            ? {\n                error: result,\n            }\n            : result;\n        throw new ClientError(\n        // @ts-expect-error TODO\n        { ...errorResult, status: response.status, headers: response.headers }, { query, variables });\n    }\n};\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport const rawRequest = async (...args) => {\n    const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;\n    const requestOptions = parseRawRequestExtendedArgs(urlOrOptions, query, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.rawRequest({\n        ...requestOptions,\n    });\n};\nexport async function request(urlOrOptions, \n// @ts-ignore\ndocument, ...variablesAndRequestHeaders) {\n    // @ts-ignore\n    const requestOptions = parseRequestExtendedArgs(urlOrOptions, document, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.request({\n        ...requestOptions,\n    });\n}\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nexport const batchRequests = async (...args) => {\n    const params = parseBatchRequestsArgsExtended(args);\n    const client = new GraphQLClient(params.url);\n    return client.batchRequests(params);\n};\nconst parseBatchRequestsArgsExtended = (args) => {\n    if (args.length === 1) {\n        return args[0];\n    }\n    else {\n        return {\n            url: args[0],\n            documents: args[1],\n            requestHeaders: args[2],\n            signal: undefined,\n        };\n    }\n};\nexport default request;\nconst getResult = async (response, jsonSerializer) => {\n    let contentType;\n    response.headers.forEach((value, key) => {\n        if (key.toLowerCase() === `content-type`) {\n            contentType = value;\n        }\n    });\n    if (contentType &&\n        (contentType.toLowerCase().startsWith(`application/json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {\n        return jsonSerializer.parse(await response.text());\n    }\n    else {\n        return response.text();\n    }\n};\nconst callOrIdentity = (value) => {\n    return typeof value === `function` ? value() : value;\n};\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks, ...variables) => {\n    return chunks.reduce((accumulator, chunk, index) => `${accumulator}${chunk}${index in variables ? variables[index] : ``}`, ``);\n};\nexport { GraphQLWebSocketClient } from './graphql-ws.js';\nexport { resolveRequestDocument } from './resolveRequestDocument.js';\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Content | Root} Node\n *\n * @typedef {Properties[string]} PropertyValue\n *   Possible property values.\n * @typedef {string | number | boolean} PrimitivePropertyValue\n *   Possible primitive HTML attribute values.\n *\n * @typedef {Record<string, Array<string | [string, ...Array<PrimitivePropertyValue | RegExp>]>>} Attributes\n *  Map of tag names to allow lists for each property.\n * @typedef {Record<string, Array<PrimitivePropertyValue | RegExp>>} AttributeClean\n *   Normalized input.\n *\n * @typedef Schema\n *   Sanitization configuration.\n * @property {Attributes | undefined} [attributes]\n *   Map of tag names to allowed properties.\n *\n *   The special `'*'` key defines property names allowed on all elements.\n * @property {Record<string, Record<string, PropertyValue>> | undefined} [required]\n *   Map of tag names to required property names and their default property value.\n * @property {Array<string> | undefined} [tagNames]\n *   List of allowed tag names.\n * @property {Record<string, Array<string>> | undefined} [protocols]\n *   Map of protocols to allow in property values.\n * @property {Record<string, Array<string>> | undefined} [ancestors]\n *   Map of tag names to their required ancestor elements.\n * @property {Array<string> | undefined} [clobber]\n *   List of allowed property names which can clobber.\n * @property {string | undefined} [clobberPrefix]\n *   Prefix to use before potentially clobbering property names.\n * @property {Array<string> | undefined} [strip]\n *   Names of elements to strip from the tree.\n * @property {boolean | undefined} [allowComments]\n *   Whether to allow comments.\n * @property {boolean | undefined} [allowDoctypes]\n *   Whether to allow doctypes.\n *\n * @typedef {(schema: Schema, value: any, node: any, stack: Array<string>) => unknown} Handler\n * @typedef {Record<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition | undefined)} NodeDefinitionGetter\n * @typedef {Record<string, NodeDefinition | NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {NodeSchema} */\nconst nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node\n *   Hast tree to sanitize\n * @param {Schema} [schema]\n *   Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  let ctx = {type: 'root', children: []}\n\n  if (node && typeof node === 'object' && node.type) {\n    const replace = one(\n      Object.assign({}, defaultSchema, schema || {}),\n      node,\n      []\n    )\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-expect-error Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array<string>} stack\n * @returns {Node | Array<Node> | undefined}\n */\nfunction one(schema, node, stack) {\n  const type = node && node.type\n  /** @type {Node} */\n  // @ts-expect-error rest of props added later.\n  const replacement = {type: node.type}\n  /** @type {boolean | undefined} */\n  let replace\n\n  if (own.call(nodeSchema, type)) {\n    /** @type {NodeDefinition | NodeDefinitionGetter | undefined} */\n    let definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      const allowed = Object.assign({}, definition, nodeSchema['*'])\n      /** @type {string} */\n      let key\n\n      replace = true\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          // @ts-expect-error: fine.\n          // type-coverage:ignore-next-line\n          const result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = undefined\n            // Set the non-safe value.\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    schema.strip &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : undefined\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array<Node>} children\n * @param {Node} node\n * @returns {Array<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array<Node>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    let index = -1\n\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      const value = one(schema, children[index], stack)\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : undefined\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : undefined\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @param {Element} node\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  const name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  const attrs = schema.attributes || {}\n  /* c8 ignore next */\n  const reqs = schema.required || {}\n  const props = properties || {}\n  const allowed = Object.assign(\n    {},\n    toPropertyValueMap(attrs['*']),\n    toPropertyValueMap(name && own.call(attrs, name) ? attrs[name] : [])\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      let value = props[key]\n      /** @type {AttributeClean[string]} */\n      let definition\n\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @param {Schema} schema\n * @param {string} tagName\n * @param {Node} _\n * @param {Array<string>} stack\n * @returns {string | false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  const name = typeof tagName === 'string' ? tagName : ''\n  let index = -1\n\n  if (\n    !name ||\n    name === '*' ||\n    (schema.tagNames && !schema.tagNames.includes(name))\n  ) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (schema.ancestors && own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  const result = typeof value === 'string' ? value : ''\n  const index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array<unknown>} values\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {Array<string | number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  let index = -1\n  /** @type {Array<string | number>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-expect-error Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 ||\n      definition.some((allowed) =>\n        allowed && typeof allowed === 'object' && 'flags' in allowed\n          ? allowed.test(String(value))\n          : allowed === value\n      ))\n  ) {\n    return schema.clobberPrefix &&\n      schema.clobber &&\n      schema.clobber.includes(prop)\n      ? schema.clobberPrefix + value\n      : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n  const protocols =\n    schema.protocols && own.call(schema.protocols, prop)\n      ? schema.protocols[prop].concat()\n      : []\n  let index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Attributes[string]} values\n * @returns {AttributeClean}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeClean} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    const value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","import { nanoid } from 'nanoid';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n     * ```\n     */\n    static random() {\n        return new Key(nanoid().replace(/-/g, ''));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     *\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries\n\t? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n\t: '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\n\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact\n\t? v46Exact\n\t: new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","\nexport default () => {}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if (isBytes(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport blobToIt from 'blob-to-it'\nimport itPeekable from 'it-peekable'\nimport all from 'it-all'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js'\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    return blobToIt(input)\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n","/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nexport function isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nexport function isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nexport function isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nexport const isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n","/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nexport class Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nexport class Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nexport class Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n","import errCode from 'err-code'\nimport itPeekable from 'it-peekable'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport all from 'it-all'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js'\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js'\nimport { modeToString } from './mode-to-string.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nexport async function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n","import { normaliseContent } from './normalise-content.browser.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nexport function normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return normaliseCandidateMultiple(input, normaliseContent, true)\n}\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * @param {any} thing\n * @returns {thing is IterableIterator<any> & Iterator<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterableIterator<any> & AsyncIterator<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is CID}\n */\nfunction isCID (thing) {\n  return CID.asCID(thing) != null\n}\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (isIterable(input)) {\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n\n    if (first.done) {\n      return iterator\n    }\n\n    // Iterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // Iterable<Pinnable>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (isAsyncIterable(input)) {\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for await (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nexport function toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = multiaddrToUri(multiaddr(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","\nexport class NotInitializedError extends Error {\n  constructor (message = 'not initialized') {\n    super(message)\n    this.name = 'NotInitializedError'\n    this.code = NotInitializedError.code\n  }\n}\nNotInitializedError.code = 'ERR_NOT_INITIALIZED'\n\nexport class AlreadyInitializingError extends Error {\n  constructor (message = 'cannot initialize an initializing node') {\n    super(message)\n    this.name = 'AlreadyInitializingError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING'\n\nexport class AlreadyInitializedError extends Error {\n  constructor (message = 'cannot re-initialize an initialized node') {\n    super(message)\n    this.name = 'AlreadyInitializedError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED'\n\nexport class NotStartedError extends Error {\n  constructor (message = 'not started') {\n    super(message)\n    this.name = 'NotStartedError'\n    this.code = NotStartedError.code\n  }\n}\nNotStartedError.code = 'ERR_NOT_STARTED'\n\nexport class AlreadyStartingError extends Error {\n  constructor (message = 'cannot start, already startin') {\n    super(message)\n    this.name = 'AlreadyStartingError'\n    this.code = AlreadyStartingError.code\n  }\n}\nAlreadyStartingError.code = 'ERR_ALREADY_STARTING'\n\nexport class AlreadyStartedError extends Error {\n  constructor (message = 'cannot start, already started') {\n    super(message)\n    this.name = 'AlreadyStartedError'\n    this.code = AlreadyStartedError.code\n  }\n}\nAlreadyStartedError.code = 'ERR_ALREADY_STARTED'\n\nexport class NotEnabledError extends Error {\n  constructor (message = 'not enabled') {\n    super(message)\n    this.name = 'NotEnabledError'\n    this.code = NotEnabledError.code\n  }\n}\nNotEnabledError.code = 'ERR_NOT_ENABLED'\n","import { base58btc } from 'multiformats/bases/base58';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport * as mafmt from '@multiformats/mafmt';\nimport { CID } from 'multiformats/cid';\nimport { URL } from 'iso-url';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport const pathGatewayPattern = /^https?:\\/\\/[^/]+\\/(ip[fn]s)\\/([^/?#]+)/;\nexport const pathPattern = /^\\/(ip[fn]s)\\/([^/?#]+)/;\nconst defaultProtocolMatch = 1;\nconst defaultHashMath = 2;\n// CID, libp2p-key or DNSLink\nexport const subdomainGatewayPattern = /^https?:\\/\\/([^/]+)\\.(ip[fn]s)\\.[^/?]+/;\nconst subdomainIdMatch = 1;\nconst subdomainProtocolMatch = 2;\n// Fully qualified domain name (FQDN) that has an explicit .tld suffix\nconst fqdnWithTld = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)+([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\nfunction isMultihash(hash) {\n    const formatted = convertToString(hash);\n    if (formatted === false) {\n        return false;\n    }\n    try {\n        Digest.decode(base58btc.decode('z' + formatted));\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\nfunction isMultiaddr(input) {\n    try {\n        return Boolean(multiaddr(input));\n    }\n    catch {\n        return false;\n    }\n}\nfunction isBase32EncodedMultibase(hash) {\n    try {\n        let cid;\n        if (isString(hash)) {\n            cid = CID.parse(hash);\n        }\n        else {\n            cid = CID.asCID(hash);\n        }\n        if (cid == null) {\n            return false;\n        }\n        base32.decode(cid.toString());\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\nfunction isCID(hash) {\n    try {\n        if (isString(hash)) {\n            return Boolean(CID.parse(hash));\n        }\n        if (hash instanceof Uint8Array) {\n            return Boolean(CID.decode(hash));\n        }\n        return Boolean(CID.asCID(hash)); // eslint-disable-line no-new\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * @param {string | Uint8Array | Multiaddr} input\n */\nfunction isPeerMultiaddr(input) {\n    return isMultiaddr(input) && mafmt.P2P.matches(input);\n}\n/**\n * @param {string | Uint8Array} input\n * @param {RegExp | string} pattern\n * @param {number} [protocolMatch=1]\n * @param {number} [hashMatch=2]\n */\nfunction isIpfs(input, pattern, protocolMatch = defaultProtocolMatch, hashMatch = defaultHashMath) {\n    const formatted = convertToString(input);\n    if (formatted === false) {\n        return false;\n    }\n    const match = formatted.match(pattern);\n    if (match == null) {\n        return false;\n    }\n    if (match[protocolMatch] !== 'ipfs') {\n        return false;\n    }\n    let hash = match[hashMatch];\n    if (hash != null && pattern === subdomainGatewayPattern) {\n        // when doing checks for subdomain context\n        // ensure hash is case-insensitive\n        // (browsers force-lowercase authority component anyway)\n        hash = hash.toLowerCase();\n    }\n    return isCID(hash);\n}\n/**\n *\n * @param {string | Uint8Array} input\n * @param {string | RegExp} pattern\n * @param {number} [protocolMatch=1]\n * @param {number} [hashMatch=1]\n */\nfunction isIpns(input, pattern, protocolMatch = defaultProtocolMatch, hashMatch = defaultHashMath) {\n    const formatted = convertToString(input);\n    if (formatted === false) {\n        return false;\n    }\n    const match = formatted.match(pattern);\n    if (match == null) {\n        return false;\n    }\n    if (match[protocolMatch] !== 'ipns') {\n        return false;\n    }\n    let ipnsId = match[hashMatch];\n    if (ipnsId != null && pattern === subdomainGatewayPattern) {\n        // when doing checks for subdomain context\n        // ensure ipnsId is case-insensitive\n        // (browsers force-lowercase authority compotent anyway)\n        ipnsId = ipnsId.toLowerCase();\n        // Check if it is cidv1\n        if (isCID(ipnsId))\n            return true;\n        // Check if it looks like FQDN\n        try {\n            if (!ipnsId.includes('.') && ipnsId.includes('-')) {\n                // name without tld, assuming its inlined into a single DNS label\n                // (https://github.com/ipfs/in-web-browsers/issues/169)\n                // en-wikipedia--on--ipfs-org → en.wikipedia-on-ipfs.org\n                ipnsId = ipnsId.replace(/--/g, '@').replace(/-/g, '.').replace(/@/g, '-');\n            }\n            // URL implementation in web browsers forces lowercase of the hostname\n            const { hostname } = new URL(`http://${ipnsId}`); // eslint-disable-line no-new\n            // Check if potential FQDN has an explicit TLD\n            return fqdnWithTld.test(hostname);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {any} input\n */\nfunction isString(input) {\n    return typeof input === 'string';\n}\n/**\n * @param {Uint8Array | string} input\n */\nfunction convertToString(input) {\n    if (input instanceof Uint8Array) {\n        return uint8ArrayToString(input, 'base58btc');\n    }\n    if (isString(input)) {\n        return input;\n    }\n    return false;\n}\nexport const ipfsSubdomain = (url) => isIpfs(url, subdomainGatewayPattern, subdomainProtocolMatch, subdomainIdMatch);\nexport const ipnsSubdomain = (url) => isIpns(url, subdomainGatewayPattern, subdomainProtocolMatch, subdomainIdMatch);\nexport const subdomain = (url) => ipfsSubdomain(url) || ipnsSubdomain(url);\nexport const ipfsUrl = (url) => isIpfs(url, pathGatewayPattern) || ipfsSubdomain(url);\nexport const ipnsUrl = (url) => isIpns(url, pathGatewayPattern) || ipnsSubdomain(url);\nexport const url = (url) => ipfsUrl(url) || ipnsUrl(url) || subdomain(url);\nexport const path = (path) => isIpfs(path, pathPattern) || isIpns(path, pathPattern);\nexport { isMultihash as multihash };\nexport { isMultiaddr as multiaddr };\nexport { isPeerMultiaddr as peerMultiaddr };\nexport { isCID as cid };\nexport const base32cid = (cid) => (isCID(cid) && isBase32EncodedMultibase(cid));\nexport const ipfsPath = (path) => isIpfs(path, pathPattern);\nexport const ipnsPath = (path) => isIpns(path, pathPattern);\nexport const urlOrPath = (x) => url(x) || path(x);\nexport const cidPath = (path) => isString(path) && !isCID(path) && isIpfs(`/ipfs/${path}`, pathPattern);\n//# sourceMappingURL=index.js.map","\nexport class TimeoutError extends Error {\n  constructor (message = 'request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n    this.code = TimeoutError.code\n  }\n}\n\nTimeoutError.code = 'ERR_TIMEOUT'\n","/* eslint-disable no-unreachable */\n\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\nimport parseDuration from 'parse-duration'\nimport { TimeoutError } from './errors.js'\n\n/**\n * @template {any[]} Args\n * @template {Promise<any> | AsyncIterable<any>} R - The return type of `fn`\n * @param {(...args:Args) => R} fn\n * @param {number} [optionsArgIndex]\n * @returns {(...args:Args) => R}\n */\nexport function withTimeoutOption (fn, optionsArgIndex) {\n  // eslint-disable-next-line\n  return /** @returns {R} */(/** @type {Args} */...args) => {\n    const options = args[optionsArgIndex == null ? args.length - 1 : optionsArgIndex]\n    if (!options || !options.timeout) return fn(...args)\n\n    const timeout = typeof options.timeout === 'string'\n      ? parseDuration(options.timeout)\n      : options.timeout\n\n    const controller = new TimeoutController(timeout)\n\n    options.signal = anySignal([options.signal, controller.signal])\n\n    const fnRes = fn(...args)\n    // eslint-disable-next-line promise/param-names\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      controller.signal.addEventListener('abort', () => {\n        reject(new TimeoutError())\n      })\n    })\n\n    const start = Date.now()\n\n    const maybeThrowTimeoutError = () => {\n      if (controller.signal.aborted) {\n        throw new TimeoutError()\n      }\n\n      const timeTaken = Date.now() - start\n\n      // if we have starved the event loop by adding microtasks, we could have\n      // timed out already but the TimeoutController will never know because it's\n      // setTimeout will not fire until we stop adding microtasks\n      if (timeTaken > timeout) {\n        controller.abort()\n        throw new TimeoutError()\n      }\n    }\n\n    // @ts-expect-error\n    if (fnRes[Symbol.asyncIterator]) {\n      // @ts-expect-error\n      return (async function * () {\n        // @ts-expect-error\n        const it = fnRes[Symbol.asyncIterator]()\n\n        try {\n          while (true) {\n            const { value, done } = await Promise.race([it.next(), timeoutPromise])\n\n            if (done) {\n              break\n            }\n\n            maybeThrowTimeoutError()\n\n            yield value\n          }\n        } catch (/** @type {any} */ err) {\n          maybeThrowTimeoutError()\n\n          throw err\n        } finally {\n          controller.clear()\n\n          if (it.return) {\n            it.return()\n          }\n        }\n      })()\n    }\n\n    // @ts-expect-error\n    return (async () => {\n      try {\n        const res = await Promise.race([fnRes, timeoutPromise])\n\n        maybeThrowTimeoutError()\n\n        return res\n      } catch (/** @type {any} */ err) {\n        maybeThrowTimeoutError()\n\n        throw err\n      } finally {\n        controller.clear()\n      }\n    })()\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\nconst IPFS_PREFIX = '/ipfs/'\n\n/**\n * @param {string|Uint8Array|CID} string\n * @returns {{cid:CID, path?:string}}\n */\nexport function toCidAndPath (string) {\n  if (string instanceof Uint8Array) {\n    try {\n      string = CID.decode(string)\n    } catch (/** @type {any} */ err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n  }\n\n  let cid = CID.asCID(string)\n\n  if (cid) {\n    return {\n      cid,\n      path: undefined\n    }\n  }\n\n  string = string.toString()\n\n  if (string.startsWith(IPFS_PREFIX)) {\n    string = string.substring(IPFS_PREFIX.length)\n  }\n\n  const parts = string.split('/')\n  let path\n\n  try {\n    cid = CID.parse(parts.shift() || '')\n  } catch (/** @type {any} */ err) {\n    throw errCode(err, 'ERR_INVALID_CID')\n  }\n\n  if (parts.length) {\n    path = `/${parts.join('/')}`\n  }\n\n  return {\n    cid,\n    path\n  }\n}\n","/* eslint-disable no-unreachable */\n\nimport * as isIpfs from 'is-ipfs'\nimport { CID } from 'multiformats/cid'\nimport { Key } from 'interface-datastore/key'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport * as dagPB from '@ipld/dag-pb'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\nconst ERR_BAD_PATH = 'ERR_BAD_PATH'\n\nexport const OFFLINE_ERROR = 'This command must be run in online mode. Try running \\'ipfs daemon\\' first.'\nexport const MFS_ROOT_KEY = new Key('/local/filesroot')\nexport const MFS_MAX_CHUNK_SIZE = 262144\nexport const MFS_MAX_LINKS = 174\n\n/**\n * Returns a well-formed ipfs Path.\n * The returned path will always be prefixed with /ipfs/ or /ipns/.\n *\n * @param  {string | CID} pathStr - An ipfs-path, or ipns-path or a cid\n * @returns {string} - ipfs-path or ipns-path\n * @throws on an invalid @param pathStr\n */\nexport const normalizePath = (pathStr) => {\n  const cid = CID.asCID(pathStr)\n\n  if (cid) {\n    return `/ipfs/${pathStr}`\n  }\n\n  const str = pathStr.toString()\n\n  try {\n    return `/ipfs/${CID.parse(str)}`\n  } catch {}\n\n  if (isIpfs.path(str)) {\n    return str\n  } else {\n    throw errCode(new Error(`invalid path: ${pathStr}`), ERR_BAD_PATH)\n  }\n}\n\n// TODO: do we need both normalizePath and normalizeCidPath?\n// TODO: don't forget ipfs-core-utils/src/to-cid-and-path\n/**\n * @param {Uint8Array|CID|string} path\n */\nexport const normalizeCidPath = (path) => {\n  if (path instanceof Uint8Array) {\n    return CID.decode(path).toString()\n  }\n\n  path = path.toString()\n\n  if (path.indexOf('/ipfs/') === 0) {\n    path = path.substring('/ipfs/'.length)\n  }\n\n  if (path.charAt(path.length - 1) === '/') {\n    path = path.substring(0, path.length - 1)\n  }\n\n  return path\n}\n\n/**\n * Resolve various styles of an ipfs-path to the hash of the target node.\n * Follows links in the path\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID | string | Uint8Array} ipfsPath - A CID or IPFS path\n * @param {{ path?: string, signal?: AbortSignal }} [options] - Optional options passed directly to dag.resolve\n * @returns {Promise<{ cid: CID, remainderPath: string}>}\n */\nexport const resolvePath = async function (repo, codecs, ipfsPath, options = {}) {\n  const {\n    cid,\n    path\n  } = toCidAndPath(ipfsPath)\n\n  if (path) {\n    options.path = path\n  }\n\n  let lastCid = cid\n  let lastRemainderPath = options.path || ''\n\n  if (lastRemainderPath.startsWith('/')) {\n    lastRemainderPath = lastRemainderPath.substring(1)\n  }\n\n  if (options.path) {\n    try {\n      for await (const { value, remainderPath } of resolve(cid, options.path, codecs, repo, {\n        signal: options.signal\n      })) {\n        if (!CID.asCID(value)) {\n          break\n        }\n\n        lastRemainderPath = remainderPath\n        lastCid = value\n      }\n    } catch (/** @type {any} */ err) {\n      // TODO: add error codes to IPLD\n      if (err.message.startsWith('Object has no property')) {\n        err.message = `no link named \"${lastRemainderPath.split('/')[0]}\" under ${lastCid}`\n        err.code = 'ERR_NO_LINK'\n      }\n      throw err\n    }\n  }\n\n  return {\n    cid: lastCid,\n    remainderPath: lastRemainderPath || ''\n  }\n}\n\n/**\n * @typedef {import('ipfs-unixfs-exporter').UnixFSEntry} UnixFSEntry\n *\n * @param {UnixFSEntry} file\n */\nexport const mapFile = (file) => {\n  if (file.type !== 'file' && file.type !== 'directory' && file.type !== 'raw') {\n    // file.type === object | identity not supported yet\n    throw new Error(`Unknown node type '${file.type}'`)\n  }\n\n  /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n  const output = {\n    cid: file.cid,\n    path: file.path,\n    name: file.name,\n    size: file.size,\n    type: 'file'\n  }\n\n  if (file.type === 'directory') {\n    // @ts-expect-error - TS type can't be changed from File to Directory\n    output.type = 'dir'\n  }\n\n  if (file.type === 'file') {\n    output.size = file.unixfs.fileSize()\n  }\n\n  if (file.type === 'file' || file.type === 'directory') {\n    output.mode = file.unixfs.mode\n\n    if (file.unixfs.mtime !== undefined) {\n      output.mtime = file.unixfs.mtime\n    }\n  }\n\n  return output\n}\n\nexport const withTimeout = withTimeoutOption(\n  /**\n   * @template T\n   * @param {Promise<T>|T} promise\n   * @param {AbortOptions} [_options]\n   * @returns {Promise<T>}\n   */\n  async (promise, _options) => await promise\n)\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} codecs\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {AbortOptions} [options]\n */\nexport const resolve = async function * (cid, path, codecs, repo, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    // special case for dag-pb, use the link name as the path segment\n    if (cid.code === dagPB.code && Array.isArray(value.Links)) {\n      const link = value.Links.find((/** @type {PBLink} */ l) => l.Name === key)\n\n      if (link) {\n        yield {\n          value: link.Hash,\n          remainderPath: parts.join('/')\n        }\n\n        value = await load(link.Hash)\n        lastCid = link.Hash\n\n        continue\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    if (CID.asCID(value)) {\n      lastCid = value\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { NotStartedError, AlreadyStartingError, AlreadyStartedError } from '../errors.js'\nimport { withTimeout } from '../utils.js'\n\n/**\n * @template T\n * @typedef {import('ipfs-core-types/src/utils').Await<T>} Await\n */\n/**\n * @template {(options:any) => any} T\n * @typedef {Parameters<T>[0]} Options\n */\n/**\n * @template {(options:any) => any} T\n * @typedef {ReturnType<T> extends ? Promise<infer U> ? U : ReturnType<T>} State\n */\n/**\n * Represents service state which can be not started in which case\n * it is instance of `Error`. Pending in which case it's promise or\n * ready in which case it is the value itself.\n *\n * @template T\n * @typedef {{ status: 'stopped' }\n * | { status: 'starting', ready: Await<T> }\n * | { status: 'started', value: T }\n * | { status: 'stopping', ready: Await<void> }\n * } ServiceState\n */\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @template Options, T\n *\n * Allows you to create a handle to service that can be started or\n * stopped. It enables defining components that need to use service\n * functionality before service is started.\n *\n */\nexport class Service {\n  /**\n   * Takes `activation` function that takes `options` and (async) returns\n   * an implementation.\n   *\n   * @template {(options:any) => Await<any>} T\n   *\n   * @param {object} config\n   * @param {T} config.start\n   * @param {(state:State<T>) => Await<void>} [config.stop]\n   * @returns {Service<Parameters<T>[0], State<T>>}\n   */\n  static create ({ start, stop }) {\n    return new Service(start, stop)\n  }\n\n  /**\n   * Starts the service (by running actiavtion function). Will (async) throw\n   * unless service is stopped.\n   *\n   * @template Options, T\n   * @param {Service<Options, T>} service\n   * @param {Options} options\n   * @returns {Promise<T>}\n   */\n  static async start (service, options) {\n    const { state, activate } = service\n    switch (state.status) {\n      // If service is in 'stopped' state we activate and transition to\n      // to 'pending' state. Once activation is complete transition state to\n      // 'started' state.\n      // Note: This is the only code that does state transitions from\n      // - stopped\n      // - started\n      // Which ensures no race conditions can occur.\n      case 'stopped': {\n        try {\n          const promise = activate(options)\n          service.state = { status: 'starting', ready: promise }\n          // Note: MUST await after state transition above otherwise race\n          // condition may occur.\n          const result = await promise\n          service.state = { status: 'started', value: result }\n          return result\n        // If failed to start, transiton from 'starting' to 'stopped'\n        // state.\n        } catch (/** @type {any} */ error) {\n          service.state = { status: 'stopped' }\n          throw error\n        }\n      }\n      case 'starting': {\n        throw new AlreadyStartingError()\n      }\n      case 'started': {\n        throw new AlreadyStartedError()\n      }\n      // If service is stopping we just wait for that to complete\n      // and try again.\n      case 'stopping': {\n        await state.ready\n        return await Service.start(service, options)\n      }\n      default: {\n        return Service.panic(service)\n      }\n    }\n  }\n\n  /**\n   * Stops the service by executing deactivation. If service is stopped\n   * or is stopping this is noop. If service is starting up when called\n   * it will await for start to complete and then retry stop afterwards.\n   * This may (async) throw if `deactivate` does.\n   *\n   * @template T\n   * @param {Service<any, T>} service\n   * @returns {Promise<void>}\n   */\n  static async stop (service) {\n    const { state, deactivate } = service\n    switch (state.status) {\n      // If stopped there's nothing to do.\n      case 'stopped': {\n        break\n      }\n      // If service is starting we await for it to complete\n      // and try again. That way\n      case 'starting': {\n        // We do not want to error stop if start failed.\n        try { await state.ready } catch (/** @type {any} */ _) {}\n        return await Service.stop(service)\n      }\n      // if service is stopping we just await for it to complete.\n      case 'stopping': {\n        return await state.ready\n      }\n      case 'started': {\n        if (deactivate) {\n          await deactivate(state.value)\n        }\n        service.state = { status: 'stopped' }\n        break\n      }\n      default: {\n        Service.panic(state)\n      }\n    }\n  }\n\n  /**\n   * @template T\n   * @param {Service<any, T>} service\n   * @returns {T|null}\n   */\n  static try ({ state }) {\n    switch (state.status) {\n      case 'started':\n        return state.value\n      default:\n        return null\n    }\n  }\n\n  /**\n   * Unwraps state and returns underlying value. If state is in idle state it\n   * will throw an error. If state is pending it will wait and return the\n   * result or throw on failure. If state is ready returns result.\n   *\n   * @template T\n   * @param {Service<any, T>} service\n   * @param {AbortOptions} [options]\n   * @returns {Promise<T>}\n   */\n  static async use ({ state }, options) {\n    switch (state.status) {\n      case 'started':\n        return state.value\n      case 'starting':\n        return await withTimeout(state.ready, options)\n      default:\n        throw new NotStartedError()\n    }\n  }\n\n  // eslint-disable-next-line jsdoc/require-returns-check\n  /**\n   * @private\n   * @param {Service<any, any>} service\n   * @returns {never}\n   */\n  static panic ({ state }) {\n    const status = JSON.stringify({ status: state.status })\n    throw RangeError(`Service in invalid state ${status}, should never happen if you see this please report a bug`)\n  }\n\n  /**\n   * Takes `activation` function that takes `options` and (async) returns\n   * an implementation.\n   *\n   * @private\n   * @param {(options:Options) => Await<T>} activate\n   * @param {(state:T) => Await<void>} [deactivate]\n   */\n  constructor (activate, deactivate) {\n    this.activate = activate\n    this.deactivate = deactivate\n\n    /**\n     * A state machine for this service.\n     *\n     * @private\n     * @type {ServiceState<T>}\n     */\n    this.state = { status: 'stopped' }\n  }\n\n  /**\n   * Allows you to asynchronously obtain service implementation. If service\n   * is starting it will await for completion. If service is stopped or stopping\n   * this will (async) throw exception. This allows components that need to use\n   * this service convenient API to do it.\n   *\n   * @param {AbortOptions} [options] - Abort options.\n   * @returns {Promise<T>}\n   */\n  async use (options) {\n    return await Service.use(this, options)\n  }\n\n  /**\n   * @returns {T|null}\n   */\n  try () {\n    return Service.try(this)\n  }\n}\n","/* eslint-env browser */\n\nimport { TLRU } from './utils/tlru.js'\nimport PQueue from 'p-queue'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n// Avoid sending multiple queries for the same hostname by caching results\nconst cache = new TLRU(1000)\n// TODO: /api/v0/dns does not return TTL yet: https://github.com/ipfs/go-ipfs/issues/5884\n// However we know browsers themselves cache DNS records for at least 1 minute,\n// which acts a provisional default ttl: https://stackoverflow.com/a/36917902/11518426\nconst ttl = 60 * 1000\n\n// @ts-expect-error PQueue@6 is broken\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\n// browsers limit concurrent connections per host,\n// we don't want preload calls to exhaust the limit (~6)\nconst httpQueue = new Queue({ concurrency: 4 })\n\n/**\n * @param {{ Path: string, Message: string }} response\n */\nconst ipfsPath = (response) => {\n  if (response.Path) return response.Path\n  throw new Error(response.Message)\n}\n\n/**\n * @param {string} fqdn\n * @param {object} opts\n */\nexport async function resolveDnslink (fqdn, opts) { // eslint-disable-line require-await\n  /**\n   * @param {string} fqdn\n   * @param {object} opts\n   * @param {boolean} [opts.nocache]\n   */\n  const resolve = async (fqdn, opts = {}) => {\n    // @ts-expect-error - URLSearchParams does not take boolean options, only strings\n    const searchParams = new URLSearchParams(opts)\n    searchParams.set('arg', fqdn)\n\n    // try cache first\n    const query = searchParams.toString()\n    if (!opts.nocache && cache.has(query)) {\n      const response = cache.get(query)\n      return ipfsPath(response)\n    }\n\n    // fallback to delegated DNS resolver\n    const response = await httpQueue.add(async () => {\n      // Delegated HTTP resolver sending DNSLink queries to ipfs.io\n      // TODO: replace hardcoded host with configurable DNS over HTTPS: https://github.com/ipfs/js-ipfs/issues/2212\n      const res = await HTTP.get('https://ipfs.io/api/v0/dns', { searchParams })\n      const query = new URL(res.url).search.slice(1)\n      const json = await res.json()\n      cache.set(query, json, ttl)\n\n      return json\n    })\n    return ipfsPath(response)\n  }\n\n  return resolve(fqdn, opts)\n}\n","import hashlru from 'hashlru'\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport class TLRU {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  constructor (maxSize) {\n    this.lru = hashlru(maxSize)\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  get (key) {\n    const value = this.lru.get(key)\n    if (value) {\n      if ((value.expire) && (value.expire < Date.now())) {\n        this.lru.remove(key)\n        return undefined\n      }\n      return value.value\n    }\n    return undefined\n  }\n\n  /**\n   * Set a key value pair\n   *\n   * @param {string} key\n   * @param {T} value\n   * @param {number} ttl - in miliseconds\n   * @returns {void}\n   */\n  set (key, value, ttl) {\n    this.lru.set(key, { value, expire: Date.now() + ttl })\n  }\n\n  /**\n   * Find if the cache has the key\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has (key) {\n    const value = this.get(key)\n    if (value) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Remove key\n   *\n   * @param {string} key\n   */\n  remove (key) {\n    this.lru.remove(key)\n  }\n\n  /**\n   * Clears the cache\n   *\n   * @memberof TLRU\n   */\n  clear () {\n    this.lru.clear()\n  }\n}\n","// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nexport function createDns () {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  const resolveDNS = async (domain, options = { recursive: true }) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return resolveDnslink(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n","import * as isIpfs from 'is-ipfs'\nimport { CID } from 'multiformats/cid'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { resolve as res } from '../utils.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/src/multibases').Multibases} config.bases\n * @param {import('ipfs-core-types/src/name').API} config.name\n */\nexport function createResolve ({ repo, codecs, bases, name }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]}\n   */\n  async function resolve (path, opts = {}) {\n    if (!isIpfs.path(path)) {\n      throw new Error('invalid argument ' + path)\n    }\n\n    if (isIpfs.ipnsPath(path)) {\n      for await (const resolvedPath of name.resolve(path, opts)) {\n        path = resolvedPath\n      }\n    }\n\n    const [, schema, hash, ...rest] = path.split('/') // ['', 'ipfs', 'hash', ...path]\n    const base = opts.cidBase ? await bases.getBase(opts.cidBase) : undefined\n    const bytes = parseBytes(hash)\n\n    // nothing to resolve return the input\n    if (rest.length === 0) {\n      const str = base ? base.encoder.encode(bytes) : hash\n\n      return `/${schema}/${str}`\n    }\n\n    const cid = CID.decode(bytes)\n\n    path = rest.join('/')\n\n    const results = res(cid, path, codecs, repo, opts)\n    let value = cid\n    let remainderPath = path\n\n    for await (const result of results) {\n      if (CID.asCID(result.value)) {\n        value = result.value\n        remainderPath = result.remainderPath\n      }\n    }\n\n    return `/ipfs/${value.toString(base && base.encoder)}${remainderPath ? '/' + remainderPath : ''}`\n  }\n\n  return withTimeoutOption(resolve)\n}\n\n/**\n * Parse the input as a PeerID or a CID or throw an error\n *\n * @param {string} str\n */\nfunction parseBytes (str) {\n  try {\n    return peerIdFromString(str).toBytes()\n  } catch {\n    return CID.parse(str).bytes\n  }\n}\n","\nexport const PinTypes = {\n  /** @type {'direct'} */\n  direct: 'direct',\n  /** @type {'recursive'} */\n  recursive: 'recursive',\n  /** @type {'indirect'} */\n  indirect: 'indirect',\n  /** @type {'all'} */\n  all: 'all'\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport errCode from 'err-code'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n */\n\n/**\n * @param {string} type\n * @param {CID} cid\n * @param {Record<string, any>} [metadata]\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const output = {\n    type,\n    cid\n  }\n\n  if (metadata) {\n    output.metadata = metadata\n  }\n\n  return output\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLs ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {import('ipfs-core-types/src/pin').PinQueryType} */\n    let type = PinTypes.all\n\n    if (options.type) {\n      type = options.type\n\n      if (!Object.keys(PinTypes).includes(type)) {\n        throw errCode(new Error('Invalid pin type'), 'ERR_INVALID_PIN_TYPE')\n      }\n    }\n\n    if (options.paths) {\n      // check the pinned state of specific hashes\n      let matched = false\n\n      for await (const { path } of normaliseInput(options.paths)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n        const { reason, pinned, parent, metadata } = await repo.pins.isPinnedWithType(cid, type)\n\n        if (!pinned) {\n          throw errCode(new Error(`path '${path}' is not pinned`), 'ERR_NOT_PINNED')\n        }\n\n        switch (reason) {\n          case PinTypes.direct:\n          case PinTypes.recursive:\n            matched = true\n            yield toPin(reason, cid, metadata)\n            break\n          default:\n            matched = true\n            yield toPin(`${PinTypes.indirect} through ${parent}`, cid, metadata)\n        }\n      }\n\n      if (!matched) {\n        throw new Error('No match found')\n      }\n\n      return\n    }\n\n    if (type === PinTypes.recursive || type === PinTypes.all) {\n      for await (const { cid, metadata } of repo.pins.recursiveKeys()) {\n        yield toPin(PinTypes.recursive, cid, metadata)\n      }\n    }\n\n    if (type === PinTypes.indirect || type === PinTypes.all) {\n      for await (const cid of repo.pins.indirectKeys(options)) {\n        yield toPin(PinTypes.indirect, cid)\n      }\n    }\n\n    if (type === PinTypes.direct || type === PinTypes.all) {\n      for await (const { cid, metadata } of repo.pins.directKeys()) {\n        yield toPin(PinTypes.direct, cid, metadata)\n      }\n    }\n  }\n\n  return withTimeoutOption(ls)\n}\n","import { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\n\nexport class PinAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, repo }) {\n    const addAll = createAddAll({ codecs, repo })\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    const rmAll = createRmAll({ codecs, repo })\n    this.rmAll = rmAll\n    this.rm = createRm({ rmAll })\n    this.ls = createLs({ codecs, repo })\n\n    /** @type {import('ipfs-core-types/src/pin/remote').API} */\n    this.remote = {\n      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),\n      ls: async function * (query, options = {}) { return Promise.reject(new Error('Not implemented')) }, // eslint-disable-line require-yield\n      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      service: {\n        add: (name, credentials) => Promise.reject(new Error('Not implemented')),\n        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),\n        // @ts-expect-error return types seem to be broken by a recent ts release. doesn't matter here because\n        // we are just throwing. Will be removed by https://github.com/protocol/web3-dev-team/pull/58\n        ls: (options = {}) => Promise.reject(new Error('Not implemented'))\n      }\n    }\n  }\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @typedef {import('ipfs-core-utils/src/pins/normalise-input').Source} Source\n * @typedef {import('ipfs-core-utils/src/pins/normalise-input').Pin} PinTarget\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('multiformats/cid').CID} CID\n */\n\n/**\n * @template T\n * @typedef {Iterable<T>|AsyncIterable<T>} AwaitIterable\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAddAll ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    /**\n     * @returns {AsyncIterable<CID>}\n     */\n    const pinAdd = async function * () {\n      for await (const { path, recursive, metadata } of normaliseInput(source)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n\n        // verify that each hash can be pinned\n        const { reason } = await repo.pins.isPinnedWithType(cid, [PinTypes.recursive, PinTypes.direct])\n\n        if (reason === 'recursive' && !recursive) {\n          // only disallow trying to override recursive pins\n          throw new Error(`${cid} already pinned recursively`)\n        }\n\n        if (recursive) {\n          await repo.pins.pinRecursively(cid, { metadata })\n        } else {\n          await repo.pins.pinDirectly(cid, { metadata })\n        }\n\n        yield cid\n      }\n    }\n\n    // When adding a file, we take a lock that gets released after pinning\n    // is complete, so don't take a second lock here\n    const lock = Boolean(options.lock)\n\n    if (!lock) {\n      yield * pinAdd()\n      return\n    }\n\n    const release = await repo.gcLock.readLock()\n\n    try {\n      yield * pinAdd()\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(addAll)\n}\n","import last from 'it-last'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @param {object} config\n * @param {ReturnType<typeof import('./add-all').createAddAll>} config.addAll\n */\nexport function createAdd ({ addAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"add\"]}\n   */\n  return (path, options = {}) => {\n    let iter\n\n    const cid = CID.asCID(path)\n\n    if (cid) {\n      iter = addAll([{\n        cid,\n        ...options\n      }], options)\n    } else {\n      iter = addAll([{\n        path: path.toString(),\n        ...options\n      }], options)\n    }\n\n    // @ts-expect-error return value of last can be undefined\n    return last(iter)\n  }\n}\n","import { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createRmAll ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]}\n   */\n  async function * rmAll (source, _options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      // verify that each hash can be unpinned\n      for await (const { path, recursive } of normaliseInput(source)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n        const { pinned, reason } = await repo.pins.isPinnedWithType(cid, PinTypes.all)\n\n        if (!pinned) {\n          throw new Error(`${cid} is not pinned`)\n        }\n\n        switch (reason) {\n          case (PinTypes.recursive):\n            if (!recursive) {\n              throw new Error(`${cid} is pinned recursively`)\n            }\n\n            await repo.pins.unpin(cid)\n\n            yield cid\n\n            break\n          case (PinTypes.direct):\n            await repo.pins.unpin(cid)\n\n            yield cid\n\n            break\n          default:\n            throw new Error(`${cid} is pinned indirectly under ${reason}`)\n        }\n      }\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rmAll)\n}\n","import last from 'it-last'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\nexport function createRm ({ rmAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{ path, ...options }], options))\n\n    if (!cid) {\n      throw new Error('CID expected')\n    }\n\n    return cid\n  }\n\n  return rm\n}\n","export const ERR_IPNS_EXPIRED_RECORD = 'ERR_IPNS_EXPIRED_RECORD';\nexport const ERR_UNRECOGNIZED_VALIDITY = 'ERR_UNRECOGNIZED_VALIDITY';\nexport const ERR_SIGNATURE_CREATION = 'ERR_SIGNATURE_CREATION';\nexport const ERR_SIGNATURE_VERIFICATION = 'ERR_SIGNATURE_VERIFICATION';\nexport const ERR_UNRECOGNIZED_FORMAT = 'ERR_UNRECOGNIZED_FORMAT';\nexport const ERR_PEER_ID_FROM_PUBLIC_KEY = 'ERR_PEER_ID_FROM_PUBLIC_KEY';\nexport const ERR_PUBLIC_KEY_FROM_ID = 'ERR_PUBLIC_KEY_FROM_ID';\nexport const ERR_UNDEFINED_PARAMETER = 'ERR_UNDEFINED_PARAMETER';\nexport const ERR_INVALID_RECORD_DATA = 'ERR_INVALID_RECORD_DATA';\nexport const ERR_INVALID_EMBEDDED_KEY = 'ERR_INVALID_EMBEDDED_KEY';\nexport const ERR_MISSING_PRIVATE_KEY = 'ERR_MISSING_PRIVATE_KEY';\n//# sourceMappingURL=errors.js.map","// @ts-expect-error no types\nimport ReaderClass from 'protobufjs/src/reader.js';\n// @ts-expect-error no types\nimport ReaderBufferClass from 'protobufjs/src/reader_buffer.js';\n// @ts-expect-error no types\nimport WriterClass from 'protobufjs/src/writer.js';\n// @ts-expect-error no types\nimport WriterBufferClass from 'protobufjs/src/writer_buffer.js';\n// @ts-expect-error no types\nimport util from 'protobufjs/src/util/minimal.js';\nfunction configure() {\n    util._configure();\n    ReaderClass._configure(ReaderBufferClass);\n    WriterClass._configure(WriterBufferClass);\n}\n// Set up buffer utility according to the environment\nconfigure();\n// monkey patch the reader to add native bigint support\nconst methods = [\n    'uint64', 'int64', 'sint64', 'fixed64', 'sfixed64'\n];\nfunction patchReader(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function () {\n            return BigInt(original.call(this).toString());\n        };\n    }\n    return obj;\n}\nexport function reader(buf) {\n    return patchReader(new ReaderClass(buf));\n}\nfunction patchWriter(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function (val) {\n            return original.call(this, val.toString());\n        };\n    }\n    return obj;\n}\nexport function writer() {\n    return patchWriter(WriterClass.create());\n}\n//# sourceMappingURL=utils.js.map","// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport var CODEC_TYPES;\n(function (CODEC_TYPES) {\n    CODEC_TYPES[CODEC_TYPES[\"VARINT\"] = 0] = \"VARINT\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT64\"] = 1] = \"BIT64\";\n    CODEC_TYPES[CODEC_TYPES[\"LENGTH_DELIMITED\"] = 2] = \"LENGTH_DELIMITED\";\n    CODEC_TYPES[CODEC_TYPES[\"START_GROUP\"] = 3] = \"START_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"END_GROUP\"] = 4] = \"END_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT32\"] = 5] = \"BIT32\";\n})(CODEC_TYPES || (CODEC_TYPES = {}));\nexport function createCodec(name, type, encode, decode) {\n    return {\n        name,\n        type,\n        encode,\n        decode\n    };\n}\n//# sourceMappingURL=codec.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var IpnsEntry;\n(function (IpnsEntry) {\n    let ValidityType;\n    (function (ValidityType) {\n        ValidityType[\"EOL\"] = \"EOL\";\n    })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n    let __ValidityTypeValues;\n    (function (__ValidityTypeValues) {\n        __ValidityTypeValues[__ValidityTypeValues[\"EOL\"] = 0] = \"EOL\";\n    })(__ValidityTypeValues || (__ValidityTypeValues = {}));\n    (function (ValidityType) {\n        ValidityType.codec = () => {\n            return enumeration(__ValidityTypeValues);\n        };\n    })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n    let _codec;\n    IpnsEntry.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.value != null) {\n                    w.uint32(10);\n                    w.bytes(obj.value);\n                }\n                if (obj.signature != null) {\n                    w.uint32(18);\n                    w.bytes(obj.signature);\n                }\n                if (obj.validityType != null) {\n                    w.uint32(24);\n                    IpnsEntry.ValidityType.codec().encode(obj.validityType, w);\n                }\n                if (obj.validity != null) {\n                    w.uint32(34);\n                    w.bytes(obj.validity);\n                }\n                if (obj.sequence != null) {\n                    w.uint32(40);\n                    w.uint64(obj.sequence);\n                }\n                if (obj.ttl != null) {\n                    w.uint32(48);\n                    w.uint64(obj.ttl);\n                }\n                if (obj.pubKey != null) {\n                    w.uint32(58);\n                    w.bytes(obj.pubKey);\n                }\n                if (obj.signatureV2 != null) {\n                    w.uint32(66);\n                    w.bytes(obj.signatureV2);\n                }\n                if (obj.data != null) {\n                    w.uint32(74);\n                    w.bytes(obj.data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.value = reader.bytes();\n                            break;\n                        case 2:\n                            obj.signature = reader.bytes();\n                            break;\n                        case 3:\n                            obj.validityType = IpnsEntry.ValidityType.codec().decode(reader);\n                            break;\n                        case 4:\n                            obj.validity = reader.bytes();\n                            break;\n                        case 5:\n                            obj.sequence = reader.uint64();\n                            break;\n                        case 6:\n                            obj.ttl = reader.uint64();\n                            break;\n                        case 7:\n                            obj.pubKey = reader.bytes();\n                            break;\n                        case 8:\n                            obj.signatureV2 = reader.bytes();\n                            break;\n                        case 9:\n                            obj.data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    IpnsEntry.encode = (obj) => {\n        return encodeMessage(obj, IpnsEntry.codec());\n    };\n    IpnsEntry.decode = (buf) => {\n        return decodeMessage(buf, IpnsEntry.codec());\n    };\n})(IpnsEntry || (IpnsEntry = {}));\n//# sourceMappingURL=ipns.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n    function findValue(val) {\n        // Use the reverse mapping to look up the enum key for the stored value\n        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n        if (v[val.toString()] == null) {\n            throw new Error('Invalid enum value');\n        }\n        return v[val];\n    }\n    const encode = function enumEncode(val, writer) {\n        const enumValue = findValue(val);\n        writer.int32(enumValue);\n    };\n    const decode = function enumDecode(reader) {\n        const val = reader.int32();\n        return findValue(val);\n    };\n    // @ts-expect-error yeah yeah\n    return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}\n//# sourceMappingURL=enum.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n    return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}\n//# sourceMappingURL=message.js.map","import { writer } from './utils.js';\nexport function encodeMessage(message, codec) {\n    const w = writer();\n    codec.encode(message, w, {\n        lengthDelimited: false\n    });\n    return w.finish();\n}\n//# sourceMappingURL=encode.js.map","import { reader } from './utils.js';\nexport function decodeMessage(buf, codec) {\n    const r = reader(buf instanceof Uint8Array ? buf : buf.subarray());\n    return codec.decode(r);\n}\n//# sourceMappingURL=decode.js.map","import errCode from 'err-code';\nimport * as ERRORS from './errors.js';\nimport { unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { peerIdFromBytes, peerIdFromKeys } from '@libp2p/peer-id';\nimport { logger } from '@libp2p/logger';\nimport { IpnsEntry } from './pb/ipns.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport * as cborg from 'cborg';\nconst log = logger('ipns:utils');\nconst IPNS_PREFIX = uint8ArrayFromString('/ipns/');\n/**\n * Convert a JavaScript date into an `RFC3339Nano` formatted\n * string\n */\nexport function toRFC3339(time) {\n    const year = time.getUTCFullYear();\n    const month = String(time.getUTCMonth() + 1).padStart(2, '0');\n    const day = String(time.getUTCDate()).padStart(2, '0');\n    const hour = String(time.getUTCHours()).padStart(2, '0');\n    const minute = String(time.getUTCMinutes()).padStart(2, '0');\n    const seconds = String(time.getUTCSeconds()).padStart(2, '0');\n    const milliseconds = time.getUTCMilliseconds();\n    const nanoseconds = milliseconds * 1000 * 1000;\n    return `${year}-${month}-${day}T${hour}:${minute}:${seconds}.${nanoseconds}Z`;\n}\n/**\n * Parses a date string formatted as `RFC3339Nano` into a\n * JavaScript Date object\n */\nexport function parseRFC3339(time) {\n    const rfc3339Matcher = new RegExp(\n    // 2006-01-02T\n    '(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T' +\n        // 15:04:05\n        '(\\\\d{2}):(\\\\d{2}):(\\\\d{2})' +\n        // .999999999Z\n        '\\\\.(\\\\d+)Z');\n    const m = String(time).trim().match(rfc3339Matcher);\n    if (m == null) {\n        throw new Error('Invalid format');\n    }\n    const year = parseInt(m[1], 10);\n    const month = parseInt(m[2], 10) - 1;\n    const date = parseInt(m[3], 10);\n    const hour = parseInt(m[4], 10);\n    const minute = parseInt(m[5], 10);\n    const second = parseInt(m[6], 10);\n    const millisecond = parseInt(m[7].slice(0, -6), 10);\n    return new Date(Date.UTC(year, month, date, hour, minute, second, millisecond));\n}\n/**\n * Extracts a public key from the passed PeerId, falling\n * back to the pubKey embedded in the ipns record\n */\nexport const extractPublicKey = async (peerId, entry) => {\n    if (entry == null || peerId == null) {\n        const error = new Error('one or more of the provided parameters are not defined');\n        log.error(error);\n        throw errCode(error, ERRORS.ERR_UNDEFINED_PARAMETER);\n    }\n    let pubKey;\n    if (entry.pubKey != null) {\n        try {\n            pubKey = unmarshalPublicKey(entry.pubKey);\n        }\n        catch (err) {\n            log.error(err);\n            throw err;\n        }\n        const otherId = await peerIdFromKeys(entry.pubKey);\n        if (!otherId.equals(peerId)) {\n            throw errCode(new Error('Embedded public key did not match PeerID'), ERRORS.ERR_INVALID_EMBEDDED_KEY);\n        }\n    }\n    else if (peerId.publicKey != null) {\n        pubKey = unmarshalPublicKey(peerId.publicKey);\n    }\n    if (pubKey != null) {\n        return pubKey;\n    }\n    throw errCode(new Error('no public key is available'), ERRORS.ERR_UNDEFINED_PARAMETER);\n};\n/**\n * Utility for creating the record data for being signed\n */\nexport const ipnsEntryDataForV1Sig = (value, validityType, validity) => {\n    const validityTypeBuffer = uint8ArrayFromString(validityType);\n    return uint8ArrayConcat([value, validity, validityTypeBuffer]);\n};\n/**\n * Utility for creating the record data for being signed\n */\nexport const ipnsEntryDataForV2Sig = (data) => {\n    const entryData = uint8ArrayFromString('ipns-signature:');\n    return uint8ArrayConcat([entryData, data]);\n};\nexport const marshal = (obj) => {\n    return IpnsEntry.encode(obj);\n};\nexport const unmarshal = (buf) => {\n    const message = IpnsEntry.decode(buf);\n    // protobufjs returns bigints as numbers\n    if (message.sequence != null) {\n        message.sequence = BigInt(message.sequence);\n    }\n    // protobufjs returns bigints as numbers\n    if (message.ttl != null) {\n        message.ttl = BigInt(message.ttl);\n    }\n    return {\n        value: message.value ?? new Uint8Array(0),\n        signature: message.signature ?? new Uint8Array(0),\n        validityType: message.validityType ?? IpnsEntry.ValidityType.EOL,\n        validity: message.validity ?? new Uint8Array(0),\n        sequence: message.sequence ?? 0n,\n        pubKey: message.pubKey,\n        ttl: message.ttl ?? undefined,\n        signatureV2: message.signatureV2,\n        data: message.data\n    };\n};\nexport const peerIdToRoutingKey = (peerId) => {\n    return uint8ArrayConcat([\n        IPNS_PREFIX,\n        peerId.toBytes()\n    ]);\n};\nexport const peerIdFromRoutingKey = (key) => {\n    return peerIdFromBytes(key.slice(IPNS_PREFIX.length));\n};\nexport const createCborData = (value, validity, validityType, sequence, ttl) => {\n    let ValidityType;\n    if (validityType === IpnsEntry.ValidityType.EOL) {\n        ValidityType = 0;\n    }\n    else {\n        throw errCode(new Error('Unknown validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    const data = {\n        Value: value,\n        Validity: validity,\n        ValidityType,\n        Sequence: sequence,\n        TTL: ttl\n    };\n    return cborg.encode(data);\n};\nexport const parseCborData = (buf) => {\n    const data = cborg.decode(buf);\n    if (data.ValidityType === 0) {\n        data.ValidityType = IpnsEntry.ValidityType.EOL;\n    }\n    else {\n        throw errCode(new Error('Unknown validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    if (Number.isInteger(data.Sequence)) {\n        // sequence must be a BigInt, but DAG-CBOR doesn't preserve this for Numbers within the safe-integer range\n        data.Sequence = BigInt(data.Sequence);\n    }\n    if (Number.isInteger(data.TTL)) {\n        // ttl must be a BigInt, but DAG-CBOR doesn't preserve this for Numbers within the safe-integer range\n        data.TTL = BigInt(data.TTL);\n    }\n    return data;\n};\n//# sourceMappingURL=utils.js.map","import NanoDate from 'timestamp-nano';\nimport { Key } from 'interface-datastore/key';\nimport { unmarshalPrivateKey } from '@libp2p/crypto/keys';\nimport errCode from 'err-code';\nimport { base32upper } from 'multiformats/bases/base32';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { logger } from '@libp2p/logger';\nimport { createCborData, ipnsEntryDataForV1Sig, ipnsEntryDataForV2Sig } from './utils.js';\nimport * as ERRORS from './errors.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { IpnsEntry } from './pb/ipns.js';\nconst log = logger('ipns');\nconst ID_MULTIHASH_CODE = identity.code;\nexport const namespace = '/ipns/';\nexport const namespaceLength = namespace.length;\n/**\n * Creates a new ipns entry and signs it with the given private key.\n * The ipns entry validity should follow the [RFC3339]{@link https://www.ietf.org/rfc/rfc3339.txt} with nanoseconds precision.\n * Note: This function does not embed the public key. If you want to do that, use `EmbedPublicKey`.\n *\n * @param {PeerId} peerId - peer id containing private key for signing the record.\n * @param {Uint8Array} value - value to be stored in the record.\n * @param {number | bigint} seq - number representing the current version of the record.\n * @param {number} lifetime - lifetime of the record (in milliseconds).\n */\nexport const create = async (peerId, value, seq, lifetime) => {\n    // Validity in ISOString with nanoseconds precision and validity type EOL\n    const expirationDate = new NanoDate(Date.now() + Number(lifetime));\n    const validityType = IpnsEntry.ValidityType.EOL;\n    const [ms, ns] = lifetime.toString().split('.');\n    const lifetimeNs = (BigInt(ms) * BigInt(100000)) + BigInt(ns ?? '0');\n    return await _create(peerId, value, seq, validityType, expirationDate, lifetimeNs);\n};\n/**\n * Same as create(), but instead of generating a new Date, it receives the intended expiration time\n * WARNING: nano precision is not standard, make sure the value in seconds is 9 orders of magnitude lesser than the one provided.\n *\n * @param {PeerId} peerId - PeerId containing private key for signing the record.\n * @param {Uint8Array} value - value to be stored in the record.\n * @param {number | bigint} seq - number representing the current version of the record.\n * @param {string} expiration - expiration datetime for record in the [RFC3339]{@link https://www.ietf.org/rfc/rfc3339.txt} with nanoseconds precision.\n */\nexport const createWithExpiration = async (peerId, value, seq, expiration) => {\n    const expirationDate = NanoDate.fromString(expiration);\n    const validityType = IpnsEntry.ValidityType.EOL;\n    const ttlMs = expirationDate.toDate().getTime() - Date.now();\n    const ttlNs = (BigInt(ttlMs) * BigInt(100000)) + BigInt(expirationDate.getNano());\n    return await _create(peerId, value, seq, validityType, expirationDate, ttlNs);\n};\nconst _create = async (peerId, value, seq, validityType, expirationDate, ttl) => {\n    seq = BigInt(seq);\n    const isoValidity = uint8ArrayFromString(expirationDate.toString());\n    if (peerId.privateKey == null) {\n        throw errCode(new Error('Missing private key'), ERRORS.ERR_MISSING_PRIVATE_KEY);\n    }\n    const privateKey = await unmarshalPrivateKey(peerId.privateKey);\n    const signatureV1 = await signLegacyV1(privateKey, value, validityType, isoValidity);\n    const data = createCborData(value, isoValidity, validityType, seq, ttl);\n    const sigData = ipnsEntryDataForV2Sig(data);\n    const signatureV2 = await privateKey.sign(sigData);\n    const entry = {\n        value,\n        signature: signatureV1,\n        validityType,\n        validity: isoValidity,\n        sequence: seq,\n        ttl,\n        signatureV2,\n        data\n    };\n    // if we cannot derive the public key from the PeerId (e.g. RSA PeerIDs),\n    // we have to embed it in the IPNS record\n    if (peerId.publicKey != null) {\n        const digest = Digest.decode(peerId.toBytes());\n        if (digest.code !== ID_MULTIHASH_CODE || !uint8ArrayEquals(peerId.publicKey, digest.digest)) {\n            entry.pubKey = peerId.publicKey;\n        }\n    }\n    log('ipns entry for %b created', value);\n    return entry;\n};\n/**\n * rawStdEncoding with RFC4648\n */\nconst rawStdEncoding = (key) => base32upper.encode(key).slice(1);\n/**\n * Get key for storing the record locally.\n * Format: /ipns/${base32(<HASH>)}\n *\n * @param {Uint8Array} key - peer identifier object.\n */\nexport const getLocalKey = (key) => new Key(`/ipns/${rawStdEncoding(key)}`);\nexport { unmarshal } from './utils.js';\nexport { marshal } from './utils.js';\nexport { peerIdToRoutingKey } from './utils.js';\nexport { peerIdFromRoutingKey } from './utils.js';\n/**\n * Sign ipns record data using the legacy V1 signature scheme\n */\nconst signLegacyV1 = async (privateKey, value, validityType, validity) => {\n    try {\n        const dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n        return await privateKey.sign(dataForSignature);\n    }\n    catch (error) {\n        log.error('record signature creation failed', error);\n        throw errCode(new Error('record signature creation failed'), ERRORS.ERR_SIGNATURE_CREATION);\n    }\n};\n//# sourceMappingURL=index.js.map","import { isPeerId } from '@libp2p/interface-peer-id'\nimport { notFoundError } from 'datastore-core/errors'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport * as ipns from 'ipns'\n\nconst log = logger('ipfs:ipns:publisher')\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-keys').PublicKey} PublicKey\n * @typedef {import('ipns').IPNSEntry} IPNSEntry\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst ERR_NOT_FOUND = notFoundError().code\nconst defaultRecordLifetime = 60 * 60 * 1000\n\n// IpnsPublisher is capable of publishing and resolving names to the IPFS routing system.\nexport class IpnsPublisher {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   * @param {import('interface-datastore').Datastore} datastore\n   */\n  constructor (routing, datastore) {\n    this._routing = routing\n    this._datastore = datastore\n  }\n\n  /**\n   * Publish record with a eol\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async publishWithEOL (peerId, value, lifetime, options) {\n    const record = await this._updateOrCreateRecord(peerId, value, lifetime, options)\n\n    return this._putRecordToRouting(record, peerId, options)\n  }\n\n  /**\n   * Accepts a keypair, as well as a value (ipfsPath), and publishes it out to the routing system\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} options\n   */\n  publish (peerId, value, options) {\n    return this.publishWithEOL(peerId, value, defaultRecordLifetime, options)\n  }\n\n  /**\n   * @param {Uint8Array} record\n   * @param {PeerId} peerId\n   * @param {AbortOptions} [options]\n   */\n  async _putRecordToRouting (record, peerId, options) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    if (peerId.publicKey == null) {\n      throw errcode(new Error('Public key was missing'), 'ERR_MISSING_PUBLIC_KEY')\n    }\n\n    const routingKey = ipns.peerIdToRoutingKey(peerId)\n\n    await this._publishEntry(routingKey, record, options)\n\n    return record\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} entry\n   * @param {AbortOptions} [options]\n   */\n  async _publishEntry (key, entry, options) {\n    // Add record to routing (buffer key)\n    try {\n      const res = await this._routing.put(key, entry, options)\n      log(`ipns record for ${uint8ArrayToString(key, 'base32')} was stored in the routing`)\n\n      return res\n    } catch (/** @type {any} */err) {\n      const errMsg = `ipns record for ${uint8ArrayToString(key, 'base32')} could not be stored in the routing - ${err.stack}`\n      log.error(errMsg)\n      log.error(err)\n\n      throw errcode(new Error(errMsg), 'ERR_PUTTING_TO_ROUTING')\n    }\n  }\n\n  /**\n   * Returns the record this node has published corresponding to the given peer ID.\n   *\n   * If `checkRouting` is true and we have no existing record, this method will check the routing system for any existing records.\n   *\n   * @param {PeerId} peerId\n   * @param {object} options\n   * @param {boolean} [options.checkRouting]\n   */\n  async _getPublished (peerId, options = {}) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    const checkRouting = options.checkRouting !== false\n\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.toBytes()))\n\n      // unmarshal data\n      return this._unmarshalData(dsVal)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error getting the ipns record ${peerId.toString()} from datastore`\n        log.error(errMsg)\n\n        throw errcode(new Error(errMsg), 'ERR_UNEXPECTED_DATASTORE_RESPONSE')\n      }\n\n      if (!checkRouting) {\n        throw errcode(err, 'ERR_NOT_FOUND_AND_CHECK_ROUTING_NOT_ENABLED')\n      }\n\n      // Try to get from routing\n      try {\n        const routingKey = ipns.peerIdToRoutingKey(peerId)\n        const res = await this._routing.get(routingKey)\n\n        // unmarshal data\n        return this._unmarshalData(res)\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n\n        throw err\n      }\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   */\n  _unmarshalData (data) {\n    try {\n      return ipns.unmarshal(data)\n    } catch (/** @type {any} */ err) {\n      throw errcode(err, 'ERR_INVALID_RECORD_DATA')\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async _updateOrCreateRecord (peerId, value, lifetime, options) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    const getPublishedOptions = {\n      checkRouting: true\n    }\n\n    /** @type {IPNSEntry | undefined} */\n    let record\n\n    try {\n      record = await this._getPublished(peerId, getPublishedOptions)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error when determining the last published IPNS record for ${peerId.toString()} ${err.stack}`\n        log.error(errMsg)\n\n        throw errcode(new Error(errMsg), 'ERR_DETERMINING_PUBLISHED_RECORD')\n      }\n    }\n\n    // Determinate the record sequence number\n    let seqNumber = 0n\n\n    if (record && record.sequence !== undefined) {\n      // Increment if the published value is different\n      seqNumber = uint8ArrayEquals(record.value, value) ? record.sequence : record.sequence + BigInt(1)\n    }\n\n    /** @type {IPNSEntry} */\n    let entryData\n\n    try {\n      // Create record\n      entryData = await ipns.create(peerId, value, seqNumber, lifetime)\n    } catch (/** @type {any} */ err) {\n      const errMsg = `ipns record for ${value} could not be created`\n\n      log.error(err)\n      throw errcode(new Error(errMsg), 'ERR_CREATING_IPNS_RECORD')\n    }\n\n    // TODO IMPROVEMENT - set ttl (still experimental feature for go)\n\n    try {\n      // Marshal record\n      const data = ipns.marshal(entryData)\n\n      // Store the new record\n      await this._datastore.put(ipns.getLocalKey(peerId.toBytes()), data, options)\n\n      log(`ipns record for ${uint8ArrayToString(value, 'base32')} was stored in the datastore`)\n\n      return data\n    } catch (/** @type {any} */ err) {\n      const errMsg = `ipns record for ${value} could not be stored in the datastore`\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_STORING_IN_DATASTORE')\n    }\n  }\n}\n\nIpnsPublisher.defaultRecordLifetime = defaultRecordLifetime\n","import * as ipns from 'ipns'\nimport { importKey } from '@libp2p/crypto/keys'\nimport { isPeerId } from '@libp2p/interface-peer-id'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { TimeoutController } from 'timeout-abort-controller'\n\nconst log = logger('ipfs:ipns:republisher')\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst minute = 60 * 1000\nconst hour = 60 * minute\n\nconst defaultBroadcastInterval = 4 * hour\nconst defaultRecordLifetime = 24 * hour\n\nexport class IpnsRepublisher {\n  /**\n   * @param {import('./publisher').IpnsPublisher} publisher\n   * @param {import('interface-datastore').Datastore} datastore\n   * @param {PeerId} peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} keychain\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {number} [options.initialBroadcastInterval]\n   * @param {number} [options.broadcastInterval]\n   */\n  constructor (publisher, datastore, peerId, keychain, options = { pass: '' }) {\n    this._publisher = publisher\n    this._datastore = datastore\n    this._peerId = peerId\n    this._keychain = keychain\n    this._options = options\n    this._republishHandle = null\n  }\n\n  async start () { // eslint-disable-line require-await\n    if (this._republishHandle) {\n      throw errcode(new Error('republisher is already running'), 'ERR_REPUBLISH_ALREADY_RUNNING')\n    }\n\n    // TODO: this handler should be isolated in another module\n    const republishHandle = {\n      /** @type {null|(() => Promise<void>)} */\n      _task: null,\n      /** @type {null|Promise<void>} */\n      _inflightTask: null,\n      /** @type {null|NodeJS.Timeout} */\n      _timeoutId: null,\n      /**\n       * @param {function(): number} period\n       */\n      runPeriodically: (period) => {\n        republishHandle._timeoutId = setTimeout(async () => {\n          republishHandle._timeoutId = null\n\n          try {\n            // @ts-expect-error - _task could be null\n            republishHandle._inflightTask = republishHandle._task()\n            await republishHandle._inflightTask\n\n            // Schedule next\n            if (republishHandle._task) {\n              republishHandle.runPeriodically(period)\n            }\n          } catch (/** @type {any} */ err) {\n            log.error(err)\n          }\n        }, period())\n      },\n      cancel: async () => {\n        // do not run again\n        if (republishHandle._timeoutId != null) {\n          clearTimeout(republishHandle._timeoutId)\n        }\n        republishHandle._task = null\n\n        // wait for the currently in flight task to complete\n        await republishHandle._inflightTask\n      }\n    }\n\n    const { pass } = this._options\n    let firstRun = true\n\n    republishHandle._task = async () => {\n      const timeoutController = new TimeoutController(30000)\n\n      try {\n        await this._republishEntries(this._peerId, pass, {\n          signal: timeoutController.signal\n        })\n      } finally {\n        timeoutController.clear()\n      }\n    }\n\n    republishHandle.runPeriodically(() => {\n      if (firstRun) {\n        firstRun = false\n        return this._options.initialBroadcastInterval || minute\n      }\n\n      return this._options.broadcastInterval || defaultBroadcastInterval\n    })\n\n    this._republishHandle = republishHandle\n  }\n\n  async stop () {\n    const republishHandle = this._republishHandle\n\n    if (!republishHandle) {\n      throw errcode(new Error('republisher is not running'), 'ERR_REPUBLISH_NOT_RUNNING')\n    }\n\n    this._republishHandle = null\n\n    await republishHandle.cancel()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {string} pass\n   * @param {AbortOptions} options\n   */\n  async _republishEntries (peerId, pass, options) {\n    // TODO: Should use list of published entries.\n    // We can't currently *do* that because go uses this method for now.\n    try {\n      await this._republishEntry(peerId, options)\n    } catch (/** @type {any} */ err) {\n      const errMsg = 'cannot republish entry for the node\\'s private key'\n\n      log.error(errMsg)\n      return\n    }\n\n    // keychain needs pass to get the cryptographic keys\n    if (pass) {\n      try {\n        const keys = await this._keychain.listKeys()\n\n        for (const key of keys) {\n          if (key.name === 'self') {\n            continue\n          }\n\n          const pem = await this._keychain.exportKey(key.name, pass)\n          const privKey = await importKey(pem, pass)\n          const peerIdKey = await peerIdFromKeys(privKey.public.bytes, privKey.bytes)\n\n          await this._republishEntry(peerIdKey, options)\n        }\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n      }\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {AbortOptions} options\n   */\n  async _republishEntry (peerId, options) {\n    try {\n      const value = await this._getPreviousValue(peerId)\n      await this._publisher.publishWithEOL(peerId, value, defaultRecordLifetime, options)\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NO_ENTRY_FOUND') {\n        return\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  async _getPreviousValue (peerId) {\n    if (!(isPeerId(peerId))) {\n      throw errcode(new Error('invalid peer ID'), 'ERR_INVALID_PEER_ID')\n    }\n\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.toBytes()))\n\n      if (!(dsVal instanceof Uint8Array)) {\n        throw errcode(new Error(\"found ipns record that we couldn't process\"), 'ERR_INVALID_IPNS_RECORD')\n      }\n\n      // unmarshal data\n      try {\n        const record = ipns.unmarshal(dsVal)\n\n        return record.value\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n        throw errcode(new Error('found ipns record that we couldn\\'t convert to a value'), 'ERR_INVALID_IPNS_RECORD')\n      }\n    } catch (/** @type {any} */ err) {\n      // error handling\n      // no need to republish\n      if (err && err.notFound) {\n        throw errcode(new Error(`no previous entry for record with id: ${peerId.toString()}`), 'ERR_NO_ENTRY_FOUND')\n      }\n\n      throw err\n    }\n  }\n}\n","import errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { IpnsEntry } from './pb/ipns.js';\nimport { parseRFC3339, extractPublicKey, ipnsEntryDataForV2Sig, unmarshal, peerIdFromRoutingKey, parseCborData } from './utils.js';\nimport * as ERRORS from './errors.js';\nimport { logger } from '@libp2p/logger';\nconst log = logger('ipns:validator');\n/**\n * Validates the given ipns entry against the given public key\n */\nexport const validate = async (publicKey, entry) => {\n    const { value, validityType, validity } = entry;\n    let dataForSignature;\n    let signature;\n    // Check v2 signature if it's available, otherwise use the v1 signature\n    if ((entry.signatureV2 != null) && (entry.data != null)) {\n        signature = entry.signatureV2;\n        dataForSignature = ipnsEntryDataForV2Sig(entry.data);\n        validateCborDataMatchesPbData(entry);\n    }\n    else {\n        throw errCode(new Error('missing data or signatureV2'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    // Validate Signature\n    let isValid;\n    try {\n        isValid = await publicKey.verify(dataForSignature, signature);\n    }\n    catch (err) {\n        isValid = false;\n    }\n    if (!isValid) {\n        log.error('record signature verification failed');\n        throw errCode(new Error('record signature verification failed'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    // Validate according to the validity type\n    if (validity != null && validityType === IpnsEntry.ValidityType.EOL) {\n        let validityDate;\n        try {\n            validityDate = parseRFC3339(uint8ArrayToString(validity));\n        }\n        catch (e) {\n            log.error('unrecognized validity format (not an rfc3339 format)');\n            throw errCode(new Error('unrecognized validity format (not an rfc3339 format)'), ERRORS.ERR_UNRECOGNIZED_FORMAT);\n        }\n        if (validityDate.getTime() < Date.now()) {\n            log.error('record has expired');\n            throw errCode(new Error('record has expired'), ERRORS.ERR_IPNS_EXPIRED_RECORD);\n        }\n    }\n    else if (validityType != null) {\n        log.error('unrecognized validity type');\n        throw errCode(new Error('unrecognized validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n    }\n    log('ipns entry for %b is valid', value);\n};\nconst validateCborDataMatchesPbData = (entry) => {\n    if (entry.data == null) {\n        throw errCode(new Error('Record data is missing'), ERRORS.ERR_INVALID_RECORD_DATA);\n    }\n    const data = parseCborData(entry.data);\n    if (!uint8ArrayEquals(data.Value, entry.value)) {\n        throw errCode(new Error('Field \"value\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (!uint8ArrayEquals(data.Validity, entry.validity)) {\n        throw errCode(new Error('Field \"validity\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.ValidityType !== entry.validityType) {\n        throw errCode(new Error('Field \"validityType\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.Sequence !== entry.sequence) {\n        throw errCode(new Error('Field \"sequence\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n    if (data.TTL !== entry.ttl) {\n        throw errCode(new Error('Field \"ttl\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n    }\n};\nexport const ipnsValidator = async (key, marshalledData) => {\n    const peerId = peerIdFromRoutingKey(key);\n    const receivedEntry = unmarshal(marshalledData);\n    // extract public key\n    const pubKey = await extractPublicKey(peerId, receivedEntry);\n    // Record validation\n    await validate(pubKey, receivedEntry);\n};\n//# sourceMappingURL=validator.js.map","import * as ipns from 'ipns'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport * as Errors from 'datastore-core/errors'\nimport { ipnsValidator } from 'ipns/validator'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst log = logger('ipfs:ipns:resolver')\n\nconst ERR_NOT_FOUND = Errors.notFoundError().code\n\nconst defaultMaximumRecursiveDepth = 32\n\nexport class IpnsResolver {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   */\n  constructor (routing) {\n    this._routing = routing\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  async resolve (name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME')\n    }\n\n    const recursive = options.recursive && options.recursive.toString() === 'true'\n\n    const nameSegments = name.split('/')\n\n    if (nameSegments.length !== 3 || nameSegments[0] !== '') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME')\n    }\n\n    const key = nameSegments[2]\n\n    // Define a maximum depth if recursive option enabled\n    let depth = Infinity\n\n    if (recursive) {\n      depth = defaultMaximumRecursiveDepth\n    }\n\n    const res = await this.resolver(key, depth, options)\n\n    log(`${name} was locally resolved correctly`)\n    return res\n  }\n\n  /**\n   * Recursive resolver according to the specified depth\n   *\n   * @param {string} name\n   * @param {number} depth\n   * @param {AbortOptions} options\n   * @returns {Promise<string>}\n   */\n  async resolver (name, depth, options) {\n    // Exceeded recursive maximum depth\n    if (depth === 0) {\n      const errMsg = `could not resolve name (recursion limit of ${defaultMaximumRecursiveDepth} exceeded)`\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_RESOLVE_RECURSION_LIMIT')\n    }\n\n    const res = await this._resolveName(name, options)\n    const nameSegments = res.split('/')\n\n    // If obtained a ipfs cid or recursive option is disabled\n    if (nameSegments[1] === 'ipfs' || !depth) {\n      return res\n    }\n\n    // continue recursively until depth equals 0\n    return this.resolver(nameSegments[2], depth - 1, options)\n  }\n\n  /**\n   * Resolve ipns entries from the provided routing\n   *\n   * @param {string} name\n   * @param {AbortOptions} options\n   */\n  async _resolveName (name, options) {\n    const peerId = peerIdFromString(name)\n    const routingKey = ipns.peerIdToRoutingKey(peerId)\n    let record\n\n    try {\n      record = await this._routing.get(routingKey, options)\n    } catch (/** @type {any} */ err) {\n      log.error('could not get record from routing', err)\n\n      if (err.code === ERR_NOT_FOUND) {\n        throw errcode(new Error(`record requested for ${name} was not found in the network`), 'ERR_NO_RECORD_FOUND')\n      }\n\n      throw errcode(new Error(`unexpected error getting the ipns record ${peerId.toString()}`), 'ERR_UNEXPECTED_ERROR_GETTING_RECORD')\n    }\n\n    // We should have the public key by now (inline, or in the entry)\n    return this._validateRecord(peerId, record)\n  }\n\n  /**\n   * Validate a resolved record\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} record\n   */\n  async _validateRecord (peerId, record) {\n    // IPNS entry validation\n    await ipnsValidator(uint8ArrayConcat([\n      uint8ArrayFromString('/ipns/'),\n      peerId.toBytes()\n    ]), record)\n\n    const ipnsEntry = ipns.unmarshal(record)\n\n    return uint8ArrayToString(ipnsEntry.value)\n  }\n}\n","import hashlru from 'hashlru'\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport class TLRU {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  constructor (maxSize) {\n    this.lru = hashlru(maxSize)\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  get (key) {\n    const value = this.lru.get(key)\n    if (value) {\n      if ((value.expire) && (value.expire < Date.now())) {\n        this.lru.remove(key)\n        return undefined\n      }\n      return value.value\n    }\n    return undefined\n  }\n\n  /**\n   * Set a key value pair\n   *\n   * @param {string} key\n   * @param {T} value\n   * @param {number} ttl - in miliseconds\n   * @returns {void}\n   */\n  set (key, value, ttl) {\n    this.lru.set(key, { value, expire: Date.now() + ttl })\n  }\n\n  /**\n   * Find if the cache has the key\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has (key) {\n    const value = this.get(key)\n    if (value) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Remove key\n   *\n   * @param {string} key\n   */\n  remove (key) {\n    this.lru.remove(key)\n  }\n\n  /**\n   * Clears the cache\n   *\n   * @memberof TLRU\n   */\n  clear () {\n    this.lru.clear()\n  }\n}\n","import errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { IpnsPublisher } from './publisher.js'\nimport { IpnsRepublisher } from './republisher.js'\nimport { IpnsResolver } from './resolver.js'\nimport { TLRU } from '../utils/tlru.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst log = logger('ipfs:ipns')\nconst defaultRecordTtl = 60 * 1000\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport class IPNS {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   * @param {import('interface-datastore').Datastore} datastore\n   * @param {PeerId} peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} keychain\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {number} [options.initialBroadcastInterval]\n   * @param {number} [options.broadcastInterval]\n   */\n  constructor (routing, datastore, peerId, keychain, options) {\n    this.publisher = new IpnsPublisher(routing, datastore)\n    this.republisher = new IpnsRepublisher(this.publisher, datastore, peerId, keychain, options)\n    this.resolver = new IpnsResolver(routing)\n    this.cache = new TLRU(1000)\n    this.routing = routing\n  }\n\n  /**\n   * Publish\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async publish (peerId, value, lifetime = IpnsPublisher.defaultRecordLifetime, options) {\n    try {\n      await this.publisher.publishWithEOL(peerId, value, lifetime, options)\n\n      log(`IPNS value ${uint8ArrayToString(value, 'base32')} was published correctly`)\n\n      // // Add to cache\n      const id = peerId.toString()\n      // @ts-expect-error - parseFloat expects string\n      const ttEol = parseFloat(lifetime)\n      const ttl = (ttEol < defaultRecordTtl) ? ttEol : defaultRecordTtl\n\n      this.cache.set(id, value, ttl)\n\n      log(`IPNS value ${uint8ArrayToString(value, 'base32')} was cached correctly`)\n\n      return {\n        name: id,\n        value: value\n      }\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n\n      throw err\n    }\n  }\n\n  /**\n   * Resolve\n   *\n   * @param {string} name\n   * @param {object} options\n   * @param {boolean} [options.nocache]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  async resolve (name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('name received is not valid'), 'ERR_INVALID_NAME')\n    }\n\n    // If recursive, we should not try to get the cached value\n    if (!options.nocache && !options.recursive) {\n      // Try to get the record from cache\n      const id = name.split('/')[2]\n      const result = this.cache.get(id)\n\n      if (result) {\n        return result\n      }\n    }\n\n    try {\n      const result = await this.resolver.resolve(name, options)\n\n      log(`IPNS record from ${name} was resolved correctly`)\n\n      return result\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n\n      throw err\n    }\n  }\n\n  /**\n   * Initialize keyspace\n   *\n   * Sets the ipns record for the given key to point to an empty directory\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} [options]\n   */\n  async initializeKeyspace (peerId, value, options) { // eslint-disable-line require-await\n    return this.publish(peerId, value, IpnsPublisher.defaultRecordLifetime, options)\n  }\n}\n","import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { IpnsEntry } from './pb/ipns.js';\nimport { parseRFC3339 } from './utils.js';\nexport const ipnsSelector = (key, data) => {\n    const entries = data.map((buf, index) => ({\n        entry: IpnsEntry.decode(buf),\n        index\n    }));\n    entries.sort((a, b) => {\n        // having a newer signature version is better than an older signature version\n        if (a.entry.signatureV2 != null && b.entry.signatureV2 == null) {\n            return -1;\n        }\n        else if (a.entry.signatureV2 == null && b.entry.signatureV2 != null) {\n            return 1;\n        }\n        const aSeq = a.entry.sequence ?? 0n;\n        const bSeq = b.entry.sequence ?? 0n;\n        // choose later sequence number\n        if (aSeq > bSeq) {\n            return -1;\n        }\n        else if (aSeq < bSeq) {\n            return 1;\n        }\n        const aValidty = a.entry.validity ?? new Uint8Array(0);\n        const bValidty = b.entry.validity ?? new Uint8Array(0);\n        // choose longer lived record if sequence numbers the same\n        const entryAValidityDate = parseRFC3339(uint8ArrayToString(aValidty));\n        const entryBValidityDate = parseRFC3339(uint8ArrayToString(bValidty));\n        if (entryAValidityDate.getTime() > entryBValidityDate.getTime()) {\n            return -1;\n        }\n        if (entryAValidityDate.getTime() < entryBValidityDate.getTime()) {\n            return 1;\n        }\n        return 0;\n    });\n    return entries[0].index;\n};\n//# sourceMappingURL=selector.js.map","import { namespaceLength, namespace, peerIdToRoutingKey } from 'ipns'\nimport { ipnsValidator } from 'ipns/validator'\nimport { ipnsSelector } from 'ipns/selector'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { PubSubDatastore } from 'datastore-pubsub'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\nconst log = logger('ipfs:ipns:pubsub')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// Pubsub datastore aims to manage the pubsub subscriptions for IPNS\nexport class IpnsPubsubDatastore {\n  /**\n   * @param {import('@libp2p/interface-pubsub').PubSub} pubsub\n   * @param {import('interface-datastore').Datastore} localDatastore\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (pubsub, localDatastore, peerId) {\n    /** @type {Record<string, string>} */\n    this._subscriptions = {}\n\n    // Bind _handleSubscriptionKey function, which is called by PubsubDatastore.\n    this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this)\n\n    this._pubsubDs = new PubSubDatastore(pubsub, localDatastore, peerId, ipnsValidator, ipnsSelector, this._handleSubscriptionKey)\n  }\n\n  /**\n   * Put a value to the pubsub datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await this._pubsubDs.put(key, value, options)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * Get a value from the pubsub datastore indexed by the received key properly encoded.\n   * Also, the identifier topic is subscribed to and the pubsub datastore records will be\n   * updated once new publishes occur.\n   *\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    let res\n    let err\n\n    try {\n      res = await this._pubsubDs.get(key, options)\n    } catch (/** @type {any} */ e) {\n      err = e\n    }\n\n    // Add topic subscribed\n    const ns = key.slice(0, namespaceLength)\n\n    if (uint8ArrayToString(ns) === namespace) {\n      const stringifiedTopic = base58btc.encode(key).substring(1)\n      const id = base58btc.encode(key.slice(namespaceLength)).substring(1)\n\n      this._subscriptions[stringifiedTopic] = id\n\n      log(`subscribed to pubsub topic ${stringifiedTopic}, id ${id}`)\n    }\n\n    // If no data was obtained, after storing the subscription, return the error.\n    if (err) {\n      throw err\n    }\n\n    return res\n  }\n\n  /**\n   * Modify subscription key to have a proper encoding\n   *\n   * @param {Uint8Array | string} key\n   */\n  _handleSubscriptionKey (key) {\n    if (key instanceof Uint8Array) {\n      key = uint8ArrayToString(key, 'base58btc')\n    }\n\n    const subscriber = this._subscriptions[key]\n\n    if (!subscriber) {\n      throw errcode(new Error(`key ${key} does not correspond to a subscription`), 'ERR_INVALID_KEY')\n    }\n\n    try {\n      const k = peerIdToRoutingKey(peerIdFromString(subscriber))\n      return k\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * Get pubsub subscriptions related to ipns.\n   */\n  getSubscriptions () {\n    const subscriptions = Object.values(this._subscriptions).filter(Boolean)\n\n    return subscriptions.map((sub) => `${namespace}${sub}`)\n  }\n\n  /**\n   * Cancel pubsub subscriptions related to ipns.\n   *\n   * @param {string} name - ipns path to cancel the pubsub subscription.\n   */\n  async cancel (name) { // eslint-disable-line require-await\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid subscription name'), 'ERR_INVALID_SUBSCRIPTION_NAME')\n    }\n\n    // Trim /ipns/ prefix from the name\n    if (name.startsWith(namespace)) {\n      name = name.substring(namespaceLength)\n    }\n\n    const stringifiedTopic = Object.keys(this._subscriptions).find((key) => this._subscriptions[key] === name)\n\n    // Not found topic\n    if (!stringifiedTopic) {\n      return {\n        canceled: false\n      }\n    }\n\n    // Unsubscribe topic\n    const bufTopic = uint8ArrayFromString(stringifiedTopic)\n\n    this._pubsubDs.unsubscribe(bufTopic)\n\n    delete this._subscriptions[stringifiedTopic]\n    log(`unsubscribed pubsub ${stringifiedTopic}: ${name}`)\n\n    return {\n      canceled: true\n    }\n  }\n}\n","import { Key } from 'interface-datastore/key'\nimport { Libp2pRecord } from '@libp2p/record'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst log = logger('ipfs:ipns:offline-datastore')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// Offline datastore aims to mimic the same encoding as routing when storing records\n// to the local datastore\nexport class OfflineDatastore {\n  /**\n   * @param {import('interface-datastore').Datastore} datastore\n   */\n  constructor (datastore) {\n    this._datastore = datastore\n    /** @type {any[]} */\n    this.stores = []\n  }\n\n  /**\n   * Put a value to the local datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) { // eslint-disable-line require-await\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY')\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore value must be a Uint8Array'), 'ERR_INVALID_VALUE')\n    }\n\n    let routingKey\n\n    try {\n      routingKey = this._routingKey(key)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY')\n    }\n\n    // Marshal to libp2p record as the DHT does\n    const record = new Libp2pRecord(key, value, new Date())\n\n    await this._datastore.put(routingKey, record.serialize(), options)\n  }\n\n  /**\n   * Get a value from the local datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY')\n    }\n\n    let routingKey\n\n    try {\n      routingKey = this._routingKey(key)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY')\n    }\n\n    const res = await this._datastore.get(routingKey, options)\n\n    // Unmarshal libp2p record as the DHT does\n    let record\n    try {\n      record = Libp2pRecord.deserialize(res)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    return record.value\n  }\n\n  /**\n   * encode key properly - base32(/ipns/{cid})\n   *\n   * @param {Uint8Array} key\n   */\n  _routingKey (key) {\n    return new Key('/dht/record/' + uint8ArrayToString(key, 'base32'), false)\n  }\n}\n","import drain from 'it-drain'\nimport { notFoundError } from 'datastore-core/errors'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:ipns:dht-datastore')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport class DHTDatastore {\n  /**\n   *\n   * @param {import('@libp2p/interface-dht').DHT} dht\n   */\n  constructor (dht) {\n    this._dht = dht\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await drain(this._dht.put(key, value, options))\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    for await (const event of this._dht.get(key, options)) {\n      if (event.name === 'VALUE') {\n        return event.value\n      }\n    }\n\n    throw notFoundError()\n  }\n}\n","import { IPNS } from '../ipns/index.js'\nimport { createRouting } from '../ipns/routing/config.js'\nimport { OfflineDatastore } from '../ipns/routing/offline-datastore.js'\nimport { NotInitializedError, AlreadyInitializedError } from '../errors.js'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:components:ipns')\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n *\n * @typedef {object} ExperimentalOptions\n * @property {boolean} [ipnsPubsub]\n *\n * @typedef {object} LibP2POptions\n * @property {DHTConfig} [config]\n *\n * @typedef {object} DHTConfig\n * @property {boolean} [enabled]\n */\n\nexport class IPNSAPI {\n  /**\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {boolean} [options.offline]\n   * @param {LibP2POptions} [options.libp2p]\n   * @param {ExperimentalOptions} [options.EXPERIMENTAL]\n   */\n  constructor (options = { pass: '' }) {\n    this.options = options\n\n    /** @type {IPNS | null} */\n    this.offline = null\n\n    /** @type {IPNS | null} */\n    this.online = null\n  }\n\n  getIPNS () {\n    const ipns = this.online || this.offline\n    if (ipns) {\n      return ipns\n    } else {\n      throw new NotInitializedError()\n    }\n  }\n\n  get routing () {\n    return this.getIPNS().routing\n  }\n\n  /**\n   * Activates IPNS subsystem in an ofline mode. If it was started once already\n   * it will throw an exception.\n   *\n   * This is primarily used for offline ipns modifications, such as the\n   * initializeKeyspace feature.\n   *\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   */\n  startOffline ({ repo, peerId, keychain }) {\n    if (this.offline != null) {\n      throw new AlreadyInitializedError()\n    }\n\n    log('initializing IPNS keyspace (offline)')\n\n    const routing = new OfflineDatastore(repo.datastore)\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options)\n\n    this.offline = ipns\n  }\n\n  /**\n   * @param {object} config\n   * @param {import('libp2p').Libp2p} config.libp2p\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   */\n  async startOnline ({ libp2p, repo, peerId, keychain }) {\n    if (this.online != null) {\n      throw new AlreadyInitializedError()\n    }\n    const routing = createRouting({ libp2p, repo, peerId, options: this.options })\n\n    // @ts-expect-error routing is a TieredDatastore which wants keys to be Keys, IPNS needs keys to be Uint8Arrays\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options)\n    await ipns.republisher.start()\n    this.online = ipns\n  }\n\n  async stop () {\n    const ipns = this.online\n    if (ipns) {\n      await ipns.republisher.stop()\n      this.online = null\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  publish (peerId, value, lifetime, options) {\n    return this.getIPNS().publish(peerId, value, lifetime, options)\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.nocache]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  resolve (name, options) {\n    return this.getIPNS().resolve(name, options)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} [options]\n   */\n  initializeKeyspace (peerId, value, options) {\n    return this.getIPNS().initializeKeyspace(peerId, value, options)\n  }\n}\n","import { TieredDatastore } from 'datastore-core/tiered'\nimport get from 'dlv'\nimport { IpnsPubsubDatastore } from './pubsub-datastore.js'\nimport { OfflineDatastore } from './offline-datastore.js'\nimport { DHTDatastore } from './dht-datastore.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {object} arg\n * @param {import('libp2p').Libp2p} arg.libp2p\n * @param {import('ipfs-repo').IPFSRepo} arg.repo\n * @param {import('@libp2p/interface-peer-id').PeerId} arg.peerId\n * @param {object} arg.options\n */\nexport function createRouting ({ libp2p, repo, peerId, options }) {\n  // Setup online routing for IPNS with a tiered routing composed by a DHT and a Pubsub router (if properly enabled)\n  /** @type {any[]} */\n  const ipnsStores = []\n\n  // Add IPNS pubsub if enabled\n  let pubsubDs\n  if (get(options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    pubsubDs = new IpnsPubsubDatastore(libp2p.pubsub, repo.datastore, peerId)\n    ipnsStores.push(pubsubDs)\n  }\n\n  // Add DHT datastore if enabled\n  if (get(options, 'offline', false) !== true && ['dht', 'dhtclient', 'dhtserver'].includes(get(options, 'config.Routing.Type', 'none'))) {\n    ipnsStores.push(new DHTDatastore(libp2p.dht))\n  }\n\n  // Add an offline datastore if we are offline or no other datastores are configured\n  if (get(options, 'offline', false) || ipnsStores.length === 0) {\n    const offlineDatastore = new OfflineDatastore(repo.datastore)\n    ipnsStores.push(offlineDatastore)\n  }\n\n  // Create ipns routing with a set of datastores\n  return new TieredDatastore(ipnsStores)\n}\n","import * as isIPFS from 'is-ipfs'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport drain from 'it-drain'\nimport { resolve } from '../../utils.js'\n\n/**\n * resolves the given path by parsing out protocol-specific entries\n * (e.g. /ipns/<node-key>) and then going through the /ipfs/ entries and returning the final node\n *\n * @param {object} context\n * @param {import('../ipns').IPNSAPI} context.ipns\n * @param {import('ipfs-repo').IPFSRepo} context.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} context.codecs\n * @param {string} name\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport async function resolvePath ({ ipns, repo, codecs }, name, options) {\n  // ipns path\n  if (isIPFS.ipnsPath(name)) {\n    return ipns.resolve(name)\n  }\n\n  const {\n    cid,\n    path\n  } = toCidAndPath(name)\n\n  // ipfs path\n  await drain(resolve(cid, path || '', codecs, repo, options))\n}\n","import { logger } from '@libp2p/logger'\nimport parseDuration from 'parse-duration'\nimport { importKey, unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport errcode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { OFFLINE_ERROR, normalizePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { resolvePath } from './utils.js'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\n\nconst log = logger('ipfs:name:publish')\n\n/**\n * IPNS - Inter-Planetary Naming System\n *\n * @param {object} config\n * @param {import('../ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createPublish ({ ipns, repo, codecs, peerId, isOnline, keychain }) {\n  /**\n   * @param {string} keyName\n   */\n  const lookupKey = async keyName => {\n    /** @type {import('@libp2p/interface-keys').PrivateKey} */\n    let privateKey\n\n    if (keyName === 'self' && peerId.privateKey != null) {\n      privateKey = await unmarshalPrivateKey(peerId.privateKey)\n    } else {\n      try {\n        // We're exporting and immediately importing the key, so we can just use a throw away password\n        const pem = await keychain.exportKey(keyName, 'temp')\n        privateKey = await importKey(pem, 'temp')\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n        throw errcode(err, 'ERR_CANNOT_GET_KEY')\n      }\n    }\n\n    return peerIdFromKeys(privateKey.public.bytes, privateKey.bytes)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/name').API<{}>[\"publish\"]}\n   */\n  async function publish (value, options = {}) {\n    const resolve = !(options.resolve === false)\n    const lifetime = options.lifetime || '24h'\n    const key = options.key || 'self'\n\n    if (!isOnline()) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR')\n    }\n\n    // TODO: params related logic should be in the core implementation\n    // Normalize path value\n    try {\n      value = normalizePath(value)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    let pubLifetime = 0\n    try {\n      pubLifetime = parseDuration(lifetime) || 0\n\n      // Calculate lifetime with nanoseconds precision\n      pubLifetime = parseFloat(pubLifetime.toFixed(6))\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    // TODO: ttl human for cache\n    const results = await Promise.all([\n      // verify if the path exists, if not, an error will stop the execution\n      lookupKey(key),\n      // if resolving, do a get so we make sure we have the blocks\n      resolve ? resolvePath({ ipns, repo, codecs }, value) : Promise.resolve()\n    ])\n\n    const bytes = uint8ArrayFromString(value)\n\n    // Start publishing process\n    const result = await ipns.publish(results[0], bytes, pubLifetime, options)\n\n    return {\n      name: result.name,\n      value: uint8ArrayToString(result.value)\n    }\n  }\n\n  return withTimeoutOption(publish)\n}\n","import { logger } from '@libp2p/logger'\nimport errcode from 'err-code'\nimport mergeOpts from 'merge-options'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { base36 } from 'multiformats/bases/base36'\nimport { peerIdFromString } from '@libp2p/peer-id'\n// @ts-expect-error no types\nimport isDomain from 'is-domain-name'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { OFFLINE_ERROR } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\nconst log = logger('ipfs:name:resolve')\n\n/**\n *\n * @param {string} result\n * @param {string[]} remainder\n * @returns {string}\n */\nconst appendRemainder = (result, remainder) =>\n  remainder.length > 0\n    ? result + '/' + remainder.join('/')\n    : result\n\n/**\n * IPNS - Inter-Planetary Naming System\n *\n * @param {object} config\n * @param {import('ipfs-core-types/src/root').API<{}>[\"dns\"]} config.dns\n * @param {import('../ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n * @param {import('../../types').Options} config.options\n */\nexport function createResolve ({ dns, ipns, isOnline, options: { offline } }) {\n  /**\n   * @type {import('ipfs-core-types/src/name').API<{}>[\"resolve\"]}\n   */\n  async function * resolve (name, options = {}) { // eslint-disable-line require-await\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options)\n\n    // TODO: params related logic should be in the core implementation\n    if (offline && options && options.nocache) {\n      throw errcode(new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE')\n    }\n\n    // IPNS resolve needs a online daemon\n    if (!isOnline() && !offline) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR')\n    }\n\n    let ipnsName = name.toString()\n\n    if (!ipnsName.startsWith('/ipns/')) {\n      ipnsName = `/ipns/${ipnsName}`\n    }\n\n    let [namespace, hash, ...remainder] = ipnsName.slice(1).split('/')\n\n    try {\n      if (hash.substring(0, 1) === '1') {\n        const id = peerIdFromString(hash)\n        const digest = Digest.decode(id.toBytes())\n        const libp2pKey = CID.createV1(0x72, digest)\n        hash = libp2pKey.toString(base36)\n      } else {\n        const cid = CID.parse(hash)\n\n        if (cid.version === 1) {\n          hash = cid.toString(base36)\n        }\n      }\n    } catch (/** @type {any} */ err) {\n      // lets check if we have a domain ex. /ipns/ipfs.io and resolve with dns\n      if (isDomain(hash)) {\n        yield appendRemainder(await dns(hash, options), remainder)\n        return\n      }\n\n      log.error(err)\n      throw errcode(new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME')\n    }\n\n    // multihash is valid lets resolve with IPNS\n    // TODO: convert ipns.resolve to return an iterator\n    const value = await ipns.resolve(`/${namespace}/${hash}`, options)\n    yield appendRemainder(value instanceof Uint8Array ? uint8ArrayToString(value) : value, remainder)\n  }\n\n  return withTimeoutOption(resolve)\n}\n","import { IpnsPubsubDatastore } from '../../../ipns/routing/pubsub-datastore.js'\nimport errcode from 'err-code'\n\n/**\n * @typedef {import('../../../types').ExperimentalOptions} ExperimentalOptions\n * @property {boolean} [ipnsPubsub] - Enable pub-sub on IPNS. (Default: `false`)\n */\n\n/**\n * Get pubsub from IPNS routing\n *\n * @param {import('../../ipns').IPNSAPI} ipns\n * @param {ExperimentalOptions} [options]\n */\nexport function getPubsubRouting (ipns, options) {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED')\n  }\n\n  // Only one store and it is pubsub\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing\n  }\n\n  // Find in tiered\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore)\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND')\n  }\n\n  return pubsub\n}\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\nexport class PubSubAPI {\n  /**\n   * @param {object} config\n   * @param {import('../../ipns').IPNSAPI} config.ipns\n   * @param {import('../../../types').Options} config.options\n   */\n  constructor ({ ipns, options }) {\n    this.cancel = createCancel({ ipns, options })\n    this.state = createState({ ipns, options })\n    this.subs = createSubs({ ipns, options })\n  }\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createCancel ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.cancel(name, options)\n  }\n\n  return withTimeoutOption(cancel)\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createState ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"state\"]}\n   */\n  async function state (_options = {}) { // eslint-disable-line require-await\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, experimental)) }\n    } catch (/** @type {any} */ err) {\n      return { enabled: false }\n    }\n  }\n\n  return withTimeoutOption(state)\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createSubs ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"subs\"]}\n   */\n  async function subs (options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.getSubscriptions(options)\n  }\n\n  return withTimeoutOption(subs)\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { PubSubAPI } from './pubsub/index.js'\n\nexport class NameAPI {\n  /**\n   * @param {object} config\n   * @param {import('../ipns').IPNSAPI} config.ipns\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('../../types').Options} config.options\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   * @param {import('ipfs-core-types/src/root').API<{}>[\"dns\"]} config.dns\n   */\n  constructor ({ dns, ipns, repo, codecs, peerId, isOnline, keychain, options }) {\n    this.publish = createPublish({ ipns, repo, codecs, peerId, isOnline, keychain })\n    this.resolve = createResolve({ dns, ipns, isOnline, options })\n    this.pubsub = new PubSubAPI({ ipns, options })\n  }\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { notFoundError } from 'datastore-core/errors'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport { CID } from 'multiformats/cid'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\n\nconst ERR_NOT_FOUND = notFoundError().code\n\nexport const Format = {\n  default: '<dst>',\n  edges: '<src> -> <dst>'\n}\n\n/**\n * @typedef {object} Node\n * @property {string} [name]\n * @property {CID} cid\n *\n * @typedef {object} TraversalResult\n * @property {Node} parent\n * @property {Node} node\n * @property {boolean} isDuplicate\n *\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]} config.resolve\n * @param {import('../../types').Preload} config.preload\n */\nexport function createRefs ({ repo, codecs, resolve, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"refs\"]}\n   */\n  async function * refs (ipfsPath, options = {}) {\n    if (options.maxDepth === 0) {\n      return\n    }\n\n    if (options.edges && options.format && options.format !== Format.default) {\n      throw new Error('Cannot set edges to true and also specify format')\n    }\n\n    options.format = options.edges ? Format.edges : options.format\n\n    if (typeof options.maxDepth !== 'number') {\n      options.maxDepth = options.recursive ? Infinity : 1\n    }\n\n    if (options.timeout) {\n      const controller = new TimeoutController(options.timeout)\n      const signals = [controller.signal]\n\n      if (options.signal) {\n        signals.push(options.signal)\n      }\n\n      options.signal = anySignal(signals)\n    }\n\n    /** @type {(string|CID)[]} */\n    const rawPaths = Array.isArray(ipfsPath) ? ipfsPath : [ipfsPath]\n\n    const paths = rawPaths.map(p => getFullPath(preload, p, options))\n\n    for (const path of paths) {\n      try {\n        yield * refsStream(resolve, repo, codecs, path, options)\n      } catch (/** @type {any} */ err) {\n        yield {\n          ref: '',\n          err: err.message\n        }\n      }\n    }\n  }\n\n  return refs\n}\n\n/**\n * @param {import('../../types').Preload} preload\n * @param {string | CID} ipfsPath\n * @param {import('ipfs-core-types/src/refs').RefsOptions} options\n */\nfunction getFullPath (preload, ipfsPath, options) {\n  const {\n    cid,\n    path\n  } = toCidAndPath(ipfsPath)\n\n  if (options.preload !== false) {\n    preload(cid)\n  }\n\n  return `/ipfs/${cid}${path || ''}`\n}\n\n/**\n * Get a stream of refs at the given path\n *\n * @param {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]} resolve\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {string} path\n * @param {import('ipfs-core-types/src/refs').RefsOptions} options\n */\nasync function * refsStream (resolve, repo, codecs, path, options) {\n  // Resolve to the target CID of the path\n  const resPath = await resolve(path, options)\n  const {\n    cid\n  } = toCidAndPath(resPath)\n\n  const maxDepth = options.maxDepth != null ? options.maxDepth : Infinity\n  const unique = options.unique || false\n\n  // Traverse the DAG, converting it into a stream\n  for await (const obj of objectStream(repo, codecs, cid, maxDepth, unique, options)) {\n    // Root object will not have a parent\n    if (!obj.parent) {\n      continue\n    }\n\n    // Filter out duplicates (isDuplicate flag is only set if options.unique is set)\n    if (obj.isDuplicate) {\n      continue\n    }\n\n    // Format the links\n    // Clients expect refs to be in the format { ref: <ref> }\n    yield {\n      ref: formatLink(obj.parent.cid, obj.node.cid, obj.node.name, options.format)\n    }\n  }\n}\n\n/**\n * Get formatted link\n *\n * @param {CID} srcCid\n * @param {CID} dstCid\n * @param {string} [linkName]\n * @param {string} [format]\n */\nfunction formatLink (srcCid, dstCid, linkName = '', format = Format.default) {\n  let out = format.replace(/<src>/g, srcCid.toString())\n  out = out.replace(/<dst>/g, dstCid.toString())\n  out = out.replace(/<linkname>/g, linkName)\n  return out\n}\n\n/**\n * Do a depth first search of the DAG, starting from the given root cid\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID} rootCid\n * @param {number} maxDepth\n * @param {boolean} uniqueOnly\n * @param {AbortOptions} options\n */\nasync function * objectStream (repo, codecs, rootCid, maxDepth, uniqueOnly, options) { // eslint-disable-line require-await\n  const seen = new Set()\n\n  /**\n   * @param {Node} parent\n   * @param {number} depth\n   * @returns {AsyncGenerator<TraversalResult, void, undefined>}\n   */\n  async function * traverseLevel (parent, depth) {\n    const nextLevelDepth = depth + 1\n\n    // Check the depth\n    if (nextLevelDepth > maxDepth) {\n      return\n    }\n\n    // Get this object's links\n    try {\n      // Look at each link, parent and the new depth\n      for await (const link of getLinks(repo, codecs, parent.cid, options)) {\n        yield {\n          parent: parent,\n          node: link,\n          isDuplicate: uniqueOnly && seen.has(link.cid.toString())\n        }\n\n        if (uniqueOnly) {\n          seen.add(link.cid.toString())\n        }\n\n        yield * traverseLevel(link, nextLevelDepth)\n      }\n    } catch (/** @type {any} */ err) {\n      if (err.code === ERR_NOT_FOUND) {\n        err.message = `Could not find object with CID: ${parent.cid}`\n      }\n\n      throw err\n    }\n  }\n\n  yield * traverseLevel({ cid: rootCid }, 0)\n}\n\n/**\n * Fetch a node and then get all its links\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID} cid\n * @param {AbortOptions} options\n * @returns {AsyncGenerator<{ name: string, cid: CID }, void, undefined>}\n */\nasync function * getLinks (repo, codecs, cid, options) {\n  const block = await repo.blocks.get(cid, options)\n  const codec = await codecs.getCodec(cid.code)\n  const value = codec.decode(block)\n  const isDagPb = cid.code === dagPB.code\n  /** @type {Array<string|number>} */\n  const base = []\n\n  for (const [name, cid] of links(value, base)) {\n    // special case for dag-pb - use the name of the link\n    // instead of the path within the object\n    if (isDagPb) {\n      const match = name.match(/^Links\\/(\\d+)\\/Hash$/)\n\n      if (match) {\n        const index = Number(match[1])\n\n        if (index < value.Links.length) {\n          yield {\n            name: value.Links[index].Name,\n            cid\n          }\n\n          continue\n        }\n      }\n    }\n\n    yield {\n      name,\n      cid\n    }\n  }\n}\n\n/**\n * @param {*} source\n * @param {Array<string|number>} base\n * @returns {Iterable<[string, CID]>}\n */\nconst links = function * (source, base) {\n  if (source == null) {\n    return\n  }\n\n  if (source instanceof Uint8Array) {\n    return\n  }\n\n  for (const [key, value] of Object.entries(source)) {\n    const path = [...base, key]\n\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [...path, index]\n          const cid = CID.asCID(element)\n\n          // eslint-disable-next-line max-depth\n          if (cid) {\n            yield [elementPath.join('/'), cid]\n          } else if (typeof element === 'object') {\n            yield * links(element, elementPath)\n          }\n        }\n      } else {\n        const cid = CID.asCID(value)\n\n        if (cid) {\n          yield [path.join('/'), cid]\n        } else {\n          yield * links(value, path)\n        }\n      }\n    }\n  }\n\n  // ts requires a @returns annotation when a function is recursive,\n  // eslint requires a return when you use a @returns annotation.\n  return []\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createLocal ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() }\n    }\n  }\n\n  return withTimeoutOption(refsLocal)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createStat ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    /** @type {import('ipfs-bitswap').IPFSBitswap} */\n    const bitswap = (await network.use(options)).bitswap\n    const snapshot = bitswap.stat().snapshot\n\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers(),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createUnwant } from './unwant.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class BitswapAPI {\n  /**\n   * @param {object} config\n   * @param {NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.wantlist = createWantlist({ network })\n    this.wantlistForPeer = createWantlistForPeer({ network })\n    this.unwant = createUnwant({ network })\n    this.stat = createStat({ network })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlist ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlistForPeer ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.wantlistForPeer(peerId)\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlistForPeer)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createUnwant ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant (cids, options = {}) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    return bitswap.unwant(cids)\n  }\n\n  return withTimeoutOption(unwant)\n}\n","import { IPFS } from '@multiformats/mafmt'\n\n/**\n * @param {any} ma\n */\nexport function isValidMultiaddr (ma) {\n  try {\n    return IPFS.matches(ma)\n  } catch (/** @type {any} */ err) {\n    return false\n  }\n}\n","\nexport default () => ({\n  Addresses: {\n    Swarm: [\n    ],\n    Announce: [],\n    NoAnnounce: [],\n    API: '',\n    Gateway: '',\n    RPC: '',\n    Delegates: [\n      '/dns4/node0.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node1.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node2.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node3.delegate.ipfs.io/tcp/443/https'\n    ]\n  },\n  Discovery: {\n    MDNS: {\n      Enabled: false,\n      Interval: 10\n    },\n    webRTCStar: {\n      Enabled: true\n    }\n  },\n  Bootstrap: [\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n    '/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',\n    '/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',\n    '/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS',\n    '/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN'\n  ],\n  Pubsub: {\n    Enabled: true\n  },\n  Swarm: {\n    ConnMgr: {\n      LowWater: 5,\n      HighWater: 20\n    },\n    DisableNatPortMap: true\n  },\n  Routing: {\n    Type: 'dhtclient'\n  }\n})\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\nexport class BootstrapAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo }) {\n    this.add = createAdd({ repo })\n    this.list = createList({ repo })\n    this.rm = createRm({ repo })\n    this.clear = createClear({ repo })\n    this.reset = createReset({ repo })\n  }\n}\n","import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  async function add (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    const boostrappers = config.Bootstrap || []\n    boostrappers.push(multiaddr.toString())\n\n    config.Bootstrap = Array.from(\n      new Set(boostrappers)\n    ).sort((a, b) => a.localeCompare(b))\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: [multiaddr]\n    }\n  }\n\n  return withTimeoutOption(add)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createList ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"list\"]}\n   */\n  async function list (options = {}) {\n    /** @type {string[]|null} */\n    const peers = (await repo.config.get('Bootstrap', options))\n    return { Peers: (peers || []).map(ma => multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(list)\n}\n","import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createRm ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"rm\"]}\n   */\n  async function rm (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString())\n\n    await repo.config.replace(config)\n\n    return { Peers: [multiaddr] }\n  }\n\n  return withTimeoutOption(rm)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createClear ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const config = await repo.config.getAll(options)\n    const removed = config.Bootstrap || []\n    config.Bootstrap = []\n\n    await repo.config.replace(config)\n\n    return { Peers: removed.map(ma => multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(clear)\n}\n","import defaultConfig from 'ipfs-core-config/config'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createReset ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = defaultConfig().Bootstrap\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: defaultConfig().Bootstrap.map(ma => multiaddr(ma))\n    }\n  }\n\n  return withTimeoutOption(reset)\n}\n","import { CID } from 'multiformats/cid'\n\n/**\n * @param {string|Uint8Array|CID} cid\n */\nexport function cleanCid (cid) {\n  if (cid instanceof Uint8Array) {\n    return CID.decode(cid)\n  }\n\n  return CID.parse(cid.toString())\n}\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport class BlockAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createGet ({ preload, repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return repo.blocks.get(cid, options)\n  }\n\n  return withTimeoutOption(get)\n}\n","import { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n *\n */\nexport function createPut ({ codecs, hashers, repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"put\"]}\n   */\n  async function put (block, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null\n\n    try {\n      const cidVersion = options.version != null ? options.version : 0\n      const codecName = options.format || (cidVersion === 0 ? 'dag-pb' : 'raw')\n\n      const hasher = await hashers.getHasher(options.mhtype || 'sha2-256')\n      const hash = await hasher.digest(block)\n      const codec = await codecs.getCodec(codecName)\n      const cid = CID.create(cidVersion, codec.code, hash)\n\n      await repo.blocks.put(cid, block, {\n        signal: options.signal\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      if (options.pin === true) {\n        await repo.pins.pinRecursively(cid, {\n          signal: options.signal\n        })\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","import errCode from 'err-code'\nimport parallel from 'it-parallel'\nimport map from 'it-map'\nimport filter from 'it-filter'\nimport { pipe } from 'it-pipe'\nimport { cleanCid } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst BLOCK_RM_CONCURRENCY = 8\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createRm ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"rm\"]}\n   */\n  async function * rm (cids, options = {}) {\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // We need to take a write lock here to ensure that adding and removing\n    // blocks are exclusive operations\n    const release = await repo.gcLock.writeLock()\n\n    try {\n      yield * pipe(\n        cids,\n        source => map(source, cid => {\n          return async () => {\n            cid = cleanCid(cid)\n\n            /** @type {import('ipfs-core-types/src/block').RmResult} */\n            const result = { cid }\n\n            try {\n              const has = await repo.blocks.has(cid)\n\n              if (!has) {\n                throw errCode(new Error('block not found'), 'ERR_BLOCK_NOT_FOUND')\n              }\n\n              await repo.blocks.delete(cid)\n            } catch (/** @type {any} */ err) {\n              if (!options.force) {\n                err.message = `cannot remove ${cid}: ${err.message}`\n                result.error = err\n              }\n            }\n\n            return result\n          }\n        }),\n        source => parallel(source, { concurrency: BLOCK_RM_CONCURRENCY }),\n        source => filter(source, () => !options.quiet)\n      )\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rm)\n}\n","import { cleanCid } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nexport function createStat ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid)\n\n    return { cid, size: block.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n","/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches\n */\nexport default async function* batch(source, size = 1) {\n    let things = [];\n    if (size < 1) {\n        size = 1;\n    }\n    for await (const thing of source) {\n        things.push(thing);\n        while (things.length >= size) {\n            yield things.slice(0, size);\n            things = things.slice(size);\n        }\n    }\n    while (things.length > 0) {\n        yield things.slice(0, size);\n        things = things.slice(size);\n    }\n}\n//# sourceMappingURL=index.js.map","import batch from 'it-batch';\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function* parallelBatch(source, size = 1) {\n    for await (const tasks of batch(source, size)) {\n        const things = tasks.map(async (p) => {\n            return await p().then(value => ({ ok: true, value }), err => ({ ok: false, err }));\n        });\n        for (let i = 0; i < things.length; i++) {\n            const result = await things[i];\n            if (result.ok) {\n                yield result.value;\n            }\n            else {\n                throw result.err;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import mergeOptions from 'merge-options'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { murmur3128 } from '@multiformats/murmur3'\n\n/**\n * @param {Uint8Array} buf\n */\nasync function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @type {ImporterOptions}\n */\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced', // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file', // 'raw'\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653, // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n}\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true })\n  return defaults(defaultOptions, options)\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","import { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {import('../types').PersistOptions} options\n */\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n\nexport default persist\n","import { UnixFS } from 'ipfs-unixfs'\nimport persist from '../utils/persist.js'\nimport { encode, prepare } from '@ipld/dag-pb'\n\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = encode(prepare({ Data: unixfs.marshal() }))\n  const cid = await persist(buffer, blockstore, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nexport default dirBuilder\n","import all from 'it-all'\n\n/**\n * @type {import('../../types').FileDAGBuilder}\n */\nasync function flat (source, reduce) {\n  return reduce(await all(source))\n}\n\nexport default flat\n","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","import batch from 'it-batch'\n\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nfunction balanced (source, reduce, options) {\n  return reduceToParents(source, reduce, options)\n}\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nexport default balanced\n","import batch from 'it-batch'\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').InProgressImportResult} InProgressImportResult\n * @typedef {import('../../types').TrickleDagNode} TrickleDagNode\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function trickleStream (source, reduce, options) {\n  const root = new Root(options.layerRepeat)\n  let iteration = 0\n  let maxDepth = 1\n\n  /** @type {SubTree} */\n  let subTree = root\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nexport default trickleStream\n\nclass SubTree {\n  /**\n   * @param {number} maxDepth\n   * @param {number} layerRepeat\n   * @param {number} [iteration=0]\n   */\n  constructor (maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    /** @type {TrickleDagNode} */\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * @param {TrickleDagNode} parent\n   */\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    // @ts-ignore\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  /**\n   *\n   * @param {InProgressImportResult[]} layer\n   */\n  append (layer) {\n    this.node.data = layer\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {Reducer} reduce\n   * @returns {Promise<InProgressImportResult>}\n   */\n  async _reduce (node, reduce) {\n    /** @type {InProgressImportResult[]} */\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          // @ts-ignore\n          .filter(child => child.data)\n          // @ts-ignore\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce((node.data || []).concat(children))\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {number} depth\n   * @returns {TrickleDagNode | undefined}\n   */\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  /**\n   * @param {number} layerRepeat\n   */\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  /**\n   * @param {InProgressImportResult} child\n   */\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return reduce((this.root.data || []).concat(this.root.children))\n  }\n}\n","import { UnixFS } from 'ipfs-unixfs'\nimport persist from '../../utils/persist.js'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as raw from 'multiformats/codecs/raw'\n\n/**\n * @typedef {import('../../types').BufferImporter} BufferImporter\n */\n\n/**\n * @type {BufferImporter}\n */\nasync function * bufferImporter (file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path)\n      let unixfs\n\n      /** @type {import('../../types').PersistOptions} */\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      }\n\n      if (options.rawLeaves) {\n        opts.codec = raw\n        opts.cidVersion = 1\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer\n        })\n\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        })\n      }\n\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      }\n    }\n  }\n}\n\nexport default bufferImporter\n","import errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport persist from '../../utils/persist.js'\nimport { encode, prepare } from '@ipld/dag-pb'\nimport parallelBatch from 'it-parallel-batch'\nimport * as rawCodec from 'multiformats/codecs/raw'\nimport * as dagPb from '@ipld/dag-pb'\n\nimport dagFlat from './flat.js'\nimport dagBalanced from './balanced.js'\nimport dagTrickle from './trickle.js'\nimport bufferImporterFn from './buffer-importer.js'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../types').File} File\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').DAGBuilder} DAGBuilder\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {{ [key: string]: FileDAGBuilder}}\n */\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nasync function * buildFileBatch (file, blockstore, options) {\n  let count = -1\n  let previous\n  let bufferImporter\n\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter\n  } else {\n    bufferImporter = bufferImporterFn\n  }\n\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++\n\n    if (count === 0) {\n      previous = entry\n      continue\n    } else if (count === 1 && previous) {\n      yield previous\n      previous = null\n    }\n\n    yield entry\n  }\n\n  if (previous) {\n    previous.single = true\n    yield previous\n  }\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nconst reduce = (file, blockstore, options) => {\n  /**\n   * @type {Reducer}\n   */\n  async function reducer (leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0]\n\n      if (file.mtime !== undefined || file.mode !== undefined) {\n        // only one leaf node which is a buffer - we have metadata so convert it into a\n        // UnixFS entry otherwise we'll have nowhere to store the metadata\n        let buffer = await blockstore.get(leaf.cid)\n\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        })\n\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }))\n\n        // // TODO vmx 2021-03-26: This is what the original code does, it checks\n        // // the multihash of the original leaf node and uses then the same\n        // // hasher. i wonder if that's really needed or if we could just use\n        // // the hasher from `options.hasher` instead.\n        // const multihash = mh.decode(leaf.cid.multihash.bytes)\n        // let hasher\n        // switch multihash {\n        //   case sha256.code {\n        //     hasher = sha256\n        //     break;\n        //   }\n        //   //case identity.code {\n        //   //  hasher = identity\n        //   //  break;\n        //   //}\n        //   default: {\n        //     throw new Error(`Unsupported hasher \"${multihash}\"`)\n        //   }\n        // }\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        })\n        leaf.size = buffer.length\n      }\n\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      }\n    }\n\n    // create a parent node and add all the leaves\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    })\n\n    const links = leaves\n      .filter(leaf => {\n        if (leaf.cid.code === rawCodec.code && leaf.size) {\n          return true\n        }\n\n        if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n          return true\n        }\n\n        return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length)\n      })\n      .map((leaf) => {\n        if (leaf.cid.code === rawCodec.code) {\n          // node is a leaf buffer\n          f.addBlockSize(leaf.size)\n\n          return {\n            Name: '',\n            Tsize: leaf.size,\n            Hash: leaf.cid\n          }\n        }\n\n        if (!leaf.unixfs || !leaf.unixfs.data) {\n          // node is an intermediate node\n          f.addBlockSize((leaf.unixfs && leaf.unixfs.fileSize()) || 0)\n        } else {\n          // node is a unixfs 'file' leaf node\n          f.addBlockSize(leaf.unixfs.data.length)\n        }\n\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        }\n      })\n\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, blockstore, options)\n\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    }\n  }\n\n  return reducer\n}\n\n/**\n * @type {import('../../types').UnixFSV1DagBuilder<File>}\n */\nfunction fileBuilder (file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy]\n\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${options.strategy}`), 'ERR_BAD_STRATEGY')\n  }\n\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options)\n}\n\nexport default fileBuilder\n","import { Uint8ArrayList } from 'uint8arraylist'\n// @ts-ignore\nimport { create } from 'rabin-wasm'\nimport errcode from 'err-code'\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nasync function * rabinChunker (source, options) {\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\nexport default rabinChunker\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nasync function * rabin (source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window)\n  const buffers = new Uint8ArrayList()\n\n  for await (const chunk of source) {\n    buffers.append(chunk)\n\n    const sizes = r.fingerprint(chunk)\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i]\n      const buf = buffers.slice(0, size)\n      buffers.consume(size)\n\n      yield buf\n    }\n  }\n\n  if (buffers.length) {\n    yield buffers.subarray(0)\n  }\n}\n","import { Uint8ArrayList } from 'uint8arraylist'\n\n/**\n * @type {import('../types').Chunker}\n */\nasync function * fixedSizeChunker (source, options) {\n  let list = new Uint8ArrayList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    list.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield list.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === list.length) {\n        list = new Uint8ArrayList()\n        currentLength = 0\n      } else {\n        const newBl = new Uint8ArrayList()\n        newBl.append(list.sublist(maxChunkSize))\n        list = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield list.subarray(0, currentLength)\n  }\n}\n\nexport default fixedSizeChunker\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nasync function * validateChunks (source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString())\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content)\n    } else if (content instanceof Uint8Array) {\n      yield content\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n  }\n}\n\nexport default validateChunks\n","import dirBuilder from './dir.js'\nimport fileBuilder from './file/index.js'\nimport errCode from 'err-code'\nimport rabin from '../chunker/rabin.js'\nimport fixedSize from '../chunker/fixed-size.js'\nimport validateChunks from './validate-chunks.js'\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable (content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\n/**\n * @type {DAGBuilder}\n */\nasync function * dagBuilder (source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true\n      }\n\n      entry.path = entry.path\n        .split('/')\n        .filter(path => path && path !== '.')\n        .join('/')\n    }\n\n    if (entry.content) {\n      /**\n       * @type {Chunker}\n       */\n      let chunker\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin\n      } else {\n        chunker = fixedSize\n      }\n\n      /**\n       * @type {ChunkValidator}\n       */\n      let chunkValidator\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator\n      } else {\n        chunkValidator = validateChunks\n      }\n\n      /** @type {File} */\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      }\n\n      yield () => fileBuilder(file, blockstore, options)\n    } else if (entry.path) {\n      /** @type {Directory} */\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      }\n\n      yield () => dirBuilder(dir, blockstore, options)\n    } else {\n      throw new Error('Import candidate must have content or path or both')\n    }\n  }\n}\n\nexport default dagBuilder\n","/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n *\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nclass Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) { }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<InProgressImportResult | Dir | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: InProgressImportResult | Dir}>}\n   */\n  async * eachChildSeries () { }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) { }\n}\n\nexport default Dir\n","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport Dir from './dir.js'\nimport persist from './utils/persist.js'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./dir').DirProps} DirProps\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\nclass DirFlat extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {{ [key: string]: InProgressImportResult | Dir }} */\n    this._children = {}\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    this.cid = undefined\n    this.size = undefined\n\n    this._children[name] = value\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return Promise.resolve(this._children[name])\n  }\n\n  childCount () {\n    return Object.keys(this._children).length\n  }\n\n  directChildrenCount () {\n    return this.childCount()\n  }\n\n  onlyChild () {\n    return this._children[Object.keys(this._children)[0]]\n  }\n\n  async * eachChildSeries () {\n    const keys = Object.keys(this._children)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      yield {\n        key: key,\n        child: this._children[key]\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) {\n    const children = Object.keys(this._children)\n    const links = []\n\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]]\n\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry\n\n          yield child\n        }\n      }\n\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        })\n      }\n    }\n\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    })\n\n    /** @type {PBNode} */\n    const node = { Data: unixfs.marshal(), Links: links }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, block, this.options)\n    const size = buffer.length + node.Links.reduce(\n      /**\n       * @param {number} acc\n       * @param {PBLink} curr\n       */\n      (acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize),\n      0)\n\n    this.cid = cid\n    this.size = size\n\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    }\n  }\n}\n\nexport default DirFlat\n","// @ts-expect-error\nimport SparseArray from 'sparse-array';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport class Bucket {\n    constructor(options, parent, posAtParent = 0) {\n        this._options = options;\n        this._popCount = 0;\n        this._parent = parent;\n        this._posAtParent = posAtParent;\n        this._children = new SparseArray();\n        this.key = null;\n    }\n    async put(key, value) {\n        const place = await this._findNewBucketAndPos(key);\n        await place.bucket._putAt(place, key, value);\n    }\n    async get(key) {\n        const child = await this._findChild(key);\n        if (child != null) {\n            return child.value;\n        }\n    }\n    async del(key) {\n        const place = await this._findPlace(key);\n        const child = place.bucket._at(place.pos);\n        if (child != null && child.key === key) {\n            place.bucket._delAt(place.pos);\n        }\n    }\n    leafCount() {\n        const children = this._children.compactArray();\n        return children.reduce((acc, child) => {\n            if (child instanceof Bucket) {\n                return acc + child.leafCount();\n            }\n            return acc + 1;\n        }, 0);\n    }\n    childrenCount() {\n        return this._children.length;\n    }\n    onlyChild() {\n        return this._children.get(0);\n    }\n    *eachLeafSeries() {\n        const children = this._children.compactArray();\n        for (const child of children) {\n            if (child instanceof Bucket) {\n                yield* child.eachLeafSeries();\n            }\n            else {\n                yield child;\n            }\n        }\n    }\n    serialize(map, reduce) {\n        const acc = [];\n        // serialize to a custom non-sparse representation\n        return reduce(this._children.reduce((acc, child, index) => {\n            if (child != null) {\n                if (child instanceof Bucket) {\n                    acc.push(child.serialize(map, reduce));\n                }\n                else {\n                    acc.push(map(child, index));\n                }\n            }\n            return acc;\n        }, acc));\n    }\n    async asyncTransform(asyncMap, asyncReduce) {\n        return await asyncTransformBucket(this, asyncMap, asyncReduce);\n    }\n    toJSON() {\n        return this.serialize(mapNode, reduceNodes);\n    }\n    prettyPrint() {\n        return JSON.stringify(this.toJSON(), null, '  ');\n    }\n    tableSize() {\n        return Math.pow(2, this._options.bits);\n    }\n    async _findChild(key) {\n        const result = await this._findPlace(key);\n        const child = result.bucket._at(result.pos);\n        if (child instanceof Bucket) {\n            // should not be possible, this._findPlace should always\n            // return a location for a child, not a bucket\n            return undefined;\n        }\n        if (child != null && child.key === key) {\n            return child;\n        }\n    }\n    async _findPlace(key) {\n        const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key);\n        const index = await hashValue.take(this._options.bits);\n        const child = this._children.get(index);\n        if (child instanceof Bucket) {\n            return await child._findPlace(hashValue);\n        }\n        return {\n            bucket: this,\n            pos: index,\n            hash: hashValue,\n            existingChild: child\n        };\n    }\n    async _findNewBucketAndPos(key) {\n        const place = await this._findPlace(key);\n        if ((place.existingChild != null) && place.existingChild.key !== key) {\n            // conflict\n            const bucket = new Bucket(this._options, place.bucket, place.pos);\n            place.bucket._putObjectAt(place.pos, bucket);\n            // put the previous value\n            const newPlace = await bucket._findPlace(place.existingChild.hash);\n            newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value);\n            return await bucket._findNewBucketAndPos(place.hash);\n        }\n        // no conflict, we found the place\n        return place;\n    }\n    _putAt(place, key, value) {\n        this._putObjectAt(place.pos, {\n            key: key,\n            value: value,\n            hash: place.hash\n        });\n    }\n    _putObjectAt(pos, object) {\n        if (this._children.get(pos) == null) {\n            this._popCount++;\n        }\n        this._children.set(pos, object);\n    }\n    _delAt(pos) {\n        if (pos === -1) {\n            throw new Error('Invalid position');\n        }\n        if (this._children.get(pos) != null) {\n            this._popCount--;\n        }\n        this._children.unset(pos);\n        this._level();\n    }\n    _level() {\n        if (this._parent != null && this._popCount <= 1) {\n            if (this._popCount === 1) {\n                // remove myself from parent, replacing me with my only child\n                const onlyChild = this._children.find(exists);\n                if ((onlyChild != null) && !(onlyChild instanceof Bucket)) {\n                    const hash = onlyChild.hash;\n                    hash.untake(this._options.bits);\n                    const place = {\n                        pos: this._posAtParent,\n                        hash: hash,\n                        bucket: this._parent\n                    };\n                    this._parent._putAt(place, onlyChild.key, onlyChild.value);\n                }\n            }\n            else {\n                this._parent._delAt(this._posAtParent);\n            }\n        }\n    }\n    _at(index) {\n        return this._children.get(index);\n    }\n}\nfunction exists(o) {\n    return Boolean(o);\n}\nfunction mapNode(node, _) {\n    return node.key;\n}\nfunction reduceNodes(nodes) {\n    return nodes;\n}\nasync function asyncTransformBucket(bucket, asyncMap, asyncReduce) {\n    const output = [];\n    for (const child of bucket._children.compactArray()) {\n        if (child instanceof Bucket) {\n            await asyncTransformBucket(child, asyncMap, asyncReduce);\n        }\n        else {\n            const mappedChildren = await asyncMap(child);\n            output.push({\n                bitField: bucket._children.bitField(),\n                children: mappedChildren\n            });\n        }\n    }\n    return await asyncReduce(output);\n}\n//# sourceMappingURL=bucket.js.map","const START_MASKS = [\n    0b11111111,\n    0b11111110,\n    0b11111100,\n    0b11111000,\n    0b11110000,\n    0b11100000,\n    0b11000000,\n    0b10000000\n];\nconst STOP_MASKS = [\n    0b00000001,\n    0b00000011,\n    0b00000111,\n    0b00001111,\n    0b00011111,\n    0b00111111,\n    0b01111111,\n    0b11111111\n];\nexport class ConsumableBuffer {\n    constructor(value) {\n        this._value = value;\n        this._currentBytePos = value.length - 1;\n        this._currentBitPos = 7;\n    }\n    availableBits() {\n        return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n    totalBits() {\n        return this._value.length * 8;\n    }\n    take(bits) {\n        let pendingBits = bits;\n        let result = 0;\n        while (pendingBits > 0 && this._haveBits()) {\n            const byte = this._value[this._currentBytePos];\n            const availableBits = this._currentBitPos + 1;\n            const taking = Math.min(availableBits, pendingBits);\n            const value = byteBitsToInt(byte, availableBits - taking, taking);\n            result = (result << taking) + value;\n            pendingBits -= taking;\n            this._currentBitPos -= taking;\n            if (this._currentBitPos < 0) {\n                this._currentBitPos = 7;\n                this._currentBytePos--;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        this._currentBitPos += bits;\n        while (this._currentBitPos > 7) {\n            this._currentBitPos -= 8;\n            this._currentBytePos += 1;\n        }\n    }\n    _haveBits() {\n        return this._currentBytePos >= 0;\n    }\n}\nfunction byteBitsToInt(byte, start, length) {\n    const mask = maskFor(start, length);\n    return (byte & mask) >>> start;\n}\nfunction maskFor(start, length) {\n    return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}\n//# sourceMappingURL=consumable-buffer.js.map","import { ConsumableBuffer } from './consumable-buffer.js';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function wrapHash(hashFn) {\n    function hashing(value) {\n        if (value instanceof InfiniteHash) {\n            // already a hash. return it\n            return value;\n        }\n        else {\n            return new InfiniteHash(value, hashFn);\n        }\n    }\n    return hashing;\n}\nexport class InfiniteHash {\n    constructor(value, hashFn) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error('can only hash Uint8Arrays');\n        }\n        this._value = value;\n        this._hashFn = hashFn;\n        this._depth = -1;\n        this._availableBits = 0;\n        this._currentBufferIndex = 0;\n        this._buffers = [];\n    }\n    async take(bits) {\n        let pendingBits = bits;\n        while (this._availableBits < pendingBits) {\n            await this._produceMoreBits();\n        }\n        let result = 0;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const available = Math.min(hash.availableBits(), pendingBits);\n            const took = hash.take(available);\n            result = (result << available) + took;\n            pendingBits -= available;\n            this._availableBits -= available;\n            if (hash.availableBits() === 0) {\n                this._currentBufferIndex++;\n            }\n        }\n        return result;\n    }\n    untake(bits) {\n        let pendingBits = bits;\n        while (pendingBits > 0) {\n            const hash = this._buffers[this._currentBufferIndex];\n            const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits);\n            hash.untake(availableForUntake);\n            pendingBits -= availableForUntake;\n            this._availableBits += availableForUntake;\n            if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n                this._depth--;\n                this._currentBufferIndex--;\n            }\n        }\n    }\n    async _produceMoreBits() {\n        this._depth++;\n        const value = this._depth > 0 ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value;\n        const hashValue = await this._hashFn(value);\n        const buffer = new ConsumableBuffer(hashValue);\n        this._buffers.push(buffer);\n        this._availableBits += buffer.availableBits();\n    }\n}\n//# sourceMappingURL=consumable-hash.js.map","import { Bucket } from './bucket.js';\nimport { wrapHash } from './consumable-hash.js';\nexport function createHAMT(options) {\n    if (options == null || options.hashFn == null) {\n        throw new Error('please define an options.hashFn');\n    }\n    const bucketOptions = {\n        bits: options.bits ?? 8,\n        hash: wrapHash(options.hashFn)\n    };\n    return new Bucket(bucketOptions);\n}\nexport { Bucket };\n//# sourceMappingURL=index.js.map","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport Dir from './dir.js'\nimport persist from './utils/persist.js'\nimport { createHAMT, Bucket } from 'hamt-sharding'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @typedef {import('./dir').DirProps} DirProps\n */\n\nclass DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<InProgressImportResult | Dir>} */\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nexport default DirSharded\n\n/**\n * @param {Bucket<?>} bucket\n * @param {Blockstore} blockstore\n * @param {*} shardRoot\n * @param {ImporterOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, blockstore, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      })\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n","import DirSharded from './dir-sharded.js'\nimport DirFlat from './dir-flat.js'\n\n/**\n * @typedef {import('./dir').default} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nasync function flatToShard (child, dir, threshold, options) {\n  let newDir = dir\n\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir\n      }\n\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  // @ts-ignore\n  return newDir\n}\n\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nasync function convertToShard (oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n\nexport default flatToShard\n","const toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\nexport default toPathComponents\n","import DirFlat from './dir-flat.js'\nimport flatToShard from './flat-to-shard.js'\nimport Dir from './dir.js'\nimport toPathComponents from './utils/to-path-components.js'\n\n/**\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {(source: AsyncIterable<InProgressImportResult>, blockstore: Blockstore, options: ImporterOptions) => AsyncIterable<ImportResult>} TreeBuilder\n */\n\n/**\n * @param {InProgressImportResult} elem\n * @param {Dir} tree\n * @param {ImporterOptions} options\n */\nasync function addToTree (elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '')\n  const lastIndex = pathElems.length - 1\n  let parent = tree\n  let currentPath = ''\n\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i]\n\n    currentPath += `${currentPath ? '/' : ''}${pathElem}`\n\n    const last = (i === lastIndex)\n    parent.dirty = true\n    parent.cid = undefined\n    parent.size = undefined\n\n    if (last) {\n      await parent.put(pathElem, elem)\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options)\n    } else {\n      let dir = await parent.get(pathElem)\n\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options)\n      }\n\n      await parent.put(pathElem, dir)\n\n      parent = dir\n    }\n  }\n\n  return tree\n}\n\n/**\n * @param {Dir | InProgressImportResult} tree\n * @param {Blockstore} blockstore\n */\nasync function * flushAndYield (tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree\n    }\n\n    return\n  }\n\n  yield * tree.flush(blockstore)\n}\n\n/**\n * @type {TreeBuilder}\n */\nasync function * treeBuilder (source, block, options) {\n  /** @type {Dir} */\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options)\n\n  for await (const entry of source) {\n    if (!entry) {\n      continue\n    }\n\n    tree = await addToTree(entry, tree, options)\n\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry\n    }\n  }\n\n  if (options.wrapWithDirectory) {\n    yield * flushAndYield(tree, block)\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue\n      }\n\n      yield * flushAndYield(unwrapped.child, block)\n    }\n  }\n}\n\nexport default treeBuilder\n","import parallelBatch from 'it-parallel-batch'\nimport defaultOptions from './options.js'\nimport dagBuilderFn from './dag-builder/index.js'\nimport treeBuilderFn from './tree-builder.js'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ImportCandidate} ImportCandidate\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').Directory} Directory\n * @typedef {import('./types').File} File\n * @typedef {import('./types').ImportResult} ImportResult\n *\n * @typedef {import('./types').Chunker} Chunker\n * @typedef {import('./types').DAGBuilder} DAGBuilder\n * @typedef {import('./types').TreeBuilder} TreeBuilder\n * @typedef {import('./types').BufferImporter} BufferImporter\n * @typedef {import('./types').ChunkValidator} ChunkValidator\n * @typedef {import('./types').Reducer} Reducer\n * @typedef {import('./types').ProgressHandler} ProgressHandler\n */\n\n/**\n * @param {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate> | ImportCandidate} source\n * @param {Blockstore} blockstore\n * @param {UserImporterOptions} options\n * @returns {AsyncGenerator<ImportResult, void, unknown>}\n */\nexport async function * importer (source, blockstore, options = {}) {\n  const opts = defaultOptions(options)\n\n  let dagBuilder\n\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder\n  } else {\n    dagBuilder = dagBuilderFn\n  }\n\n  let treeBuilder\n\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder\n  } else {\n    treeBuilder = treeBuilderFn\n  }\n\n  /** @type {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate>} */\n  let candidates\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    // @ts-ignore\n    candidates = source\n  } else {\n    // @ts-ignore\n    candidates = [source]\n  }\n\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    }\n  }\n}\n","/**\n * @typedef {object} FixedChunkerOptions\n * @property {'fixed'} chunker\n * @property {number} [maxChunkSize]\n *\n * @typedef {object} RabinChunkerOptions\n * @property {'rabin'} chunker\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * @typedef {FixedChunkerOptions|RabinChunkerOptions} ChunkerOptions\n *\n * Parses chunker string into options used by DAGBuilder in ipfs-unixfs-engine\n *\n *\n * @param  {string} [chunker] - Chunker algorithm supported formats:\n * \"size-{size}\"\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {ChunkerOptions}   Chunker options for DAGBuilder\n */\nexport const parseChunkerString = (chunker) => {\n  if (!chunker) {\n    return {\n      chunker: 'fixed'\n    }\n  } else if (chunker.startsWith('size-')) {\n    const sizeStr = chunker.split('-')[1]\n    const size = parseInt(sizeStr)\n    if (isNaN(size)) {\n      throw new Error('Chunker parameter size must be an integer')\n    }\n    return {\n      chunker: 'fixed',\n      maxChunkSize: size\n    }\n  } else if (chunker.startsWith('rabin')) {\n    return {\n      chunker: 'rabin',\n      ...parseRabinString(chunker)\n    }\n  } else {\n    throw new Error(`Unrecognized chunker option: ${chunker}`)\n  }\n}\n\n/**\n * @typedef {object} RabinChunkerSettings\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * Parses rabin chunker string\n *\n * @param  {string}   chunker - Chunker algorithm supported formats:\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {RabinChunkerSettings}   rabin chunker options\n */\nexport const parseRabinString = (chunker) => {\n  const options = {}\n  const parts = chunker.split('-')\n  switch (parts.length) {\n    case 1:\n      options.avgChunkSize = 262144\n      break\n    case 2:\n      options.avgChunkSize = parseChunkSize(parts[1], 'avg')\n      break\n    case 4:\n      options.minChunkSize = parseChunkSize(parts[1], 'min')\n      options.avgChunkSize = parseChunkSize(parts[2], 'avg')\n      options.maxChunkSize = parseChunkSize(parts[3], 'max')\n      break\n    default:\n      throw new Error('Incorrect chunker format (expected \"rabin\" \"rabin-[avg]\" or \"rabin-[min]-[avg]-[max]\"')\n  }\n\n  return options\n}\n\n/**\n *\n * @param {string} str\n * @param {string} name\n * @returns {number}\n */\nexport const parseChunkSize = (str, name) => {\n  const size = parseInt(str)\n  if (isNaN(size)) {\n    throw new Error(`Chunker parameter ${name} must be an integer`)\n  }\n\n  return size\n}\n","import { importer } from 'ipfs-unixfs-importer'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-multiple'\nimport { parseChunkerString } from './utils.js'\nimport { pipe } from 'it-pipe'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-unixfs-importer').ImportResult} ImportResult\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\n/**\n * @template T\n *\n * @typedef {import('it-stream-types').Source<T>} Source<T>\n */\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../../types').Preload} preload\n * @property {Multihashes} hashers\n * @property {import('ipfs-core-types/src/root').ShardingOptions} [options]\n * @param {Context} context\n */\nexport function createAddAll ({ repo, preload, hashers, options }) {\n  const isShardingEnabled = options && options.sharding\n\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    const opts = mergeOptions({\n      shardSplitThreshold: isShardingEnabled ? 1000 : Infinity,\n      strategy: 'balanced'\n    }, options, {\n      ...parseChunkerString(options.chunker)\n    })\n\n    // CID v0 is for multihashes encoded with sha2-256\n    if (opts.hashAlg && opts.hashAlg !== 'sha2-256' && opts.cidVersion !== 1) {\n      opts.cidVersion = 1\n    }\n\n    if (opts.trickle) {\n      opts.strategy = 'trickle'\n    }\n\n    if (opts.strategy === 'trickle') {\n      opts.leafType = 'raw'\n      opts.reduceSingleLeafToSelf = false\n    }\n\n    if (opts.cidVersion > 0 && opts.rawLeaves === undefined) {\n      // if the cid version is 1 or above, use raw leaves as this is\n      // what go does.\n      opts.rawLeaves = true\n    }\n\n    if (opts.hashAlg !== undefined && opts.rawLeaves === undefined) {\n      // if a non-default hash alg has been specified, use raw leaves as this is\n      // what go does.\n      opts.rawLeaves = true\n    }\n\n    delete opts.trickle\n\n    /** @type {Record<string, number>} */\n    const totals = {}\n\n    if (opts.progress) {\n      const prog = opts.progress\n\n      /**\n       * @param {number} bytes\n       * @param {string} path\n       */\n      opts.progress = (bytes, path) => {\n        if (!totals[path]) {\n          totals[path] = 0\n        }\n\n        totals[path] += bytes\n\n        prog(totals[path], path)\n      }\n    }\n\n    /** @type {MultihashHasher | undefined} */\n    let hasher\n\n    if (opts.hashAlg != null) {\n      hasher = await hashers.getHasher(opts.hashAlg)\n    }\n\n    const iterator = pipe(\n      normaliseInput(source),\n      /**\n       * @param {Source<import('ipfs-unixfs-importer').ImportCandidate>} source\n       */\n      source => importer(source, repo.blocks, {\n        ...opts,\n        hasher,\n        pin: false\n      }),\n      transformFile(opts),\n      preloadFile(preload, opts),\n      pinFile(repo, opts)\n    )\n\n    const releaseLock = await repo.gcLock.readLock()\n\n    try {\n      for await (const added of iterator) {\n        const path = added.path ?? added.cid.toString()\n\n        // do not keep file totals around forever\n        delete totals[path]\n\n        yield {\n          ...added,\n          path\n        }\n      }\n    } finally {\n      releaseLock()\n    }\n  }\n\n  return withTimeoutOption(addAll)\n}\n\n/**\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction transformFile (opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * transformFile (source) {\n    for await (const file of source) {\n      let cid = file.cid\n\n      if (opts.cidVersion === 1) {\n        cid = cid.toV1()\n      }\n\n      let path = file.path ? file.path : cid.toString()\n\n      if (opts.wrapWithDirectory && !file.path) {\n        path = ''\n      }\n\n      yield {\n        path,\n        cid: cid,\n        size: file.size,\n        mode: file.unixfs && file.unixfs.mode,\n        mtime: file.unixfs && file.unixfs.mtime\n      }\n    }\n  }\n\n  return transformFile\n}\n\n/**\n * @param {(cid: CID) => void} preload\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction preloadFile (preload, opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * maybePreloadFile (source) {\n    for await (const file of source) {\n      const isRootFile = !file.path || opts.wrapWithDirectory\n        ? file.path === ''\n        : !file.path.includes('/')\n\n      const shouldPreload = isRootFile && !opts.onlyHash && opts.preload !== false\n\n      if (shouldPreload) {\n        preload(file.cid)\n      }\n\n      yield file\n    }\n  }\n\n  return maybePreloadFile\n}\n\n/**\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction pinFile (repo, opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * maybePinFile (source) {\n    for await (const file of source) {\n      // Pin a file if it is the root dir of a recursive add or the single file\n      // of a direct add.\n      const isRootDir = !(file.path && file.path.includes('/'))\n      const shouldPin = (opts.pin == null ? true : opts.pin) && isRootDir && !opts.onlyHash\n\n      if (shouldPin) {\n        await repo.pins.pinRecursively(file.cid)\n      }\n\n      yield file\n    }\n  }\n\n  return maybePinFile\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateMultiple(input, normaliseContent)\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","\nimport { Bucket, createHAMT } from 'hamt-sharding'\nimport { decode } from '@ipld/dag-pb'\nimport { murmur3128 } from '@multiformats/murmur3'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n// FIXME: this is copy/pasted from ipfs-unixfs-importer/src/options.js\n/**\n * @param {Uint8Array} buf\n */\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @param {PBLink[]} links\n * @param {Bucket<boolean>} bucket\n * @param {Bucket<boolean>} rootBucket\n */\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(\n    links.map(link => {\n      if (link.Name == null) {\n        // TODO(@rvagg): what do? this is technically possible\n        throw new Error('Unexpected Link without a Name')\n      }\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        return bucket._putObjectAt(pos, new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos))\n      }\n\n      return rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\n/**\n * @param {number} position\n */\nconst toPrefix = (position) => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\n/**\n * @param {import('hamt-sharding').BucketPosition<boolean>} position\n */\nconst toBucketPath = (position) => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\n/**\n * @typedef {import('../types').ShardTraversalContext} ShardTraversalContext\n *\n * @param {PBNode} node\n * @param {string} name\n * @param {Blockstore} blockstore\n * @param {ShardTraversalContext} [context]\n * @param {ExporterOptions} [options]\n * @returns {Promise<CID|null>}\n */\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({\n      hashFn\n    })\n\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    }\n  }\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent)\n  }\n\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false\n    }\n\n    const entryPrefix = link.Name.substring(0, 2)\n    const entryName = link.Name.substring(2)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return false\n    }\n\n    if (entryName && entryName !== name) {\n      // not the entry we're looking for\n      return false\n    }\n\n    return true\n  })\n\n  if (!link) {\n    return null\n  }\n\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  const block = await blockstore.get(link.Hash, options)\n  node = decode(block)\n\n  return findShardCid(node, name, blockstore, context, options)\n}\n\nexport default findShardCid\n","/**\n * @param {Uint8Array} block\n * @param {number} blockStart\n * @param {number} requestedStart\n * @param {number} requestedEnd\n */\nfunction extractDataFromBlock (block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length\n  const blockEnd = blockStart + blockLength\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return new Uint8Array(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.subarray(0, requestedEnd - blockStart)\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.subarray(requestedStart - blockStart)\n  }\n\n  return block\n}\n\nexport default extractDataFromBlock\n","import errCode from 'err-code'\n\n/**\n * @param {number} size\n * @param {number} [offset]\n * @param {number} [length]\n */\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (!length && length !== 0) {\n    length = size - offset\n  }\n\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset + length > size) {\n    length = size - offset\n  }\n\n  return {\n    offset,\n    length\n  }\n}\n\nexport default validateOffsetAndLength\n","import extractDataFromBlock from '../../../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js'\nimport { UnixFS } from 'ipfs-unixfs'\nimport errCode from 'err-code'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as raw from 'multiformats/codecs/raw'\nimport { pushable } from 'it-pushable'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport map from 'it-map'\nimport PQueue from 'p-queue'\n\n/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode | Uint8Array} node\n * @param {import('it-pushable').Pushable<Uint8Array>} queue\n * @param {number} streamPosition\n * @param {number} start\n * @param {number} end\n * @param {PQueue} walkQueue\n * @param {ExporterOptions} options\n * @returns {Promise<void>}\n */\nasync function walkDAG (blockstore, node, queue, streamPosition, start, end, walkQueue, options) {\n  // a `raw` node\n  if (node instanceof Uint8Array) {\n    queue.push(extractDataFromBlock(node, streamPosition, start, end))\n\n    return\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  /** @type {UnixFS} */\n  let file\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (/** @type {any} */ err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  if (file.data != null) {\n    const data = file.data\n    const buf = extractDataFromBlock(data, streamPosition, start, end)\n\n    queue.push(buf)\n\n    streamPosition += buf.byteLength\n  }\n\n  /** @type {Array<{ link: PBLink, blockStart: number }>} */\n  const childOps = []\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childStart = streamPosition // inclusive\n    const childEnd = childStart + file.blockSizes[i] // exclusive\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end >= childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      childOps.push({\n        link: childLink,\n        blockStart: streamPosition\n      })\n    }\n\n    streamPosition = childEnd\n\n    if (streamPosition > end) {\n      break\n    }\n  }\n\n  await pipe(\n    childOps,\n    (source) => map(source, (op) => {\n      return async () => {\n        const block = await blockstore.get(op.link.Hash, {\n          signal: options.signal\n        })\n\n        return {\n          ...op,\n          block\n        }\n      }\n    }),\n    (source) => parallel(source, {\n      ordered: true\n    }),\n    async (source) => {\n      for await (const { link, block, blockStart } of source) {\n        /** @type {PBNode | Uint8Array} */\n        let child\n        switch (link.Hash.code) {\n          case dagPb.code:\n            child = dagPb.decode(block)\n            break\n          case raw.code:\n            child = block\n            break\n          default:\n            queue.end(errCode(new Error(`Unsupported codec: ${link.Hash.code}`), 'ERR_NOT_UNIXFS'))\n            return\n        }\n\n        walkQueue.add(async () => {\n          await walkDAG(blockstore, child, queue, blockStart, start, end, walkQueue, options)\n        })\n      }\n    }\n  )\n}\n\n/**\n * @type {import('../').UnixfsV1Resolver}\n */\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * yieldFileContent (options = {}) {\n    const fileSize = unixfs.fileSize()\n\n    if (fileSize === undefined) {\n      throw new Error('File was a directory')\n    }\n\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    if (length === 0) {\n      return\n    }\n\n    // use a queue to walk the DAG instead of recursion to ensure very deep DAGs\n    // don't overflow the stack\n    const walkQueue = new PQueue({\n      concurrency: 1\n    })\n    const queue = pushable()\n\n    walkQueue.add(async () => {\n      await walkDAG(blockstore, node, queue, 0, offset, offset + length, walkQueue, options)\n    })\n\n    walkQueue.on('error', error => {\n      queue.end(error)\n    })\n\n    let read = 0\n\n    for await (const buf of queue) {\n      if (buf == null) {\n        continue\n      }\n\n      read += buf.byteLength\n\n      if (read === length) {\n        queue.end()\n      }\n\n      yield buf\n    }\n  }\n\n  return yieldFileContent\n}\n\nexport default fileContent\n","/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} [options]\n   * @returns {UnixfsV1DirectoryContent}\n   */\n  async function * yieldDirectoryContent (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options)\n\n      if (result.entry) {\n        yield result.entry\n      }\n    }\n  }\n\n  return yieldDirectoryContent\n}\n\nexport default directoryContent\n","import { decode } from '@ipld/dag-pb'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').Resolve} Resolve\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   *\n   */\n  function yieldHamtDirectoryContent (options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options)\n  }\n\n  return yieldHamtDirectoryContent\n}\n\n/**\n * @param {PBNode} node\n * @param {string} path\n * @param {Resolve} resolve\n * @param {number} depth\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} options\n *\n * @returns {UnixfsV1DirectoryContent}\n */\nasync function * listDirectory (node, path, resolve, depth, blockstore, options) {\n  const links = node.Links\n\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, blockstore, options)\n\n      yield result.entry\n    } else {\n      // descend into subshard\n      const block = await blockstore.get(link.Hash)\n      node = decode(block)\n\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file\n      }\n    }\n  }\n}\n\nexport default hamtShardedDirectoryContent\n","import errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport findShardCid from '../../utils/find-cid-in-shard.js'\nimport { decode } from '@ipld/dag-pb'\n\nimport contentFile from './content/file.js'\nimport contentDirectory from './content/directory.js'\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js'\n\n/**\n * @typedef {import('../../types').Resolve} Resolve\n * @typedef {import('../../types').Resolver} Resolver\n * @typedef {import('../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @param {PBNode} node\n * @param {string} name\n */\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name)\n\n  return link && link.Hash\n}\n\n/**\n * @type {{ [key: string]: UnixfsV1Resolver }}\n */\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  }\n}\n\n/**\n * @type {Resolver}\n */\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const node = decode(block)\n  let unixfs\n  let next\n\n  if (!name) {\n    name = cid.toString()\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  try {\n    unixfs = UnixFS.unmarshal(node.Data)\n  } catch (/** @type {any} */ err) {\n    // non-UnixFS dag-pb node? It could happen.\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  if (!path) {\n    path = name\n  }\n\n  if (toResolve.length) {\n    let linkCid\n\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      // special case - unixfs v1 hamt shards\n      linkCid = await findShardCid(node, toResolve[0], blockstore)\n    } else {\n      linkCid = findLinkCid(node, toResolve[0])\n    }\n\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND')\n    }\n\n    // remove the path component we have resolved\n    const nextName = toResolve.shift()\n    const nextPath = `${path}/${nextName}`\n\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    }\n  }\n\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      // @ts-ignore\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  }\n}\n\nexport default unixFsResolver\n","import errCode from 'err-code'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {import('../types').Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n\n  const block = await blockstore.get(cid, options)\n\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  }\n}\n\nexport default resolve\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport * as dagCbor from '@ipld/dag-cbor'\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid)\n  const object = dagCbor.decode(block)\n  let subObject = object\n  let subPath = path\n\n  while (toResolve.length) {\n    const prop = toResolve[0]\n\n    if (prop in subObject) {\n      // remove the bit of the path we have resolved\n      toResolve.shift()\n      subPath = `${subPath}/${prop}`\n\n      const subObjectCid = CID.asCID(subObject[prop])\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function * () {\n              yield object\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        }\n      }\n\n      subObject = subObject[prop]\n    } else {\n      // cannot resolve further\n      throw errCode(new Error(`No property named ${prop} found in cbor node ${cid}`), 'ERR_NO_PROP')\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function * () {\n        yield object\n      }\n    }\n  }\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\nimport * as mh from 'multiformats/hashes/digest'\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n  const buf = await mh.decode(cid.multihash.bytes)\n\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  }\n}\n\nexport default resolve\n","import errCode from 'err-code'\n\nimport * as dagPb from '@ipld/dag-pb'\nimport * as dagCbor from '@ipld/dag-cbor'\nimport * as raw from 'multiformats/codecs/raw'\nimport { identity } from 'multiformats/hashes/identity'\n\nimport dagPbResolver from './unixfs-v1/index.js'\nimport rawResolver from './raw.js'\nimport dagCborResolver from './dag-cbor.js'\nimport identifyResolver from './identity.js'\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n * @typedef {import('../types').Resolve} Resolve\n */\n\n/**\n * @type {{ [ key: string ]: Resolver }}\n */\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n}\n\n/**\n * @type {Resolve}\n */\nfunction resolve (cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code]\n\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER')\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options)\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\nimport resolve from './resolvers/index.js'\nimport last from 'it-last'\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ExporterOptions} ExporterOptions\n * @typedef {import('./types').UnixFSFile} UnixFSFile\n * @typedef {import('./types').UnixFSDirectory} UnixFSDirectory\n * @typedef {import('./types').ObjectNode} ObjectNode\n * @typedef {import('./types').RawNode} RawNode\n * @typedef {import('./types').IdentityNode} IdentityNode\n * @typedef {import('./types').UnixFSEntry} UnixFSEntry\n */\n\nconst toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\n/**\n * @param {string|Uint8Array|CID} path\n */\nconst cidAndRest = (path) => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    }\n  }\n\n  const cid = CID.asCID(path)\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    }\n  }\n\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6)\n    }\n\n    const output = toPathComponents(path)\n\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    }\n  }\n\n  throw errCode(new Error(`Unknown path type ${path}`), 'ERR_BAD_PATH')\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function * walkPath (path, blockstore, options = {}) {\n  let {\n    cid,\n    toResolve\n  } = cidAndRest(path)\n  let name = cid.toString()\n  let entryPath = name\n  const startingDepth = toResolve.length\n\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options)\n\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n    }\n\n    if (result.entry) {\n      yield result.entry\n    }\n\n    if (!result.next) {\n      return\n    }\n\n    // resolve further parts\n    toResolve = result.next.toResolve\n    cid = result.next.cid\n    name = result.next.name\n    entryPath = result.next.path\n  }\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function exporter (path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options))\n\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n  }\n\n  return result\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function * recursive (path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options)\n\n  if (!node) {\n    return\n  }\n\n  yield node\n\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child\n    }\n  }\n\n  /**\n   * @param {UnixFSDirectory} node\n   * @param {ExporterOptions} options\n   * @returns {AsyncGenerator<UnixFSEntry, void, any>}\n   */\n  async function * recurse (node, options) {\n    for await (const file of node.content(options)) {\n      yield file\n\n      if (file instanceof Uint8Array) {\n        continue\n      }\n\n      if (file.type === 'directory') {\n        yield * recurse(file, options)\n      }\n    }\n  }\n}\n","import { Uint8ArrayList, isUint8ArrayList } from 'uint8arraylist';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { compare as uint8ArrayCompare } from 'uint8arrays/compare';\nconst ZERO_OFFSET = '0'.charCodeAt(0);\nconst USTAR_MAGIC = uint8ArrayFromString('ustar\\x00', 'binary');\nconst GNU_MAGIC = uint8ArrayFromString('ustar\\x20', 'binary');\nconst GNU_VER = uint8ArrayFromString('\\x20\\x00', 'binary');\nconst MAGIC_OFFSET = 257;\nconst VERSION_OFFSET = 263;\nconst clamp = function (index, len, defaultValue) {\n    if (typeof index !== 'number')\n        return defaultValue;\n    index = ~~index; // Coerce to integer.\n    if (index >= len)\n        return len;\n    if (index >= 0)\n        return index;\n    index += len;\n    if (index >= 0)\n        return index;\n    return 0;\n};\nconst toType = function (flag) {\n    switch (flag) {\n        case 0:\n            return 'file';\n        case 1:\n            return 'link';\n        case 2:\n            return 'symlink';\n        case 3:\n            return 'character-device';\n        case 4:\n            return 'block-device';\n        case 5:\n            return 'directory';\n        case 6:\n            return 'fifo';\n        case 7:\n            return 'contiguous-file';\n        case 72:\n            return 'pax-header';\n        case 55:\n            return 'pax-global-header';\n        case 27:\n            return 'gnu-long-link-path';\n        case 28:\n        case 30:\n            return 'gnu-long-path';\n        default:\n            return undefined;\n    }\n};\nconst indexOf = function (block, num, offset, end) {\n    for (; offset < end; offset++) {\n        if (block.get(offset) === num)\n            return offset;\n    }\n    return end;\n};\nconst cksum = function (block) {\n    let sum = 8 * 32;\n    for (let i = 0; i < 148; i++)\n        sum += block.get(i);\n    for (let j = 156; j < 512; j++)\n        sum += block.get(j);\n    return sum;\n};\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\nfunction parse256(buf) {\n    // first byte MUST be either 80 or FF\n    // 80 for positive, FF for 2's comp\n    let positive;\n    if (buf.get(0) === 0x80) {\n        positive = true;\n    }\n    else if (buf.get(0) === 0xFF) {\n        positive = false;\n    }\n    else {\n        return 0;\n    }\n    // build up a base-256 tuple from the least sig to the highest\n    let zero = false;\n    const tuple = [];\n    for (let i = buf.length - 1; i > 0; i--) {\n        const byte = buf.get(i);\n        if (positive)\n            tuple.push(byte);\n        else if (zero && byte === 0)\n            tuple.push(0);\n        else if (zero) {\n            zero = false;\n            tuple.push(0x100 - byte);\n        }\n        else\n            tuple.push(0xFF - byte);\n    }\n    let sum = 0;\n    const l = tuple.length;\n    for (let i = 0; i < l; i++) {\n        sum += tuple[i] * Math.pow(256, i);\n    }\n    return positive ? sum : -1 * sum;\n}\nconst decodeOct = function (val, offset, length) {\n    val = val.sublist(offset, offset + length);\n    offset = 0;\n    // If prefixed with 0x80 then parse as a base-256 integer\n    if ((val.get(offset) & 0x80) !== 0) {\n        return parse256(val);\n    }\n    else {\n        // Older versions of tar can prefix with spaces\n        while (offset < val.length && val.get(offset) === 32) {\n            offset++;\n        }\n        const end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length);\n        while (offset < end && val.get(offset) === 0) {\n            offset++;\n        }\n        if (end === offset) {\n            return 0;\n        }\n        return parseInt(uint8ArrayToString(val.subarray(offset, end)), 8);\n    }\n};\nconst decodeStr = function (val, offset, length, encoding) {\n    return uint8ArrayToString(val.subarray(offset, indexOf(val, 0, offset, offset + length)), encoding);\n};\nexport function decodeLongPath(buf, encoding) {\n    const list = isUint8ArrayList(buf) ? buf : new Uint8ArrayList(buf);\n    return decodeStr(list, 0, buf.length, encoding);\n}\nexport function decodePax(buf, encoding) {\n    let list = isUint8ArrayList(buf) ? buf : new Uint8ArrayList(buf);\n    const result = {};\n    while (list.length > 0) {\n        let i = 0;\n        while (i < buf.length && list.get(i) !== 32) {\n            i++;\n        }\n        const len = parseInt(uint8ArrayToString(list.subarray(0, i)), 10);\n        if (len === 0) {\n            return result;\n        }\n        const b = uint8ArrayToString(list.subarray(i + 1, len - 1), encoding);\n        const keyIndex = b.indexOf('=');\n        if (keyIndex === -1) {\n            return result;\n        }\n        result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1);\n        list = list.sublist(len);\n    }\n    return result;\n}\nexport function decode(buf, filenameEncoding) {\n    const list = isUint8ArrayList(buf) ? buf : new Uint8ArrayList(buf);\n    let typeflag = list.get(156) === 0 ? 0 : list.get(156) - ZERO_OFFSET;\n    let name = decodeStr(list, 0, 100, filenameEncoding);\n    const mode = decodeOct(list, 100, 8);\n    const uid = decodeOct(list, 108, 8);\n    const gid = decodeOct(list, 116, 8);\n    const size = decodeOct(list, 124, 12);\n    const mtime = decodeOct(list, 136, 12);\n    const type = toType(typeflag);\n    const linkname = list.get(157) === 0 ? undefined : decodeStr(list, 157, 100, filenameEncoding);\n    const uname = decodeStr(list, 265, 32);\n    const gname = decodeStr(list, 297, 32);\n    const devmajor = decodeOct(list, 329, 8);\n    const devminor = decodeOct(list, 337, 8);\n    const c = cksum(list);\n    // checksum is still initial value if header was null.\n    if (c === 8 * 32) {\n        return null;\n    }\n    // valid checksum\n    if (c !== decodeOct(list, 148, 8)) {\n        throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?');\n    }\n    if (uint8ArrayCompare(USTAR_MAGIC, list.subarray(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\n        // ustar (posix) format.\n        // prepend prefix, if present.\n        if (list.get(345) !== 0) {\n            name = decodeStr(list, 345, 155, filenameEncoding) + '/' + name;\n        }\n    }\n    else if (uint8ArrayCompare(GNU_MAGIC, list.subarray(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 &&\n        uint8ArrayCompare(GNU_VER, list.subarray(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {\n        // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n        // multi-volume tarballs.\n    }\n    else {\n        throw new Error('Invalid tar header: unknown format.');\n    }\n    // to support old tar versions that use trailing / to indicate dirs\n    if (typeflag === 0 && name != null && name[name.length - 1] === '/') {\n        typeflag = 5;\n    }\n    return {\n        name: name,\n        mode: mode,\n        uid: uid,\n        gid: gid,\n        size: size,\n        mtime: new Date(1000 * (mtime ?? 0)),\n        type: type,\n        linkname: linkname,\n        uname: uname,\n        gname: gname,\n        devmajor: devmajor,\n        devminor: devminor\n    };\n}\n//# sourceMappingURL=extract-headers.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\n/**\n * Takes an (async) iterable that yields buffer-like-objects and concats them\n * into one buffer\n */\nexport default async function toBuffer(stream) {\n    let buffer = new Uint8Array(0);\n    for await (const buf of stream) {\n        buffer = uint8ArrayConcat([buffer, buf], buffer.length + buf.length);\n    }\n    return buffer;\n}\n//# sourceMappingURL=index.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst ZEROS = '0000000000000000000';\nconst SEVENS = '7777777777777777777';\nconst ZERO_OFFSET = '0'.charCodeAt(0);\nconst USTAR_MAGIC = uint8ArrayFromString('ustar\\x00', 'binary');\nconst USTAR_VER = uint8ArrayFromString('00', 'binary');\nconst MASK = parseInt('7777', 8);\nconst MAGIC_OFFSET = 257;\nconst VERSION_OFFSET = 263;\nconst toTypeflag = function (flag) {\n    switch (flag) {\n        case 'file':\n            return 0;\n        case 'link':\n            return 1;\n        case 'symlink':\n            return 2;\n        case 'character-device':\n            return 3;\n        case 'block-device':\n            return 4;\n        case 'directory':\n            return 5;\n        case 'fifo':\n            return 6;\n        case 'contiguous-file':\n            return 7;\n        case 'pax-header':\n            return 72;\n        default:\n            return 0;\n    }\n};\nconst cksum = function (block) {\n    let sum = 8 * 32;\n    for (let i = 0; i < 148; i++)\n        sum += block[i];\n    for (let j = 156; j < 512; j++)\n        sum += block[j];\n    return sum;\n};\nconst encodeOct = function (val, n) {\n    const str = val.toString(8);\n    if (str.length > n) {\n        return uint8ArrayFromString(SEVENS.slice(0, n) + ' ');\n    }\n    return uint8ArrayFromString(ZEROS.slice(0, n - str.length) + str + ' ');\n};\nconst addLength = function (str) {\n    const len = uint8ArrayFromString(str).byteLength;\n    let digits = Math.floor(Math.log(len) / Math.log(10)) + 1;\n    if (len + digits >= Math.pow(10, digits)) {\n        digits++;\n    }\n    return `${len + digits}${str}`;\n};\nexport function encodePax(opts) {\n    let result = '';\n    if (opts.name != null) {\n        result += addLength(' path=' + opts.name + '\\n');\n    }\n    if (opts.linkname != null) {\n        result += addLength(' linkpath=' + opts.linkname + '\\n');\n    }\n    const pax = opts.pax;\n    if (pax != null) {\n        for (const key in pax) {\n            if (Object.prototype.hasOwnProperty.call(pax, key)) {\n                result += addLength(' ' + key + '=' + pax[key] + '\\n');\n            }\n        }\n    }\n    return uint8ArrayFromString(result);\n}\nexport function encode(opts) {\n    const buf = new Uint8Array(512);\n    let name = opts.name;\n    let prefix = '';\n    if (opts.typeflag === 5 && name[name.length - 1] !== '/') {\n        name += '/';\n    }\n    if (uint8ArrayFromString(name).byteLength !== name.length) {\n        return null; // utf-8\n    }\n    while (uint8ArrayFromString(name).byteLength > 100) {\n        const i = name.indexOf('/');\n        if (i === -1) {\n            return null;\n        }\n        prefix += prefix !== '' ? '/' + name.slice(0, i) : name.slice(0, i);\n        name = name.slice(i + 1);\n    }\n    if (uint8ArrayFromString(name).byteLength > 100 || uint8ArrayFromString(prefix).byteLength > 155) {\n        return null;\n    }\n    if (opts.linkname != null && uint8ArrayFromString(opts.linkname).byteLength > 100) {\n        return null;\n    }\n    buf.set(uint8ArrayFromString(name), 0);\n    buf.set(encodeOct(opts.mode & MASK, 6), 100);\n    buf.set(encodeOct(opts.uid, 6), 108);\n    buf.set(encodeOct(opts.gid, 6), 116);\n    buf.set(encodeOct(opts.size, 11), 124);\n    buf.set(encodeOct((opts.mtime.getTime() / 1000) | 0, 11), 136);\n    buf[156] = ZERO_OFFSET + toTypeflag(opts.type);\n    if (opts.linkname != null) {\n        buf.set(uint8ArrayFromString(opts.linkname), 157);\n    }\n    buf.set(USTAR_MAGIC, MAGIC_OFFSET);\n    buf.set(USTAR_VER, VERSION_OFFSET);\n    if (opts.uname != null) {\n        buf.set(uint8ArrayFromString(opts.uname), 265);\n    }\n    if (opts.gname != null) {\n        buf.set(uint8ArrayFromString(opts.gname), 297);\n    }\n    buf.set(encodeOct(opts.devmajor ?? 0, 6), 329);\n    buf.set(encodeOct(opts.devminor ?? 0, 6), 337);\n    if (prefix != null) {\n        buf.set(uint8ArrayFromString(prefix), 345);\n    }\n    buf.set(encodeOct(cksum(buf), 6), 148);\n    return buf;\n}\n//# sourceMappingURL=pack-headers.js.map","// @ts-expect-error no types\nimport isoConstants from 'iso-constants';\nimport toBuffer from 'it-to-buffer';\nimport { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist';\nimport * as Headers from './pack-headers.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = isoConstants;\nconst DMODE = parseInt('755', 8);\nconst FMODE = parseInt('644', 8);\nconst END_OF_TAR = new Uint8Array(1024);\nfunction modeToType(mode = 0) {\n    switch (mode & S_IFMT) {\n        case S_IFBLK: return 'block-device';\n        case S_IFCHR: return 'character-device';\n        case S_IFDIR: return 'directory';\n        case S_IFIFO: return 'fifo';\n        case S_IFLNK: return 'symlink';\n        default: return 'file';\n    }\n}\nfunction getPadding(size) {\n    size &= 511;\n    if (size !== 0) {\n        return END_OF_TAR.subarray(0, 512 - size);\n    }\n    return new Uint8Array(0);\n}\nfunction encode(header) {\n    if (header.pax == null) {\n        const encoded = Headers.encode(header);\n        if (encoded != null) {\n            return encoded;\n        }\n    }\n    return encodePax(header);\n}\nfunction encodePax(header) {\n    const paxHeader = Headers.encodePax(header);\n    const newHeader = {\n        name: 'PaxHeader',\n        mode: header.mode,\n        uid: header.uid,\n        gid: header.gid,\n        size: paxHeader.length,\n        mtime: header.mtime,\n        type: 'pax-header',\n        linkname: header.linkname,\n        uname: header.uname,\n        gname: header.gname,\n        devmajor: header.devmajor,\n        devminor: header.devminor\n    };\n    return new Uint8ArrayList(Headers.encode(newHeader) ?? new Uint8Array(0), paxHeader, getPadding(paxHeader.length), Headers.encode({ ...newHeader, size: header.size, type: header.type }) ?? new Uint8Array(0)).subarray();\n}\nexport function pack() {\n    return async function* (source) {\n        for await (let { header: partialHeader, body } of source) {\n            const header = {\n                ...partialHeader,\n                size: partialHeader.type === 'symlink' ? 0 : partialHeader.size ?? 0,\n                type: partialHeader.type ?? modeToType(partialHeader.mode),\n                mode: partialHeader.mode ?? (partialHeader.type === 'directory' ? DMODE : FMODE),\n                uid: partialHeader.uid ?? 0,\n                gid: partialHeader.gid ?? 0,\n                mtime: partialHeader.mtime ?? new Date()\n            };\n            if (typeof body === 'string') {\n                body = uint8ArrayFromString(body);\n            }\n            if (body instanceof Uint8Array || isUint8ArrayList(body)) {\n                header.size = body.length;\n                yield encode(header);\n                yield isUint8ArrayList(body) ? body.subarray() : body;\n                yield getPadding(header.size);\n                continue;\n            }\n            if (header.type === 'symlink' && header.linkname == null) {\n                if (body == null) {\n                    throw new Error('type was symlink but no linkname or body specified');\n                }\n                header.linkname = uint8ArrayToString(await toBuffer(body));\n                yield encode(header);\n                continue;\n            }\n            yield encode(header);\n            if (header.type !== 'file' && header.type !== 'contiguous-file') {\n                continue;\n            }\n            let written = 0;\n            for await (const chunk of (body ?? [])) {\n                written += chunk.length; // eslint-disable-line @typescript-eslint/restrict-plus-operands\n                yield isUint8ArrayList(chunk) ? chunk.subarray() : chunk;\n            }\n            if (written !== header.size) { // corrupting tar\n                throw new Error(`size mismatch, wrote ${written} of ${header.size} bytes`);\n            }\n            yield getPadding(header.size);\n        }\n        yield END_OF_TAR;\n    };\n}\n//# sourceMappingURL=pack.js.map","import { createAdd } from './add.js'\nimport { createAddAll } from './add-all/index.js'\nimport { createCat } from './cat.js'\nimport { createGet } from './get.js'\nimport { createLs } from './ls.js'\n\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\nexport class RootAPI {\n  /**\n   * @param {Context} context\n   */\n  constructor ({ preload, repo, hashers, options }) {\n    const addAll = createAddAll({\n      preload,\n      repo,\n      options,\n      hashers\n    })\n\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    this.cat = createCat({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.ls = createLs({ repo, preload })\n  }\n}\n","import last from 'it-last'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @param {object} context\n * @param {import('ipfs-core-types/src/root').API<{}>[\"addAll\"]} context.addAll\n */\nexport function createAdd ({ addAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"add\"]}\n   */\n  async function add (entry, options = {}) {\n    // @ts-expect-error TODO: https://github.com/ipfs/js-ipfs/issues/3290\n    const result = await last(addAll(normaliseInput(entry), options))\n    // Note this should never happen as `addAll` should yield at least one item\n    // but to satisfy type checker we perfom this check and for good measure\n    // throw an error in case it does happen.\n    if (result == null) {\n      throw Error('Failed to add a file, if you see this please report a bug')\n    }\n\n    return result\n  }\n\n  return add\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport { normalizeCidPath } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createCat ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"cat\"]}\n   */\n  async function * cat (ipfsPath, options = {}) {\n    ipfsPath = normalizeCidPath(ipfsPath)\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/')\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const file = await exporter(ipfsPath, repo.blocks, options)\n\n    // File may not have unixfs prop if small & imported with rawLeaves true\n    if (file.type === 'directory') {\n      throw new Error('this dag node is a directory')\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content')\n    }\n\n    yield * file.content(options)\n  }\n\n  return withTimeoutOption(cat)\n}\n","import { exporter, recursive } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { normalizeCidPath } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\nimport { pack } from 'it-tar'\nimport { pipe } from 'it-pipe'\nimport Pako from 'pako'\nimport toBuffer from 'it-to-buffer'\n\n// https://www.gnu.org/software/gzip/manual/gzip.html\nconst DEFAULT_COMPRESSION_LEVEL = 6\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createGet ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"get\"]}\n   */\n  async function * get (ipfsPath, options = {}) {\n    if (options.compressionLevel != null && (options.compressionLevel < -1 || options.compressionLevel > 9)) {\n      throw errCode(new Error('Compression level must be between -1 and 9'), 'ERR_INVALID_PARAMS')\n    }\n\n    if (options.preload !== false) {\n      let pathComponents\n\n      try {\n        pathComponents = normalizeCidPath(ipfsPath).split('/')\n      } catch (/** @type {any} */ err) {\n        throw errCode(err, 'ERR_INVALID_PATH')\n      }\n\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const ipfsPathOrCid = CID.asCID(ipfsPath) || ipfsPath\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options)\n\n    if (file.type === 'file' || file.type === 'raw') {\n      const args = []\n\n      if (!options.compress || options.archive === true) {\n        args.push([{\n          header: {\n            name: file.path,\n            mode: file.type === 'file' && file.unixfs.mode,\n            mtime: file.type === 'file' && file.unixfs.mtime ? new Date(file.unixfs.mtime.secs * 1000) : undefined,\n            size: file.size,\n            type: 'file'\n          },\n          body: file.content()\n        }],\n        pack()\n        )\n      } else {\n        args.push(\n          file.content\n        )\n      }\n\n      if (options.compress) {\n        args.push(\n          /**\n           * @param {AsyncIterable<Uint8Array>} source\n           */\n          async function * (source) {\n            const buf = await toBuffer(source)\n\n            yield Pako.gzip(buf, {\n              level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL\n            })\n          }\n        )\n      }\n\n      // @ts-expect-error cannot derive type\n      yield * pipe(...args)\n\n      return\n    }\n\n    if (file.type === 'directory') {\n      /** @type {any[]} */\n      const args = [\n        recursive(ipfsPathOrCid, repo.blocks, options),\n        /**\n         * @param {AsyncIterable<import('ipfs-unixfs-exporter').UnixFSEntry>} source\n         */\n        async function * (source) {\n          for await (const entry of source) {\n            /** @type {import('it-tar').TarImportCandidate} */\n            const output = {\n              header: {\n                name: entry.path,\n                size: entry.size\n              }\n            }\n\n            if (entry.type === 'file') {\n              output.header.type = 'file'\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined\n              output.body = entry.content()\n            } else if (entry.type === 'raw') {\n              output.header.type = 'file'\n              output.body = entry.content()\n            } else if (entry.type === 'directory') {\n              output.header.type = 'directory'\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined\n            } else {\n              throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS')\n            }\n\n            yield output\n          }\n        },\n        pack()\n      ]\n\n      if (options.compress) {\n        if (!options.archive) {\n          throw errCode(new Error('file is not regular'), 'ERR_INVALID_PATH')\n        }\n\n        if (options.compress) {\n          args.push(\n            /**\n             * @param {AsyncIterable<Uint8Array>} source\n             */\n            async function * (source) {\n              const buf = await toBuffer(source)\n\n              yield Pako.gzip(buf, {\n                level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL\n              })\n            }\n          )\n        }\n      }\n\n      // @ts-expect-error cannot derive type\n      yield * pipe(...args)\n\n      return\n    }\n\n    throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS')\n  }\n\n  return withTimeoutOption(get)\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { normalizeCidPath, mapFile } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createLs ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"ls\"]}\n   */\n  async function * ls (ipfsPath, options = {}) {\n    const legacyPath = normalizeCidPath(ipfsPath)\n    const pathComponents = legacyPath.split('/')\n\n    if (options.preload !== false) {\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const ipfsPathOrCid = CID.asCID(legacyPath) || legacyPath\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options)\n\n    if (file.type === 'file') {\n      yield mapFile(file)\n      return\n    }\n\n    if (file.type === 'directory') {\n      for await (const child of file.content()) {\n        yield mapFile(child)\n      }\n\n      return\n    }\n\n    throw errCode(new Error(`Unknown UnixFS type ${file.type}`), 'ERR_UNKNOWN_UNIXFS_TYPE')\n  }\n\n  return withTimeoutOption(ls)\n}\n","\nexport const ipfsCore = '0.18.0'\nexport const commit = ''\nexport const interfaceIpfsCore = '^0.158.0'\n","import { ipfsCore as pkgversion } from '../version.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { NotStartedError } from '../errors.js'\nimport errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:components:id')\n\n/**\n * @typedef {import('libp2p').Libp2p} Libp2p\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('../types').NetworkService} config.network\n */\nexport function createId ({ peerId, network }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"id\"]}\n   */\n  async function id (options = {}) { // eslint-disable-line require-await\n    const net = network.try()\n\n    if (!net) {\n      if (options.peerId) {\n        throw new NotStartedError()\n      }\n\n      if (peerId.publicKey == null) {\n        throw errCode(new Error('Public key missing'), 'ERR_MISSING_PUBLIC_KEY')\n      }\n\n      return {\n        id: peerId,\n        publicKey: uint8ArrayToString(peerId.publicKey, 'base64pad'),\n        addresses: [],\n        agentVersion: `js-ipfs/${pkgversion}`,\n        protocolVersion: '9000',\n        protocols: []\n      }\n    }\n\n    const { libp2p } = net\n    const peerIdToId = options.peerId ? options.peerId : peerId\n    const peer = await findPeer(peerIdToId, libp2p, options)\n    const agentVersion = uint8ArrayToString(peer.metadata.get('AgentVersion') || new Uint8Array())\n    const protocolVersion = uint8ArrayToString(peer.metadata.get('ProtocolVersion') || new Uint8Array())\n    const idStr = peer.id.toString()\n    const publicKeyStr = peer.publicKey ? uint8ArrayToString(peer.publicKey, 'base64pad') : ''\n\n    return {\n      id: peerIdToId,\n      publicKey: publicKeyStr,\n      addresses: (peer.addresses || [])\n        .map(ma => {\n          const str = ma.toString()\n\n          // some relay-style transports add our peer id to the ma for us\n          // so don't double-add\n          if (str.endsWith(`/p2p/${idStr}`)) {\n            return str\n          }\n\n          return `${str}/p2p/${idStr}`\n        })\n        .sort()\n        .map(ma => multiaddr(ma)),\n      agentVersion,\n      protocolVersion,\n      protocols: (peer.protocols || []).sort()\n    }\n  }\n\n  return withTimeoutOption(id)\n}\n\n/**\n * @param {PeerId} peerId\n * @param {Libp2p} libp2p\n * @param {AbortOptions} options\n */\nasync function findPeer (peerId, libp2p, options) {\n  let peer = await libp2p.peerStore.get(peerId)\n\n  if (!peer) {\n    peer = await findPeerOnDht(peerId, libp2p, options)\n  }\n\n  let publicKey = peerId.publicKey ? peerId.publicKey : await libp2p.peerStore.keyBook.get(peerId)\n\n  if (publicKey == null) {\n    try {\n      publicKey = await libp2p.getPublicKey(peerId, options)\n    } catch (err) {\n      log.error('Could not load public key for', peerId.toString(), err)\n    }\n  }\n\n  return {\n    ...peer,\n    publicKey,\n    metadata: peer.metadata || new Map(),\n    addresses: peer.addresses.map(addr => addr.multiaddr)\n  }\n}\n\n/**\n * @param {PeerId} peerId\n * @param {Libp2p} libp2p\n * @param {AbortOptions} options\n */\nasync function findPeerOnDht (peerId, libp2p, options) {\n  if (libp2p.dht == null) {\n    throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n  }\n\n  for await (const event of libp2p.dht.findPeer(peerId, options)) {\n    if (event.name === 'FINAL_PEER') {\n      break\n    }\n  }\n\n  const peer = await libp2p.peerStore.get(peerId)\n\n  if (!peer) {\n    throw errCode(new Error('Could not find peer'), 'ERR_NOT_FOUND')\n  }\n\n  return peer\n}\n","var objectSafeSet = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, propsArg, value) {\n  var props, lastProp;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  prototypeCheck(lastProp);\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    prototypeCheck(thisProp);\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nfunction prototypeCheck(prop) {\n  // coercion is intentional to catch prop values like `['__proto__']`\n  if (prop == '__proto__' || prop == 'constructor' || prop == 'prototype') {\n    throw new Error('setting of prototype values not supported');\n  }\n}\n\nexport {objectSafeSet as default};\n","import set from 'just-safe-set'\nimport getDefaultConfig from 'ipfs-core-config/config'\n\n/**\n * @typedef {import('ipfs-core-types/src/config').Config} Config\n *\n * @typedef {object} Transformer\n * @property {string} description\n * @property {(config: Config) => Config} transform\n */\n\n/**\n * @type {Record<string, Transformer>}\n */\nexport const profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    transform: (config) => {\n      set(config, 'Discovery.MDNS.Enabled', false)\n      set(config, 'Discovery.webRTCStar.Enabled', false)\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    transform: (config) => {\n      set(config, 'Discovery.MDNS.Enabled', true)\n      set(config, 'Discovery.webRTCStar.Enabled', true)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      })\n\n      return config\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      set(config, 'Addresses.API', defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : '')\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : '')\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : [])\n      set(config, 'Addresses.Delegates', [])\n      set(config, 'Bootstrap', [])\n      set(config, 'Discovery.MDNS.Enabled', false)\n      set(config, 'Discovery.webRTCStar.Enabled', false)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      })\n\n      return config\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      set(config, 'Addresses.API', defaultConfig.Addresses.API)\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway)\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm)\n      set(config, 'Addresses.Delegates', defaultConfig.Addresses.Delegates)\n      set(config, 'Bootstrap', defaultConfig.Bootstrap)\n      set(config, 'Discovery.MDNS.Enabled', defaultConfig.Discovery.MDNS.Enabled)\n      set(config, 'Discovery.webRTCStar.Enabled', defaultConfig.Discovery.webRTCStar.Enabled)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      })\n\n      return config\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    transform: (config) => {\n      const Swarm = config.Swarm || {}\n      const ConnMgr = Swarm.ConnMgr || {}\n      ConnMgr.LowWater = 20\n      ConnMgr.HighWater = 40\n\n      Swarm.ConnMgr = ConnMgr\n      config.Swarm = Swarm\n\n      return config\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Swarm = defaultConfig.Swarm\n\n      return config\n    }\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { logger } from '@libp2p/logger'\nimport { profiles } from './profiles.js'\n\nconst log = logger('ipfs:core:config')\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createConfig ({ repo }) {\n  return {\n    getAll: withTimeoutOption(getAll),\n    get: withTimeoutOption(get),\n    set: withTimeoutOption(set),\n    replace: withTimeoutOption(replace),\n    profiles: {\n      apply: withTimeoutOption(applyProfile),\n      list: withTimeoutOption(listProfiles)\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"getAll\"]}\n   */\n  async function getAll (options = {}) { // eslint-disable-line require-await\n    return repo.config.getAll(options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"get\"]}\n   */\n  async function get (key, options) { // eslint-disable-line require-await\n    if (!key) {\n      return Promise.reject(new Error('key argument is required'))\n    }\n\n    return repo.config.get(key, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"set\"]}\n   */\n  async function set (key, value, options) { // eslint-disable-line require-await\n    return repo.config.set(key, value, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"replace\"]}\n   */\n  async function replace (value, options) { // eslint-disable-line require-await\n    return repo.config.replace(value, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config/profiles').API<{}>[\"apply\"]}\n   */\n  async function applyProfile (profileName, options = { dryRun: false }) {\n    const { dryRun } = options\n\n    const profile = profiles[profileName]\n\n    if (!profile) {\n      throw new Error(`No profile with name '${profileName}' exists`)\n    }\n\n    try {\n      const oldCfg = await repo.config.getAll(options)\n      let newCfg = JSON.parse(JSON.stringify(oldCfg)) // clone\n      newCfg = profile.transform(newCfg)\n\n      if (!dryRun) {\n        await repo.config.replace(newCfg, options)\n      }\n\n      // Scrub private key from output\n      // @ts-expect-error `oldCfg.Identity` maybe undefined\n      delete oldCfg.Identity.PrivKey\n      delete newCfg.Identity.PrivKey\n\n      return { original: oldCfg, updated: newCfg }\n    } catch (/** @type {any} */ err) {\n      log(err)\n\n      throw new Error(`Could not apply profile '${profileName}' to config: ${err.message}`)\n    }\n  }\n}\n\n/**\n * @type {import('ipfs-core-types/src/config/profiles').API<{}>[\"list\"]}\n */\nasync function listProfiles (_options) { // eslint-disable-line require-await\n  return Object.keys(profiles).map(name => ({\n    name,\n    description: profiles[name].description\n  }))\n}\n","import varint from 'varint'\nimport { encode as dagCborEncode } from '@ipld/dag-cbor'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./coding').CarEncoder} CarEncoder\n * @typedef {import('./coding').IteratorChannel_Writer<Uint8Array>} IteratorChannel_Writer\n */\n\n/**\n * Create a header from an array of roots.\n *\n * @param {CID[]} roots\n * @returns {Uint8Array}\n */\nexport function createHeader (roots) {\n  const headerBytes = dagCborEncode({ version: 1, roots })\n  const varintBytes = varint.encode(headerBytes.length)\n  const header = new Uint8Array(varintBytes.length + headerBytes.length)\n  header.set(varintBytes, 0)\n  header.set(headerBytes, varintBytes.length)\n  return header\n}\n\n/**\n * @param {IteratorChannel_Writer} writer\n * @returns {CarEncoder}\n */\nfunction createEncoder (writer) {\n  // none of this is wrapped in a mutex, that needs to happen above this to\n  // avoid overwrites\n\n  return {\n    /**\n     * @param {CID[]} roots\n     * @returns {Promise<void>}\n     */\n    async setRoots (roots) {\n      const bytes = createHeader(roots)\n      await writer.write(bytes)\n    },\n\n    /**\n     * @param {Block} block\n     * @returns {Promise<void>}\n     */\n    async writeBlock (block) {\n      const { cid, bytes } = block\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)))\n      await writer.write(cid.bytes)\n      if (bytes.length) {\n        // zero-length blocks are valid, but it'd be safer if we didn't write them\n        await writer.write(bytes)\n      }\n    },\n\n    /**\n     * @returns {Promise<void>}\n     */\n    async close () {\n      await writer.end()\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n}\n\nexport { createEncoder }\n","/**\n * @template {any} T\n * @typedef {import('./coding').IteratorChannel<T>} IteratorChannel\n */\n\nfunction noop () {}\n\n/**\n * @template {any} T\n * @returns {IteratorChannel<T>}\n */\nexport function create () {\n  /** @type {T[]} */\n  const chunkQueue = []\n  /** @type {Promise<void> | null} */\n  let drainer = null\n  let drainerResolver = noop\n  let ended = false\n  /** @type {Promise<IteratorResult<T>> | null} */\n  let outWait = null\n  let outWaitResolver = noop\n\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise((resolve) => {\n        drainerResolver = () => {\n          drainer = null\n          drainerResolver = noop\n          resolve()\n        }\n      })\n    }\n    return drainer\n  }\n\n  /**\n   * @returns {IteratorChannel<T>}\n   */\n  const writer = {\n    /**\n     * @param {T} chunk\n     * @returns {Promise<void>}\n     */\n    write (chunk) {\n      chunkQueue.push(chunk)\n      const drainer = makeDrainer()\n      outWaitResolver()\n      return drainer\n    },\n\n    async end () {\n      ended = true\n      const drainer = makeDrainer()\n      outWaitResolver()\n      await drainer\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n\n  /** @type {AsyncIterator<T>} */\n  const iterator = {\n    /** @returns {Promise<IteratorResult<T>>} */\n    async next () {\n      const chunk = chunkQueue.shift()\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver()\n        }\n        return { done: false, value: chunk }\n      }\n\n      if (ended) {\n        drainerResolver()\n        return { done: true, value: undefined }\n      }\n\n      if (!outWait) {\n        outWait = new Promise((resolve) => {\n          outWaitResolver = () => {\n            outWait = null\n            outWaitResolver = noop\n            return resolve(iterator.next())\n          }\n        })\n      }\n\n      return outWait\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n\n  return { writer, iterator }\n}\n","/* eslint-disable jsdoc/check-indentation */\n\n/** Auto-generated with ipld-schema-validator@0.0.0-dev at Thu Jun 17 2021 from IPLD Schema:\n *\n * type CarHeader struct {\n *   version Int\n *   roots optional [&Any]\n *   # roots is _not_ optional for CarV1 but we defer that check within code to\n *   # gracefully handle the >V1 case where it's just {version:X}\n * }\n *\n */\n\nconst Kinds = {\n  Null: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => obj === null,\n  Int: /**\n        * @param {any} obj\n        * @returns {boolean}\n        */ (/** @type {any} */ obj) => Number.isInteger(obj),\n  Float: /**\n          * @param {any} obj\n          * @returns {boolean}\n          */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj),\n  String: /**\n           * @param {any} obj\n           * @returns {boolean}\n           */ (/** @type {any} */ obj) => typeof obj === 'string',\n  Bool: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => typeof obj === 'boolean',\n  Bytes: /**\n          * @param {any} obj\n          * @returns {boolean}\n          */ (/** @type {any} */ obj) => obj instanceof Uint8Array,\n  Link: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj,\n  List: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => Array.isArray(obj),\n  Map: /**\n        * @param {any} obj\n        * @returns {boolean}\n        */ (/** @type {any} */ obj) => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj)\n}\n/** @type {{ [k in string]: (obj:any)=>boolean}} */\nconst Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': /**\n                          * @param {any} obj\n                          * @returns {boolean}\n                          */ (/** @type {any} */ obj) => Types.Int(obj),\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': /**\n                               * @param {any} obj\n                               * @returns {boolean}\n                               */ (/** @type {any} */ obj) => Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']),\n  'CarHeader > roots': /**\n                        * @param {any} obj\n                        * @returns {boolean}\n                        */ (/** @type {any} */ obj) => Types['CarHeader > roots (anon)'](obj),\n  CarHeader: /**\n              * @param {any} obj\n              * @returns {boolean}\n              */ (/** @type {any} */ obj) => { const keys = obj && Object.keys(obj); return Kinds.Map(obj) && ['version'].every((k) => keys.includes(k)) && Object.entries(obj).every(([name, value]) => Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value)) }\n}\n\nexport const CarHeader = Types.CarHeader\n","import varint from 'varint'\n\nexport const CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nexport const V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding').Seekable} seeker\n * @returns {number}\n */\nexport function decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint.decode(bytes)\n  seeker.seek(/** @type {number} */(varint.decode.bytes))\n  return i\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding').CarV2FixedHeader}\n */\nexport function decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nexport function getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint.decode.bytes)\n  const length = varint.decode(bytes.subarray(varint.decode.bytes))\n  const lengthLength = /** @type {number} */(varint.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n","import { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor'\nimport { CarHeader as headerValidator } from './header-validator.js'\nimport { CIDV0_BYTES, decodeV2Header, decodeVarint, getMultihashLength, V2_HEADER_LENGTH } from './decoder-common.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockHeader} BlockHeader\n * @typedef {import('./api').BlockIndex} BlockIndex\n * @typedef {import('./coding').BytesReader} BytesReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n * @typedef {import('./coding').CarV2FixedHeader} CarV2FixedHeader\n * @typedef {import('./coding').CarDecoder} CarDecoder\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name async decoder.readHeader(reader)\n * @param {BytesReader} reader\n * @param {number} [strictVersion]\n * @returns {Promise<CarHeader|CarV2Header>}\n */\nexport async function readHeader (reader, strictVersion) {\n  const length = decodeVarint(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = await reader.exactly(length, true)\n  const block = decodeDagCbor(header)\n  if (!headerValidator(block)) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  // we've made 'roots' optional in the schema so we can do the version check\n  // before rejecting the block as invalid if there is no version\n  const hasRoots = Array.isArray(block.roots)\n  if ((block.version === 1 && !hasRoots) || (block.version === 2 && hasRoots)) {\n    throw new Error('Invalid CAR header format')\n  }\n  if (block.version === 1) {\n    return block\n  }\n  // version 2\n  const v2Header = decodeV2Header(await reader.exactly(V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = await readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<CID>}\n */\nasync function readCid (reader) {\n  const first = await reader.exactly(2, false)\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = await reader.exactly(34, true)\n    const multihash = Digest.decode(bytes)\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = decodeVarint(await reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = decodeVarint(await reader.upTo(8), reader)\n  const bytes = await reader.exactly(getMultihashLength(await reader.upTo(8)), true)\n  const multihash = Digest.decode(bytes)\n  return CID.create(version, codec, multihash)\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesReader} reader\n * @returns {Promise<BlockHeader>}\n */\nexport async function readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = decodeVarint(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = await readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<Block>}\n */\nasync function readBlock (reader) {\n  const { cid, blockLength } = await readBlockHead(reader)\n  const bytes = await reader.exactly(blockLength, true)\n  return { bytes, cid }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<BlockIndex>}\n */\nasync function readBlockIndex (reader) {\n  const offset = reader.pos\n  const { cid, length, blockLength } = await readBlockHead(reader)\n  const index = { cid, length, blockLength, offset, blockOffset: reader.pos }\n  reader.seek(index.blockLength)\n  return index\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Creates a `CarDecoder` from a `BytesReader`. The `CarDecoder` is as async\n * interface that will consume the bytes from the `BytesReader` to yield a\n * `header()` and either `blocks()` or `blocksIndex()` data.\n *\n * @name decoder.createDecoder(reader)\n * @param {BytesReader} reader\n * @returns {CarDecoder}\n */\nexport function createDecoder (reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader)\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset\n      reader = limitReader(reader, header.dataSize - v1length)\n    }\n    return header\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  })()\n\n  return {\n    header: () => headerPromise,\n\n    async * blocks () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader)\n      }\n    },\n\n    async * blocksIndex () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader)\n      }\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesReader}\n */\nexport function bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      const out = bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n      /* c8 ignore next 2 */\n      return out\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * @ignore\n * reusable reader for streams and files, we just need a way to read an\n * additional chunk (of some undetermined size) and a way to close the\n * reader when finished\n * @param {() => Promise<Uint8Array|null>} readChunk\n * @returns {BytesReader}\n */\nexport function chunkReader (readChunk /*, closer */) {\n  let pos = 0\n  let have = 0\n  let offset = 0\n  let currentChunk = new Uint8Array(0)\n\n  const read = async (/** @type {number} */ length) => {\n    have = currentChunk.length - offset\n    const bufa = [currentChunk.subarray(offset)]\n    while (have < length) {\n      const chunk = await readChunk()\n      if (chunk == null) {\n        break\n      }\n      /* c8 ignore next 8 */\n      // undo this ignore ^ when we have a fd implementation that can seek()\n      if (have < 0) { // because of a seek()\n        /* c8 ignore next 4 */\n        // toohard to test the else\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have))\n        } // else discard\n      } else {\n        bufa.push(chunk)\n      }\n      have += chunk.length\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0))\n    let off = 0\n    for (const b of bufa) {\n      currentChunk.set(b, off)\n      off += b.length\n    }\n    offset = 0\n  }\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length))\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length, seek = false) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = currentChunk.subarray(offset, offset + length)\n      if (seek) {\n        pos += length\n        offset += length\n      }\n      return out\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      pos += length\n      offset += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from an `AsyncIterable<Uint8Array>`, which allows for\n * consumption of CAR data from a streaming source.\n *\n * @name decoder.asyncIterableReader(asyncIterable)\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {BytesReader}\n */\nexport function asyncIterableReader (asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]()\n\n  async function readChunk () {\n    const next = await iterator.next()\n    if (next.done) {\n      return null\n    }\n    return next.value\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  return chunkReader(readChunk)\n}\n\n/**\n * Wraps a `BytesReader` in a limiting `BytesReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesReader} reader\n * @param {number} byteLimit\n * @returns {BytesReader}\n */\nexport function limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      let bytes = await reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length, seek = false) {\n      const bytes = await reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { createEncoder, createHeader } from './encoder.js'\nimport { create as iteratorChannel } from './iterator-channel.js'\nimport { bytesReader, readHeader } from './decoder.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockWriter} BlockWriter\n * @typedef {import('./api').WriterChannel} WriterChannel\n * @typedef {import('./coding').CarEncoder} CarEncoder\n * @typedef {import('./coding').IteratorChannel<Uint8Array>} IteratorChannel\n */\n\n/**\n * Provides a writer interface for the creation of CAR files.\n *\n * Creation of a `CarWriter` involves the instatiation of an input / output pair\n * in the form of a `WriterChannel`, which is a\n * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair. These two\n * components form what can be thought of as a stream-like interface. The\n * `writer` component (an instantiated `CarWriter`), has methods to\n * {@link CarWriter.put `put()`} new blocks and {@link CarWriter.put `close()`}\n * the writing operation (finalising the CAR archive). The `out` component is\n * an `AsyncIterable` that yields the bytes of the archive. This can be\n * redirected to a file or other sink. In Node.js, you can use the\n * [`Readable.from()`](https://nodejs.org/api/stream.html#stream_stream_readable_from_iterable_options)\n * API to convert this to a standard Node.js stream, or it can be directly fed\n * to a\n * [`stream.pipeline()`](https://nodejs.org/api/stream.html#stream_stream_pipeline_source_transforms_destination_callback).\n *\n * The channel will provide a form of backpressure. The `Promise` from a\n * `write()` won't resolve until the resulting data is drained from the `out`\n * iterable.\n *\n * It is also possible to ignore the `Promise` from `write()` calls and allow\n * the generated data to queue in memory. This should be avoided for large CAR\n * archives of course due to the memory costs and potential for memory overflow.\n *\n * Load this class with either\n * `import { CarWriter } from '@ipld/car/writer'`\n * (`const { CarWriter } = require('@ipld/car/writer')`). Or\n * `import { CarWriter } from '@ipld/car'`\n * (`const { CarWriter } = require('@ipld/car')`). The former will likely\n * result in smaller bundle sizes where this is important.\n *\n * @name CarWriter\n * @class\n * @implements {BlockWriter}\n */\nexport class CarWriter {\n  /**\n   * @param {CID[]} roots\n   * @param {CarEncoder} encoder\n   */\n  constructor (roots, encoder) {\n    this._encoder = encoder\n    /** @type {Promise<void>} */\n    this._mutex = encoder.setRoots(roots)\n    this._ended = false\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {Promise<void>} The returned promise will only resolve once the\n   * bytes this block generates are written to the `out` iterable.\n   */\n  async put (block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    const cid = CID.asCID(block.cid)\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({ cid, bytes: block.bytes }))\n    return this._mutex\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Finalise the CAR archive and signal that the `out` iterable should end once\n   * any remaining bytes are written.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    await this._mutex\n    this._ended = true\n    return this._encoder.close()\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Create a new CAR writer \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {CID[] | CID | void} roots\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static create (roots) {\n    roots = toRoots(roots)\n    const { encoder, iterator } = encodeWriter()\n    const writer = new CarWriter(roots, encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Create a new CAR appender \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   * This appender does not consider roots and does not produce a CAR header.\n   * It is designed to append blocks to an _existing_ CAR archive. It is\n   * expected that `out` will be concatenated onto the end of an existing\n   * archive that already has a properly formatted header.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static createAppender () {\n    const { encoder, iterator } = encodeWriter()\n    encoder.setRoots = () => Promise.resolve()\n    const writer = new CarWriter([], encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Update the list of roots in the header of an existing CAR as represented\n   * in a Uint8Array.\n   *\n   * This operation is an _overwrite_, the total length of the CAR will not be\n   * modified. A rejection will occur if the new header will not be the same\n   * length as the existing header, in which case the CAR will not be modified.\n   * It is the responsibility of the user to ensure that the roots being\n   * replaced encode as the same length as the new roots.\n   *\n   * The byte array passed in an argument will be modified and also returned\n   * upon successful modification.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {Uint8Array} bytes\n   * @param {CID[]} roots - A new list of roots to replace the existing list in\n   * the CAR header. The new header must take up the same number of bytes as the\n   * existing header, so the roots should collectively be the same byte length\n   * as the existing roots.\n   * @returns {Promise<Uint8Array>}\n   */\n  static async updateRootsInBytes (bytes, roots) {\n    const reader = bytesReader(bytes)\n    await readHeader(reader)\n    const newHeader = createHeader(roots)\n    if (Number(reader.pos) !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${reader.pos} bytes, new header is ${newHeader.length} bytes)`)\n    }\n    bytes.set(newHeader, 0)\n    return bytes\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * @class\n * @implements {AsyncIterable<Uint8Array>}\n */\nexport class CarWriterOut {\n  /**\n   * @param {AsyncIterator<Uint8Array>} iterator\n   */\n  constructor (iterator) {\n    this._iterator = iterator\n  }\n\n  [Symbol.asyncIterator] () {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported')\n    }\n    this._iterating = true\n    return this._iterator\n  }\n}\n\nfunction encodeWriter () {\n  /** @type {IteratorChannel} */\n  const iw = iteratorChannel()\n  const { writer, iterator } = iw\n  const encoder = createEncoder(writer)\n  return { encoder, iterator }\n}\n\n/**\n * @private\n * @param {CID[] | CID | void} roots\n * @returns {CID[]}\n */\nfunction toRoots (roots) {\n  if (roots === undefined) {\n    return []\n  }\n\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots)\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    return [cid]\n  }\n\n  const _roots = []\n  for (const root of roots) {\n    const _root = CID.asCID(root)\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    _roots.push(_root)\n  }\n  return _roots\n}\n\nexport const __browser = true\n","import { CID } from 'multiformats/cid'\nimport { createUnsafe } from 'multiformats/block'\nimport { CarWriter } from '@ipld/car/writer'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { logger } from '@libp2p/logger'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as json from 'multiformats/codecs/json'\nimport { walk } from 'multiformats/traversal'\n\nconst log = logger('ipfs:components:dag:import')\n\n// blocks that we're OK with not inspecting for links\n/** @type {number[]} */\nconst NO_LINKS_CODECS = [\n  raw.code, // raw\n  json.code // JSON\n]\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('@ipld/car/api').BlockWriter} BlockWriter\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @template T\n * @template C\n * @template A\n * @template V\n * @typedef {import('multiformats/block').Block<T, C, A, V>} Block\n */\n\n/**\n * @param {object} config\n * @param {IPFSRepo} config.repo\n * @param {Preload} config.preload\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createExport ({ repo, preload, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    if (options.preload !== false) {\n      preload(root)\n    }\n\n    const cid = CID.asCID(root)\n    if (!cid) {\n      throw new Error(`Unexpected error converting CID type: ${root}`)\n    }\n\n    log(`Exporting ${cid} as car`)\n    const { writer, out } = await CarWriter.create([cid])\n\n    // we need to write with one async channel and send the CarWriter output\n    // with another to the caller, but if the write causes an error we capture\n    // that and make sure it gets propagated\n    /** @type {Error|null} */\n    let err = null\n    ;(async () => {\n      try {\n        const load = makeLoader(repo, writer, {\n          signal: options.signal,\n          timeout: options.timeout\n        }, codecs)\n        await walk({ cid, load })\n      } catch (/** @type {any} */ e) {\n        err = e\n      } finally {\n        writer.close()\n      }\n    })()\n\n    for await (const chunk of out) {\n      if (err) {\n        break\n      }\n      yield chunk\n    }\n    if (err) {\n      throw err\n    }\n  }\n\n  return withTimeoutOption(dagExport)\n}\n\n/**\n * @param {IPFSRepo} repo\n * @param {BlockWriter} writer\n * @param {AbortOptions} options\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @returns {(cid:CID)=>Promise<ReturnType<createUnsafe>|null>}\n */\nfunction makeLoader (repo, writer, options, codecs) {\n  return async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n\n    if (!codec) {\n      throw new Error(`Can't decode links in block with codec 0x${cid.code.toString(16)} to form complete DAG`)\n    }\n\n    const bytes = await repo.blocks.get(cid, options)\n\n    log(`Adding block ${cid} to car`)\n    await writer.put({ cid, bytes })\n\n    if (NO_LINKS_CODECS.includes(cid.code)) {\n      return null // skip this block, no need to look inside\n    }\n\n    return createUnsafe({ bytes, cid, codec })\n  }\n}\n","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').RootsReader} RootsReader\n * @typedef {import('./coding').BytesReader} BytesReader\n */\n\n/**\n * @class\n * @implements {RootsReader}\n * @property {number} version The version number of the CAR referenced by this reader (should be `1`).\n */\nexport class CarIteratorBase {\n  /**\n   * @param {number} version\n   * @param {CID[]} roots\n   * @param {AsyncIterable<Block>|void} iterable\n   */\n  constructor (version, roots, iterable) {\n    this._version = version\n    this._roots = roots\n    this._iterable = iterable\n    this._decoded = false\n  }\n\n  get version () {\n    return this._version\n  }\n\n  /**\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._roots\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * Provides an iterator over all of the `Block`s in a CAR. Implements a\n * `BlockIterator` interface, or `AsyncIterable<Block>`. Where a `Block` is\n * a `{ cid:CID, bytes:Uint8Array }` pair.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const block of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarBlockiterator.fromBytes} or\n * {@link CarBlockiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarBlockIterator` also implements the `RootsReader` interface and provides\n * the {@link CarBlockiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarBlockIterator } from '@ipld/car/iterator'`\n * (`const { CarBlockIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarBlockIterator } from '@ipld/car'`\n * (`const { CarBlockIterator } = require('@ipld/car')`).\n *\n * @name CarBlockIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<Block>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nexport class CarBlockIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarBlockIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<Block>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    return this._iterable[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarBlockIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarBlockIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarBlockIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * Provides an iterator over all of the `CID`s in a CAR. Implements a\n * `CIDIterator` interface, or `AsyncIterable<CID>`. Similar to\n * {@link CarBlockIterator} but only yields the CIDs in the CAR.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const cid of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarCIDiterator.fromBytes} or\n * {@link CarCIDiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarCIDIterator` also implements the `RootsReader` interface and provides\n * the {@link CarCIDiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarCIDIterator } from '@ipld/car/iterator'`\n * (`const { CarCIDIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarCIDIterator } from '@ipld/car'`\n * (`const { CarCIDIterator } = require('@ipld/car')`).\n *\n * @name CarCIDIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<CID>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nexport class CarCIDIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarCIDIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<CID>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    const iterable = this._iterable[Symbol.asyncIterator]()\n    return {\n      async next () {\n        const next = await iterable.next()\n        if (next.done) {\n          return next\n        }\n        return { done: false, value: next.value.cid }\n        /* c8 ignore next 2 */\n        // Node.js 12 c8 bug\n      }\n    }\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarCIDIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarCIDIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromBytes (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array')\n  }\n  return decodeIterator(bytesReader(bytes))\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromIterable (asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable')\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable))\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function decodeIterator (reader) {\n  const decoder = createDecoder(reader)\n  const { version, roots } = await decoder.header()\n  return { version, roots, iterator: decoder.blocks() }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n","import { CarBlockIterator } from '@ipld/car/iterator'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport itPeekable from 'it-peekable'\nimport drain from 'it-drain'\nimport map from 'it-map'\nimport { logger } from '@libp2p/logger'\nconst log = logger('ipfs:components:dag:import')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/dag/').ImportRootStatus} RootStatus\n */\n\n/**\n * @param {object} config\n * @param {IPFSRepo} config.repo\n */\nexport function createImport ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"import\"]}\n   */\n  async function * dagImport (sources, options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      const abortOptions = { signal: options.signal, timeout: options.timeout }\n      const peekable = itPeekable(sources)\n\n      const { value, done } = await peekable.peek()\n\n      if (done) {\n        return\n      }\n\n      if (value) {\n        // @ts-expect-error\n        peekable.push(value)\n      }\n\n      /**\n       * @type {AsyncIterable<AsyncIterable<Uint8Array>> | Iterable<AsyncIterable<Uint8Array>>}\n       */\n      let cars\n\n      if (value instanceof Uint8Array) {\n        // @ts-expect-error\n        cars = [peekable]\n      } else {\n        // @ts-expect-error\n        cars = peekable\n      }\n\n      for await (const car of cars) {\n        const roots = await importCar(repo, abortOptions, car)\n\n        if (options.pinRoots !== false) { // default=true\n          for (const cid of roots) {\n            let pinErrorMsg = ''\n\n            try { // eslint-disable-line max-depth\n              if (await repo.blocks.has(cid)) { // eslint-disable-line max-depth\n                log(`Pinning root ${cid}`)\n                await repo.pins.pinRecursively(cid)\n              } else {\n                pinErrorMsg = 'blockstore: block not found'\n              }\n            } catch (/** @type {any} */ err) {\n              pinErrorMsg = err.message\n            }\n\n            yield { root: { cid, pinErrorMsg } }\n          }\n        }\n      }\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(dagImport)\n}\n\n/**\n * @param {IPFSRepo} repo\n * @param {AbortOptions} options\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {Promise<CID[]>}\n */\nasync function importCar (repo, options, source) {\n  const reader = await CarBlockIterator.fromIterable(source)\n  const roots = await reader.getRoots()\n\n  await drain(\n    repo.blocks.putMany(\n      map(reader, ({ cid: key, bytes: value }) => {\n        log(`Import block ${key}`)\n\n        return { key, value }\n      }),\n      { signal: options.signal }\n    )\n  )\n\n  return roots\n}\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\nexport class DagAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo, codecs, hashers, preload }) {\n    this.export = createExport({ repo, preload, codecs })\n    this.get = createGet({ codecs, repo, preload })\n    this.import = createImport({ repo })\n    this.resolve = createResolve({ repo, codecs, preload })\n    this.put = createPut({ repo, codecs, hashers, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport first from 'it-first'\nimport last from 'it-last'\nimport { resolve } from '../../utils.js'\nimport errCode from 'err-code'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet ({ codecs, repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"get\"]}\n   */\n  const get = async function get (cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    if (options.path) {\n      const entry = options.localResolve\n        ? await first(resolve(cid, options.path, codecs, repo, options))\n        : await last(resolve(cid, options.path, codecs, repo, options))\n      /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n      const result = (entry)\n\n      if (!result) {\n        throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n      }\n\n      return result\n    }\n\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n    const node = codec.decode(block)\n\n    return {\n      value: node,\n      remainderPath: ''\n    }\n  }\n\n  return withTimeoutOption(get)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport { resolvePath } from '../../utils.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createResolve ({ repo, codecs, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"resolve\"]}\n   */\n  async function dagResolve (ipfsPath, options = {}) {\n    const {\n      cid\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return resolvePath(repo, codecs, ipfsPath, options)\n  }\n\n  return withTimeoutOption(dagResolve)\n}\n","import { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('../../types').Preload} config.preload\n */\nexport function createPut ({ repo, codecs, hashers, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"put\"]}\n   */\n  async function put (dagNode, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null\n\n    try {\n      const storeCodec = await codecs.getCodec(options.storeCodec || 'dag-cbor')\n      // TODO: doesn't getCodec throw? verify and possibly remove this\n      if (!storeCodec) {\n        throw new Error(`Unknown storeCodec ${options.storeCodec}, please configure additional BlockCodecs for this IPFS instance`)\n      }\n\n      if (options.inputCodec) {\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        const inputCodec = await codecs.getCodec(options.inputCodec)\n        if (!inputCodec) {\n          throw new Error(`Unknown inputCodec ${options.inputCodec}, please configure additional BlockCodecs for this IPFS instance`)\n        }\n        dagNode = inputCodec.decode(dagNode)\n      }\n\n      const cidVersion = options.version != null ? options.version : 1\n      const hasher = await hashers.getHasher(options.hashAlg || 'sha2-256')\n\n      if (!hasher) {\n        throw new Error(`Unknown hash algorithm ${options.hashAlg}, please configure additional MultihashHashers for this IPFS instance`)\n      }\n\n      const buf = storeCodec.encode(dagNode)\n      const hash = await hasher.digest(buf)\n      const cid = CID.create(cidVersion, storeCodec.code, hash)\n\n      await repo.blocks.put(cid, buf, {\n        signal: options.signal\n      })\n\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid)\n      }\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","/* eslint-env browser */\n\nimport HTTP from 'ipfs-utils/src/http.js'\nimport { logger } from '@libp2p/logger'\nimport PQueue from 'p-queue'\n\nconst log = logger('ipfs:preload')\n\n// @ts-expect-error PQueue@6 is broken\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\n// browsers limit concurrent connections per host,\n// we don't want preload calls to exhaust the limit (~6)\nconst httpQueue = new Queue({ concurrency: 4 })\n\n/**\n * @param {string} url\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\nexport function preload (url, options = {}) {\n  log(url)\n\n  return httpQueue.add(async () => {\n    const res = await HTTP.post(url, { signal: options.signal })\n\n    // @ts-expect-error\n    const reader = res.body.getReader()\n\n    try {\n      while (true) {\n        const { done } = await reader.read()\n        if (done) return\n        // Read to completion but do not cache\n      }\n    } finally {\n      reader.releaseLock()\n    }\n  })\n}\n","import { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\nimport { logger } from '@libp2p/logger'\nimport shuffle from 'array-shuffle'\nimport { preload } from 'ipfs-core-config/preload'\nimport hashlru from 'hashlru'\n\nconst log = logger('ipfs:preload')\n\n/**\n * @param {import('./types').PreloadOptions} [options]\n */\nexport function createPreloader (options = {}) {\n  options.enabled = Boolean(options.enabled)\n  options.addresses = options.addresses || []\n  options.cache = options.cache || 1000\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled')\n    const api = () => {}\n    return Object.assign(api, {\n      start: () => {},\n      stop: () => {}\n    })\n  }\n\n  let stopped = true\n  /** @type {AbortController[]} */\n  let requests = []\n  const apiUris = options.addresses.map((str) => multiaddrToUri(str))\n\n  // Avoid preloading the same CID over and over again\n  const cache = hashlru(options.cache)\n\n  /**\n   * @type {import('./types').Preload}\n   */\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${cid} but preloader is not started`)\n      }\n\n      const path = cid.toString()\n\n      if (cache.has(path)) {\n        // we've preloaded this recently, don't preload it again\n        return\n      }\n\n      // make sure we don't preload this again any time soon\n      cache.set(path, true)\n\n      const fallbackApiUris = shuffle(apiUris)\n      let success = false\n      const now = Date.now()\n\n      for (const uri of fallbackApiUris) {\n        if (stopped) throw new Error(`preload aborted for ${path}`)\n        /** @type {AbortController} */\n        let controller\n\n        try {\n          controller = new AbortController()\n          requests = requests.concat(controller)\n          await preload(`${uri}/api/v0/refs?r=true&arg=${encodeURIComponent(path)}`, { signal: controller.signal })\n          success = true\n        } catch (/** @type {any} */ err) {\n          if (err.type !== 'aborted') log.error(err)\n        } finally {\n          requests = requests.filter(r => r !== controller)\n        }\n\n        if (success) break\n      }\n\n      log(`${success ? '' : 'un'}successfully preloaded ${path} in ${Date.now() - now}ms`)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.start = () => {\n    stopped = false\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.stop = () => {\n    stopped = true\n    log(`aborting ${requests.length} pending preload request(s)`)\n    requests.forEach(r => r.abort())\n    requests = []\n  }\n\n  return api\n}\n","import { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs-preload')\n\n/**\n * @typedef {PreloadOptions & MFSPreloadOptions} Options\n * @typedef {object} MFSPreloadOptions\n * @property {number} [interval]\n * @typedef {import('./types').PreloadOptions} PreloadOptions\n */\n\n/**\n * @param {object} config\n * @param {import('./types').Preload} config.preload\n * @param {import('ipfs-core-types/src/files').API} config.files\n * @param {Options} [config.options]\n */\nexport function createMfsPreloader ({ preload, files, options = {} }) {\n  options.interval = options.interval || 30 * 1000\n\n  if (!options.enabled) {\n    log('MFS preload disabled')\n    const noop = async () => {}\n    return { start: noop, stop: noop }\n  }\n\n  let rootCid = ''\n  /** @type {any} */\n  let timeoutId\n\n  const preloadMfs = async () => {\n    try {\n      const stats = await files.stat('/')\n      const nextRootCid = stats.cid.toString()\n\n      if (rootCid !== nextRootCid) {\n        log(`preloading updated MFS root ${rootCid} -> ${stats.cid}`)\n        await preload(stats.cid)\n        rootCid = nextRootCid\n      }\n    } catch (/** @type {any} */ err) {\n      log.error('failed to preload MFS root', err)\n    } finally {\n      timeoutId = setTimeout(preloadMfs, options.interval)\n    }\n  }\n\n  return {\n    /**\n     * @returns {Promise<void>}\n     */\n    async start () {\n      const stats = await files.stat('/')\n      rootCid = stats.cid.toString()\n      log(`monitoring MFS root ${stats.cid}`)\n      timeoutId = setTimeout(preloadMfs, options.interval)\n    },\n    /**\n     * @returns {void}\n     */\n    stop () {\n      clearTimeout(timeoutId)\n    }\n  }\n}\n","import mortice from 'mortice'\n\n/**\n * @typedef {object} Lock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} readLock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} writeLock\n */\n\n/** @type {Lock} */\nlet lock\n\n/**\n * @param {boolean} [repoOwner]\n */\nexport function createLock (repoOwner = false) {\n  if (lock) {\n    return lock\n  }\n\n  const mutex = mortice({\n    // ordinarily the main thread would store the read/write lock but\n    // if we are the thread that owns the repo, we can store the lock\n    // on this process even if we are a worker thread\n    singleProcess: repoOwner\n  })\n\n  lock = {\n    readLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.readLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    },\n\n    writeLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.writeLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    }\n  }\n\n  return lock\n}\n","import { CID } from 'multiformats/cid'\nimport { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { MFS_ROOT_KEY } from '../../../utils.js'\n\nconst log = logger('ipfs:mfs:utils:with-mfs-root')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport async function loadMfsRoot (context, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n  }\n\n  // Open the repo if it's been closed\n  await context.repo.datastore.open()\n\n  // Load the MFS root CID\n  let cid\n\n  try {\n    const buf = await context.repo.datastore.get(MFS_ROOT_KEY)\n\n    cid = CID.decode(buf)\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n\n    log('Creating new MFS root')\n    const buf = dagPB.encode({\n      Data: new UnixFS({ type: 'directory' }).marshal(),\n      Links: []\n    })\n    const hash = await sha256.digest(buf)\n    cid = CID.createV0(hash)\n    await context.repo.blocks.put(cid, buf)\n\n    if (options && options.signal && options.signal.aborted) {\n      throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n    }\n\n    await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes)\n  }\n\n  log(`Loaded MFS root /ipfs/${cid}`)\n\n  return cid\n}\n","\n/**\n * @param {string} [path]\n */\nexport function toPathComponents (path = '') {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n","import { loadMfsRoot } from './with-mfs-root.js'\nimport { toPathComponents } from './to-path-components.js'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\nconst IPFS_PREFIX = 'ipfs'\n\n/**\n * @typedef {import('ipfs-unixfs-exporter').UnixFSEntry} UnixFSEntry\n * @typedef {import('ipfs-unixfs-exporter').ExporterOptions} ExporterOptions\n * @typedef {import('../').MfsContext} MfsContext\n *\n * @typedef {object} FilePath\n * @property {'mfs' | 'ipfs'} type\n * @property {'file'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {import('ipfs-unixfs').UnixFS} unixfs\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {object} DirectoryPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'directory'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {import('ipfs-unixfs').UnixFS} unixfs\n * @property {(options?: ExporterOptions) => AsyncIterable<UnixFSEntry>} content\n *\n * @typedef {object} ObjectPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'object'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<any>} content\n *\n * @typedef {object} RawPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'raw'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {object} IdentityPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'identity'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {FilePath | DirectoryPath | ObjectPath | RawPath | IdentityPath} MfsPath\n */\n\n/**\n * @param {MfsContext} context\n * @param {string | CID} path\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport const toMfsPath = async (context, path, options) => {\n  const root = await loadMfsRoot(context, options)\n\n  /** @type {MfsPath} */\n  // @ts-expect-error fields get set later\n  let output = {\n    entryType: 'file'\n  }\n\n  let ipfsPath = ''\n\n  if (CID.asCID(path)) {\n    ipfsPath = `/ipfs/${path}`\n  } else {\n    ipfsPath = path.toString()\n  }\n\n  ipfsPath = ipfsPath.trim()\n  ipfsPath = ipfsPath.replace(/(\\/\\/+)/g, '/')\n\n  if (ipfsPath.endsWith('/') && ipfsPath.length > 1) {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1)\n  }\n\n  if (!ipfsPath) {\n    throw errCode(new Error('paths must not be empty'), 'ERR_NO_PATH')\n  }\n\n  if (ipfsPath.substring(0, 1) !== '/') {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (ipfsPath.substring(ipfsPath.length - 1) === '/') {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1)\n  }\n\n  const pathComponents = toPathComponents(ipfsPath)\n\n  if (pathComponents[0] === IPFS_PREFIX) {\n    // e.g. /ipfs/QMfoo or /ipfs/Qmfoo/sub/path\n    let mfsDirectory\n\n    if (pathComponents.length === 2) {\n      mfsDirectory = `/${pathComponents.join('/')}`\n    } else {\n      mfsDirectory = `/${pathComponents.slice(0, pathComponents.length - 1).join('/')}`\n    }\n\n    // @ts-expect-error fields being set\n    output = {\n      type: 'ipfs',\n      depth: pathComponents.length - 2,\n      entryType: 'file',\n\n      mfsPath: `/${pathComponents.join('/')}`,\n      mfsDirectory,\n      parts: pathComponents,\n      path: `/${pathComponents.join('/')}`,\n      name: pathComponents[pathComponents.length - 1]\n    }\n  } else {\n    const mfsPath = `/${IPFS_PREFIX}/${root}${pathComponents.length ? '/' + pathComponents.join('/') : ''}`\n    const mfsDirectory = `/${IPFS_PREFIX}/${root}/${pathComponents.slice(0, pathComponents.length - 1).join('/')}`\n\n    // @ts-expect-error fields being set\n    output = {\n      type: 'mfs',\n      depth: pathComponents.length,\n      entryType: 'file',\n\n      mfsDirectory,\n      mfsPath,\n      parts: pathComponents,\n      path: `/${pathComponents.join('/')}`,\n      name: pathComponents[pathComponents.length - 1]\n    }\n  }\n\n  const cidPath = output.type === 'mfs' ? output.mfsPath : output.path\n\n  try {\n    const res = await exporter(cidPath, context.repo.blocks, options)\n\n    output.cid = res.cid\n    output.mfsPath = `/ipfs/${res.path}`\n    output.entryType = res.type\n    output.content = res.content\n\n    if ((output.entryType === 'file' || output.entryType === 'directory') && (res.type === 'file' || res.type === 'directory')) {\n      output.unixfs = res.unixfs\n    }\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n  }\n\n  output.exists = Boolean(output.cid)\n\n  return output\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport * as dagPB from '@ipld/dag-pb'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:stat')\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} withLocal\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  withLocal: false\n}\n\n/**\n * @typedef {import('ipfs-core-types/src/files').StatResult} StatResult\n */\n\n/**\n * @param {MfsContext} context\n */\nexport function createStat (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"stat\"]}\n   */\n  async function mfsStat (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    log(`Fetching stats for ${path}`)\n\n    const {\n      type,\n      cid,\n      mfsPath\n    } = await toMfsPath(context, path, options)\n\n    const exportPath = type === 'ipfs' && cid ? cid : mfsPath\n    let file\n\n    try {\n      file = await exporter(exportPath, context.repo.blocks)\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error(`${path} does not exist`), 'ERR_NOT_FOUND')\n      }\n\n      throw err\n    }\n\n    if (!statters[file.type]) {\n      throw new Error(`Cannot stat codec ${file.cid.code}`)\n    }\n\n    return statters[file.type](file)\n  }\n\n  return withTimeoutOption(mfsStat)\n}\n\n/** @type {Record<string, (file:any) => StatResult>} */\nconst statters = {\n  /**\n   * @param {import('ipfs-unixfs-exporter').RawNode} file\n   */\n  raw: (file) => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file', // for go compatibility\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').UnixFSFile} file\n   */\n  file: (file) => {\n    /** @type {StatResult} */\n    const stat = {\n      cid: file.cid,\n      type: 'file',\n      size: file.unixfs.fileSize(),\n      cumulativeSize: dagPB.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.unixfs.blockSizes.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    }\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime\n    }\n\n    return stat\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').UnixFSDirectory} file\n   */\n  directory: (file) => {\n    /** @type {StatResult} */\n    const stat = {\n      cid: file.cid,\n      type: 'directory',\n      size: 0,\n      cumulativeSize: dagPB.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.node.Links.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    }\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime\n    }\n\n    return stat\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').ObjectNode} file\n   */\n  object: (file) => {\n    /** @type {StatResult} */\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      type: 'file', // for go compatibility\n      blocks: 0,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').IdentityNode} file\n   */\n  identity: (file) => {\n    /** @type {StatResult} */\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file', // for go compatibility\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  }\n}\n","import { walkPath } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs:utils:to-trail')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport async function toTrail (context, path) {\n  log(`Creating trail for path ${path}`)\n\n  const output = []\n\n  for await (const fsEntry of walkPath(path, context.repo.blocks)) {\n    output.push({\n      name: fsEntry.name,\n      cid: fsEntry.cid,\n      size: fsEntry.size,\n      type: fsEntry.type\n    })\n  }\n\n  return output\n}\n","import { CID } from 'multiformats/cid'\nimport * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * @typedef {object} PersistOptions\n * @property {import('multiformats/codecs/interface').BlockCodec<any, any>} [codec]\n * @property {import('multiformats/hashes/interface').MultihashHasher} [hasher]\n * @property {import('multiformats/cid').Version} [cidVersion]\n * @property {boolean} [onlyHash]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {PersistOptions} options\n */\nexport const persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPB\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPB && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n","import { murmur3128 } from '@multiformats/murmur3'\n\nexport const hamtHashCode = murmur3128.code\nexport const hamtBucketBits = 8\n\n/**\n * @param {Uint8Array} buf\n */\nexport async function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .subarray(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { persist } from './persist.js'\nimport { createHAMT, Bucket } from 'hamt-sharding'\nimport {\n  hamtHashCode,\n  hamtHashFn,\n  hamtBucketBits\n} from './hamt-constants.js'\n\n/**\n * @typedef {import('ipfs-unixfs-importer').ImporterOptions} ImporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n *\n * @typedef {object} ImportResult\n * @property {CID} cid\n * @property {import('@ipld/dag-pb').PBNode} node\n * @property {number} size\n *\n * @typedef {object} DirContents\n * @property {CID} [cid]\n * @property {number} [size]\n *\n * @typedef {object} DirOptions\n * @property {Mtime} [mtime]\n * @property {number} [mode]\n * @property {import('multiformats/codecs/interface').BlockCodec<any, any>} [codec]\n * @property {import('multiformats/cid').Version} [cidVersion]\n * @property {boolean} [onlyHash]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nexport class Dir {\n  /**\n   * @param {DirProps} props\n   * @param {DirOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {DirContents} value\n   */\n  async put (name, value) { }\n  /**\n   * @param {string} name\n   * @returns {Promise<DirContents | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: DirContents}>}\n   */\n  async * eachChildSeries () { }\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) { }\n}\n\nexport class DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {DirOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<DirContents>} */\n    this._bucket = createHAMT({\n      hashFn: hamtHashFn,\n      bits: hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {DirContents} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) {\n    yield * flush(this._bucket, blockstore, this, this.options)\n  }\n}\n\n/**\n * @param {Bucket<?>} bucket\n * @param {Blockstore} blockstore\n * @param {*} shardRoot\n * @param {DirOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, blockstore, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      })\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    node,\n    size\n  }\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding'\nimport { DirSharded } from './dir-sharded.js'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport last from 'it-last'\nimport { CID } from 'multiformats/cid'\nimport {\n  hamtHashCode,\n  hamtHashFn,\n  hamtBucketBits\n} from './hamt-constants.js'\n\nconst log = logger('ipfs:mfs:core:utils:hamt-utils')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} bucket\n * @param {object} options\n * @param {PBNode} options.parent\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {string} options.hashAlg\n */\nexport const updateHamtDirectory = async (context, links, bucket, options) => {\n  if (!options.parent.Data) {\n    throw new Error('Could not update HAMT directory because parent had no data')\n  }\n\n  // update parent with new bit field\n  const data = Uint8Array.from(bucket._children.bitField().reverse())\n  const node = UnixFS.unmarshal(options.parent.Data)\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: hamtHashCode,\n    mode: node.mode,\n    mtime: node.mtime\n  })\n\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const parent = {\n    Data: dir.marshal(),\n    Links: links.sort((a, b) => (a.Name || '').localeCompare(b.Name || ''))\n  }\n  const buf = dagPB.encode(parent)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    node: parent,\n    cid,\n    size: links.reduce((sum, link) => sum + (link.Tsize || 0), buf.length)\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} rootBucket\n * @param {Bucket<any>} parentBucket\n * @param {number} positionAtParent\n */\nexport const recreateHamtLevel = async (context, links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hash: rootBucket._options.hash,\n    bits: rootBucket._options.bits\n  }, parentBucket, positionAtParent)\n  parentBucket._putObjectAt(positionAtParent, bucket)\n\n  await addLinksToHamtBucket(context, links, bucket, rootBucket)\n\n  return bucket\n}\n\n/**\n * @param {PBLink[]} links\n */\nexport const recreateInitialHamtLevel = async (links) => {\n  const bucket = createHAMT({\n    hashFn: hamtHashFn,\n    bits: hamtBucketBits\n  })\n\n  // populate sub bucket but do not recurse as we do not want to pull whole shard in\n  await Promise.all(\n    links.map(async link => {\n      const linkName = (link.Name || '')\n\n      if (linkName.length === 2) {\n        const pos = parseInt(linkName, 16)\n\n        const subBucket = new Bucket({\n          hash: bucket._options.hash,\n          bits: bucket._options.bits\n        }, bucket, pos)\n        bucket._putObjectAt(pos, subBucket)\n\n        return Promise.resolve()\n      }\n\n      return bucket.put(linkName.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n\n  return bucket\n}\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} bucket\n * @param {Bucket<any>} rootBucket\n */\nexport const addLinksToHamtBucket = async (context, links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(async link => {\n      const linkName = (link.Name || '')\n\n      if (linkName.length === 2) {\n        log('Populating sub bucket', linkName)\n        const pos = parseInt(linkName, 16)\n        const block = await context.repo.blocks.get(link.Hash)\n        const node = dagPB.decode(block)\n\n        const subBucket = new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos)\n        bucket._putObjectAt(pos, subBucket)\n\n        await addLinksToHamtBucket(context, node.Links, subBucket, rootBucket)\n\n        return Promise.resolve()\n      }\n\n      return rootBucket.put(linkName.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\n/**\n * @param {number} position\n */\nexport const toPrefix = (position) => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} fileName\n * @param {PBNode} rootNode\n */\nexport const generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateInitialHamtLevel(rootNode.Links)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  /** @type {{ bucket: Bucket<any>, prefix: string, node?: PBNode }[]} */\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    // @ts-expect-error - only the root bucket's parent will be undefined\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load PbNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    if (!segment.node) {\n      throw new Error('Could not generate HAMT path')\n    }\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => (link.Name || '').substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const block = await context.repo.blocks.get(link.Hash)\n    const node = dagPB.decode(block)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(context, node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(context, node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {{ name: string, size: number, cid: CID }[]} contents\n * @param {object} [options]\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nexport const createShard = async (context, contents, options = {}) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mtime: options.mtime,\n    mode: options.mode\n  }, options)\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  const res = await last(shard.flush(context.repo.blocks))\n\n  if (!res) {\n    throw new Error('Flushing shard yielded no result')\n  }\n\n  return res\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { DirSharded } from './dir-sharded.js'\nimport {\n  updateHamtDirectory,\n  recreateHamtLevel,\n  recreateInitialHamtLevel,\n  createShard,\n  toPrefix,\n  addLinksToHamtBucket\n} from './hamt-utils.js'\nimport errCode from 'err-code'\nimport last from 'it-last'\n\nconst log = logger('ipfs:mfs:core:utils:add-link')\n\n/**\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('hamt-sharding').Bucket<any>} Bucket\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {CID} [options.parentCid]\n * @param {PBNode} [options.parent]\n */\nexport async function addLink (context, options) {\n  let parent = options.parent\n\n  if (options.parentCid) {\n    const parentCid = CID.asCID(options.parentCid)\n    if (parentCid === null) {\n      throw errCode(new Error('Invalid CID passed to addLink'), 'EINVALIDPARENTCID')\n    }\n\n    if (parentCid.code !== dagPB.code) {\n      throw errCode(new Error('Unsupported codec. Only DAG-PB is supported'), 'EINVALIDPARENTCID')\n    }\n\n    log(`Loading parent node ${parentCid}`)\n    const block = await context.repo.blocks.get(parentCid)\n    parent = dagPB.decode(block)\n  }\n\n  if (!parent) {\n    throw errCode(new Error('No parent node or CID passed to addLink'), 'EINVALIDPARENT')\n  }\n\n  if (!options.cid) {\n    throw errCode(new Error('No child cid passed to addLink'), 'EINVALIDCHILDCID')\n  }\n\n  if (!options.name) {\n    throw errCode(new Error('No child name passed to addLink'), 'EINVALIDCHILDNAME')\n  }\n\n  if (!options.size && options.size !== 0) {\n    throw errCode(new Error('No child size passed to addLink'), 'EINVALIDCHILDSIZE')\n  }\n\n  if (!parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addLink'), 'ERR_INVALID_PARENT')\n  }\n\n  const meta = UnixFS.unmarshal(parent.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log('Adding link to sharded directory')\n\n    return addToShardedDirectory(context, {\n      ...options,\n      parent\n    })\n  }\n\n  if (parent.Links.length >= options.shardSplitThreshold) {\n    log('Converting directory to sharded directory')\n\n    return convertToShardedDirectory(context, {\n      ...options,\n      parent,\n      mtime: meta.mtime,\n      mode: meta.mode\n    })\n  }\n\n  log(`Adding ${options.name} (${options.cid}) to regular directory`)\n\n  return addToDirectory(context, {\n    ...options,\n    parent\n  })\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nconst convertToShardedDirectory = async (context, options) => {\n  const result = await createShard(context, options.parent.Links.map(link => ({\n    name: (link.Name || ''),\n    size: link.Tsize || 0,\n    cid: link.Hash\n  })).concat({\n    name: options.name,\n    size: options.size,\n    cid: options.cid\n  }), options)\n\n  log(`Converted directory to sharded directory ${result.cid}`)\n\n  return result\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nconst addToDirectory = async (context, options) => {\n  // Remove existing link if it exists\n  const parentLinks = options.parent.Links.filter((link) => {\n    return link.Name !== options.name\n  })\n  parentLinks.push({\n    Name: options.name,\n    Tsize: options.size,\n    Hash: options.cid\n  })\n\n  if (!options.parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addToDirectory'), 'ERR_INVALID_PARENT')\n  }\n\n  const node = UnixFS.unmarshal(options.parent.Data)\n\n  let data\n  if (node.mtime) {\n    // Update mtime if previously set\n    const ms = Date.now()\n    const secs = Math.floor(ms / 1000)\n\n    node.mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n\n    data = node.marshal()\n  } else {\n    data = options.parent.Data\n  }\n  options.parent = dagPB.prepare({\n    Data: data,\n    Links: parentLinks\n  })\n\n  // Persist the new parent PbNode\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const buf = dagPB.encode(options.parent)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    node: options.parent,\n    cid,\n    size: buf.length\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nconst addToShardedDirectory = async (context, options) => {\n  const {\n    shard, path\n  } = await addFileToShardedDirectory(context, options)\n  const result = await last(shard.flush(context.repo.blocks))\n\n  if (!result) {\n    throw new Error('No result from flushing shard')\n  }\n\n  const block = await context.repo.blocks.get(result.cid)\n  const node = dagPB.decode(block)\n\n  // we have written out the shard, but only one sub-shard will have been written so replace it in the original shard\n  const parentLinks = options.parent.Links.filter((link) => {\n    // TODO vmx 2021-03-31: Check that there cannot be multiple ones matching\n    // Remove the old link\n    return (link.Name || '').substring(0, 2) !== path[0].prefix\n  })\n\n  const newLink = node.Links\n    .find(link => (link.Name || '').substring(0, 2) === path[0].prefix)\n\n  if (!newLink) {\n    throw new Error(`No link found with prefix ${path[0].prefix}`)\n  }\n\n  parentLinks.push(newLink)\n\n  return updateHamtDirectory(context, parentLinks, path[0].bucket, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n */\nconst addFileToShardedDirectory = async (context, options) => {\n  const file = {\n    name: options.name,\n    cid: options.cid,\n    size: options.size\n  }\n\n  if (!options.parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addFileToShardedDirectory'), 'ERR_INVALID_PARENT')\n  }\n\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateInitialHamtLevel(options.parent.Links)\n  const node = UnixFS.unmarshal(options.parent.Data)\n\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mode: node.mode\n  }, options)\n  shard._bucket = rootBucket\n\n  if (node.mtime) {\n    // update mtime if previously set\n    shard.mtime = {\n      secs: Math.round(Date.now() / 1000)\n    }\n  }\n\n  // load subshards until the bucket & position no longer changes\n  const position = await rootBucket._findNewBucketAndPos(file.name)\n  const path = toBucketPath(position)\n  path[0].node = options.parent\n  let index = 0\n\n  while (index < path.length) {\n    const segment = path[index]\n    index++\n    const node = segment.node\n\n    if (!node) {\n      throw new Error('Segment had no node')\n    }\n\n    const link = node.Links\n      .find(link => (link.Name || '').substring(0, 2) === segment.prefix)\n\n    if (!link) {\n      // prefix is new, file will be added to the current bucket\n      log(`Link ${segment.prefix}${file.name} will be added`)\n      index = path.length\n\n      break\n    }\n\n    if (link.Name === `${segment.prefix}${file.name}`) {\n      // file already existed, file will be added to the current bucket\n      log(`Link ${segment.prefix}${file.name} will be replaced`)\n      index = path.length\n\n      break\n    }\n\n    if ((link.Name || '').length > 2) {\n      // another file had the same prefix, will be replaced with a subshard\n      log(`Link ${link.Name} ${link.Hash} will be replaced with a subshard`)\n      index = path.length\n\n      break\n    }\n\n    // load sub-shard\n    log(`Found subshard ${segment.prefix}`)\n    const block = await context.repo.blocks.get(link.Hash)\n    const subShard = dagPB.decode(block)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[index]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n      await recreateHamtLevel(context, subShard.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n\n      const position = await rootBucket._findNewBucketAndPos(file.name)\n\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: subShard\n      })\n\n      break\n    }\n\n    const nextSegment = path[index]\n\n    // add next levels worth of links to bucket\n    await addLinksToHamtBucket(context, subShard.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = subShard\n  }\n\n  // finally add the new file into the shard\n  await shard._bucket.put(file.name, {\n    size: file.size,\n    cid: file.cid\n  })\n\n  return {\n    shard, path\n  }\n}\n\n/**\n * @param {{ pos: number, bucket: Bucket }} position\n * @returns {{ bucket: Bucket, prefix: string, node?: PBNode }[]}\n */\nconst toBucketPath = (position) => {\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n\n  let bucket = position.bucket._parent\n  let positionInBucket = position.bucket._posAtParent\n\n  while (bucket) {\n    path.push({\n      bucket,\n      prefix: toPrefix(positionInBucket)\n    })\n\n    positionInBucket = bucket._posAtParent\n    bucket = bucket._parent\n  }\n\n  path.reverse()\n\n  return path\n}\n","import { logger } from '@libp2p/logger'\nimport { addLink } from './add-link.js'\nimport {\n  decode\n} from '@ipld/dag-pb'\n\nconst log = logger('ipfs:mfs:utils:update-tree')\n\nconst defaultOptions = {\n  shardSplitThreshold: 1000\n}\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('./to-trail').MfsTrail} MfsTrail\n */\n\n/**\n * Loop backwards through the trail, replacing links of all components to update CIDs\n *\n * @param {MfsContext} context\n * @param {MfsTrail[]} trail\n * @param {object} options\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nexport async function updateTree (context, trail, options) {\n  options = Object.assign({}, defaultOptions, options)\n\n  log('Trail', trail)\n  trail = trail.slice().reverse()\n\n  let index = 0\n  let child\n\n  for await (const block of context.repo.blocks.getMany(trail.map(node => node.cid))) {\n    const node = decode(block)\n    const cid = trail[index].cid\n    const name = trail[index].name\n    index++\n\n    if (!child) {\n      child = {\n        cid,\n        name,\n        size: block.length\n      }\n\n      continue\n    }\n\n    /** @type {{ cid: CID, size: number }} */\n    const result = await addLink(context, {\n      parent: node,\n      name: child.name,\n      cid: child.cid,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    })\n\n    // new child for next loop\n    child = {\n      cid: result.cid,\n      name,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: result.size\n    }\n  }\n\n  // @ts-expect-error - child is possibly undefined\n  const { cid } = child\n  log(`Final CID ${cid}`)\n\n  return cid\n}\n","import { logger } from '@libp2p/logger'\nimport {\n  MFS_ROOT_KEY\n} from '../../../utils.js'\nimport errCode from 'err-code'\n\nconst log = logger('ipfs:mfs:utils:update-mfs-root')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('multiformats/cid').CID} cid\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\nexport async function updateMfsRoot (context, cid, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n  }\n\n  log(`New MFS root will be ${cid}`)\n\n  await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes)\n\n  return cid\n}\n","import errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport { createNode } from './utils/create-node.js'\nimport { toPathComponents } from './utils/to-path-components.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { addLink } from './utils/add-link.js'\nimport { loadMfsRoot } from './utils/with-mfs-root.js'\nimport mergeOpts from 'merge-options'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:mkdir')\n\n/**\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {boolean} flush\n * @property {number} [mode]\n * @property {MtimeLike} [mtime]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  shardSplitThreshold: 1000,\n  flush: true\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createMkdir (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mkdir\"]}\n   */\n  async function mfsMkdir (path, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    if (!path) {\n      throw new Error('no path given to Mkdir')\n    }\n\n    path = path.trim()\n\n    if (path === '/') {\n      if (opts.parents) {\n        return\n      }\n\n      throw errCode(new Error('cannot create directory \\'/\\': Already exists'), 'ERR_INVALID_PATH')\n    }\n\n    if (path.substring(0, 1) !== '/') {\n      throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n    }\n\n    log(`Creating ${path}`)\n\n    const pathComponents = toPathComponents(path)\n\n    if (pathComponents[0] === 'ipfs') {\n      throw errCode(new Error(\"path cannot have the prefix 'ipfs'\"), 'ERR_INVALID_PATH')\n    }\n\n    const root = await loadMfsRoot(context, opts)\n    let parent\n    const trail = []\n    const emptyDir = await createNode(context, 'directory', opts)\n\n    // make sure the containing folder exists, creating it if necessary\n    for (let i = 0; i <= pathComponents.length; i++) {\n      const subPathComponents = pathComponents.slice(0, i)\n      const subPath = `/ipfs/${root}/${subPathComponents.join('/')}`\n\n      try {\n        parent = await exporter(subPath, context.repo.blocks)\n\n        if (parent.type !== 'file' && parent.type !== 'directory') {\n          throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n        }\n\n        if (i === pathComponents.length) {\n          if (opts.parents) {\n            return\n          }\n\n          throw errCode(new Error('file already exists'), 'ERR_ALREADY_EXISTS')\n        }\n\n        trail.push({\n          name: parent.name,\n          cid: parent.cid\n        })\n      } catch (/** @type {any} */ err) {\n        if (err.code === 'ERR_NOT_FOUND') {\n          if (i < pathComponents.length && !opts.parents) {\n            throw errCode(new Error(`Intermediate directory path ${subPath} does not exist, use the -p flag to create it`), 'ERR_NOT_FOUND')\n          }\n\n          // add the intermediate directory\n          await addEmptyDir(context, subPathComponents[subPathComponents.length - 1], emptyDir, trail[trail.length - 1], trail, opts)\n        } else {\n          throw err\n        }\n      }\n    }\n\n    // add an empty dir to the last path component\n    // await addEmptyDir(context, pathComponents[pathComponents.length - 1], emptyDir, parent, trail)\n\n    // update the tree from the leaf to the root\n    const newRootCid = await updateTree(context, trail, opts)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, opts)\n  }\n\n  return withTimeoutOption(mfsMkdir)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} childName\n * @param {{ cid: CID, node?: PBNode }} emptyDir\n * @param {{ cid?: CID, node?: PBNode }} parent\n * @param {{ name: string, cid: CID }[]} trail\n * @param {DefaultOptions} options\n */\nconst addEmptyDir = async (context, childName, emptyDir, parent, trail, options) => {\n  log(`Adding empty dir called ${childName} to ${parent.cid}`)\n\n  const result = await addLink(context, {\n    parent: parent.node,\n    parentCid: parent.cid,\n    // TODO vmx 2021-03-09: Remove the usage of size completely\n    size: 0,\n    cid: emptyDir.cid,\n    name: childName,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  trail[trail.length - 1].cid = result.cid\n\n  trail.push({\n    name: childName,\n    cid: emptyDir.cid\n  })\n}\n","import { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {'file' | 'directory'} type\n * @param {object} options\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {MtimeLike} [options.mtime]\n * @param {number} [options.mode]\n */\nexport async function createNode (context, type, options) {\n  const metadata = new UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  })\n\n  // Persist the new parent PBNode\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const node = {\n    Data: metadata.marshal(),\n    Links: []\n  }\n  const buf = dagPB.encode(node)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    cid,\n    node\n  }\n}\n","import { createMkdir } from './mkdir.js'\nimport { createStat } from './stat.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { addLink } from './utils/add-link.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport mergeOpts from 'merge-options'\nimport { toTrail } from './utils/to-trail.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:cp')\n\n/**\n * @typedef {import('@ipld/dag-pb').PBNode} DAGNode\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('./utils/to-mfs-path').MfsPath} MfsPath\n * @typedef {import('./utils/to-trail').MfsTrail} MfsTrail\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createCp (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"cp\"]}\n   */\n  async function mfsCp (from, to, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    if (!Array.isArray(from)) {\n      from = [from]\n    }\n\n    const sources = await Promise.all(\n      from.map((/** @type {CID | string} */ path) => toMfsPath(context, path, options))\n    )\n    let destination = await toMfsPath(context, to, options)\n\n    if (!sources.length || !destination) {\n      throw errCode(new Error('Please supply at least one source'), 'ERR_INVALID_PARAMS')\n    }\n\n    // make sure all sources exist\n    const missing = sources.find(source => !source.exists)\n\n    if (missing) {\n      throw errCode(new Error(`${missing.path} does not exist`), 'ERR_INVALID_PARAMS')\n    }\n\n    const destinationIsDirectory = isDirectory(destination)\n\n    if (destination.exists) {\n      log('Destination exists')\n\n      if (sources.length === 1 && !destinationIsDirectory) {\n        throw errCode(new Error('directory already has entry by that name'), 'ERR_ALREADY_EXISTS')\n      }\n    } else {\n      log('Destination does not exist')\n\n      if (sources.length > 1) {\n        // copying multiple files to one location, destination will be a directory\n        if (!options.parents) {\n          throw errCode(new Error('destination did not exist, pass -p to create intermediate directories'), 'ERR_INVALID_PARAMS')\n        }\n\n        await createMkdir(context)(destination.path, options)\n        destination = await toMfsPath(context, destination.path, options)\n      } else if (destination.parts.length > 1) {\n        // copying to a folder, create it if necessary\n        const parentFolder = `/${destination.parts.slice(0, -1).join('/')}`\n\n        try {\n          await createStat(context)(parentFolder, options)\n        } catch (/** @type {any} */ err) {\n          if (err.code !== 'ERR_NOT_FOUND') {\n            throw err\n          }\n\n          if (!options.parents) {\n            throw errCode(new Error('destination did not exist, pass -p to create intermediate directories'), 'ERR_INVALID_PARAMS')\n          }\n\n          await createMkdir(context)(parentFolder, options)\n          destination = await toMfsPath(context, destination.path, options)\n        }\n      }\n    }\n\n    const destinationPath = isDirectory(destination) ? destination.mfsPath : destination.mfsDirectory\n    const trail = await toTrail(context, destinationPath)\n\n    if (sources.length === 1) {\n      const source = sources.pop()\n\n      if (!source) {\n        throw errCode(new Error('could not find source'), 'ERR_INVALID_PARAMS')\n      }\n\n      const destinationName = destinationIsDirectory ? source.name : destination.name\n\n      log(`Only one source, copying to destination ${destinationIsDirectory ? 'directory' : 'file'} ${destinationName}`)\n\n      return copyToFile(context, source, destinationName, trail, options)\n    }\n\n    log('Multiple sources, wrapping in a directory')\n    return copyToDirectory(context, sources, destination, trail, options)\n  }\n\n  return withTimeoutOption(mfsCp)\n}\n\n/**\n * @param {*} destination\n */\nconst isDirectory = (destination) => {\n  return destination.unixfs &&\n    destination.unixfs.type &&\n    destination.unixfs.type.includes('directory')\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath} source\n * @param {string} destination\n * @param {MfsTrail[]} destinationTrail\n * @param {DefaultOptions} options\n */\nconst copyToFile = async (context, source, destination, destinationTrail, options) => {\n  let parent = destinationTrail.pop()\n\n  if (!parent) {\n    throw errCode(new Error('destination had no parent'), 'ERR_INVALID_PARAMS')\n  }\n\n  parent = await addSourceToParent(context, source, destination, parent, options)\n\n  // update the tree with the new containing directory\n  destinationTrail.push(parent)\n\n  const newRootCid = await updateTree(context, destinationTrail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath[]} sources\n * @param {*} destination\n * @param {MfsTrail[]} destinationTrail\n * @param {DefaultOptions} options\n */\nconst copyToDirectory = async (context, sources, destination, destinationTrail, options) => {\n  // copy all the sources to the destination\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i]\n\n    destination = await addSourceToParent(context, source, source.name, destination, options)\n  }\n\n  // update the tree with the new containing directory\n  destinationTrail[destinationTrail.length - 1] = destination\n\n  const newRootCid = await updateTree(context, destinationTrail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath} source\n * @param {string} childName\n * @param {*} parent\n * @param {DefaultOptions} options\n * @returns {Promise<MfsTrail>}\n */\nconst addSourceToParent = async (context, source, childName, parent, options) => {\n  const sourceBlock = await context.repo.blocks.get(source.cid)\n  const {\n    node,\n    cid,\n    size\n  } = await addLink(context, {\n    parentCid: parent.cid,\n    size: sourceBlock.length,\n    cid: source.cid,\n    name: childName,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  parent.node = node\n  parent.cid = cid\n  parent.size = size\n\n  return parent\n}\n","\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport {\n  generatePath,\n  updateHamtDirectory\n} from './hamt-utils.js'\nimport errCode from 'err-code'\n\nconst log = logger('ipfs:mfs:core:utils:remove-link')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('hamt-sharding').Bucket<any>} Bucket\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @typedef {object} RemoveLinkOptions\n * @property {string} name\n * @property {number} shardSplitThreshold\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {boolean} flush\n * @property {CID} [parentCid]\n * @property {PBNode} [parent]\n *\n * @typedef {object} RemoveLinkOptionsInternal\n * @property {string} name\n * @property {number} shardSplitThreshold\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {boolean} flush\n * @property {PBNode} parent\n */\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptions} options\n */\nexport async function removeLink (context, options) {\n  let parent = options.parent\n\n  if (options.parentCid) {\n    const parentCid = CID.asCID(options.parentCid)\n    if (parentCid === null) {\n      throw errCode(new Error('Invalid CID passed to removeLink'), 'EINVALIDPARENTCID')\n    }\n\n    log(`Loading parent node ${parentCid}`)\n    const block = await context.repo.blocks.get(parentCid)\n    parent = dagPB.decode(block)\n  }\n\n  if (!parent) {\n    throw errCode(new Error('No parent node or CID passed to removeLink'), 'EINVALIDPARENT')\n  }\n\n  if (!options.name) {\n    throw errCode(new Error('No child name passed to removeLink'), 'EINVALIDCHILDNAME')\n  }\n\n  if (!parent.Data) {\n    throw errCode(new Error('Parent node had no data'), 'ERR_INVALID_NODE')\n  }\n\n  const meta = UnixFS.unmarshal(parent.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log(`Removing ${options.name} from sharded directory`)\n\n    return removeFromShardedDirectory(context, {\n      ...options,\n      parent\n    })\n  }\n\n  log(`Removing link ${options.name} regular directory`)\n\n  return removeFromDirectory(context, {\n    ...options,\n    parent\n  })\n}\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptionsInternal} options\n */\nconst removeFromDirectory = async (context, options) => {\n  // Remove existing link if it exists\n  options.parent.Links = options.parent.Links.filter((link) => {\n    return link.Name !== options.name\n  })\n\n  const parentBlock = await dagPB.encode(options.parent)\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const hash = await hasher.digest(parentBlock)\n  const parentCid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  await context.repo.blocks.put(parentCid, parentBlock)\n\n  log(`Updated regular directory ${parentCid}`)\n\n  return {\n    node: options.parent,\n    cid: parentCid\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptionsInternal} options\n */\nconst removeFromShardedDirectory = async (context, options) => {\n  const {\n    rootBucket, path\n  } = await generatePath(context, options.name, options.parent)\n\n  await rootBucket.del(options.name)\n\n  const {\n    node\n  } = await updateShard(context, path, options.name, options)\n\n  return updateHamtDirectory(context, node.Links, rootBucket, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {{ bucket: Bucket, prefix: string, node?: PBNode }[]} positions\n * @param {string} name\n * @param {RemoveLinkOptionsInternal} options\n * @returns {Promise<{ node: PBNode, cid: CID, size: number }>}\n */\nconst updateShard = async (context, positions, name, options) => {\n  const last = positions.pop()\n\n  if (!last) {\n    throw errCode(new Error('Could not find parent'), 'EINVALIDPARENT')\n  }\n\n  const {\n    bucket,\n    prefix,\n    node\n  } = last\n\n  if (!node) {\n    throw errCode(new Error('Could not find parent'), 'EINVALIDPARENT')\n  }\n\n  const link = node.Links\n    .find(link => (link.Name || '').substring(0, 2) === prefix)\n\n  if (!link) {\n    throw errCode(new Error(`No link found with prefix ${prefix} for file ${name}`), 'ERR_NOT_FOUND')\n  }\n\n  if (link.Name === `${prefix}${name}`) {\n    log(`Removing existing link ${link.Name}`)\n\n    const links = node.Links.filter((nodeLink) => {\n      return nodeLink.Name !== link.Name\n    })\n\n    await bucket.del(name)\n\n    return updateHamtDirectory(context, links, bucket, options)\n  }\n\n  log(`Descending into sub-shard ${link.Name} for ${prefix}${name}`)\n\n  const result = await updateShard(context, positions, name, options)\n\n  let cid = result.cid\n  let size = result.size\n  let newName = prefix\n\n  if (result.node.Links.length === 1) {\n    log(`Removing subshard for ${prefix}`)\n\n    // convert shard back to normal dir\n    const link = result.node.Links[0]\n\n    newName = `${prefix}${(link.Name || '').substring(2)}`\n    cid = link.Hash\n    size = link.Tsize || 0\n  }\n\n  log(`Updating shard ${prefix} with name ${newName}`)\n\n  return updateShardParent(context, bucket, node, prefix, newName, size, cid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {Bucket} bucket\n * @param {PBNode} parent\n * @param {string} oldName\n * @param {string} newName\n * @param {number} size\n * @param {CID} cid\n * @param {RemoveLinkOptionsInternal} options\n */\nconst updateShardParent = (context, bucket, parent, oldName, newName, size, cid, options) => {\n  // Remove existing link if it exists\n  const parentLinks = parent.Links.filter((link) => {\n    return link.Name !== oldName\n  })\n  parentLinks.push({\n    Name: newName,\n    Tsize: size,\n    Hash: cid\n  })\n\n  return updateHamtDirectory(context, parentLinks, bucket, options)\n}\n","import errCode from 'err-code'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { removeLink } from './utils/remove-link.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { toTrail } from './utils/to-trail.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} recursive\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  recursive: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  flush: true,\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRm (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"rm\"]}\n   */\n  async function mfsRm (paths, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    if (!Array.isArray(paths)) {\n      paths = [paths]\n    }\n\n    const sources = await Promise.all(\n      paths.map(path => toMfsPath(context, path, options))\n    )\n\n    if (!sources.length) {\n      throw errCode(new Error('Please supply at least one path to remove'), 'ERR_INVALID_PARAMS')\n    }\n\n    sources.forEach(source => {\n      if (source.path === '/') {\n        throw errCode(new Error('Cannot delete root'), 'ERR_INVALID_PARAMS')\n      }\n    })\n\n    for (const source of sources) {\n      await removePath(context, source.path, options)\n    }\n  }\n\n  return withTimeoutOption(mfsRm)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {DefaultOptions} options\n */\nconst removePath = async (context, path, options) => {\n  const mfsPath = await toMfsPath(context, path, options)\n  const trail = await toTrail(context, mfsPath.mfsPath)\n  const child = trail[trail.length - 1]\n  trail.pop()\n  const parent = trail[trail.length - 1]\n\n  if (!parent) {\n    throw errCode(new Error(`${path} does not exist`), 'ERR_NOT_FOUND')\n  }\n\n  if (child.type === 'directory' && !options.recursive) {\n    throw errCode(new Error(`${path} is a directory, use -r to remove directories`), 'ERR_WAS_DIR')\n  }\n\n  const {\n    cid\n  } = await removeLink(context, {\n    parentCid: parent.cid,\n    name: child.name,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  parent.cid = cid\n\n  // update the tree with the new child\n  const newRootCid = await updateTree(context, trail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { toTrail } from './utils/to-trail.js'\nimport { addLink } from './utils/add-link.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { pipe } from 'it-pipe'\nimport { importer } from 'ipfs-unixfs-importer'\nimport { recursive } from 'ipfs-unixfs-exporter'\nimport last from 'it-last'\nimport { createCp } from './cp.js'\nimport { createRm } from './rm.js'\nimport { persist } from './utils/persist.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:touch')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('./').MfsContext} MfsContext\n *\n * @typedef {object} DefaultOptions\n * @property {boolean} flush\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {boolean} recursive\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  flush: true,\n  shardSplitThreshold: 1000,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  recursive: false\n}\n\n/**\n * @param {string} mode\n * @param {number} originalMode\n * @param {boolean} isDirectory\n */\nfunction calculateModification (mode, originalMode, isDirectory) {\n  let modification = 0\n\n  if (mode.includes('x') || (mode.includes('X') && (isDirectory || (originalMode & 0o1 || originalMode & 0o10 || originalMode & 0o100)))) {\n    modification += 1\n  }\n\n  if (mode.includes('w')) {\n    modification += 2\n  }\n\n  if (mode.includes('r')) {\n    modification += 4\n  }\n\n  return modification\n}\n\n/**\n * @param {string} references\n * @param {number} modification\n */\nfunction calculateUGO (references, modification) {\n  let ugo = 0\n\n  if (references.includes('u')) {\n    ugo += (modification << 6)\n  }\n\n  if (references.includes('g')) {\n    ugo += (modification << 3)\n  }\n\n  if (references.includes('o')) {\n    ugo += (modification)\n  }\n\n  return ugo\n}\n\n/**\n * @param {string} references\n * @param {string} mode\n * @param {number} modification\n */\nfunction calculateSpecial (references, mode, modification) {\n  if (mode.includes('t')) {\n    modification += parseInt('1000', 8)\n  }\n\n  if (mode.includes('s')) {\n    if (references.includes('u')) {\n      modification += parseInt('4000', 8)\n    }\n\n    if (references.includes('g')) {\n      modification += parseInt('2000', 8)\n    }\n  }\n\n  return modification\n}\n\n/**\n * https://en.wikipedia.org/wiki/Chmod#Symbolic_modes\n *\n * @param {string} input\n * @param {number} originalMode\n * @param {boolean} isDirectory\n */\nfunction parseSymbolicMode (input, originalMode, isDirectory) {\n  if (!originalMode) {\n    originalMode = 0\n  }\n\n  const match = input.match(/^(u?g?o?a?)(-?\\+?=?)?(r?w?x?X?s?t?)$/)\n\n  if (!match) {\n    throw new Error(`Invalid file mode: ${input}`)\n  }\n\n  let [\n    ,\n    references,\n    operator,\n    mode\n  ] = match\n\n  if (references === 'a' || !references) {\n    references = 'ugo'\n  }\n\n  let modification = calculateModification(mode, originalMode, isDirectory)\n  modification = calculateUGO(references, modification)\n  modification = calculateSpecial(references, mode, modification)\n\n  if (operator === '=') {\n    if (references.includes('u')) {\n      // blank u bits\n      originalMode = originalMode & parseInt('7077', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    if (references.includes('g')) {\n      // blank g bits\n      originalMode = originalMode & parseInt('7707', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    if (references.includes('o')) {\n      // blank o bits\n      originalMode = originalMode & parseInt('7770', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    return originalMode\n  }\n\n  if (operator === '+') {\n    return modification | originalMode\n  }\n\n  if (operator === '-') {\n    return modification ^ originalMode\n  }\n\n  return originalMode\n}\n\n/**\n * @param {string | InstanceType<typeof window.String> | number} mode\n * @param {UnixFS} metadata\n * @returns {number}\n */\nfunction calculateMode (mode, metadata) {\n  if (mode instanceof String || typeof mode === 'string') {\n    const strMode = `${mode}`\n\n    if (strMode.match(/^\\d+$/g)) {\n      mode = parseInt(strMode, 8)\n    } else {\n      mode = 0 + strMode.split(',').reduce((curr, acc) => {\n        return parseSymbolicMode(acc, curr, metadata.isDirectory())\n      }, metadata.mode || 0)\n    }\n  }\n\n  return mode\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createChmod (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"chmod\"]}\n   */\n  async function mfsChmod (path, mode, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    log(`Fetching stats for ${path}`)\n\n    const {\n      cid,\n      mfsDirectory,\n      name\n    } = await toMfsPath(context, path, opts)\n\n    if (cid.code !== dagPB.code) {\n      throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n    }\n\n    if (opts.recursive) {\n      // recursively export from root CID, change perms of each entry then reimport\n      // but do not reimport files, only manipulate dag-pb nodes\n      const root = await pipe(\n        async function * () {\n          for await (const entry of recursive(cid, context.repo.blocks)) {\n            if (entry.type !== 'file' && entry.type !== 'directory') {\n              throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n            }\n\n            entry.unixfs.mode = calculateMode(mode, entry.unixfs)\n\n            const node = dagPB.prepare({\n              Data: entry.unixfs.marshal(),\n              Links: entry.node.Links\n            })\n\n            yield {\n              path: entry.path,\n              content: node\n            }\n          }\n        },\n        // @ts-expect-error we account for the incompatible source type with our custom dag builder below\n        (source) => importer(source, context.repo.blocks, {\n          ...opts,\n          pin: false,\n          dagBuilder: async function * (source, block, opts) {\n            for await (const entry of source) {\n              yield async function () {\n                /** @type {PBNode} */\n                // @ts-expect-error - cannot derive type\n                const node = entry.content\n\n                const buf = dagPB.encode(node)\n                const cid = await persist(buf, block, opts)\n\n                if (!node.Data) {\n                  throw errCode(new Error(`${cid} had no data`), 'ERR_INVALID_NODE')\n                }\n\n                const unixfs = UnixFS.unmarshal(node.Data)\n\n                return {\n                  cid,\n                  size: buf.length,\n                  path: entry.path,\n                  unixfs\n                }\n              }\n            }\n          }\n        }),\n        (nodes) => last(nodes)\n      )\n\n      if (!root) {\n        throw errCode(new Error(`Could not chmod ${path}`), 'ERR_COULD_NOT_CHMOD')\n      }\n\n      // remove old path from mfs\n      await createRm(context)(path, opts)\n\n      // add newly created tree to mfs at path\n      await createCp(context)(`/ipfs/${root.cid}`, path, opts)\n\n      return\n    }\n\n    const block = await context.repo.blocks.get(cid)\n    const node = dagPB.decode(block)\n\n    if (!node.Data) {\n      throw errCode(new Error(`${cid} had no data`), 'ERR_INVALID_NODE')\n    }\n\n    const metadata = UnixFS.unmarshal(node.Data)\n    metadata.mode = calculateMode(mode, metadata)\n    const updatedBlock = dagPB.encode({\n      Data: metadata.marshal(),\n      Links: node.Links\n    })\n\n    const hashAlg = opts.hashAlg || defaultOptions.hashAlg\n    const hasher = await context.hashers.getHasher(hashAlg)\n    const hash = await hasher.digest(updatedBlock)\n    const updatedCid = CID.create(opts.cidVersion, dagPB.code, hash)\n\n    if (opts.flush) {\n      await context.repo.blocks.put(updatedCid, updatedBlock)\n    }\n\n    const trail = await toTrail(context, mfsDirectory)\n    const parent = trail[trail.length - 1]\n    const parentCid = CID.decode(parent.cid.bytes)\n    const parentBlock = await context.repo.blocks.get(parentCid)\n    const parentNode = dagPB.decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: name,\n      cid: updatedCid,\n      size: updatedBlock.length,\n      flush: opts.flush,\n      // TODO vmx 2021-03-29: decide on the API, whether it should be a `hashAlg` or `hasher`\n      hashAlg,\n      cidVersion: cid.version,\n      shardSplitThreshold: Infinity\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, opts)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, opts)\n  }\n\n  return withTimeoutOption(mfsChmod)\n}\n","import { createStat } from './stat.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {}\n\n/**\n * @param {MfsContext} context\n */\nexport function createFlush (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"flush\"]}\n   */\n  async function mfsFlush (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    const { cid } = await createStat(context)(path, options)\n\n    return cid\n  }\n\n  return withTimeoutOption(mfsFlush)\n}\n","import { createCp } from './cp.js'\nimport { createRm } from './rm.js'\nimport mergeOpts from 'merge-options'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createMv (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mv\"]}\n   */\n  async function mfsMv (from, to, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    await createCp(context)(from, to, opts)\n    await createRm(context)(from, {\n      ...opts,\n      recursive: true\n    })\n  }\n\n  return withTimeoutOption(mfsMv)\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { toTrail } from './utils/to-trail.js'\nimport { addLink } from './utils/add-link.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:touch')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {MtimeLike} [mtime]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  flush: true,\n  shardSplitThreshold: 1000,\n  cidVersion: 0,\n  hashAlg: 'sha2-256'\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createTouch (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"touch\"]}\n   */\n  async function mfsTouch (path, options = {}) {\n    /** @type {DefaultOptions} */\n    const settings = mergeOptions(defaultOptions, options)\n    settings.mtime = settings.mtime || new Date()\n\n    log(`Touching ${path} mtime: ${settings.mtime}`)\n\n    const {\n      cid,\n      mfsDirectory,\n      name,\n      exists\n    } = await toMfsPath(context, path, settings)\n\n    const hashAlg = options.hashAlg || defaultOptions.hashAlg\n    const hasher = await context.hashers.getHasher(hashAlg)\n\n    let updatedBlock\n    let updatedCid\n\n    let cidVersion = settings.cidVersion\n\n    if (!exists) {\n      const metadata = new UnixFS({\n        type: 'file',\n        mtime: settings.mtime\n      })\n      updatedBlock = dagPB.encode({ Data: metadata.marshal(), Links: [] })\n\n      const hash = await hasher.digest(updatedBlock)\n\n      updatedCid = CID.create(settings.cidVersion, dagPB.code, hash)\n\n      if (settings.flush) {\n        await context.repo.blocks.put(updatedCid, updatedBlock)\n      }\n    } else {\n      if (cid.code !== dagPB.code) {\n        throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n      }\n\n      cidVersion = cid.version\n\n      const block = await context.repo.blocks.get(cid)\n      const node = dagPB.decode(block)\n\n      if (!node.Data) {\n        throw errCode(new Error(`${path} had no data`), 'ERR_INVALID_NODE')\n      }\n\n      const metadata = UnixFS.unmarshal(node.Data)\n\n      // @ts-expect-error TODO: restore setting all date types as mtime - it's in the code, just not the signature\n      metadata.mtime = settings.mtime\n\n      updatedBlock = dagPB.encode({\n        Data: metadata.marshal(),\n        Links: node.Links\n      })\n\n      const hash = await hasher.digest(updatedBlock)\n      updatedCid = CID.create(settings.cidVersion, dagPB.code, hash)\n\n      if (settings.flush) {\n        await context.repo.blocks.put(updatedCid, updatedBlock)\n      }\n    }\n\n    const trail = await toTrail(context, mfsDirectory)\n    const parent = trail[trail.length - 1]\n    const parentCid = parent.cid\n    const parentBlock = await context.repo.blocks.get(parentCid)\n    const parentNode = dagPB.decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: name,\n      cid: updatedCid,\n      size: updatedBlock.length,\n      flush: settings.flush,\n      shardSplitThreshold: settings.shardSplitThreshold,\n      hashAlg: settings.hashAlg,\n      cidVersion\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, settings)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, settings)\n  }\n\n  return withTimeoutOption(mfsTouch)\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRead (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"read\"]}\n   */\n  function mfsRead (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    return {\n      [Symbol.asyncIterator]: async function * read () {\n        const mfsPath = await toMfsPath(context, path, options)\n        const result = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n        if (result.type !== 'file' && result.type !== 'raw') {\n          throw errCode(new Error(`${path} was not a file or raw bytes`), 'ERR_NOT_FILE')\n        }\n\n        if (!result.content) {\n          throw errCode(new Error(`Could not load content stream from ${path}`), 'ERR_NO_CONTENT')\n        }\n\n        for await (const buf of result.content({\n          offset: options.offset,\n          length: options.length\n        })) {\n          yield buf\n        }\n      }\n    }\n  }\n\n  return withTimeoutOption(mfsRead)\n}\n","import errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\n\nconst log = logger('ipfs:mfs:utils:to-async-iterator')\n\n/**\n * @param {*} content\n */\nexport function toAsyncIterator (content) {\n  if (!content) {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string')\n\n    content = uint8ArrayFromString(content.toString())\n  }\n\n  if (content.length) {\n    log('Content was array-like')\n\n    return {\n      [Symbol.asyncIterator]: function * bufferContent () {\n        yield content\n      }\n    }\n  }\n\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator')\n    return content\n  }\n\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator')\n    return content\n  }\n\n  if (global.Blob && content instanceof global.Blob) {\n    // HTML5 Blob objects (including Files)\n    log('Content was an HTML5 Blob')\n    return browserStreamToIt(content.stream())\n  }\n\n  throw errCode(new Error(`Don't know how to convert ${content} into an async iterator`), 'ERR_INVALID_PARAMS')\n}\n","import { logger } from '@libp2p/logger'\nimport { importer } from 'ipfs-unixfs-importer'\nimport {\n  decode\n} from '@ipld/dag-pb'\nimport { createStat } from './stat.js'\nimport { createMkdir } from './mkdir.js'\nimport { addLink } from './utils/add-link.js'\nimport mergeOpts from 'merge-options'\nimport { createLock } from './utils/create-lock.js'\nimport { toAsyncIterator } from './utils/to-async-iterator.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { toPathComponents } from './utils/to-path-components.js'\nimport { toTrail } from './utils/to-trail.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport errCode from 'err-code'\nimport {\n  MFS_MAX_CHUNK_SIZE\n} from '../../utils.js'\nimport last from 'it-last'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport {\n  parseMode,\n  parseMtime\n} from 'ipfs-unixfs'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:write')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('./utils/to-mfs-path').FilePath} FilePath\n * @typedef {import('./utils/to-mfs-path').MfsPath} MfsPath\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n *\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {boolean} create\n * @property {boolean} truncate\n * @property {boolean} rawLeaves\n * @property {boolean} reduceSingleLeafToSelf\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} parents\n * @property {import('ipfs-core-types/src/root').AddProgressFn} progress\n * @property {'trickle' | 'balanced'} strategy\n * @property {boolean} flush\n * @property {'raw' | 'file'} leafType\n * @property {number} shardSplitThreshold\n * @property {MtimeLike} [mtime]\n * @property {number} [mode]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0, // the offset in the file to begin writing\n  length: Infinity, // how many bytes from the incoming buffer to write\n  create: false, // whether to create the file if it does not exist\n  truncate: false, // whether to truncate the file first\n  rawLeaves: false,\n  reduceSingleLeafToSelf: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  parents: false, // whether to create intermediate directories if they do not exist\n  progress: (bytes, path) => {},\n  strategy: 'trickle',\n  flush: true,\n  leafType: 'raw',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createWrite (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"write\"]}\n   */\n  async function mfsWrite (path, content, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    /** @type {AsyncIterable<Uint8Array>} */\n    let source\n    /** @type {MfsPath} */\n    let destination\n    /** @type {MfsPath} */\n    let parent\n    log('Reading source, destination and parent')\n    await createLock().readLock(async () => {\n      source = await toAsyncIterator(content)\n      destination = await toMfsPath(context, path, options)\n      parent = await toMfsPath(context, destination.mfsDirectory, options)\n    })()\n    log('Read source, destination and parent')\n    // @ts-expect-error - parent may be undefined\n    if (!options.parents && !parent.exists) {\n      throw errCode(new Error('directory does not exist'), 'ERR_NO_EXIST')\n    }\n\n    // @ts-expect-error\n    if (source == null) {\n      throw errCode(new Error('could not create source'), 'ERR_NO_SOURCE')\n    }\n\n    // @ts-expect-error\n    if (destination == null) {\n      throw errCode(new Error('could not create destination'), 'ERR_NO_DESTINATION')\n    }\n\n    if (!options.create && !destination.exists) {\n      throw errCode(new Error('file does not exist'), 'ERR_NO_EXIST')\n    }\n\n    if (destination.entryType !== 'file') {\n      throw errCode(new Error('not a file'), 'ERR_NOT_A_FILE')\n    }\n\n    return updateOrImport(context, path, source, destination, options)\n  }\n\n  return withTimeoutOption(mfsWrite)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {AsyncIterable<Uint8Array>} source\n * @param {FilePath} destination\n * @param {DefaultOptions} options\n */\nconst updateOrImport = async (context, path, source, destination, options) => {\n  const child = await write(context, source, destination, options)\n\n  // The slow bit is done, now add or replace the DAGLink in the containing directory\n  // re-reading the path to the containing folder in case it has changed in the interim\n  await createLock().writeLock(async () => {\n    const pathComponents = toPathComponents(path)\n    const fileName = pathComponents.pop()\n\n    if (fileName == null) {\n      throw errCode(new Error('source does not exist'), 'ERR_NO_EXIST')\n    }\n\n    let parentExists = false\n\n    try {\n      await createStat(context)(`/${pathComponents.join('/')}`, options)\n      parentExists = true\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        throw err\n      }\n    }\n\n    if (!parentExists) {\n      await createMkdir(context)(`/${pathComponents.join('/')}`, options)\n    }\n\n    // get an updated mfs path in case the root changed while we were writing\n    const updatedPath = await toMfsPath(context, path, options)\n    const trail = await toTrail(context, updatedPath.mfsDirectory)\n    const parent = trail[trail.length - 1]\n\n    if (!parent) {\n      throw errCode(new Error('directory does not exist'), 'ERR_NO_EXIST')\n    }\n\n    if (!parent.type || !parent.type.includes('directory')) {\n      throw errCode(new Error(`cannot write to ${parent.name}: Not a directory`), 'ERR_NOT_A_DIRECTORY')\n    }\n\n    const parentBlock = await context.repo.blocks.get(parent.cid)\n    const parentNode = decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: fileName,\n      cid: child.cid,\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, options)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, options)\n  })()\n}\n\n/**\n * @param {MfsContext} context\n * @param {AsyncIterable<Uint8Array>} source\n * @param {FilePath} destination\n * @param {DefaultOptions} options\n */\nconst write = async (context, source, destination, options) => {\n  if (destination.exists) {\n    log(`Overwriting file ${destination.cid} offset ${options.offset} length ${options.length}`)\n  } else {\n    log(`Writing file offset ${options.offset} length ${options.length}`)\n  }\n\n  /** @type {Array<() => AsyncIterable<Uint8Array>>} */\n  const sources = []\n\n  // pad start of file if necessary\n  if (options.offset > 0) {\n    if (destination.unixfs) {\n      log(`Writing first ${options.offset} bytes of original file`)\n\n      sources.push(\n        () => {\n          return destination.content({\n            offset: 0,\n            length: options.offset\n          })\n        }\n      )\n\n      if (destination.unixfs.fileSize() < options.offset) {\n        const extra = options.offset - destination.unixfs.fileSize()\n\n        log(`Writing zeros for extra ${extra} bytes`)\n        sources.push(\n          asyncZeroes(extra)\n        )\n      }\n    } else {\n      log(`Writing zeros for first ${options.offset} bytes`)\n      sources.push(\n        asyncZeroes(options.offset)\n      )\n    }\n  }\n\n  sources.push(\n    limitAsyncStreamBytes(source, options.length)\n  )\n\n  const content = countBytesStreamed(catAsyncIterators(sources), (bytesWritten) => {\n    if (destination.unixfs && !options.truncate) {\n      // if we've done reading from the new source and we are not going\n      // to truncate the file, add the end of the existing file to the output\n      const fileSize = destination.unixfs.fileSize()\n\n      if (fileSize > bytesWritten) {\n        log(`Writing last ${fileSize - bytesWritten} of ${fileSize} bytes from original file starting at offset ${bytesWritten}`)\n\n        return destination.content({\n          offset: bytesWritten\n        })\n      } else {\n        log('Not writing last bytes from original file')\n      }\n    }\n\n    return {\n      [Symbol.asyncIterator]: async function * () {}\n    }\n  })\n\n  /** @type {number | undefined} */\n  let mode\n\n  if (options.mode !== undefined && options.mode !== null) {\n    mode = parseMode(options.mode)\n  } else if (destination && destination.unixfs) {\n    mode = destination.unixfs.mode\n  }\n\n  /** @type {import('ipfs-unixfs').Mtime | undefined} */\n  let mtime\n\n  if (options.mtime != null) {\n    mtime = parseMtime(options.mtime)\n  } else if (destination && destination.unixfs) {\n    mtime = destination.unixfs.mtime\n  }\n\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n\n  const result = await last(importer([{\n    content: content,\n\n    // persist mode & mtime if set previously\n    mode,\n    mtime\n  }], context.repo.blocks, {\n    progress: options.progress,\n    hasher,\n    cidVersion: options.cidVersion,\n    strategy: options.strategy,\n    rawLeaves: options.rawLeaves,\n    reduceSingleLeafToSelf: options.reduceSingleLeafToSelf,\n    leafType: options.leafType\n  }))\n\n  if (!result) {\n    throw errCode(new Error(`cannot write to ${parent.name}`), 'ERR_COULD_NOT_WRITE')\n  }\n\n  log(`Wrote ${result.cid}`)\n\n  return {\n    cid: result.cid,\n    size: result.size\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} stream\n * @param {number} limit\n */\nconst limitAsyncStreamBytes = (stream, limit) => {\n  return async function * _limitAsyncStreamBytes () {\n    let emitted = 0\n\n    for await (const buf of stream) {\n      emitted += buf.length\n\n      if (emitted > limit) {\n        yield buf.subarray(0, limit - emitted)\n\n        return\n      }\n\n      yield buf\n    }\n  }\n}\n\n/**\n * @param {number} count\n * @param {number} chunkSize\n */\nconst asyncZeroes = (count, chunkSize = MFS_MAX_CHUNK_SIZE) => {\n  const buf = new Uint8Array(chunkSize)\n\n  async function * _asyncZeroes () {\n    while (true) {\n      yield buf\n    }\n  }\n\n  return limitAsyncStreamBytes(_asyncZeroes(), count)\n}\n\n/**\n * @param {Array<() => AsyncIterable<Uint8Array>>} sources\n */\nconst catAsyncIterators = async function * (sources) { // eslint-disable-line require-await\n  for (let i = 0; i < sources.length; i++) {\n    yield * sources[i]()\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {(count: number) => AsyncIterable<Uint8Array>} notify\n */\nconst countBytesStreamed = async function * (source, notify) {\n  let wrote = 0\n\n  for await (const buf of source) {\n    wrote += buf.length\n\n    yield buf\n  }\n\n  for await (const buf of notify(wrote)) {\n    wrote += buf.length\n\n    yield buf\n  }\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport map from 'it-map'\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('ipfs-core-types/src/files').MFSEntry} MFSEntry\n */\n\n/**\n * @param {import('ipfs-unixfs-exporter').UnixFSEntry} fsEntry\n */\nconst toOutput = (fsEntry) => {\n  /** @type {MFSEntry} */\n  const output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  }\n\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode\n    output.mtime = fsEntry.unixfs.mtime\n  }\n\n  return output\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createLs (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"ls\"]}\n   */\n  async function * mfsLs (path, options = {}) {\n    const mfsPath = await toMfsPath(context, path, options)\n    const fsEntry = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n    // directory, perhaps sharded\n    if (fsEntry.type === 'directory') {\n      yield * map(fsEntry.content(options), toOutput)\n\n      return\n    }\n\n    // single file/node\n    yield toOutput(fsEntry)\n  }\n\n  return withTimeoutOption(mfsLs)\n}\n","import { createLock } from './utils/create-lock.js'\nimport * as isIpfs from 'is-ipfs'\nimport { createStat } from './stat.js'\nimport { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRm } from './rm.js'\nimport { createTouch } from './touch.js'\nimport { createRead } from './read.js'\nimport { createWrite } from './write.js'\nimport { createLs } from './ls.js'\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n *\n * @typedef {object} MfsContext\n * @property {IPFSRepo} repo\n * @property {Multihashes} hashers\n */\n\n/**\n * These operations are read-locked at the function level and will execute simultaneously\n *\n * @type {Record<string, any>}\n */\nconst readOperations = {\n  stat: createStat\n}\n\n/**\n * These operations are locked at the function level and will execute in series\n *\n * @type {Record<string, any>}\n */\nconst writeOperations = {\n  chmod: createChmod,\n  cp: createCp,\n  flush: createFlush,\n  mkdir: createMkdir,\n  mv: createMv,\n  rm: createRm,\n  touch: createTouch\n}\n\n/**\n * These operations are asynchronous and manage their own locking\n *\n * @type {Record<string, any>}\n */\nconst unwrappedOperations = {\n  write: createWrite,\n  read: createRead,\n  ls: createLs\n}\n\n/**\n * @param {object} arg\n * @param {MfsContext} arg.options\n * @param {*} arg.mfs\n * @param {*} arg.operations\n * @param {*} arg.lock\n */\nconst wrap = ({\n  options, mfs, operations, lock\n}) => {\n  Object.keys(operations).forEach(key => {\n    mfs[key] = lock(operations[key](options))\n  })\n}\n\nconst defaultOptions = {\n  repoOwner: true,\n  repo: null\n}\n\n/**\n * @param {object} options\n * @param {IPFSRepo} options.repo\n * @param {boolean} options.repoOwner\n * @param {Multihashes} options.hashers\n */\nfunction createMfs (options) {\n  const {\n    repoOwner\n  } = Object.assign({}, defaultOptions || {}, options)\n\n  const lock = createLock(repoOwner)\n\n  /**\n   * @param {(fn: (...args: any) => any) => (...args: any) => any} operation\n   */\n  const readLock = (operation) => {\n    return lock.readLock(operation)\n  }\n\n  /**\n   * @param {(fn: (...args: any) => any) => (...args: any) => any} operation\n   */\n  const writeLock = (operation) => {\n    return lock.writeLock(operation)\n  }\n\n  /** @type {Record<string, any>} */\n  const mfs = {}\n\n  wrap({\n    options, mfs, operations: readOperations, lock: readLock\n  })\n  wrap({\n    options, mfs, operations: writeOperations, lock: writeLock\n  })\n\n  Object.keys(unwrappedOperations).forEach(key => {\n    mfs[key] = unwrappedOperations[key](options)\n  })\n\n  return mfs\n}\n\n/**\n * @param {object} context\n * @param {IPFSRepo} context.repo\n * @param {import('../../types').Preload} context.preload\n * @param {import('..').Options} context.options\n * @param {Multihashes} context.hashers\n * @returns {import('ipfs-core-types/src/files').API}\n */\nexport function createFiles ({ repo, preload, hashers, options: constructorOptions }) {\n  const methods = createMfs({\n    repo,\n    repoOwner: constructorOptions.repoOwner !== false,\n    hashers\n  })\n\n  /**\n   * @param {any} fn\n   */\n  const withPreload = fn => {\n    /**\n     * @param  {...any} args\n     */\n    const wrapped = (...args) => {\n      const paths = args.filter(arg => isIpfs.ipfsPath(arg) || isIpfs.cid(arg))\n\n      if (paths.length) {\n        const options = args[args.length - 1]\n        if (options && options.preload !== false) {\n          paths.forEach(path => preload(path))\n        }\n      }\n\n      return fn(...args)\n    }\n\n    return wrapped\n  }\n\n  return {\n    ...methods,\n    chmod: methods.chmod,\n    cp: withPreload(methods.cp),\n    mkdir: methods.mkdir,\n    stat: withPreload(methods.stat),\n    rm: methods.rm,\n    read: withPreload(methods.read),\n    touch: methods.touch,\n    write: methods.write,\n    mv: withPreload(methods.mv),\n    flush: methods.flush,\n    ls: withPreload(async function * (/** @type {...any} */ ...args) {\n      for await (const file of methods.ls(...args)) {\n        yield { ...file, size: file.size || 0 }\n      }\n    })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst DEFAULT_KEY_TYPE = 'Ed25519'\nconst DEFAULT_KEY_SIZE = 2048\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createGen ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"gen\"]}\n   */\n  const gen = (name, options = { type: DEFAULT_KEY_TYPE, size: DEFAULT_KEY_SIZE }) => {\n    return keychain.createKey(name, options.type || DEFAULT_KEY_TYPE, options.size || DEFAULT_KEY_SIZE)\n  }\n\n  return withTimeoutOption(gen)\n}\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @typedef {import('@libp2p/interface-keychain').KeyChain} Keychain\n */\n\nexport class KeyAPI {\n  /**\n   * @param {object} config\n   * @param {Keychain} config.keychain\n   */\n  constructor ({ keychain }) {\n    this.gen = createGen({ keychain })\n    this.list = createList({ keychain })\n    this.rm = createRm({ keychain })\n    this.rename = createRename({ keychain })\n    this.export = createExport({ keychain })\n    this.import = createImport({ keychain })\n    this.info = createInfo({ keychain })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createList ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"list\"]}\n   */\n  const list = () => keychain.listKeys()\n\n  return withTimeoutOption(list)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRm ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rm\"]}\n   */\n  const rm = (name) => keychain.removeKey(name)\n\n  return withTimeoutOption(rm)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRename ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rename\"]}\n   */\n  const rename = async (oldName, newName) => {\n    const key = await keychain.renameKey(oldName, newName)\n\n    return {\n      was: oldName,\n      now: key.name,\n      id: key.id,\n      overwrite: false\n    }\n  }\n\n  return withTimeoutOption(rename)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createExport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"export\"]}\n   */\n  const exportKey = (name, password) =>\n    keychain.exportKey(name, password)\n\n  return withTimeoutOption(exportKey)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password)\n  }\n\n  return withTimeoutOption(importKey)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createInfo ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"info\"]}\n   */\n  const info = (name) => keychain.findKeyByName(name)\n\n  return withTimeoutOption(info)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid, options)\n\n    return dagPB.decode(block)\n  }\n\n  return withTimeoutOption(get)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as raw from 'multiformats/codecs/raw'\nimport { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('@ipld/dag-pb').PBLink} DAGLink\n */\n\n/**\n * @param {any} node\n * @param {DAGLink[]} [links]\n * @returns {DAGLink[]}\n */\nfunction findLinks (node, links = []) {\n  for (const key in node) {\n    const val = node[key]\n\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: CID.parse(val)\n        })\n        continue\n      } catch (/** @type {any} */ _) {\n        // not a CID\n      }\n    }\n\n    const cid = CID.asCID(val)\n\n    if (cid) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid\n      })\n      continue\n    }\n\n    if (Array.isArray(val)) {\n      findLinks(val, links)\n    }\n\n    if (val && typeof val === 'object') {\n      findLinks(val, links)\n    }\n  }\n\n  return links\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLinks ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n    const node = codec.decode(block)\n\n    switch (cid.code) {\n      case raw.code:\n        return []\n      case dagPB.code:\n        return node.Links\n      case dagCBOR.code:\n      case dagJSON.code:\n        return findLinks(node)\n      default:\n        throw new Error(`Cannot resolve links from codec ${cid.code}`)\n    }\n  }\n\n  return withTimeoutOption(links)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createPut ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"put\"]}\n   */\n  async function put (obj, options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      const buf = dagPB.encode(obj)\n      const hash = await sha256.digest(buf)\n      const cid = CID.createV1(dagPB.code, hash)\n\n      await repo.blocks.put(cid, buf, {\n        signal: options.signal\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid, {\n          signal: options.signal\n        })\n      }\n\n      return cid\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @typedef {import('../../../types').Preload} Preload\n */\n\nexport class ObjectPatchAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, preload }) {\n    this.addLink = createAddLink({ repo, preload })\n    this.appendData = createAppendData({ repo, preload })\n    this.rmLink = createRmLink({ repo, preload })\n    this.setData = createSetData({ repo, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createAddLink ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"addLink\"]}\n   */\n  async function addLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Links: node.Links.concat([link])\n    }, options)\n  }\n\n  return withTimeoutOption(addLink)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createAppendData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    const node = await get(cid, options)\n    const newData = uint8ArrayConcat([node.Data || [], data])\n\n    return put({\n      ...node,\n      Data: newData\n    }, options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createRmLink ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"rmLink\"]}\n   */\n  async function rmLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n    const name = (typeof link === 'string' ? link : link.Name) || ''\n\n    node.Links = node.Links.filter(l => l.Name !== name)\n\n    return put(node, options)\n  }\n\n  return withTimeoutOption(rmLink)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createSetData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Data: data\n    }, options)\n  }\n\n  return withTimeoutOption(setData)\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { ObjectPatchAPI } from './patch/index.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, codecs, preload }) {\n    this.data = createData({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.links = createLinks({ repo, codecs })\n    this.new = createNew({ repo, preload })\n    this.put = createPut({ repo, preload })\n    this.stat = createStat({ repo, preload })\n    this.patch = new ObjectPatchAPI({ repo, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"data\"]}\n   */\n  async function data (multihash, options = {}) {\n    const node = await get(multihash, options)\n    return node.Data || new Uint8Array(0)\n  }\n\n  return withTimeoutOption(data)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createNew ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"new\"]}\n   */\n  async function _new (options = {}) {\n    let data\n\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = (new UnixFS({ type: 'directory' })).marshal()\n      } else {\n        throw new Error('unknown template')\n      }\n    }\n\n    const buf = dagPB.encode({\n      Data: data,\n      Links: []\n    })\n    const hash = await sha256.digest(buf)\n    const cid = CID.createV0(hash)\n\n    await repo.blocks.put(cid, buf, {\n      signal: options.signal\n    })\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return cid\n  }\n\n  return withTimeoutOption(_new)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createStat ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const node = await get(cid, options)\n    const serialized = dagPB.encode(node)\n    const blockSize = serialized.length\n    const linkLength = node.Links.reduce((a, l) => a + (l.Tsize || 0), 0)\n\n    return {\n      Hash: cid,\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - (node.Data || []).length,\n      DataSize: (node.Data || []).length,\n      CumulativeSize: blockSize + linkLength\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","import { logger } from '@libp2p/logger'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { loadMfsRoot } from '../files/utils/with-mfs-root.js'\n\nconst log = logger('ipfs:repo:gc')\n\n/**\n * @typedef {import('ipfs-core-types/src/pin').API} PinAPI\n * @typedef {import('ipfs-core-types/src/refs').API} RefsAPI\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\n/**\n * Perform mark and sweep garbage collection\n *\n * @param {object} config\n * @param {IPFSRepo} config.repo\n * @param {Multihashes} config.hashers\n */\nexport function createGc ({ repo, hashers }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const start = Date.now()\n    let mfsRootCid\n\n    try {\n      mfsRootCid = await loadMfsRoot({\n        repo,\n        hashers\n      }, options)\n\n      // temporarily pin mfs root\n      await repo.pins.pinRecursively(mfsRootCid)\n\n      yield * repo.gc()\n    } finally {\n      // gc complete, unpin mfs root\n      if (mfsRootCid) {\n        await repo.pins.unpin(mfsRootCid)\n      }\n    }\n\n    log(`Complete (${Date.now() - start}ms)`)\n  }\n\n  return withTimeoutOption(gc)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createStat ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const stats = await repo.stat()\n\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","\nexport const repoVersion = 12\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\nexport class RepoAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor ({ repo, hashers }) {\n    this.gc = createGc({ repo, hashers })\n    this.stat = createStat({ repo })\n    this.version = createVersion({ repo })\n\n    /**\n     * @param {string} addr\n     */\n    this.setApiAddr = (addr) => repo.apiAddr.set(addr)\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { repoVersion } from 'ipfs-repo/constants'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"version\"]}\n   */\n  async function version (options = {}) {\n    try {\n      // @ts-expect-error - not a public API\n      await repo._checkInitialized(options)\n    } catch (/** @type {any} */ err) {\n      // TODO: (dryajov) This is really hacky, there must be a better way\n      const match = [\n        /Key not found in database \\[\\/version\\]/,\n        /ENOENT/,\n        /repo is not initialized yet/\n      ].some((m) => {\n        return m.test(err.message)\n      })\n      if (match) {\n        // this repo has not been initialized\n        return repoVersion\n      }\n      throw err\n    }\n\n    return repo.version.get()\n  }\n\n  return withTimeoutOption(version)\n}\n","import parseDuration from 'parse-duration'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/stats').BWOptions} BWOptions\n * @typedef {import('ipfs-core-types/src/stats').BWResult} BandwidthInfo\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {libp2p} libp2p\n * @param {BWOptions} opts\n * @returns {BandwidthInfo}\n */\nfunction getBandwidthStats (libp2p, opts) {\n/*\n  let stats\n\n  if (!libp2p.metrics) {\n    stats = undefined\n  } else if (opts.peer) {\n    stats = libp2p.metrics.forPeer(opts.peer)\n  } else if (opts.proto) {\n    stats = libp2p.metrics.forProtocol(opts.proto)\n  } else {\n    stats = libp2p.metrics.getGlobal()\n  }\n*/\n  //  if (!stats) {\n  return {\n    totalIn: BigInt(0),\n    totalOut: BigInt(0),\n    rateIn: 0.0,\n    rateOut: 0.0\n  }\n  //  }\n/*\n  const movingAverages = stats.getMovingAverages()\n  const snapshot = stats.getSnapshot()\n\n  return {\n    totalIn: snapshot.dataReceived,\n    totalOut: snapshot.dataSent,\n    rateIn: movingAverages.dataReceived[60000].movingAverage / 60,\n    rateOut: movingAverages.dataSent[60000].movingAverage / 60\n  }\n*/\n}\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createBw ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/stats').API<{}>[\"bw\"]}\n   */\n  const bw = async function * (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    if (!options.poll) {\n      yield getBandwidthStats(libp2p, options)\n      return\n    }\n\n    const interval = options.interval || 1000\n    let ms = -1\n    try {\n      ms = typeof interval === 'string' ? parseDuration(interval) || -1 : interval\n      if (!ms || ms < 0) throw new Error('invalid duration')\n    } catch (/** @type {any} */ err) {\n      throw errCode(err, 'ERR_INVALID_POLL_INTERVAL')\n    }\n\n    let timeoutId\n    try {\n      while (true) {\n        yield getBandwidthStats(libp2p, options)\n        // eslint-disable-next-line no-loop-func\n        await new Promise(resolve => { timeoutId = setTimeout(resolve, ms) })\n      }\n    } finally {\n      clearTimeout(timeoutId)\n    }\n  }\n\n  return withTimeoutOption(bw)\n}\n","import { createBw } from './bw.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createStat as createBitswap } from '../bitswap/stat.js'\n\nexport class StatsAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('../../types').NetworkService} config.network\n   */\n  constructor ({ repo, network }) {\n    this.repo = createRepo({ repo })\n    this.bw = createBw({ network })\n    this.bitswap = createBitswap({ network })\n  }\n}\n","var objectSafeGet = get;\n\n/*\n  const obj = {a: {aa: {aaa: 2}}, b: 4};\n\n  get(obj, 'a.aa.aaa'); // 2\n  get(obj, ['a', 'aa', 'aaa']); // 2\n\n  get(obj, 'b.bb.bbb'); // undefined\n  get(obj, ['b', 'bb', 'bbb']); // undefined\n\n  get(obj.a, 'aa.aaa'); // 2\n  get(obj.a, ['aa', 'aaa']); // 2\n\n  get(obj.b, 'bb.bbb'); // undefined\n  get(obj.b, ['bb', 'bbb']); // undefined\n\n  get(obj.b, 'bb.bbb', 42); // 42\n  get(obj.b, ['bb', 'bbb'], 42); // 42\n\n  get(null, 'a'); // undefined\n  get(undefined, ['a']); // undefined\n\n  get(null, 'a', 42); // 42\n  get(undefined, ['a'], 42); // 42\n\n  const obj = {a: {}};\n  const sym = Symbol();\n  obj.a[sym] = 4;\n  get(obj.a, sym); // 4\n*/\n\nfunction get(obj, propsArg, defaultValue) {\n  if (!obj) {\n    return defaultValue;\n  }\n  var props, prop;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  while (props.length) {\n    prop = props.shift();\n    if (!obj) {\n      return defaultValue;\n    }\n    obj = obj[prop];\n    if (obj === undefined) {\n      return defaultValue;\n    }\n  }\n  return obj;\n}\n\nexport {objectSafeGet as default};\n","\nimport { CID } from 'multiformats/cid'\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport length from 'it-length'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as mhd from 'multiformats/hashes/digest'\n\nconst log = debug('ipfs:repo:migrator:migration-8')\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {*} blockstore\n * @returns {Datastore}\n */\nfunction unwrap (blockstore) {\n  if (blockstore.child) {\n    return unwrap(blockstore.child)\n  }\n\n  return blockstore\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToMultihash (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n\n    // Extract multihash from CID\n    const multihash = CID.decode(buf).multihash.bytes\n\n    // Encode and slice off multibase codec\n    // Should be uppercase for interop with go\n    const multihashStr = base32.encode(multihash).slice(1).toUpperCase()\n\n    return new Key(`/${multihashStr}`, false)\n  } catch (/** @type {any} */ err) {\n    return key\n  }\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToCid (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n    const digest = mhd.decode(buf)\n\n    // CID to Key\n    const multihash = base32.encode(CID.createV1(raw.code, digest).bytes).slice(1)\n\n    return new Key(`/${multihash.toUpperCase()}`, false)\n  } catch {\n    return key\n  }\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {(percent: number, message: string) => void} onProgress\n * @param {(key: Key) => Key} keyFunction\n */\nasync function process (backends, onProgress, keyFunction) {\n  const blockstore = backends.blocks\n  await blockstore.open()\n\n  const unwrapped = unwrap(blockstore)\n\n  const blockCount = await length(unwrapped.queryKeys({\n    filters: [(key) => {\n      const newKey = keyFunction(key)\n\n      return newKey.toString() !== key.toString()\n    }]\n  }))\n\n  try {\n    let counter = 0\n\n    for await (const block of unwrapped.query({})) {\n      const newKey = keyFunction(block.key)\n\n      // If the Key is base32 CIDv0 then there's nothing to do\n      if (newKey.toString() !== block.key.toString()) {\n        counter += 1\n        log(`Migrating Block from ${block.key} to ${newKey}`, await unwrapped.has(block.key))\n\n        await unwrapped.delete(block.key)\n        await unwrapped.put(newKey, block.value)\n\n        onProgress((counter / blockCount) * 100, `Migrated Block from ${block.key} to ${newKey}`)\n      }\n    }\n  } finally {\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 8,\n  description: 'Transforms key names into base32 encoding and converts Block store to use bare multihashes encoded as base32',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToMultihash)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToCid)\n  }\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const ipfs = $root.ipfs = (() => {\n\n    /**\n     * Namespace ipfs.\n     * @exports ipfs\n     * @namespace\n     */\n    const ipfs = {};\n\n    ipfs.pin = (function() {\n\n        /**\n         * Namespace pin.\n         * @memberof ipfs\n         * @namespace\n         */\n        const pin = {};\n\n        pin.Set = (function() {\n\n            /**\n             * Properties of a Set.\n             * @memberof ipfs.pin\n             * @interface ISet\n             * @property {number|null} [version] Set version\n             * @property {number|null} [fanout] Set fanout\n             * @property {number|null} [seed] Set seed\n             */\n\n            /**\n             * Constructs a new Set.\n             * @memberof ipfs.pin\n             * @classdesc Represents a Set.\n             * @implements ISet\n             * @constructor\n             * @param {ipfs.pin.ISet=} [p] Properties to set\n             */\n            function Set(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Set version.\n             * @member {number} version\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.version = 0;\n\n            /**\n             * Set fanout.\n             * @member {number} fanout\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.fanout = 0;\n\n            /**\n             * Set seed.\n             * @member {number} seed\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.seed = 0;\n\n            /**\n             * Encodes the specified Set message. Does not implicitly {@link ipfs.pin.Set.verify|verify} messages.\n             * @function encode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.ISet} m Set message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Set.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.version != null && Object.hasOwnProperty.call(m, \"version\"))\n                    w.uint32(8).uint32(m.version);\n                if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n                    w.uint32(16).uint32(m.fanout);\n                if (m.seed != null && Object.hasOwnProperty.call(m, \"seed\"))\n                    w.uint32(29).fixed32(m.seed);\n                return w;\n            };\n\n            /**\n             * Decodes a Set message from the specified reader or buffer.\n             * @function decode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {ipfs.pin.Set} Set\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Set.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.ipfs.pin.Set();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.version = r.uint32();\n                        break;\n                    case 2:\n                        m.fanout = r.uint32();\n                        break;\n                    case 3:\n                        m.seed = r.fixed32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a Set message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {ipfs.pin.Set} Set\n             */\n            Set.fromObject = function fromObject(d) {\n                if (d instanceof $root.ipfs.pin.Set)\n                    return d;\n                var m = new $root.ipfs.pin.Set();\n                if (d.version != null) {\n                    m.version = d.version >>> 0;\n                }\n                if (d.fanout != null) {\n                    m.fanout = d.fanout >>> 0;\n                }\n                if (d.seed != null) {\n                    m.seed = d.seed >>> 0;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a Set message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.Set} m Set\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Set.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.version = 0;\n                    d.fanout = 0;\n                    d.seed = 0;\n                }\n                if (m.version != null && m.hasOwnProperty(\"version\")) {\n                    d.version = m.version;\n                }\n                if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n                    d.fanout = m.fanout;\n                }\n                if (m.seed != null && m.hasOwnProperty(\"seed\")) {\n                    d.seed = m.seed;\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Set to JSON.\n             * @function toJSON\n             * @memberof ipfs.pin.Set\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Set.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Set;\n        })();\n\n        return pin;\n    })();\n\n    return ipfs;\n})();\n\nexport { $root as default };\n","\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { CID } from 'multiformats/cid'\n\nexport const PIN_DS_KEY = new Key('/local/pins')\nexport const DEFAULT_FANOUT = 256\nexport const MAX_ITEMS = 8192\nexport const EMPTY_KEY = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n\nexport const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n}\n\n/**\n * @param {import('multiformats').CID} cid\n */\nexport function cidToKey (cid) {\n  return new Key(`/${base32.encode(cid.multihash.bytes).toUpperCase().substring(1)}`)\n}\n","\nimport { CID } from 'multiformats/cid'\nimport { ipfs } from './pin.js'\n// @ts-ignore\nimport fnv1a from 'fnv1a'\nimport varint from 'varint'\nimport * as dagPb from '@ipld/dag-pb'\nimport { DEFAULT_FANOUT, MAX_ITEMS, EMPTY_KEY } from './utils.js'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { compare as uint8ArrayCompare } from 'uint8arrays/compare'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\nconst PinSet = ipfs.pin.Set\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @typedef {object} Pin\n * @property {CID} key\n * @property {Uint8Array} [data]\n */\n\n/**\n * @param {PBNode} rootNode\n */\nfunction readHeader (rootNode) {\n  // rootNode.data should be a buffer of the format:\n  // < varint(headerLength) | header | itemData... >\n  const rootData = rootNode.Data\n\n  if (!rootData) {\n    throw new Error('No data present')\n  }\n\n  const hdrLength = varint.decode(rootData)\n  const vBytes = varint.decode.bytes ?? 0\n\n  if (vBytes <= 0) {\n    throw new Error('Invalid Set header length')\n  }\n\n  if (vBytes + hdrLength > rootData.length) {\n    throw new Error('Impossibly large set header length')\n  }\n\n  const hdrSlice = rootData.slice(vBytes, hdrLength + vBytes)\n  const header = PinSet.toObject(PinSet.decode(hdrSlice), {\n    defaults: false,\n    arrays: true,\n    longs: Number,\n    objects: false\n  })\n\n  if (header.version !== 1) {\n    throw new Error(`Unsupported Set version: ${header.version}`)\n  }\n\n  if (header.fanout > rootNode.Links.length) {\n    throw new Error('Impossibly large fanout')\n  }\n\n  return {\n    header: header,\n    data: rootData.slice(hdrLength + vBytes)\n  }\n}\n\n/**\n * @param {number} seed\n * @param {CID} key\n */\nfunction hash (seed, key) {\n  const buffer = new Uint8Array(4)\n  const dataView = new DataView(buffer.buffer)\n  dataView.setUint32(0, seed, true)\n  const encodedKey = uint8ArrayFromString(key.toString())\n  const data = uint8ArrayConcat([buffer, encodedKey], buffer.byteLength + encodedKey.byteLength)\n\n  return fnv1a(uint8ArrayToString(data))\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} node\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nasync function * walkItems (blockstore, node) {\n  const pbh = readHeader(node)\n  let idx = 0\n\n  for (const link of node.Links) {\n    if (idx < pbh.header.fanout) {\n      // the first pbh.header.fanout links are fanout bins\n      // if a fanout bin is not 'empty', dig into and walk its DAGLinks\n      const linkHash = link.Hash\n\n      if (!EMPTY_KEY.equals(linkHash)) {\n        // walk the links of this fanout bin\n        const buf = await blockstore.get(linkHash)\n        const node = dagPb.decode(buf)\n\n        yield * walkItems(blockstore, node)\n      }\n    } else {\n      // otherwise, the link is a pin\n      yield link.Hash\n    }\n\n    idx++\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} rootNode\n * @param {string} name\n */\nexport async function * loadSet (blockstore, rootNode, name) {\n  const link = rootNode.Links.find(l => l.Name === name)\n\n  if (!link) {\n    throw new Error('No link found with name ' + name)\n  }\n\n  const buf = await blockstore.get(link.Hash)\n  const node = dagPb.decode(buf)\n\n  yield * walkItems(blockstore, node)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Pin[]} items\n */\nfunction storeItems (blockstore, items) {\n  return storePins(items, 0)\n\n  /**\n   * @param {Pin[]} pins\n   * @param {number} depth\n   */\n  async function storePins (pins, depth) {\n    const pbHeader = PinSet.encode({\n      version: 1,\n      fanout: DEFAULT_FANOUT,\n      seed: depth\n    }).finish()\n\n    const header = varint.encode(pbHeader.length)\n    const headerBuf = uint8ArrayConcat([header, pbHeader])\n    const fanoutLinks = []\n\n    for (let i = 0; i < DEFAULT_FANOUT; i++) {\n      fanoutLinks.push({\n        Name: '',\n        Tsize: 1,\n        Hash: EMPTY_KEY\n      })\n    }\n\n    if (pins.length <= MAX_ITEMS) {\n      const nodes = pins\n        .map(item => {\n          return ({\n            link: {\n              Name: '',\n              Tsize: 1,\n              Hash: item.key\n            },\n            data: item.data || new Uint8Array()\n          })\n        })\n        // sorting makes any ordering of `pins` produce the same DAGNode\n        .sort((a, b) => {\n          return uint8ArrayCompare(a.link.Hash.bytes, b.link.Hash.bytes)\n        })\n\n      const rootLinks = fanoutLinks.concat(nodes.map(item => item.link))\n      const rootData = uint8ArrayConcat([headerBuf, ...nodes.map(item => item.data)])\n\n      return {\n        Data: rootData,\n        Links: rootLinks\n      }\n    } else {\n      // If the array of pins is > MAX_ITEMS, we:\n      //  - distribute the pins among `DEFAULT_FANOUT` bins\n      //    - create a DAGNode for each bin\n      //      - add each pin as a DAGLink to that bin\n      //  - create a root DAGNode\n      //    - add each bin as a DAGLink\n      //  - send that root DAGNode via callback\n      // (using go-ipfs' \"wasteful but simple\" approach for consistency)\n      // https://github.com/ipfs/go-ipfs/blob/master/pin/set.go#L57\n\n      /** @type {Pin[][]} */\n      const bins = pins.reduce((bins, pin) => {\n        const n = hash(depth, pin.key) % DEFAULT_FANOUT\n        // @ts-ignore\n        bins[n] = n in bins ? bins[n].concat([pin]) : [pin]\n        return bins\n      }, [])\n\n      let idx = 0\n      for (const bin of bins) {\n        const child = await storePins(bin, depth + 1)\n\n        await storeChild(child, idx)\n\n        idx++\n      }\n\n      return {\n        Data: headerBuf,\n        Links: fanoutLinks\n      }\n    }\n\n    /**\n     * @param {PBNode} child\n     * @param {number} binIdx\n     */\n    async function storeChild (child, binIdx) {\n      const buf = dagPb.encode(child)\n      const digest = await sha256.digest(buf)\n      const cid = CID.createV0(digest)\n\n      await blockstore.put(cid, buf)\n\n      const size = child.Links.reduce((acc, curr) => acc + (curr.Tsize || 0), 0) + buf.length\n\n      fanoutLinks[binIdx] = {\n        Name: '',\n        Tsize: size,\n        Hash: cid\n      }\n    }\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {string} type\n * @param {CID[]} cids\n */\nexport async function storeSet (blockstore, type, cids) {\n  const rootNode = await storeItems(blockstore, cids.map(cid => {\n    return {\n      key: cid\n    }\n  }))\n  const buf = dagPb.encode(rootNode)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n\n  const size = rootNode.Links.reduce((acc, curr) => acc + curr.Tsize, 0) + buf.length\n\n  return {\n    Name: type,\n    Tsize: size,\n    Hash: cid\n  }\n}\n","\nimport { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as cbor from 'cborg'\nimport * as pinset from './pin-set.js'\nimport { cidToKey, PIN_DS_KEY, PinTypes } from './utils.js'\nimport length from 'it-length'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport * as mhd from 'multiformats/hashes/digest'\nimport { base32 } from 'multiformats/bases/base32'\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('../../types').MigrationProgressCallback} MigrationProgressCallback\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').Version} CIDVersion\n */\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDatastore (blockstore, datastore, pinstore, onProgress) {\n  if (!await datastore.has(PIN_DS_KEY)) {\n    return\n  }\n\n  const mh = await datastore.get(PIN_DS_KEY)\n  const cid = CID.decode(mh)\n  const pinRootBuf = await blockstore.get(cid)\n  const pinRoot = dagPb.decode(pinRootBuf)\n  let counter = 0\n  const pinCount = (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.recursive))) + (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.direct)))\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.recursive)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated recursive pin ${cid}`)\n  }\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.direct)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated direct pin ${cid}`)\n  }\n\n  await blockstore.delete(cid)\n  await datastore.delete(PIN_DS_KEY)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDAG (blockstore, datastore, pinstore, onProgress) {\n  const recursivePins = []\n  const directPins = []\n  let counter = 0\n  const pinCount = await length(pinstore.queryKeys({}))\n\n  for await (const { key, value } of pinstore.query({})) {\n    counter++\n    const pin = cbor.decode(value)\n    const cid = CID.create(\n      pin.version || 0,\n      pin.codec || dagPb.code,\n      mhd.decode(base32.decode('b' + key.toString().toLowerCase().split('/').pop()))\n    )\n\n    if (pin.depth === 0) {\n      onProgress((counter / pinCount) * 100, `Reverted direct pin ${cid}`)\n\n      directPins.push(cid)\n    } else {\n      onProgress((counter / pinCount) * 100, `Reverted recursive pin ${cid}`)\n\n      recursivePins.push(cid)\n    }\n  }\n\n  onProgress(100, 'Updating pin root')\n  const pinRoot = {\n    Links: [\n      await pinset.storeSet(blockstore, PinTypes.direct, directPins),\n      await pinset.storeSet(blockstore, PinTypes.recursive, recursivePins)\n    ]\n  }\n  const buf = dagPb.encode(pinRoot)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n  await datastore.put(PIN_DS_KEY, cid.bytes)\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  const blockstore = backends.blocks\n  const datastore = backends.datastore\n  const pinstore = backends.pins\n\n  await blockstore.open()\n  await datastore.open()\n  await pinstore.open()\n\n  try {\n    await fn(blockstore, datastore, pinstore, onProgress)\n  } finally {\n    await pinstore.close()\n    await datastore.close()\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 9,\n  description: 'Migrates pins to datastore',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDatastore)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDAG)\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { notFoundError } from 'datastore-core/errors'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config')\nexport const VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n","\nimport { findLevelJs } from '../../utils.js'\nimport { fromString } from 'uint8arrays/from-string'\nimport { toString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../types').MigrationProgressCallback} MigrationProgressCallback\n *\n * @typedef {{ type: 'del', key: string | Uint8Array } | { type: 'put', key: string | Uint8Array, value: Uint8Array }} Operation\n * @typedef {function (string, Uint8Array): Operation[]} UpgradeFunction\n * @typedef {function (Uint8Array, Uint8Array): Operation[]} DowngradeFunction\n */\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToBinary (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need an upgrade`)\n\n    return\n  }\n\n  onProgress(`Upgrading ${name}`)\n\n  /**\n   * @type {UpgradeFunction}\n   */\n  const upgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: fromString(key), value: value }\n    ]\n  }\n\n  await withEach(db, upgrade)\n}\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToStrings (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need a downgrade`)\n\n    return\n  }\n\n  onProgress(`Downgrading ${name}`)\n\n  /**\n   * @type {DowngradeFunction}\n   */\n  const downgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: toString(key), value: value }\n    ]\n  }\n\n  await withEach(db, downgrade)\n}\n\n/**\n * @param {any} store\n * @returns {Datastore}\n */\nfunction unwrap (store) {\n  if (store.child) {\n    return unwrap(store.child)\n  }\n\n  return store\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  /**\n   * @type {{ name: string, store: Datastore }[]}\n   */\n  const datastores = Object.entries(backends)\n    .map(([key, backend]) => ({ key, backend: unwrap(backend) }))\n    .filter(({ key, backend }) => backend.constructor.name === 'LevelDatastore')\n    .map(({ key, backend }) => ({\n      name: key,\n      store: backend\n    }))\n\n  onProgress(0, `Migrating ${datastores.length} dbs`)\n  let migrated = 0\n\n  /**\n   * @param {string} message\n   */\n  const progress = (message) => {\n    onProgress(Math.round((migrated / datastores.length) * 100), message)\n  }\n\n  for (const { name, store } of datastores) {\n    await store.open()\n\n    try {\n      await fn(name, store, progress)\n    } finally {\n      migrated++\n      await store.close()\n    }\n  }\n\n  onProgress(100, `Migrated ${datastores.length} dbs`)\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 10,\n  description: 'Migrates datastore-level keys to binary',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToBinary)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToStrings)\n  }\n}\n\n/**\n * Uses the upgrade strategy from level-js@5.x.x - note we can't call the `.upgrade` command\n * directly because it will be removed in level-js@6.x.x and we can't guarantee users will\n * have migrated by then - e.g. they may jump from level-js@4.x.x straight to level-js@6.x.x\n * so we have to duplicate the code here.\n *\n * @param {any} db\n * @param {UpgradeFunction | DowngradeFunction} fn\n * @returns {Promise<void>}\n */\nfunction withEach (db, fn) {\n  /**\n   * @param {Operation[]} operations\n   * @param {(error?: Error) => void} next\n   */\n  function batch (operations, next) {\n    const store = db.store('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    /** @type {Error | undefined} */\n    let error\n\n    transaction.onabort = () => next(error || transaction.error || new Error('aborted by user'))\n    transaction.oncomplete = () => next()\n\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (/** @type {any} */ err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      }\n    }\n\n    loop()\n  }\n\n  return new Promise((resolve, reject) => {\n    const it = db.iterator()\n    // raw keys and values only\n    /**\n     * @template T\n     * @param {T} data\n     */\n    const id = (data) => data\n    it._deserializeKey = it._deserializeValue = id\n    next()\n\n    function next () {\n      /**\n       * @param {Error | undefined} err\n       * @param {string | undefined} key\n       * @param {Uint8Array} value\n       */\n      const handleNext = (err, key, value) => {\n        if (err || key === undefined) {\n          /**\n           * @param {Error | undefined} err2\n           */\n          const handleEnd = (err2) => {\n            if (err2) {\n              reject(err2)\n              return\n            }\n\n            resolve()\n          }\n\n          it.end(handleEnd)\n\n          return\n        }\n\n        // @ts-ignore\n        batch(fn(key, value), next)\n      }\n      it.next(handleNext)\n    }\n  })\n}\n","\nimport { Key } from 'interface-datastore/key'\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInDatastore (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.root.has(MFS_ROOT_KEY)) {\n    const root = await backends.root.get(MFS_ROOT_KEY)\n    await backends.datastore.put(MFS_ROOT_KEY, root)\n    await backends.root.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo datastore')\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInRoot (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo root datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.datastore.has(MFS_ROOT_KEY)) {\n    const root = await backends.datastore.get(MFS_ROOT_KEY)\n    await backends.root.put(MFS_ROOT_KEY, root)\n    await backends.datastore.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo root datastore')\n}\n\n/** @type {import('../../types').Migration} */\nexport const migration = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Protocols = $root.Protocols = (() => {\n\n    /**\n     * Properties of a Protocols.\n     * @exports IProtocols\n     * @interface IProtocols\n     * @property {Array.<string>|null} [protocols] Protocols protocols\n     */\n\n    /**\n     * Constructs a new Protocols.\n     * @exports Protocols\n     * @classdesc Represents a Protocols.\n     * @implements IProtocols\n     * @constructor\n     * @param {IProtocols=} [p] Properties to set\n     */\n    function Protocols(p) {\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Protocols protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Protocols\n     * @instance\n     */\n    Protocols.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n     * @function encode\n     * @memberof Protocols\n     * @static\n     * @param {IProtocols} m Protocols message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Protocols.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(10).string(m.protocols[i]);\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a Protocols message from the specified reader or buffer.\n     * @function decode\n     * @memberof Protocols\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Protocols} Protocols\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Protocols.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Protocols();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Protocols\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Protocols} Protocols\n     */\n    Protocols.fromObject = function fromObject(d) {\n        if (d instanceof $root.Protocols)\n            return d;\n        var m = new $root.Protocols();\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Protocols.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Protocols\n     * @static\n     * @param {Protocols} m Protocols\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Protocols.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.protocols = [];\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Protocols to JSON.\n     * @function toJSON\n     * @memberof Protocols\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Protocols.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Protocols;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Addresses = $root.Addresses = (() => {\n\n    /**\n     * Properties of an Addresses.\n     * @exports IAddresses\n     * @interface IAddresses\n     * @property {Array.<Addresses.IAddress>|null} [addrs] Addresses addrs\n     * @property {Addresses.ICertifiedRecord|null} [certifiedRecord] Addresses certifiedRecord\n     */\n\n    /**\n     * Constructs a new Addresses.\n     * @exports Addresses\n     * @classdesc Represents an Addresses.\n     * @implements IAddresses\n     * @constructor\n     * @param {IAddresses=} [p] Properties to set\n     */\n    function Addresses(p) {\n        this.addrs = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Addresses addrs.\n     * @member {Array.<Addresses.IAddress>} addrs\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.addrs = $util.emptyArray;\n\n    /**\n     * Addresses certifiedRecord.\n     * @member {Addresses.ICertifiedRecord|null|undefined} certifiedRecord\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.certifiedRecord = null;\n\n    /**\n     * Encodes the specified Addresses message. Does not implicitly {@link Addresses.verify|verify} messages.\n     * @function encode\n     * @memberof Addresses\n     * @static\n     * @param {IAddresses} m Addresses message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Addresses.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addrs != null && m.addrs.length) {\n            for (var i = 0; i < m.addrs.length; ++i)\n                $root.Addresses.Address.encode(m.addrs[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.certifiedRecord != null && Object.hasOwnProperty.call(m, \"certifiedRecord\"))\n            $root.Addresses.CertifiedRecord.encode(m.certifiedRecord, w.uint32(18).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes an Addresses message from the specified reader or buffer.\n     * @function decode\n     * @memberof Addresses\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Addresses} Addresses\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Addresses.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addrs && m.addrs.length))\n                    m.addrs = [];\n                m.addrs.push($root.Addresses.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                m.certifiedRecord = $root.Addresses.CertifiedRecord.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Addresses message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Addresses\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Addresses} Addresses\n     */\n    Addresses.fromObject = function fromObject(d) {\n        if (d instanceof $root.Addresses)\n            return d;\n        var m = new $root.Addresses();\n        if (d.addrs) {\n            if (!Array.isArray(d.addrs))\n                throw TypeError(\".Addresses.addrs: array expected\");\n            m.addrs = [];\n            for (var i = 0; i < d.addrs.length; ++i) {\n                if (typeof d.addrs[i] !== \"object\")\n                    throw TypeError(\".Addresses.addrs: object expected\");\n                m.addrs[i] = $root.Addresses.Address.fromObject(d.addrs[i]);\n            }\n        }\n        if (d.certifiedRecord != null) {\n            if (typeof d.certifiedRecord !== \"object\")\n                throw TypeError(\".Addresses.certifiedRecord: object expected\");\n            m.certifiedRecord = $root.Addresses.CertifiedRecord.fromObject(d.certifiedRecord);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Addresses message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Addresses\n     * @static\n     * @param {Addresses} m Addresses\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Addresses.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addrs = [];\n        }\n        if (o.defaults) {\n            d.certifiedRecord = null;\n        }\n        if (m.addrs && m.addrs.length) {\n            d.addrs = [];\n            for (var j = 0; j < m.addrs.length; ++j) {\n                d.addrs[j] = $root.Addresses.Address.toObject(m.addrs[j], o);\n            }\n        }\n        if (m.certifiedRecord != null && m.hasOwnProperty(\"certifiedRecord\")) {\n            d.certifiedRecord = $root.Addresses.CertifiedRecord.toObject(m.certifiedRecord, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Addresses to JSON.\n     * @function toJSON\n     * @memberof Addresses\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Addresses.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    Addresses.Address = (function() {\n\n        /**\n         * Properties of an Address.\n         * @memberof Addresses\n         * @interface IAddress\n         * @property {Uint8Array|null} [multiaddr] Address multiaddr\n         * @property {boolean|null} [isCertified] Address isCertified\n         */\n\n        /**\n         * Constructs a new Address.\n         * @memberof Addresses\n         * @classdesc Represents an Address.\n         * @implements IAddress\n         * @constructor\n         * @param {Addresses.IAddress=} [p] Properties to set\n         */\n        function Address(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Address multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Address isCertified.\n         * @member {boolean|null|undefined} isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.isCertified = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * Address _isCertified.\n         * @member {\"isCertified\"|undefined} _isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Object.defineProperty(Address.prototype, \"_isCertified\", {\n            get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified Address message. Does not implicitly {@link Addresses.Address.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.IAddress} m Address message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Address.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n                w.uint32(16).bool(m.isCertified);\n            return w;\n        };\n\n        /**\n         * Decodes an Address message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.Address\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.Address} Address\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Address.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.Address();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                case 2:\n                    m.isCertified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an Address message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.Address} Address\n         */\n        Address.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.Address)\n                return d;\n            var m = new $root.Addresses.Address();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            if (d.isCertified != null) {\n                m.isCertified = Boolean(d.isCertified);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an Address message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.Address} m Address\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Address.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n                d.isCertified = m.isCertified;\n                if (o.oneofs)\n                    d._isCertified = \"isCertified\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Address to JSON.\n         * @function toJSON\n         * @memberof Addresses.Address\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Address.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Address;\n    })();\n\n    Addresses.CertifiedRecord = (function() {\n\n        /**\n         * Properties of a CertifiedRecord.\n         * @memberof Addresses\n         * @interface ICertifiedRecord\n         * @property {number|null} [seq] CertifiedRecord seq\n         * @property {Uint8Array|null} [raw] CertifiedRecord raw\n         */\n\n        /**\n         * Constructs a new CertifiedRecord.\n         * @memberof Addresses\n         * @classdesc Represents a CertifiedRecord.\n         * @implements ICertifiedRecord\n         * @constructor\n         * @param {Addresses.ICertifiedRecord=} [p] Properties to set\n         */\n        function CertifiedRecord(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CertifiedRecord seq.\n         * @member {number} seq\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * CertifiedRecord raw.\n         * @member {Uint8Array} raw\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.raw = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified CertifiedRecord message. Does not implicitly {@link Addresses.CertifiedRecord.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.ICertifiedRecord} m CertifiedRecord message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CertifiedRecord.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n                w.uint32(8).uint64(m.seq);\n            if (m.raw != null && Object.hasOwnProperty.call(m, \"raw\"))\n                w.uint32(18).bytes(m.raw);\n            return w;\n        };\n\n        /**\n         * Decodes a CertifiedRecord message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CertifiedRecord.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.CertifiedRecord();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.seq = r.uint64();\n                    break;\n                case 2:\n                    m.raw = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a CertifiedRecord message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         */\n        CertifiedRecord.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.CertifiedRecord)\n                return d;\n            var m = new $root.Addresses.CertifiedRecord();\n            if (d.seq != null) {\n                if ($util.Long)\n                    (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n                else if (typeof d.seq === \"string\")\n                    m.seq = parseInt(d.seq, 10);\n                else if (typeof d.seq === \"number\")\n                    m.seq = d.seq;\n                else if (typeof d.seq === \"object\")\n                    m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n            }\n            if (d.raw != null) {\n                if (typeof d.raw === \"string\")\n                    $util.base64.decode(d.raw, m.raw = $util.newBuffer($util.base64.length(d.raw)), 0);\n                else if (d.raw.length)\n                    m.raw = d.raw;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a CertifiedRecord message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.CertifiedRecord} m CertifiedRecord\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CertifiedRecord.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if ($util.Long) {\n                    var n = new $util.Long(0, 0, true);\n                    d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n                } else\n                    d.seq = o.longs === String ? \"0\" : 0;\n                if (o.bytes === String)\n                    d.raw = \"\";\n                else {\n                    d.raw = [];\n                    if (o.bytes !== Array)\n                        d.raw = $util.newBuffer(d.raw);\n                }\n            }\n            if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n                if (typeof m.seq === \"number\")\n                    d.seq = o.longs === String ? String(m.seq) : m.seq;\n                else\n                    d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n            }\n            if (m.raw != null && m.hasOwnProperty(\"raw\")) {\n                d.raw = o.bytes === String ? $util.base64.encode(m.raw, 0, m.raw.length) : o.bytes === Array ? Array.prototype.slice.call(m.raw) : m.raw;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this CertifiedRecord to JSON.\n         * @function toJSON\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CertifiedRecord.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CertifiedRecord;\n    })();\n\n    return Addresses;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Peer = $root.Peer = (() => {\n\n    /**\n     * Properties of a Peer.\n     * @exports IPeer\n     * @interface IPeer\n     * @property {Array.<IAddress>|null} [addresses] Peer addresses\n     * @property {Array.<string>|null} [protocols] Peer protocols\n     * @property {Array.<IMetadata>|null} [metadata] Peer metadata\n     * @property {Uint8Array|null} [pubKey] Peer pubKey\n     * @property {Uint8Array|null} [peerRecordEnvelope] Peer peerRecordEnvelope\n     */\n\n    /**\n     * Constructs a new Peer.\n     * @exports Peer\n     * @classdesc Represents a Peer.\n     * @implements IPeer\n     * @constructor\n     * @param {IPeer=} [p] Properties to set\n     */\n    function Peer(p) {\n        this.addresses = [];\n        this.protocols = [];\n        this.metadata = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Peer addresses.\n     * @member {Array.<IAddress>} addresses\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Peer protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Peer metadata.\n     * @member {Array.<IMetadata>} metadata\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.metadata = $util.emptyArray;\n\n    /**\n     * Peer pubKey.\n     * @member {Uint8Array|null|undefined} pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.pubKey = null;\n\n    /**\n     * Peer peerRecordEnvelope.\n     * @member {Uint8Array|null|undefined} peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.peerRecordEnvelope = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Peer _pubKey.\n     * @member {\"pubKey\"|undefined} _pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_pubKey\", {\n        get: $util.oneOfGetter($oneOfFields = [\"pubKey\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Peer _peerRecordEnvelope.\n     * @member {\"peerRecordEnvelope\"|undefined} _peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_peerRecordEnvelope\", {\n        get: $util.oneOfGetter($oneOfFields = [\"peerRecordEnvelope\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Peer message. Does not implicitly {@link Peer.verify|verify} messages.\n     * @function encode\n     * @memberof Peer\n     * @static\n     * @param {IPeer} m Peer message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Peer.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.Address.encode(m.addresses[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(18).string(m.protocols[i]);\n        }\n        if (m.metadata != null && m.metadata.length) {\n            for (var i = 0; i < m.metadata.length; ++i)\n                $root.Metadata.encode(m.metadata[i], w.uint32(26).fork()).ldelim();\n        }\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(34).bytes(m.pubKey);\n        if (m.peerRecordEnvelope != null && Object.hasOwnProperty.call(m, \"peerRecordEnvelope\"))\n            w.uint32(42).bytes(m.peerRecordEnvelope);\n        return w;\n    };\n\n    /**\n     * Decodes a Peer message from the specified reader or buffer.\n     * @function decode\n     * @memberof Peer\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Peer} Peer\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Peer.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Peer();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            case 3:\n                if (!(m.metadata && m.metadata.length))\n                    m.metadata = [];\n                m.metadata.push($root.Metadata.decode(r, r.uint32()));\n                break;\n            case 4:\n                m.pubKey = r.bytes();\n                break;\n            case 5:\n                m.peerRecordEnvelope = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Peer\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Peer} Peer\n     */\n    Peer.fromObject = function fromObject(d) {\n        if (d instanceof $root.Peer)\n            return d;\n        var m = new $root.Peer();\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".Peer.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".Peer.addresses: object expected\");\n                m.addresses[i] = $root.Address.fromObject(d.addresses[i]);\n            }\n        }\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Peer.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        if (d.metadata) {\n            if (!Array.isArray(d.metadata))\n                throw TypeError(\".Peer.metadata: array expected\");\n            m.metadata = [];\n            for (var i = 0; i < d.metadata.length; ++i) {\n                if (typeof d.metadata[i] !== \"object\")\n                    throw TypeError(\".Peer.metadata: object expected\");\n                m.metadata[i] = $root.Metadata.fromObject(d.metadata[i]);\n            }\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.peerRecordEnvelope != null) {\n            if (typeof d.peerRecordEnvelope === \"string\")\n                $util.base64.decode(d.peerRecordEnvelope, m.peerRecordEnvelope = $util.newBuffer($util.base64.length(d.peerRecordEnvelope)), 0);\n            else if (d.peerRecordEnvelope.length)\n                m.peerRecordEnvelope = d.peerRecordEnvelope;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Peer message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Peer\n     * @static\n     * @param {Peer} m Peer\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Peer.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n            d.protocols = [];\n            d.metadata = [];\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.Address.toObject(m.addresses[j], o);\n            }\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        if (m.metadata && m.metadata.length) {\n            d.metadata = [];\n            for (var j = 0; j < m.metadata.length; ++j) {\n                d.metadata[j] = $root.Metadata.toObject(m.metadata[j], o);\n            }\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n            if (o.oneofs)\n                d._pubKey = \"pubKey\";\n        }\n        if (m.peerRecordEnvelope != null && m.hasOwnProperty(\"peerRecordEnvelope\")) {\n            d.peerRecordEnvelope = o.bytes === String ? $util.base64.encode(m.peerRecordEnvelope, 0, m.peerRecordEnvelope.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerRecordEnvelope) : m.peerRecordEnvelope;\n            if (o.oneofs)\n                d._peerRecordEnvelope = \"peerRecordEnvelope\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Peer to JSON.\n     * @function toJSON\n     * @memberof Peer\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Peer.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Peer;\n})();\n\nexport const Address = $root.Address = (() => {\n\n    /**\n     * Properties of an Address.\n     * @exports IAddress\n     * @interface IAddress\n     * @property {Uint8Array|null} [multiaddr] Address multiaddr\n     * @property {boolean|null} [isCertified] Address isCertified\n     */\n\n    /**\n     * Constructs a new Address.\n     * @exports Address\n     * @classdesc Represents an Address.\n     * @implements IAddress\n     * @constructor\n     * @param {IAddress=} [p] Properties to set\n     */\n    function Address(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Address multiaddr.\n     * @member {Uint8Array} multiaddr\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.multiaddr = $util.newBuffer([]);\n\n    /**\n     * Address isCertified.\n     * @member {boolean|null|undefined} isCertified\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.isCertified = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Address _isCertified.\n     * @member {\"isCertified\"|undefined} _isCertified\n     * @memberof Address\n     * @instance\n     */\n    Object.defineProperty(Address.prototype, \"_isCertified\", {\n        get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Address message. Does not implicitly {@link Address.verify|verify} messages.\n     * @function encode\n     * @memberof Address\n     * @static\n     * @param {IAddress} m Address message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Address.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n            w.uint32(10).bytes(m.multiaddr);\n        if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n            w.uint32(16).bool(m.isCertified);\n        return w;\n    };\n\n    /**\n     * Decodes an Address message from the specified reader or buffer.\n     * @function decode\n     * @memberof Address\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Address} Address\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Address.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Address();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.multiaddr = r.bytes();\n                break;\n            case 2:\n                m.isCertified = r.bool();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Address message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Address\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Address} Address\n     */\n    Address.fromObject = function fromObject(d) {\n        if (d instanceof $root.Address)\n            return d;\n        var m = new $root.Address();\n        if (d.multiaddr != null) {\n            if (typeof d.multiaddr === \"string\")\n                $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n            else if (d.multiaddr.length)\n                m.multiaddr = d.multiaddr;\n        }\n        if (d.isCertified != null) {\n            m.isCertified = Boolean(d.isCertified);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Address message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Address\n     * @static\n     * @param {Address} m Address\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Address.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.multiaddr = \"\";\n            else {\n                d.multiaddr = [];\n                if (o.bytes !== Array)\n                    d.multiaddr = $util.newBuffer(d.multiaddr);\n            }\n        }\n        if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n            d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n        }\n        if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n            d.isCertified = m.isCertified;\n            if (o.oneofs)\n                d._isCertified = \"isCertified\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Address to JSON.\n     * @function toJSON\n     * @memberof Address\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Address.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Address;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [key] Metadata key\n     * @property {Uint8Array|null} [value] Metadata value\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata key.\n     * @member {string} key\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.key = \"\";\n\n    /**\n     * Metadata value.\n     * @member {Uint8Array} value\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.value = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n            w.uint32(10).string(m.key);\n        if (m.value != null && Object.hasOwnProperty.call(m, \"value\"))\n            w.uint32(18).bytes(m.value);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.key = r.string();\n                break;\n            case 2:\n                m.value = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.key != null) {\n            m.key = String(d.key);\n        }\n        if (d.value != null) {\n            if (typeof d.value === \"string\")\n                $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);\n            else if (d.value.length)\n                m.value = d.value;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.key = \"\";\n            if (o.bytes === String)\n                d.value = \"\";\n            else {\n                d.value = [];\n                if (o.bytes !== Array)\n                    d.value = $util.newBuffer(d.value);\n            }\n        }\n        if (m.key != null && m.hasOwnProperty(\"key\")) {\n            d.key = m.key;\n        }\n        if (m.value != null && m.hasOwnProperty(\"value\")) {\n            d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Envelope = $root.Envelope = (() => {\n\n    /**\n     * Properties of an Envelope.\n     * @exports IEnvelope\n     * @interface IEnvelope\n     * @property {Uint8Array|null} [publicKey] Envelope publicKey\n     * @property {Uint8Array|null} [payloadType] Envelope payloadType\n     * @property {Uint8Array|null} [payload] Envelope payload\n     * @property {Uint8Array|null} [signature] Envelope signature\n     */\n\n    /**\n     * Constructs a new Envelope.\n     * @exports Envelope\n     * @classdesc Represents an Envelope.\n     * @implements IEnvelope\n     * @constructor\n     * @param {IEnvelope=} [p] Properties to set\n     */\n    function Envelope(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Envelope publicKey.\n     * @member {Uint8Array} publicKey\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.publicKey = $util.newBuffer([]);\n\n    /**\n     * Envelope payloadType.\n     * @member {Uint8Array} payloadType\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payloadType = $util.newBuffer([]);\n\n    /**\n     * Envelope payload.\n     * @member {Uint8Array} payload\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payload = $util.newBuffer([]);\n\n    /**\n     * Envelope signature.\n     * @member {Uint8Array} signature\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.signature = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Envelope message. Does not implicitly {@link Envelope.verify|verify} messages.\n     * @function encode\n     * @memberof Envelope\n     * @static\n     * @param {IEnvelope} m Envelope message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Envelope.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n            w.uint32(10).bytes(m.publicKey);\n        if (m.payloadType != null && Object.hasOwnProperty.call(m, \"payloadType\"))\n            w.uint32(18).bytes(m.payloadType);\n        if (m.payload != null && Object.hasOwnProperty.call(m, \"payload\"))\n            w.uint32(26).bytes(m.payload);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(42).bytes(m.signature);\n        return w;\n    };\n\n    /**\n     * Decodes an Envelope message from the specified reader or buffer.\n     * @function decode\n     * @memberof Envelope\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Envelope} Envelope\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Envelope.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Envelope();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.publicKey = r.bytes();\n                break;\n            case 2:\n                m.payloadType = r.bytes();\n                break;\n            case 3:\n                m.payload = r.bytes();\n                break;\n            case 5:\n                m.signature = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Envelope message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Envelope\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Envelope} Envelope\n     */\n    Envelope.fromObject = function fromObject(d) {\n        if (d instanceof $root.Envelope)\n            return d;\n        var m = new $root.Envelope();\n        if (d.publicKey != null) {\n            if (typeof d.publicKey === \"string\")\n                $util.base64.decode(d.publicKey, m.publicKey = $util.newBuffer($util.base64.length(d.publicKey)), 0);\n            else if (d.publicKey.length)\n                m.publicKey = d.publicKey;\n        }\n        if (d.payloadType != null) {\n            if (typeof d.payloadType === \"string\")\n                $util.base64.decode(d.payloadType, m.payloadType = $util.newBuffer($util.base64.length(d.payloadType)), 0);\n            else if (d.payloadType.length)\n                m.payloadType = d.payloadType;\n        }\n        if (d.payload != null) {\n            if (typeof d.payload === \"string\")\n                $util.base64.decode(d.payload, m.payload = $util.newBuffer($util.base64.length(d.payload)), 0);\n            else if (d.payload.length)\n                m.payload = d.payload;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Envelope message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Envelope\n     * @static\n     * @param {Envelope} m Envelope\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Envelope.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.publicKey = \"\";\n            else {\n                d.publicKey = [];\n                if (o.bytes !== Array)\n                    d.publicKey = $util.newBuffer(d.publicKey);\n            }\n            if (o.bytes === String)\n                d.payloadType = \"\";\n            else {\n                d.payloadType = [];\n                if (o.bytes !== Array)\n                    d.payloadType = $util.newBuffer(d.payloadType);\n            }\n            if (o.bytes === String)\n                d.payload = \"\";\n            else {\n                d.payload = [];\n                if (o.bytes !== Array)\n                    d.payload = $util.newBuffer(d.payload);\n            }\n            if (o.bytes === String)\n                d.signature = \"\";\n            else {\n                d.signature = [];\n                if (o.bytes !== Array)\n                    d.signature = $util.newBuffer(d.signature);\n            }\n        }\n        if (m.publicKey != null && m.hasOwnProperty(\"publicKey\")) {\n            d.publicKey = o.bytes === String ? $util.base64.encode(m.publicKey, 0, m.publicKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.publicKey) : m.publicKey;\n        }\n        if (m.payloadType != null && m.hasOwnProperty(\"payloadType\")) {\n            d.payloadType = o.bytes === String ? $util.base64.encode(m.payloadType, 0, m.payloadType.length) : o.bytes === Array ? Array.prototype.slice.call(m.payloadType) : m.payloadType;\n        }\n        if (m.payload != null && m.hasOwnProperty(\"payload\")) {\n            d.payload = o.bytes === String ? $util.base64.encode(m.payload, 0, m.payload.length) : o.bytes === Array ? Array.prototype.slice.call(m.payload) : m.payload;\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Envelope to JSON.\n     * @function toJSON\n     * @memberof Envelope\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Envelope.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Envelope;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const PeerRecord = $root.PeerRecord = (() => {\n\n    /**\n     * Properties of a PeerRecord.\n     * @exports IPeerRecord\n     * @interface IPeerRecord\n     * @property {Uint8Array|null} [peerId] PeerRecord peerId\n     * @property {number|null} [seq] PeerRecord seq\n     * @property {Array.<PeerRecord.IAddressInfo>|null} [addresses] PeerRecord addresses\n     */\n\n    /**\n     * Constructs a new PeerRecord.\n     * @exports PeerRecord\n     * @classdesc Represents a PeerRecord.\n     * @implements IPeerRecord\n     * @constructor\n     * @param {IPeerRecord=} [p] Properties to set\n     */\n    function PeerRecord(p) {\n        this.addresses = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerRecord peerId.\n     * @member {Uint8Array} peerId\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.peerId = $util.newBuffer([]);\n\n    /**\n     * PeerRecord seq.\n     * @member {number} seq\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * PeerRecord addresses.\n     * @member {Array.<PeerRecord.IAddressInfo>} addresses\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Encodes the specified PeerRecord message. Does not implicitly {@link PeerRecord.verify|verify} messages.\n     * @function encode\n     * @memberof PeerRecord\n     * @static\n     * @param {IPeerRecord} m PeerRecord message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerRecord.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.peerId != null && Object.hasOwnProperty.call(m, \"peerId\"))\n            w.uint32(10).bytes(m.peerId);\n        if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n            w.uint32(16).uint64(m.seq);\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.PeerRecord.AddressInfo.encode(m.addresses[i], w.uint32(26).fork()).ldelim();\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a PeerRecord message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerRecord\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerRecord} PeerRecord\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerRecord.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.peerId = r.bytes();\n                break;\n            case 2:\n                m.seq = r.uint64();\n                break;\n            case 3:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.PeerRecord.AddressInfo.decode(r, r.uint32()));\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PeerRecord message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerRecord\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerRecord} PeerRecord\n     */\n    PeerRecord.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerRecord)\n            return d;\n        var m = new $root.PeerRecord();\n        if (d.peerId != null) {\n            if (typeof d.peerId === \"string\")\n                $util.base64.decode(d.peerId, m.peerId = $util.newBuffer($util.base64.length(d.peerId)), 0);\n            else if (d.peerId.length)\n                m.peerId = d.peerId;\n        }\n        if (d.seq != null) {\n            if ($util.Long)\n                (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n            else if (typeof d.seq === \"string\")\n                m.seq = parseInt(d.seq, 10);\n            else if (typeof d.seq === \"number\")\n                m.seq = d.seq;\n            else if (typeof d.seq === \"object\")\n                m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n        }\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".PeerRecord.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".PeerRecord.addresses: object expected\");\n                m.addresses[i] = $root.PeerRecord.AddressInfo.fromObject(d.addresses[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerRecord message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerRecord\n     * @static\n     * @param {PeerRecord} m PeerRecord\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerRecord.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.peerId = \"\";\n            else {\n                d.peerId = [];\n                if (o.bytes !== Array)\n                    d.peerId = $util.newBuffer(d.peerId);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.seq = o.longs === String ? \"0\" : 0;\n        }\n        if (m.peerId != null && m.hasOwnProperty(\"peerId\")) {\n            d.peerId = o.bytes === String ? $util.base64.encode(m.peerId, 0, m.peerId.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerId) : m.peerId;\n        }\n        if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n            if (typeof m.seq === \"number\")\n                d.seq = o.longs === String ? String(m.seq) : m.seq;\n            else\n                d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.PeerRecord.AddressInfo.toObject(m.addresses[j], o);\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerRecord to JSON.\n     * @function toJSON\n     * @memberof PeerRecord\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerRecord.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    PeerRecord.AddressInfo = (function() {\n\n        /**\n         * Properties of an AddressInfo.\n         * @memberof PeerRecord\n         * @interface IAddressInfo\n         * @property {Uint8Array|null} [multiaddr] AddressInfo multiaddr\n         */\n\n        /**\n         * Constructs a new AddressInfo.\n         * @memberof PeerRecord\n         * @classdesc Represents an AddressInfo.\n         * @implements IAddressInfo\n         * @constructor\n         * @param {PeerRecord.IAddressInfo=} [p] Properties to set\n         */\n        function AddressInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddressInfo multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         */\n        AddressInfo.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified AddressInfo message. Does not implicitly {@link PeerRecord.AddressInfo.verify|verify} messages.\n         * @function encode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.IAddressInfo} m AddressInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddressInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            return w;\n        };\n\n        /**\n         * Decodes an AddressInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddressInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord.AddressInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an AddressInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         */\n        AddressInfo.fromObject = function fromObject(d) {\n            if (d instanceof $root.PeerRecord.AddressInfo)\n                return d;\n            var m = new $root.PeerRecord.AddressInfo();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an AddressInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.AddressInfo} m AddressInfo\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AddressInfo.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this AddressInfo to JSON.\n         * @function toJSON\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AddressInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return AddressInfo;\n    })();\n\n    return PeerRecord;\n})();\n\nexport { $root as default };\n","import $protobuf from 'protobufjs/minimal.js'\nimport { Key } from 'interface-datastore/key'\nimport { Protocols } from './pb/proto-book.js'\nimport { Addresses } from './pb/address-book.js'\nimport { Peer } from './pb/peer.js'\nimport { Envelope } from './pb/envelope.js'\nimport { PeerRecord } from './pb/peer-record.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n// @ts-expect-error Explicitly disable long.js support\n$protobuf.util.Long = undefined\n$protobuf.configure()\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderSingleDatastoreKey (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a single datastore key')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n    const [, prefix, type, peerId, metadataKey] = keyStr.split('/')\n\n    if (prefix !== 'peers') {\n      continue\n    }\n\n    if (!['protos', 'addrs', 'metadata', 'keys'].includes(type)) {\n      continue\n    }\n\n    if (!peerId) {\n      continue\n    }\n\n    peers[peerId] = peers[peerId] || {\n      addresses: [],\n      protocols: [],\n      metadata: []\n    }\n\n    if (type === 'protos') {\n      const protos = Protocols.decode(value)\n\n      peers[peerId].protocols = protos.protocols.sort()\n    } else if (type === 'addrs') {\n      const addrs = Addresses.decode(value)\n\n      peers[peerId].addresses = addrs.addrs.sort((a, b) => {\n        return multiaddr(a.multiaddr).toString().localeCompare(multiaddr(b.multiaddr).toString())\n      })\n\n      if (addrs.certifiedRecord && addrs.certifiedRecord.raw) {\n        peers[peerId].peerRecordEnvelope = addrs.certifiedRecord.raw\n      }\n    } else if (type === 'metadata') {\n      peers[peerId].metadata.push({ key: metadataKey, value })\n    } else if (type === 'keys') {\n      peers[peerId].pubKey = value\n    }\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const peerId of Object.keys(peers)) {\n    const peer = peers[peerId]\n    peer.metadata = peer.metadata.sort((/** @type {{ key: string }} */ a, /** @type {{ key: string }} */ b) => a.key.localeCompare(b.key))\n\n    const data = Peer.encode(peer).finish()\n\n    await backends.datastore.put(new Key(`/peers/${peerId}`), data)\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under a single datastore key')\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderMultipleDatastoreKeys (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a multiple datastore keys')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n\n    const [, , peerId] = keyStr.split('/')\n\n    peers[peerId] = Peer.decode(value)\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const [peerId, peer] of Object.entries(peers)) {\n    if (peer.protocols && peer.protocols.length > 0) {\n      await backends.datastore.put(new Key(`/peers/protos/${peerId}`), Protocols.encode({\n        protocols: peer.protocols\n      }).finish())\n    }\n\n    if (peer.addresses && peer.addresses.length > 0) {\n      const peerRecordEnvelope = peer.peerRecordEnvelope\n      let certifiedRecord\n\n      if (peerRecordEnvelope) {\n        const envelope = Envelope.decode(peerRecordEnvelope)\n        const record = PeerRecord.decode(envelope.payload)\n\n        certifiedRecord = {\n          raw: peerRecordEnvelope,\n          seq: record.seq\n        }\n      }\n\n      await backends.datastore.put(new Key(`/peers/addrs/${peerId}`), Addresses.encode({\n        addrs: peer.addresses,\n        certifiedRecord\n      }).finish())\n    }\n\n    if (peer.metadata && peer.metadata.length > 0) {\n      for (const { key, value } of peer.metadata) {\n        await backends.datastore.put(new Key(`/peers/metadata/${peerId}/${key}`), value)\n      }\n    }\n\n    if (peer.pubKey) {\n      await backends.datastore.put(new Key(`/peers/keys/${peerId}`), peer.pubKey)\n    }\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under multiple datastore keys')\n}\n\n/** @type {import('../../types').Migration} */\nexport const migration = {\n  version: 12,\n  description: 'Store each peerstore peer under a single datastore key',\n  migrate: storePeerUnderSingleDatastoreKey,\n  revert: storePeerUnderMultipleDatastoreKeys\n}\n","import { migration as migration8 } from './migration-8/index.js'\nimport { migration as migration9 } from './migration-9/index.js'\nimport { migration as migration10 } from './migration-10/index.js'\nimport { migration as migration11 } from './migration-11/index.js'\nimport { migration as migration12 } from './migration-12/index.js'\n\n/**\n * @type {import('../types').Migration}\n */\nconst emptyMigration = {\n  description: 'Empty migration.',\n  // @ts-ignore\n  migrate: () => {},\n  // @ts-ignore\n  revert: () => {},\n  empty: true\n}\n\nexport default [\n  Object.assign({ version: 1 }, emptyMigration),\n  Object.assign({ version: 2 }, emptyMigration),\n  Object.assign({ version: 3 }, emptyMigration),\n  Object.assign({ version: 4 }, emptyMigration),\n  Object.assign({ version: 5 }, emptyMigration),\n  Object.assign({ version: 6 }, emptyMigration),\n  Object.assign({ version: 7 }, emptyMigration),\n  migration8,\n  migration9,\n  migration10,\n  migration11,\n  migration12\n]\n","\n/**\n * Exception raised when trying to revert migration that is not possible\n * to revert.\n */\nexport class NonReversibleMigrationError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NonReversibleMigrationError'\n    this.code = NonReversibleMigrationError.code\n    this.message = message\n  }\n}\nNonReversibleMigrationError.code = 'ERR_NON_REVERSIBLE_MIGRATION'\n\n/**\n * Exception raised when repo is not initialized.\n */\nexport class NotInitializedRepoError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotInitializedRepoError'\n    this.code = NotInitializedRepoError.code\n    this.message = message\n  }\n}\nNotInitializedRepoError.code = 'ERR_NOT_INITIALIZED_REPO'\n\n/**\n * Exception raised when required parameter is not provided.\n */\nexport class RequiredParameterError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'RequiredParameterError'\n    this.code = RequiredParameterError.code\n    this.message = message\n  }\n}\nRequiredParameterError.code = 'ERR_REQUIRED_PARAMETER'\n\n/**\n * Exception raised when value is not valid.\n */\nexport class InvalidValueError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidValueError'\n    this.code = InvalidValueError.code\n    this.message = message\n  }\n}\nInvalidValueError.code = 'ERR_INVALID_VALUE'\n\n/**\n * Exception raised when config is not passed.\n */\nexport class MissingRepoOptionsError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'MissingRepoOptionsError'\n    this.code = MissingRepoOptionsError.code\n    this.message = message\n  }\n}\nMissingRepoOptionsError.code = 'ERR_MISSING_REPO_OPTIONS'\n","\nimport debug from 'debug'\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js'\nimport { MissingRepoOptionsError } from '../errors.js'\n\nconst log = debug('ipfs:repo:migrator:repo:init')\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (/** @type {any} */ e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n","\nimport { isRepoInitialized } from './init.js'\nimport { MissingRepoOptionsError, NotInitializedRepoError } from '../errors.js'\nimport { VERSION_KEY } from '../utils.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * Function that has responsibility to retrieve version of repo from its root datastore's instance.\n * This function needs to be cross-repo-version functional to be able to fetch any version number,\n * even in case of change of repo's versioning.\n *\n * @param {import('../types').Backends} backends\n */\nexport async function getVersion (backends) {\n  if (!(await isRepoInitialized(backends))) {\n    throw new NotInitializedRepoError('Repo is not initialized!')\n  }\n\n  const store = backends.root\n  await store.open()\n\n  try {\n    return parseInt(uint8ArrayToString(await store.get(VERSION_KEY)))\n  } finally {\n    await store.close()\n  }\n}\n\n/**\n * Function for setting a version in cross-repo-version manner.\n *\n * @param {number} version\n * @param {import('../types').Backends} backends\n */\nexport async function setVersion (version, backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const store = backends.root\n  await store.open()\n  await store.put(VERSION_KEY, uint8ArrayFromString(String(version)))\n  await store.close()\n}\n","/* eslint complexity: [\"error\", 28] */\n\nimport defaultMigrations from './migrations/index.js'\nimport * as repoVersion from './repo/version.js'\nimport * as Errors from './errors.js'\nimport { wrapBackends } from './utils.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:migrator')\n\n/**\n * @typedef {import('./types').Migration} Migration\n * @typedef {import('./types').MigrationOptions} MigrationOptions\n * @typedef {import('./types').ProgressCallback} ProgressCallback\n * @typedef {import('./types').MigrationProgressCallback} MigrationProgressCallback\n */\n\n/**\n * Returns the version of latest migration.\n * If no migrations are present returns 0.\n *\n * @param {Migration[]} [migrations] - Array of migrations to consider. If undefined, the bundled migrations are used. Mainly for testing purpose.\n */\nexport function getLatestMigrationVersion (migrations) {\n  migrations = migrations || defaultMigrations\n\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0\n  }\n\n  return migrations[migrations.length - 1].version\n}\n\n/**\n * Main function to execute forward migrations.\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo should be migrated.\n * @param {MigrationOptions} [options] - Options for migration\n */\nexport async function migrate (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.')\n    return\n  }\n\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is higher then toVersion (${toVersion}), you probably wanted to revert it?`)\n  }\n\n  verifyAvailableMigrations(migrations, currentVersion, toVersion)\n\n  let lock\n\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break\n      }\n\n      if (migration.version <= currentVersion) {\n        continue\n      }\n\n      log(`Migrating version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.migrate(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1\n\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${lastSuccessfullyMigratedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyMigratedVersion, backends)\n\n        throw new Error(`During migration to version ${migration.version} exception was raised: ${e.stack || e.message || e}`)\n      }\n\n      log(`Migrating to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion || getLatestMigrationVersion(migrations), backends)\n    }\n\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${toVersion}!` : 'to latest version!')\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Main function to execute backward migration (reversion).\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo will be reverted.\n * @param {MigrationOptions} [options] - Options for the reversion\n */\nexport async function revert (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.')\n    return\n  }\n\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is lower then toVersion (${toVersion}), you probably wanted to migrate it?`)\n  }\n\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true)\n\n  let lock\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  log(`Reverting from version ${currentVersion} to ${toVersion}`)\n\n  try {\n    const reversedMigrationArray = migrations.slice().reverse()\n\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break\n      }\n\n      if (migration.version > currentVersion) {\n        continue\n      }\n\n      log(`Reverting migration version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.revert(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyRevertedVersion = migration.version\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${lastSuccessfullyRevertedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyRevertedVersion, backends)\n\n        e.message = `During reversion to version ${migration.version} exception was raised: ${e.message}`\n        throw e\n      }\n\n      log(`Reverting to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion, backends)\n    }\n\n    log(`All migrations successfully reverted to version ${toVersion}!`)\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Function checks if all migrations in given range are available.\n *\n * @param {Migration[]} migrations\n * @param {number} fromVersion\n * @param {number} toVersion\n * @param {boolean} checkReversibility - Will additionally checks if all the migrations in the range are reversible\n */\nfunction verifyAvailableMigrations (migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break\n    }\n\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${fromVersion} because migration version ${migration.version} is not reversible. Cancelling reversion.`)\n      }\n\n      migrationCounter++\n    }\n  }\n\n  if (migrationCounter !== (toVersion - fromVersion)) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${fromVersion} to ${toVersion}`)\n  }\n}\n\nexport const getCurrentRepoVersion = repoVersion.getVersion\nexport const errors = Errors\nexport const migrations = defaultMigrations\n","/**\n * Error raised when there is lock already in place when repo is being opened.\n */\nexport class LockExistsError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'LockExistsError'\n    this.code = LockExistsError.code\n  }\n}\nLockExistsError.code = 'ERR_LOCK_EXISTS'\n\n/**\n * Error raised when requested item is not found.\n */\nexport class NotFoundError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotFoundError'\n    this.code = NotFoundError.code\n  }\n}\nNotFoundError.code = 'ERR_NOT_FOUND'\n\n/**\n * Error raised when version of the stored repo is not compatible with version of this package.\n */\nexport class InvalidRepoVersionError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidRepoVersionError'\n    this.code = InvalidRepoVersionError.code\n  }\n}\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION'\n\nexport const ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED'\nexport const ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN'\nexport const ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED'\n","\nimport { NotFoundError } from '../errors.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Key} Key\n */\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nexport async function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw new NotFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(new NotFoundError())\n    }\n  })\n}\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nfunction findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\nconst log = debug('ipfs:repo:version')\nconst versionKey = new Key('version')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function version (store) {\n  return {\n    /**\n     * Check if a version file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      return hasWithFallback(versionKey, store.has.bind(store), store)\n    },\n    /**\n     * Get the current version.\n     *\n     * @returns {Promise<number>}\n     */\n    async get () {\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const buf = await getWithFallback(versionKey, store.get.bind(store), store.has.bind(store), store)\n      return parseInt(uint8ArrayToString(buf), 10)\n    },\n    /**\n     * Set the version of the repo, writing it to the underlying store.\n     *\n     * @param {number} version\n     * @returns {Promise<void>}\n     */\n    set (version) {\n      return store.put(versionKey, uint8ArrayFromString(String(version)))\n    },\n    /**\n     * Check the current version, and returns true if versions matches\n     *\n     * @param {number} expected\n     */\n    async check (expected) {\n      const version = await this.get()\n      log('comparing version: %s and %s', version, expected)\n      // Version 6 and 7 are the same\n      // TODO: Clean up the compatibility logic. Repo feature detection would be ideal, or a better version schema\n      const compatibleVersion = (version === 6 && expected === 7) || (expected === 6 && version === 7)\n\n      return version === expected || compatibleVersion\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport PQueue from 'p-queue'\nimport _get from 'just-safe-get'\nimport _set from 'just-safe-set'\nimport errCode from 'err-code'\nimport { NotFoundError } from './errors.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\n// @ts-ignore types are broken in p-queue@6.x.x - also, if we imported via esm\n// we can use the default, if via cjs we need to get the default via prop access\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\nconst configKey = new Key('config')\n\n/**\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {Datastore} store\n */\nexport function config (store) {\n  const setQueue = new Queue({ concurrency: 1 })\n\n  const configStore = {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     * @returns {Promise<Config>}\n     */\n    async getAll (options = {}) { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const encodedValue = await getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store)\n\n      return JSON.parse(uint8ArrayToString(encodedValue))\n    },\n\n    /**\n     * Get the value for the passed configuration key from the repo.\n     *\n     * @param {string} key - the config key to get\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     */\n    async get (key, options = {}) {\n      if (key == null) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      const config = await this.getAll(options)\n      const value = _get(config, key)\n\n      if (value === undefined) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      return value\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {string} key - the config key to be written\n     * @param {any} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    set (key, value, options = {}) {\n      // @ts-ignore ts thinks key will only be a string, but it may not be\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY')\n      }\n\n      if (value === undefined || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {Config} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    replace (value, options = {}) {\n      if (!value || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Check if a config file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migration to v10 or above\n      return hasWithFallback(configKey, store.has.bind(store), store)\n    }\n  }\n\n  return configStore\n\n  /**\n   * @param {{ key: any; value: any; }} m\n   * @param {AbortSignal | undefined} signal\n   */\n  async function _maybeDoSet (m, signal) {\n    if (signal && signal.aborted) {\n      return\n    }\n\n    const key = m.key\n    const value = m.value\n    if (key) {\n      const config = await configStore.getAll()\n      if (typeof config === 'object' && config !== null) {\n        _set(config, key, value)\n      }\n      return _saveAll(config)\n    }\n    return _saveAll(value)\n  }\n\n  /**\n   * @param {unknown} config\n   */\n  function _saveAll (config) {\n    const buf = uint8ArrayFromString(JSON.stringify(config, null, 2))\n    return store.put(configKey, buf)\n  }\n}\n","\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function apiAddr (store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n","\nimport filter from 'it-filter'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport { identity } from 'multiformats/hashes/identity'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createIdStore (store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      const extracted = extractContents(cid)\n      if (extracted.isIdentity) {\n        return Promise.resolve(extracted.digest)\n      }\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      for await (const cid of cids) {\n        yield this.get(cid, options)\n      }\n    },\n\n    async put (cid, buf, options) {\n      const { isIdentity } = extractContents(cid)\n\n      if (isIdentity) {\n        return\n      }\n\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      // in order to return all blocks. we're going to assemble a seperate iterable\n      // return rather than return the resolves of store.putMany using the same\n      // process used by blockstore.putMany\n      const output = pushable({\n        objectMode: true\n      })\n\n      // process.nextTick runs on the microtask queue, setImmediate runs on the next\n      // event loop iteration so is slower. Use process.nextTick if it is available.\n      const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n      runner(async () => {\n        try {\n          await drain(store.putMany(async function * () {\n            for await (const { key, value } of pairs) {\n              if (!extractContents(key).isIdentity) {\n                yield { key, value }\n              }\n\n              // if non identity blocks successfully write, blocks are included in output\n              output.push({ key, value })\n            }\n          }()))\n\n          output.end()\n        } catch (/** @type {any} */ err) {\n          output.end(err)\n        }\n      })\n\n      yield * output\n    },\n\n    has (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve(true)\n      }\n      return store.has(cid, options)\n    },\n\n    delete (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve()\n      }\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(filter(cids, (cid) => !extractContents(cid).isIdentity), options)\n    },\n\n    batch () {\n      const batch = store.batch()\n\n      return {\n        put (cid, buf) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.put(cid, buf)\n        },\n        delete (cid) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.delete(cid)\n        },\n        commit: (options) => {\n          return batch.commit(options)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {CID} k\n * @returns {{ isIdentity: false } | { isIdentity: true, digest: Uint8Array}}\n */\nfunction extractContents (k) {\n  const cid = CID.asCID(k)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  if (cid.multihash.code !== identity.code) {\n    return {\n      isIdentity: false\n    }\n  }\n\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  }\n}\n","\nimport { LockExistsError } from '../errors.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:lock:memory')\nconst lockFile = 'repo.lock'\n\n/** @type {Record<string,boolean>} */\nconst LOCKS = {}\n\n/**\n * @typedef {import('../types').LockCloser} LockCloser\n */\n\n/**\n * Lock the repo in the given dir.\n *\n * @param {string} dir\n * @returns {Promise<LockCloser>}\n */\nasync function lock (dir) {\n  const file = dir + '/' + lockFile\n  log('locking %s', file)\n\n  if (LOCKS[file] === true) {\n    throw new LockExistsError(`Lock already being held for file: ${file}`)\n  }\n\n  LOCKS[file] = true\n  const closer = {\n    async close () {\n      if (LOCKS[file]) {\n        delete LOCKS[file]\n      }\n    }\n  }\n  return closer\n}\n\n/**\n * Check if the repo in the given directory is locked.\n *\n * @param {string} dir\n * @returns {Promise<boolean>}\n */\nasync function locked (dir) {\n  const file = dir + '/' + lockFile\n  log(`checking lock: ${file}`)\n\n  return Boolean(LOCKS[file])\n}\n\nexport const MemoryLock = {\n  lock,\n  locked\n}\n","import { MemoryLock } from './locks/memory.js'\n\n/**\n * @type {Partial<import('./types').Options>}\n */\nexport default {\n  autoMigrate: true,\n  onMigrationProgress: () => {},\n  repoOwner: true,\n  repoLock: MemoryLock\n}\n","\n// Default configuration for the datastore spec in node.js\nexport default {\n  Spec: {\n    type: 'mount',\n    mounts: [\n      {\n        mountpoint: '/blocks',\n        type: 'measure',\n        prefix: 'flatfs.datastore',\n        child: {\n          type: 'flatfs',\n          path: 'blocks',\n          sync: true,\n          shardFunc: '/repo/flatfs/shard/v1/next-to-last/2'\n        }\n      },\n      {\n        mountpoint: '/',\n        type: 'measure',\n        prefix: 'leveldb.datastore',\n        child: {\n          type: 'levelds',\n          path: 'datastore',\n          compression: 'none'\n        }\n      }\n    ]\n  }\n}\n","import { Key } from 'interface-datastore/key'\nimport { CID } from 'multiformats'\nimport * as raw from 'multiformats/codecs/raw'\nimport errCode from 'err-code'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as Digest from 'multiformats/hashes/digest'\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} c\n */\nexport function cidToKey (c) {\n  const cid = CID.asCID(c)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  const encoded = base32.encode(cid.multihash.bytes)\n\n  return new Key('/' + encoded.slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n */\nexport function keyToCid (key) {\n  // Block key is of the form /<base32 encoded string>\n  return CID.createV1(raw.code, keyToMultihash(key))\n}\n\n/**\n * @param {Key | string} key\n */\nexport function keyToMultihash (key) {\n  return Digest.decode(base32.decode(`b${key.toString().toLowerCase().substring(1)}`))\n}\n","import debug from 'debug'\nimport { createUnsafe } from 'multiformats/block'\n\nconst log = debug('ipfs:repo:utils:walk-dag')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../types').loadCodec} loadCodec\n * @typedef {import('../types').AbortOptions} AbortOptions\n */\n\n/**\n * @param {CID} cid\n * @param {Blockstore} blockstore\n * @param {loadCodec} loadCodec\n * @param {AbortOptions} [options]\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nexport async function * walkDag (cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options)\n    const codec = await loadCodec(cid.code)\n    const block = createUnsafe({ bytes, cid, codec })\n\n    for (const [, childCid] of block.links()) {\n      yield childCid\n      yield * walkDag(childCid, blockstore, loadCodec, options)\n    }\n  } catch (/** @type {any} */ err) {\n    log('Could not walk DAG for CID', cid.toString(), err)\n\n    throw err\n  }\n}\n","export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport debug from 'debug'\nimport first from 'it-first'\nimport { createUnsafe } from 'multiformats/block'\nimport * as cborg from 'cborg'\nimport * as dagPb from '@ipld/dag-pb'\nimport {\n  cidToKey,\n  keyToMultihash\n} from './utils/blockstore.js'\nimport { walkDag } from './utils/walk-dag.js'\nimport { PinTypes } from './pin-types.js'\nimport QuickLRU from 'quick-lru'\n\n/**\n * @typedef {import('./types').PinType} PinType\n * @typedef {import('./types').PinQueryType} PinQueryType\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').PinOptions} PinOptions\n * @typedef {import('./types').AbortOptions} AbortOptions\n * @typedef {import('./types').Pins} Pins\n */\n\n/**\n * @typedef {object} PinInternal\n * @property {number} depth\n * @property {import('multiformats/cid').Version} [version]\n * @property {number} [codec]\n * @property {Record<string, any>} [metadata]\n */\n\n/**\n * @typedef {object} FetchCompleteDagOptions\n * @property {AbortSignal} [signal]\n * @property {number} [cidCacheMaxSize]\n */\n\nconst CID_CACHE_MAX_SIZE = 2048\n\n/**\n * @param {string} type\n */\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\n/**\n * @implements {Pins}\n */\nexport class PinManager {\n  /**\n   * @param {object} config\n   * @param {import('interface-datastore').Datastore} config.pinstore\n   * @param {import('interface-blockstore').Blockstore} config.blockstore\n   * @param {import('./types').loadCodec} config.loadCodec\n   */\n  constructor ({ pinstore, blockstore, loadCodec }) {\n    this.pinstore = pinstore\n    this.blockstore = blockstore\n    this.loadCodec = loadCodec\n    this.log = debug('ipfs:repo:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.blockstore.get(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  unpin (cid, options) {\n    return this.pinstore.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & FetchCompleteDagOptions & AbortOptions} [options]\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * directKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * indirectKeys (options) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of walkDag(cid, this.blockstore, this.loadCodec, options)) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.pinstore.query({\n        prefix: cidToKey(cid).toString(),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cborg.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cborg.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    /**\n     * @param {CID} key\n     * @param {AsyncIterable<{ cid: CID, metadata: any }>} source\n     */\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of walkDag(parentCid, self.blockstore, self.loadCodec)) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {FetchCompleteDagOptions} [options]\n   */\n  async fetchCompleteDag (cid, options = {}) {\n    const seen = new QuickLRU({ maxSize: options.cidCacheMaxSize ?? CID_CACHE_MAX_SIZE })\n\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} options\n     */\n    const walkDag = async (cid, options) => {\n      if (seen.has(cid.toString())) {\n        return\n      }\n\n      seen.set(cid.toString(), true)\n\n      const bytes = await this.blockstore.get(cid, options)\n      const codec = await this.loadCodec(cid.code)\n      const block = createUnsafe({ bytes, cid, codec })\n\n      await Promise.all(\n        [...block.links()].map(([, childCid]) => walkDag(childCid, options))\n      )\n    }\n\n    await walkDag(cid, options)\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n","\nimport map from 'it-map'\nimport errCode from 'err-code'\nimport { PinTypes } from './pin-types.js'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pin-manager').Pins} Pins\n */\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createPinnedBlockstore (pins, store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      yield * store.getMany(cids, options)\n    },\n\n    async put (cid, buf, options) {\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      yield * store.putMany(pairs, options)\n    },\n\n    has (cid, options) {\n      return store.has(cid, options)\n    },\n\n    async delete (cid, options) {\n      await ensureNotPinned(cid, pins)\n\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins)\n\n        return cid\n      }), options)\n    },\n\n    batch () {\n      return store.batch()\n    }\n  }\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nasync function ensureNotPinned (cid, pins) {\n  const { pinned, reason } = await pins.isPinnedWithType(cid, PinTypes.all)\n\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${reason}`), 'ERR_BLOCK_PINNED')\n  }\n}\n","\nimport { CID } from 'multiformats/cid'\nimport debug from 'debug'\nimport { notFoundError } from 'datastore-core/errors'\nimport parallelBatch from 'it-parallel-batch'\nimport { pipe } from 'it-pipe'\nimport merge from 'it-merge'\nimport map from 'it-map'\nimport filter from 'it-filter'\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { walkDag } from './utils/walk-dag.js'\n\nconst log = debug('ipfs:repo:gc')\nconst ERR_NOT_FOUND = notFoundError().code\n\n// Limit on the number of parallel block remove operations\nconst BLOCK_RM_CONCURRENCY = 256\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').loadCodec} loadCodec\n * @typedef {import('./types').GCErrorResult} GCErrorResult\n * @typedef {import('./types').GCSuccessResult} GCSuccessResult\n */\n\n/**\n * Perform mark and sweep garbage collection\n *\n * @param {object} config\n * @param {import('./types').GCLock} config.gcLock\n * @param {import('./types').Pins} config.pins\n * @param {Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nexport function gc ({ gcLock, pins, blockstore, root, loadCodec }) {\n  /**\n   * @returns {AsyncGenerator<GCErrorResult | GCSuccessResult, void, unknown>}\n   */\n  async function * gc () {\n    const start = Date.now()\n    log('Creating set of marked blocks')\n\n    const release = await gcLock.writeLock()\n\n    try {\n      // Mark all blocks that are being used\n      const markedSet = await createMarkedSet({ pins, blockstore, root, loadCodec })\n      // Get all blocks keys from the blockstore\n      const blockKeys = blockstore.queryKeys({})\n\n      // Delete blocks that are not being used\n      // @ts-ignore ts cannot tell that we filter out null results\n      yield * deleteUnmarkedBlocks({ blockstore }, markedSet, blockKeys)\n\n      log(`Complete (${Date.now() - start}ms)`)\n    } finally {\n      release()\n    }\n  }\n\n  return gc\n}\n\n/**\n * Get Set of CIDs of blocks to keep\n *\n * @param {object} config\n * @param {import('./pin-manager').Pins} config.pins\n * @param {import('interface-blockstore').Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nasync function createMarkedSet ({ pins, blockstore, loadCodec, root }) {\n  const mfsSource = (async function * () {\n    let mh\n    try {\n      mh = await root.get(MFS_ROOT_KEY)\n    } catch (/** @type {any} */ err) {\n      if (err.code === ERR_NOT_FOUND) {\n        log('No blocks in MFS')\n        return\n      }\n\n      throw err\n    }\n\n    const rootCid = CID.decode(mh)\n    yield rootCid\n    yield * walkDag(rootCid, blockstore, loadCodec)\n  })()\n\n  const pinsSource = merge(\n    map(pins.recursiveKeys(), ({ cid }) => cid),\n    pins.indirectKeys(),\n    map(pins.directKeys(), ({ cid }) => cid),\n    mfsSource\n  )\n\n  const output = new Set()\n\n  for await (const cid of merge(pinsSource, mfsSource)) {\n    output.add(base32.encode(cid.multihash.bytes))\n  }\n\n  return output\n}\n\n/**\n * Delete all blocks that are not marked as in use\n *\n * @param {object} arg\n * @param {Blockstore} arg.blockstore\n * @param {Set<string>} markedSet\n * @param {AsyncIterable<CID>} blockKeys\n */\nasync function * deleteUnmarkedBlocks ({ blockstore }, markedSet, blockKeys) {\n  // Iterate through all blocks and find those that are not in the marked set\n  // blockKeys yields { key: Key() }\n  let blocksCount = 0\n  let removedBlocksCount = 0\n\n  /**\n   * @param {CID} cid\n   */\n  const removeBlock = async (cid) => {\n    return async function remove () {\n      blocksCount++\n\n      try {\n        const b32 = base32.encode(cid.multihash.bytes)\n\n        if (markedSet.has(b32)) {\n          return null\n        }\n\n        try {\n          await blockstore.delete(cid)\n          removedBlocksCount++\n        } catch (/** @type {any} */ err) {\n          return {\n            err: new Error(`Could not delete block with CID ${cid}: ${err.message}`)\n          }\n        }\n\n        return { cid }\n      } catch (/** @type {any} */ err) {\n        const msg = `Could delete block with CID ${cid}`\n        log(msg, err)\n        return { err: new Error(msg + `: ${err.message}`) }\n      }\n    }\n  }\n\n  yield * pipe(\n    parallelBatch(map(blockKeys, removeBlock), BLOCK_RM_CONCURRENCY),\n    // filter nulls (blocks that were retained)\n    source => filter(source, Boolean)\n  )\n\n  log(`Marked set has ${markedSet.size} unique blocks. Blockstore has ${blocksCount} blocks. ` +\n  `Deleted ${removedBlocksCount} blocks.`)\n}\n","import _get from 'just-safe-get'\nimport debug from 'debug'\nimport errCode from 'err-code'\nimport * as migrator from 'ipfs-repo-migrations'\nimport bytes from 'bytes'\nimport merge from 'merge-options'\nimport * as CONSTANTS from './constants.js'\nimport { version } from './version.js'\nimport { config } from './config.js'\nimport { spec } from './spec.js'\nimport { apiAddr } from './api-addr.js'\nimport { createIdStore } from './idstore.js'\nimport defaultOptions from './default-options.js'\nimport defaultDatastore from './default-datastore.js'\nimport * as ERRORS from './errors.js'\nimport { PinManager } from './pin-manager.js'\nimport { createPinnedBlockstore } from './pinned-blockstore.js'\n// @ts-ignore - no types\nimport mortice from 'mortice'\nimport { gc } from './gc.js'\n\nconst log = debug('ipfs:repo')\n\nconst noLimit = Number.MAX_SAFE_INTEGER\nconst AUTO_MIGRATE_CONFIG_KEY = 'repoAutoMigrate'\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').RepoLock} RepoLock\n * @typedef {import('./types').LockCloser} LockCloser\n * @typedef {import('./types').GCLock} GCLock\n * @typedef {import('./types').Stat} Stat\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').Backends} Backends\n * @typedef {import('./types').IPFSRepo} IPFSRepo\n */\n\n/**\n * IPFSRepo implements all required functionality to read and write to an ipfs repo.\n */\nclass Repo {\n  /**\n   * @param {string} path - Where this repo is stored\n   * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n   * @param {Backends} backends - backends used by this repo\n   * @param {Partial<Options>} [options] - Configuration\n   */\n  constructor (path, loadCodec, backends, options) {\n    if (typeof path !== 'string') {\n      throw new Error('missing repo path')\n    }\n\n    if (typeof loadCodec !== 'function') {\n      throw new Error('missing codec loader')\n    }\n\n    /** @type {Options} */\n    this.options = merge(defaultOptions, options)\n    this.closed = true\n    this.path = path\n    this.root = backends.root\n    this.datastore = backends.datastore\n    this.keys = backends.keys\n\n    const blockstore = backends.blocks\n    const pinstore = backends.pins\n\n    this.pins = new PinManager({ pinstore, blockstore, loadCodec })\n\n    // this blockstore will not delete blocks that have been pinned\n    const pinnedBlockstore = createPinnedBlockstore(this.pins, blockstore)\n\n    // this blockstore will extract blocks from multihashes with the identity codec\n    this.blocks = createIdStore(pinnedBlockstore)\n\n    this.version = version(this.root)\n    this.config = config(this.root)\n    this.spec = spec(this.root)\n    this.apiAddr = apiAddr(this.root)\n\n    /** @type {GCLock} */\n    this.gcLock = mortice({\n      name: path,\n      singleProcess: this.options.repoOwner !== false\n    })\n\n    this.gc = gc({ gcLock: this.gcLock, pins: this.pins, blockstore: this.blocks, root: this.root, loadCodec })\n  }\n\n  /**\n   * Initialize a new repo.\n   *\n   * @param {import('./types').Config} config - config to write into `config`.\n   * @returns {Promise<void>}\n   */\n  async init (config) {\n    log('initializing at: %s', this.path)\n    await this._openRoot()\n    await this.config.replace(buildConfig(config))\n    await this.spec.set(buildDatastoreSpec(config))\n    await this.version.set(CONSTANTS.repoVersion)\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @returns {Promise<boolean>}\n   */\n  async isInitialized () {\n    if (!this.closed) {\n      // repo is open, must be initialized\n      return true\n    }\n\n    try {\n      // have to open the root datastore in the browser before\n      // we can check whether it's been initialized\n      await this._openRoot()\n      await this._checkInitialized()\n      await this.root.close()\n\n      return true\n    } catch (/** @type {any} */ err) {\n      // FIXME: do not use exceptions for flow control\n      return false\n    }\n  }\n\n  /**\n   * Open the repo. If the repo is already open an error will be thrown.\n   * If the repo is not initialized it will throw an error.\n   *\n   * @returns {Promise<void>}\n   */\n  async open () {\n    if (!this.closed) {\n      throw errCode(new Error('repo is already open'), ERRORS.ERR_REPO_ALREADY_OPEN)\n    }\n    log('opening at: %s', this.path)\n\n    // check if the repo is already initialized\n    try {\n      await this._openRoot()\n      await this._checkInitialized()\n\n      this._lockfile = await this._openLock()\n      log('acquired repo.lock')\n\n      const isCompatible = await this.version.check(CONSTANTS.repoVersion)\n\n      if (!isCompatible) {\n        if (await this._isAutoMigrationEnabled()) {\n          await this._migrate(CONSTANTS.repoVersion, {\n            root: this.root,\n            datastore: this.datastore,\n            pins: this.pins.pinstore,\n            blocks: this.pins.blockstore,\n            keys: this.keys\n          })\n        } else {\n          throw new ERRORS.InvalidRepoVersionError('Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.')\n        }\n      }\n\n      log('creating datastore')\n      await this.datastore.open()\n\n      log('creating blocks')\n      await this.blocks.open()\n\n      log('creating keystore')\n      await this.keys.open()\n\n      log('creating pins')\n      await this.pins.pinstore.open()\n\n      this.closed = false\n      log('all opened')\n    } catch (/** @type {any} */ err) {\n      if (this._lockfile) {\n        try {\n          await this._closeLock()\n          this._lockfile = null\n        } catch (/** @type {any} */ err2) {\n          log('error removing lock', err2)\n        }\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Opens the root backend, catching and ignoring an 'Already open' error\n   *\n   * @private\n   */\n  async _openRoot () {\n    try {\n      await this.root.open()\n    } catch (/** @type {any} */ err) {\n      if (err.message !== 'Already open') {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Creates a lock on the repo if a locker is specified. The lockfile object will\n   * be returned in the callback if one has been created.\n   *\n   * @private\n   * @returns {Promise<LockCloser>}\n   */\n  async _openLock () {\n    const lockfile = await this.options.repoLock.lock(this.path)\n\n    if (typeof lockfile.close !== 'function') {\n      throw errCode(new Error('Locks must have a close method'), 'ERR_NO_CLOSE_FUNCTION')\n    }\n\n    return lockfile\n  }\n\n  /**\n   * Closes the lock on the repo\n   *\n   * @private\n   */\n  _closeLock () {\n    return this._lockfile && this._lockfile.close()\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @private\n   */\n  async _checkInitialized () {\n    log('init check')\n    let config\n    try {\n      [config] = await Promise.all([\n        this.config.exists(),\n        this.spec.exists(),\n        this.version.exists()\n      ])\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n          path: this.path\n        })\n      }\n\n      throw err\n    }\n\n    if (!config) {\n      throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n        path: this.path\n      })\n    }\n  }\n\n  /**\n   * Close the repo and cleanup.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.closed) {\n      throw errCode(new Error('repo is already closed'), ERRORS.ERR_REPO_ALREADY_CLOSED)\n    }\n    log('closing at: %s', this.path)\n\n    try {\n      // Delete api, ignoring irrelevant errors\n      await this.apiAddr.delete()\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERRORS.ERR_REPO_NOT_INITIALIZED && !err.message.startsWith('ENOENT')) {\n        throw err\n      }\n    }\n\n    await Promise.all([\n      this.root,\n      this.blocks,\n      this.keys,\n      this.datastore,\n      this.pins.pinstore\n    ].map((store) => store && store.close()))\n\n    log('unlocking')\n    this.closed = true\n    await this._closeLock()\n  }\n\n  /**\n   * Check if a repo exists.\n   *\n   * @returns {Promise<boolean>}\n   */\n  exists () {\n    return this.version.exists()\n  }\n\n  /**\n   * Get repo status.\n   *\n   * @returns {Promise<Stat>}\n   */\n  async stat () {\n    if (this.datastore && this.keys) {\n      const [storageMax, blocks, version, datastore, keys] = await Promise.all([\n        this._storageMaxStat(),\n        this._blockStat(),\n        this.version.get(),\n        getSize(this.datastore),\n        getSize(this.keys)\n      ])\n      const size = blocks.size + datastore + keys\n\n      return {\n        repoPath: this.path,\n        storageMax,\n        version: version,\n        numObjects: blocks.count,\n        repoSize: size\n      }\n    }\n    throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n      path: this.path\n    })\n  }\n\n  /**\n   * @private\n   */\n  async _isAutoMigrationEnabled () {\n    if (this.options.autoMigrate !== undefined) {\n      return this.options.autoMigrate\n    }\n\n    // TODO we need to figure out the priority here, between repo options and config.\n    let autoMigrateConfig\n    try {\n      autoMigrateConfig = await this.config.get(AUTO_MIGRATE_CONFIG_KEY)\n    } catch (/** @type {any} */ e) {\n      if (e.code === ERRORS.NotFoundError.code) {\n        autoMigrateConfig = true // Config's default value is True\n      } else {\n        throw e\n      }\n    }\n\n    return autoMigrateConfig\n  }\n\n  /**\n   * Internal migration\n   *\n   * @private\n   * @param {number} toVersion\n   * @param {Backends} backends\n   */\n  async _migrate (toVersion, backends) {\n    const currentRepoVersion = await this.version.get()\n\n    if (currentRepoVersion > toVersion) {\n      log(`reverting to version ${toVersion}`)\n      return migrator.revert(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    } else {\n      log(`migrating to version ${toVersion}`)\n      return migrator.migrate(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _storageMaxStat () {\n    try {\n      const max = /** @type {number} */(await this.config.get('Datastore.StorageMax'))\n      return BigInt(bytes(max))\n    } catch (/** @type {any} */ err) {\n      return BigInt(noLimit)\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _blockStat () {\n    let count = BigInt(0)\n    let size = BigInt(0)\n\n    if (this.blocks) {\n      for await (const { key, value } of this.blocks.query({})) {\n        count += BigInt(1)\n        size += BigInt(value.byteLength)\n        size += BigInt(key.bytes.byteLength)\n      }\n    }\n\n    return { count, size }\n  }\n}\n\n/**\n * @param {Datastore} datastore\n */\nasync function getSize (datastore) {\n  let sum = BigInt(0)\n  for await (const block of datastore.query({})) {\n    sum += BigInt(block.value.byteLength)\n    sum += BigInt(block.key.uint8Array().byteLength)\n  }\n  return sum\n}\n\n/**\n * @param {string} path - Where this repo is stored\n * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n * @param {import('./types').Backends} backends - backends used by this repo\n * @param {Partial<Options>} [options] - Configuration\n * @returns {import('./types').IPFSRepo}\n */\nexport function createRepo (path, loadCodec, backends, options) {\n  return new Repo(path, loadCodec, backends, options)\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildConfig (_config) {\n  _config.Datastore = Object.assign({}, defaultDatastore, _get(_config, 'datastore'))\n\n  return _config\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildDatastoreSpec (_config) {\n  /** @type { {type: string, mounts: Array<{mountpoint: string, type: string, prefix: string, child: {type: string, path: 'string', sync: boolean, shardFunc: string}}>}} */\n  const spec = {\n    ...defaultDatastore.Spec,\n    ..._get(_config, 'Datastore.Spec')\n  }\n\n  return {\n    type: spec.type,\n    mounts: spec.mounts.map((mounting) => ({\n      mountpoint: mounting.mountpoint,\n      type: mounting.child.type,\n      path: mounting.child.path,\n      shardFunc: mounting.child.shardFunc\n    }))\n  }\n}\n","import { createRepo as create } from 'ipfs-repo'\nimport { LevelDatastore } from 'datastore-level'\nimport { BlockstoreDatastoreAdapter } from 'blockstore-datastore-adapter'\nimport { MemoryLock } from 'ipfs-repo/locks/memory'\n\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {(...args: any[]) => void} print\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n * @param {number} [options.peerStoreCacheSize]\n */\nexport function createRepo (print, codecs, options) {\n  const repoPath = options.path || 'ipfs'\n\n  return create(repoPath, (codeOrName) => codecs.getCodec(codeOrName), {\n    root: new LevelDatastore(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(\n      new LevelDatastore(`${repoPath}/blocks`, {\n        prefix: '',\n        version: 2\n      })\n    ),\n    datastore: new LevelDatastore(`${repoPath}/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new LevelDatastore(`${repoPath}/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new LevelDatastore(`${repoPath}/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print,\n    repoLock: MemoryLock\n  })\n}\n","import { gossipsub } from '@chainsafe/libp2p-gossipsub'\n\n/** @typedef {import('@libp2p/interface-pubsub').PubSub} PubSub */\n\n/** @type {() => Record<string, (components: any) => PubSub>}>} */\nexport const routers = () => ({\n  gossipsub: gossipsub({\n    fallbackToFloodsub: true,\n    emitSelf: true,\n    maxInboundStreams: 64,\n    maxOutboundStreams: 128\n  })\n})\n","\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n","\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","import errCode from 'err-code'\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n","import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlist = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlist\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createUnwant = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createStat } from './stat.js'\nimport { createUnwant } from './unwant.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBitswap (config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {BlockAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return new Uint8Array(await res.arrayBuffer())\n  }\n  return get\n})\n","import { anySignal } from 'any-signal'\n\n/**\n * @param {any[]} signals\n * @returns {AbortSignal[]}\n */\nfunction filter (signals) {\n  return signals.filter(Boolean)\n}\n\n/**\n * @param  {...AbortSignal|undefined} signals\n */\nexport function abortSignal (...signals) {\n  return anySignal(filter(signals))\n}\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BlockAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n\n  return stat\n})\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBlock (config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createAdd = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return add\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createClear = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return clear\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return list\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return reset\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"rm\"]}\n   */\n  async function rm (addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return rm\n})\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBootstrap (config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  }\n}\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createApply = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n","\n/**\n * Convert object properties to camel case.\n * NOT recursive!\n * e.g.\n * AgentVersion => agentVersion\n * ID => id\n *\n * @param {Record<string, any>} obj\n */\nexport function objectToCamel (obj) {\n  if (obj == null) {\n    return obj\n  }\n\n  const caps = /^[A-Z]+$/\n\n  /** @type {Record<string, any>} */\n  const output = {}\n\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) { // all caps\n      camelObj[k.toLowerCase()] = obj[k]\n    } else if (caps.test(k[0])) { // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\n    } else {\n      camelObj[k] = obj[k]\n    }\n    return camelObj\n  }, output)\n}\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n","import { createApply } from './apply.js'\nimport { createList } from './list.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createProfiles (config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createReplace = configure(api => {\n  /**\n   * @type {ConfigAPI[\"replace\"]}\n   */\n  const replace = async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n\n  return replace\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createSet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"set\"]}\n   */\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return set\n})\n\n/**\n * @param {*} key\n * @param {*} value\n */\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return { arg: [key, value.toString()], bool: true }\n    case 'string':\n      return { arg: [key, value] }\n    default:\n      return { arg: [key, JSON.stringify(value)], json: true }\n  }\n}\n","import { createProfiles } from './profiles/index.js'\nimport { createGet } from './get.js'\nimport { createGetAll } from './get-all.js'\nimport { createReplace } from './replace.js'\nimport { createSet } from './set.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createConfig (config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nexport async function * resolve (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { resolve } from '../lib/resolve.js'\nimport first from 'it-first'\nimport last from 'it-last'\nimport errCode from 'err-code'\nimport { createGet as createBlockGet } from '../block/get.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    /**\n     * @type {DAGAPI[\"put\"]}\n     */\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      }\n\n      let serialized\n\n      if (settings.inputCodec) {\n        // if you supply an inputCodec, we assume you're passing in a raw, encoded\n        // block using that codec, so we'll just pass that on to the server and let\n        // it deal with the decode/encode/store cycle\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        serialized = dagNode\n      } else {\n        // if you don't supply an inputCodec, we assume you've passed in a JavaScript\n        // object you want to have encoded using storeCodec, so we'll prepare it for\n        // you if we have the codec\n        const storeCodec = await codecs.getCodec(settings.storeCodec)\n        serialized = storeCodec.encode(dagNode)\n        // now we have a serialized form, the server should be told to receive it\n        // in that format\n        settings.inputCodec = settings.storeCodec\n      }\n\n      // allow aborting requests on body errors\n      const controller = new AbortController()\n      const signal = abortSignal(controller.signal, settings.signal)\n\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...(\n          await multipartRequest([serialized], controller, settings.headers)\n        )\n      })\n      const data = await res.json()\n\n      return CID.parse(data.Cid['/'])\n    }\n\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createDag (codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  }\n}\n","\n// Response types are defined here =\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\nexport const SendingQuery = 0\nexport const PeerResponse = 1\nexport const FinalPeer = 2\nexport const QueryError = 3\nexport const Provider = 4\nexport const Value = 5\nexport const AddingPeer = 6\nexport const DialingPeer = 7\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {{Type: number, ID: string, Extra: string, Responses: {ID: string, Addrs: string[]}[]}} event\n * @returns {import('ipfs-core-types/src/dht').QueryEvent}\n */\nexport const mapEvent = (event) => {\n  if (event.Type === SendingQuery) {\n    return {\n      name: 'SENDING_QUERY',\n      type: event.Type\n    }\n  }\n\n  if (event.Type === PeerResponse) {\n    return {\n      from: peerIdFromString(event.ID),\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      // TODO: how to infer this from the go-ipfs response\n      messageType: 0,\n      // TODO: how to infer this from the go-ipfs response\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] })),\n      providers: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n      // TODO: how to infer this from the go-ipfs response\n      // record: ???\n    }\n  }\n\n  if (event.Type === FinalPeer) {\n    // dht.query ends with a FinalPeer event with no Responses\n    /** @type {import('@libp2p/interface-peer-info').PeerInfo} */\n    let peer = {\n      // @ts-expect-error go-ipfs does not return this\n      id: event.ID ?? peerIdFromString(event.ID),\n      /** @type {Multiaddr[]} */\n      multiaddrs: [],\n      protocols: []\n    }\n\n    if (event.Responses && event.Responses.length) {\n      // dht.findPeer has the result in the Responses field\n      peer = {\n        id: peerIdFromString(event.Responses[0].ID),\n        multiaddrs: event.Responses[0].Addrs.map(addr => multiaddr(addr)),\n        protocols: []\n      }\n    }\n\n    return {\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    }\n  }\n\n  if (event.Type === QueryError) {\n    return {\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    }\n  }\n\n  if (event.Type === Provider) {\n    return {\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n    }\n  }\n\n  if (event.Type === Value) {\n    return {\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    }\n  }\n\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ ID }) => peerIdFromString(ID))\n\n    if (!peers.length) {\n      throw new Error('No peer found')\n    }\n\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    }\n  }\n\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: peerIdFromString(event.ID)\n    }\n  }\n\n  throw new Error('Unknown DHT event type')\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindPeer = configure(api => {\n  /**\n   * @type {DHTAPI[\"findPeer\"]}\n   */\n  async function * findPeer (peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findPeer\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindProvs = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findProvs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createQuery = configure(api => {\n  /**\n   * @type {DHTAPI[\"query\"]}\n   */\n  async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return query\n})\n","import { createFindPeer } from './find-peer.js'\nimport { createFindProvs } from './find-provs.js'\nimport { createGet } from './get.js'\nimport { createProvide } from './provide.js'\nimport { createPut } from './put.js'\nimport { createQuery } from './query.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDht (config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createCmds = configure(api => {\n  /**\n   * @type {DiagAPI[\"cmds\"]}\n   */\n  async function cmds (options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return cmds\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createNet = configure(api => {\n  /**\n   * @type {DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createSys = configure(api => {\n  /**\n   * @type {DiagAPI[\"sys\"]}\n   */\n  async function sys (options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return sys\n})\n","import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDiag (config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createFlush = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n","import { objectToCamel } from './object-to-camel.js'\n\n/**\n * @param {Record<string, any>} entry\n */\nexport function objectToCamelWithMetadata (entry) {\n  const file = objectToCamel(entry)\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    }\n\n    delete file.mtimeNsecs\n  }\n\n  return file\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\nexport const createLs = configure(api => {\n  /**\n   * @type {FilesAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path')\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        // default long to true, diverges from go-ipfs where its false by default\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      // go-ipfs does not yet support the \"stream\" option\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry))\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result))\n      }\n    }\n  }\n  return ls\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash)\n  }\n\n  delete entry.hash\n\n  entry.type = entry.type === 1 ? 'directory' : 'file'\n\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {FilesAPI[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const body = await res.text()\n    // we don't expect text body to be ever present\n    // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)\n    if (body !== '') {\n      /** @type {Error} */\n      const error = new HTTP.HTTPError(res)\n      error.message = body\n      throw error\n    }\n  }\n  return rm\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {FilesAPI[\"stat\"]}\n   */\n  async function stat (path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(objectToCamelWithMetadata(data))\n  }\n  return stat\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  entry.cid = CID.parse(entry.hash)\n  delete entry.hash\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createTouch = configure(api => {\n  /**\n   * @type {FilesAPI[\"touch\"]}\n   */\n  async function touch (path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return touch\n})\n","import { modeToString } from '../lib/mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createWrite = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n","import { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createLs } from './ls.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRead } from './read.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\nimport { createTouch } from './touch.js'\nimport { createWrite } from './write.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createFiles (config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options) {\n    const opts = options ?? { type: 'Ed25519' }\n\n    const res = await api.post('key/gen', {\n      signal: opts.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...opts\n      }),\n      headers: opts.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Keys || []).map((/** @type {any} **/ k) => objectToCamel(k))\n  }\n  return list\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRename = configure(api => {\n  /**\n   * @type {KeyAPI[\"rename\"]}\n   */\n  async function rename (oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return rename\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data.Keys[0])\n  }\n  return rm\n})\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createKey (config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLevel = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return level\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createTail = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n","import { createLevel } from './level.js'\nimport { createLs } from './ls.js'\nimport { createTail } from './tail.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createLog (config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createState = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return state\n})\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createSubs = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPubsub (config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  }\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { createPubsub } from './pubsub/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createName (config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map((/** @type {any} */ link) => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    }\n  }\n  return get\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createLinks = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n","import { configure } from '../lib/configure.js'\nimport { createPut as createDagPut } from '../dag/put.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = createDagPut(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAddLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"addLink\"]}\n   */\n  async function addLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || '',\n          // @ts-expect-error loose types\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n\n  return addLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAppendData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return appendData\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createRmLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createSetData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return setData\n})\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPatch (config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  }\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { createPatch } from './patch/index.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createObject (codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {string} type\n * @param {string} cid\n * @param {Record<string, string>} metadata\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  }\n\n  if (metadata) {\n    pin.metadata = metadata\n  }\n\n  return pin\n}\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PinAPI[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {any[]} */\n    let paths = []\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths]\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${path}`),\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) { // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\n        }\n        return\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\n    }\n  }\n  return ls\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n","import { createRmAll } from './rm-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport const createRm = (config) => {\n  const all = createRmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n","import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n","import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningAPI[\"rm\"]}\n   */\n  async function rm ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    })\n  }\n\n  return rm\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRmAll (client) {\n  /**\n   * @type {RemotePiningAPI[\"rmAll\"]}\n   */\n  async function rmAll ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    })\n  }\n\n  return rmAll\n}\n","/**\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n */\n\n/**\n * @param {URL} url\n */\nexport function encodeEndpoint (url) {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\n/**\n * @param {any} json\n * @returns {RemotePinServiceWithStat}\n */\nexport function decodeRemoteService (json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && { stat: decodeStat(json.Stat) })\n  }\n}\n\n/**\n * @param {any} json\n * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n */\nexport function decodeStat (json) {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n","import { Client } from '../../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../../../types').Options} config\n */\nexport function createService (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  }\n}\n","import { Client } from '../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\nimport { createService } from './service/index.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createRemote (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  }\n}\n","import { createAddAll } from './add-all.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRmAll } from './rm-all.js'\nimport { createRm } from './rm.js'\nimport { createRemote } from './remote/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPin (config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  }\n}\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return rpcArrayToTextArray(Strings) || []\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n","import { logger } from '@libp2p/logger'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc, rpcToText, rpcToBytes, rpcToBigInt } from '../lib/http-rpc-wire-format.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\nconst log = logger('ipfs-http-client:pubsub:subscribe')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {(err: Error, fatal: boolean, msg?: Message) => void} ErrorHandlerFn\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions & { onError?: ErrorHandlerFn }>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createSubscribe = (options, subsTracker) => {\n  return configure((api) => {\n    /**\n     * @type {PubsubAPI[\"subscribe\"]}\n     */\n    async function subscribe (topic, handler, options = {}) { // eslint-disable-line require-await\n      options.signal = subsTracker.subscribe(topic, handler, options.signal)\n\n      /** @type {(value?: any) => void} */\n      let done\n      /** @type {(error: Error) => void} */\n      let fail\n\n      const result = new Promise((resolve, reject) => {\n        done = resolve\n        fail = reject\n      })\n\n      // In Firefox, the initial call to fetch does not resolve until some data\n      // is received. If this doesn't happen within 1 second assume success\n      const ffWorkaround = setTimeout(() => done(), 1000)\n\n      // Do this async to not block Firefox\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      })\n        .catch((err) => {\n          // Initial subscribe fail, ensure we clean up\n          subsTracker.unsubscribe(topic, handler)\n\n          fail(err)\n        })\n        .then((response) => {\n          clearTimeout(ffWorkaround)\n\n          if (!response) {\n            // if there was no response, the subscribe failed\n            return\n          }\n\n          readMessages(response, {\n            onMessage: (message) => {\n              if (!handler) {\n                return\n              }\n\n              if (typeof handler === 'function') {\n                handler(message)\n                return\n              }\n\n              if (typeof handler.handleEvent === 'function') {\n                handler.handleEvent(message)\n              }\n            },\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\n            onError: options.onError\n          })\n\n          done()\n        })\n\n      return result\n    }\n    return subscribe\n  })(options)\n}\n\n/**\n * @param {import('ipfs-utils/src/types').ExtendedResponse} response\n * @param {object} options\n * @param {(message: Message) => void} options.onMessage\n * @param {() => void} options.onEnd\n * @param {ErrorHandlerFn} [options.onError]\n */\nasync function readMessages (response, { onMessage, onEnd, onError }) {\n  onError = onError || log\n\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue\n        }\n\n        if (msg.from != null && msg.seqno != null) {\n          onMessage({\n            type: 'signed',\n            from: peerIdFromString(msg.from),\n            data: rpcToBytes(msg.data),\n            sequenceNumber: rpcToBigInt(msg.seqno),\n            topic: rpcToText(msg.topicIDs[0]),\n            key: rpcToBytes(msg.key ?? 'u'),\n            signature: rpcToBytes(msg.signature ?? 'u')\n          })\n        } else {\n          onMessage({\n            type: 'unsigned',\n            data: rpcToBytes(msg.data),\n            topic: rpcToText(msg.topicIDs[0])\n          })\n        }\n      } catch (/** @type {any} */ err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`\n        onError(err, false, msg) // Not fatal\n      }\n    }\n  } catch (/** @type {any} */ err) {\n    if (!isAbortError(err)) {\n      onError(err, true) // Fatal\n    }\n  } finally {\n    onEnd()\n  }\n}\n\n/**\n * @param {Error & {type?:string}} error\n * @returns {boolean}\n */\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true\n    // It is `abort` in Electron instead of `aborted`\n    case 'abort':\n      return true\n    default:\n      // FIXME: In testing with Chrome, err.type is undefined (should not be!)\n      // Temporarily use the name property instead.\n      return error.name === 'AbortError'\n  }\n}\n","\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createUnsubscribe = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n","\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n","import { createLs } from './ls.js'\nimport { createPeers } from './peers.js'\nimport { createPublish } from './publish.js'\nimport { createSubscribe } from './subscribe.js'\nimport { createUnsubscribe } from './unsubscribe.js'\nimport { SubscriptionTracker } from './subscription-tracker.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPubsub (config) {\n  const subscriptionTracker = new SubscriptionTracker()\n\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createLocal = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createRepo (config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nexport const createBw = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n","import { createStat as createBitswap } from '../bitswap/stat.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createBw } from './bw.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createStats (config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  }\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs (options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Addrs: Record<string, string[]> }} */\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id: peerIdFromString(id),\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\n    }))\n  }\n  return addrs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createConnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return connect\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createDisconnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createLocalAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => multiaddr(a))\n  }\n  return localAddrs\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createSwarm (config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { abortSignal } from './lib/abort-signal.js'\n\n/**\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n * @typedef {import('ipfs-core-types/src/root').AddResult} AddResult\n */\n\nexport const createAddAll = configure((api) => {\n  /**\n   * @type {RootAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body, total, parts } =\n      await multipartRequest(source, controller, options.headers)\n\n    // In browser response body only starts streaming once upload is\n    // complete, at which point all the progress updates are invalid. If\n    // length of the content is computable we can interpret progress from\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\n    // in which case we disable progress updates to be written out.\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\n      ? createProgressHandler(total, parts, options.progress)\n      : [undefined, undefined]\n\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    })\n\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file)\n\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file)\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name)\n      }\n    }\n  }\n  return addAll\n})\n\n/**\n * Returns simple progress callback when content length isn't computable or a\n * progress event handler that calculates progress from upload progress events.\n *\n * @param {number} total\n * @param {{name:string, start:number, end:number}[]|null} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\n */\nconst createProgressHandler = (total, parts, progress) =>\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\n\n/**\n * Creates a progress handler that interpolates progress from upload progress\n * events and total size of the content that is added.\n *\n * @param {number} size - actual content size\n * @param {{name:string, start:number, end:number}[]} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {IPFSUtilsHttpUploadProgressFn}\n */\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0\n  const count = parts.length\n  return ({ loaded, total }) => {\n    // Derive position from the current progress.\n    const position = Math.floor(loaded / total * size)\n    while (index < count) {\n      const { start, end, name } = parts[index]\n      // If within current part range report progress and break the loop\n      if (position < end) {\n        progress(position - start, name)\n        break\n      // If passed current part range report final byte for the chunk and\n      // move to next one.\n      } else {\n        progress(end - start, name)\n        index += 1\n      }\n    }\n  }\n}\n\n/**\n * @param {object} input\n * @param {string} input.name\n * @param {string} input.hash\n * @param {string} input.size\n * @param {string} [input.mode]\n * @param {number} [input.mtime]\n * @param {number} [input.mtimeNsecs]\n */\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\n  /** @type {AddResult} */\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  }\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8)\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    }\n  }\n\n  return output\n}\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from './lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport function createAdd (options) {\n  const all = createAddAll(options)\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    async function add (input, options = {}) {\n      // @ts-expect-error - last may return undefined if source is empty\n      return await last(all(normaliseInput(input), options))\n    }\n    return add\n  })(options)\n}\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n","import { configure } from './lib/configure.js'\n\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '')\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    }\n  }\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createId = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => multiaddr(ma))\n    }\n\n    // @ts-expect-error server output is not typed\n    return output\n  }\n  return id\n})\n","import { createId } from './id.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport const createIsOnline = options => {\n  const id = createId(options)\n\n  /**\n   * @type {RootAPI[\"isOnline\"]}\n   */\n  async function isOnline (options = {}) {\n    const res = await id(options)\n\n    return Boolean(res && res.addresses && res.addresses.length)\n  }\n  return isOnline\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { createStat } from './files/stat.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createLs = configure((api, opts) => {\n  /**\n   * @type {RootAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`\n\n    /**\n     * @param {*} link\n     */\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await createStat(opts)(ipfsPath)\n\n        hash = stats.cid\n      } else {\n        hash = CID.parse(hash)\n      }\n\n      /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n  return ls\n})\n\n/**\n * @param {any} link\n */\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'file'\n  }\n}\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createMount = configure(api => {\n  /**\n   * @type {RootAPI[\"mount\"]}\n   */\n  async function mount (options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return mount\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createPing = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n  return ping\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n","import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RootAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    }\n  }\n\n  return version\n})\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import { abortableSource } from 'abortable-iterator';\nimport { CLOSE_TIMEOUT } from './constants.js';\nimport pTimeout from 'p-timeout';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:websockets:socket');\n// Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\nexport function socketToMaConn(stream, remoteAddr, options) {\n    options = options ?? {};\n    const maConn = {\n        async sink(source) {\n            if ((options?.signal) != null) {\n                source = abortableSource(source, options.signal);\n            }\n            try {\n                await stream.sink(source);\n            }\n            catch (err) {\n                if (err.type !== 'aborted') {\n                    log.error(err);\n                }\n            }\n        },\n        source: (options.signal != null) ? abortableSource(stream.source, options.signal) : stream.source,\n        remoteAddr,\n        timeline: { open: Date.now() },\n        async close() {\n            const start = Date.now();\n            try {\n                await pTimeout(stream.close(), {\n                    milliseconds: CLOSE_TIMEOUT\n                });\n            }\n            catch (err) {\n                const { host, port } = maConn.remoteAddr.toOptions();\n                log('timeout closing stream to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n                stream.destroy();\n            }\n            finally {\n                maConn.timeline.close = Date.now();\n            }\n        }\n    };\n    stream.socket.addEventListener('close', () => {\n        // In instances where `close` was not explicitly called,\n        // such as an iterable stream ending, ensure we have set the close\n        // timeline\n        if (maConn.timeline.close == null) {\n            maConn.timeline.close = Date.now();\n        }\n    }, { once: true });\n    return maConn;\n}\n//# sourceMappingURL=socket-to-conn.js.map","// p2p multi-address code\nexport const CODE_P2P = 421;\nexport const CODE_CIRCUIT = 290;\nexport const CODE_TCP = 6;\nexport const CODE_WS = 477;\nexport const CODE_WSS = 478;\n// Time to wait for a connection to close gracefully before destroying it manually\nexport const CLOSE_TIMEOUT = 2000;\n//# sourceMappingURL=constants.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')), and(TCP, base('tls'), base('ws')), and(DNS, base('tls'), base('ws')));\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nconst _WebRTCDirect = and(UDP, base('webrtc-direct'), base('certhash'));\nexport const WebRTCDirect = or(and(_WebRTCDirect, base('p2p')), _WebRTCDirect);\n/**\n * @deprecated\n */\nexport const P2PWebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\n/**\n * @deprecated\n */\nexport const P2PWebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(WebSockets, WebSocketsSecure, HTTP, HTTPS, P2PWebRTCStar, P2PWebRTCDirect, TCP, UTP, QUIC, DNS, WebRTCDirect);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), P2PWebRTCStar, P2PWebRTCDirect, WebRTCDirect, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\nexport const WebRTC = or(and(Circuit, base('webrtc')), and(Reliable, base('webrtc')), base('webrtc'));\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const out = partialMatch(ma.protoNames());\n        if (out === null) {\n            return false;\n        }\n        if (out === true || out === false) {\n            return out;\n        }\n        return out.length === 0;\n    }\n    return matches;\n}\nfunction and(...args) {\n    function partialMatch(a) {\n        if (a.length < args.length) {\n            return null;\n        }\n        let out = a;\n        args.some((arg) => {\n            out = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (Array.isArray(out)) {\n                a = out;\n            }\n            if (out === null) {\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    return {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n}\nfunction or(...args) {\n    function partialMatch(a) {\n        let out = null;\n        args.some((arg) => {\n            const res = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (res != null) {\n                out = res;\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    const result = {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n    return result;\n}\nfunction base(n) {\n    const name = n;\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const pnames = ma.protoNames();\n        if (pnames.length === 1 && pnames[0] === name) {\n            return true;\n        }\n        return false;\n    }\n    function partialMatch(protos) {\n        if (protos.length === 0) {\n            return null;\n        }\n        if (protos[0] === name) {\n            return protos.slice(1);\n        }\n        return null;\n    }\n    return {\n        toString: function () { return name; },\n        matches,\n        partialMatch\n    };\n}\n//# sourceMappingURL=index.js.map","import { connect } from 'it-ws/client';\nimport { multiaddrToUri as toUri } from '@multiformats/multiaddr-to-uri';\nimport { AbortError } from '@libp2p/interfaces/errors';\nimport pDefer from 'p-defer';\nimport { logger } from '@libp2p/logger';\nimport { isBrowser, isWebWorker } from 'wherearewe';\nimport { createListener } from './listener.js';\nimport { socketToMaConn } from './socket-to-conn.js';\nimport * as filters from './filters.js';\nimport { symbol } from '@libp2p/interface-transport';\nconst log = logger('libp2p:websockets');\nclass WebSockets {\n    constructor(init) {\n        this.init = init;\n    }\n    get [Symbol.toStringTag]() {\n        return '@libp2p/websockets';\n    }\n    get [symbol]() {\n        return true;\n    }\n    async dial(ma, options) {\n        log('dialing %s', ma);\n        options = options ?? {};\n        const socket = await this._connect(ma, options);\n        const maConn = socketToMaConn(socket, ma);\n        log('new outbound connection %s', maConn.remoteAddr);\n        const conn = await options.upgrader.upgradeOutbound(maConn);\n        log('outbound connection %s upgraded', maConn.remoteAddr);\n        return conn;\n    }\n    async _connect(ma, options) {\n        if (options?.signal?.aborted === true) {\n            throw new AbortError();\n        }\n        const cOpts = ma.toOptions();\n        log('dialing %s:%s', cOpts.host, cOpts.port);\n        const errorPromise = pDefer();\n        const errfn = (err) => {\n            log.error('connection error:', err);\n            errorPromise.reject(err);\n        };\n        const rawSocket = connect(toUri(ma), this.init);\n        if (rawSocket.socket.on != null) {\n            rawSocket.socket.on('error', errfn);\n        }\n        else {\n            rawSocket.socket.onerror = errfn;\n        }\n        if (options.signal == null) {\n            await Promise.race([rawSocket.connected(), errorPromise.promise]);\n            log('connected %s', ma);\n            return rawSocket;\n        }\n        // Allow abort via signal during connect\n        let onAbort;\n        const abort = new Promise((resolve, reject) => {\n            onAbort = () => {\n                reject(new AbortError());\n                rawSocket.close().catch(err => {\n                    log.error('error closing raw socket', err);\n                });\n            };\n            // Already aborted?\n            if (options?.signal?.aborted === true) {\n                onAbort();\n                return;\n            }\n            options?.signal?.addEventListener('abort', onAbort);\n        });\n        try {\n            await Promise.race([abort, errorPromise.promise, rawSocket.connected()]);\n        }\n        finally {\n            if (onAbort != null) {\n                options?.signal?.removeEventListener('abort', onAbort);\n            }\n        }\n        log('connected %s', ma);\n        return rawSocket;\n    }\n    /**\n     * Creates a Websockets listener. The provided `handler` function will be called\n     * anytime a new incoming Connection has been successfully upgraded via\n     * `upgrader.upgradeInbound`\n     */\n    createListener(options) {\n        return createListener({ ...this.init, ...options });\n    }\n    /**\n     * Takes a list of `Multiaddr`s and returns only valid Websockets addresses.\n     * By default, in a browser environment only DNS+WSS multiaddr is accepted,\n     * while in a Node.js environment DNS+{WS, WSS} multiaddrs are accepted.\n     */\n    filter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        if (this.init?.filter != null) {\n            return this.init?.filter(multiaddrs);\n        }\n        // Browser\n        if (isBrowser || isWebWorker) {\n            return filters.wss(multiaddrs);\n        }\n        return filters.all(multiaddrs);\n    }\n}\nexport function webSockets(init = {}) {\n    return () => {\n        return new WebSockets(init);\n    };\n}\n//# sourceMappingURL=index.js.map","export function createListener() {\n    throw new Error('WebSocket Servers can not be created in the browser!');\n}\n//# sourceMappingURL=listener.browser.js.map","import * as mafmt from '@multiformats/mafmt';\nimport { CODE_CIRCUIT, CODE_P2P, CODE_TCP, CODE_WS, CODE_WSS } from './constants.js';\nexport function all(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSockets.matches(testMa) ||\n            mafmt.WebSocketsSecure.matches(testMa);\n    });\n}\nexport function wss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSocketsSecure.matches(testMa);\n    });\n}\nexport function dnsWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\nexport function dnsWsOrWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        // WS\n        if (mafmt.WebSockets.matches(testMa)) {\n            return mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WS));\n        }\n        // WSS\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\n//# sourceMappingURL=filters.js.map","import get from 'dlv'\nimport mergeOpts from 'merge-options'\nimport errCode from 'err-code'\nimport { routers } from 'ipfs-core-config/libp2p-pubsub-routers'\nimport { delegatedPeerRouting } from '@libp2p/delegated-peer-routing'\nimport { delegatedContentRouting } from '@libp2p/delegated-content-routing'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { ipfsCore as pkgversion } from '../version.js'\nimport { libp2pConfig as getEnvLibp2pOptions } from 'ipfs-core-config/libp2p'\nimport { createLibp2p as createNode } from 'libp2p'\nimport { kadDHT } from '@libp2p/kad-dht'\nimport { bootstrap } from '@libp2p/bootstrap'\nimport { ipnsValidator } from 'ipns/validator'\nimport { ipnsSelector } from 'ipns/selector'\nimport { webSockets } from '@libp2p/websockets'\nimport { mplex } from '@libp2p/mplex'\nimport { noise } from '@chainsafe/libp2p-noise'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true, concatArrays: true })\n\n/**\n * @typedef {object} DekOptions\n * @property {string} hash\n * @property {string} salt\n * @property {number} iterationCount\n * @property {number} keyLength\n *\n * @typedef {object} KeychainConfig\n * @property {string} [pass]\n * @property {DekOptions} [dek]\n *\n * @typedef {import('ipfs-repo').IPFSRepo} Repo\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('libp2p').Libp2p} LibP2P\n * @typedef {import('libp2p').Libp2pOptions} Libp2pOptions\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {object} config\n * @param {Repo} config.repo\n * @param {IPFSOptions|undefined} config.options\n * @param {PeerId} config.peerId\n * @param {Multiaddr[]|undefined} config.multiaddrs\n * @param {KeychainConfig|undefined} config.keychainConfig\n * @param {Partial<IPFSConfig>|undefined} config.config\n */\nexport function createLibp2p ({\n  options = {},\n  peerId,\n  multiaddrs = [],\n  repo,\n  keychainConfig = {},\n  config = {}\n}) {\n  const { datastore } = repo\n\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  })\n\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({ libp2pOptions, options, config, datastore, peerId })\n  }\n\n  // do not start by default\n  libp2pOptions.start = false\n\n  return createNode(libp2pOptions)\n}\n\n/**\n * @param {object} input\n * @param {IPFSOptions} input.options\n * @param {Partial<IPFSConfig>} input.config\n * @param {Repo['datastore']} input.datastore\n * @param {KeychainConfig} input.keychainConfig\n * @param {PeerId} input.peerId\n * @param {Multiaddr[]} input.multiaddrs\n * @returns {Libp2pOptions}\n */\nfunction getLibp2pOptions ({ options, config, datastore, keychainConfig, peerId, multiaddrs }) {\n  const getPubsubRouter = () => {\n    const router = get(config, 'Pubsub.Router') || 'gossipsub'\n\n    const availableRouters = routers()\n\n    if (!availableRouters[router]) {\n      throw errCode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${router} router.`), 'ERR_NOT_SUPPORTED')\n    }\n\n    return availableRouters[router]\n  }\n\n  /** @type {Libp2pOptions} */\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId\n  }\n\n  /** @type {Libp2pOptions} */\n  const libp2pOptions = {\n    addresses: {\n      listen: multiaddrs.map(ma => ma.toString()),\n      announce: get(options, 'addresses.announce', get(config, 'Addresses.Announce', [])),\n      noAnnounce: get(options, 'addresses.noAnnounce', get(config, 'Addresses.NoAnnounce', []))\n    },\n    connectionManager: get(options, 'connectionManager', {\n      maxConnections: get(options, 'config.Swarm.ConnMgr.HighWater', get(config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get(options, 'config.Swarm.ConnMgr.LowWater', get(config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: keychainConfig,\n    identify: {\n      host: {\n        agentVersion: `js-ipfs/${pkgversion}`\n      }\n    },\n    contentRouters: [],\n    peerRouters: [],\n    peerDiscovery: [],\n    transports: [],\n    streamMuxers: [\n      mplex({\n        maxInboundStreams: 256,\n        maxOutboundStreams: 1024\n      })\n    ],\n    connectionEncryption: [\n      noise()\n    ],\n    relay: {\n      enabled: get(options, 'relay.enabled', get(config, 'relay.enabled', true)),\n      hop: {\n        enabled: get(options, 'relay.hop.enabled', get(config, 'relay.hop.enabled', false)),\n        active: get(options, 'relay.hop.active', get(config, 'relay.hop.active', false))\n      }\n    },\n    nat: {\n      enabled: !get(config, 'Swarm.DisableNatPortMap', false)\n    }\n  }\n\n  if (get(options, 'config.Pubsub.Enabled', get(config, 'Pubsub.Enabled', true))) {\n    libp2pOptions.pubsub = getPubsubRouter()\n  }\n\n  if (get(config, 'Routing.Type', 'dhtclient') !== 'none') {\n    libp2pOptions.dht = kadDHT({\n      clientMode: get(config, 'Routing.Type', 'dht') !== 'dhtserver',\n      kBucketSize: get(options, 'dht.kBucketSize', 20),\n      validators: {\n        ipns: ipnsValidator\n      },\n      selectors: {\n        ipns: ipnsSelector\n      }\n    })\n  }\n\n  const boostrapNodes = get(options, 'config.Bootstrap', get(config, 'Bootstrap', []))\n\n  if (boostrapNodes.length > 0) {\n    libp2pOptions.peerDiscovery?.push(\n      bootstrap({\n        list: boostrapNodes\n      })\n    )\n  }\n\n  /** @type {import('libp2p').Libp2pOptions | undefined} */\n  let constructorOptions = get(options, 'libp2p', undefined)\n\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = undefined\n  }\n\n  // Merge defaults with Node.js/browser/other environments options and configuration\n  /** @type {Libp2pOptions} */\n  const libp2pFinalConfig = mergeOptions(\n    libp2pDefaults,\n    getEnvLibp2pOptions(),\n    libp2pOptions,\n    constructorOptions\n  )\n\n  // Set up Delegate Routing based on the presence of Delegates in the config\n  const delegateHosts = get(options, 'config.Addresses.Delegates',\n    get(config, 'Addresses.Delegates', [])\n  )\n\n  if (delegateHosts.length > 0) {\n    // Pick a random delegate host\n    const delegateString = delegateHosts[Math.floor(Math.random() * delegateHosts.length)]\n    const delegateAddr = multiaddr(delegateString).toOptions()\n    const delegateApiOptions = {\n      host: delegateAddr.host,\n      // port is a string atm, so we need to convert for the check\n      // @ts-expect-error - parseInt(input:string) => number\n      protocol: parseInt(delegateAddr.port) === 443 ? 'https' : 'http',\n      port: delegateAddr.port\n    }\n\n    const delegateHttpClient = ipfsHttpClient(delegateApiOptions)\n\n    libp2pFinalConfig.contentRouters?.push(delegatedContentRouting(delegateHttpClient))\n    libp2pFinalConfig.peerRouters?.push(delegatedPeerRouting(delegateHttpClient))\n  }\n\n  // TODO: fixme\n  if (!get(options, 'config.Discovery.MDNS.Enabled', get(config, 'Discovery.MDNS.Enabled', true))) {\n    libp2pFinalConfig.peerDiscovery = libp2pFinalConfig.peerDiscovery?.filter(d => {\n      try {\n        if (typeof d === 'function') {\n          // @ts-expect-error not components\n          return d({})[Symbol.toStringTag] !== '@libp2p/mdns'\n        }\n      } catch {}\n      return true\n    })\n  }\n\n  if (libp2pFinalConfig.transports == null) {\n    libp2pFinalConfig.transports = []\n  }\n\n  // add WebSocket transport if not overridden by user config\n  if (libp2pFinalConfig.transports.find(t => {\n    try {\n      if (typeof t === 'function') {\n        return t({})[Symbol.toStringTag] === '@libp2p/websockets'\n      }\n    } catch {}\n    return false\n  }) == null) {\n    libp2pFinalConfig.transports.push(webSockets())\n  }\n\n  return libp2pFinalConfig\n}\n","import { webRTCStar } from '@libp2p/webrtc-star'\n\nexport function libp2pConfig () {\n  const webRtcStar = webRTCStar()\n\n  /** @type {import('libp2p').Libp2pOptions} */\n  const options = {\n    transports: [\n      webRtcStar.transport\n    ],\n    peerDiscovery: [\n      webRtcStar.discovery\n    ],\n    connectionManager: {\n      maxParallelDials: 150, // 150 total parallel multiaddr dials\n      maxDialsPerPeer: 4, // Allow 4 multiaddrs to be dialed per peer in parallel\n      dialTimeout: 10e3, // 10 second dial timeout per peer dial\n      autoDial: true\n    },\n    nat: {\n      enabled: false\n    }\n  }\n\n  return options\n}\n","/* eslint-env browser */\n\nimport { Multibases } from 'ipfs-core-utils/multibases'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { createBitswap } from './bitswap/index.js'\nimport { createBlock } from './block/index.js'\nimport { createBootstrap } from './bootstrap/index.js'\nimport { createConfig } from './config/index.js'\nimport { createDag } from './dag/index.js'\nimport { createDht } from './dht/index.js'\nimport { createDiag } from './diag/index.js'\nimport { createFiles } from './files/index.js'\nimport { createKey } from './key/index.js'\nimport { createLog } from './log/index.js'\nimport { createName } from './name/index.js'\nimport { createObject } from './object/index.js'\nimport { createPin } from './pin/index.js'\nimport { createPubsub } from './pubsub/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createRepo } from './repo/index.js'\nimport { createStats } from './stats/index.js'\nimport { createSwarm } from './swarm/index.js'\nimport { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createCat } from './cat.js'\nimport { createCommands } from './commands.js'\nimport { createDns } from './dns.js'\nimport { createGetEndpointConfig } from './get-endpoint-config.js'\nimport { createGet } from './get.js'\nimport { createId } from './id.js'\nimport { createIsOnline } from './is-online.js'\nimport { createLs } from './ls.js'\nimport { createMount } from './mount.js'\nimport { createPing } from './ping.js'\nimport { createResolve } from './resolve.js'\nimport { createStart } from './start.js'\nimport { createStop } from './stop.js'\nimport { createVersion } from './version.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\n\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').IPFSHTTPClient} IPFSHTTPClient\n */\n\n/**\n * @param {Options} options\n */\nexport function create (options = {}) {\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {MultibaseCodec[]} */\n  const multibaseCodecs = Object.values(bases);\n\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  })\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  /** @type {MultihashHasher[]} */\n  const multihashHashers = Object.values(hashes);\n\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  })\n\n  /** @type {IPFSHTTPClient} */\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  }\n\n  return client\n}\n\nexport { CID } from 'multiformats/cid'\nexport { multiaddr } from '@multiformats/multiaddr'\nexport { default as urlSource } from 'ipfs-utils/src/files/url-source.js'\nexport const globSource = globSourceImport\n","import { logger } from '@libp2p/logger'\nimport { createRepo } from 'ipfs-core-config/repo'\nimport getDefaultConfig from 'ipfs-core-config/config'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { isPeerId } from '@libp2p/interface-peer-id'\nimport mergeOpts from 'merge-options'\nimport { profiles as configProfiles } from './config/profiles.js'\nimport { NotEnabledError, NotInitializedError } from '../errors.js'\nimport { createLibp2p } from './libp2p.js'\nimport { ERR_REPO_NOT_INITIALIZED } from 'ipfs-repo/errors'\nimport { createEd25519PeerId, createRSAPeerId } from '@libp2p/peer-id-factory'\nimport errCode from 'err-code'\nimport { unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport { Key } from 'interface-datastore/key'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:components:peer:storage')\n\n/**\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('../types').InitOptions} InitOptions\n * @typedef {import('../types').Print} Print\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('@libp2p/crypto/keys').KeyTypes} KeyType\n * @typedef {import('@libp2p/interface-keychain').KeyChain} Keychain\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nexport class Storage {\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {Keychain} keychain\n   * @param {IPFSRepo} repo\n   * @param {Print} print\n   * @param {boolean} isNew\n   */\n  constructor (peerId, keychain, repo, print, isNew) {\n    this.print = print\n    this.peerId = peerId\n    this.keychain = keychain\n    this.repo = repo\n    this.print = print\n    this.isNew = isNew\n  }\n\n  /**\n   * @param {Print} print\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n   * @param {IPFSOptions} options\n   */\n  static async start (print, codecs, options) {\n    const { repoAutoMigrate, repo: inputRepo, onMigrationProgress } = options\n\n    const repo = (typeof inputRepo === 'string' || inputRepo == null)\n      ? createRepo(print, codecs, {\n        path: inputRepo,\n        autoMigrate: repoAutoMigrate,\n        onMigrationProgress: onMigrationProgress\n      })\n      : inputRepo\n\n    const { peerId, keychain, isNew } = await loadRepo(print, repo, options)\n\n    // TODO: throw error?\n    // @ts-expect-error On start, keychain will always be available\n    return new Storage(peerId, keychain, repo, print, isNew)\n  }\n}\n\n/**\n * @param {Print} print\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n */\nconst loadRepo = async (print, repo, options) => {\n  if (!repo.closed) {\n    return { ...await configureRepo(repo, options), isNew: false }\n  }\n\n  try {\n    await repo.open()\n\n    return { ...await configureRepo(repo, options), isNew: false }\n  } catch (/** @type {any} */ err) {\n    if (err.code !== ERR_REPO_NOT_INITIALIZED) {\n      throw err\n    }\n\n    if (options.init && options.init.allowNew === false) {\n      throw new NotEnabledError('Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it')\n    }\n\n    return { ...await initRepo(print, repo, options), isNew: true }\n  }\n}\n\n/**\n * @param {Print} print\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst initRepo = async (print, repo, options) => {\n  const initOptions = options.init || {}\n\n  // 1. Verify that repo does not exist yet (if it does and we could not open it we give up)\n  const exists = await repo.exists()\n  log('repo exists?', exists)\n\n  if (exists === true) {\n    throw new Error('repo already exists')\n  }\n\n  // 2. Restore `peerId` from a given `.privateKey` or init new using provided options.\n  const peerId = initOptions.privateKey\n    ? await decodePeerId(initOptions.privateKey)\n    : await initPeerId(print, initOptions)\n\n  const identity = peerIdToIdentity(peerId)\n\n  log('peer identity: %s', identity.PeerID)\n\n  // 3. Init new repo with provided `.config` and restored / initialized `peerId`\n  const config = {\n    ...mergeOptions(applyProfiles(getDefaultConfig(), initOptions.profiles), options.config),\n    Identity: identity\n  }\n  await repo.init(config)\n\n  // 4. Open initialized repo.\n  await repo.open()\n\n  log('repo opened')\n\n  /** @type {import('./libp2p').KeychainConfig} */\n  const keychainConfig = {\n    pass: options.pass\n  }\n\n  try {\n    keychainConfig.dek = await repo.config.get('Keychain.DEK')\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n  }\n\n  // Create libp2p for Keychain creation\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config,\n    keychainConfig\n  })\n\n  if (!(await repo.datastore.has(new Key('/info/self')))) {\n    await libp2p.keychain.importPeer('self', peerId)\n  }\n\n  await repo.config.set('Keychain', {\n    // @ts-expect-error private field\n    DEK: libp2p.keychain.init.dek\n  })\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * Takes `peerId` either represented as a string serialized string or\n * an instance and returns a `PeerId` instance.\n *\n * @param {PeerId|string} peerId\n * @returns {Promise<PeerId>}\n */\nconst decodePeerId = async (peerId) => {\n  log('using user-supplied private-key')\n  if (isPeerId(peerId)) {\n    return peerId\n  }\n\n  const rawPrivateKey = uint8ArrayFromString(peerId, 'base64pad')\n  const key = await unmarshalPrivateKey(rawPrivateKey)\n  return await peerIdFromKeys(key.public.bytes, key.bytes)\n}\n\n/**\n * Initializes new PeerId by generating an underlying keypair.\n *\n * @param {Print} print\n * @param {object} options\n * @param {KeyType} [options.algorithm='Ed25519']\n * @param {number} [options.bits=2048]\n * @returns {Promise<PeerId>}\n */\nconst initPeerId = (print, { algorithm = 'Ed25519', bits = 2048 }) => {\n  // Generate peer identity keypair + transform to desired format + add to config.\n  print('generating %s keypair...', algorithm)\n\n  if (algorithm === 'Ed25519') {\n    return createEd25519PeerId()\n  }\n\n  if (algorithm === 'RSA') {\n    return createRSAPeerId({ bits })\n  }\n\n  throw errCode(new Error('Unknown PeerId algorithm'), 'ERR_UNKNOWN_PEER_ID_ALGORITHM')\n}\n\n/**\n * @param {PeerId} peerId\n */\nconst peerIdToIdentity = (peerId) => {\n  if (peerId.privateKey == null) {\n    throw errCode(new Error('Private key missing'), 'ERR_MISSING_PRIVATE_KEY')\n  }\n\n  return {\n    PeerID: peerId.toString(),\n    /** @type {string} */\n    PrivKey: uint8ArrayToString(peerId.privateKey, 'base64pad')\n  }\n}\n\n/**\n * Applies passed `profiles` and a `config` to an open repo.\n *\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst configureRepo = async (repo, options) => {\n  const config = options.config\n  const profiles = (options.init && options.init.profiles) || []\n  const pass = options.pass\n  const original = await repo.config.getAll()\n  const changed = mergeConfigs(applyProfiles(original, profiles), config)\n\n  if (original !== changed) {\n    await repo.config.replace(changed)\n  }\n\n  if (!changed.Identity || !changed.Identity.PrivKey) {\n    throw new NotInitializedError('No private key was found in the config, please intialize the repo')\n  }\n\n  const buf = uint8ArrayFromString(changed.Identity.PrivKey, 'base64pad')\n  const key = await unmarshalPrivateKey(buf)\n  const peerId = await peerIdFromKeys(key.public.bytes, key.bytes)\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config: changed,\n    keychainConfig: {\n      pass,\n      ...changed.Keychain\n    }\n  })\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * @param {IPFSConfig} config\n * @param {Partial<IPFSConfig>} [changes]\n */\nconst mergeConfigs = (config, changes) =>\n  changes ? mergeOptions(config, changes) : config\n\n/**\n * Apply profiles (e.g. ['server', 'lowpower']) to config\n *\n * @param {IPFSConfig} config\n * @param {string[]} [profiles]\n */\nconst applyProfiles = (config, profiles) => {\n  return (profiles || []).reduce((config, name) => {\n    const profile = configProfiles[name]\n    if (!profile) {\n      throw new Error(`Could not find profile with name '${name}'`)\n    }\n    log('applying profile %s', name)\n    return profile.transform(config)\n  }, config)\n}\n","import * as varint from 'varint'\n\n/**\n * @param {Array<number>} buf\n * @returns {Uint8Array}\n */\nfunction varintEncoder (buf) {\n  let out = new Uint8Array(buf.reduce((acc, curr) => {\n    // @ts-expect-error types are wrong\n    return acc + varint.default.encodingLength(curr)\n  }, 0))\n  let offset = 0\n\n  for (const num of buf) {\n    out = varint.encode(num, out, offset)\n\n    // @ts-expect-error types are wrong\n    offset += varint.default.encodingLength(num)\n  }\n\n  return out\n}\n\nexport default varintEncoder\n","\nimport { base58btc } from 'multiformats/bases/base58'\n\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor (cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1\n\n    this.cid = cid\n    this.priority = priority || 1\n    this.wantType = wantType\n  }\n\n  inc () {\n    this._refCounter += 1\n  }\n\n  dec () {\n    this._refCounter = Math.max(0, this._refCounter - 1)\n  }\n\n  hasRefs () {\n    return this._refCounter > 0\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`\n  }\n\n  /**\n   * @param {any} other\n   */\n  equals (other) {\n    return (this._refCounter === other._refCounter) &&\n      this.cid.equals(other.cid) &&\n      this.priority === other.priority &&\n      this.wantType === other.wantType\n  }\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-bitswap\"] || ($protobuf.roots[\"ipfs-bitswap\"] = {});\n\nexport const Message = $root.Message = (() => {\n\n    /**\n     * Properties of a Message.\n     * @exports IMessage\n     * @interface IMessage\n     * @property {Message.IWantlist|null} [wantlist] Message wantlist\n     * @property {Array.<Uint8Array>|null} [blocks] Message blocks\n     * @property {Array.<Message.IBlock>|null} [payload] Message payload\n     * @property {Array.<Message.IBlockPresence>|null} [blockPresences] Message blockPresences\n     * @property {number|null} [pendingBytes] Message pendingBytes\n     */\n\n    /**\n     * Constructs a new Message.\n     * @exports Message\n     * @classdesc Represents a Message.\n     * @implements IMessage\n     * @constructor\n     * @param {IMessage=} [p] Properties to set\n     */\n    function Message(p) {\n        this.blocks = [];\n        this.payload = [];\n        this.blockPresences = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Message wantlist.\n     * @member {Message.IWantlist|null|undefined} wantlist\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.wantlist = null;\n\n    /**\n     * Message blocks.\n     * @member {Array.<Uint8Array>} blocks\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.blocks = $util.emptyArray;\n\n    /**\n     * Message payload.\n     * @member {Array.<Message.IBlock>} payload\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.payload = $util.emptyArray;\n\n    /**\n     * Message blockPresences.\n     * @member {Array.<Message.IBlockPresence>} blockPresences\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.blockPresences = $util.emptyArray;\n\n    /**\n     * Message pendingBytes.\n     * @member {number} pendingBytes\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.pendingBytes = 0;\n\n    /**\n     * Encodes the specified Message message. Does not implicitly {@link Message.verify|verify} messages.\n     * @function encode\n     * @memberof Message\n     * @static\n     * @param {IMessage} m Message message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Message.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.wantlist != null && Object.hasOwnProperty.call(m, \"wantlist\"))\n            $root.Message.Wantlist.encode(m.wantlist, w.uint32(10).fork()).ldelim();\n        if (m.blocks != null && m.blocks.length) {\n            for (var i = 0; i < m.blocks.length; ++i)\n                w.uint32(18).bytes(m.blocks[i]);\n        }\n        if (m.payload != null && m.payload.length) {\n            for (var i = 0; i < m.payload.length; ++i)\n                $root.Message.Block.encode(m.payload[i], w.uint32(26).fork()).ldelim();\n        }\n        if (m.blockPresences != null && m.blockPresences.length) {\n            for (var i = 0; i < m.blockPresences.length; ++i)\n                $root.Message.BlockPresence.encode(m.blockPresences[i], w.uint32(34).fork()).ldelim();\n        }\n        if (m.pendingBytes != null && Object.hasOwnProperty.call(m, \"pendingBytes\"))\n            w.uint32(40).int32(m.pendingBytes);\n        return w;\n    };\n\n    /**\n     * Decodes a Message message from the specified reader or buffer.\n     * @function decode\n     * @memberof Message\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Message} Message\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Message.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Message();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1: {\n                    m.wantlist = $root.Message.Wantlist.decode(r, r.uint32());\n                    break;\n                }\n            case 2: {\n                    if (!(m.blocks && m.blocks.length))\n                        m.blocks = [];\n                    m.blocks.push(r.bytes());\n                    break;\n                }\n            case 3: {\n                    if (!(m.payload && m.payload.length))\n                        m.payload = [];\n                    m.payload.push($root.Message.Block.decode(r, r.uint32()));\n                    break;\n                }\n            case 4: {\n                    if (!(m.blockPresences && m.blockPresences.length))\n                        m.blockPresences = [];\n                    m.blockPresences.push($root.Message.BlockPresence.decode(r, r.uint32()));\n                    break;\n                }\n            case 5: {\n                    m.pendingBytes = r.int32();\n                    break;\n                }\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Message message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Message\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Message} Message\n     */\n    Message.fromObject = function fromObject(d) {\n        if (d instanceof $root.Message)\n            return d;\n        var m = new $root.Message();\n        if (d.wantlist != null) {\n            if (typeof d.wantlist !== \"object\")\n                throw TypeError(\".Message.wantlist: object expected\");\n            m.wantlist = $root.Message.Wantlist.fromObject(d.wantlist);\n        }\n        if (d.blocks) {\n            if (!Array.isArray(d.blocks))\n                throw TypeError(\".Message.blocks: array expected\");\n            m.blocks = [];\n            for (var i = 0; i < d.blocks.length; ++i) {\n                if (typeof d.blocks[i] === \"string\")\n                    $util.base64.decode(d.blocks[i], m.blocks[i] = $util.newBuffer($util.base64.length(d.blocks[i])), 0);\n                else if (d.blocks[i].length >= 0)\n                    m.blocks[i] = d.blocks[i];\n            }\n        }\n        if (d.payload) {\n            if (!Array.isArray(d.payload))\n                throw TypeError(\".Message.payload: array expected\");\n            m.payload = [];\n            for (var i = 0; i < d.payload.length; ++i) {\n                if (typeof d.payload[i] !== \"object\")\n                    throw TypeError(\".Message.payload: object expected\");\n                m.payload[i] = $root.Message.Block.fromObject(d.payload[i]);\n            }\n        }\n        if (d.blockPresences) {\n            if (!Array.isArray(d.blockPresences))\n                throw TypeError(\".Message.blockPresences: array expected\");\n            m.blockPresences = [];\n            for (var i = 0; i < d.blockPresences.length; ++i) {\n                if (typeof d.blockPresences[i] !== \"object\")\n                    throw TypeError(\".Message.blockPresences: object expected\");\n                m.blockPresences[i] = $root.Message.BlockPresence.fromObject(d.blockPresences[i]);\n            }\n        }\n        if (d.pendingBytes != null) {\n            m.pendingBytes = d.pendingBytes | 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Message message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Message\n     * @static\n     * @param {Message} m Message\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Message.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocks = [];\n            d.payload = [];\n            d.blockPresences = [];\n        }\n        if (o.defaults) {\n            d.wantlist = null;\n            d.pendingBytes = 0;\n        }\n        if (m.wantlist != null && m.hasOwnProperty(\"wantlist\")) {\n            d.wantlist = $root.Message.Wantlist.toObject(m.wantlist, o);\n        }\n        if (m.blocks && m.blocks.length) {\n            d.blocks = [];\n            for (var j = 0; j < m.blocks.length; ++j) {\n                d.blocks[j] = o.bytes === String ? $util.base64.encode(m.blocks[j], 0, m.blocks[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.blocks[j]) : m.blocks[j];\n            }\n        }\n        if (m.payload && m.payload.length) {\n            d.payload = [];\n            for (var j = 0; j < m.payload.length; ++j) {\n                d.payload[j] = $root.Message.Block.toObject(m.payload[j], o);\n            }\n        }\n        if (m.blockPresences && m.blockPresences.length) {\n            d.blockPresences = [];\n            for (var j = 0; j < m.blockPresences.length; ++j) {\n                d.blockPresences[j] = $root.Message.BlockPresence.toObject(m.blockPresences[j], o);\n            }\n        }\n        if (m.pendingBytes != null && m.hasOwnProperty(\"pendingBytes\")) {\n            d.pendingBytes = m.pendingBytes;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Message to JSON.\n     * @function toJSON\n     * @memberof Message\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Message.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for Message\n     * @function getTypeUrl\n     * @memberof Message\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    Message.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/Message\";\n    };\n\n    Message.Wantlist = (function() {\n\n        /**\n         * Properties of a Wantlist.\n         * @memberof Message\n         * @interface IWantlist\n         * @property {Array.<Message.Wantlist.IEntry>|null} [entries] Wantlist entries\n         * @property {boolean|null} [full] Wantlist full\n         */\n\n        /**\n         * Constructs a new Wantlist.\n         * @memberof Message\n         * @classdesc Represents a Wantlist.\n         * @implements IWantlist\n         * @constructor\n         * @param {Message.IWantlist=} [p] Properties to set\n         */\n        function Wantlist(p) {\n            this.entries = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Wantlist entries.\n         * @member {Array.<Message.Wantlist.IEntry>} entries\n         * @memberof Message.Wantlist\n         * @instance\n         */\n        Wantlist.prototype.entries = $util.emptyArray;\n\n        /**\n         * Wantlist full.\n         * @member {boolean} full\n         * @memberof Message.Wantlist\n         * @instance\n         */\n        Wantlist.prototype.full = false;\n\n        /**\n         * Encodes the specified Wantlist message. Does not implicitly {@link Message.Wantlist.verify|verify} messages.\n         * @function encode\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Message.IWantlist} m Wantlist message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Wantlist.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.entries != null && m.entries.length) {\n                for (var i = 0; i < m.entries.length; ++i)\n                    $root.Message.Wantlist.Entry.encode(m.entries[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.full != null && Object.hasOwnProperty.call(m, \"full\"))\n                w.uint32(16).bool(m.full);\n            return w;\n        };\n\n        /**\n         * Decodes a Wantlist message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.Wantlist\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.Wantlist} Wantlist\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Wantlist.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Wantlist();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        if (!(m.entries && m.entries.length))\n                            m.entries = [];\n                        m.entries.push($root.Message.Wantlist.Entry.decode(r, r.uint32()));\n                        break;\n                    }\n                case 2: {\n                        m.full = r.bool();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a Wantlist message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.Wantlist} Wantlist\n         */\n        Wantlist.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.Wantlist)\n                return d;\n            var m = new $root.Message.Wantlist();\n            if (d.entries) {\n                if (!Array.isArray(d.entries))\n                    throw TypeError(\".Message.Wantlist.entries: array expected\");\n                m.entries = [];\n                for (var i = 0; i < d.entries.length; ++i) {\n                    if (typeof d.entries[i] !== \"object\")\n                        throw TypeError(\".Message.Wantlist.entries: object expected\");\n                    m.entries[i] = $root.Message.Wantlist.Entry.fromObject(d.entries[i]);\n                }\n            }\n            if (d.full != null) {\n                m.full = Boolean(d.full);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Wantlist message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Message.Wantlist} m Wantlist\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Wantlist.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.entries = [];\n            }\n            if (o.defaults) {\n                d.full = false;\n            }\n            if (m.entries && m.entries.length) {\n                d.entries = [];\n                for (var j = 0; j < m.entries.length; ++j) {\n                    d.entries[j] = $root.Message.Wantlist.Entry.toObject(m.entries[j], o);\n                }\n            }\n            if (m.full != null && m.hasOwnProperty(\"full\")) {\n                d.full = m.full;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Wantlist to JSON.\n         * @function toJSON\n         * @memberof Message.Wantlist\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Wantlist.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Wantlist\n         * @function getTypeUrl\n         * @memberof Message.Wantlist\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Wantlist.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.Wantlist\";\n        };\n\n        /**\n         * WantType enum.\n         * @name Message.Wantlist.WantType\n         * @enum {number}\n         * @property {number} Block=0 Block value\n         * @property {number} Have=1 Have value\n         */\n        Wantlist.WantType = (function() {\n            const valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"Block\"] = 0;\n            values[valuesById[1] = \"Have\"] = 1;\n            return values;\n        })();\n\n        Wantlist.Entry = (function() {\n\n            /**\n             * Properties of an Entry.\n             * @memberof Message.Wantlist\n             * @interface IEntry\n             * @property {Uint8Array|null} [block] Entry block\n             * @property {number|null} [priority] Entry priority\n             * @property {boolean|null} [cancel] Entry cancel\n             * @property {Message.Wantlist.WantType|null} [wantType] Entry wantType\n             * @property {boolean|null} [sendDontHave] Entry sendDontHave\n             */\n\n            /**\n             * Constructs a new Entry.\n             * @memberof Message.Wantlist\n             * @classdesc Represents an Entry.\n             * @implements IEntry\n             * @constructor\n             * @param {Message.Wantlist.IEntry=} [p] Properties to set\n             */\n            function Entry(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Entry block.\n             * @member {Uint8Array} block\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.block = $util.newBuffer([]);\n\n            /**\n             * Entry priority.\n             * @member {number} priority\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.priority = 0;\n\n            /**\n             * Entry cancel.\n             * @member {boolean} cancel\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.cancel = false;\n\n            /**\n             * Entry wantType.\n             * @member {Message.Wantlist.WantType} wantType\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.wantType = 0;\n\n            /**\n             * Entry sendDontHave.\n             * @member {boolean} sendDontHave\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.sendDontHave = false;\n\n            /**\n             * Encodes the specified Entry message. Does not implicitly {@link Message.Wantlist.Entry.verify|verify} messages.\n             * @function encode\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Message.Wantlist.IEntry} m Entry message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Entry.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.block != null && Object.hasOwnProperty.call(m, \"block\"))\n                    w.uint32(10).bytes(m.block);\n                if (m.priority != null && Object.hasOwnProperty.call(m, \"priority\"))\n                    w.uint32(16).int32(m.priority);\n                if (m.cancel != null && Object.hasOwnProperty.call(m, \"cancel\"))\n                    w.uint32(24).bool(m.cancel);\n                if (m.wantType != null && Object.hasOwnProperty.call(m, \"wantType\"))\n                    w.uint32(32).int32(m.wantType);\n                if (m.sendDontHave != null && Object.hasOwnProperty.call(m, \"sendDontHave\"))\n                    w.uint32(40).bool(m.sendDontHave);\n                return w;\n            };\n\n            /**\n             * Decodes an Entry message from the specified reader or buffer.\n             * @function decode\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {Message.Wantlist.Entry} Entry\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Entry.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Wantlist.Entry();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1: {\n                            m.block = r.bytes();\n                            break;\n                        }\n                    case 2: {\n                            m.priority = r.int32();\n                            break;\n                        }\n                    case 3: {\n                            m.cancel = r.bool();\n                            break;\n                        }\n                    case 4: {\n                            m.wantType = r.int32();\n                            break;\n                        }\n                    case 5: {\n                            m.sendDontHave = r.bool();\n                            break;\n                        }\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates an Entry message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {Message.Wantlist.Entry} Entry\n             */\n            Entry.fromObject = function fromObject(d) {\n                if (d instanceof $root.Message.Wantlist.Entry)\n                    return d;\n                var m = new $root.Message.Wantlist.Entry();\n                if (d.block != null) {\n                    if (typeof d.block === \"string\")\n                        $util.base64.decode(d.block, m.block = $util.newBuffer($util.base64.length(d.block)), 0);\n                    else if (d.block.length >= 0)\n                        m.block = d.block;\n                }\n                if (d.priority != null) {\n                    m.priority = d.priority | 0;\n                }\n                if (d.cancel != null) {\n                    m.cancel = Boolean(d.cancel);\n                }\n                switch (d.wantType) {\n                case \"Block\":\n                case 0:\n                    m.wantType = 0;\n                    break;\n                case \"Have\":\n                case 1:\n                    m.wantType = 1;\n                    break;\n                }\n                if (d.sendDontHave != null) {\n                    m.sendDontHave = Boolean(d.sendDontHave);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from an Entry message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Message.Wantlist.Entry} m Entry\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Entry.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    if (o.bytes === String)\n                        d.block = \"\";\n                    else {\n                        d.block = [];\n                        if (o.bytes !== Array)\n                            d.block = $util.newBuffer(d.block);\n                    }\n                    d.priority = 0;\n                    d.cancel = false;\n                    d.wantType = o.enums === String ? \"Block\" : 0;\n                    d.sendDontHave = false;\n                }\n                if (m.block != null && m.hasOwnProperty(\"block\")) {\n                    d.block = o.bytes === String ? $util.base64.encode(m.block, 0, m.block.length) : o.bytes === Array ? Array.prototype.slice.call(m.block) : m.block;\n                }\n                if (m.priority != null && m.hasOwnProperty(\"priority\")) {\n                    d.priority = m.priority;\n                }\n                if (m.cancel != null && m.hasOwnProperty(\"cancel\")) {\n                    d.cancel = m.cancel;\n                }\n                if (m.wantType != null && m.hasOwnProperty(\"wantType\")) {\n                    d.wantType = o.enums === String ? $root.Message.Wantlist.WantType[m.wantType] : m.wantType;\n                }\n                if (m.sendDontHave != null && m.hasOwnProperty(\"sendDontHave\")) {\n                    d.sendDontHave = m.sendDontHave;\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Entry to JSON.\n             * @function toJSON\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Entry.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Entry\n             * @function getTypeUrl\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/Message.Wantlist.Entry\";\n            };\n\n            return Entry;\n        })();\n\n        return Wantlist;\n    })();\n\n    Message.Block = (function() {\n\n        /**\n         * Properties of a Block.\n         * @memberof Message\n         * @interface IBlock\n         * @property {Uint8Array|null} [prefix] Block prefix\n         * @property {Uint8Array|null} [data] Block data\n         */\n\n        /**\n         * Constructs a new Block.\n         * @memberof Message\n         * @classdesc Represents a Block.\n         * @implements IBlock\n         * @constructor\n         * @param {Message.IBlock=} [p] Properties to set\n         */\n        function Block(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Block prefix.\n         * @member {Uint8Array} prefix\n         * @memberof Message.Block\n         * @instance\n         */\n        Block.prototype.prefix = $util.newBuffer([]);\n\n        /**\n         * Block data.\n         * @member {Uint8Array} data\n         * @memberof Message.Block\n         * @instance\n         */\n        Block.prototype.data = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified Block message. Does not implicitly {@link Message.Block.verify|verify} messages.\n         * @function encode\n         * @memberof Message.Block\n         * @static\n         * @param {Message.IBlock} m Block message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Block.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.prefix != null && Object.hasOwnProperty.call(m, \"prefix\"))\n                w.uint32(10).bytes(m.prefix);\n            if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                w.uint32(18).bytes(m.data);\n            return w;\n        };\n\n        /**\n         * Decodes a Block message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.Block\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.Block} Block\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Block.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Block();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        m.prefix = r.bytes();\n                        break;\n                    }\n                case 2: {\n                        m.data = r.bytes();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a Block message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.Block\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.Block} Block\n         */\n        Block.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.Block)\n                return d;\n            var m = new $root.Message.Block();\n            if (d.prefix != null) {\n                if (typeof d.prefix === \"string\")\n                    $util.base64.decode(d.prefix, m.prefix = $util.newBuffer($util.base64.length(d.prefix)), 0);\n                else if (d.prefix.length >= 0)\n                    m.prefix = d.prefix;\n            }\n            if (d.data != null) {\n                if (typeof d.data === \"string\")\n                    $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n                else if (d.data.length >= 0)\n                    m.data = d.data;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Block message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.Block\n         * @static\n         * @param {Message.Block} m Block\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Block.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.prefix = \"\";\n                else {\n                    d.prefix = [];\n                    if (o.bytes !== Array)\n                        d.prefix = $util.newBuffer(d.prefix);\n                }\n                if (o.bytes === String)\n                    d.data = \"\";\n                else {\n                    d.data = [];\n                    if (o.bytes !== Array)\n                        d.data = $util.newBuffer(d.data);\n                }\n            }\n            if (m.prefix != null && m.hasOwnProperty(\"prefix\")) {\n                d.prefix = o.bytes === String ? $util.base64.encode(m.prefix, 0, m.prefix.length) : o.bytes === Array ? Array.prototype.slice.call(m.prefix) : m.prefix;\n            }\n            if (m.data != null && m.hasOwnProperty(\"data\")) {\n                d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Block to JSON.\n         * @function toJSON\n         * @memberof Message.Block\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Block.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Block\n         * @function getTypeUrl\n         * @memberof Message.Block\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Block.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.Block\";\n        };\n\n        return Block;\n    })();\n\n    /**\n     * BlockPresenceType enum.\n     * @name Message.BlockPresenceType\n     * @enum {number}\n     * @property {number} Have=0 Have value\n     * @property {number} DontHave=1 DontHave value\n     */\n    Message.BlockPresenceType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Have\"] = 0;\n        values[valuesById[1] = \"DontHave\"] = 1;\n        return values;\n    })();\n\n    Message.BlockPresence = (function() {\n\n        /**\n         * Properties of a BlockPresence.\n         * @memberof Message\n         * @interface IBlockPresence\n         * @property {Uint8Array|null} [cid] BlockPresence cid\n         * @property {Message.BlockPresenceType|null} [type] BlockPresence type\n         */\n\n        /**\n         * Constructs a new BlockPresence.\n         * @memberof Message\n         * @classdesc Represents a BlockPresence.\n         * @implements IBlockPresence\n         * @constructor\n         * @param {Message.IBlockPresence=} [p] Properties to set\n         */\n        function BlockPresence(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * BlockPresence cid.\n         * @member {Uint8Array} cid\n         * @memberof Message.BlockPresence\n         * @instance\n         */\n        BlockPresence.prototype.cid = $util.newBuffer([]);\n\n        /**\n         * BlockPresence type.\n         * @member {Message.BlockPresenceType} type\n         * @memberof Message.BlockPresence\n         * @instance\n         */\n        BlockPresence.prototype.type = 0;\n\n        /**\n         * Encodes the specified BlockPresence message. Does not implicitly {@link Message.BlockPresence.verify|verify} messages.\n         * @function encode\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Message.IBlockPresence} m BlockPresence message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BlockPresence.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.cid != null && Object.hasOwnProperty.call(m, \"cid\"))\n                w.uint32(10).bytes(m.cid);\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(16).int32(m.type);\n            return w;\n        };\n\n        /**\n         * Decodes a BlockPresence message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.BlockPresence} BlockPresence\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BlockPresence.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.BlockPresence();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        m.cid = r.bytes();\n                        break;\n                    }\n                case 2: {\n                        m.type = r.int32();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a BlockPresence message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.BlockPresence} BlockPresence\n         */\n        BlockPresence.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.BlockPresence)\n                return d;\n            var m = new $root.Message.BlockPresence();\n            if (d.cid != null) {\n                if (typeof d.cid === \"string\")\n                    $util.base64.decode(d.cid, m.cid = $util.newBuffer($util.base64.length(d.cid)), 0);\n                else if (d.cid.length >= 0)\n                    m.cid = d.cid;\n            }\n            switch (d.type) {\n            case \"Have\":\n            case 0:\n                m.type = 0;\n                break;\n            case \"DontHave\":\n            case 1:\n                m.type = 1;\n                break;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a BlockPresence message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Message.BlockPresence} m BlockPresence\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BlockPresence.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.cid = \"\";\n                else {\n                    d.cid = [];\n                    if (o.bytes !== Array)\n                        d.cid = $util.newBuffer(d.cid);\n                }\n                d.type = o.enums === String ? \"Have\" : 0;\n            }\n            if (m.cid != null && m.hasOwnProperty(\"cid\")) {\n                d.cid = o.bytes === String ? $util.base64.encode(m.cid, 0, m.cid.length) : o.bytes === Array ? Array.prototype.slice.call(m.cid) : m.cid;\n            }\n            if (m.type != null && m.hasOwnProperty(\"type\")) {\n                d.type = o.enums === String ? $root.Message.BlockPresenceType[m.type] : m.type;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this BlockPresence to JSON.\n         * @function toJSON\n         * @memberof Message.BlockPresence\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BlockPresence.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for BlockPresence\n         * @function getTypeUrl\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        BlockPresence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.BlockPresence\";\n        };\n\n        return BlockPresence;\n    })();\n\n    return Message;\n})();\n\nexport { $root as default };\n","\nimport { WantListEntry as Entry } from './entry.js'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { Message } from '../message/message.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\nconst WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n}\n\n/**\n * @template T\n * @param {(v:T) => number} fn\n * @param {T[]} list\n * @returns {T[]}\n */\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a)\n    const bb = fn(b)\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  })\n}\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Wantlist {\n  /**\n   * @param {import('../stats').Stats} [stats]\n   * @param {import('@libp2p/interface-libp2p').Libp2p} [libp2p]\n   */\n  constructor (stats, libp2p) {\n    /** @type {Map<string, Entry>} */\n    this.set = libp2p\n      ? trackedMap({\n        name: 'ipfs_bitswap_wantlist',\n        metrics: libp2p.metrics\n      })\n      : new Map()\n    this._stats = stats\n  }\n\n  get length () {\n    return this.set.size\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  add (cid, priority, wantType) {\n    const cidStr = cid.toString(base58btc)\n    const entry = this.set.get(cidStr)\n\n    if (entry) {\n      entry.inc()\n      entry.priority = priority\n\n      // We can only overwrite want-have with want-block\n      if (entry.wantType === WantType.Have && wantType === WantType.Block) {\n        entry.wantType = wantType\n      }\n    } else {\n      this.set.set(cidStr, new Entry(cid, priority, wantType))\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1)\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  remove (cid) {\n    const cidStr = cid.toString(base58btc)\n    const entry = this.set.get(cidStr)\n\n    if (!entry) {\n      return\n    }\n\n    entry.dec()\n\n    // only delete when no refs are held\n    if (entry.hasRefs()) {\n      return\n    }\n\n    this.set.delete(cidStr)\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1)\n    }\n  }\n\n  /**\n   * @param {string} cidStr\n   */\n  removeForce (cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr)\n    }\n  }\n\n  /**\n   * @param {(entry:Entry, key:string) => void} fn\n   */\n  forEach (fn) {\n    return this.set.forEach(fn)\n  }\n\n  entries () {\n    return this.set.entries()\n  }\n\n  sortedEntries () {\n    // TODO: Figure out if this is an actual bug.\n    // @ts-expect-error - Property 'key' does not exist on type 'WantListEntry'\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())))\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  contains (cid) {\n    const cidStr = cid.toString(base58btc)\n    return this.set.has(cidStr)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  get (cid) {\n    const cidStr = cid.toString(base58btc)\n    return this.set.get(cidStr)\n  }\n}\n\nWantlist.Entry = Entry\n","\nimport { Wantlist } from '../wantlist/index.js'\nimport { base58btc } from 'multiformats/bases/base58'\n\nconst WantlistEntry = Wantlist.Entry\n\nexport class BitswapMessageEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType} wantType\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   */\n  constructor (cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType)\n    this.cancel = Boolean(cancel)\n    this.sendDontHave = Boolean(sendDontHave)\n  }\n\n  get cid () {\n    return this.entry.cid\n  }\n\n  set cid (cid) {\n    this.entry.cid = cid\n  }\n\n  get priority () {\n    return this.entry.priority\n  }\n\n  set priority (val) {\n    this.entry.priority = val\n  }\n\n  get wantType () {\n    return this.entry.wantType\n  }\n\n  set wantType (val) {\n    this.entry.wantType = val\n  }\n\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`\n  }\n\n  /**\n   * @param {this} other\n   */\n  equals (other) {\n    return (this.cancel === other.cancel) &&\n           (this.sendDontHave === other.sendDontHave) &&\n           (this.wantType === other.wantType) &&\n           this.entry.equals(other.entry)\n  }\n}\n","import { logger as createLogger } from '@libp2p/logger'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { BitswapMessageEntry } from '../message/entry.js'\n\n/**\n * Creates a logger for the given subsystem\n *\n * @param {import('@libp2p/interface-peer-id').PeerId} [id]\n * @param {string} [subsystem]\n */\nexport const logger = (id, subsystem) => {\n  const name = ['bitswap']\n  if (subsystem) {\n    name.push(subsystem)\n  }\n  if (id) {\n    name.push(`${id.toString().slice(0, 8)}`)\n  }\n\n  return createLogger(name.join(':'))\n}\n\n/**\n * @template X, T\n * @param {(x:X, t:T) => boolean} pred\n * @param {X} x\n * @param {T[]} list\n * @returns {boolean}\n */\nexport const includesWith = (pred, x, list) => {\n  let idx = 0\n  const len = list.length\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true\n    }\n    idx += 1\n  }\n  return false\n}\n\n/**\n * @template T\n * @param {(x:T, t:T) => boolean} pred\n * @param {T[]} list\n * @returns {T[]}\n */\nexport const uniqWith = (pred, list) => {\n  let idx = 0\n  const len = list.length\n  const result = []\n  let item\n\n  while (idx < len) {\n    item = list[idx]\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item\n    }\n    idx += 1\n  }\n  return result\n}\n\n/**\n * @template {string|number|symbol} K\n * @template V\n * @param {(v:V) => K} pred\n * @param {V[]} list\n * @returns {Record<K, V[]>}\n */\nexport const groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v)\n\n    if (acc[k]) {\n      acc[k].push(v)\n    } else {\n      acc[k] = [v]\n    }\n    return acc\n  }, /** @type {Record<K, V[]>} */({}))\n}\n\n/**\n * @template T, E\n * @param {(a:T, b:E) => boolean} pred\n * @param {T[]} list\n * @param {E[]} values\n * @returns {T[]}\n */\nexport const pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values)\n  })\n}\n\n/**\n * @template T\n * @param {(v:T) => number} fn\n * @param {T[]} list\n * @returns {T[]}\n */\nexport const sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a)\n    const bb = fn(b)\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  })\n}\n\n/**\n * Is equal for Maps of BitswapMessageEntry or Uint8Arrays\n *\n * @param {Map<string, Uint8Array | BitswapMessageEntry>} a\n * @param {Map<string, Uint8Array | BitswapMessageEntry>} b\n */\nexport const isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false\n  }\n\n  for (const [key, valueA] of a) {\n    const valueB = b.get(key)\n\n    if (valueB === undefined) {\n      return false\n    }\n\n    // TODO: revisit this\n\n    // Support Blocks\n    if (valueA instanceof Uint8Array && valueB instanceof Uint8Array && !uint8ArrayEquals(valueA, valueB)) {\n      return false\n    }\n\n    // Support BitswapMessageEntry\n    if (valueA instanceof BitswapMessageEntry && valueB instanceof BitswapMessageEntry && !valueA.equals(valueB)) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { base58btc } from 'multiformats/bases/base58'\n// @ts-ignore\nimport vd from 'varint-decoder'\nimport ve from '../utils/varint-encoder.js'\nimport { isMapEqual } from '../utils/index.js'\nimport { Message } from './message.js'\nimport { BitswapMessageEntry as Entry } from './entry.js'\nimport { CodeError } from '@libp2p/interfaces/errors'\n\n/**\n * @typedef {import('../types').MultihashHasherLoader} MultihashHasherLoader\n */\n\nexport class BitswapMessage {\n  /**\n   * @param {boolean} full\n   */\n  constructor (full) {\n    this.full = full\n    /** @type {Map<string, Entry>} */\n    this.wantlist = new Map()\n\n    /** @type {Map<string, Uint8Array>} */\n    this.blocks = new Map()\n\n    /** @type {Map<string, import('./message').Message.BlockPresenceType>} */\n    this.blockPresences = new Map()\n    this.pendingBytes = 0\n  }\n\n  get empty () {\n    return this.blocks.size === 0 &&\n           this.wantlist.size === 0 &&\n           this.blockPresences.size === 0\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType | null} [wantType]\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   * @returns {void}\n   */\n  addEntry (cid, priority, wantType, cancel, sendDontHave) {\n    if (wantType == null) {\n      wantType = BitswapMessage.WantType.Block\n    }\n\n    const cidStr = cid.toString(base58btc)\n    const entry = this.wantlist.get(cidStr)\n    if (entry) {\n      // Only change priority if want is of the same type\n      if (entry.wantType === wantType) {\n        entry.priority = priority\n      }\n      // Only change from \"dont cancel\" to \"do cancel\"\n      if (cancel) {\n        entry.cancel = Boolean(cancel)\n      }\n      // Only change from \"dont send\" to \"do send\" DONT_HAVE\n      if (sendDontHave) {\n        entry.sendDontHave = Boolean(sendDontHave)\n      }\n      // want-block overrides existing want-have\n      if (wantType === BitswapMessage.WantType.Block && entry.wantType === BitswapMessage.WantType.Have) {\n        entry.wantType = wantType\n      }\n    } else {\n      this.wantlist.set(cidStr, new Entry(cid, priority, wantType, cancel, sendDontHave))\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @returns {void}\n   */\n  addBlock (cid, block) {\n    const cidStr = cid.toString(base58btc)\n    this.blocks.set(cidStr, block)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  addHave (cid) {\n    const cidStr = cid.toString(base58btc)\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.Have)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  addDontHave (cid) {\n    const cidStr = cid.toString(base58btc)\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.DontHave)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  cancel (cid) {\n    const cidStr = cid.toString(base58btc)\n    this.wantlist.delete(cidStr)\n    this.addEntry(cid, 0, BitswapMessage.WantType.Block, true, false)\n  }\n\n  /**\n   * @param {number} size\n   */\n  setPendingBytes (size) {\n    this.pendingBytes = size\n  }\n\n  /**\n   * Serializes to Bitswap Message protobuf of\n   * version 1.0.0\n   *\n   * @returns {Uint8Array}\n   */\n  serializeToBitswap100 () {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map((entry) => {\n          return {\n            block: entry.cid.bytes, // cid\n            priority: Number(entry.priority),\n            cancel: Boolean(entry.cancel)\n          }\n        }),\n        full: this.full ? true : undefined\n      },\n      blocks: Array.from(this.blocks.values())\n    }\n\n    return Message.encode(msg).finish()\n  }\n\n  /**\n   * Serializes to Bitswap Message protobuf of\n   * version 1.1.0\n   *\n   * @returns {Uint8Array}\n   */\n  serializeToBitswap110 () {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map((entry) => {\n          return {\n            block: entry.cid.bytes, // cid\n            priority: Number(entry.priority),\n            wantType: entry.wantType,\n            cancel: Boolean(entry.cancel),\n            sendDontHave: Boolean(entry.sendDontHave)\n          }\n        }),\n        full: this.full ? true : undefined\n      },\n      /** @type {import('./message').Message.BlockPresence[]} */\n      blockPresences: [],\n\n      /** @type {{ prefix: Uint8Array, data: Uint8Array }[]} */\n      payload: [],\n      pendingBytes: this.pendingBytes\n    }\n\n    for (const [cidStr, data] of this.blocks.entries()) {\n      const cid = CID.parse(cidStr)\n      const version = cid.version\n      const codec = cid.code\n      const multihash = cid.multihash.code\n      const digestLength = cid.multihash.digest.length\n      const prefix = ve([\n        version, codec, multihash, digestLength\n      ])\n\n      msg.payload.push(\n        new Message.Block({\n          prefix,\n          data\n        })\n      )\n    }\n\n    for (const [cidStr, bpType] of this.blockPresences) {\n      msg.blockPresences.push(new Message.BlockPresence({\n        cid: CID.parse(cidStr).bytes,\n        type: bpType\n      }))\n    }\n\n    if (this.pendingBytes > 0) {\n      msg.pendingBytes = this.pendingBytes\n    }\n\n    return Message.encode(msg).finish()\n  }\n\n  /**\n   * @param {BitswapMessage} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    if (this.full !== other.full ||\n        this.pendingBytes !== other.pendingBytes ||\n        !isMapEqual(this.wantlist, other.wantlist) ||\n        !isMapEqual(this.blocks, other.blocks) ||\n        // @TODO - Is this a bug ?\n        // @ts-expect-error - isMap equals map values to be objects not numbers\n        !isMapEqual(this.blockPresences, other.blockPresences)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  get [Symbol.toStringTag] () {\n    const list = Array.from(this.wantlist.keys())\n    const blocks = Array.from(this.blocks.keys())\n    return `BitswapMessage <full: ${this.full}, list: ${list}, blocks: ${blocks}>`\n  }\n}\n\n/**\n * @param {Uint8Array} raw\n * @param {MultihashHasherLoader} [hashLoader]\n */\nBitswapMessage.deserialize = async (raw, hashLoader) => {\n  const decoded = Message.decode(raw)\n\n  const isFull = (decoded.wantlist && decoded.wantlist.full) || false\n  const msg = new BitswapMessage(isFull)\n\n  if (decoded.wantlist && decoded.wantlist.entries) {\n    decoded.wantlist.entries.forEach((entry) => {\n      if (!entry.block) {\n        return\n      }\n      // note: entry.block is the CID here\n      const cid = CID.decode(entry.block)\n      msg.addEntry(cid, entry.priority || 0, entry.wantType, Boolean(entry.cancel), Boolean(entry.sendDontHave))\n    })\n  }\n\n  if (decoded.blockPresences) {\n    decoded.blockPresences.forEach((blockPresence) => {\n      if (!blockPresence.cid) {\n        return\n      }\n\n      const cid = CID.decode(blockPresence.cid)\n\n      if (blockPresence.type === BitswapMessage.BlockPresenceType.Have) {\n        msg.addHave(cid)\n      } else {\n        msg.addDontHave(cid)\n      }\n    })\n  }\n\n  // Bitswap 1.0.0\n  // decoded.blocks are just the byte arrays\n  if (decoded.blocks.length > 0) {\n    await Promise.all(decoded.blocks.map(async (b) => {\n      const hash = await sha256.digest(b)\n      const cid = CID.createV0(hash)\n      msg.addBlock(cid, b)\n    }))\n    return msg\n  }\n\n  // Bitswap 1.1.0\n  if (decoded.payload.length > 0) {\n    await Promise.all(decoded.payload.map(async (p) => {\n      if (!p.prefix || !p.data) {\n        return\n      }\n      const values = vd(p.prefix)\n      const cidVersion = values[0]\n      const multicodec = values[1]\n      const hashAlg = values[2]\n      const hasher = hashAlg === sha256.code ? sha256 : hashLoader && await hashLoader.getHasher(hashAlg)\n\n      if (!hasher) {\n        throw new CodeError('Unknown hash algorithm', 'ERR_UNKNOWN_HASH_ALG')\n      }\n\n      // const hashLen = values[3] // We haven't need to use this so far\n      const hash = await hasher.digest(p.data)\n      const cid = CID.create(cidVersion, multicodec, hash)\n      msg.addBlock(cid, p.data)\n    }))\n    msg.setPendingBytes(decoded.pendingBytes)\n    return msg\n  }\n\n  return msg\n}\n\n/**\n * @param {CID} cid\n */\nBitswapMessage.blockPresenceSize = (cid) => {\n  // It's ok if this is not exactly right: it's used to estimate the size of\n  // the HAVE / DONT_HAVE on the wire, but when doing that calculation we leave\n  // plenty of padding under the maximum message size.\n  // (It's more important for this to be fast).\n  return cid.bytes.length + 1\n}\n\nBitswapMessage.Entry = Entry\nBitswapMessage.WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n}\nBitswapMessage.BlockPresenceType = {\n  Have: Message.BlockPresenceType.Have,\n  DontHave: Message.BlockPresenceType.DontHave\n}\n","const SECOND = 1000\n\nexport const maxProvidersPerRequest = 3\nexport const providerRequestTimeout = 10 * SECOND\nexport const hasBlockTimeout = 15 * SECOND\nexport const provideTimeout = 15 * SECOND\nexport const kMaxPriority = Math.pow(2, 31) - 1\nexport const maxListeners = 1000\nexport const wantlistSendDebounceMs = 1\n","var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","\n// @ts-ignore\nimport debounce from 'just-debounce-it'\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { logger } from '../utils/index.js'\nimport { wantlistSendDebounceMs } from '../constants.js'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('../network').Network} Network\n */\n\nexport class MsgQueue {\n  /**\n   * @param {PeerId} selfPeerId\n   * @param {PeerId} otherPeerId\n   * @param {Network} network\n   */\n  constructor (selfPeerId, otherPeerId, network) {\n    this.peerId = otherPeerId\n    this.network = network\n    this.refcnt = 1\n\n    /**\n     * @private\n     * @type {{cid:CID, priority:number, cancel?:boolean}[]}\n     */\n    this._entries = []\n    /** @private */\n    this._log = logger(selfPeerId, 'msgqueue')\n    this.sendEntries = debounce(this._sendEntries.bind(this), wantlistSendDebounceMs)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  addMessage (msg) {\n    if (msg.empty) {\n      return\n    }\n\n    this.send(msg)\n  }\n\n  /**\n   * @param {{cid:CID, priority:number}[]} entries\n   */\n  addEntries (entries) {\n    this._entries = this._entries.concat(entries)\n    this.sendEntries()\n  }\n\n  /**\n   * @private\n   */\n  _sendEntries () {\n    if (!this._entries.length) {\n      return\n    }\n\n    const msg = new Message(false)\n    this._entries.forEach((entry) => {\n      if (entry.cancel) {\n        msg.cancel(entry.cid)\n      } else {\n        msg.addEntry(entry.cid, entry.priority)\n      }\n    })\n    this._entries = []\n    this.addMessage(msg)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  async send (msg) {\n    try {\n      await this.network.connectTo(this.peerId)\n    } catch (/** @type {any} */ err) {\n      this._log.error('cant connect to peer %s: %s', this.peerId.toString(), err.message)\n      return\n    }\n\n    this._log('sending message to peer %s', this.peerId.toString())\n\n    // Note: Don't wait for sendMessage() to complete\n    this.network.sendMessage(this.peerId, msg).catch((err) => {\n      this._log.error('send error: %s', err.message)\n    })\n  }\n}\n","\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { Wantlist } from '../wantlist/index.js'\nimport * as CONSTANTS from '../constants.js'\nimport { MsgQueue } from './msg-queue.js'\nimport { logger } from '../utils/index.js'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class WantManager {\n  /**\n   * @param {PeerId} peerId\n   * @param {import('../network').Network} network\n   * @param {import('../stats').Stats} stats\n   * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n   */\n  constructor (peerId, network, stats, libp2p) {\n    /** @type {Map<string, MsgQueue>} */\n    this.peers = trackedMap({\n      name: 'ipfs_bitswap_want_manager_peers',\n      metrics: libp2p.metrics\n    })\n    this.wantlist = new Wantlist(stats, libp2p)\n\n    this.network = network\n    this._stats = stats\n\n    this._peerId = peerId\n    this._log = logger(peerId, 'want')\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @param {boolean} cancel\n   * @param {boolean} [force]\n   */\n  _addEntries (cids, cancel, force) {\n    const entries = cids.map((cid, i) => {\n      return new Message.Entry(cid, CONSTANTS.kMaxPriority - i, Message.WantType.Block, cancel)\n    })\n\n    entries.forEach((e) => {\n      // add changes to our wantlist\n      if (e.cancel) {\n        if (force) {\n          this.wantlist.removeForce(e.cid.toString(base58btc))\n        } else {\n          this.wantlist.remove(e.cid)\n        }\n      } else {\n        this._log('adding to wl')\n        // TODO: Figure out the wantType\n        // @ts-expect-error - requires wantType\n        this.wantlist.add(e.cid, e.priority)\n      }\n    })\n\n    // broadcast changes\n    for (const p of this.peers.values()) {\n      p.addEntries(entries)\n    }\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _startPeerHandler (peerId) {\n    let mq = this.peers.get(peerId.toString())\n\n    if (mq) {\n      mq.refcnt++\n      return\n    }\n\n    mq = new MsgQueue(this._peerId, peerId, this.network)\n\n    // new peer, give them the full wantlist\n    const fullwantlist = new Message(true)\n\n    for (const entry of this.wantlist.entries()) {\n      fullwantlist.addEntry(entry[1].cid, entry[1].priority)\n    }\n\n    mq.addMessage(fullwantlist)\n\n    this.peers.set(peerId.toString(), mq)\n    return mq\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _stopPeerHandler (peerId) {\n    const mq = this.peers.get(peerId.toString())\n\n    if (!mq) {\n      return\n    }\n\n    mq.refcnt--\n    if (mq.refcnt > 0) {\n      return\n    }\n\n    this.peers.delete(peerId.toString())\n  }\n\n  /**\n   * add all the cids to the wantlist\n   *\n   * @param {CID[]} cids\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  wantBlocks (cids, options = {}) {\n    this._addEntries(cids, false)\n\n    if (options && options.signal) {\n      options.signal.addEventListener('abort', () => {\n        this.cancelWants(cids)\n      })\n    }\n  }\n\n  /**\n   * Remove blocks of all the given keys without respecting refcounts\n   *\n   * @param {CID[]} cids\n   */\n  unwantBlocks (cids) {\n    this._log('unwant blocks: %s', cids.length)\n    this._addEntries(cids, true, true)\n  }\n\n  /**\n   * Cancel wanting all of the given keys\n   *\n   * @param {CID[]} cids\n   */\n  cancelWants (cids) {\n    this._log('cancel wants: %s', cids.length)\n    this._addEntries(cids, true)\n  }\n\n  /**\n   * Returns a list of all currently connected peers\n   */\n  connectedPeers () {\n    return Array.from(this.peers.keys())\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  connected (peerId) {\n    this._startPeerHandler(peerId)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  disconnected (peerId) {\n    this._stopPeerHandler(peerId)\n  }\n\n  start () {\n  }\n\n  stop () {\n    this.peers.forEach((mq) => this.disconnected(mq.peerId))\n  }\n}\n","import * as lp from 'it-length-prefixed'\nimport { pipe } from 'it-pipe'\nimport { createTopology } from '@libp2p/topology'\nimport { BitswapMessage as Message } from './message/index.js'\nimport * as CONSTANTS from './constants.js'\nimport { logger } from './utils/index.js'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { abortableSource } from 'abortable-iterator'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n * @typedef {import('@libp2p/interface-connection').Connection} Connection\n * @typedef {import('@libp2p/interface-connection').Stream} Stream\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n *\n * @typedef {object} Provider\n * @property {PeerId} id\n * @property {Multiaddr[]} multiaddrs\n *\n * @typedef {import('it-stream-types').Duplex<Uint8Array>} Duplex\n */\n\nconst BITSWAP100 = '/ipfs/bitswap/1.0.0'\nconst BITSWAP110 = '/ipfs/bitswap/1.1.0'\nconst BITSWAP120 = '/ipfs/bitswap/1.2.0'\n\nconst DEFAULT_MAX_INBOUND_STREAMS = 32\nconst DEFAULT_MAX_OUTBOUND_STREAMS = 128\nconst DEFAULT_INCOMING_STREAM_TIMEOUT = 30000\n\nexport class Network {\n  /**\n   * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n   * @param {import('./bitswap').Bitswap} bitswap\n   * @param {import('./stats').Stats} stats\n   * @param {object} [options]\n   * @param {boolean} [options.b100Only]\n   * @param {MultihashHasherLoader} [options.hashLoader]\n   * @param {number} [options.maxInboundStreams=32]\n   * @param {number} [options.maxOutboundStreams=32]\n   * @param {number} [options.incomingStreamTimeout=30000]\n   */\n  constructor (libp2p, bitswap, stats, options = {}) {\n    this._log = logger(libp2p.peerId, 'network')\n    this._libp2p = libp2p\n    this._bitswap = bitswap\n    this._protocols = [BITSWAP100]\n\n    if (!options.b100Only) {\n      // Latest bitswap first\n      this._protocols.unshift(BITSWAP110)\n      this._protocols.unshift(BITSWAP120)\n    }\n\n    this._stats = stats\n    this._running = false\n\n    // bind event listeners\n    this._onPeerConnect = this._onPeerConnect.bind(this)\n    this._onPeerDisconnect = this._onPeerDisconnect.bind(this)\n    this._onConnection = this._onConnection.bind(this)\n    this._hashLoader = options.hashLoader\n    this._maxInboundStreams = options.maxInboundStreams ?? DEFAULT_MAX_INBOUND_STREAMS\n    this._maxOutboundStreams = options.maxOutboundStreams ?? DEFAULT_MAX_OUTBOUND_STREAMS\n    this._incomingStreamTimeout = options.incomingStreamTimeout ?? DEFAULT_INCOMING_STREAM_TIMEOUT\n  }\n\n  async start () {\n    this._running = true\n    await this._libp2p.handle(this._protocols, this._onConnection, {\n      maxInboundStreams: this._maxInboundStreams,\n      maxOutboundStreams: this._maxOutboundStreams\n    })\n\n    // register protocol with topology\n    const topology = createTopology({\n      onConnect: this._onPeerConnect,\n      onDisconnect: this._onPeerDisconnect\n    })\n\n    /** @type {string[]} */\n    this._registrarIds = []\n\n    for (const protocol of this._protocols) {\n      this._registrarIds.push(await this._libp2p.register(protocol, topology))\n    }\n\n    // All existing connections are like new ones for us\n    this._libp2p.getConnections().forEach(conn => {\n      this._onPeerConnect(conn.remotePeer)\n    })\n  }\n\n  async stop () {\n    this._running = false\n\n    // Unhandle both, libp2p doesn't care if it's not already handled\n    await this._libp2p.unhandle(this._protocols)\n\n    // unregister protocol and handlers\n    if (this._registrarIds != null) {\n      for (const id of this._registrarIds) {\n        this._libp2p.unregister(id)\n      }\n\n      this._registrarIds = []\n    }\n  }\n\n  /**\n   * Handles both types of incoming bitswap messages\n   *\n   * @private\n   * @param {object} connection\n   * @param {Stream} connection.stream - A duplex iterable stream\n   * @param {Connection} connection.connection - A libp2p Connection\n   */\n  _onConnection ({ stream, connection }) {\n    if (!this._running) {\n      return\n    }\n\n    const controller = new TimeoutController(this._incomingStreamTimeout)\n\n    Promise.resolve().then(async () => {\n      this._log('incoming new bitswap %s connection from %p', stream.stat.protocol, connection.remotePeer)\n\n      await pipe(\n        abortableSource(stream.source, controller.signal),\n        lp.decode(),\n        async (source) => {\n          for await (const data of source) {\n            try {\n              const message = await Message.deserialize(data.subarray(), this._hashLoader)\n              await this._bitswap._receiveMessage(connection.remotePeer, message)\n            } catch (/** @type {any} */ err) {\n              this._bitswap._receiveError(err)\n              break\n            }\n\n            // we have received some data so reset the timeout controller\n            controller.reset()\n          }\n        }\n      )\n    })\n      .catch(err => {\n        this._log(err)\n        stream.abort(err)\n      })\n      .finally(() => {\n        controller.clear()\n        stream.close()\n      })\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _onPeerConnect (peerId) {\n    this._bitswap._onPeerConnected(peerId)\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _onPeerDisconnect (peerId) {\n    this._bitswap._onPeerDisconnected(peerId)\n  }\n\n  /**\n   * Find providers given a `cid`.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {AsyncIterable<Provider>}\n   */\n  findProviders (cid, options = {}) {\n    return this._libp2p.contentRouting.findProviders(cid, options)\n  }\n\n  /**\n   * Find the providers of a given `cid` and connect to them.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async findAndConnect (cid, options) {\n    const connectAttempts = []\n    let found = 0\n\n    for await (const provider of this.findProviders(cid, options)) {\n      this._log(`connecting to provider ${provider.id}`)\n      connectAttempts.push(\n        this.connectTo(provider.id, options)\n          .catch(err => {\n            // Prevent unhandled promise rejection\n            this._log.error(err)\n          })\n      )\n\n      found++\n\n      if (found === CONSTANTS.maxProvidersPerRequest) {\n        break\n      }\n    }\n\n    await Promise.all(connectAttempts)\n  }\n\n  /**\n   * Tell the network we can provide content for the passed CID\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async provide (cid, options) {\n    await this._libp2p.contentRouting.provide(cid, options)\n  }\n\n  /**\n   * Connect to the given peer\n   * Send the given msg (instance of Message) to the given peer\n   *\n   * @param {PeerId} peer\n   * @param {Message} msg\n   */\n  async sendMessage (peer, msg) {\n    if (!this._running) throw new Error('network isn\\'t running')\n\n    const stringId = peer.toString()\n    this._log('sendMessage to %s', stringId, msg)\n\n    const connection = await this._libp2p.dial(peer)\n    const stream = await connection.newStream([BITSWAP120, BITSWAP110, BITSWAP100])\n\n    await writeMessage(stream, msg, this._log)\n\n    this._updateSentStats(peer, msg.blocks)\n  }\n\n  /**\n   * Connects to another peer\n   *\n   * @param {PeerId|Multiaddr} peer\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Connection>}\n   */\n  async connectTo (peer, options) { // eslint-disable-line require-await\n    if (!this._running) {\n      throw new Error('network isn\\'t running')\n    }\n\n    return this._libp2p.dial(peer, options)\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peer\n   * @param {Map<string, Uint8Array>} blocks\n   */\n  _updateSentStats (peer, blocks) {\n    const peerId = peer.toString()\n\n    if (this._stats) {\n      for (const block of blocks.values()) {\n        this._stats.push(peerId, 'dataSent', block.length)\n      }\n\n      this._stats.push(peerId, 'blocksSent', blocks.size)\n    }\n  }\n}\n\n/**\n *\n * @param {Stream} stream\n * @param {Message} msg\n * @param {*} log\n */\nasync function writeMessage (stream, msg, log) {\n  try {\n    /** @type {Uint8Array} */\n    let serialized\n    switch (stream.stat.protocol) {\n      case BITSWAP100:\n        serialized = msg.serializeToBitswap100()\n        break\n      case BITSWAP110:\n      case BITSWAP120:\n        serialized = msg.serializeToBitswap110()\n        break\n      default:\n        throw new Error('Unknown protocol: ' + stream.stat.protocol)\n    }\n\n    await pipe(\n      [serialized],\n      lp.encode(),\n      stream\n    )\n  } catch (err) {\n    log(err)\n  } finally {\n    stream.close()\n  }\n}\n","import { Wantlist } from '../wantlist/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n","/**\n * @template Key, Value\n * SortedMap is a Map whose iterator order can be defined by the user\n * @extends {Map<Key, Value>}\n */\nexport class SortedMap extends Map {\n  /**\n   * @param {Array<[Key, Value]>} [entries]\n   * @param {(a:[Key, Value], b:[Key, Value]) => number} [cmp] - compares [k1, v1] to [k2, v2]\n   */\n  constructor (entries, cmp) {\n    super()\n    this._cmp = cmp || this._defaultSort\n    /** @type {Key[]} */\n    this._keys = []\n    for (const [k, v] of entries || []) {\n      this.set(k, v)\n    }\n  }\n\n  /**\n   * Call update to update the position of the key when it should change.\n   * For example if the compare function sorts by the priority field, and the\n   * priority changes, call update.\n   * Call indexOf() to get the index _before_ the change happens.\n   *\n   * @param {number} i - the index of entry whose position should be updated.\n   */\n  update (i) {\n    if (i < 0 || i >= this._keys.length) {\n      return\n    }\n\n    const k = this._keys[i]\n    this._keys.splice(i, 1)\n    const newIdx = this._find(k)\n    this._keys.splice(newIdx, 0, k)\n  }\n\n  /**\n   * @param {Key} k\n   * @param {Value} v\n   */\n  set (k, v) {\n    // If the key is already in the map, remove it from the ordering and\n    // re-insert it below\n    if (this.has(k)) {\n      const i = this.indexOf(k)\n      this._keys.splice(i, 1)\n    }\n\n    // Update / insert the k/v into the map\n    super.set(k, v)\n\n    // Find the correct position of the newly inserted k/v in the order\n    const i = this._find(k)\n    this._keys.splice(i, 0, k)\n\n    return this\n  }\n\n  clear () {\n    super.clear()\n    this._keys = []\n  }\n\n  /**\n   * @param {Key} k\n   */\n  delete (k) {\n    if (!this.has(k)) {\n      return false\n    }\n\n    const i = this.indexOf(k)\n    this._keys.splice(i, 1)\n    return super.delete(k)\n  }\n\n  /**\n   * @param {Key} k\n   */\n  indexOf (k) {\n    if (!this.has(k)) {\n      return -1\n    }\n\n    const i = this._find(k)\n    if (this._keys[i] === k) {\n      return i\n    }\n\n    // There may be more than one key with the same ordering\n    // eg { k1: <priority 5>, k2: <priority 5> }\n    // so scan outwards until the key matches\n    for (let j = 1; j < this._keys.length; j++) {\n      if (this._keys[i + j] === k) return i + j\n      if (this._keys[i - j] === k) return i - j\n    }\n\n    return -1 // should never happen for existing key\n  }\n\n  /**\n   * @private\n   * @param {Key} k\n   * @returns {number}\n   */\n\n  _find (k) {\n    let lower = 0\n    let upper = this._keys.length\n    while (lower < upper) {\n      const pivot = (lower + upper) >>> 1 // lower + (upper - lower) / 2\n      const cmp = this._kCmp(this._keys[pivot], k)\n      // console.log(`  _find ${lower}:${upper}[${pivot}] ${cmp}`)\n      if (cmp < 0) { // pivot < k\n        lower = pivot + 1\n      } else if (cmp > 0) { // pivot > k\n        upper = pivot\n      } else { // pivot == k\n        return pivot\n      }\n    }\n    return lower\n  }\n\n  * keys () {\n    for (const k of this._keys) {\n      yield k\n    }\n\n    return undefined\n  }\n\n  /**\n   * @returns {IterableIterator<Value>}\n   */\n  * values () {\n    for (const k of this._keys) {\n      // @ts-ignore - return of `this.get(k)` is `Value|undefined` which is\n      // incompatible with `Value`. Typechecker can't that this contains values\n      // for all the `_keys`. ts(2322)\n      yield this.get(k)\n    }\n\n    return undefined\n  }\n\n  /**\n   * @returns {IterableIterator<[Key, Value]>}\n   */\n  * entries () {\n    for (const k of this._keys) {\n      // @ts-ignore - return of `this.get(k)` is `Value|undefined` which is\n      // incompatible with `Value`. Typechecker can't that this contains values\n      // for all the `_keys`. ts(2322)\n      yield [k, this.get(k)]\n    }\n\n    return undefined\n  }\n\n  * [Symbol.iterator] () {\n    yield * this.entries()\n  }\n\n  /**\n   * @template This\n   * @param {(entry:[Key, Value]) => void} cb\n   * @param {This} [thisArg]\n   */\n  // @ts-expect-error - Callback in Map forEach is (V, K, Map<K, V>) => void\n  forEach (cb, thisArg) {\n    if (!cb) {\n      return\n    }\n\n    for (const k of this._keys) {\n      cb.apply(thisArg, [[k, /** @type {Value} */(this.get(k))]])\n    }\n  }\n\n  /**\n   * @private\n   * @param {[Key, Value]} a\n   * @param {[Key, Value]} b\n   * @returns {0|1|-1}\n   */\n  _defaultSort (a, b) {\n    if (a[0] < b[0]) return -1\n    if (b[0] < a[0]) return 1\n    return 0\n  }\n\n  /**\n   * @private\n   * @param {Key} a\n   * @param {Key} b\n   */\n  _kCmp (a, b) {\n    return this._cmp(\n      // @ts-ignore - get may return undefined\n      [a, this.get(a)],\n      // @ts-ignore - get may return undefined\n      [b, this.get(b)]\n    )\n  }\n}\n","import { SortedMap } from '../utils/sorted-map.js'\n\n/**\n * @typedef {object} PopTaskResult\n * @property {PeerId} [peerId]\n * @property {Task[]} tasks\n * @property {number} pendingSize\n *\n * @typedef {object} PendingTask\n * @property {number} created\n * @property {Task} task\n *\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./types').Task} Task\n * @typedef {import('./types').TaskMerger} TaskMerger\n */\n\n/**\n * The task merger that is used by default.\n * Assumes that new tasks do not add any information over existing tasks,\n * and doesn't try to merge.\n *\n * @type {TaskMerger}\n */\nconst DefaultTaskMerger = {\n  hasNewInfo () {\n    return false\n  },\n\n  merge () {}\n}\n\n/**\n * Queue of requests to be processed by the engine.\n * The requests from each peer are added to the peer's queue, sorted by\n * priority.\n * Tasks are popped in priority order from the best peer - see popTasks()\n * for more details.\n */\nexport class RequestQueue {\n  /**\n   * @param {TaskMerger} [taskMerger]\n   */\n  constructor (taskMerger = DefaultTaskMerger) {\n    this._taskMerger = taskMerger\n    /** @type {SortedMap<string, PeerTasks>} */\n    this._byPeer = new SortedMap([], PeerTasks.compare)\n  }\n\n  /**\n   * Push tasks onto the queue for the given peer\n   *\n   * @param {PeerId} peerId\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  pushTasks (peerId, tasks) {\n    let peerTasks = this._byPeer.get(peerId.toString())\n\n    if (!peerTasks) {\n      peerTasks = new PeerTasks(peerId, this._taskMerger)\n    }\n\n    peerTasks.pushTasks(tasks)\n    this._byPeer.set(peerId.toString(), peerTasks)\n  }\n\n  /**\n   * Choose the peer with the least active work (or if all have the same active\n   * work, the most pending tasks) and pop off the highest priority tasks until\n   * the total size is at least targetMinBytes.\n   * This puts the popped tasks into the \"active\" state, meaning they are\n   * actively being processed (and cannot be modified).\n   *\n   * @param {number} targetMinBytes - the minimum total size of tasks to pop\n   * @returns {PopTaskResult}\n   */\n  popTasks (targetMinBytes) {\n    // Get the queue of tasks for the best peer and pop off tasks up to\n    // targetMinBytes\n    const peerTasks = this._head()\n    if (peerTasks === undefined) {\n      return { tasks: [], pendingSize: 0 }\n    }\n\n    const { tasks, pendingSize } = peerTasks.popTasks(targetMinBytes)\n    if (tasks.length === 0) {\n      return { tasks, pendingSize }\n    }\n\n    const peerId = peerTasks.peerId\n    if (peerTasks.isIdle()) {\n      // If there are no more tasks for the peer, free up its memory\n      this._byPeer.delete(peerId.toString())\n    } else {\n      // If there are still tasks remaining, update the sort order of peerTasks\n      // (because it depends on the number of pending tasks)\n      this._byPeer.update(0)\n    }\n\n    return {\n      peerId, tasks, pendingSize\n    }\n  }\n\n  /**\n   * @private\n   * @returns {PeerTasks|undefined}\n   */\n  _head () {\n    // Shortcut\n    if (this._byPeer.size === 0) {\n      return undefined\n    }\n\n    // eslint-disable-next-line no-unreachable-loop\n    for (const [, v] of this._byPeer) {\n      return v\n    }\n\n    return undefined\n  }\n\n  /**\n   * Remove the task with the given topic for the given peer.\n   *\n   * @param {string} topic\n   * @param {PeerId} peerId\n   * @returns {void}\n   */\n  remove (topic, peerId) {\n    const peerTasks = this._byPeer.get(peerId.toString())\n    peerTasks && peerTasks.remove(topic)\n  }\n\n  /**\n   * Called when the tasks for the given peer complete.\n   *\n   * @param {PeerId} peerId\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  tasksDone (peerId, tasks) {\n    const peerTasks = this._byPeer.get(peerId.toString())\n    if (!peerTasks) {\n      return\n    }\n\n    const i = this._byPeer.indexOf(peerId.toString())\n    for (const task of tasks) {\n      peerTasks.taskDone(task)\n    }\n\n    // Marking the tasks as done takes them out of the \"active\" state, and the\n    // sort order depends on the size of the active tasks, so we need to update\n    // the order.\n    this._byPeer.update(i)\n  }\n}\n\n/**\n * Queue of tasks for a particular peer, sorted by priority.\n */\nclass PeerTasks {\n  /**\n   * @param {PeerId} peerId\n   * @param {TaskMerger} taskMerger\n   */\n  constructor (peerId, taskMerger) {\n    this.peerId = peerId\n    this._taskMerger = taskMerger\n    this._activeTotalSize = 0\n    this._pending = new PendingTasks()\n    this._active = new Set()\n  }\n\n  /**\n   * Push tasks onto the queue.\n   *\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  pushTasks (tasks) {\n    for (const t of tasks) {\n      this._pushTask(t)\n    }\n  }\n\n  /**\n   * @private\n   * @param {Task} task\n   * @returns {void}\n   */\n\n  _pushTask (task) {\n    // If the new task doesn't add any more information over what we\n    // already have in the active queue, then we can skip the new task\n    if (!this._taskHasMoreInfoThanActiveTasks(task)) {\n      return\n    }\n\n    // If there is already a non-active (pending) task with this topic\n    const existingTask = this._pending.get(task.topic)\n    if (existingTask) {\n      // If the new task has a higher priority than the old task,\n      if (task.priority > existingTask.priority) {\n        // Update the priority and the task's position in the queue\n        this._pending.updatePriority(task.topic, task.priority)\n      }\n\n      // Merge the information from the new task into the existing task\n      this._taskMerger.merge(task, existingTask)\n\n      // A task with the topic exists, so we don't need to add\n      // the new task to the queue\n      return\n    }\n\n    // Push the new task onto the queue\n    this._pending.add(task)\n  }\n\n  /**\n   * Indicates whether the new task adds any more information over tasks that are\n   * already in the active task queue\n   *\n   * @private\n   * @param {Task} task\n   * @returns {boolean}\n   */\n  _taskHasMoreInfoThanActiveTasks (task) {\n    const tasksWithTopic = []\n    for (const activeTask of this._active) {\n      if (activeTask.topic === task.topic) {\n        tasksWithTopic.push(activeTask)\n      }\n    }\n\n    // No tasks with that topic, so the new task adds information\n    if (tasksWithTopic.length === 0) {\n      return true\n    }\n\n    return this._taskMerger.hasNewInfo(task, tasksWithTopic)\n  }\n\n  /**\n   * Pop tasks off the queue such that the total size is at least targetMinBytes\n   *\n   * @param {number} targetMinBytes\n   * @returns {PopTaskResult}\n   */\n  popTasks (targetMinBytes) {\n    let size = 0\n    const tasks = []\n\n    // Keep popping tasks until we get up to targetMinBytes (or one item over\n    // targetMinBytes)\n    const pendingTasks = this._pending.tasks()\n    for (let i = 0; i < pendingTasks.length && size < targetMinBytes; i++) {\n      const task = pendingTasks[i]\n      tasks.push(task)\n      size += task.size\n\n      // Move tasks from pending to active\n      this._pending.delete(task.topic)\n      this._activeTotalSize += task.size\n      this._active.add(task)\n    }\n\n    return {\n      tasks, pendingSize: this._pending.totalSize\n    }\n  }\n\n  /**\n   * Called when a task completes.\n   * Note: must be the same reference as returned from popTasks.\n   *\n   * @param {Task} task\n   * @returns {void}\n   */\n  taskDone (task) {\n    if (this._active.has(task)) {\n      this._activeTotalSize -= task.size\n      this._active.delete(task)\n    }\n  }\n\n  /**\n   * Remove pending tasks with the given topic\n   *\n   * @param {string} topic\n   * @returns {void}\n   */\n  remove (topic) {\n    this._pending.delete(topic)\n  }\n\n  /**\n   * No work to be done, this PeerTasks object can be freed.\n   *\n   * @returns {boolean}\n   */\n  isIdle () {\n    return this._pending.length === 0 && this._active.size === 0\n  }\n\n  /**\n   * Compare PeerTasks\n   *\n   * @template Key\n   * @param {[Key, PeerTasks]} a\n   * @param {[Key, PeerTasks]} b\n   * @returns {number}\n   */\n  static compare (a, b) {\n    // Move peers with no pending tasks to the back of the queue\n    if (a[1]._pending.length === 0) {\n      return 1\n    }\n    if (b[1]._pending.length === 0) {\n      return -1\n    }\n\n    // If the amount of active work is the same\n    if (a[1]._activeTotalSize === b[1]._activeTotalSize) {\n      // Choose the peer with the most pending work\n      return b[1]._pending.length - a[1]._pending.length\n    }\n\n    // Choose the peer with the least amount of active work (\"keep peers busy\")\n    return a[1]._activeTotalSize - b[1]._activeTotalSize\n  }\n}\n\n/**\n * Queue of pending tasks for a particular peer, sorted by priority.\n */\nclass PendingTasks {\n  constructor () {\n    /** @type {SortedMap<string, PendingTask>} */\n    this._tasks = new SortedMap([], this._compare)\n  }\n\n  get length () {\n    return this._tasks.size\n  }\n\n  /**\n   * Sum of the size of all pending tasks\n   *\n   * @type {number}\n   **/\n  get totalSize () {\n    return [...this._tasks.values()].reduce((a, t) => a + t.task.size, 0)\n  }\n\n  /**\n   * @param {string} topic\n   * @returns {Task|void}\n   */\n  get (topic) {\n    return (this._tasks.get(topic) || {}).task\n  }\n\n  /**\n   * @param {Task} task\n   */\n  add (task) {\n    this._tasks.set(task.topic, {\n      created: Date.now(),\n      task\n    })\n  }\n\n  /**\n   * @param {string} topic\n   * @returns {void}\n   */\n  delete (topic) {\n    this._tasks.delete(topic)\n  }\n\n  // All pending tasks, in priority order\n  tasks () {\n    return [...this._tasks.values()].map(i => i.task)\n  }\n\n  /**\n   * Update the priority of the task with the given topic, and update the order\n   *\n   * @param {string} topic\n   * @param {number} priority\n   * @returns {void}\n   **/\n  updatePriority (topic, priority) {\n    const obj = this._tasks.get(topic)\n    if (!obj) {\n      return\n    }\n\n    const i = this._tasks.indexOf(topic)\n    obj.task.priority = priority\n    this._tasks.update(i)\n  }\n\n  /**\n   * Sort by priority desc then FIFO\n   *\n   * @param {[string, PendingTask]} a\n   * @param {[string, PendingTask]} b\n   * @returns {number}\n   * @private\n   */\n  _compare (a, b) {\n    if (a[1].task.priority === b[1].task.priority) {\n      // FIFO\n      return a[1].created - b[1].created\n    }\n    // Priority high -> low\n    return b[1].task.priority - a[1].task.priority\n  }\n}\n","/**\n * @typedef {import('./types').Task} Task\n * @typedef {import('./types').TaskMerger} TaskMergerAPI\n */\n\n/** @type {TaskMergerAPI} */\nexport const TaskMerger = {\n  /**\n   * Indicates whether the given task has newer information than the active\n   * tasks with the same topic.\n   *\n   * @param {Task} task\n   * @param {Task[]} tasksWithTopic\n   * @returns {boolean}\n   */\n  hasNewInfo (task, tasksWithTopic) {\n    let haveBlock = false\n    let isWantBlock = false\n    for (const existing of tasksWithTopic) {\n      if (existing.data.haveBlock) {\n        haveBlock = true\n      }\n\n      if (existing.data.isWantBlock) {\n        isWantBlock = true\n      }\n    }\n\n    // If there is no active want-block and the new task is a want-block,\n    // the new task is better\n    if (!isWantBlock && task.data.isWantBlock) {\n      return true\n    }\n\n    // If we didn't have the block, and the new task indicates that we now\n    // do have the block, then we must also have size information for the\n    // block, so the new task has new information.\n    if (!haveBlock && task.data.haveBlock) {\n      return true\n    }\n\n    return false\n  },\n\n  /**\n   * Merge the information from the given task into the existing task (with the\n   * same topic)\n   *\n   * @param {Task} newTask\n   * @param {Task} existingTask\n   */\n  merge (newTask, existingTask) {\n    // The merge function ignores the topic and priority as these don't change.\n    //\n    // We may receive new information about a want before the want has been\n    // popped from the queue in the following scenarios:\n    //\n    // - Replace want type:\n    //   1. Client sends want-have CID1\n    //   2. Client sends want-block CID1\n    //   In this case we should replace want-have with want-block, including\n    //   updating the task size to be the block size.\n    //\n    // - Replace DONT_HAVE with want:\n    //   1. Client sends want-have CID1 or want-block CID1\n    //   2. Local node doesn't have block for CID1\n    //   3. Local node receives block for CID1 from peer\n    //   In this case we should replace DONT_HAVE with the want, including\n    //   updating the task size and block size.\n    const taskData = newTask.data\n    const existingData = existingTask.data\n\n    // If we didn't have block size information (because we didn't have the\n    // block) and we receive the block from a peer, update the task with the\n    // new block size\n    if (!existingData.haveBlock && taskData.haveBlock) {\n      existingData.haveBlock = taskData.haveBlock\n      existingData.blockSize = taskData.blockSize\n    }\n\n    // If replacing a want-have with a want-block\n    if (!existingData.isWantBlock && taskData.isWantBlock) {\n      // Change the type from want-have to want-block\n      existingData.isWantBlock = true\n      // If the want-have was a DONT_HAVE, or the want-block has a size\n      if (!existingData.haveBlock || taskData.haveBlock) {\n        // Update the entry size\n        existingData.haveBlock = taskData.haveBlock\n        existingTask.size = newTask.size\n      }\n    }\n\n    // If the task is a want-block, make sure the entry size is equal\n    // to the block size (because we will send the whole block)\n    if (existingData.isWantBlock && existingData.haveBlock) {\n      existingTask.size = existingData.blockSize\n    }\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { Wantlist } from '../wantlist/index.js'\nimport { Ledger } from './ledger.js'\nimport { RequestQueue } from './req-queue.js'\nimport { TaskMerger } from './task-merger.js'\nimport { logger } from '../utils/index.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('../message/entry').BitswapMessageEntry} BitswapMessageEntry\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nconst WantType = Message.WantType\n\n// The ideal size of the batched payload. We try to pop this much data off the\n// request queue, but\n// - if there isn't any more data in the queue we send whatever we have\n// - if there are several small items in the queue (eg HAVE response) followed\n//   by one big item (eg a block) that would exceed this target size, we\n//   include the big item in the message\nconst TARGET_MESSAGE_SIZE = 16 * 1024\n\n// If the client sends a want-have, and the engine has the corresponding block,\n// we check the size of the block and if it's small enough we send the block\n// itself, rather than sending a HAVE.\n// This constant defines the maximum size up to which we replace a HAVE with\n// a block.\nconst MAX_SIZE_REPLACE_HAS_WITH_BLOCK = 1024\n\nexport class DecisionEngine {\n  /**\n   * @param {PeerId} peerId\n   * @param {import('interface-blockstore').Blockstore} blockstore\n   * @param {import('../network').Network} network\n   * @param {import('../stats').Stats} stats\n   * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n   * @param {object} [opts]\n   * @param {number} [opts.targetMessageSize]\n   * @param {number} [opts.maxSizeReplaceHasWithBlock]\n   */\n  constructor (peerId, blockstore, network, stats, libp2p, opts = {}) {\n    this._log = logger(peerId, 'engine')\n    this.blockstore = blockstore\n    this.network = network\n    this._stats = stats\n    this._opts = this._processOpts(opts)\n\n    // A list of of ledgers by their partner id\n    /** @type {Map<string, Ledger>} */\n    this.ledgerMap = trackedMap({\n      name: 'ipfs_bitswap_ledger_map',\n      metrics: libp2p.metrics\n    })\n    this._running = false\n\n    // Queue of want-have / want-block per peer\n    this._requestQueue = new RequestQueue(TaskMerger)\n  }\n\n  /**\n   * @template {object} Opts\n   * @param {Opts} opts\n   * @returns {Opts & {maxSizeReplaceHasWithBlock:number, targetMessageSize:number}}\n   * @private\n   */\n  _processOpts (opts) {\n    return {\n      maxSizeReplaceHasWithBlock: MAX_SIZE_REPLACE_HAS_WITH_BLOCK,\n      targetMessageSize: TARGET_MESSAGE_SIZE,\n      ...opts\n    }\n  }\n\n  _scheduleProcessTasks () {\n    setTimeout(() => {\n      this._processTasks()\n    })\n  }\n\n  /**\n   * Pull tasks off the request queue and send a message to the corresponding\n   * peer\n   */\n  async _processTasks () {\n    if (!this._running) {\n      return\n    }\n\n    const { peerId, tasks, pendingSize } = this._requestQueue.popTasks(this._opts.targetMessageSize)\n\n    if (tasks.length === 0) {\n      return\n    }\n\n    // Create a new message\n    const msg = new Message(false)\n\n    // Amount of data in the request queue still waiting to be popped\n    msg.setPendingBytes(pendingSize)\n\n    // Split out want-blocks, want-haves and DONT_HAVEs\n    const blockCids = []\n    const blockTasks = new Map()\n    for (const task of tasks) {\n      const cid = CID.parse(task.topic)\n      if (task.data.haveBlock) {\n        if (task.data.isWantBlock) {\n          blockCids.push(cid)\n          blockTasks.set(task.topic, task.data)\n        } else {\n          // Add HAVES to the message\n          msg.addHave(cid)\n        }\n      } else {\n        // Add DONT_HAVEs to the message\n        msg.addDontHave(cid)\n      }\n    }\n\n    const blocks = await this._getBlocks(blockCids)\n    for (const [topic, taskData] of blockTasks) {\n      const cid = CID.parse(topic)\n      const blk = blocks.get(topic)\n      // If the block was found (it has not been removed)\n      if (blk) {\n        // Add the block to the message\n        msg.addBlock(cid, blk)\n      } else {\n        // The block was not found. If the client requested DONT_HAVE,\n        // add DONT_HAVE to the message.\n        if (taskData.sendDontHave) {\n          msg.addDontHave(cid)\n        }\n      }\n    }\n\n    // If there's nothing in the message, bail out\n    if (msg.empty) {\n      peerId && this._requestQueue.tasksDone(peerId, tasks)\n\n      // Trigger the next round of task processing\n      this._scheduleProcessTasks()\n\n      return\n    }\n\n    try {\n      // Send the message\n      peerId && await this.network.sendMessage(peerId, msg)\n\n      // Peform sent message accounting\n      for (const [cidStr, block] of blocks.entries()) {\n        peerId && this.messageSent(peerId, CID.parse(cidStr), block)\n      }\n    } catch (err) {\n      this._log.error(err)\n    }\n\n    // Free the tasks up from the request queue\n    peerId && this._requestQueue.tasksDone(peerId, tasks)\n\n    // Trigger the next round of task processing\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {Map<string, import('../wantlist/entry').WantListEntry>}\n   */\n  wantlistForPeer (peerId) {\n    const peerIdStr = peerId.toString()\n    const ledger = this.ledgerMap.get(peerIdStr)\n    return ledger ? ledger.wantlist.sortedEntries() : new Map()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  ledgerForPeer (peerId) {\n    const peerIdStr = peerId.toString()\n\n    const ledger = this.ledgerMap.get(peerIdStr)\n\n    if (!ledger) {\n      return null\n    }\n\n    return {\n      peer: ledger.partner,\n      value: ledger.debtRatio(),\n      sent: ledger.accounting.bytesSent,\n      recv: ledger.accounting.bytesRecv,\n      exchanged: ledger.exchangeCount\n    }\n  }\n\n  /**\n   * @returns {PeerId[]}\n   */\n  peers () {\n    return Array.from(this.ledgerMap.values()).map((l) => l.partner)\n  }\n\n  /**\n   * Receive blocks either from an incoming message from the network, or from\n   * blocks being added by the client on the localhost (eg IPFS add)\n   *\n   * @param {{ cid: CID, data: Uint8Array }[]} blocks\n   */\n  receivedBlocks (blocks) {\n    if (!blocks.length) {\n      return\n    }\n\n    // For each connected peer, check if it wants the block we received\n    for (const ledger of this.ledgerMap.values()) {\n      for (const block of blocks) {\n        // Filter out blocks that we don't want\n        const want = ledger.wantlistContains(block.cid)\n\n        if (!want) {\n          continue\n        }\n\n        // If the block is small enough, just send the block, even if the\n        // client asked for a HAVE\n        const blockSize = block.data.length\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize)\n\n        let entrySize = blockSize\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid)\n        }\n\n        this._requestQueue.pushTasks(ledger.partner, [{\n          topic: want.cid.toString(base58btc),\n          priority: want.priority,\n          size: entrySize,\n          data: {\n            blockSize,\n            isWantBlock,\n            haveBlock: true,\n            sendDontHave: false\n          }\n        }])\n      }\n    }\n\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * Handle incoming messages\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   * @returns {Promise<void>}\n   */\n  async messageReceived (peerId, msg) {\n    const ledger = this._findOrCreate(peerId)\n\n    if (msg.empty) {\n      return\n    }\n\n    // If the message has a full wantlist, clear the current wantlist\n    if (msg.full) {\n      ledger.wantlist = new Wantlist()\n    }\n\n    // Record the amount of block data received\n    this._updateBlockAccounting(msg.blocks, ledger)\n\n    if (msg.wantlist.size === 0) {\n      this._scheduleProcessTasks()\n      return\n    }\n\n    // Clear cancelled wants and add new wants to the ledger\n    /** @type {CID[]} */\n    const cancels = []\n    /** @type {BitswapMessageEntry[]} */\n    const wants = []\n    msg.wantlist.forEach((entry) => {\n      if (entry.cancel) {\n        ledger.cancelWant(entry.cid)\n        cancels.push(entry.cid)\n      } else {\n        ledger.wants(entry.cid, entry.priority, entry.wantType)\n        wants.push(entry)\n      }\n    })\n\n    this._cancelWants(peerId, cancels)\n    await this._addWants(peerId, wants)\n\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {CID[]} cids\n   * @returns {void}\n   */\n  _cancelWants (peerId, cids) {\n    for (const c of cids) {\n      this._requestQueue.remove(c.toString(base58btc), peerId)\n    }\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {BitswapMessageEntry[]} wants\n   * @returns {Promise<void>}\n   */\n  async _addWants (peerId, wants) {\n    // Get the size of each wanted block\n    const blockSizes = await this._getBlockSizes(wants.map(w => w.cid))\n\n    const tasks = []\n    for (const want of wants) {\n      const id = want.cid.toString(base58btc)\n      const blockSize = blockSizes.get(id)\n\n      // If the block was not found\n      if (blockSize == null) {\n        // Only add the task to the queue if the requester wants a DONT_HAVE\n        if (want.sendDontHave) {\n          tasks.push({\n            topic: id,\n            priority: want.priority,\n            size: Message.blockPresenceSize(want.cid),\n            data: {\n              isWantBlock: want.wantType === WantType.Block,\n              blockSize: 0,\n              haveBlock: false,\n              sendDontHave: want.sendDontHave\n            }\n          })\n        }\n      } else {\n        // The block was found, add it to the queue\n\n        // If the block is small enough, just send the block, even if the\n        // client asked for a HAVE\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize)\n\n        // entrySize is the amount of space the entry takes up in the\n        // message we send to the recipient. If we're sending a block, the\n        // entrySize is the size of the block. Otherwise it's the size of\n        // a block presence entry.\n        let entrySize = blockSize\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid)\n        }\n\n        tasks.push({\n          topic: id,\n          priority: want.priority,\n          size: entrySize,\n          data: {\n            isWantBlock,\n            blockSize,\n            haveBlock: true,\n            sendDontHave: want.sendDontHave\n          }\n        })\n      }\n\n      this._requestQueue.pushTasks(peerId, tasks)\n    }\n  }\n\n  /**\n   * @private\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @param {number} blockSize\n   */\n  _sendAsBlock (wantType, blockSize) {\n    return wantType === WantType.Block ||\n      blockSize <= this._opts.maxSizeReplaceHasWithBlock\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @returns {Promise<Map<string, number>>}\n   */\n  async _getBlockSizes (cids) {\n    const blocks = await this._getBlocks(cids)\n    return new Map([...blocks].map(([k, v]) => [k, v.length]))\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @returns {Promise<Map<string, Uint8Array>>}\n   */\n  async _getBlocks (cids) {\n    const res = new Map()\n    await Promise.all(cids.map(async (cid) => {\n      try {\n        const block = await this.blockstore.get(cid)\n        res.set(cid.toString(base58btc), block)\n      } catch (/** @type {any} */ e) {\n        if (e.code !== 'ERR_NOT_FOUND') {\n          this._log.error('failed to query blockstore for %s: %s', cid, e)\n        }\n      }\n    }))\n    return res\n  }\n\n  /**\n   * @private\n   * @param {Map<string, Uint8Array>} blocksMap\n   * @param {Ledger} ledger\n   */\n  _updateBlockAccounting (blocksMap, ledger) {\n    for (const block of blocksMap.values()) {\n      this._log('got block (%s bytes)', block.length)\n      ledger.receivedBytes(block.length)\n    }\n  }\n\n  /**\n   * Clear up all accounting things after message was sent\n   *\n   * @param {PeerId} peerId\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   */\n  messageSent (peerId, cid, block) {\n    const ledger = this._findOrCreate(peerId)\n    ledger.sentBytes(block.length)\n    ledger.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {number}\n   */\n  numBytesSentTo (peerId) {\n    return this._findOrCreate(peerId).accounting.bytesSent\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {number}\n   */\n\n  numBytesReceivedFrom (peerId) {\n    return this._findOrCreate(peerId).accounting.bytesRecv\n  }\n\n  /**\n   *\n   * @param {PeerId} peerId\n   */\n  peerDisconnected (peerId) {\n    this.ledgerMap.delete(peerId.toString())\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @returns {Ledger}\n   */\n  _findOrCreate (peerId) {\n    const peerIdStr = peerId.toString()\n    const ledger = this.ledgerMap.get(peerIdStr)\n    if (ledger) {\n      return ledger\n    }\n\n    const l = new Ledger(peerId)\n\n    this.ledgerMap.set(peerIdStr, l)\n    if (this._stats) {\n      this._stats.push(peerIdStr, 'peerCount', 1)\n    }\n\n    return l\n  }\n\n  start () {\n    this._running = true\n  }\n\n  stop () {\n    this._running = false\n  }\n}\n","import { EventEmitter } from 'events'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport * as CONSTANTS from './constants.js'\nimport { logger } from './utils/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @param {CID} cid\n */\nconst unwantEvent = (cid) => `unwant:${uint8ArrayToString(cid.multihash.bytes, 'base64')}`\n\n/**\n * @param {CID} cid\n */\nconst blockEvent = (cid) => `block:${uint8ArrayToString(cid.multihash.bytes, 'base64')}`\n\nexport class Notifications extends EventEmitter {\n  /**\n   * Internal module used to track events about incoming blocks,\n   * wants and unwants.\n   *\n   * @param {PeerId} peerId\n   */\n  constructor (peerId) {\n    super()\n\n    this.setMaxListeners(CONSTANTS.maxListeners)\n\n    this._log = logger(peerId, 'notif')\n  }\n\n  /**\n   * Signal the system that we received `block`.\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @returns {void}\n   */\n  hasBlock (cid, block) {\n    const event = blockEvent(cid)\n    this._log(event)\n    this.emit(event, block)\n  }\n\n  /**\n   * Signal the system that we are waiting to receive the\n   * block associated with the given `cid`.\n   * Returns a Promise that resolves to the block when it is received,\n   * or undefined when the block is unwanted.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Uint8Array>}\n   */\n  wantBlock (cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid')\n    }\n\n    const blockEvt = blockEvent(cid)\n    const unwantEvt = unwantEvent(cid)\n\n    this._log(`wantBlock:${cid}`)\n\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock)\n\n        reject(new Error(`Block for ${cid} unwanted`))\n      }\n\n      /**\n       * @param {Uint8Array} data\n       */\n      const onBlock = (data) => {\n        this.removeListener(unwantEvt, onUnwant)\n\n        resolve(data)\n      }\n\n      this.once(unwantEvt, onUnwant)\n      this.once(blockEvt, onBlock)\n\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock)\n          this.removeListener(unwantEvt, onUnwant)\n\n          reject(new Error(`Want for ${cid} aborted`))\n        })\n      }\n    })\n  }\n\n  /**\n   * Signal that the block is not wanted anymore.\n   *\n   * @param {CID} cid - the CID of the block that is not wanted anymore.\n   * @returns {void}\n   */\n  unwantBlock (cid) {\n    const event = unwantEvent(cid)\n    this._log(event)\n    this.emit(event)\n  }\n}\n","import { EventEmitter } from 'events'\nimport MovingAverage from '@vascosantos/moving-average'\n\n/**\n * @typedef {import('@vascosantos/moving-average').IMovingAverage} IMovingAverage\n * @typedef {[string, number, number]} Op\n */\n\nexport class Stat extends EventEmitter {\n  /**\n   *\n   * @param {string[]} initialCounters\n   * @param {object} options\n   * @param {boolean} options.enabled\n   * @param {number} options.computeThrottleTimeout\n   * @param {number} options.computeThrottleMaxQueueSize\n   * @param {import('.').AverageIntervals} options.movingAverageIntervals\n   */\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    /** @type {Op[]} */\n    this._queue = []\n    /** @type {Record<string, bigint>} */\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    /** @type {Record<string, number>} */\n    this._frequencyAccumulators = {}\n\n    /** @type {Record<string, Record<number, IMovingAverage>>} */\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    initialCounters.forEach((key) => {\n      this._stats[key] = BigInt(0)\n      this._movingAverages[key] = {}\n      this._options.movingAverageIntervals.forEach((interval) => {\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      })\n    })\n\n    this._enabled = this._options.enabled\n  }\n\n  enable () {\n    this._enabled = true\n  }\n\n  disable () {\n    this._disabled = true\n  }\n\n  stop () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n  }\n\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  /**\n   * @param {string} counter\n   * @param {number} inc\n   */\n  push (counter, inc) {\n    if (this._enabled) {\n      this._queue.push([counter, inc, Date.now()])\n      this._resetComputeTimeout()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n    this._timeout = setTimeout(this._update, this._nextTimeout())\n  }\n\n  /**\n   * @private\n   * @returns {number}\n   */\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    return Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n  }\n\n  /**\n   * @private\n   */\n  _update () {\n    this._timeout = null\n\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        op && this._applyOp(op)\n      }\n\n      last && this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} latestTime\n   */\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    if (timeDiff) {\n      Object.keys(this._stats).forEach((key) => {\n        this._updateFrequencyFor(key, timeDiff, latestTime)\n      })\n    }\n\n    this._frequencyLastTime = latestTime\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {number} timeDiffMS\n   * @param {number} latestTime\n   * @returns {void}\n   */\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    const hz = (count / timeDiffMS) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n    this._options.movingAverageIntervals.forEach((movingAverageInterval) => {\n      let movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    })\n  }\n\n  /**\n   * @private\n   * @param {Op} op\n   */\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error(`invalid increment number: ${inc}`)\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      this._stats[key] = BigInt(0)\n    }\n\n    this._stats[key] = BigInt(this._stats[key]) + BigInt(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n","import { EventEmitter } from 'events'\nimport { Stat } from './stat.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @typedef {[number, number, number]} AverageIntervals\n */\nconst defaultOptions = {\n  enabled: false,\n  computeThrottleTimeout: 1000,\n  computeThrottleMaxQueueSize: 1000,\n  movingAverageIntervals: /** @type {AverageIntervals} */ ([\n    60 * 1000, // 1 minute\n    5 * 60 * 1000, // 5 minutes\n    15 * 60 * 1000 // 15 minutes\n  ])\n}\n\nexport class Stats extends EventEmitter {\n  /**\n   * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n   * @param {string[]} [initialCounters]\n   * @param {object} _options\n   * @param {boolean} _options.enabled\n   * @param {number} _options.computeThrottleTimeout\n   * @param {number} _options.computeThrottleMaxQueueSize\n   */\n  constructor (libp2p, initialCounters = [], _options = defaultOptions) {\n    super()\n\n    const options = Object.assign({}, defaultOptions, _options)\n\n    if (typeof options.computeThrottleTimeout !== 'number') {\n      throw new Error('need computeThrottleTimeout')\n    }\n\n    if (typeof options.computeThrottleMaxQueueSize !== 'number') {\n      throw new Error('need computeThrottleMaxQueueSize')\n    }\n\n    this._initialCounters = initialCounters\n    this._options = options\n    this._enabled = this._options.enabled\n\n    this._global = new Stat(initialCounters, options)\n    this._global.on('update', (stats) => this.emit('update', stats))\n\n    /** @type {Map<string, Stat>} */\n    this._peers = trackedMap({\n      name: 'ipfs_bitswap_stats_peers',\n      metrics: libp2p.metrics\n    })\n  }\n\n  enable () {\n    this._enabled = true\n    this._options.enabled = true\n    this._global.enable()\n  }\n\n  disable () {\n    this._enabled = false\n    this._options.enabled = false\n    this._global.disable()\n  }\n\n  stop () {\n    this._enabled = false\n    this._global.stop()\n    for (const peerStat of this._peers) {\n      peerStat[1].stop()\n    }\n  }\n\n  get snapshot () {\n    return this._global.snapshot\n  }\n\n  get movingAverages () {\n    return this._global.movingAverages\n  }\n\n  /**\n   * @param {PeerId|string} peerId\n   * @returns {Stat|undefined}\n   */\n  forPeer (peerId) {\n    const peerIdStr = (typeof peerId !== 'string' && peerId.toString)\n      ? peerId.toString()\n      : `${peerId}`\n\n    return this._peers.get(peerIdStr)\n  }\n\n  /**\n   *\n   * @param {string|null} peer\n   * @param {string} counter\n   * @param {number} inc\n   */\n  push (peer, counter, inc) {\n    if (this._enabled) {\n      this._global.push(counter, inc)\n\n      if (peer) {\n        let peerStats = this._peers.get(peer)\n        if (!peerStats) {\n          peerStats = new Stat(this._initialCounters, this._options)\n          this._peers.set(peer, peerStats)\n        }\n\n        peerStats.push(counter, inc)\n      }\n    }\n  }\n\n  /**\n   * @param {PeerId} peer\n   */\n  disconnected (peer) {\n    const peerId = peer.toString()\n    const peerStats = this._peers.get(peerId)\n    if (peerStats) {\n      peerStats.stop()\n      this._peers.delete(peerId)\n    }\n  }\n}\n","import { WantManager } from './want-manager/index.js'\nimport { Network } from './network.js'\nimport { DecisionEngine } from './decision-engine/index.js'\nimport { Notifications } from './notifications.js'\nimport { logger } from './utils/index.js'\nimport { Stats } from './stats/index.js'\nimport { anySignal } from 'any-signal'\nimport { BaseBlockstore } from 'blockstore-core/base'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./types').IPFSBitswap} IPFSBitswap\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n * @typedef {import('./message').BitswapMessage} BitswapMessage\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n */\n\nconst defaultOptions = {\n  statsEnabled: false,\n  statsComputeThrottleTimeout: 1000,\n  statsComputeThrottleMaxQueueSize: 1000\n}\nconst statsKeys = [\n  'blocksReceived',\n  'dataReceived',\n  'dupBlksReceived',\n  'dupDataReceived',\n  'blocksSent',\n  'dataSent',\n  'providesBufferLength',\n  'wantListLength',\n  'peerCount'\n]\n\n/**\n * JavaScript implementation of the Bitswap 'data exchange' protocol\n * used by IPFS.\n *\n * @implements {IPFSBitswap}\n */\nexport class Bitswap extends BaseBlockstore {\n  /**\n   * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n   * @param {Blockstore} blockstore\n   * @param {object} [options]\n   * @param {boolean} [options.statsEnabled=false]\n   * @param {number} [options.statsComputeThrottleTimeout=1000]\n   * @param {number} [options.statsComputeThrottleMaxQueueSize=1000]\n   * @param {number} [options.maxInboundStreams=32]\n   * @param {number} [options.maxOutboundStreams=32]\n   * @param {number} [options.incomingStreamTimeout=30000]\n   * @param {MultihashHasherLoader} [options.hashLoader]\n   */\n  constructor (libp2p, blockstore, options = {}) {\n    super()\n\n    this._libp2p = libp2p\n    this._log = logger(this.peerId)\n\n    this._options = Object.assign({}, defaultOptions, options)\n\n    // stats\n    this._stats = new Stats(libp2p, statsKeys, {\n      enabled: this._options.statsEnabled,\n      computeThrottleTimeout: this._options.statsComputeThrottleTimeout,\n      computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize\n    })\n\n    // the network delivers messages\n    this.network = new Network(libp2p, this, this._stats, {\n      hashLoader: options.hashLoader,\n      maxInboundStreams: options.maxInboundStreams,\n      maxOutboundStreams: options.maxOutboundStreams,\n      incomingStreamTimeout: options.incomingStreamTimeout\n    })\n\n    // local database\n    this.blockstore = blockstore\n\n    this.engine = new DecisionEngine(this.peerId, blockstore, this.network, this._stats, libp2p)\n\n    // handle message sending\n    this.wm = new WantManager(this.peerId, this.network, this._stats, libp2p)\n\n    this.notifications = new Notifications(this.peerId)\n\n    this.started = false\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  /**\n   * @type {PeerId}\n   */\n  get peerId () {\n    return this._libp2p.peerId\n  }\n\n  /**\n   * handle messages received through the network\n   *\n   * @param {PeerId} peerId\n   * @param {BitswapMessage} incoming\n   */\n  async _receiveMessage (peerId, incoming) {\n    try {\n      // Note: this allows the engine to respond to any wants in the message.\n      // Processing of the blocks in the message happens below, after the\n      // blocks have been added to the blockstore.\n      await this.engine.messageReceived(peerId, incoming)\n    } catch (err) {\n      // Log instead of throwing an error so as to process as much as\n      // possible of the message. Currently `messageReceived` does not\n      // throw any errors, but this could change in the future.\n      this._log('failed to receive message', incoming)\n    }\n\n    if (incoming.blocks.size === 0) {\n      return\n    }\n\n    /** @type { { cid: CID, wasWanted: boolean, data: Uint8Array }[] } */\n    const received = []\n\n    for (const [cidStr, data] of incoming.blocks.entries()) {\n      const cid = CID.parse(cidStr)\n\n      received.push({\n        wasWanted: this.wm.wantlist.contains(cid),\n        cid,\n        data\n      })\n    }\n\n    // quickly send out cancels, reduces chances of duplicate block receives\n    this.wm.cancelWants(\n      received\n        .filter(({ wasWanted }) => wasWanted)\n        .map(({ cid }) => cid)\n    )\n\n    await Promise.all(\n      received.map(\n        ({ cid, wasWanted, data }) => this._handleReceivedBlock(peerId, cid, data, wasWanted)\n      )\n    )\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   * @param {boolean} wasWanted\n   */\n  async _handleReceivedBlock (peerId, cid, data, wasWanted) {\n    this._log('received block')\n\n    const has = await this.blockstore.has(cid)\n\n    this._updateReceiveCounters(peerId.toString(), cid, data, has)\n\n    if (!wasWanted) {\n      return\n    }\n\n    await this.put(cid, data)\n  }\n\n  /**\n   * @private\n   * @param {string} peerIdStr\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   * @param {boolean} exists\n   */\n  _updateReceiveCounters (peerIdStr, cid, data, exists) {\n    this._stats.push(peerIdStr, 'blocksReceived', 1)\n    this._stats.push(peerIdStr, 'dataReceived', data.length)\n\n    if (exists) {\n      this._stats.push(peerIdStr, 'dupBlksReceived', 1)\n      this._stats.push(peerIdStr, 'dupDataReceived', data.length)\n    }\n  }\n\n  /**\n   * handle errors on the receiving channel\n   *\n   * @param {Error} err\n   */\n  _receiveError (err) {\n    this._log.error('ReceiveError: %s', err.message)\n  }\n\n  /**\n   * handle new peers\n   *\n   * @param {PeerId} peerId\n   */\n  _onPeerConnected (peerId) {\n    this.wm.connected(peerId)\n  }\n\n  /**\n   * handle peers being disconnected\n   *\n   * @param {PeerId} peerId\n   */\n  _onPeerDisconnected (peerId) {\n    this.wm.disconnected(peerId)\n    this.engine.peerDisconnected(peerId)\n    this._stats.disconnected(peerId)\n  }\n\n  enableStats () {\n    this._stats.enable()\n  }\n\n  disableStats () {\n    this._stats.disable()\n  }\n\n  /**\n   * Return the current wantlist for a given `peerId`\n   *\n   * @param {PeerId} peerId\n   * @param {any} [_options]\n   */\n  wantlistForPeer (peerId, _options) {\n    return this.engine.wantlistForPeer(peerId)\n  }\n\n  /**\n   * Return ledger information for a given `peerId`\n   *\n   * @param {PeerId} peerId\n   */\n  ledgerForPeer (peerId) {\n    return this.engine.ledgerForPeer(peerId)\n  }\n\n  /**\n   * Fetch a given block by cid. If the block is in the local\n   * blockstore it is returned, otherwise the block is added to the wantlist and returned once another node sends it to us.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async get (cid, options = {}) {\n    /**\n     * @param {CID} cid\n     * @param {object} options\n     * @param {AbortSignal} options.signal\n     */\n    const fetchFromNetwork = (cid, options) => {\n      // add it to the want list - n.b. later we will abort the AbortSignal\n      // so no need to remove the blocks from the wantlist after we have it\n      this.wm.wantBlocks([cid], options)\n\n      return this.notifications.wantBlock(cid, options)\n    }\n\n    let promptedNetwork = false\n\n    /**\n     *\n     * @param {CID} cid\n     * @param {object} options\n     * @param {AbortSignal} options.signal\n     */\n    const loadOrFetchFromNetwork = async (cid, options) => {\n      try {\n        // have to await here as we want to handle ERR_NOT_FOUND\n        const block = await this.blockstore.get(cid, options)\n\n        return block\n      } catch (/** @type {any} */ err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n\n        if (!promptedNetwork) {\n          promptedNetwork = true\n\n          this.network.findAndConnect(cid, options)\n            .catch((err) => this._log.error(err))\n        }\n\n        // we don't have the block locally so fetch it from the network\n        return fetchFromNetwork(cid, options)\n      }\n    }\n\n    // depending on implementation it's possible for blocks to come in while\n    // we do the async operations to get them from the blockstore leading to\n    // a race condition, so register for incoming block notifications as well\n    // as trying to get it from the datastore\n    const controller = new AbortController()\n    const signal = options.signal\n      ? anySignal([options.signal, controller.signal])\n      : controller.signal\n\n    try {\n      const block = await Promise.race([\n        this.notifications.wantBlock(cid, {\n          signal\n        }),\n        loadOrFetchFromNetwork(cid, {\n          signal\n        })\n      ])\n\n      return block\n    } finally {\n      // since we have the block we can now remove our listener\n      controller.abort()\n    }\n  }\n\n  /**\n   * Fetch a a list of blocks by cid. If the blocks are in the local\n   * blockstore they are returned, otherwise the blocks are added to the wantlist and returned once another node sends them to us.\n   *\n   * @param {AsyncIterable<CID>|Iterable<CID>} cids\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async * getMany (cids, options = {}) {\n    for await (const cid of cids) {\n      yield this.get(cid, options)\n    }\n  }\n\n  /**\n   * Removes the given CIDs from the wantlist independent of any ref counts.\n   *\n   * This will cause all outstanding promises for a given block to reject.\n   *\n   * If you want to cancel the want for a block without doing that, pass an\n   * AbortSignal in to `.get` or `.getMany` and abort it.\n   *\n   * @param {CID[]|CID} cids\n   */\n  unwant (cids) {\n    const cidsArray = Array.isArray(cids) ? cids : [cids]\n\n    this.wm.unwantBlocks(cidsArray)\n    cidsArray.forEach((cid) => this.notifications.unwantBlock(cid))\n  }\n\n  /**\n   * Removes the given keys from the want list. This may cause pending promises\n   * for blocks to never resolve.  If you wish these promises to abort instead\n   * call `unwant(cids)` instead.\n   *\n   * @param {CID[]|CID} cids\n   */\n  cancelWants (cids) {\n    this.wm.cancelWants(Array.isArray(cids) ? cids : [cids])\n  }\n\n  /**\n   * Put the given block to the underlying blockstore and\n   * send it to nodes that have it in their wantlist.\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @param {any} [_options]\n   */\n  async put (cid, block, _options) {\n    await this.blockstore.put(cid, block)\n    this._sendHaveBlockNotifications(cid, block)\n  }\n\n  /**\n   * Put the given blocks to the underlying blockstore and\n   * send it to nodes that have it them their wantlist.\n   *\n   * @param {Iterable<Pair> | AsyncIterable<Pair>} source\n   * @param {Options} [options]\n   */\n  async * putMany (source, options) {\n    for await (const { key, value } of this.blockstore.putMany(source, options)) {\n      this._sendHaveBlockNotifications(key, value)\n\n      yield { key, value }\n    }\n  }\n\n  /**\n   * Sends notifications about the arrival of a block\n   *\n   * @private\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   */\n  _sendHaveBlockNotifications (cid, data) {\n    this.notifications.hasBlock(cid, data)\n    this.engine.receivedBlocks([{ cid, data }])\n    // Note: Don't wait for provide to finish before returning\n    this.network.provide(cid).catch((err) => {\n      this._log.error('Failed to provide: %s', err.message)\n    })\n  }\n\n  /**\n   * Get the current list of wants\n   */\n  getWantlist () {\n    return this.wm.wantlist.entries()\n  }\n\n  /**\n   * Get the current list of partners\n   */\n  peers () {\n    return this.engine.peers()\n  }\n\n  /**\n   * Get stats about the bitswap node\n   */\n  stat () {\n    return this._stats\n  }\n\n  /**\n   * Start the bitswap node\n   */\n  async start () {\n    this.wm.start()\n    await this.network.start()\n    this.engine.start()\n    this.started = true\n  }\n\n  /**\n   * Stop the bitswap node\n   */\n  async stop () {\n    this._stats.stop()\n    this.wm.stop()\n    await this.network.stop()\n    this.engine.stop()\n    this.started = false\n  }\n\n  unwrap () {\n    return this.blockstore\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {Promise<boolean>}\n   */\n  has (cid) {\n    return this.blockstore.has(cid)\n  }\n}\n","import { BaseBlockstore } from 'blockstore-core'\nimport merge from 'it-merge'\nimport { pushable } from 'it-pushable'\nimport filter from 'it-filter'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-bitswap').IPFSBitswap} Bitswap\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/block').RmOptions} RmOptions\n */\n\n/**\n * BlockStorage is a hybrid block datastore. It stores data in a local\n * datastore and may retrieve data from a remote Exchange.\n * It uses an internal `datastore.Datastore` instance to store values.\n *\n * @implements {Blockstore}\n */\nexport class BlockStorage extends BaseBlockstore {\n  /**\n   * Create a new BlockStorage\n   *\n   * @param {Blockstore} blockstore\n   * @param {Bitswap} bitswap\n   */\n  constructor (blockstore, bitswap) {\n    super()\n\n    this.child = blockstore\n    this.bitswap = bitswap\n  }\n\n  open () {\n    return this.child.open()\n  }\n\n  close () {\n    return this.child.close()\n  }\n\n  unwrap () {\n    return this.child\n  }\n\n  /**\n   * Put a block to the underlying datastore\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @param {AbortOptions} [options]\n   */\n  async put (cid, block, options = {}) {\n    if (await this.has(cid)) {\n      return\n    }\n\n    if (this.bitswap.isStarted()) {\n      await this.bitswap.put(cid, block, options)\n    } else {\n      await this.child.put(cid, block, options)\n    }\n  }\n\n  /**\n   * Put a multiple blocks to the underlying datastore\n   *\n   * @param {AsyncIterable<{ key: CID, value: Uint8Array }> | Iterable<{ key: CID, value: Uint8Array }>} blocks\n   * @param {AbortOptions} [options]\n   */\n  async * putMany (blocks, options = {}) {\n    const missingBlocks = filter(blocks, async ({ key }) => { return !(await this.has(key)) })\n\n    if (this.bitswap.isStarted()) {\n      yield * this.bitswap.putMany(missingBlocks, options)\n    } else {\n      yield * this.child.putMany(missingBlocks, options)\n    }\n  }\n\n  /**\n   * Get a block by cid\n   *\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  async get (cid, options = {}) {\n    if (!(await this.has(cid)) && this.bitswap.isStarted()) {\n      return this.bitswap.get(cid, options)\n    } else {\n      return this.child.get(cid, options)\n    }\n  }\n\n  /**\n   * Get multiple blocks back from an array of cids\n   *\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {AbortOptions} [options]\n   */\n  async * getMany (cids, options = {}) {\n    const getFromBitswap = pushable({ objectMode: true })\n    const getFromChild = pushable({ objectMode: true })\n\n    Promise.resolve().then(async () => {\n      for await (const cid of cids) {\n        if (!(await this.has(cid)) && this.bitswap.isStarted()) {\n          getFromBitswap.push(cid)\n        } else {\n          getFromChild.push(cid)\n        }\n      }\n\n      getFromBitswap.end()\n      getFromChild.end()\n    })\n\n    yield * merge(\n      this.bitswap.getMany(getFromBitswap, options),\n      this.child.getMany(getFromChild, options)\n    )\n  }\n\n  /**\n   * Delete a block from the blockstore\n   *\n   * @param {CID} cid\n   * @param {RmOptions} [options]\n   */\n  async delete (cid, options) {\n    await this.child.delete(cid, options)\n  }\n\n  /**\n   * Delete multiple blocks from the blockstore\n   *\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {RmOptions} [options]\n   */\n  async * deleteMany (cids, options) {\n    yield * this.child.deleteMany(cids, options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} options\n   */\n  async has (cid, options = {}) {\n    return this.child.has(cid, options)\n  }\n\n  /**\n   * @param {Query} q\n   * @param {AbortOptions} options\n   */\n  async * query (q, options = {}) {\n    yield * this.child.query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {AbortOptions} options\n   */\n  async * queryKeys (q, options = {}) {\n    yield * this.child.queryKeys(q, options)\n  }\n}\n","import { createBitswap } from 'ipfs-bitswap'\nimport { createLibp2p } from './libp2p.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport errCode from 'err-code'\nimport { BlockStorage } from '../block-storage.js'\n\n/**\n * @typedef {object} Online\n * @property {libp2p} libp2p\n * @property {Bitswap} bitswap\n *\n * @typedef {object} Options\n * @property {PeerId} options.peerId\n * @property {Repo} options.repo\n * @property {Print} options.print\n * @property {IPFSOptions} options.options\n * @property {import('ipfs-core-utils/multihashes').Multihashes} options.hashers\n *\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('ipfs-repo').IPFSRepo} Repo\n * @typedef {import('../types').Print} Print\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('ipfs-bitswap').IPFSBitswap} Bitswap\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\nexport class Network {\n  /**\n   * @param {PeerId} peerId\n   * @param {libp2p} libp2p\n   * @param {Bitswap} bitswap\n   * @param {Repo} repo\n   * @param {BlockStorage} blockstore\n   */\n  constructor (peerId, libp2p, bitswap, repo, blockstore) {\n    this.peerId = peerId\n    this.libp2p = libp2p\n    this.bitswap = bitswap\n    this.repo = repo\n    this.blockstore = blockstore\n  }\n\n  /**\n   * @param {Options} options\n   */\n  static async start ({ peerId, repo, print, hashers, options }) {\n    // Need to ensure that repo is open as it could have been closed between\n    // `init` and `start`.\n    if (repo.closed) {\n      await repo.open()\n    }\n\n    /** @type {IPFSConfig} */\n    const config = await repo.config.getAll()\n\n    const libp2p = await createLibp2p({\n      options,\n      repo,\n      peerId,\n      multiaddrs: readAddrs(peerId, config),\n      config,\n      keychainConfig: undefined\n    })\n\n    await libp2p.start()\n\n    for (const ma of libp2p.getMultiaddrs()) {\n      print(`Swarm listening on ${ma.toString()}`)\n    }\n\n    const bitswap = createBitswap(libp2p, repo.blocks, {\n      statsEnabled: true,\n      hashLoader: hashers,\n      maxInboundStreams: 1024,\n      maxOutboundStreams: 1024\n    })\n    await bitswap.start()\n\n    const blockstore = new BlockStorage(repo.blocks, bitswap)\n    repo.blocks = blockstore\n    // @ts-expect-error private field\n    repo.pins.blockstore = blockstore\n\n    return new Network(peerId, libp2p, bitswap, repo, blockstore)\n  }\n\n  /**\n   * @param {Network} network\n   */\n  static async stop (network) {\n    network.repo.blocks = network.blockstore.unwrap()\n    // @ts-expect-error private field\n    network.repo.pins.blockstore = network.blockstore.unwrap()\n\n    await network.bitswap.stop()\n    await network.libp2p.stop()\n  }\n}\n\n/**\n * @param {PeerId} peerId\n * @param {IPFSConfig} config\n */\nconst readAddrs = (peerId, config) => {\n  const peerIdStr = peerId.toString()\n  /** @type {Multiaddr[]} */\n  const addrs = []\n  const swarm = (config.Addresses && config.Addresses.Swarm) || []\n  for (const addr of swarm) {\n    let ma = multiaddr(addr)\n\n    // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n    // websocket-star support was removed from ipfs and libp2p\n    if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n      throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED')\n    }\n\n    // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n    // webrtc-star) can have the intermediary's peer ID in the address, so append our\n    // peer ID to the end of it\n    const maId = ma.getPeerId()\n    if (maId && maId !== peerIdStr) {\n      ma = ma.encapsulate(`/p2p/${peerIdStr}`)\n    }\n\n    addrs.push(ma)\n  }\n\n  return addrs\n}\n\nconst WEBSOCKET_STAR_PROTO_CODE = 479\n","import { Bitswap } from './bitswap.js'\n\n/**\n * @typedef {import('./types').IPFSBitswap} IPFSBitswap\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./message')} BitswapMessage\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n */\n\n/**\n * @param {import('@libp2p/interface-libp2p').Libp2p} libp2p\n * @param {Blockstore} blockstore\n * @param {object} [options]\n * @param {boolean} [options.statsEnabled=false]\n * @param {number} [options.statsComputeThrottleTimeout=1000]\n * @param {number} [options.statsComputeThrottleMaxQueueSize=1000]\n * @param {number} [options.maxInboundStreams=32]\n * @param {number} [options.maxOutboundStreams=128]\n * @param {number} [options.incomingStreamTimeout=30000]\n * @param {MultihashHasherLoader} [options.hashLoader]\n * @returns {IPFSBitswap}\n */\nexport const createBitswap = (libp2p, blockstore, options = {}) => {\n  return new Bitswap(libp2p, blockstore, options)\n}\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\nexport class SwarmAPI {\n  /**\n   * @param {object} config\n   * @param {import('../../types').NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.addrs = createAddrs({ network })\n    this.connect = createConnect({ network })\n    this.disconnect = createDisconnect({ network })\n    this.localAddrs = createLocalAddrs({ network })\n    this.peers = createPeers({ network })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/swarm').AddrsResult} AddrsResult\n */\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createAddrs ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"addrs\"]}\n   */\n  async function addrs (options = {}) { // eslint-disable-line require-await\n    /** @type {AddrsResult[]} */\n    const peers = []\n    const { libp2p } = await network.use(options)\n\n    await libp2p.peerStore.forEach(peer => {\n      peers.push({\n        id: peer.id,\n        addrs: peer.addresses.map((mi) => mi.multiaddr)\n      })\n    })\n\n    return peers\n  }\n\n  return withTimeoutOption(addrs)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createConnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"connect\"]}\n   */\n  async function connect (multiaddrOrPeerId, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.dial(multiaddrOrPeerId, options)\n  }\n\n  return withTimeoutOption(connect)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createDisconnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.hangUp(addr)\n  }\n\n  return withTimeoutOption(disconnect)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createLocalAddrs ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const { libp2p } = await network.use(options)\n    return libp2p.getMultiaddrs()\n  }\n\n  return withTimeoutOption(localAddrs)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/swarm').PeersResult} PeersResult\n */\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createPeers ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    if (options.verbose) {\n      const peers = []\n      for (const connection of libp2p.getConnections()) {\n        /** @type {PeersResult} */\n        const peer = {\n          addr: connection.remoteAddr,\n          peer: connection.remotePeer\n        }\n\n        if (options.verbose || options.direction) {\n          peer.direction = connection.stat.direction\n        }\n\n        if (options.verbose) {\n          peer.muxer = connection.stat.multiplexer\n          peer.latency = 'n/a'\n          peer.streams = [] // TODO: get this from libp2p\n        }\n\n        peers.push(peer)\n      }\n\n      return peers\n    }\n\n    /** @type {Map<string, PeersResult>} */\n    const peers = new Map()\n\n    for (const connection of libp2p.getConnections()) {\n      /** @type {import('ipfs-core-types/src/swarm').PeersResult} */\n      const peer = {\n        addr: connection.remoteAddr,\n        peer: connection.remotePeer\n      }\n\n      peers.set(connection.remotePeer.toString(), peer)\n    }\n\n    return Array.from(peers.values())\n  }\n\n  return withTimeoutOption(peers)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {Pong|PingFailure|StatusUpdate} Packet\n * Note that not all ping response objects are \"pongs\".\n * A \"pong\" message can be identified by a truthy success property and an empty\n * text property. Other ping responses are failures or status updates.\n *\n * @typedef {object} Pong\n * @property {true} success\n * @property {number} time\n * @property {''} text\n *\n * @typedef {object} PingFailure\n * @property {false} success\n * @property {number} time\n * @property {string} text\n *\n * @typedef {object} StatusUpdate\n * @property {true} success\n * @property {0} time\n * @property {string} text\n *\n * @typedef {PingSettings & AbortOptions} PingOptions\n *\n * @typedef {object} PingSettings\n * @property {number} [count=10] - The number of ping messages to send\n *\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/** @type {{success:true, time:0, text: ''}} */\nconst basePacket = { success: true, time: 0, text: '' }\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n */\nexport function createPing ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const { libp2p } = await network.use()\n    options.count = options.count || 10\n\n    const storedPeer = await libp2p.peerStore.get(peerId)\n    let id = storedPeer && storedPeer.id\n\n    if (!id) {\n      yield { ...basePacket, text: `Looking up peer ${peerId}` }\n      const remotePeer = await libp2p.peerRouting.findPeer(peerId)\n\n      id = remotePeer && remotePeer.id\n    }\n\n    if (!id) {\n      throw new Error('Peer was not found')\n    }\n\n    yield { ...basePacket, text: `PING ${id.toString()}` }\n\n    let packetCount = 0\n    let totalTime = 0\n\n    for (let i = 0; i < options.count; i++) {\n      try {\n        const time = await libp2p.ping(id)\n        totalTime += time\n        packetCount++\n        yield { ...basePacket, time }\n      } catch (/** @type {any} */ err) {\n        yield { ...basePacket, success: false, text: err.toString() }\n      }\n    }\n\n    if (packetCount) {\n      const average = totalTime / packetCount\n      yield { ...basePacket, text: `Average latency: ${average}ms` }\n    }\n  }\n\n  return withTimeoutOption(ping)\n}\n","import errCode from 'err-code'\nimport { NotEnabledError } from '../errors.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { base36 } from 'multiformats/bases/base36'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-dht').QueryEvent} QueryEvent\n * @typedef {import('./network').Network} Network\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nconst IPNS_PREFIX = '/ipns/'\n\n/**\n * @param {string} str\n */\nfunction toDHTKey (str) {\n  if (str.startsWith(IPNS_PREFIX)) {\n    str = str.substring(IPNS_PREFIX.length)\n  }\n\n  /** @type {Uint8Array|undefined} */\n  let buf\n\n  if (str[0] === '1' || str[0] === 'Q') {\n    // ed25519 key or hash of rsa key\n    str = `z${str}`\n  }\n\n  if (str[0] === 'z') {\n    buf = base58btc.decode(str)\n  }\n\n  if (str[0] === 'k') {\n    // base36 encoded string\n    buf = base36.decode(str)\n  }\n\n  if (!buf) {\n    throw new Error('Could not parse string')\n  }\n\n  if (buf[0] !== 0x01 && buf[1] !== 0x72) {\n    // prefix key with CIDv1 and libp2p-key codec\n    buf = uint8ArrayConcat([\n      [0x01, 0x72],\n      buf\n    ])\n  }\n\n  if (buf.length !== 40) {\n    throw new Error('Incorrect length ' + buf.length)\n  }\n\n  return uint8ArrayConcat([\n    uint8ArrayFromString(IPNS_PREFIX),\n    buf.subarray(2)\n  ])\n}\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {PeerId} config.peerId\n */\nexport function createDht ({ network, repo, peerId }) {\n  const { get, put, findProvs, findPeer, provide, query } = {\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"get\"]}\n     */\n    async * get (key, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.get(dhtKey, options)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"put\"]}\n     */\n    async * put (key, value, options) {\n      const { libp2p } = await use(network, peerId, options)\n\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.put(dhtKey, value, options)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"findProvs\"]}\n     */\n    async * findProvs (cid, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.findProviders(cid, {\n        signal: options.signal\n      })\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"findPeer\"]}\n     */\n    async * findPeer (peerIdToFind, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.findPeer(peerIdToFind, {\n        signal: options.signal\n      })\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"provide\"]}\n     */\n    async * provide (cid, options = { recursive: false }) {\n      const { libp2p } = await use(network, peerId, options)\n\n      // ensure blocks are actually local\n      const hasBlock = await repo.blocks.has(cid)\n\n      if (!hasBlock) {\n        throw errCode(new Error('block(s) not found locally, cannot provide'), 'ERR_BLOCK_NOT_FOUND')\n      }\n\n      if (options.recursive) {\n        // TODO: Implement recursive providing\n        throw errCode(new Error('not implemented yet'), 'ERR_NOT_IMPLEMENTED_YET')\n      }\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.provide(cid)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"query\"]}\n     */\n    async * query (peerIdToQuery, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n      let bytes\n      const asCid = CID.asCID(peerIdToQuery)\n\n      if (asCid != null) {\n        bytes = asCid.multihash.bytes\n      } else {\n        bytes = peerIdFromString(peerIdToQuery.toString()).toBytes()\n      }\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.getClosestPeers(bytes, options)\n    }\n  }\n\n  return {\n    get: withTimeoutOption(get),\n    put: withTimeoutOption(put),\n    findProvs: withTimeoutOption(findProvs),\n    findPeer: withTimeoutOption(findPeer),\n    provide: withTimeoutOption(provide),\n    query: withTimeoutOption(query)\n  }\n}\n\n/**\n * @param {import('../types').NetworkService} network\n * @param {PeerId} peerId\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n * @returns {Promise<Network>}\n */\nconst use = async (network, peerId, options) => {\n  const net = await network.use(options)\n  if (net.libp2p.dht != null) {\n    return net\n  } else {\n    const fn = async function * () {\n      yield {\n        from: peerId,\n        name: 'QUERY_ERROR',\n        type: 3,\n        error: new NotEnabledError('dht not enabled')\n      }\n    }\n\n    return {\n      libp2p: {\n        dht: {\n          // @ts-expect-error incomplete implementation\n          get: fn,\n          // @ts-expect-error incomplete implementation\n          put: fn,\n          // @ts-expect-error incomplete implementation\n          findProviders: fn,\n          // @ts-expect-error incomplete implementation\n          findPeer: fn,\n          // @ts-expect-error incomplete implementation\n          provide: fn,\n          // @ts-expect-error incomplete implementation\n          getClosestPeers: fn\n        }\n      }\n    }\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport errCode from 'err-code'\nimport { NotEnabledError } from '../errors.js'\nimport get from 'dlv'\n\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<CustomEvent<Message>>} EventHandler\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageEventHandler\n */\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('ipfs-core-types/src/config').Config} [config.config]\n */\nexport function createPubsub ({ network, config }) {\n  const isEnabled = get(config || {}, 'Pubsub.Enabled', true)\n\n  /** @type {Record<string, MessageEventHandler[]>} */\n  const handlers = {}\n  /** @type {EventHandler | undefined} */\n  let onMessage\n\n  return {\n    subscribe: isEnabled ? withTimeoutOption(subscribe) : notEnabled,\n    unsubscribe: isEnabled ? withTimeoutOption(unsubscribe) : notEnabled,\n    publish: isEnabled ? withTimeoutOption(publish) : notEnabled,\n    ls: isEnabled ? withTimeoutOption(ls) : notEnabled,\n    peers: isEnabled ? withTimeoutOption(peers) : notEnabled\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"subscribe\"]}\n   */\n  async function subscribe (topic, handler, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    libp2p.pubsub.subscribe(topic)\n\n    // listen for 'message' events if we aren't already\n    if (onMessage == null) {\n      onMessage = (evt) => {\n        const msg = evt.detail\n\n        if (handlers[msg.topic]) {\n          handlers[msg.topic].forEach(handler => {\n            if (typeof handler === 'function') {\n              handler(msg)\n              return\n            }\n\n            if (handler != null && handler.handleEvent != null) {\n              handler.handleEvent(msg)\n            }\n          })\n        }\n      }\n\n      libp2p.pubsub.addEventListener('message', onMessage)\n    }\n\n    // store handler for future invocation\n    if (handler != null) {\n      if (handlers[topic] == null) {\n        handlers[topic] = []\n      }\n\n      handlers[topic].push(handler)\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    // remove handler from local map\n    if (handler != null && handlers[topic] != null) {\n      handlers[topic] = handlers[topic].filter(h => h !== handler)\n\n      if (handlers[topic].length === 0) {\n        delete handlers[topic]\n      }\n    }\n\n    // remove all handlers\n    if (typeof handler !== 'function') {\n      delete handlers[topic]\n    }\n\n    // no more handlers for this topic, unsubscribe\n    if (handlers[topic] == null) {\n      libp2p.pubsub.unsubscribe(topic)\n    }\n\n    // no more pubsub handlers, remove message listener\n    if (Object.keys(handlers).length === 0) {\n      libp2p.pubsub.removeEventListener('message', onMessage)\n      onMessage = undefined\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const { libp2p } = await network.use(options)\n    if (!data) {\n      throw errCode(new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED')\n    }\n\n    await libp2p.pubsub.publish(topic, data)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    return libp2p.pubsub.getTopics()\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    return libp2p.pubsub.getSubscribers(topic)\n  }\n}\n\nconst notEnabled = async () => { // eslint-disable-line require-await\n  throw new NotEnabledError('pubsub not enabled')\n}\n","import mergeOpts from 'merge-options'\nimport { isTest } from 'ipfs-utils/src/env.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { initAssets } from 'ipfs-core-config/init-assets'\nimport { AlreadyInitializedError } from '../errors.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { createStart } from './start.js'\n\nimport { createStop } from './stop.js'\nimport { createDns } from './dns.js'\nimport { createIsOnline } from './is-online.js'\nimport { createResolve } from './resolve.js'\nimport { PinAPI } from './pin/index.js'\nimport { IPNSAPI } from './ipns.js'\nimport { NameAPI } from './name/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createLocal } from './refs/local.js'\nimport { BitswapAPI } from './bitswap/index.js'\nimport { BootstrapAPI } from './bootstrap/index.js'\nimport { BlockAPI } from './block/index.js'\nimport { RootAPI } from './root.js'\nimport { createVersion } from './version.js'\nimport { createId } from './id.js'\nimport { createConfig } from './config/index.js'\nimport { DagAPI } from './dag/index.js'\nimport { createPreloader } from '../preload.js'\nimport { createMfsPreloader } from '../mfs-preload.js'\nimport { createFiles } from './files/index.js'\nimport { KeyAPI } from './key/index.js'\nimport { ObjectAPI } from './object/index.js'\nimport { RepoAPI } from './repo/index.js'\nimport { StatsAPI } from './stats/index.js'\nimport { Storage } from './storage.js'\nimport { Network } from './network.js'\nimport { Service } from '../utils/service.js'\nimport { SwarmAPI } from './swarm/index.js'\nimport { createPing } from './ping.js'\nimport { createDht } from './dht.js'\nimport { createPubsub } from './pubsub.js'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport { Multibases } from 'ipfs-core-utils/multibases'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs')\n\nconst IPNS_INIT_KEYSPACE_TIMEOUT = 30000\n\n/**\n * @typedef {import('../types').Options} Options\n * @typedef {import('../types').Print} Print\n * @typedef {import('./storage')} StorageAPI\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */\n\nclass IPFS {\n  /**\n   * @param {object} config\n   * @param {Print} config.print\n   * @param {Storage} config.storage\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Options} config.options\n   */\n  constructor ({ print, storage, codecs, options }) {\n    const { peerId, repo, keychain } = storage\n    const network = Service.create(Network)\n\n    const preload = createPreloader(options.preload)\n\n    const dns = createDns()\n    const isOnline = createIsOnline({ network })\n    // @ts-expect-error This type check fails as options.\n    // libp2p can be a function, while IPNS router config expects libp2p config\n    const ipns = new IPNSAPI(options)\n\n    /** @type {MultihashHasher[]} */\n    const multihashHashers = Object.values(hashes);\n\n    (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n    this.hashers = new Multihashes({\n      hashers: multihashHashers,\n      loadHasher: options.ipld && options.ipld.loadHasher\n    })\n\n    /** @type {MultibaseCodec[]} */\n    const multibaseCodecs = Object.values(bases);\n\n    (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n    this.bases = new Multibases({\n      bases: multibaseCodecs,\n      loadBase: options.ipld && options.ipld.loadBase\n    })\n\n    const pin = new PinAPI({ repo, codecs })\n    const block = new BlockAPI({ codecs, hashers: this.hashers, preload, repo })\n\n    const name = new NameAPI({\n      dns,\n      ipns,\n      repo,\n      codecs,\n      peerId,\n      isOnline,\n      keychain,\n      options\n    })\n\n    const resolve = createResolve({ repo, codecs, bases: this.bases, name })\n\n    const dag = new DagAPI({ repo, codecs, hashers: this.hashers, preload })\n    const refs = Object.assign(createRefs({ repo, codecs, resolve, preload }), {\n      local: createLocal({ repo: storage.repo })\n    })\n    const { add, addAll, cat, get, ls } = new RootAPI({\n      preload,\n      repo,\n      options: options.EXPERIMENTAL,\n      hashers: this.hashers\n    })\n\n    const files = createFiles({\n      repo,\n      preload,\n      hashers: this.hashers,\n      options\n    })\n\n    const mfsPreload = createMfsPreloader({\n      files,\n      preload,\n      options: options.preload\n    })\n\n    this.preload = preload\n    this.name = name\n    this.ipns = ipns\n    this.pin = pin\n    this.resolve = resolve\n    this.block = block\n    this.refs = refs\n\n    this.start = createStart({\n      network,\n      peerId,\n      repo,\n      preload,\n      ipns,\n      mfsPreload,\n      print,\n      keychain,\n      hashers: this.hashers,\n      options\n    })\n\n    this.stop = createStop({\n      network,\n      preload,\n      mfsPreload,\n      ipns,\n      repo\n    })\n\n    this.dht = createDht({ network, repo, peerId })\n    this.pubsub = createPubsub({ network, config: options.config })\n    this.dns = dns\n    this.isOnline = isOnline\n    this.id = createId({ network, peerId })\n    this.version = createVersion({ repo })\n    this.bitswap = new BitswapAPI({ network })\n    this.bootstrap = new BootstrapAPI({ repo })\n    this.config = createConfig({ repo })\n    this.ping = createPing({ network })\n\n    this.add = add\n    this.addAll = addAll\n    this.cat = cat\n    this.get = get\n    this.ls = ls\n\n    this.dag = dag\n    this.files = files\n    this.key = new KeyAPI({ keychain })\n    this.object = new ObjectAPI({ preload, codecs, repo })\n    this.repo = new RepoAPI({ repo, hashers: this.hashers })\n    this.stats = new StatsAPI({ repo, network })\n    this.swarm = new SwarmAPI({ network })\n\n    // For the backwards compatibility\n    Object.defineProperty(this, 'libp2p', {\n      get () {\n        const net = network.try()\n        return net ? net.libp2p : undefined\n      }\n    })\n\n    // unimplemented methods\n    const notImplemented = () => Promise.reject(errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED'))\n    const notImplementedIter = async function * () { throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED') } // eslint-disable-line require-yield\n    this.commands = notImplemented\n    this.diag = {\n      cmds: notImplemented,\n      net: notImplemented,\n      sys: notImplemented\n    }\n    this.log = {\n      level: notImplemented,\n      ls: notImplemented,\n      tail: notImplementedIter\n    }\n    this.mount = notImplemented\n\n    this.codecs = codecs\n  }\n\n  /**\n   * `IPFS.create` will do the initialization. Keep this around for backwards\n   * compatibility.\n   *\n   * @deprecated\n   */\n  async init () { // eslint-disable-line require-await\n    throw new AlreadyInitializedError()\n  }\n}\n\n/**\n * @param {IPFS} ipfs\n */\nconst addEmptyDir = async (ipfs) => {\n  const buf = dagPB.encode({\n    Data: new UnixFS({ type: 'directory' }).marshal(),\n    Links: []\n  })\n\n  const cid = await ipfs.block.put(buf, {\n    mhtype: 'sha2-256',\n    format: 'dag-pb'\n  })\n\n  await ipfs.pin.add(cid)\n\n  return cid\n}\n\n/**\n * @returns {Options}\n */\nconst getDefaultOptions = () => ({\n  start: true,\n  EXPERIMENTAL: {},\n  preload: {\n    enabled: !isTest, // preload by default, unless in test env\n    addresses: [\n      '/dns4/node0.preload.ipfs.io/https',\n      '/dns4/node1.preload.ipfs.io/https',\n      '/dns4/node2.preload.ipfs.io/https',\n      '/dns4/node3.preload.ipfs.io/https'\n    ]\n  }\n})\n\n/**\n * @param {Options} options\n */\nexport async function create (options = {}) {\n  options = mergeOptions(getDefaultOptions(), options)\n  const initOptions = options.init || {}\n\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  // eslint-disable-next-line no-console\n  const print = options.silent ? log : console.log\n\n  log('creating repo')\n  const storage = await Storage.start(print, multicodecs, options)\n\n  log('getting repo config')\n  const config = await storage.repo.config.getAll()\n\n  const ipfs = new IPFS({\n    storage,\n    print,\n    codecs: multicodecs,\n    options: { ...options, config }\n  })\n\n  log('starting preload')\n  await ipfs.preload.start()\n\n  log('starting storage')\n  ipfs.ipns.startOffline(storage)\n\n  if (storage.isNew && !initOptions.emptyRepo) {\n    // add empty unixfs dir object (go-ipfs assumes this exists)\n    const cid = await addEmptyDir(ipfs)\n\n    log('adding default assets')\n    await initAssets({ addAll: ipfs.addAll, print })\n\n    log('initializing IPNS keyspace')\n\n    if (storage.peerId.publicKey == null) {\n      throw errCode(new Error('Public key missing'), 'ERR_MISSING_PUBLIC_KEY')\n    }\n\n    const timeoutController = new TimeoutController(IPNS_INIT_KEYSPACE_TIMEOUT)\n    try {\n      await ipfs.ipns.initializeKeyspace(storage.peerId, uint8ArrayFromString(`/ipfs/${cid}`), {\n        signal: timeoutController.signal\n      })\n    } finally {\n      timeoutController.clear()\n    }\n  }\n\n  if (options.start !== false) {\n    log('starting node')\n    await ipfs.start()\n  }\n\n  return ipfs\n}\n","\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n */\nexport function createIsOnline ({ network }) {\n  /**\n   * @returns {boolean}\n   */\n  return () => {\n    const net = network.try()\n    return net != null && Boolean(net.libp2p.isStarted())\n  }\n}\n","import { Service } from '../utils/service.js'\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../types').Print} config.print\n * @param {import('../types').Preload} config.preload\n * @param {import('../types').MfsPreload} config.mfsPreload\n * @param {import('./ipns').IPNSAPI} config.ipns\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('../types').Options} config.options\n */\nexport function createStart ({ network, preload, peerId, keychain, repo, ipns, mfsPreload, print, hashers, options }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"start\"]}\n   */\n  const start = async () => {\n    const { libp2p } = await Service.start(network, {\n      peerId,\n      repo,\n      print,\n      hashers,\n      options\n    })\n\n    await Promise.all([\n      ipns.startOnline({ keychain, libp2p, peerId, repo }),\n      preload.start(),\n      mfsPreload.start()\n    ])\n  }\n\n  return start\n}\n","import { Service } from '../utils/service.js'\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('../types').Preload} config.preload\n * @param {import('./ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../types').MfsPreload} config.mfsPreload\n */\nexport function createStop ({ network, preload, ipns, repo, mfsPreload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"stop\"]}\n   */\n  const stop = async () => {\n    await Promise.all([\n      preload.stop(),\n      ipns.stop(),\n      mfsPreload.stop()\n    ])\n\n    await Service.stop(network)\n\n    // must be closed after stopping services as some of them\n    // will write into the datastore\n    await repo.close()\n  }\n\n  return stop\n}\n","import { ipfsCore, interfaceIpfsCore, commit } from '../version.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"version\"]}\n   */\n  async function version (_options = {}) {\n    const repoVersion = await repo.version.get()\n\n    return {\n      version: ipfsCore,\n      commit,\n      repo: `${repoVersion}`,\n      'ipfs-core': ipfsCore,\n      'interface-ipfs-core': interfaceIpfsCore\n    }\n  }\n\n  return withTimeoutOption(version)\n}\n","import { create as createImport } from './components/index.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\nimport urlSourceImport from 'ipfs-utils/src/files/url-source.js'\n\n/**\n * @typedef {import('ipfs-core-types').IPFS} IPFS\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Libp2pFactoryFn} Libp2pFactoryFn\n * @typedef {import('./types').Libp2pFactoryFnArgs} Libp2pFactoryFnArgs\n * @typedef {import('./types').InitOptions} InitOptions\n * @typedef {import('./types').RelayOptions} RelayOptions\n * @typedef {import('./types').PreloadOptions} PreloadOptions\n * @typedef {import('./types').ExperimentalOptions} ExperimentalOptions\n * @typedef {import('./types').Preload} Preload\n * @typedef {import('./types').MfsPreload} MfsPreload\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n */\n\nexport const create = createImport\nexport const globSource = globSourceImport\nexport const urlSource = urlSourceImport\n","/**\n * Check if a given ip address is a loopback address\n */\nexport function isLoopbackAddr(ip) {\n    return /^127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n        /^::1$/.test(ip);\n}\n//# sourceMappingURL=index.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport defer from 'p-defer';\nconst DEFAULT_BATCH_SIZE = 1024 * 1024;\nconst DEFAULT_SERIALIZE = (buf, list) => { list.append(buf); };\nasync function* batchedBytes(source, options = {}) {\n    let buffer = new Uint8ArrayList();\n    let ended = false;\n    let deferred = defer();\n    let size = Number(options.size ?? DEFAULT_BATCH_SIZE);\n    if (isNaN(size) || size === 0 || size < 0) {\n        size = DEFAULT_BATCH_SIZE;\n    }\n    const yieldAfter = options.yieldAfter ?? 0;\n    const serialize = options.serialize ?? DEFAULT_SERIALIZE;\n    void Promise.resolve().then(async () => {\n        try {\n            let timeout;\n            for await (const buf of source) {\n                serialize(buf, buffer);\n                if (buffer.byteLength >= size) {\n                    clearTimeout(timeout);\n                    deferred.resolve();\n                    continue;\n                }\n                timeout = setTimeout(() => {\n                    deferred.resolve();\n                }, yieldAfter);\n            }\n            clearTimeout(timeout);\n            deferred.resolve();\n        }\n        catch (err) {\n            deferred.reject(err);\n        }\n        finally {\n            ended = true;\n        }\n    });\n    while (!ended) { // eslint-disable-line no-unmodified-loop-condition\n        await deferred.promise;\n        deferred = defer();\n        if (buffer.byteLength > 0) {\n            const b = buffer;\n            buffer = new Uint8ArrayList();\n            yield b.subarray();\n        }\n    }\n}\nexport default batchedBytes;\n//# sourceMappingURL=index.js.map","/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything\n */\nexport default async function drain(source) {\n    for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n}\n//# sourceMappingURL=index.js.map","/**\n * Filters the passed (async) iterable by using the filter function\n */\nexport default async function* filter(source, fn) {\n    for await (const entry of source) {\n        if (await fn(entry)) {\n            yield entry;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`\n */\nexport default async function first(source) {\n    for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n        return entry;\n    }\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","import { reader } from 'it-reader';\nimport { pushable } from 'it-pushable';\nimport defer from 'p-defer';\n// Convert a duplex stream into a reader and writer and rest stream\nexport function handshake(stream) {\n    const writer = pushable(); // Write bytes on demand to the sink\n    const source = reader(stream.source); // Read bytes on demand from the source\n    // Waits for a source to be passed to the rest stream's sink\n    const sourcePromise = defer();\n    let sinkErr;\n    const sinkPromise = stream.sink((async function* () {\n        yield* writer;\n        const source = await sourcePromise.promise;\n        yield* source;\n    })());\n    sinkPromise.catch(err => {\n        sinkErr = err;\n    });\n    const rest = {\n        sink: async (source) => {\n            if (sinkErr != null) {\n                return await Promise.reject(sinkErr);\n            }\n            sourcePromise.resolve(source);\n            return await sinkPromise;\n        },\n        source\n    };\n    return {\n        reader: source,\n        writer,\n        stream: rest,\n        rest: () => writer.end(),\n        write: writer.push,\n        read: async () => {\n            const res = await source.next();\n            if (res.value != null) {\n                return res.value;\n            }\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`\n */\nexport default async function last(source) {\n    let res;\n    for await (const entry of source) {\n        res = entry;\n    }\n    return res;\n}\n//# sourceMappingURL=index.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { unsigned } from 'uint8-varint';\nimport { allocUnsafe } from './alloc.js';\nconst defaultEncoder = (length) => {\n    const lengthLength = unsigned.encodingLength(length);\n    const lengthBuf = allocUnsafe(lengthLength);\n    unsigned.encode(length, lengthBuf);\n    defaultEncoder.bytes = lengthLength;\n    return lengthBuf;\n};\ndefaultEncoder.bytes = 0;\nexport function encode(options) {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    const encoder = async function* (source) {\n        for await (const chunk of source) {\n            // length + data\n            const length = encodeLength(chunk.byteLength);\n            // yield only Uint8Arrays\n            if (length instanceof Uint8Array) {\n                yield length;\n            }\n            else {\n                yield* length;\n            }\n            // yield only Uint8Arrays\n            if (chunk instanceof Uint8Array) {\n                yield chunk;\n            }\n            else {\n                yield* chunk;\n            }\n        }\n    };\n    return encoder;\n}\nencode.single = (chunk, options) => {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    return new Uint8ArrayList(encodeLength(chunk.byteLength), chunk);\n};\n//# sourceMappingURL=encode.js.map","export function alloc(len) {\n    return new Uint8Array(len);\n}\nexport function allocUnsafe(len) {\n    if (globalThis?.Buffer?.allocUnsafe != null) {\n        return globalThis.Buffer.allocUnsafe(len);\n    }\n    return new Uint8Array(len);\n}\n//# sourceMappingURL=alloc.js.map","/* eslint max-depth: [\"error\", 6] */\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { unsigned } from 'uint8-varint';\nimport errCode from 'err-code';\n// Maximum length of the length section of the message\nexport const MAX_LENGTH_LENGTH = 8; // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nexport const MAX_DATA_LENGTH = 1024 * 1024 * 4;\nvar ReadMode;\n(function (ReadMode) {\n    ReadMode[ReadMode[\"LENGTH\"] = 0] = \"LENGTH\";\n    ReadMode[ReadMode[\"DATA\"] = 1] = \"DATA\";\n})(ReadMode || (ReadMode = {}));\nconst defaultDecoder = (buf) => {\n    const length = unsigned.decode(buf);\n    defaultDecoder.bytes = unsigned.encodingLength(length);\n    return length;\n};\ndefaultDecoder.bytes = 0;\nexport function decode(options) {\n    const decoder = async function* (source) {\n        const buffer = new Uint8ArrayList();\n        let mode = ReadMode.LENGTH;\n        let dataLength = -1;\n        const lengthDecoder = options?.lengthDecoder ?? defaultDecoder;\n        const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH;\n        const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH;\n        for await (const buf of source) {\n            buffer.append(buf);\n            while (buffer.byteLength > 0) {\n                if (mode === ReadMode.LENGTH) {\n                    // read length, ignore errors for short reads\n                    try {\n                        dataLength = lengthDecoder(buffer);\n                        if (dataLength < 0) {\n                            throw errCode(new Error('invalid message length'), 'ERR_INVALID_MSG_LENGTH');\n                        }\n                        if (dataLength > maxDataLength) {\n                            throw errCode(new Error('message length too long'), 'ERR_MSG_DATA_TOO_LONG');\n                        }\n                        const dataLengthLength = lengthDecoder.bytes;\n                        buffer.consume(dataLengthLength);\n                        if (options?.onLength != null) {\n                            options.onLength(dataLength);\n                        }\n                        mode = ReadMode.DATA;\n                    }\n                    catch (err) {\n                        if (err instanceof RangeError) {\n                            if (buffer.byteLength > maxLengthLength) {\n                                throw errCode(new Error('message length length too long'), 'ERR_MSG_LENGTH_TOO_LONG');\n                            }\n                            break;\n                        }\n                        throw err;\n                    }\n                }\n                if (mode === ReadMode.DATA) {\n                    if (buffer.byteLength < dataLength) {\n                        // not enough data, wait for more\n                        break;\n                    }\n                    const data = buffer.sublist(0, dataLength);\n                    buffer.consume(dataLength);\n                    if (options?.onData != null) {\n                        options.onData(data);\n                    }\n                    yield data;\n                    mode = ReadMode.LENGTH;\n                }\n            }\n        }\n        if (buffer.byteLength > 0) {\n            throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF');\n        }\n    };\n    return decoder;\n}\n/**\n * @param {*} reader\n * @param {import('./types').DecoderOptions} [options]\n * @returns\n */\ndecode.fromReader = (reader, options) => {\n    let byteLength = 1; // Read single byte chunks until the length is known\n    const varByteSource = (async function* () {\n        while (true) {\n            try {\n                const { done, value } = await reader.next(byteLength);\n                if (done === true) {\n                    return;\n                }\n                if (value != null) {\n                    yield value;\n                }\n            }\n            catch (err) {\n                if (err.code === 'ERR_UNDER_READ') {\n                    return { done: true, value: null };\n                }\n                throw err;\n            }\n            finally {\n                // Reset the byteLength so we continue to check for varints\n                byteLength = 1;\n            }\n        }\n    }());\n    /**\n     * Once the length has been parsed, read chunk for that length\n     */\n    const onLength = (l) => { byteLength = l; };\n    return decode({\n        ...(options ?? {}),\n        onLength\n    })(varByteSource);\n};\n//# sourceMappingURL=decode.js.map","/**\n * Consumes the passed iterator and returns the number of items it contained\n */\nexport default async function length(iterator) {\n    let count = 0;\n    for await (const _ of iterator) { // eslint-disable-line no-unused-vars,@typescript-eslint/no-unused-vars\n        count++;\n    }\n    return count;\n}\n//# sourceMappingURL=index.js.map","/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function\n */\nexport default async function* map(source, func) {\n    for await (const val of source) {\n        yield func(val);\n    }\n}\n//# sourceMappingURL=index.js.map","import { pushable } from 'it-pushable';\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nexport default async function* merge(...sources) {\n    const output = pushable({\n        objectMode: true\n    });\n    void Promise.resolve().then(async () => {\n        try {\n            await Promise.all(sources.map(async (source) => {\n                for await (const item of source) {\n                    output.push(item);\n                }\n            }));\n            output.end();\n        }\n        catch (err) {\n            output.end(err);\n        }\n    });\n    yield* output;\n}\n//# sourceMappingURL=index.js.map","import defer from 'p-defer';\n/**\n * A pair of streams where one drains from the other\n */\nexport function pair() {\n    const deferred = defer();\n    let piped = false;\n    return {\n        sink: async (source) => {\n            if (piped) {\n                throw new Error('already piped');\n            }\n            piped = true;\n            deferred.resolve(source);\n        },\n        source: (async function* () {\n            const source = await deferred.promise;\n            yield* source;\n        }())\n    };\n}\n//# sourceMappingURL=index.js.map","import { pair } from './index.js';\n/**\n * Two duplex streams that are attached to each other\n */\nexport function duplexPair() {\n    const a = pair();\n    const b = pair();\n    return [\n        {\n            source: a.source,\n            sink: b.sink\n        },\n        {\n            source: b.source,\n            sink: a.sink\n        }\n    ];\n}\n//# sourceMappingURL=duplex.js.map","/* global EventTarget Event */\nimport defer from 'p-defer';\nconst CustomEvent = globalThis.CustomEvent ?? Event;\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function* parallel(source, options = {}) {\n    let concurrency = options.concurrency ?? Infinity;\n    if (concurrency < 1) {\n        concurrency = Infinity;\n    }\n    const ordered = options.ordered == null ? false : options.ordered;\n    const emitter = new EventTarget();\n    const ops = [];\n    let slotAvailable = defer();\n    let resultAvailable = defer();\n    let sourceFinished = false;\n    let sourceErr;\n    let opErred = false;\n    emitter.addEventListener('task-complete', () => {\n        resultAvailable.resolve();\n    });\n    void Promise.resolve().then(async () => {\n        try {\n            for await (const task of source) {\n                if (ops.length === concurrency) {\n                    slotAvailable = defer();\n                    await slotAvailable.promise;\n                }\n                if (opErred) {\n                    break;\n                }\n                const op = {\n                    done: false\n                };\n                ops.push(op);\n                task()\n                    .then(result => {\n                    op.done = true;\n                    op.ok = true;\n                    op.value = result;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                }, err => {\n                    op.done = true;\n                    op.err = err;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                });\n            }\n            sourceFinished = true;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n        catch (err) {\n            sourceErr = err;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n    });\n    function valuesAvailable() {\n        if (ordered) {\n            return ops[0]?.done;\n        }\n        return Boolean(ops.find(op => op.done));\n    }\n    function* yieldOrderedValues() {\n        while ((ops.length > 0) && ops[0].done) {\n            const op = ops[0];\n            ops.shift();\n            if (op.ok) {\n                yield op.value;\n            }\n            else {\n                // allow the source to exit\n                opErred = true;\n                slotAvailable.resolve();\n                throw op.err;\n            }\n            slotAvailable.resolve();\n        }\n    }\n    function* yieldUnOrderedValues() {\n        // more values can become available while we wait for `yield`\n        // to return control to this function\n        while (valuesAvailable()) {\n            for (let i = 0; i < ops.length; i++) {\n                if (ops[i].done) {\n                    const op = ops[i];\n                    ops.splice(i, 1);\n                    i--;\n                    if (op.ok) {\n                        yield op.value;\n                    }\n                    else {\n                        opErred = true;\n                        slotAvailable.resolve();\n                        throw op.err;\n                    }\n                    slotAvailable.resolve();\n                }\n            }\n        }\n    }\n    while (true) {\n        if (!valuesAvailable()) {\n            resultAvailable = defer();\n            await resultAvailable.promise;\n        }\n        if (sourceErr != null) {\n            // the source threw an error, propagate it\n            throw sourceErr;\n        }\n        if (ordered) {\n            yield* yieldOrderedValues();\n        }\n        else {\n            yield* yieldUnOrderedValues();\n        }\n        if (sourceFinished && ops.length === 0) {\n            // not waiting for any results and no more tasks so we are done\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive Protobuf encoded messages over\n * streams.\n *\n * @example\n *\n * ```typescript\n * import { pbStream } from 'it-pb-stream'\n * import { MessageType } from './src/my-message-type.js'\n *\n * // RequestType and ResponseType have been generate from `.proto` files and have\n * // `.encode` and `.decode` methods for serialization/deserialization\n *\n * const stream = pbStream(duplex)\n * stream.writePB({\n *   foo: 'bar'\n * }, MessageType)\n * const res = await stream.readPB(MessageType)\n * ```\n */\nimport { handshake } from 'it-handshake';\nimport * as lp from 'it-length-prefixed';\nexport function pbStream(duplex, opts = {}) {\n    const shake = handshake(duplex);\n    const lpReader = lp.decode.fromReader(shake.reader, opts);\n    const W = {\n        read: async (bytes) => {\n            // just read\n            const { value } = await shake.reader.next(bytes);\n            if (value == null) {\n                throw new Error('Value is null');\n            }\n            return value;\n        },\n        readLP: async () => {\n            // read, decode\n            // @ts-expect-error .next is part of the generator interface\n            const { value } = await lpReader.next();\n            if (value == null) {\n                throw new Error('Value is null');\n            }\n            return value;\n        },\n        readPB: async (proto) => {\n            // readLP, decode\n            const value = await W.readLP();\n            if (value == null) {\n                throw new Error('Value is null');\n            }\n            // Is this a buffer?\n            const buf = value instanceof Uint8Array ? value : value.subarray();\n            return proto.decode(buf);\n        },\n        write: (data) => {\n            // just write\n            if (data instanceof Uint8Array) {\n                shake.writer.push(data);\n            }\n            else {\n                shake.writer.push(data.subarray());\n            }\n        },\n        writeLP: (data) => {\n            // encode, write\n            W.write(lp.encode.single(data, opts));\n        },\n        writePB: (data, proto) => {\n            // encode, writeLP\n            W.writeLP(proto.encode(data));\n        },\n        pb: (proto) => {\n            return {\n                read: async () => await W.readPB(proto),\n                write: (d) => { W.writePB(d, proto); },\n                unwrap: () => W\n            };\n        },\n        unwrap: () => {\n            // returns vanilla duplex again, terminates all reads/writes from this object\n            shake.rest();\n            duplex.source = shake.stream.source;\n            duplex.sink = shake.stream.sink;\n            return duplex;\n        }\n    };\n    return W;\n}\n//# sourceMappingURL=index.js.map","export default function peekableIterator(iterable) {\n    // @ts-expect-error\n    const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n        // @ts-expect-error\n        ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n        // @ts-expect-error\n        : [iterable[Symbol.iterator](), Symbol.iterator];\n    const queue = [];\n    // @ts-expect-error\n    return {\n        peek: () => {\n            return iterator.next();\n        },\n        push: (value) => {\n            queue.push(value);\n        },\n        next: () => {\n            if (queue.length > 0) {\n                return {\n                    done: false,\n                    value: queue.shift()\n                };\n            }\n            return iterator.next();\n        },\n        [symbol]() {\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","import { pushable } from 'it-pushable';\nimport merge from 'it-merge';\nexport const rawPipe = (...fns) => {\n    let res;\n    while (fns.length > 0) {\n        res = fns.shift()(res);\n    }\n    return res;\n};\nexport const isIterable = (obj) => {\n    return obj != null && (typeof obj[Symbol.asyncIterator] === 'function' ||\n        typeof obj[Symbol.iterator] === 'function' ||\n        typeof obj.next === 'function' // Probably, right?\n    );\n};\nexport const isDuplex = (obj) => {\n    return obj != null && typeof obj.sink === 'function' && isIterable(obj.source);\n};\nconst duplexPipelineFn = (duplex) => {\n    return (source) => {\n        const p = duplex.sink(source);\n        if (p.then != null) {\n            const stream = pushable({\n                objectMode: true\n            });\n            p.then(() => {\n                stream.end();\n            }, (err) => {\n                stream.end(err);\n            });\n            const sourceWrap = async function* () {\n                yield* duplex.source;\n                stream.end();\n            };\n            return merge(stream, sourceWrap());\n        }\n        return duplex.source;\n    };\n};\nexport function pipe(first, ...rest) {\n    // Duplex at start: wrap in function and return duplex source\n    if (isDuplex(first)) {\n        const duplex = first;\n        first = () => duplex.source;\n        // Iterable at start: wrap in function\n    }\n    else if (isIterable(first)) {\n        const source = first;\n        first = () => source;\n    }\n    const fns = [first, ...rest];\n    if (fns.length > 1) {\n        // Duplex at end: use duplex sink\n        if (isDuplex(fns[fns.length - 1])) {\n            fns[fns.length - 1] = fns[fns.length - 1].sink;\n        }\n    }\n    if (fns.length > 2) {\n        // Duplex in the middle, consume source with duplex sink and return duplex source\n        for (let i = 1; i < fns.length - 1; i++) {\n            if (isDuplex(fns[i])) {\n                fns[i] = duplexPipelineFn(fns[i]);\n            }\n        }\n    }\n    return rawPipe(...fns);\n}\n//# sourceMappingURL=index.js.map","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport { FIFO } from './fifo.js';\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    const waitNext = async () => {\n        if (!buffer.isEmpty()) {\n            return getNext(buffer);\n        }\n        if (ended) {\n            return { done: true };\n        }\n        return await new Promise((resolve, reject) => {\n            onNext = (next) => {\n                onNext = null;\n                buffer.push(next);\n                try {\n                    resolve(getNext(buffer));\n                }\n                catch (err) {\n                    reject(err);\n                }\n                return pushable;\n            };\n        });\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","import { Uint8ArrayList } from 'uint8arraylist';\n/**\n * Returns an `AsyncGenerator` that allows reading a set number of bytes from the passed source.\n *\n * @example\n *\n * ```javascript\n * import { reader } from 'it-reader'\n *\n * const stream = reader(source)\n *\n * // read 10 bytes from the stream\n * const { done, value } = await stream.next(10)\n *\n * if (done === true) {\n *   // stream finished\n * }\n *\n * if (value != null) {\n *   // do something with value\n * }\n * ```\n */\nexport function reader(source) {\n    const reader = (async function* () {\n        // @ts-expect-error first yield in stream is ignored\n        let bytes = yield; // Allows us to receive 8 when reader.next(8) is called\n        let bl = new Uint8ArrayList();\n        for await (const chunk of source) {\n            if (bytes == null) {\n                bl.append(chunk);\n                bytes = yield bl;\n                bl = new Uint8ArrayList();\n                continue;\n            }\n            bl.append(chunk);\n            while (bl.length >= bytes) {\n                const data = bl.sublist(0, bytes);\n                bl.consume(bytes);\n                bytes = yield data;\n                // If we no longer want a specific byte length, we yield the rest now\n                if (bytes == null) {\n                    if (bl.length > 0) {\n                        bytes = yield bl;\n                        bl = new Uint8ArrayList();\n                    }\n                    break; // bytes is null and/or no more buffer to yield\n                }\n            }\n        }\n        // Consumer wants more bytes but the source has ended and our buffer\n        // is not big enough to satisfy.\n        if (bytes != null) {\n            throw Object.assign(new Error(`stream ended before ${bytes} bytes became available`), { code: 'ERR_UNDER_READ', buffer: bl });\n        }\n    })();\n    void reader.next();\n    return reader;\n}\n//# sourceMappingURL=index.js.map","import all from 'it-all';\n/**\n * Collects all values from an async iterator, sorts them\n * using the passed function and yields them\n */\nexport default async function* sort(source, sorter) {\n    const arr = await all(source);\n    yield* arr.sort(sorter);\n}\n//# sourceMappingURL=index.js.map","/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nexport default async function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map","/**\n * Stop iteration after n items have been received\n */\nexport default async function* take(source, limit) {\n    let items = 0;\n    if (limit < 1) {\n        return;\n    }\n    for await (const entry of source) {\n        yield entry;\n        items++;\n        if (items === limit) {\n            return;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/* eslint-env browser */\nexport default WebSocket;\n//# sourceMappingURL=web-socket.browser.js.map","import { EventIterator } from 'event-iterator';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer(obj) {\n    return (obj instanceof ArrayBuffer) ||\n        (obj?.constructor?.name === 'ArrayBuffer' && typeof obj?.byteLength === 'number');\n}\nexport default (socket) => {\n    socket.binaryType = 'arraybuffer';\n    const connected = async () => await new Promise((resolve, reject) => {\n        if (isConnected) {\n            return resolve();\n        }\n        if (connError != null) {\n            return reject(connError);\n        }\n        const cleanUp = (cont) => {\n            socket.removeEventListener('open', onOpen);\n            socket.removeEventListener('error', onError);\n            cont();\n        };\n        const onOpen = () => cleanUp(resolve);\n        const onError = (event) => {\n            cleanUp(() => reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`)));\n        };\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('error', onError);\n    });\n    const source = (async function* () {\n        const messages = new EventIterator(({ push, stop, fail }) => {\n            const onMessage = (event) => {\n                let data = null;\n                if (typeof event.data === 'string') {\n                    data = uint8ArrayFromString(event.data);\n                }\n                if (isArrayBuffer(event.data)) {\n                    data = new Uint8Array(event.data);\n                }\n                if (event.data instanceof Uint8Array) {\n                    data = event.data;\n                }\n                if (data == null) {\n                    return;\n                }\n                push(data);\n            };\n            const onError = (event) => fail(event.error ?? new Error('Socket error'));\n            socket.addEventListener('message', onMessage);\n            socket.addEventListener('error', onError);\n            socket.addEventListener('close', stop);\n            return () => {\n                socket.removeEventListener('message', onMessage);\n                socket.removeEventListener('error', onError);\n                socket.removeEventListener('close', stop);\n            };\n        }, { highWaterMark: Infinity });\n        await connected();\n        for await (const chunk of messages) {\n            yield isArrayBuffer(chunk) ? new Uint8Array(chunk) : chunk;\n        }\n    }());\n    let isConnected = socket.readyState === 1;\n    let connError;\n    socket.addEventListener('open', () => {\n        isConnected = true;\n        connError = null;\n    });\n    socket.addEventListener('close', () => {\n        isConnected = false;\n        connError = null;\n    });\n    socket.addEventListener('error', event => {\n        if (!isConnected) {\n            connError = event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`);\n        }\n    });\n    return Object.assign(source, {\n        connected\n    });\n};\n//# sourceMappingURL=source.js.map","export default (socket) => {\n    // if the socket is closing or closed, return end\n    if (socket.readyState >= 2) {\n        throw new Error('socket closed');\n    }\n    // if open, return\n    if (socket.readyState === 1) {\n        return;\n    }\n    return new Promise((resolve, reject) => {\n        function cleanup() {\n            socket.removeEventListener('open', handleOpen);\n            socket.removeEventListener('error', handleErr);\n        }\n        function handleOpen() {\n            cleanup();\n            resolve();\n        }\n        function handleErr(event) {\n            cleanup();\n            reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`));\n        }\n        socket.addEventListener('open', handleOpen);\n        socket.addEventListener('error', handleErr);\n    });\n};\n//# sourceMappingURL=ready.js.map","import ready from './ready.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    options.closeOnEnd = options.closeOnEnd !== false;\n    const sink = async (source) => {\n        for await (const data of source) {\n            try {\n                await ready(socket);\n            }\n            catch (err) {\n                if (err.message === 'socket closed')\n                    break;\n                throw err;\n            }\n            socket.send(data);\n        }\n        if (options.closeOnEnd != null && socket.readyState <= 1) {\n            return await new Promise((resolve, reject) => {\n                socket.addEventListener('close', event => {\n                    if (event.wasClean || event.code === 1006) {\n                        resolve();\n                    }\n                    else {\n                        const err = Object.assign(new Error('ws error'), { event });\n                        reject(err);\n                    }\n                });\n                setTimeout(() => socket.close());\n            });\n        }\n    };\n    return sink;\n};\n//# sourceMappingURL=sink.js.map","import source from './source.js';\nimport sink from './sink.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    const connectedSource = source(socket);\n    let remoteAddress = options.remoteAddress;\n    let remotePort = options.remotePort;\n    if (socket.url != null) {\n        // only client->server sockets have urls, server->client connections do not\n        try {\n            const url = new URL(socket.url);\n            remoteAddress = url.hostname;\n            remotePort = parseInt(url.port, 10);\n        }\n        catch { }\n    }\n    if (remoteAddress == null || remotePort == null) {\n        throw new Error('Remote connection did not have address and/or port');\n    }\n    const duplex = {\n        sink: sink(socket, options),\n        source: connectedSource,\n        connected: async () => await connectedSource.connected(),\n        close: async () => {\n            if (socket.readyState === socket.CONNECTING || socket.readyState === socket.OPEN) {\n                await new Promise((resolve) => {\n                    socket.addEventListener('close', () => {\n                        resolve();\n                    });\n                    socket.close();\n                });\n            }\n        },\n        destroy: () => {\n            if (socket.terminate != null) {\n                socket.terminate();\n            }\n            else {\n                socket.close();\n            }\n        },\n        remoteAddress,\n        remotePort,\n        socket\n    };\n    return duplex;\n};\n//# sourceMappingURL=duplex.js.map","import { relative } from 'iso-url';\nconst map = { http: 'ws', https: 'wss' };\nconst def = 'ws';\nexport default (url, location) => relative(url, location, map, def);\n//# sourceMappingURL=ws-url.js.map","// load websocket library if we are not in the browser\nimport WebSocket from './web-socket.js';\nimport duplex from './duplex.js';\nimport wsurl from './ws-url.js';\nexport function connect(addr, opts) {\n    const location = typeof window === 'undefined' ? '' : window.location;\n    opts = opts ?? {};\n    const url = wsurl(addr, location.toString());\n    const socket = new WebSocket(url, opts.websocket);\n    return duplex(socket, opts);\n}\n//# sourceMappingURL=client.js.map"],"names":["module","exports","read","buf","offset","b","res","shift","counter","l","length","bytes","RangeError","REST","Math","pow","MSB","encode","num","out","Number","MAX_SAFE_INTEGER","oldOffset","INT","MSBALL","decode","encodingLength","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","self","FormData","window","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","create","docCache","Map","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","replace","trim","processFragments","ast","seenKeys","Set","definitions","forEach","fragmentDefinition","kind","fragmentName","name","sourceKey","loc","source","body","substring","start","end","sourceKeySet","get","has","console","warn","set","add","push","parseDocument","cacheKey","parsed","allowLegacyFragmentVariables","Error","doc","workSet","node","keys","key","startToken","endToken","stripLoc","gql","literals","args","_i","result","arg","gql_1","extras","clear","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","defineProperty","devAssert","condition","message","Boolean","inspect","formatValue","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","seenValues","JSON","stringify","previouslySeenValues","includes","toJSON","isJSONable","jsonValue","Array","isArray","array","len","min","remaining","items","join","formatArray","object","entries","tag","toString","constructor","getObjectTag","properties","map","formatObject","formatObjectValue","String","Token","QueryDocumentKeys","OperationTypeNode","Location","isNode","maybeNode","maybeKind","kindValues","toStringTag","Symbol","line","column","prev","next","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","slice","isPrintableAsBlockString","isEmptyLine","hasIndent","hasCommonIndent","seenNonEmptyLine","codePointAt","printBlockString","options","escapedValue","split","isSingleLine","forceLeadingNewLine","every","_characterClasses","isWhiteSpace","charCodeAt","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","str","isDigit","code","isLetter","isNameContinue","isNameStart","Kind","invariant","LineRegExp","getLocation","position","lastLineStart","match","matchAll","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_","undefined","padLen","max","prefix","GraphQLError","rawArgs","_this$nodes","_nodeLocations$","_ref","nodes","positions","path","originalError","extensions","firstArg","toNormalizedOptions","super","undefinedIfEmpty","nodeLocations","locations","pos","originalExtensions","defineProperties","writable","enumerable","stack","configurable","captureStackTrace","output","formattedError","syntaxError","description","DirectiveLocation","TokenKind","Lexer","startOfFileToken","lastToken","token","lineStart","advance","lookahead","nextToken","readNextToken","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","char","fromCodePoint","toUpperCase","createToken","col","bodyLength","readComment","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","chunkStart","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","size","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","instanceOf","Source","parse","Parser","sourceObj","isSource","_lexer","_options","_tokenCounter","parseName","expectToken","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","type","parseTypeReference","defaultValue","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","selections","parseSelection","parseFragment","parseField","nameOrAlias","alias","parseArguments","isConst","item","parseConstArgument","parseArgument","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","parseList","parseObject","advanceLexer","parseStringLiteral","varName","block","values","any","fields","parseObjectField","parseDirective","innerType","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","delimitedMany","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","types","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseEnumValueName","getTokenDesc","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","noLocation","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","isPunctuatorTokenKind","printString","escapedRegExp","escapedReplacer","escapeSequences","print","_visitor","visit","printDocASTReducer","_blockString","_printString","leave","varDefs","wrap","argsLine","isBlockString","hasMultilineItems","maybeArray","separator","_maybeArray$filter$jo","x","maybeString","_maybeArray$some","some","BREAK","getEnterLeaveForKind","getVisitFn","visitor","isLeaving","enter","root","visitorKeys","_ast","enterLeaveMap","_kinds","parent","inArray","edits","ancestors","isEdited","pop","editOffset","editKey","editValue","arrayKey","splice","getOwnPropertyDescriptors","_enterLeaveMap$get","_enterLeaveMap$get2","_devAssert","_inspect","visitFn","_node$kind","visitInParallel","visitors","skipping","fill","mergedVisitor","hasVisitor","enterList","leaveList","mergedEnterLeave","_enterList$i","_leaveList$i","freeze","kindVisitor","getOperationAST","documentAST","operationName","definition","_definition$name","OPERATION_DEFINITION","$defineProperty","GetIntrinsic","hasPropertyDescriptors","e","hasArrayLengthDefineBug","origSymbol","hasSymbolSham","getOwnPropertySymbols","iterator","obj","sym","symObj","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","hasSymbols","bind","Function","Buffer","Transform","HashBase","blockSize","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","inherits","_transform","chunk","encoding","callback","error","update","err","_flush","digest","data","val","isBuffer","TypeError","throwIfNotStringOrBuffer","from","_update","j","carry","_digest","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","__proto__","oneOf","expected","thing","concat","actual","determiner","search","msg","substr","this_len","indexOf","objectKeys","Duplex","Readable","Writable","v","method","allowHalfOpen","readable","once","onend","_writableState","ended","process","nextTick","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","cb","ReadableState","EElistenerCount","emitter","listeners","Stream","OurUint8Array","g","Uint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","stream","isDuplex","objectMode","readableObjectMode","buffer","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","destroy","_destroy","readableAddChunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","write","maybeReadMore","emit","unshift","_undestroy","undestroy","isPaused","setEncoding","enc","head","content","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","first","consume","endReadable","endReadableNT","wState","finished","xs","parseInt","nOrig","doRead","pipe","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","on","pipeOnDrain","pause","event","fn","prependListener","_events","dests","ev","addListener","removeAllListeners","_this","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","prefinish","done","_write","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_Object$setPrototypeO","_defineProperty","input","hint","prim","toPrimitive","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","resolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","Promise","reject","promise","lastPromise","then","wrapForNext","_this2","_Object$create","ownKeys","enumerableOnly","symbols","_objectSpread","target","_defineProperties","props","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","alloc","copy","hasStrings","_getString","_getBuffer","c","nb","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","noop","eos","called","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","to","streams","popCallback","destroys","closed","destroyer","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","pipeline","hash","utils","common","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","assert","BlockHash","pending","pendingTotal","outSize","hmacStrength","padLength","endian","_delta8","_delta32","toArray","r","join32","_pad","k","Hmac","Hash","inner","outer","_init","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","h","f","y","z","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","a","d","SHA256","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","T1","T2","SHA512","SHA384","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","w","zero2","word","zero8","toHex","m","lo","hi","cache","_cache","remove","HmacDRBG","predResist","outLen","minEntropy","_reseed","reseedInterval","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","seed","_hmac","kmac","reseed","addEnc","generate","temp","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","http","url","https","validateParams","params","protocol","request","blocks","Uint32Array","blockIdxes","Uint16Array","mapChar","codePoint","mapStr","factory","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","fromCharCode","mapDomain","parts","encoded","ucs2decode","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","inputLength","bias","basic","lastIndexOf","oldi","baseMinusT","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","punycode","test","idna_map","mapLabel","label","useStd3ASCII","transitional","mapped","chars","ucs2","cp","composite","flags","domain","labels","startsWith","validateLabel","toAscii","verifyDnsLength","asciiLabels","toASCII","asciiString","toUnicode","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","abs","isNaN","log","LN2","Q","Z","L","o","nn","u","X","rn","delete","isFrozen","tn","U","O","S","P","M","H","I","N","R","F","en","Proxy","revocable","revoke","proxy","J","G","Reflect","for","deleteProperty","un","produce","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","op","$","an","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","_slicedToArray","arr","_arrayWithHoles","_s","_e","_x","_r","_arr","_n","_d","return","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","arr2","list","keyAccessors","multiItem","flattenKeys","keyAccessor","isProp","indexedResult","iterObj","itemVal","idx","_itemVal","propVal","rest","level","child","flatten","accKeys","vals","_ref2","_ref3","ctor","superCtor","super_","TempCtor","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","style","lineno","updatePosition","Position","whitespace","errorsList","reason","filename","silent","re","exec","comments","rules","comment","charAt","declaration","prop","property","decl","decls","declarations","ipv4Part","ipv4Regexes","fourOctet","RegExp","threeOctet","twoOctet","longValue","octalRegex","hexRegex","zoneIndex","ipv6Part","ipv6Regexes","deprecatedTransitional","expandIPv6","replacement","replacementCount","colonCount","lastColon","zoneId","ref","results","matchCIDR","second","partSize","cidrBits","part","parseIntAuto","padPart","ipaddr","IPv4","octets","octet","SpecialRanges","unspecified","broadcast","multicast","linkLocal","loopback","carrierGradeNat","reserved","other","cidrRange","prefixLengthFromSubnetMask","cidr","stop","zerotable","zeros","range","subnetMatch","toByteArray","toIPv4MappedAddress","IPv6","toNormalizedString","broadcastAddressFromCIDR","parseCIDR","ipInterfaceOctets","subnetMaskOctets","subnetMaskFromPrefixLength","isIPv4","parser","isValid","isValidFourPartDecimal","networkAddressFromCIDR","maskLength","reverse","filledOctetCount","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","teredo","isIPv4MappedAddress","toFixedLengthString","addr","suffix","toIPv4Address","high","low","toRFC5952String","regex","bestMatchIndex","bestMatchLength","isIPv6","native","fromByteArray","e2","address","rangeList","defaultName","rangeName","rangeSubnets","subnet","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","utf8","indexOutOfRange","reader","writeLength","create_array","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","readFloatLE","double","readDoubleLE","skip","skipType","wireType","BufferReader_","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","EventEmitter","rpcCall","requestCtor","responseCtor","asPromise","response","setTimeout","endedByRPC","off","zero","toNumber","zzEncode","zeroHash","fromNumber","sign","isString","fromString","unsigned","toLong","fromHash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","base64","inquire","pool","versions","global","emptyArray","emptyObject","isInteger","isObject","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","Op","State","writer","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeFloatLE","writeDoubleLE","writeBytes","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","byteLength","unixfsData","protons","Data","dirTypes","blockSizes","mode","addBlockSize","removeBlockSize","fileSize","sum","marshal","DataType","Raw","Directory","File","Metadata","Symlink","HAMTShard","Type","filesize","blocksizes","hashType","fanout","mtime","unmarshal","marsheled","decoded","async","getReader","preventCancel","cancel","releaseLock","isElectron","IS_ENV_WITH_DOM","document","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","release","IS_WEBWORKER","importScripts","WorkerGlobalScope","IS_TEST","env","IS_REACT_NATIVE","navigator","product","isTest","isElectronMain","isElectronRenderer","isBrowser","isWebWorker","isEnvWithDom","isReactNative","HTTP","readURLContent","decodeURIComponent","URL","pathname","fetch","Request","Headers","TimeoutError","HTTPError","ignoreUndefined","URLSearchParams","anySignal","browserReableStreamToIt","all","defaults","throwHttpErrors","credentials","resource","headers","searchParams","transformSearchParams","abortController","AbortController","signal","globalThis","ReadableStream","Blob","ms","Date","now","timedOut","timeoutID","after","clearTimeout","timeout","duplex","ok","handleError","fromStream","ndjson","post","put","TextDecoder","isAsyncIterable","isNodeReadableStream","isWebReadableStream","streamToAsyncIterator","AbortError","statusText","Response","default","fetchWithStreaming","parseHeaders","ResponseWithURL","onUploadProgress","XMLHttpRequest","open","overrideMimeType","setRequestHeader","onabort","upload","onprogress","responseType","handleEvent","responseURL","status","getAllResponseHeaders","onload","ontimeout","send","fetchWithProgress","func","_initialParams2","_isObject2","invokeCallback","_interopRequireDefault","_setImmediate2","__esModule","rethrow","_slice2","callFn","hasNextTick","hasSetImmediate","fallback","_defer","setImmediate","defer","arrayLike","newLen","newArr","isAsync","_asyncify","_asyncify2","supportsSymbol","asyncFn","_setImmediate","tasks","_once2","_noop2","_isArray2","taskIndex","nextTask","task","_wrapAsync2","_onlyOnce2","DAGLink","cid","CID","withIs","_name","_nameBuf","_size","_cid","toBaseEncodedString","_json","nameAsBuffer","className","symbolName","createDagLinkFromB58EncodedHash","link","Size","multihash","dagNodeUtil","cloneLinks","cloneData","toDAGLink","DAGNode","links","isDAGLink","isDAGNode","asDAGLink","dagNode","sort","serialize","linkSort","serializedSize","_data","_links","_serializedSize","clone","addLink","rmLink","nameOrCid","isCID","equals","waterfall","multicodec","defaultHashAlg","binaryBlob","deserialize","remainderPath","tree","paths","isLink","valid","proto","resolver","multihashing","serialized","PBNode","pbn","Links","Tsize","toProtoBuf","hashAlg","version","mh","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","toStr","isIE68","isDDA","strClass","isWindow","Node","nodeName","domainNameRegex","domainName","rootDot","lastChar","electron","userAgent","alert","confirm","prompt","GeneratorFunction","isFnRegex","getProto","generatorFunc","getGeneratorFunc","callBind","define","implementation","getPolyfill","shim","polyfill","XMLParser","XMLValidator","isSvg","validate","jsonObject","availableTypedArrays","gOPD","typedArrays","$indexOf","$slice","toStrTags","typedArray","superProto","anyTrue","getter","tryTypedArrays","MAX_BYTES","generated","crypto","getRandomValues","URLWithLegacySupport","format","defaultBase","relative","protocolMap","defaultProtocol","urlParsed","host","auth","username","password","query","hostname","href","origin","port","static","createObjectURL","revokeObjectURL","userPass","ws","WebSocket","MozWebSocket","omit","keySet","_ref4","_ref5","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","padding","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","finalized","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","right","encodeString","strs","paddingBytes","finalize","hex","arrayBuffer","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","imul","clz32","__kMaxLength","__zero","__isOneDigitInt","__oneDigit","__fromDouble","__fromString","SyntaxError","__toPrimitive","BigInt","toDebugString","__toStringBasePowerOfTwo","__toStringGeneric","__unsignedDigit","__digit","__clz30","__decideRounding","__kBitConversionInts","__kBitConversionDouble","__copy","__absoluteSubOne","__trim","__absoluteAddOne","unaryMinus","__kMaxLengthBits","__initializeDigits","__setDigit","multiply","__clzmsd","__multiplyAccumulate","__absoluteCompare","__absoluteDivSmall","__absoluteDivLarge","__absoluteModSmall","__absoluteAdd","__absoluteSub","__rightShiftByAbsolute","__leftShiftByAbsolute","__compareToBigInt","equal","__absoluteAnd","__absoluteOr","__absoluteAndNot","__absoluteXor","__truncateToNBits","__truncateAndSubFromPowerOfTwo","__toNumeric","__isBigInt","__compare","EQ","__equalToNumber","__isWhitespace","__kMaxBitsPerChar","__kBitsPerCharTableMultiplier","__kBitsPerCharTableShift","__fillFromParts","__inplaceMultiplyAdd","__kConversionChars","exponentiate","__halfDigit","__setHalfDigit","quotient","remainder","__unequalSign","__absoluteGreater","__absoluteLess","__compareToDouble","__comparisonResultToBool","__compareToNumber","__setDigitGrow","__imul","__halfDigitLength","__clz15","__specialLeftShift","__internalMultiplyAdd","__inplaceSub","__inplaceAdd","__inplaceRightShift","__toShiftAmount","__rightShiftByMaximum","valueOf","__kBitConversionBuffer","Float64Array","Int32Array","isEqual","sortBy","uniq","uniqWith","intersectionWith","isPlainObject","isBoolean","normalizeArray","undef","stringArray","undefEmpty","keyValEqual","undefAndZero","emptySchema","schema","emptyObjUndef","isSchema","undefArrayEqual","schemaGroup","allProps","aVal","bVal","unsortedArray","uniqueA","uniqueB","comparers","title","uniqueItems","minLength","minItems","minProperties","required","enum","anyOf","allOf","patternProperties","dependencies","acceptsUndefined","schemaProps","ignore","allKeys","innerCompare","aValue","bValue","comparer","cloneDeep","computeLcm","defaultsDeep","flattenDeep","intersection","pullAll","without","withoutArr","isPropertyRelated","contains","propertyRelated","isItemsRelated","itemsRelated","isEmptySchema","isFalse","isTrue","schemaResolver","compacted","mergeSchemas","notUndefined","allUniqueKeys","maximumValue","minimumValue","getAllOf","allSchema","getValues","schemas","getItemSchemas","subSchemas","sub","schemaAtPos","additionalItems","getAnyOfCombinations","arrOfArrays","combinations","combination","throwIncompatible","asJSON","createRequiredSubMerger","parents","subKey","callGroupResolver","resolverName","resolvers","mergers","schemaGroupProps","itemsArray","returnObject","cleanupReturnValue","mergeSchemaGroup","group","extractor","createRequiredMetaArray","schemaArrays","defaultResolvers","normalized","ignoreAdditionalProperties","subSchema","otherSubSchemas","ownPatterns","allOtherKeys","keysMatchingPattern","pk","additionalProperties","ownPatternKeys","allOtherPatterns","childKey","childSchemas","innerCompacted","innerArrays","innerSchemas","arrayMetaScheams","schemasAtLastPos","itemsCompacted","schemaGroups","tryMergeSchemaGroups","unique","not","pattern","reportUnresolved","regexp","multipleOf","integers","factor","merger","rootSchema","totalSchemas","merged","propertyKeys","itemKeys","compareProp","defaultResolver","calledWithArray","unresolvedSchemas","newItems","mergeWithArray","addToAllOf","$id","$ref","$schema","examples","exclusiveMaximum","exclusiveMinimum","maximum","maxItems","maxLength","maxProperties","minimum","propertyNames","hasExcape","escapeMatcher","escapeReplacer","untilde","compilePointer","pointer","hasNextPart","oldValue","setter","compile","compiled","randomBytes","arrayEquals","array1","array2","ensureInt8","KBucket","localNodeId","numberOfNodesPerKBucket","numberOfNodesToPing","distance","arbiter","metadata","contacts","dontSplit","left","incumbent","candidate","vectorClock","firstId","secondId","contact","id","bitIndex","_determineNode","_indexOf","_split","closest","detNode","bytesDescribedByBitIndex","bitIndexWithinByte","selection","_createClass","Prop","_ref$default","defaultVal","_ref$triggerUpdate","triggerUpdate","_ref$onChange","onChange","newVal","_ref2$stateInit","stateInit","_ref2$props","rawProps","_ref2$methods","_ref2$aliases","aliases","_ref2$init","init","initFn","_ref2$update","updateFn","propName","initialised","changedProps","comp","nodeElement","initStatic","_ref3$triggerUpdate","redigest","_ref3$onChange","_ref3$defaultVal","curVal","getSetProp","_methods$methodName","resetProps","_rerender","CID_CBOR_TAG","encodeOptions","float64","typeEncoders","asCID","number","decodeOptions","allowIndefinite","coerceUndefinedToNull","allowNaN","allowInfinity","allowBigInt","strict","useMaps","rejectDuplicateMapKeys","tags","bytesEncoder","bytesString","cidString","DagJsonTokenizer","tokenBuffer","_next","keyToken","valueToken","innerKeyToken","innerValueToken","allowUndefined","tokenizer","utf8Decoder","utf8Encoder","TextEncoder","textDecoder","decodeVarint","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","fieldNum","byts","textEncoder","maxInt32","maxUInt32","encodeLink","isSafeInteger","encodeVarint","nameBytes","encodeNode","sov","sizeLink","sizeNode","len8tab","len64","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","hasOnlyProperties","asLink","pbl","prepare","createNode","createLink","linksBeforeData","decodeNode","defaultJsonSerializer","isExtractableFileEnhanced","isExtractableFile","variables","jsonSerializer","files","extractFiles","payload","accu","currentQuery","form","append","file","parseRequestExtendedArgs","urlOrOptions","variablesAndRequestHeaders","requestHeaders","extractOperationName","operationDefinitions","resolveRequestDocument","parsedDocument","ClientError","extractMessage","resolveHeaders","oHeaders","HeadersInstanceToPlainObject","cleanQuery","createHttpMethodFetcher","fetchOptions","middleware","queryParams","params_","encodeURIComponent","acc","buildRequestConfig","urlResolved","initResolved","urlNew","initNew","GraphQLClient","requestConfig","rawRequest","queryOrOptions","rawRequestOptions","parseRawRequestArgs","requestMiddleware","responseMiddleware","makeRequest","callOrIdentity","catch","documentOrOptions","requestOptions","parseRequestArgs","batchRequests","documentsOrOptions","batchRequestOptions","documents","parseBatchRequestArgs","queries","setHeaders","setEndpoint","fetcher","isBatchingQuery","getResult","successfullyReceivedData","successfullyPassedErrorPolicy","errorPolicy","contentType","text","own","nodeSchema","children","doctype","allowDoctypes","handleDoctypeName","allowComments","handleCommentValue","element","tagName","handleTagName","attrs","attributes","reqs","allowed","toPropertyValueMap","handlePropertyValues","handlePropertyValue","allow","sanitize","ctx","one","strip","tagNames","colon","questionMark","numberSign","slash","protocols","safeProtocol","clobberPrefix","clobber","defaultSchema","tbody","tfoot","thead","td","th","tr","cite","longDesc","img","li","div","blockquote","del","ins","disabled","htmlVoidElements","siblingAfter","siblings","siblingBefore","increment","includeWhitespace","omission","handlers","closing","html","headOrColgroupOrCaption","dt","dd","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","cells","opening","seen","previous","constants","unquoted","single","serializeAttribute","info","find","settings","allowParseErrors","space","allowDangerousCharacters","quote","overloadedBoolean","attribute","boolean","characterReferences","subset","commaSeparated","padLeft","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","ccount","alternative","handle","zwitch","invalid","unknown","_1","_2","bogusComments","$0","_3","upperDoctype","tightDoctype","omitOptionalTags","selfClosing","closeEmptyElements","voids","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","allowDangerousHtml","toHtml","options_","entities","pathSepS","pathSepB","pathSep","Key","clean","_buf","uint8Array","byte","nanoid","less","list1","list2","withNamespaces","namespaces","baseNamespace","ns","namespaceType","namespaceValue","isAncestorOf","isDecendantOf","isTopLevel","InternMap","keyof","_intern","intern_get","intern_set","intern_delete","InternSet","boundry","includeBoundaries","v4","v6segment","v6","v46Exact","v4exact","v6exact","ipRegex","exact","$Reader","$Writer","$util","$root","ks","UnixTime","fromObject","fromValue","toObject","arrays","valuesById","Seconds","FractionalNanoseconds","MimeType","parseMode","parseMtime","secs","nsecs","getTime","normaliseCandidateMultiple","normaliseContent","peekable","toFileObject","toAsyncIterable","toBytes","byteOffset","normaliseInput","normaliseCandidateSingle","isBytes","isBlob","isFileObject","isReadableStream","LOAD_BASE","Multibases","_basesByName","_basesByPrefix","_loadBase","loadBase","bases","addBase","removeBase","nameOrPrefix","listBases","LOAD_CODEC","codeOrName","Multicodecs","_codecsByName","_codecsByCode","_loadCodec","loadCodec","codec","codecs","addCodec","removeCodec","table","listCodecs","LOAD_HASHER","Multihashes","_hashersByName","_hashersByCode","_loadHasher","loadHasher","hasher","hashers","addHasher","removeHasher","listHashers","itToBlob","modeToString","multipartRequest","formData","total","fileSuffix","fieldName","qs","toPin","pin","recursive","toUrlString","PBData","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","UnixFS","marshaled","objects","_originalMode","_mode","isDirectory","parsedMode","pbData","NotInitializedError","AlreadyInitializingError","AlreadyInitializedError","NotStartedError","AlreadyStartingError","AlreadyStartedError","NotEnabledError","pathPattern","subdomainGatewayPattern","fqdnWithTld","isIpfs","protocolMatch","hashMatch","formatted","convertToString","isIpns","ipnsId","ipnsPath","withTimeoutOption","optionsArgIndex","controller","TimeoutController","fnRes","timeoutPromise","_resolve","addEventListener","maybeThrowTimeoutError","aborted","it","race","IPFS_PREFIX","toCidAndPath","OFFLINE_ERROR","MFS_ROOT_KEY","normalizeCidPath","resolvePath","repo","ipfsPath","lastCid","lastRemainderPath","mapFile","unixfs","withTimeout","load","getCodec","service","activate","ready","panic","deactivate","use","try","maxSize","lru","hashlru","expire","ttl","httpQueue","concurrency","Path","Message","createDns","fqdn","nocache","resolveDnslink","fqdnFixups","createResolve","resolvedPath","cidBase","getBase","parseBytes","encoder","PinTypes","direct","indirect","PinAPI","addAll","pinAdd","pins","isPinnedWithType","pinRecursively","pinDirectly","lock","gcLock","readLock","createAddAll","createAdd","rmAll","pinned","unpin","createRmAll","rm","createRm","ls","matched","recursiveKeys","indirectKeys","directKeys","createLs","remote","ERR_UNRECOGNIZED_VALIDITY","ERR_SIGNATURE_VERIFICATION","ERR_UNDEFINED_PARAMETER","original","patchReader","patchWriter","CODEC_TYPES","createCodec","IpnsEntry","ValidityType","__ValidityTypeValues","_codec","findValue","VARINT","enumValue","enumeration","LENGTH_DELIMITED","lengthDelimited","signature","validityType","validity","sequence","pubKey","signatureV2","encodeMessage","decodeMessage","IPNS_PREFIX","parseRFC3339","time","rfc3339Matcher","year","month","date","hour","minute","millisecond","UTC","ipnsEntryDataForV2Sig","entryData","peerIdToRoutingKey","peerId","ID_MULTIHASH_CODE","identity","namespace","namespaceLength","_create","seq","expirationDate","isoValidity","privateKey","unmarshalPrivateKey","signatureV1","signLegacyV1","Value","Validity","Sequence","TTL","cborg","createCborData","sigData","publicKey","getLocalKey","base32upper","rawStdEncoding","dataForSignature","validityTypeBuffer","ipnsEntryDataForV1Sig","ERR_NOT_FOUND","notFoundError","defaultRecordLifetime","IpnsPublisher","routing","datastore","_routing","_datastore","lifetime","record","_updateOrCreateRecord","_putRecordToRouting","publish","publishWithEOL","errMsg","routingKey","_publishEntry","checkRouting","dsVal","_unmarshalData","getPublishedOptions","_getPublished","seqNumber","lifetimeNs","IpnsRepublisher","publisher","keychain","pass","_publisher","_peerId","_keychain","_republishHandle","republishHandle","_task","_inflightTask","_timeoutId","runPeriodically","period","firstRun","timeoutController","_republishEntries","initialBroadcastInterval","broadcastInterval","_republishEntry","listKeys","pem","exportKey","privKey","importKey","peerIdKey","public","_getPreviousValue","notFound","validateCborDataMatchesPbData","parseCborData","ipnsValidator","marshalledData","peerIdFromRoutingKey","receivedEntry","unmarshalPublicKey","extractPublicKey","verify","validityDate","IpnsResolver","nameSegments","_resolveName","_validateRecord","ipnsEntry","IPNS","republisher","ttEol","parseFloat","ipnsSelector","aSeq","bSeq","aValidty","bValidty","entryAValidityDate","entryBValidityDate","IpnsPubsubDatastore","pubsub","localDatastore","_subscriptions","_handleSubscriptionKey","_pubsubDs","stringifiedTopic","base58","base58btc","subscriber","getSubscriptions","canceled","bufTopic","unsubscribe","OfflineDatastore","stores","_routingKey","DHTDatastore","dht","_dht","IPNSAPI","offline","online","getIPNS","ipns","startOffline","libp2p","ipnsStores","pubsubDs","offlineDatastore","createRouting","initializeKeyspace","createPublish","isOnline","lookupKey","keyName","pathStr","normalizePath","pubLifetime","toFixed","mergeOptions","appendRemainder","getPubsubRouting","ipnsPubsub","PubSubAPI","experimental","EXPERIMENTAL","createCancel","enabled","createState","subs","createSubs","NameAPI","dns","ipnsName","base36","Format","edges","createRefs","preload","maxDepth","signals","getFullPath","refsStream","resPath","rootCid","uniqueOnly","traverseLevel","nextLevelDepth","isDagPb","getLinks","isDuplicate","objectStream","formatLink","srcCid","dstCid","linkName","elementPath","createLocal","queryKeys","createStat","network","bitswap","snapshot","stat","provideBufLen","providesBufferLength","blocksReceived","wantlist","getWantlist","peers","dupBlksReceived","dupDataReceived","dataReceived","blocksSent","dataSent","BitswapAPI","createWantlist","wantlistForPeer","createWantlistForPeer","unwant","cids","createUnwant","isValidMultiaddr","ma","Addresses","Swarm","Announce","NoAnnounce","API","Gateway","RPC","Delegates","Discovery","MDNS","Enabled","Interval","webRTCStar","Bootstrap","Pubsub","ConnMgr","LowWater","HighWater","DisableNatPortMap","Routing","BootstrapAPI","multiaddr","config","getAll","boostrappers","localeCompare","Peers","createList","removed","createClear","createReset","cleanCid","BlockAPI","createGet","cidVersion","codecName","getHasher","mhtype","createPut","writeLock","force","quiet","batch","things","parallelBatch","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","leafType","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","hidden","hamtHashFn","hamtHashCode","hamtBucketBits","blockstore","reduceToParents","chunked","Root","iteration","subTree","layer","isFull","addChild","SubTree","currentDepth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","dagBuilders","flat","balanced","trickle","dagBuilder","bufferImporter","buildFileBatch","leaves","leaf","curr","avg","sizepow","log2","buffers","sizes","fingerprint","currentLength","emitted","newBl","sublist","contentAsAsyncIterable","chunkValidator","rabin","dir","dirty","parentKey","_children","childCount","directChildrenCount","onlyChild","Bucket","posAtParent","_popCount","_parent","_posAtParent","place","_findNewBucketAndPos","bucket","_putAt","_findChild","_findPlace","_at","_delAt","leafCount","compactArray","childrenCount","eachLeafSeries","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","take","existingChild","_putObjectAt","newPlace","unset","_level","exists","untake","mappedChildren","bitField","START_MASKS","STOP_MASKS","ConsumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","createHAMT","bucketOptions","_bucket","shardRoot","childrenSize","labelPrefix","shard","subShard","flushedDir","flatToShard","threshold","newDir","oldDir","eachChildSeries","convertToShard","addToTree","elem","pathElems","lastIndex","currentPath","pathElem","flushAndYield","unwrapped","importer","treeBuilder","candidates","parseChunkerString","sizeStr","parseRabinString","parseChunkSize","isShardingEnabled","sharding","totals","prog","transformFile","toV1","maybePreloadFile","preloadFile","maybePinFile","isRootDir","pinFile","added","toPrefix","findShardCid","context","rootBucket","hamtDepth","lastBucket","addLinksToHamtBucket","bucketPath","toBucketPath","entryPrefix","entryName","blockStart","requestedStart","requestedEnd","blockEnd","walkDAG","queue","streamPosition","walkQueue","childOps","childLink","childStart","childEnd","ordered","listDirectory","contentExporters","raw","directory","symlink","toResolve","linkCid","findLinkCid","nextName","subObject","subPath","subObjectCid","cidAndRest","walkPath","entryPath","startingDepth","exporter","recurse","toBuffer","USTAR_VER","MASK","toTypeflag","encodeOct","addLength","digits","typeflag","linkname","uid","gid","uname","gname","devmajor","devminor","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","DMODE","FMODE","END_OF_TAR","modeToType","header","pax","paxHeader","newHeader","pack","partialHeader","written","RootAPI","cat","pathComponents","createCat","compressionLevel","ipfsPathOrCid","compress","archive","legacyPath","ipfsCore","createId","net","addresses","agentVersion","protocolVersion","peerIdToId","peer","peerStore","findPeer","findPeerOnDht","keyBook","getPublicKey","idStr","objectSafeSet","propsArg","lastProp","thisProp","prototypeCheck","server","defaultConfig","lowpower","listProfiles","createHeader","headerBytes","varintBytes","varint","Kinds","Null","Int","Float","Bool","Bytes","Link","List","Types","CarHeader","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","V2_HEADER_LENGTH","seeker","seek","readHeader","strictVersion","upTo","exactly","hasRoots","v2Header","dv","DataView","characteristics","getBigUint64","dataOffset","dataSize","indexOffset","decodeV2Header","v1Header","readCid","codeLength","getMultihashLength","readBlockHead","blockLength","readBlock","readBlockIndex","blockOffset","createDecoder","headerPromise","v1length","byteLimit","bytesRead","limitReader","bytesReader","asyncIterableReader","asyncIterable","readChunk","have","currentChunk","bufa","chunkReader","CarWriter","_encoder","_mutex","setRoots","_ended","writeBlock","close","_roots","_root","toRoots","encodeWriter","CarWriterOut","_iterator","_iterating","iw","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","createEncoder","NO_LINKS_CODECS","createExport","makeLoader","CarIteratorBase","_version","_iterable","_decoded","CarBlockIterator","fromBytes","fromIterable","CarCIDIterator","decodeIterator","importCar","getRoots","putMany","DagAPI","export","localResolve","import","sources","abortOptions","cars","car","pinRoots","pinErrorMsg","createImport","storeCodec","inputCodec","createPreloader","api","stopped","requests","apiUris","fallbackApiUris","success","uri","createLock","repoOwner","mutex","singleProcess","loadMfsRoot","toMfsPath","entryType","mfsDirectory","mfsPath","cidPath","withLocal","exportPath","statters","cumulativeSize","local","sizeLocal","withLocality","toTrail","fsEntry","updateHamtDirectory","recreateHamtLevel","parentBucket","positionAtParent","recreateInitialHamtLevel","subBucket","parentCid","meta","addToShardedDirectory","convertToShardedDirectory","addToDirectory","contents","createShard","parentLinks","addFileToShardedDirectory","newLink","round","segment","nextSegment","positionInBucket","updateTree","trail","getMany","updateMfsRoot","createMkdir","emptyDir","subPathComponents","addEmptyDir","newRootCid","childName","createCp","destination","missing","destinationIsDirectory","parentFolder","destinationPath","destinationName","copyToFile","copyToDirectory","destinationTrail","addSourceToParent","sourceBlock","removeFromDirectory","parentBlock","removeFromShardedDirectory","fileName","rootNode","currentBucket","generatePath","updateShard","nodeLink","newName","updateShardParent","oldName","removePath","removeLink","parseSymbolicMode","originalMode","references","operator","modification","calculateModification","ugo","calculateUGO","calculateSpecial","calculateMode","strMode","truncate","updateOrImport","parentExists","updatedPath","parentNode","asyncZeroes","limitAsyncStreamBytes","countBytesStreamed","catAsyncIterators","bytesWritten","limit","chunkSize","_asyncZeroes","notify","wrote","toOutput","readOperations","writeOperations","chmod","updatedBlock","updatedCid","mkdir","mv","touch","unwrappedOperations","toAsyncIterator","mfs","operations","createFiles","constructorOptions","createMfs","withPreload","DEFAULT_KEY_TYPE","KeyAPI","gen","createKey","createGen","removeKey","rename","renameKey","was","overwrite","createRename","findKeyByName","createInfo","findLinks","createLinks","ObjectPatchAPI","createAddLink","appendData","newData","createAppendData","createRmLink","setData","createSetData","ObjectAPI","createData","new","template","createNew","linkLength","NumLinks","BlockSize","LinksSize","DataSize","CumulativeSize","patch","stats","numObjects","repoSize","repoPath","storageMax","repoVersion","RepoAPI","gc","mfsRootCid","createGc","_checkInitialized","setApiAddr","apiAddr","getBandwidthStats","totalIn","totalOut","rateIn","rateOut","StatsAPI","bw","poll","interval","timeoutId","createBw","objectSafeGet","unwrap","keyToMultihash","base32","multihashStr","keyToCid","backends","onProgress","keyFunction","filters","newKey","migration","migrate","revert","ipfs","PIN_DS_KEY","DEFAULT_FANOUT","MAX_ITEMS","EMPTY_KEY","cidToKey","PinSet","walkItems","pbh","rootData","hdrLength","vBytes","hdrSlice","linkHash","loadSet","storeItems","storePins","pbHeader","headerBuf","fanoutLinks","rootLinks","bins","setUint32","encodedKey","fnv1a","bin","storeChild","binIdx","storeSet","pinsToDatastore","pinstore","pinRootBuf","pinRoot","pinCount","pinsToDAG","recursivePins","directPins","CONFIG_KEY","VERSION_KEY","findLevelJs","store","db","wrapStore","originalGet","originalHas","levelJs","transaction","oncomplete","getWithFallback","hasWithFallback","wrapBackends","keysToBinary","withEach","keysToStrings","datastores","backend","migrated","_deserializeKey","_deserializeValue","handleNext","handleEnd","loop","onsuccess","Protocols","addrs","certifiedRecord","Address","CertifiedRecord","$oneOfFields","isCertified","oneofs","_isCertified","Peer","peerRecordEnvelope","_pubKey","_peerRecordEnvelope","Envelope","payloadType","PeerRecord","AddressInfo","keyStr","metadataKey","protos","envelope","emptyMigration","empty","NonReversibleMigrationError","NotInitializedRepoError","RequiredParameterError","InvalidValueError","MissingRepoOptionsError","getVersion","versionCheck","configCheck","isRepoInitialized","setVersion","repoOptions","toVersion","ignoreLock","isDryRun","migrations","currentVersion","verifyAvailableMigrations","repoLock","progressCallback","percent","lastSuccessfullyMigratedVersion","getLatestMigrationVersion","fromVersion","checkReversibility","migrationCounter","LockExistsError","NotFoundError","InvalidRepoVersionError","ERR_REPO_NOT_INITIALIZED","versionKey","configKey","specKey","apiFile","extractContents","isIdentity","lockFile","LOCKS","MemoryLock","locked","autoMigrate","onMigrationProgress","Spec","mounts","mountpoint","shardFunc","compression","walkDag","childCid","QuickLRU","maxAge","POSITIVE_INFINITY","onEviction","oldCache","_emitEvictions","_deleteIfExpired","expiry","_getOrDeleteIfExpired","_getItemValue","_peek","_set","_moveToRecent","deleted","resize","newSize","_entriesAscending","removeCount","oldCacheSize","entriesAscending","callbackFunction","thisArgument","PinManager","fetchCompleteDag","findChild","cidCacheMaxSize","invalidPinTypeErr","ensureNotPinned","markedSet","mfsSource","pinsSource","createMarkedSet","blockKeys","blocksCount","removedBlocksCount","removeBlock","deleteUnmarkedBlocks","noLimit","Repo","pinnedBlockstore","pairs","deleteMany","extracted","commit","createIdStore","setQueue","configStore","encodedValue","_maybeDoSet","_saveAll","spec","deep","_config","_openRoot","Datastore","mounting","buildDatastoreSpec","_lockfile","_openLock","check","_isAutoMigrationEnabled","_migrate","_closeLock","lockfile","_storageMaxStat","_blockStat","getSize","autoMigrateConfig","reversedMigrationArray","lastSuccessfullyRevertedVersion","routers","gossipsub","fallbackToFloodsub","emitSelf","maxInboundStreams","maxOutboundStreams","DEFAULT_PROTOCOL","DEFAULT_HOST","DEFAULT_PORT","errorHandler","KEBAB_REGEX","kebabCase","Client","agent","apiPath","Agent","keepAlive","maxSockets","normalizeOptions","toUrlSearchParams","mtimeNsecs","urlSearchParams","Keys","ProvideBufLen","Wantlist","BlocksReceived","DataReceived","BlocksSent","DataSent","DupBlksReceived","DupDataReceived","toCoreInterface","createBitswap","abortSignal","createBlock","createBootstrap","createApply","profile","OldCfg","updated","NewCfg","objectToCamel","caps","camelObj","createProfiles","createGetAll","createReplace","createSet","encodeParam","profiles","getBlock","Cid","PinErrorMsg","RemPath","createDag","mapEvent","ID","messageType","messageName","closer","Responses","Addrs","multiaddrs","providers","Extra","createFindPeer","createFindProvs","createProvide","cidArr","createQuery","createDht","findProvs","provide","createCmds","createNet","createSys","createDiag","cmds","sys","sourceArr","objectToCamelWithMetadata","long","Entries","WithLocality","streamChannels","createLevel","subsystem","Strings","createTail","createLog","createPubsub","createName","dataEncoding","dagPut","dLink","createPatch","createObject","Pins","decodePin","Status","encodeService","encodeCID","encodeQuery","encodeAddParams","background","origins","client","encodeEndpoint","decodeRemoteService","endpoint","ApiEndpoint","Stat","decodeStat","Pinning","Pinned","Queued","Failed","PinCount","queued","pinning","failed","RemoteServices","createService","createRemote","createPin","rpcToText","mb","rpcToBytes","base64url","rpcToBigInt","textToUrlSafeRpc","strings","createPeers","topic","createSubscribe","subsTracker","handler","fail","subscribe","ffWorkaround","onMessage","onEnd","onError","seqno","sequenceNumber","topicIDs","isAbortError","readMessages","createUnsubscribe","SubscriptionTracker","_subs","topicSubs","unsubs","subscriptionTracker","argsArr","NumObjects","RepoSize","RepoPath","Version","StorageMax","TotalIn","TotalOut","RateIn","RateOut","createStats","createAddrs","createConnect","createDisconnect","createLocalAddrs","Addr","muxer","Muxer","latency","Latency","Streams","direction","Direction","createSwarm","connect","disconnect","localAddrs","progressFn","createProgressHandler","createOnUploadProgress","loaded","createCommands","createGetEndpointConfig","mapLink","typeOf","Mode","Mtime","MtimeNsecs","Objects","createMount","createPing","getDOMException","errorMessage","DOMException","getAbortedReason","socketToMaConn","remoteAddr","maConn","sink","timeline","milliseconds","customTimers","timer","cancelablePromise","timeoutError","pTimeout","toOptions","socket","isV4","isV6","ip","sections","v4Buffer","argv","view","getUint16","names","getProtocol","row","resolvable","createProtocol","ipBuff","ipString","bytes2ip","bytes2str","bytes2port","bytes2mh","bytes2onion","bytes2mb","convertToBytes","ip2bytes","str2bytes","port2bytes","mh2bytes","portBuf","onion2bytes","onion32bytes","mbstr","anybaseDecoder","mb2bytes","decoders","or","setUint16","addrBytes","portBytes","tuplesToStringTuples","tuples","tup","protoFromTuple","tuplesToBytes","sizeForAddr","bytesToTuples","ParseError","bytesToString","cleanPath","stringTuplesToString","stringToBytes","stringToStringTuples","validateBytes","_DefaultMultiaddr_string","_DefaultMultiaddr_tuples","_DefaultMultiaddr_stringTuples","_a","__classPrivateFieldGet","receiver","__classPrivateFieldSet","DNS_CODES","symbol","DefaultMultiaddr","family","transport","zone","tcp","udp","ip4","ip6","dns6","ip6zone","stringTuples","protoCodes","protoNames","encapsulate","decapsulate","addrString","decapsulateCode","getPeerId","tuple","peerIdStr","getPath","resolvableProto","nodeAddress","isThinWaistAddress","WeakMap","DNS4","DNS6","DNSADDR","DNS","IP","TCP","and","UDP","UTP","QUIC","WebSockets","WebSocketsSecure","HTTPS","_WebRTCDirect","WebRTCDirect","P2PWebRTCStar","P2PWebRTCDirect","Reliable","_P2P","_Circuit","CircuitRecursive","Circuit","makeMatchesFunction","partialMatch","matches","pnames","_connect","conn","upgrader","upgradeOutbound","cOpts","errorPromise","errfn","rawSocket","connected","onAbort","removeEventListener","createListener","testMa","concatArrays","createLibp2p","keychainConfig","libp2pOptions","getPubsubRouter","router","availableRouters","libp2pDefaults","listen","announce","noAnnounce","connectionManager","maxConnections","minConnections","identify","contentRouters","peerRouters","peerDiscovery","transports","streamMuxers","connectionEncryption","relay","hop","active","nat","clientMode","kBucketSize","validators","selectors","boostrapNodes","libp2pFinalConfig","webRtcStar","discovery","maxParallelDials","maxDialsPerPeer","dialTimeout","autoDial","delegateHosts","delegateString","random","delegateAddr","delegateHttpClient","multibaseCodecs","ipld","multibases","blockCodecs","multicodecs","multihashHashers","multihashes","bootstrap","commands","dag","diag","getEndpointConfig","mount","ping","refs","swarm","webSockets","getLibp2pOptions","Storage","isNew","repoAutoMigrate","inputRepo","loadRepo","configureRepo","allowNew","initRepo","initOptions","decodePeerId","initPeerId","peerIdToIdentity","PeerID","applyProfiles","Identity","dek","importPeer","DEK","rawPrivateKey","PrivKey","changed","mergeConfigs","Keychain","changes","WantListEntry","priority","wantType","_refCounter","inc","dec","hasRefs","blockPresences","pendingBytes","Block","BlockPresence","getTypeUrl","typeUrlPrefix","full","Entry","WantType","sendDontHave","BlockPresenceType","Have","metrics","_stats","cidStr","removeForce","sortedEntries","aa","bb","WantlistEntry","BitswapMessageEntry","logger","isMapEqual","valueA","valueB","BitswapMessage","addEntry","addBlock","addHave","addDontHave","DontHave","setPendingBytes","serializeToBitswap100","serializeToBitswap110","digestLength","bpType","hashLoader","blockPresence","blockPresenceSize","kMaxPriority","functionDebounce","wait","callFirst","debouncedFn","debounceWrapper","callNow","MsgQueue","selfPeerId","otherPeerId","refcnt","_entries","_log","sendEntries","_sendEntries","addMessage","addEntries","connectTo","sendMessage","WantManager","_addEntries","_startPeerHandler","mq","fullwantlist","_stopPeerHandler","wantBlocks","cancelWants","unwantBlocks","connectedPeers","disconnected","BITSWAP100","BITSWAP110","BITSWAP120","Network","_libp2p","_bitswap","_protocols","b100Only","_running","_onPeerConnect","_onPeerDisconnect","_onConnection","_hashLoader","_maxInboundStreams","_maxOutboundStreams","_incomingStreamTimeout","incomingStreamTimeout","topology","onConnect","onDisconnect","_registrarIds","register","getConnections","remotePeer","unhandle","unregister","connection","_receiveMessage","_receiveError","finally","_onPeerConnected","_onPeerDisconnected","findProviders","contentRouting","connectAttempts","found","provider","stringId","dial","newStream","writeMessage","_updateSentStats","Ledger","partner","exchangeCount","sentToPeer","accounting","bytesSent","bytesRecv","sentBytes","lastExchange","receivedBytes","wants","cancelWant","wantlistContains","debtRatio","SortedMap","cmp","_cmp","_defaultSort","_keys","newIdx","_find","lower","upper","pivot","_kCmp","thisArg","DefaultTaskMerger","hasNewInfo","RequestQueue","taskMerger","_taskMerger","_byPeer","PeerTasks","pushTasks","peerTasks","popTasks","targetMinBytes","_head","pendingSize","isIdle","tasksDone","taskDone","_activeTotalSize","_pending","PendingTasks","_active","_pushTask","_taskHasMoreInfoThanActiveTasks","existingTask","updatePriority","tasksWithTopic","activeTask","pendingTasks","totalSize","_tasks","_compare","created","TaskMerger","haveBlock","isWantBlock","existing","newTask","taskData","existingData","DecisionEngine","_opts","_processOpts","ledgerMap","_requestQueue","maxSizeReplaceHasWithBlock","targetMessageSize","_scheduleProcessTasks","_processTasks","blockCids","blockTasks","_getBlocks","blk","messageSent","ledger","ledgerForPeer","sent","recv","exchanged","receivedBlocks","want","_sendAsBlock","entrySize","_findOrCreate","_updateBlockAccounting","cancels","_cancelWants","_addWants","_getBlockSizes","blocksMap","numBytesSentTo","numBytesReceivedFrom","peerDisconnected","unwantEvent","blockEvent","Notifications","setMaxListeners","hasBlock","wantBlock","blockEvt","unwantEvt","onUnwant","onBlock","unwantBlock","initialCounters","_queue","_frequencyLastTime","_frequencyAccumulators","_movingAverages","movingAverageIntervals","_enabled","enable","disable","_disabled","_timeout","movingAverages","_resetComputeTimeout","_nextTimeout","urgency","computeThrottleMaxQueueSize","computeThrottleTimeout","_applyOp","_updateFrequency","latestTime","timeDiff","_updateFrequencyFor","timeDiffMS","hz","movingAverageInterval","movingAverage","Stats","_initialCounters","_global","_peers","peerStat","forPeer","peerStats","statsEnabled","statsComputeThrottleTimeout","statsComputeThrottleMaxQueueSize","statsKeys","Bitswap","engine","wm","notifications","started","isStarted","incoming","messageReceived","received","wasWanted","_handleReceivedBlock","_updateReceiveCounters","enableStats","disableStats","fetchFromNetwork","promptedNetwork","loadOrFetchFromNetwork","findAndConnect","cidsArray","_sendHaveBlockNotifications","BlockStorage","missingBlocks","getFromBitswap","getFromChild","readAddrs","getMultiaddrs","WEBSOCKET_STAR_PROTO_CODE","maId","SwarmAPI","mi","multiaddrOrPeerId","hangUp","verbose","multiplexer","basePacket","toDHTKey","getClosestPeers","notEnabled","storage","createIsOnline","mfsPreload","preloadMfs","nextRootCid","createMfsPreloader","startOnline","createStart","createStop","dhtKey","peerIdToFind","peerIdToQuery","asCid","isEnabled","evt","detail","getTopics","getSubscribers","createVersion","profileName","dryRun","oldCfg","newCfg","createConfig","storedPeer","peerRouting","packetCount","totalTime","average","notImplemented","emptyRepo","isLoopbackAddr","DEFAULT_BATCH_SIZE","DEFAULT_SERIALIZE","deferred","yieldAfter","drain","handshake","sourcePromise","sinkErr","sinkPromise","defaultEncoder","lengthLength","lengthBuf","encodeLength","lengthEncoder","MAX_LENGTH_LENGTH","MAX_DATA_LENGTH","ReadMode","defaultDecoder","dataLength","lengthDecoder","maxLengthLength","maxDataLength","dataLengthLength","onLength","DATA","onData","fromReader","varByteSource","pair","piped","duplexPair","CustomEvent","Event","parallel","EventTarget","ops","sourceErr","slotAvailable","resultAvailable","sourceFinished","opErred","valuesAvailable","yieldOrderedValues","yieldUnOrderedValues","dispatchEvent","pbStream","shake","lpReader","readLP","readPB","writeLP","writePB","pb","peekableIterator","rawPipe","fns","isIterable","duplexPipelineFn","sourceWrap","FixedFIFO","top","btm","isEmpty","FIFO","splitLimit","calculateSize","pushable","_pushable","pushableV","getNext","onNext","bufferNext","bufferError","throw","readableLength","sorter","isArrayBuffer","readyState","cleanup","handleOpen","handleErr","closeOnEnd","wasClean","connectedSource","binaryType","isConnected","connError","cleanUp","cont","onOpen","messages","remoteAddress","remotePort","CONNECTING","OPEN","terminate","websocket"],"sourceRoot":""}