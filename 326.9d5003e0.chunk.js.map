{"version":3,"file":"326.9d5003e0.chunk.js","mappings":"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M,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,EAC1F,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAC1F,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAC1F,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,KAGxF51B,EAAI,CAAC,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","sources":["webpack://cyb/./node_modules/@multiformats/base-x/src/index.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/varint/length.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/varint/length.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/varint/length.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/decode.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/encode.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/node_modules/varint/length.js","webpack://cyb/./node_modules/@protobufjs/aspromise/index.js","webpack://cyb/./node_modules/@protobufjs/base64/index.js","webpack://cyb/./node_modules/@protobufjs/eventemitter/index.js","webpack://cyb/./node_modules/@protobufjs/float/index.js","webpack://cyb/./node_modules/@protobufjs/inquire/index.js","webpack://cyb/./node_modules/@protobufjs/pool/index.js","webpack://cyb/./node_modules/@protobufjs/utf8/index.js","webpack://cyb/./node_modules/@socket.io/component-emitter/index.mjs","webpack://cyb/./node_modules/@stablelib/binary/lib/binary.js","webpack://cyb/./node_modules/@stablelib/chacha/lib/chacha.js","webpack://cyb/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js","webpack://cyb/./node_modules/@stablelib/constant-time/lib/constant-time.js","webpack://cyb/./node_modules/@stablelib/hash/lib/hash.js","webpack://cyb/./node_modules/@stablelib/hkdf/lib/hkdf.js","webpack://cyb/./node_modules/@stablelib/hmac/lib/hmac.js","webpack://cyb/./node_modules/@stablelib/int/lib/int.js","webpack://cyb/./node_modules/@stablelib/poly1305/lib/poly1305.js","webpack://cyb/./node_modules/@stablelib/random/lib/random.js","webpack://cyb/./node_modules/@stablelib/random/lib/source/browser.js","webpack://cyb/./node_modules/@stablelib/random/lib/source/node.js","webpack://cyb/./node_modules/@stablelib/random/lib/source/system.js","webpack://cyb/./node_modules/@stablelib/sha256/lib/sha256.js","webpack://cyb/./node_modules/@stablelib/wipe/lib/wipe.js","webpack://cyb/./node_modules/@stablelib/x25519/lib/x25519.js","webpack://cyb/./node_modules/@vascosantos/moving-average/index.js","webpack://cyb/./node_modules/ms/index.js","webpack://cyb/./node_modules/murmurhash3js-revisited/index.js","webpack://cyb/./node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","webpack://cyb/./node_modules/native-fetch/src/index.js","webpack://cyb/./node_modules/netmask/lib/netmask.js","webpack://cyb/./node_modules/node-fetch/browser.js","webpack://cyb/./node_modules/node-forge/lib/aes.js","webpack://cyb/./node_modules/node-forge/lib/asn1.js","webpack://cyb/./node_modules/node-forge/lib/baseN.js","webpack://cyb/./node_modules/node-forge/lib/cipher.js","webpack://cyb/./node_modules/node-forge/lib/cipherModes.js","webpack://cyb/./node_modules/node-forge/lib/des.js","webpack://cyb/./node_modules/node-forge/lib/forge.js","webpack://cyb/./node_modules/node-forge/lib/hmac.js","webpack://cyb/./node_modules/node-forge/lib/jsbn.js","webpack://cyb/./node_modules/node-forge/lib/md.js","webpack://cyb/./node_modules/node-forge/lib/mgf.js","webpack://cyb/./node_modules/node-forge/lib/mgf1.js","webpack://cyb/./node_modules/node-forge/lib/oids.js","webpack://cyb/./node_modules/node-forge/lib/pbe.js","webpack://cyb/./node_modules/node-forge/lib/pbkdf2.js","webpack://cyb/./node_modules/node-forge/lib/pem.js","webpack://cyb/./node_modules/node-forge/lib/pkcs1.js","webpack://cyb/./node_modules/node-forge/lib/pkcs7.js","webpack://cyb/./node_modules/node-forge/lib/pkcs7asn1.js","webpack://cyb/./node_modules/node-forge/lib/prime.js","webpack://cyb/./node_modules/node-forge/lib/prng.js","webpack://cyb/./node_modules/node-forge/lib/pss.js","webpack://cyb/./node_modules/node-forge/lib/random.js","webpack://cyb/./node_modules/node-forge/lib/rc2.js","webpack://cyb/./node_modules/node-forge/lib/rsa.js","webpack://cyb/./node_modules/node-forge/lib/sha1.js","webpack://cyb/./node_modules/node-forge/lib/sha256.js","webpack://cyb/./node_modules/node-forge/lib/sha512.js","webpack://cyb/./node_modules/node-forge/lib/util.js","webpack://cyb/./node_modules/node-forge/lib/x509.js","webpack://cyb/./node_modules/node-polyfill-webpack-plugin/node_modules/buffer/index.js","webpack://cyb/./node_modules/object-is/implementation.js","webpack://cyb/./node_modules/object-is/index.js","webpack://cyb/./node_modules/object-is/polyfill.js","webpack://cyb/./node_modules/object-is/shim.js","webpack://cyb/./node_modules/object-keys/implementation.js","webpack://cyb/./node_modules/object-keys/index.js","webpack://cyb/./node_modules/object-keys/isArguments.js","webpack://cyb/./node_modules/p-fifo/index.js","webpack://cyb/./node_modules/p-fifo/node_modules/p-defer/index.js","webpack://cyb/./node_modules/p-queue/node_modules/eventemitter3/index.js","webpack://cyb/./node_modules/pako/dist/pako.esm.mjs","webpack://cyb/./node_modules/parse-duration/index.mjs","webpack://cyb/./node_modules/process/browser.js","webpack://cyb/./node_modules/protobufjs/minimal.js","webpack://cyb/./node_modules/protobufjs/src/index-minimal.js","webpack://cyb/./node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/protobufjs/src/roots.js","webpack://cyb/./node_modules/protobufjs/src/rpc.js","webpack://cyb/./node_modules/protobufjs/src/rpc/service.js","webpack://cyb/./node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/reader.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/reader_buffer.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/util/longbits.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/util/minimal.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/writer.js","webpack://cyb/./node_modules/protons-runtime/node_modules/protobufjs/src/writer_buffer.js","webpack://cyb/./node_modules/queue-microtask/index.js","webpack://cyb/./node_modules/rabin-wasm/dist/rabin-wasm.js","webpack://cyb/./node_modules/rabin-wasm/src/index.js","webpack://cyb/./node_modules/rabin-wasm/src/rabin.js","webpack://cyb/./node_modules/randombytes/browser.js","webpack://cyb/./node_modules/rate-limiter-flexible/index.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/BurstyRateLimiter.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RLWrapperBlackAndWhite.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterAbstract.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterMemcache.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterMemory.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterMongo.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterMySQL.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterPostgres.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterQueue.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterRedis.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterRes.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterStoreAbstract.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/RateLimiterUnion.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/component/BlockedKeys/BlockedKeys.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/component/BlockedKeys/index.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/component/MemoryStorage/MemoryStorage.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/component/MemoryStorage/Record.js","webpack://cyb/./node_modules/rate-limiter-flexible/lib/component/RateLimiterQueueError.js","webpack://cyb/./node_modules/readable-web-to-node-stream/lib/index.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/errors-browser.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/_stream_duplex.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/_stream_passthrough.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/_stream_readable.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/_stream_transform.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/_stream_writable.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/state.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://cyb/./node_modules/readable-web-to-node-stream/node_modules/readable-stream/readable-browser.js","webpack://cyb/./node_modules/receptacle/index.js","webpack://cyb/./node_modules/retimer/retimer.js","webpack://cyb/./node_modules/retimer/time-browser.js","webpack://cyb/./node_modules/retry/index.js","webpack://cyb/./node_modules/retry/lib/retry.js","webpack://cyb/./node_modules/retry/lib/retry_operation.js","webpack://cyb/./node_modules/run-parallel-limit/index.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/Subject.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/pipe.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/Observable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/noop.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/NotificationFactories.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/Subscriber.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/Subscription.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/config.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/empty.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/from.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/interval.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/timer.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/merge.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/of.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/observable/throwError.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/catchError.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/filter.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/operators/timeout.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/Scheduler.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/async.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/symbol/observable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/args.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/errorContext.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/identity.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isDate.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isFunction.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isIterable.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isPromise.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/lift.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","webpack://cyb/./node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","webpack://cyb/./node_modules/safe-buffer/index.js","webpack://cyb/./node_modules/sanitize-filename/index.js","webpack://cyb/./node_modules/set-delayed-interval/src/index.js","webpack://cyb/./node_modules/sparse-array/index.js","webpack://cyb/./node_modules/stream-to-it/source.js","webpack://cyb/./node_modules/string_decoder/lib/string_decoder.js","webpack://cyb/./node_modules/strnum/strnum.js","webpack://cyb/./node_modules/timeout-abort-controller/index.js","webpack://cyb/./node_modules/truncate-utf8-bytes/browser.js","webpack://cyb/./node_modules/truncate-utf8-bytes/lib/truncate.js","webpack://cyb/./node_modules/tslib/tslib.es6.js","webpack://cyb/./node_modules/utf8-byte-length/browser.js","webpack://cyb/./node_modules/util-deprecate/browser.js","webpack://cyb/./node_modules/util/support/isBufferBrowser.js","webpack://cyb/./node_modules/util/support/types.js","webpack://cyb/./node_modules/util/util.js","webpack://cyb/./node_modules/varint-decoder/src/index.js","webpack://cyb/./node_modules/varint/decode.js","webpack://cyb/./node_modules/varint/encode.js","webpack://cyb/./node_modules/varint/index.js","webpack://cyb/./node_modules/varint/length.js","webpack://cyb/./node_modules/which-typed-array/index.js","webpack://cyb/./node_modules/timestamp-nano/dist/timestamp.min.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/mafmt/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/mafmt/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/@multiformats/multiaddr-matcher/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/resolvers/dns.browser.js","webpack://cyb/./node_modules/@multiformats/multiaddr/dist/src/resolvers/index.js","webpack://cyb/./node_modules/@multiformats/murmur3/src/index.js","webpack://cyb/./node_modules/@nftstorage/ipfs-cluster/src/index.js","webpack://cyb/./node_modules/@noble/ciphers/esm/utils.js","webpack://cyb/./node_modules/@noble/ciphers/esm/_assert.js","webpack://cyb/./node_modules/@noble/ciphers/esm/_poly1305.js","webpack://cyb/./node_modules/@noble/ciphers/esm/_salsa.js","webpack://cyb/./node_modules/@noble/ciphers/esm/chacha.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/_u64.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha512.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/edwards.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/montgomery.js","webpack://cyb/./node_modules/@noble/curves/esm/ed25519.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha256.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/hmac.js","webpack://cyb/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://cyb/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://cyb/./node_modules/@noble/curves/esm/secp256k1.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/_assert.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/_sha2.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/crypto.js","webpack://cyb/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/utils.js","webpack://cyb/./node_modules/@noble/ed25519/lib/esm/index.js","webpack://cyb/./node_modules/@noble/secp256k1/lib/esm/index.js","webpack://cyb/./node_modules/multiformats/vendor/base-x.js","webpack://cyb/./node_modules/multiformats/src/bases/base.js","webpack://cyb/./node_modules/multiformats/src/bases/base32.js","webpack://cyb/./node_modules/multiformats/src/bases/base36.js","webpack://cyb/./node_modules/multiformats/src/bases/base58.js","webpack://cyb/./node_modules/multiformats/src/bases/base64.js","webpack://cyb/./node_modules/multiformats/src/bases/identity.js","webpack://cyb/./node_modules/multiformats/src/bases/base2.js","webpack://cyb/./node_modules/multiformats/src/bases/base8.js","webpack://cyb/./node_modules/multiformats/src/bases/base10.js","webpack://cyb/./node_modules/multiformats/src/bases/base16.js","webpack://cyb/./node_modules/multiformats/src/bases/base256emoji.js","webpack://cyb/./node_modules/multiformats/src/basics.js","webpack://cyb/./node_modules/multiformats/src/block.js","webpack://cyb/./node_modules/multiformats/src/bytes.js","webpack://cyb/./node_modules/multiformats/src/cid.js","webpack://cyb/./node_modules/multiformats/src/codecs/json.js","webpack://cyb/./node_modules/multiformats/src/codecs/raw.js","webpack://cyb/./node_modules/multiformats/src/hashes/digest.js","webpack://cyb/./node_modules/multiformats/src/hashes/hasher.js","webpack://cyb/./node_modules/multiformats/src/hashes/identity.js","webpack://cyb/./node_modules/multiformats/src/hashes/sha2-browser.js","webpack://cyb/./node_modules/multiformats/src/traversal.js","webpack://cyb/./node_modules/multiformats/vendor/varint.js","webpack://cyb/./node_modules/multiformats/src/varint.js","webpack://cyb/./node_modules/nanoid/index.browser.js","webpack://cyb/./node_modules/observable-webworkers/dist/src/index.js","webpack://cyb/./node_modules/p-defer/index.js","webpack://cyb/./node_modules/p-event/node_modules/p-timeout/index.js","webpack://cyb/./node_modules/p-event/index.js","webpack://cyb/./node_modules/p-queue/dist/priority-queue.js","webpack://cyb/./node_modules/p-queue/dist/lower-bound.js","webpack://cyb/./node_modules/p-queue/dist/index.js","webpack://cyb/./node_modules/p-reflect/index.js","webpack://cyb/./node_modules/p-settle/node_modules/yocto-queue/index.js","webpack://cyb/./node_modules/p-settle/node_modules/p-limit/index.js","webpack://cyb/./node_modules/p-settle/index.js","webpack://cyb/./node_modules/p-timeout/index.js","webpack://cyb/./node_modules/peek-readable/lib/EndOfFileStream.js","webpack://cyb/./node_modules/private-ip/lib/index.js","webpack://cyb/./node_modules/private-ip/index.js","webpack://cyb/./node_modules/progress-events/dist/src/index.js","webpack://cyb/./node_modules/protons-runtime/dist/src/utils.js","webpack://cyb/./node_modules/protons-runtime/dist/src/decode.js","webpack://cyb/./node_modules/protons-runtime/dist/src/encode.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codec.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codecs/enum.js","webpack://cyb/./node_modules/protons-runtime/dist/src/codecs/message.js","webpack://cyb/./node_modules/ramda/es/__.js","webpack://cyb/./node_modules/ramda/es/internal/_isArray.js","webpack://cyb/./node_modules/ramda/es/internal/_dispatchable.js","webpack://cyb/./node_modules/ramda/es/internal/_isTransformer.js","webpack://cyb/./node_modules/ramda/es/internal/_reduced.js","webpack://cyb/./node_modules/ramda/es/internal/_xfBase.js","webpack://cyb/./node_modules/ramda/es/all.js","webpack://cyb/./node_modules/ramda/es/internal/_objectIs.js","webpack://cyb/./node_modules/ramda/es/internal/_isArguments.js","webpack://cyb/./node_modules/ramda/es/keys.js","webpack://cyb/./node_modules/ramda/es/type.js","webpack://cyb/./node_modules/ramda/es/internal/_map.js","webpack://cyb/./node_modules/ramda/es/internal/_toISOString.js","webpack://cyb/./node_modules/ramda/es/internal/_arrayReduce.js","webpack://cyb/./node_modules/ramda/es/toString.js","webpack://cyb/./node_modules/ramda/es/internal/_xmap.js","webpack://cyb/./node_modules/ramda/es/internal/_arity.js","webpack://cyb/./node_modules/ramda/es/internal/_curryN.js","webpack://cyb/./node_modules/ramda/es/curryN.js","webpack://cyb/./node_modules/ramda/es/map.js","webpack://cyb/./node_modules/ramda/es/internal/_isInteger.js","webpack://cyb/./node_modules/ramda/es/internal/_isString.js","webpack://cyb/./node_modules/ramda/es/nth.js","webpack://cyb/./node_modules/ramda/es/prop.js","webpack://cyb/./node_modules/ramda/es/internal/_isArrayLike.js","webpack://cyb/./node_modules/ramda/es/internal/_createReduce.js","webpack://cyb/./node_modules/ramda/es/internal/_xArrayReduce.js","webpack://cyb/./node_modules/ramda/es/bind.js","webpack://cyb/./node_modules/ramda/es/internal/_xReduce.js","webpack://cyb/./node_modules/ramda/es/internal/_xwrap.js","webpack://cyb/./node_modules/ramda/es/reduce.js","webpack://cyb/./node_modules/ramda/es/internal/_pipe.js","webpack://cyb/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://cyb/./node_modules/ramda/es/slice.js","webpack://cyb/./node_modules/ramda/es/tail.js","webpack://cyb/./node_modules/ramda/es/pipe.js","webpack://cyb/./node_modules/ramda/es/internal/_clone.js","webpack://cyb/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://cyb/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://cyb/./node_modules/ramda/es/reduceBy.js","webpack://cyb/./node_modules/ramda/es/countBy.js","webpack://cyb/./node_modules/ramda/es/findLastIndex.js","webpack://cyb/./node_modules/ramda/es/groupBy.js","webpack://cyb/./node_modules/ramda/es/internal/_objectAssign.js","webpack://cyb/./node_modules/ramda/es/tap.js","webpack://cyb/./node_modules/ramda/es/trim.js","webpack://cyb/./node_modules/ramda/es/uniqWith.js","webpack://cyb/./node_modules/ramda/es/internal/_curry1.js","webpack://cyb/./node_modules/ramda/es/internal/_curry2.js","webpack://cyb/./node_modules/ramda/es/internal/_curry3.js","webpack://cyb/./node_modules/ramda/es/internal/_has.js","webpack://cyb/./node_modules/ramda/es/internal/_isPlaceholder.js","webpack://cyb/./node_modules/ramda/es/toPairs.js","webpack://cyb/./node_modules/ramda/es/zipObj.js","webpack://cyb/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://cyb/./node_modules/socket.io-parser/build/esm/binary.js","webpack://cyb/./node_modules/socket.io-parser/build/esm/index.js","webpack://cyb/./node_modules/socket.io-client/build/esm/on.js","webpack://cyb/./node_modules/socket.io-client/build/esm/socket.js","webpack://cyb/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://cyb/./node_modules/socket.io-client/build/esm/manager.js","webpack://cyb/./node_modules/socket.io-client/build/esm/index.js","webpack://cyb/./node_modules/socket.io-client/build/esm/url.js","webpack://cyb/./node_modules/sort-keys/node_modules/is-plain-obj/index.js","webpack://cyb/./node_modules/sort-keys/index.js","webpack://cyb/./node_modules/strtok3/lib/AbstractTokenizer.js","webpack://cyb/./node_modules/strtok3/lib/BufferTokenizer.js","webpack://cyb/./node_modules/strtok3/lib/core.js","webpack://cyb/./node_modules/token-types/lib/index.js","webpack://cyb/./node_modules/uint8-varint/dist/src/index.js","webpack://cyb/./node_modules/uint8arraylist/dist/src/index.js","webpack://cyb/./node_modules/uint8arrays/dist/src/alloc.js","webpack://cyb/./node_modules/uint8arrays/dist/src/compare.js","webpack://cyb/./node_modules/uint8arrays/dist/src/concat.js","webpack://cyb/./node_modules/uint8arrays/dist/src/equals.js","webpack://cyb/./node_modules/uint8arrays/dist/src/from-string.js","webpack://cyb/./node_modules/uint8arrays/dist/src/to-string.js","webpack://cyb/./node_modules/uint8arrays/dist/src/util/as-uint8array.js","webpack://cyb/./node_modules/uint8arrays/dist/src/util/bases.js","webpack://cyb/./node_modules/uint8arrays/dist/src/xor.js","webpack://cyb/./node_modules/wherearewe/src/index.js"],"sourcesContent":["'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\nvar int_1 = require(\"@stablelib/int\");\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\nexports.readInt16BE = readInt16BE;\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\nexports.readUint16BE = readUint16BE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\nexports.readInt16LE = readInt16LE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\nexports.readUint16LE = readUint16LE;\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\nexports.writeUint16BE = writeUint16BE;\nexports.writeInt16BE = writeUint16BE;\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\nexports.writeUint16LE = writeUint16LE;\nexports.writeInt16LE = writeUint16LE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\nexports.readInt32BE = readInt32BE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\nexports.readUint32BE = readUint32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\nexports.readInt32LE = readInt32LE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\nexports.readUint32LE = readUint32LE;\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\nexports.writeUint32BE = writeUint32BE;\nexports.writeInt32BE = writeUint32BE;\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\nexports.writeUint32LE = writeUint32LE;\nexports.writeInt32LE = writeUint32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readInt32BE(array, offset);\n    var lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64BE = readInt64BE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readUint32BE(array, offset);\n    var lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64BE = readUint64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readInt32LE(array, offset);\n    var hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64LE = readInt64LE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readUint32LE(array, offset);\n    var hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64LE = readUint64LE;\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64BE = writeUint64BE;\nexports.writeInt64BE = writeUint64BE;\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64LE = writeUint64LE;\nexports.writeInt64LE = writeUint64LE;\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintBE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintBE = readUintBE;\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintLE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintLE = readUintLE;\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintBE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintBE = writeUintBE;\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintLE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintLE = writeUintLE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\nexports.readFloat32BE = readFloat32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\nexports.readFloat32LE = readFloat32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\nexports.readFloat64BE = readFloat64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\nexports.readFloat64LE = readFloat64LE;\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\nexports.writeFloat32BE = writeFloat32BE;\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\nexports.writeFloat32LE = writeFloat32LE;\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\nexports.writeFloat64BE = writeFloat64BE;\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\nexports.writeFloat64LE = writeFloat64LE;\n//# sourceMappingURL=binary.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package chacha implements ChaCha stream cipher.\n */\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n// Number of ChaCha rounds (ChaCha20).\nvar ROUNDS = 20;\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out, input, key) {\n    var j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    var j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    var j2 = 0x79622D32; // \"2-by\"\n    var j3 = 0x6B206574; // \"te k\"\n    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    var j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    var j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    var j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    var j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n    var x0 = j0;\n    var x1 = j1;\n    var x2 = j2;\n    var x3 = j3;\n    var x4 = j4;\n    var x5 = j5;\n    var x6 = j6;\n    var x7 = j7;\n    var x8 = j8;\n    var x9 = j9;\n    var x10 = j10;\n    var x11 = j11;\n    var x12 = j12;\n    var x13 = j13;\n    var x14 = j14;\n    var x15 = j15;\n    for (var i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    binary_1.writeUint32LE(x0 + j0 | 0, out, 0);\n    binary_1.writeUint32LE(x1 + j1 | 0, out, 4);\n    binary_1.writeUint32LE(x2 + j2 | 0, out, 8);\n    binary_1.writeUint32LE(x3 + j3 | 0, out, 12);\n    binary_1.writeUint32LE(x4 + j4 | 0, out, 16);\n    binary_1.writeUint32LE(x5 + j5 | 0, out, 20);\n    binary_1.writeUint32LE(x6 + j6 | 0, out, 24);\n    binary_1.writeUint32LE(x7 + j7 | 0, out, 28);\n    binary_1.writeUint32LE(x8 + j8 | 0, out, 32);\n    binary_1.writeUint32LE(x9 + j9 | 0, out, 36);\n    binary_1.writeUint32LE(x10 + j10 | 0, out, 40);\n    binary_1.writeUint32LE(x11 + j11 | 0, out, 44);\n    binary_1.writeUint32LE(x12 + j12 | 0, out, 48);\n    binary_1.writeUint32LE(x13 + j13 | 0, out, 52);\n    binary_1.writeUint32LE(x14 + j14 | 0, out, 56);\n    binary_1.writeUint32LE(x15 + j15 | 0, out, 60);\n}\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nfunction streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n    var nc;\n    var counterLength;\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    }\n    else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n    // Allocate temporary space for ChaCha block.\n    var block = new Uint8Array(64);\n    for (var i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n        // XOR block bytes with src into dst.\n        for (var j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n    // Cleanup temporary space.\n    wipe_1.wipe(block);\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe_1.wipe(nc);\n    }\n    return dst;\n}\nexports.streamXOR = streamXOR;\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nfunction stream(key, nonce, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    wipe_1.wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\nexports.stream = stream;\nfunction incrementCounter(counter, pos, len) {\n    var carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n//# sourceMappingURL=chacha.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chacha_1 = require(\"@stablelib/chacha\");\nvar poly1305_1 = require(\"@stablelib/poly1305\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar binary_1 = require(\"@stablelib/binary\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nexports.KEY_LENGTH = 32;\nexports.NONCE_LENGTH = 12;\nexports.TAG_LENGTH = 16;\nvar ZEROS = new Uint8Array(16);\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nvar ChaCha20Poly1305 = /** @class */ (function () {\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    function ChaCha20Poly1305(key) {\n        this.nonceLength = exports.NONCE_LENGTH;\n        this.tagLength = exports.TAG_LENGTH;\n        if (key.length !== exports.KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Allocate space for sealed ciphertext.\n        var resultLength = plaintext.length + this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Encrypt plaintext.\n        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        var calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n        // Constant-time compare tags and return null if they differ.\n        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n        // Allocate space for decrypted plaintext.\n        var resultLength = sealed.length - this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Decrypt.\n        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    ChaCha20Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._key);\n        return this;\n    };\n    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {\n        // Initialize Poly1305 with authKey.\n        var h = new poly1305_1.Poly1305(authKey);\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        var length = new Uint8Array(8);\n        if (associatedData) {\n            binary_1.writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n        // Authenticate length of ciphertext.\n        binary_1.writeUint64LE(ciphertext.length, length);\n        h.update(length);\n        // Get tag and copy it into tagOut.\n        var tag = h.digest();\n        for (var i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n        // Cleanup.\n        h.clean();\n        wipe_1.wipe(tag);\n        wipe_1.wipe(length);\n    };\n    return ChaCha20Poly1305;\n}());\nexports.ChaCha20Poly1305 = ChaCha20Poly1305;\n//# sourceMappingURL=chacha20poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nfunction select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\nexports.select = select;\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nfunction lessOrEqual(a, b) {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\nexports.lessOrEqual = lessOrEqual;\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nfunction compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\nexports.compare = compare;\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nfunction equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\nexports.equal = equal;\n//# sourceMappingURL=constant-time.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isSerializableHash(h) {\n    return (typeof h.saveState !== \"undefined\" &&\n        typeof h.restoreState !== \"undefined\" &&\n        typeof h.cleanSavedState !== \"undefined\");\n}\nexports.isSerializableHash = isSerializableHash;\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n//# sourceMappingURL=hash.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hmac_1 = require(\"@stablelib/hmac\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nvar HKDF = /** @class */ (function () {\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    function HKDF(hash, key, salt, info) {\n        if (salt === void 0) { salt = new Uint8Array(0); }\n        this._counter = new Uint8Array(1); // starts with zero\n        this._hash = hash;\n        this._info = info;\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        var okm = hmac_1.hmac(this._hash, salt, key);\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new hmac_1.HMAC(hash, okm);\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n    // Fill buffer with new block of HKDF-Extract output.\n    HKDF.prototype._fillBuffer = function () {\n        // Increment counter.\n        this._counter[0]++;\n        var ctr = this._counter[0];\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n        // Reset buffer position.\n        this._bufpos = 0;\n    };\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    HKDF.prototype.expand = function (length) {\n        var out = new Uint8Array(length);\n        for (var i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    };\n    HKDF.prototype.clean = function () {\n        this._hmac.clean();\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._counter);\n        this._bufpos = 0;\n    };\n    return HKDF;\n}());\nexports.HKDF = HKDF;\n// TODO(dchest): maybe implement deriveKey?\n//# sourceMappingURL=hkdf.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package hmac implements HMAC algorithm.\n */\nvar hash_1 = require(\"@stablelib/hash\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nvar HMAC = /** @class */ (function () {\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    function HMAC(hash, key) {\n        this._finished = false; // true if HMAC was finalized\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        }\n        else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n        // Clean pad.\n        wipe_1.wipe(pad);\n    }\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    HMAC.prototype.reset = function () {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans HMAC state.\n     */\n    HMAC.prototype.clean = function () {\n        if (hash_1.isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (hash_1.isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    };\n    /**\n     * Updates state with provided data.\n     */\n    HMAC.prototype.update = function (data) {\n        this._inner.update(data);\n        return this;\n    };\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    HMAC.prototype.finish = function (out) {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n        return this;\n    };\n    /**\n     * Returns the computed message authentication code.\n     */\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    HMAC.prototype.saveState = function () {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    };\n    HMAC.prototype.restoreState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    HMAC.prototype.cleanSavedState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nfunction hmac(hash, key, data) {\n    var h = new HMAC(hash, key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexports.equal = constant_time_1.equal;\n//# sourceMappingURL=hmac.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package int provides helper functions for integerss.\n */\n// Shim using 16-bit pieces.\nfunction imulShim(a, b) {\n    var ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    var bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexports.mul = Math.imul || imulShim;\n/** 32-bit integer addition.  */\nfunction add(a, b) {\n    return (a + b) | 0;\n}\nexports.add = add;\n/**  32-bit integer subtraction.  */\nfunction sub(a, b) {\n    return (a - b) | 0;\n}\nexports.sub = sub;\n/** 32-bit integer left rotation */\nfunction rotl(x, n) {\n    return x << n | x >>> (32 - n);\n}\nexports.rotl = rotl;\n/** 32-bit integer left rotation */\nfunction rotr(x, n) {\n    return x << (32 - n) | x >>> n;\n}\nexports.rotr = rotr;\nfunction isIntegerShim(n) {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexports.isInteger = Number.isInteger || isIntegerShim;\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexports.isSafeInteger = function (n) {\n    return exports.isInteger(n) && (n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER);\n};\n//# sourceMappingURL=int.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 16;\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nvar Poly1305 = /** @class */ (function () {\n    function Poly1305(key) {\n        this.digestLength = exports.DIGEST_LENGTH;\n        this._buffer = new Uint8Array(16);\n        this._r = new Uint16Array(10);\n        this._h = new Uint16Array(10);\n        this._pad = new Uint16Array(8);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = false;\n        var t0 = key[0] | key[1] << 8;\n        this._r[0] = (t0) & 0x1fff;\n        var t1 = key[2] | key[3] << 8;\n        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        var t2 = key[4] | key[5] << 8;\n        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        var t3 = key[6] | key[7] << 8;\n        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        var t4 = key[8] | key[9] << 8;\n        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        var t5 = key[10] | key[11] << 8;\n        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        var t6 = key[12] | key[13] << 8;\n        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        var t7 = key[14] | key[15] << 8;\n        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n    Poly1305.prototype._blocks = function (m, mpos, bytes) {\n        var hibit = this._fin ? 0 : 1 << 11;\n        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];\n        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];\n        while (bytes >= 16) {\n            var t0 = m[mpos + 0] | m[mpos + 1] << 8;\n            h0 += (t0) & 0x1fff;\n            var t1 = m[mpos + 2] | m[mpos + 3] << 8;\n            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            var t2 = m[mpos + 4] | m[mpos + 5] << 8;\n            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            var t3 = m[mpos + 6] | m[mpos + 7] << 8;\n            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            var t4 = m[mpos + 8] | m[mpos + 9] << 8;\n            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            var t5 = m[mpos + 10] | m[mpos + 11] << 8;\n            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            var t6 = m[mpos + 12] | m[mpos + 13] << 8;\n            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            var t7 = m[mpos + 14] | m[mpos + 15] << 8;\n            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n            var c = 0;\n            var d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13);\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13);\n            d0 &= 0x1fff;\n            var d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13);\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13);\n            d1 &= 0x1fff;\n            var d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13);\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13);\n            d2 &= 0x1fff;\n            var d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13);\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13);\n            d3 &= 0x1fff;\n            var d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13);\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13);\n            d4 &= 0x1fff;\n            var d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13);\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13);\n            d5 &= 0x1fff;\n            var d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13);\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13);\n            d6 &= 0x1fff;\n            var d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13);\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13);\n            d7 &= 0x1fff;\n            var d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13);\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13);\n            d8 &= 0x1fff;\n            var d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13);\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13);\n            d9 &= 0x1fff;\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    };\n    Poly1305.prototype.finish = function (mac, macpos) {\n        if (macpos === void 0) { macpos = 0; }\n        var g = new Uint16Array(10);\n        var c;\n        var mask;\n        var f;\n        var i;\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n        this._finished = true;\n        return this;\n    };\n    Poly1305.prototype.update = function (m) {\n        var mpos = 0;\n        var bytes = m.length;\n        var want;\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (var i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for (var i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n        return this;\n    };\n    Poly1305.prototype.digest = function () {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        var mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    };\n    Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._r);\n        wipe_1.wipe(this._h);\n        wipe_1.wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    };\n    return Poly1305;\n}());\nexports.Poly1305 = Poly1305;\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nfunction oneTimeAuth(key, data) {\n    var h = new Poly1305(key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.oneTimeAuth = oneTimeAuth;\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nfunction equal(a, b) {\n    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {\n        return false;\n    }\n    return constant_time_1.equal(a, b);\n}\nexports.equal = equal;\n//# sourceMappingURL=poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;\nconst system_1 = require(\"./source/system\");\nconst binary_1 = require(\"@stablelib/binary\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.defaultRandomSource = new system_1.SystemRandomSource();\nfunction randomBytes(length, prng = exports.defaultRandomSource) {\n    return prng.randomBytes(length);\n}\nexports.randomBytes = randomBytes;\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nfunction randomUint32(prng = exports.defaultRandomSource) {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = (0, binary_1.readUint32LE)(buf);\n    // Clean the buffer.\n    (0, wipe_1.wipe)(buf);\n    return result;\n}\nexports.randomUint32 = randomUint32;\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomString(length, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        (0, wipe_1.wipe)(buf);\n    }\n    return out;\n}\nexports.randomString = randomString;\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\nexports.randomStringForEntropy = randomStringForEntropy;\n//# sourceMappingURL=random.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\nclass BrowserRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeRandomSource = void 0;\nconst wipe_1 = require(\"@stablelib/wipe\");\nclass NodeRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n        // Allocate output array.\n        const out = new Uint8Array(length);\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n        // Cleanup.\n        (0, wipe_1.wipe)(buffer);\n        return out;\n    }\n}\nexports.NodeRandomSource = NodeRandomSource;\n//# sourceMappingURL=node.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemRandomSource = void 0;\nconst browser_1 = require(\"./browser\");\nconst node_1 = require(\"./node\");\nclass SystemRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.name = \"\";\n        // Try browser.\n        this._source = new browser_1.BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n        // If no browser source, try Node.\n        this._source = new node_1.NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n        // No sources, we're out of options.\n    }\n    randomBytes(length) {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\nexports.SystemRandomSource = SystemRandomSource;\n//# sourceMappingURL=system.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 32;\nexports.BLOCK_SIZE = 64;\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nvar SHA256 = /** @class */ (function () {\n    function SHA256() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._state = new Int32Array(8); // hash state\n        this._temp = new Int32Array(64); // temporary state\n        this._buffer = new Uint8Array(128); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA256.prototype._initState = function () {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA256.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA256.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._temp);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA256.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA256.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 4; i++) {\n            binary_1.writeUint32BE(this._state[i], out, i * 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA256.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    SHA256.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    SHA256.prototype.restoreState = function (savedState) {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA256.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA256;\n}());\nexports.SHA256 = SHA256;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    while (len >= 64) {\n        var a = v[0];\n        var b = v[1];\n        var c = v[2];\n        var d = v[3];\n        var e = v[4];\n        var f = v[5];\n        var g = v[6];\n        var h = v[7];\n        for (var i = 0; i < 16; i++) {\n            var j = pos + i * 4;\n            w[i] = binary_1.readUint32BE(p, j);\n        }\n        for (var i = 16; i < 64; i++) {\n            var u = w[i - 2];\n            var t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            var t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (var i = 0; i < 64; i++) {\n            var t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            var t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA256();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nfunction wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\nexports.wipe = wipe;\n//# sourceMappingURL=wipe.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;\n/**\n * Package x25519 implements X25519 key agreement.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\nfunction scalarMult(n, p) {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n    a[0] = d[0] = 1;\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n    return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey, rejectZero = false) {\n    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n    const result = scalarMult(mySecretKey, theirPublicKey);\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n    return result;\n}\nexports.sharedKey = sharedKey;\n//# sourceMappingURL=x25519.js.map","'use strict'\n\nconst exp = Math.exp\n\nexports =\nmodule.exports =\nfunction MovingAverage (timespan) {\n  if (typeof timespan !== 'number') { throw new Error('must provide a timespan to the moving average constructor') }\n\n  if (timespan <= 0) { throw new Error('must provide a timespan > 0 to the moving average constructor') }\n\n  let ma     // moving average\n  let v = 0  // variance\n  let d = 0  // deviation\n  let f = 0  // forecast\n\n  let previousTime\n\n  let ret = {}\n\n  function alpha (t, pt) {\n    return 1 - (exp(-(t - pt) / timespan))\n  }\n\n  ret.push =\n  function push (time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime)\n      const diff = value - ma\n      const incr = a * diff\n      ma = a * value + (1 - a) * ma\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr)\n      d = Math.sqrt(v)\n      // calculate forecast\n      f = ma + a * diff\n    } else {\n      ma = value\n    }\n    previousTime = time\n  }\n\n  // Exponential Moving Average\n\n  ret.movingAverage =\n  function movingAverage () {\n    return ma\n  }\n\n  // Variance\n  ret.variance =\n  function variance () {\n    return v\n  }\n\n  ret.deviation =\n  function deviation () {\n    return d\n  }\n\n  ret.forecast =\n  function forecast () {\n    return f\n  }\n\n  return ret\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n","'use strict';\n\nconst pDefer = () => {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n};\n\nmodule.exports = pDefer;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\n\n\n/**\n * conversion ratios\n */\n\nparse.nanosecond =\nparse.ns = 1 / 1e6\n\nparse['µs'] =\nparse['μs'] =\nparse.us =\nparse.microsecond = 1 / 1e3\n\nparse.millisecond =\nparse.ms =\nparse[''] = 1\n\nparse.second =\nparse.sec =\nparse.s = parse.ms * 1000\n\nparse.minute =\nparse.min =\nparse.m = parse.s * 60\n\nparse.hour =\nparse.hr =\nparse.h = parse.m * 60\n\nparse.day =\nparse.d = parse.h * 24\n\nparse.week =\nparse.wk =\nparse.w = parse.d * 7\n\nparse.month =\nparse.b =\nparse.d * (365.25 / 12)\n\nparse.year =\nparse.yr =\nparse.y = parse.d * 365.25\n\n/**\n * convert `str` to ms\n *\n * @param {String} str\n * @param {String} format\n * @return {Number}\n */\n\nfunction parse(str='', format='ms'){\n  var result = null\n  // ignore commas/placeholders\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\n  str.replace(durationRE, function(_, n, units){\n    units = unitRatio(units)\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\n  })\n\n  return result && (result / (unitRatio(format) || 1))\n}\n\nfunction unitRatio(str) {\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\n}\n\nexport default parse\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","const RateLimiterRedis = require('./lib/RateLimiterRedis');\nconst RateLimiterMongo = require('./lib/RateLimiterMongo');\nconst RateLimiterMySQL = require('./lib/RateLimiterMySQL');\nconst RateLimiterPostgres = require('./lib/RateLimiterPostgres');\nconst {RateLimiterClusterMaster, RateLimiterClusterMasterPM2, RateLimiterCluster} = require('./lib/RateLimiterCluster');\nconst RateLimiterMemory = require('./lib/RateLimiterMemory');\nconst RateLimiterMemcache = require('./lib/RateLimiterMemcache');\nconst RLWrapperBlackAndWhite = require('./lib/RLWrapperBlackAndWhite');\nconst RateLimiterUnion = require('./lib/RateLimiterUnion');\nconst RateLimiterQueue = require('./lib/RateLimiterQueue');\nconst BurstyRateLimiter = require('./lib/BurstyRateLimiter');\nconst RateLimiterRes = require('./lib/RateLimiterRes');\n\nmodule.exports = {\n  RateLimiterRedis,\n  RateLimiterMongo,\n  RateLimiterMySQL,\n  RateLimiterPostgres,\n  RateLimiterMemory,\n  RateLimiterMemcache,\n  RateLimiterClusterMaster,\n  RateLimiterClusterMasterPM2,\n  RateLimiterCluster,\n  RLWrapperBlackAndWhite,\n  RateLimiterUnion,\n  RateLimiterQueue,\n  BurstyRateLimiter,\n  RateLimiterRes,\n};\n","const RateLimiterRes = require(\"./RateLimiterRes\");\n\n/**\n * Bursty rate limiter exposes only msBeforeNext time and doesn't expose points from bursty limiter by default\n * @type {BurstyRateLimiter}\n */\nmodule.exports = class BurstyRateLimiter {\n  constructor(rateLimiter, burstLimiter) {\n    this._rateLimiter = rateLimiter;\n    this._burstLimiter = burstLimiter\n  }\n\n  /**\n   * Merge rate limiter response objects. Responses can be null\n   *\n   * @param {RateLimiterRes} [rlRes] Rate limiter response\n   * @param {RateLimiterRes} [blRes] Bursty limiter response\n   */\n  _combineRes(rlRes, blRes) {\n    return new RateLimiterRes(\n      rlRes.remainingPoints,\n      Math.min(rlRes.msBeforeNext, blRes.msBeforeNext),\n      rlRes.consumedPoints,\n      rlRes.isFirstInDuration\n    )\n  }\n\n  /**\n   * @param key\n   * @param pointsToConsume\n   * @param options\n   * @returns {Promise<any>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return this._rateLimiter.consume(key, pointsToConsume, options)\n      .catch((rlRej) => {\n        if (rlRej instanceof RateLimiterRes) {\n          return this._burstLimiter.consume(key, pointsToConsume, options)\n            .then((blRes) => {\n              return Promise.resolve(this._combineRes(rlRej, blRes))\n            })\n            .catch((blRej) => {\n                if (blRej instanceof RateLimiterRes) {\n                  return Promise.reject(this._combineRes(rlRej, blRej))\n                } else {\n                  return Promise.reject(blRej)\n                }\n              }\n            )\n        } else {\n          return Promise.reject(rlRej)\n        }\n      })\n  }\n\n  /**\n   * It doesn't expose available points from burstLimiter\n   *\n   * @param key\n   * @returns {Promise<RateLimiterRes>}\n   */\n  get(key) {\n    return Promise.all([\n      this._rateLimiter.get(key),\n      this._burstLimiter.get(key),\n    ]).then(([rlRes, blRes]) => {\n      return this._combineRes(rlRes, blRes);\n    });\n  }\n\n  get points() {\n    return this._rateLimiter.points;\n  }\n};\n","const RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RLWrapperBlackAndWhite {\n  constructor(opts = {}) {\n    this.limiter = opts.limiter;\n    this.blackList = opts.blackList;\n    this.whiteList = opts.whiteList;\n    this.isBlackListed = opts.isBlackListed;\n    this.isWhiteListed = opts.isWhiteListed;\n    this.runActionAnyway = opts.runActionAnyway;\n  }\n\n  get limiter() {\n    return this._limiter;\n  }\n\n  set limiter(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('limiter is not set');\n    }\n\n    this._limiter = value;\n  }\n\n  get runActionAnyway() {\n    return this._runActionAnyway;\n  }\n\n  set runActionAnyway(value) {\n    this._runActionAnyway = typeof value === 'undefined' ? false : value;\n  }\n\n  get blackList() {\n    return this._blackList;\n  }\n\n  set blackList(value) {\n    this._blackList = Array.isArray(value) ? value : [];\n  }\n\n  get isBlackListed() {\n    return this._isBlackListed;\n  }\n\n  set isBlackListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isBlackListed must be function');\n    }\n    this._isBlackListed = func;\n  }\n\n  get whiteList() {\n    return this._whiteList;\n  }\n\n  set whiteList(value) {\n    this._whiteList = Array.isArray(value) ? value : [];\n  }\n\n  get isWhiteListed() {\n    return this._isWhiteListed;\n  }\n\n  set isWhiteListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isWhiteListed must be function');\n    }\n    this._isWhiteListed = func;\n  }\n\n  isBlackListedSomewhere(key) {\n    return this.blackList.indexOf(key) >= 0 || this.isBlackListed(key);\n  }\n\n  isWhiteListedSomewhere(key) {\n    return this.whiteList.indexOf(key) >= 0 || this.isWhiteListed(key);\n  }\n\n  getBlackRes() {\n    return new RateLimiterRes(0, Number.MAX_SAFE_INTEGER, 0, false);\n  }\n\n  getWhiteRes() {\n    return new RateLimiterRes(Number.MAX_SAFE_INTEGER, 0, 0, false);\n  }\n\n  rejectBlack() {\n    return Promise.reject(this.getBlackRes());\n  }\n\n  resolveBlack() {\n    return Promise.resolve(this.getBlackRes());\n  }\n\n  resolveWhite() {\n    return Promise.resolve(this.getWhiteRes());\n  }\n\n  consume(key, pointsToConsume = 1) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.rejectBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.consume(key, pointsToConsume);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.consume(key, pointsToConsume).catch(() => {});\n    }\n    return res;\n  }\n\n  block(key, secDuration) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.block(key, secDuration);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.block(key, secDuration).catch(() => {});\n    }\n    return res;\n  }\n\n  penalty(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.penalty(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.penalty(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  reward(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.reward(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.reward(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  get(key) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined' || this.runActionAnyway) {\n      return this.limiter.get(key);\n    }\n\n    return res;\n  }\n\n  delete(key) {\n    return this.limiter.delete(key);\n  }\n};\n","module.exports = class RateLimiterAbstract {\n  /**\n   *\n   * @param opts Object Defaults {\n   *   points: 4, // Number of points\n   *   duration: 1, // Per seconds\n   *   blockDuration: 0, // Block if consumed more than points in current duration for blockDuration seconds\n   *   execEvenly: false, // Execute allowed actions evenly over duration\n   *   execEvenlyMinDelayMs: duration * 1000 / points, // ms, works with execEvenly=true option\n   *   keyPrefix: 'rlflx',\n   * }\n   */\n  constructor(opts = {}) {\n    this.points = opts.points;\n    this.duration = opts.duration;\n    this.blockDuration = opts.blockDuration;\n    this.execEvenly = opts.execEvenly;\n    this.execEvenlyMinDelayMs = opts.execEvenlyMinDelayMs;\n    this.keyPrefix = opts.keyPrefix;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  set points(value) {\n    this._points = value >= 0 ? value : 4;\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    this._duration = typeof value === 'undefined' ? 1 : value;\n  }\n\n  get msDuration() {\n    return this.duration * 1000;\n  }\n\n  get blockDuration() {\n    return this._blockDuration;\n  }\n\n  set blockDuration(value) {\n    this._blockDuration = typeof value === 'undefined' ? 0 : value;\n  }\n\n  get msBlockDuration() {\n    return this.blockDuration * 1000;\n  }\n\n  get execEvenly() {\n    return this._execEvenly;\n  }\n\n  set execEvenly(value) {\n    this._execEvenly = typeof value === 'undefined' ? false : Boolean(value);\n  }\n\n  get execEvenlyMinDelayMs() {\n    return this._execEvenlyMinDelayMs;\n  }\n\n  set execEvenlyMinDelayMs(value) {\n    this._execEvenlyMinDelayMs = typeof value === 'undefined' ? Math.ceil(this.msDuration / this.points) : value;\n  }\n\n  get keyPrefix() {\n    return this._keyPrefix;\n  }\n\n  set keyPrefix(value) {\n    if (typeof value === 'undefined') {\n      value = 'rlflx';\n    }\n    if (typeof value !== 'string') {\n      throw new Error('keyPrefix must be string');\n    }\n    this._keyPrefix = value;\n  }\n\n  _getKeySecDuration(options = {}) {\n    return options && options.customDuration >= 0\n      ? options.customDuration\n      : this.duration;\n  }\n\n  getKey(key) {\n    return this.keyPrefix.length > 0 ? `${this.keyPrefix}:${key}` : key;\n  }\n\n  parseKey(rlKey) {\n    return rlKey.substring(this.keyPrefix.length);\n  }\n\n  consume() {\n    throw new Error(\"You have to implement the method 'consume'!\");\n  }\n\n  penalty() {\n    throw new Error(\"You have to implement the method 'penalty'!\");\n  }\n\n  reward() {\n    throw new Error(\"You have to implement the method 'reward'!\");\n  }\n\n  get() {\n    throw new Error(\"You have to implement the method 'get'!\");\n  }\n\n  set() {\n    throw new Error(\"You have to implement the method 'set'!\");\n  }\n\n  block() {\n    throw new Error(\"You have to implement the method 'block'!\");\n  }\n\n  delete() {\n    throw new Error(\"You have to implement the method 'delete'!\");\n  }\n};\n","/**\n * Implements rate limiting in cluster using built-in IPC\n *\n * Two classes are described here: master and worker\n * Master have to be create in the master process without any options.\n * Any number of rate limiters can be created in workers, but each rate limiter must be with unique keyPrefix\n *\n * Workflow:\n * 1. master rate limiter created in master process\n * 2. worker rate limiter sends 'init' message with necessary options during creating\n * 3. master receives options and adds new rate limiter by keyPrefix if it isn't created yet\n * 4. master sends 'init' back to worker's rate limiter\n * 5. worker can process requests immediately,\n *    but they will be postponed by 'workerWaitInit' until master sends 'init' to worker\n * 6. every request to worker rate limiter creates a promise\n * 7. if master doesn't response for 'timeout', promise is rejected\n * 8. master sends 'resolve' or 'reject' command to worker\n * 9. worker resolves or rejects promise depending on message from master\n *\n */\n\nconst cluster = require('cluster');\nconst crypto = require('crypto');\nconst RateLimiterAbstract = require('./RateLimiterAbstract');\nconst RateLimiterMemory = require('./RateLimiterMemory');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nconst channel = 'rate_limiter_flexible';\nlet masterInstance = null;\n\nconst masterSendToWorker = function (worker, msg, type, res) {\n  let data;\n  if (res === null || res === true || res === false) {\n    data = res;\n  } else {\n    data = {\n      remainingPoints: res.remainingPoints,\n      msBeforeNext: res.msBeforeNext,\n      consumedPoints: res.consumedPoints,\n      isFirstInDuration: res.isFirstInDuration,\n    };\n  }\n  worker.send({\n    channel,\n    keyPrefix: msg.keyPrefix, // which rate limiter exactly\n    promiseId: msg.promiseId,\n    type,\n    data,\n  });\n};\n\nconst workerWaitInit = function (payload) {\n  setTimeout(() => {\n    if (this._initiated) {\n      process.send(payload);\n      // Promise will be removed by timeout if too long\n    } else if (typeof this._promises[payload.promiseId] !== 'undefined') {\n      workerWaitInit.call(this, payload);\n    }\n  }, 30);\n};\n\nconst workerSendToMaster = function (func, promiseId, key, arg, opts) {\n  const payload = {\n    channel,\n    keyPrefix: this.keyPrefix,\n    func,\n    promiseId,\n    data: {\n      key,\n      arg,\n      opts,\n    },\n  };\n\n  if (!this._initiated) {\n    // Wait init before sending messages to master\n    workerWaitInit.call(this, payload);\n  } else {\n    process.send(payload);\n  }\n};\n\nconst masterProcessMsg = function (worker, msg) {\n  if (!msg || msg.channel !== channel || typeof this._rateLimiters[msg.keyPrefix] === 'undefined') {\n    return false;\n  }\n\n  let promise;\n\n  switch (msg.func) {\n    case 'consume':\n      promise = this._rateLimiters[msg.keyPrefix].consume(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'penalty':\n      promise = this._rateLimiters[msg.keyPrefix].penalty(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'reward':\n      promise = this._rateLimiters[msg.keyPrefix].reward(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'block':\n      promise = this._rateLimiters[msg.keyPrefix].block(msg.data.key, msg.data.arg, msg.data.opts);\n      break;\n    case 'get':\n      promise = this._rateLimiters[msg.keyPrefix].get(msg.data.key, msg.data.opts);\n      break;\n    case 'delete':\n      promise = this._rateLimiters[msg.keyPrefix].delete(msg.data.key, msg.data.opts);\n      break;\n    default:\n      return false;\n  }\n\n  if (promise) {\n    promise\n      .then((res) => {\n        masterSendToWorker(worker, msg, 'resolve', res);\n      })\n      .catch((rejRes) => {\n        masterSendToWorker(worker, msg, 'reject', rejRes);\n      });\n  }\n};\n\nconst workerProcessMsg = function (msg) {\n  if (!msg || msg.channel !== channel || msg.keyPrefix !== this.keyPrefix) {\n    return false;\n  }\n\n  if (this._promises[msg.promiseId]) {\n    clearTimeout(this._promises[msg.promiseId].timeoutId);\n    let res;\n    if (msg.data === null || msg.data === true || msg.data === false) {\n      res = msg.data;\n    } else {\n      res = new RateLimiterRes(\n        msg.data.remainingPoints,\n        msg.data.msBeforeNext,\n        msg.data.consumedPoints,\n        msg.data.isFirstInDuration // eslint-disable-line comma-dangle\n      );\n    }\n\n    switch (msg.type) {\n      case 'resolve':\n        this._promises[msg.promiseId].resolve(res);\n        break;\n      case 'reject':\n        this._promises[msg.promiseId].reject(res);\n        break;\n      default:\n        throw new Error(`RateLimiterCluster: no such message type '${msg.type}'`);\n    }\n\n    delete this._promises[msg.promiseId];\n  }\n};\n/**\n * Prepare options to send to master\n * Master will create rate limiter depending on options\n *\n * @returns {{points: *, duration: *, blockDuration: *, execEvenly: *, execEvenlyMinDelayMs: *, keyPrefix: *}}\n */\nconst getOpts = function () {\n  return {\n    points: this.points,\n    duration: this.duration,\n    blockDuration: this.blockDuration,\n    execEvenly: this.execEvenly,\n    execEvenlyMinDelayMs: this.execEvenlyMinDelayMs,\n    keyPrefix: this.keyPrefix,\n  };\n};\n\nconst savePromise = function (resolve, reject) {\n  const hrtime = process.hrtime();\n  let promiseId = hrtime[0].toString() + hrtime[1].toString();\n\n  if (typeof this._promises[promiseId] !== 'undefined') {\n    promiseId += crypto.randomBytes(12).toString('base64');\n  }\n\n  this._promises[promiseId] = {\n    resolve,\n    reject,\n    timeoutId: setTimeout(() => {\n      delete this._promises[promiseId];\n      reject(new Error('RateLimiterCluster timeout: no answer from master in time'));\n    }, this.timeoutMs),\n  };\n\n  return promiseId;\n};\n\nclass RateLimiterClusterMaster {\n  constructor() {\n    if (masterInstance) {\n      return masterInstance;\n    }\n\n    this._rateLimiters = {};\n\n    cluster.setMaxListeners(0);\n\n    cluster.on('message', (worker, msg) => {\n      if (msg && msg.channel === channel && msg.type === 'init') {\n        // If init request, check or create rate limiter by key prefix and send 'init' back to worker\n        if (typeof this._rateLimiters[msg.opts.keyPrefix] === 'undefined') {\n          this._rateLimiters[msg.opts.keyPrefix] = new RateLimiterMemory(msg.opts);\n        }\n\n        worker.send({\n          channel,\n          type: 'init',\n          keyPrefix: msg.opts.keyPrefix,\n        });\n      } else {\n        masterProcessMsg.call(this, worker, msg);\n      }\n    });\n\n    masterInstance = this;\n  }\n}\n\nclass RateLimiterClusterMasterPM2 {\n  constructor(pm2) {\n    if (masterInstance) {\n      return masterInstance;\n    }\n\n    this._rateLimiters = {};\n\n    pm2.launchBus((err, pm2Bus) => {\n      pm2Bus.on('process:msg', (packet) => {\n        const msg = packet.raw;\n        if (msg && msg.channel === channel && msg.type === 'init') {\n          // If init request, check or create rate limiter by key prefix and send 'init' back to worker\n          if (typeof this._rateLimiters[msg.opts.keyPrefix] === 'undefined') {\n            this._rateLimiters[msg.opts.keyPrefix] = new RateLimiterMemory(msg.opts);\n          }\n\n          pm2.sendDataToProcessId(packet.process.pm_id, {\n            data: {},\n            topic: channel,\n            channel,\n            type: 'init',\n            keyPrefix: msg.opts.keyPrefix,\n          }, (sendErr, res) => {\n            if (sendErr) {\n              console.log(sendErr, res);\n            }\n          });\n        } else {\n          const worker = {\n            send: (msgData) => {\n              const pm2Message = msgData;\n              pm2Message.topic = channel;\n              if (typeof pm2Message.data === 'undefined') {\n                pm2Message.data = {};\n              }\n              pm2.sendDataToProcessId(packet.process.pm_id, pm2Message, (sendErr, res) => {\n                if (sendErr) {\n                  console.log(sendErr, res);\n                }\n              });\n            },\n          };\n          masterProcessMsg.call(this, worker, msg);\n        }\n      });\n    });\n\n    masterInstance = this;\n  }\n}\n\nclass RateLimiterClusterWorker extends RateLimiterAbstract {\n  get timeoutMs() {\n    return this._timeoutMs;\n  }\n\n  set timeoutMs(value) {\n    this._timeoutMs = typeof value === 'undefined' ? 5000 : Math.abs(parseInt(value));\n  }\n\n  constructor(opts = {}) {\n    super(opts);\n\n    process.setMaxListeners(0);\n\n    this.timeoutMs = opts.timeoutMs;\n\n    this._initiated = false;\n\n    process.on('message', (msg) => {\n      if (msg && msg.channel === channel && msg.type === 'init' && msg.keyPrefix === this.keyPrefix) {\n        this._initiated = true;\n      } else {\n        workerProcessMsg.call(this, msg);\n      }\n    });\n\n    // Create limiter on master with specific options\n    process.send({\n      channel,\n      type: 'init',\n      opts: getOpts.call(this),\n    });\n\n    this._promises = {};\n  }\n\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'consume', promiseId, key, pointsToConsume, options);\n    });\n  }\n\n  penalty(key, points = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'penalty', promiseId, key, points, options);\n    });\n  }\n\n  reward(key, points = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'reward', promiseId, key, points, options);\n    });\n  }\n\n  block(key, secDuration, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'block', promiseId, key, secDuration, options);\n    });\n  }\n\n  get(key, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'get', promiseId, key, options);\n    });\n  }\n\n  delete(key, options = {}) {\n    return new Promise((resolve, reject) => {\n      const promiseId = savePromise.call(this, resolve, reject);\n\n      workerSendToMaster.call(this, 'delete', promiseId, key, options);\n    });\n  }\n}\n\nmodule.exports = {\n  RateLimiterClusterMaster,\n  RateLimiterClusterMasterPM2,\n  RateLimiterCluster: RateLimiterClusterWorker,\n};\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMemcache extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: memcacheClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.client = opts.storeClient;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(result.consumedPoints);\n    res.isFirstInDuration = result.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = result.msBeforeNext;\n\n    return res;\n  }\n\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n      const secDuration = Math.floor(msDuration / 1000);\n\n      if (forceExpire) {\n        this.client.set(rlKey, points, secDuration, (err) => {\n          if (!err) {\n            this.client.set(\n              `${rlKey}_expire`,\n              secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n              secDuration,\n              () => {\n                const res = {\n                  consumedPoints: points,\n                  msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                };\n                resolve(res);\n              }\n            );\n          } else {\n            reject(err);\n          }\n        });\n      } else {\n        this.client.incr(rlKey, points, (err, consumedPoints) => {\n          if (err || consumedPoints === false) {\n            this.client.add(rlKey, points, secDuration, (errAddKey, createdNew) => {\n              if (errAddKey || !createdNew) {\n                // Try to upsert again in case of race condition\n                if (typeof options.attemptNumber === 'undefined' || options.attemptNumber < 3) {\n                  const nextOptions = Object.assign({}, options);\n                  nextOptions.attemptNumber = nextOptions.attemptNumber ? (nextOptions.attemptNumber + 1) : 1;\n\n                  this._upsert(rlKey, points, msDuration, forceExpire, nextOptions)\n                    .then(resUpsert => resolve(resUpsert))\n                    .catch(errUpsert => reject(errUpsert));\n                } else {\n                  reject(new Error('Can not add key'));\n                }\n              } else {\n                this.client.add(\n                  `${rlKey}_expire`,\n                  secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n                  secDuration,\n                  () => {\n                    const res = {\n                      consumedPoints: points,\n                      msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                    };\n                    resolve(res);\n                  }\n                );\n              }\n            });\n          } else {\n            this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n              if (errGetExpire) {\n                reject(errGetExpire);\n              } else {\n                const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n                const res = {\n                  consumedPoints,\n                  msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n                };\n                resolve(res);\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  _get(rlKey) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n\n      this.client.get(rlKey, (err, consumedPoints) => {\n        if (!consumedPoints) {\n          resolve(null);\n        } else {\n          this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n            if (errGetExpire) {\n              reject(errGetExpire);\n            } else {\n              const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n              const res = {\n                consumedPoints,\n                msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n              };\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n\n  _delete(rlKey) {\n    return new Promise((resolve, reject) => {\n      this.client.del(rlKey, (err, res) => {\n        if (err) {\n          reject(err);\n        } else if (res === false) {\n          resolve(res);\n        } else {\n          this.client.del(`${rlKey}_expire`, (errDelExpire) => {\n            if (errDelExpire) {\n              reject(errDelExpire);\n            } else {\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = RateLimiterMemcache;\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\nconst MemoryStorage = require('./component/MemoryStorage/MemoryStorage');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMemory extends RateLimiterAbstract {\n  constructor(opts = {}) {\n    super(opts);\n\n    this._memoryStorage = new MemoryStorage();\n  }\n  /**\n   *\n   * @param key\n   * @param pointsToConsume\n   * @param {Object} options\n   * @returns {Promise<RateLimiterRes>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const rlKey = this.getKey(key);\n      const secDuration = this._getKeySecDuration(options);\n      let res = this._memoryStorage.incrby(rlKey, pointsToConsume, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n\n      if (res.consumedPoints > this.points) {\n        // Block only first time when consumed more than points\n        if (this.blockDuration > 0 && res.consumedPoints <= (this.points + pointsToConsume)) {\n          // Block key\n          res = this._memoryStorage.set(rlKey, res.consumedPoints, this.blockDuration);\n        }\n        reject(res);\n      } else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n        // Execute evenly\n        let delay = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2));\n        if (delay < this.execEvenlyMinDelayMs) {\n          delay = res.consumedPoints * this.execEvenlyMinDelayMs;\n        }\n\n        setTimeout(resolve, delay, res);\n      } else {\n        resolve(res);\n      }\n    });\n  }\n\n  penalty(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve) => {\n      const secDuration = this._getKeySecDuration(options);\n      const res = this._memoryStorage.incrby(rlKey, points, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n      resolve(res);\n    });\n  }\n\n  reward(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve) => {\n      const secDuration = this._getKeySecDuration(options);\n      const res = this._memoryStorage.incrby(rlKey, -points, secDuration);\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n      resolve(res);\n    });\n  }\n\n  /**\n   * Block any key for secDuration seconds\n   *\n   * @param key\n   * @param secDuration\n   */\n  block(key, secDuration) {\n    const msDuration = secDuration * 1000;\n    const initPoints = this.points + 1;\n\n    this._memoryStorage.set(this.getKey(key), initPoints, secDuration);\n    return Promise.resolve(\n      new RateLimiterRes(0, msDuration === 0 ? -1 : msDuration, initPoints)\n    );\n  }\n\n  set(key, points, secDuration) {\n    const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n\n    this._memoryStorage.set(this.getKey(key), points, secDuration);\n    return Promise.resolve(\n      new RateLimiterRes(0, msDuration === 0 ? -1 : msDuration, points)\n    );\n  }\n\n  get(key) {\n    const res = this._memoryStorage.get(this.getKey(key));\n    if (res !== null) {\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    }\n\n    return Promise.resolve(res);\n  }\n\n  delete(key) {\n    return Promise.resolve(this._memoryStorage.delete(this.getKey(key)));\n  }\n}\n\nmodule.exports = RateLimiterMemory;\n\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\n/**\n * Get MongoDB driver version as upsert options differ\n * @params {Object} Client instance\n * @returns {Object} Version Object containing major, feature & minor versions.\n */\nfunction getDriverVersion(client) {\n  try {\n    const _client = client.client ? client.client : client;\n\n    const { version } = _client.topology.s.options.metadata.driver;\n    const _v = version.split('.').map(v => parseInt(v));\n\n    return {\n      major: _v[0],\n      feature: _v[1],\n      patch: _v[2],\n    };\n  } catch (err) {\n    return { major: 0, feature: 0, patch: 0 };\n  }\n}\n\nclass RateLimiterMongo extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   indexKeyPrefix: {attr1: 1, attr2: 1}\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   mongo: MongoClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.dbName = opts.dbName;\n    this.tableName = opts.tableName;\n    this.indexKeyPrefix = opts.indexKeyPrefix;\n\n    if (opts.mongo) {\n      this.client = opts.mongo;\n    } else {\n      this.client = opts.storeClient;\n    }\n    if (typeof this.client.then === 'function') {\n      // If Promise\n      this.client\n        .then((conn) => {\n          this.client = conn;\n          this._initCollection();\n          this._driverVersion = getDriverVersion(this.client);\n        });\n    } else {\n      this._initCollection();\n      this._driverVersion = getDriverVersion(this.client);\n    }\n  }\n\n  get dbName() {\n    return this._dbName;\n  }\n\n  set dbName(value) {\n    this._dbName = typeof value === 'undefined' ? RateLimiterMongo.getDbName() : value;\n  }\n\n  static getDbName() {\n    return 'node-rate-limiter-flexible';\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  set client(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('mongo is not set');\n    }\n    this._client = value;\n  }\n\n  get indexKeyPrefix() {\n    return this._indexKeyPrefix;\n  }\n\n  set indexKeyPrefix(obj) {\n    this._indexKeyPrefix = obj || {};\n  }\n\n  _initCollection() {\n    const db = typeof this.client.db === 'function'\n      ? this.client.db(this.dbName)\n      : this.client;\n\n    const collection = db.collection(this.tableName);\n    collection.createIndex({ expire: -1 }, { expireAfterSeconds: 0 });\n    collection.createIndex(Object.assign({}, this.indexKeyPrefix, { key: 1 }), { unique: true });\n\n    this._collection = collection;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n\n    let doc;\n    if (typeof result.value === 'undefined') {\n      doc = result;\n    } else {\n      doc = result.value;\n    }\n\n    res.isFirstInDuration = doc.points === changedPoints;\n    res.consumedPoints = doc.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = doc.expire !== null\n      ? Math.max(new Date(doc.expire).getTime() - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n\n    let where;\n    let upsertData;\n    if (forceExpire) {\n      where = { key };\n      where = Object.assign(where, docAttrs);\n      upsertData = {\n        $set: {\n          key,\n          points,\n          expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n        },\n      };\n      upsertData.$set = Object.assign(upsertData.$set, docAttrs);\n    } else {\n      where = {\n        $or: [\n          { expire: { $gt: new Date() } },\n          { expire: { $eq: null } },\n        ],\n        key,\n      };\n      where = Object.assign(where, docAttrs);\n      upsertData = {\n        $setOnInsert: {\n          key,\n          expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n        },\n        $inc: { points },\n      };\n      upsertData.$setOnInsert = Object.assign(upsertData.$setOnInsert, docAttrs);\n    }\n\n    // Options for collection updates differ between driver versions\n    const upsertOptions = {\n      upsert: true,\n    };\n    if ((this._driverVersion.major >= 4) ||\n        (this._driverVersion.major === 3 &&\n          (this._driverVersion.feature >=7) || \n          (this._driverVersion.feature >= 6 && \n              this._driverVersion.patch >= 7 ))) \n    {\n      upsertOptions.returnDocument = 'after';\n    } else {\n      upsertOptions.returnOriginal = false;\n    }\n\n    /*\n     * 1. Find actual limit and increment points\n     * 2. If limit expired, but Mongo doesn't clean doc by TTL yet, try to replace limit doc completely\n     * 3. If 2 or more Mongo threads try to insert the new limit doc, only the first succeed\n     * 4. Try to upsert from step 1. Actual limit is created now, points are incremented without problems\n     */\n    return new Promise((resolve, reject) => {\n      this._collection.findOneAndUpdate(\n        where,\n        upsertData,\n        upsertOptions\n      ).then((res) => {\n        resolve(res);\n      }).catch((errUpsert) => {\n        if (errUpsert && errUpsert.code === 11000) { // E11000 duplicate key error collection\n          const replaceWhere = Object.assign({ // try to replace OLD limit doc\n            $or: [\n              { expire: { $lte: new Date() } },\n              { expire: { $eq: null } },\n            ],\n            key,\n          }, docAttrs);\n\n          const replaceTo = {\n            $set: Object.assign({\n              key,\n              points,\n              expire: msDuration > 0 ? new Date(Date.now() + msDuration) : null,\n            }, docAttrs)\n          };\n\n          this._collection.findOneAndUpdate(\n            replaceWhere,\n            replaceTo,\n            upsertOptions\n          ).then((res) => {\n            resolve(res);\n          }).catch((errReplace) => {\n            if (errReplace && errReplace.code === 11000) { // E11000 duplicate key error collection\n              this._upsert(key, points, msDuration, forceExpire)\n                .then(res => resolve(res))\n                .catch(err => reject(err));\n            } else {\n              reject(errReplace);\n            }\n          });\n        } else {\n          reject(errUpsert);\n        }\n      });\n    });\n  }\n\n  _get(rlKey, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n\n    const where = Object.assign({\n      key: rlKey,\n      $or: [\n        { expire: { $gt: new Date() } },\n        { expire: { $eq: null } },\n      ],\n    }, docAttrs);\n\n    return this._collection.findOne(where);\n  }\n\n  _delete(rlKey, options = {}) {\n    if (!this._collection) {\n      return Promise.reject(Error('Mongo connection is not established'));\n    }\n\n    const docAttrs = options.attrs || {};\n    const where = Object.assign({ key: rlKey }, docAttrs);\n\n    return this._collection.deleteOne(where)\n      .then(res => res.deletedCount > 0);\n  }\n}\n\nmodule.exports = RateLimiterMongo;\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMySQL extends RateLimiterStoreAbstract {\n  /**\n   * @callback callback\n   * @param {Object} err\n   *\n   * @param {Object} opts\n   * @param {callback} cb\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: anySqlClient,\n   *   storeType: 'knex', // required only for Knex instance\n   *   dbName: 'string',\n   *   tableName: 'string',\n   * }\n   */\n  constructor(opts, cb = null) {\n    super(opts);\n\n    this.client = opts.storeClient;\n    this.clientType = opts.storeType;\n\n    this.dbName = opts.dbName;\n    this.tableName = opts.tableName;\n\n    this.clearExpiredByTimeout = opts.clearExpiredByTimeout;\n\n    this.tableCreated = opts.tableCreated;\n    if (!this.tableCreated) {\n      this._createDbAndTable()\n        .then(() => {\n          this.tableCreated = true;\n          if (this.clearExpiredByTimeout) {\n            this._clearExpiredHourAgo();\n          }\n          if (typeof cb === 'function') {\n            cb();\n          }\n        })\n        .catch((err) => {\n          if (typeof cb === 'function') {\n            cb(err);\n          } else {\n            throw err;\n          }\n        });\n    } else {\n      if (this.clearExpiredByTimeout) {\n        this._clearExpiredHourAgo();\n      }\n      if (typeof cb === 'function') {\n        cb();\n      }\n    }\n  }\n\n  clearExpired(expire) {\n    return new Promise((resolve) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(`DELETE FROM ??.?? WHERE expire < ?`, [this.dbName, this.tableName, expire], () => {\n            this._releaseConnection(conn);\n            resolve();\n          });\n        })\n        .catch(() => {\n          resolve();\n        });\n    });\n  }\n\n  _clearExpiredHourAgo() {\n    if (this._clearExpiredTimeoutId) {\n      clearTimeout(this._clearExpiredTimeoutId);\n    }\n    this._clearExpiredTimeoutId = setTimeout(() => {\n      this.clearExpired(Date.now() - 3600000) // Never rejected\n        .then(() => {\n          this._clearExpiredHourAgo();\n        });\n    }, 300000);\n    this._clearExpiredTimeoutId.unref();\n  }\n\n  /**\n   *\n   * @return Promise<any>\n   * @private\n   */\n  _getConnection() {\n    switch (this.clientType) {\n      case 'pool':\n        return new Promise((resolve, reject) => {\n          this.client.getConnection((errConn, conn) => {\n            if (errConn) {\n              return reject(errConn);\n            }\n\n            resolve(conn);\n          });\n        });\n      case 'sequelize':\n        return this.client.connectionManager.getConnection();\n      case 'knex':\n        return this.client.client.acquireConnection();\n      default:\n        return Promise.resolve(this.client);\n    }\n  }\n\n  _releaseConnection(conn) {\n    switch (this.clientType) {\n      case 'pool':\n        return conn.release();\n      case 'sequelize':\n        return this.client.connectionManager.releaseConnection(conn);\n      case 'knex':\n        return this.client.client.releaseConnection(conn);\n      default:\n        return true;\n    }\n  }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   * @private\n   */\n  _createDbAndTable() {\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(`CREATE DATABASE IF NOT EXISTS \\`${this.dbName}\\`;`, (errDb) => {\n            if (errDb) {\n              this._releaseConnection(conn);\n              return reject(errDb);\n            }\n            conn.query(this._getCreateTableStmt(), (err) => {\n              if (err) {\n                this._releaseConnection(conn);\n                return reject(err);\n              }\n              this._releaseConnection(conn);\n              resolve();\n            });\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _getCreateTableStmt() {\n    return `CREATE TABLE IF NOT EXISTS \\`${this.dbName}\\`.\\`${this.tableName}\\` (` +\n      '`key` VARCHAR(255) CHARACTER SET utf8 NOT NULL,' +\n      '`points` INT(9) NOT NULL default 0,' +\n      '`expire` BIGINT UNSIGNED,' +\n      'PRIMARY KEY (`key`)' +\n      ') ENGINE = INNODB;';\n  }\n\n  get clientType() {\n    return this._clientType;\n  }\n\n  set clientType(value) {\n    if (typeof value === 'undefined') {\n      if (this.client.constructor.name === 'Connection') {\n        value = 'connection';\n      } else if (this.client.constructor.name === 'Pool') {\n        value = 'pool';\n      } else if (this.client.constructor.name === 'Sequelize') {\n        value = 'sequelize';\n      } else {\n        throw new Error('storeType is not defined');\n      }\n    }\n    this._clientType = value.toLowerCase();\n  }\n\n  get dbName() {\n    return this._dbName;\n  }\n\n  set dbName(value) {\n    this._dbName = typeof value === 'undefined' ? 'rtlmtrflx' : value;\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get tableCreated() {\n    return this._tableCreated\n  }\n\n  set tableCreated(value) {\n    this._tableCreated = typeof value === 'undefined' ? false : !!value;\n  }\n\n  get clearExpiredByTimeout() {\n    return this._clearExpiredByTimeout;\n  }\n\n  set clearExpiredByTimeout(value) {\n    this._clearExpiredByTimeout = typeof value === 'undefined' ? true : Boolean(value);\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    const [row] = result;\n\n    res.isFirstInDuration = changedPoints === row.points;\n    res.consumedPoints = res.isFirstInDuration ? changedPoints : row.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = row.expire\n      ? Math.max(row.expire - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _upsertTransaction(conn, key, points, msDuration, forceExpire) {\n    return new Promise((resolve, reject) => {\n      conn.query('BEGIN', (errBegin) => {\n        if (errBegin) {\n          conn.rollback();\n\n          return reject(errBegin);\n        }\n\n        const dateNow = Date.now();\n        const newExpire = msDuration > 0 ? dateNow + msDuration : null;\n\n        let q;\n        let values;\n        if (forceExpire) {\n          q = `INSERT INTO ??.?? VALUES (?, ?, ?)\n          ON DUPLICATE KEY UPDATE \n            points = ?, \n            expire = ?;`;\n          values = [\n            this.dbName, this.tableName, key, points, newExpire,\n            points,\n            newExpire,\n          ];\n        } else {\n          q = `INSERT INTO ??.?? VALUES (?, ?, ?)\n          ON DUPLICATE KEY UPDATE \n            points = IF(expire <= ?, ?, points + (?)), \n            expire = IF(expire <= ?, ?, expire);`;\n          values = [\n            this.dbName, this.tableName, key, points, newExpire,\n            dateNow, points, points,\n            dateNow, newExpire,\n          ];\n        }\n\n        conn.query(q, values, (errUpsert) => {\n          if (errUpsert) {\n            conn.rollback();\n\n            return reject(errUpsert);\n          }\n          conn.query('SELECT points, expire FROM ??.?? WHERE `key` = ?;', [this.dbName, this.tableName, key], (errSelect, res) => {\n            if (errSelect) {\n              conn.rollback();\n\n              return reject(errSelect);\n            }\n\n            conn.query('COMMIT', (err) => {\n              if (err) {\n                conn.rollback();\n\n                return reject(err);\n              }\n\n              resolve(res);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          this._upsertTransaction(conn, key, points, msDuration, forceExpire)\n            .then((res) => {\n              resolve(res);\n              this._releaseConnection(conn);\n            })\n            .catch((err) => {\n              reject(err);\n              this._releaseConnection(conn);\n            });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _get(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(\n            'SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)',\n            [this.dbName, this.tableName, rlKey, Date.now()],\n            (err, res) => {\n              if (err) {\n                reject(err);\n              } else if (res.length === 0) {\n                resolve(null);\n              } else {\n                resolve(res);\n              }\n\n              this._releaseConnection(conn);\n            } // eslint-disable-line\n          );\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _delete(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(\n            'DELETE FROM ??.?? WHERE `key` = ?',\n            [this.dbName, this.tableName, rlKey],\n            (err, res) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(res.affectedRows > 0);\n              }\n\n              this._releaseConnection(conn);\n            } // eslint-disable-line\n          );\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nmodule.exports = RateLimiterMySQL;\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterPostgres extends RateLimiterStoreAbstract {\n  /**\n   * @callback callback\n   * @param {Object} err\n   *\n   * @param {Object} opts\n   * @param {callback} cb\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: postgresClient,\n   *   storeType: 'knex', // required only for Knex instance\n   *   tableName: 'string',\n   * }\n   */\n  constructor(opts, cb = null) {\n    super(opts);\n\n    this.client = opts.storeClient;\n    this.clientType = opts.storeType;\n\n    this.tableName = opts.tableName;\n\n    this.clearExpiredByTimeout = opts.clearExpiredByTimeout;\n\n    this.tableCreated = opts.tableCreated;\n    if (!this.tableCreated) {\n      this._createTable()\n        .then(() => {\n          this.tableCreated = true;\n          if (this.clearExpiredByTimeout) {\n            this._clearExpiredHourAgo();\n          }\n          if (typeof cb === 'function') {\n            cb();\n          }\n        })\n        .catch((err) => {\n          if (typeof cb === 'function') {\n            cb(err);\n          } else {\n            throw err;\n          }\n        });\n    } else {\n      if (typeof cb === 'function') {\n        cb();\n      }\n    }\n  }\n\n  clearExpired(expire) {\n    return new Promise((resolve) => {\n      const q = {\n        name: 'rlflx-clear-expired',\n        text: `DELETE FROM ${this.tableName} WHERE expire < $1`,\n        values: [expire],\n      };\n      this._query(q)\n        .then(() => {\n          resolve();\n        })\n        .catch(() => {\n          // Deleting expired query is not critical\n          resolve();\n        });\n    });\n  }\n\n  /**\n   * Delete all rows expired 1 hour ago once per 5 minutes\n   *\n   * @private\n   */\n  _clearExpiredHourAgo() {\n    if (this._clearExpiredTimeoutId) {\n      clearTimeout(this._clearExpiredTimeoutId);\n    }\n    this._clearExpiredTimeoutId = setTimeout(() => {\n      this.clearExpired(Date.now() - 3600000) // Never rejected\n        .then(() => {\n          this._clearExpiredHourAgo();\n        });\n    }, 300000);\n    this._clearExpiredTimeoutId.unref();\n  }\n\n  /**\n   *\n   * @return Promise<any>\n   * @private\n   */\n  _getConnection() {\n    switch (this.clientType) {\n      case 'pool':\n        return Promise.resolve(this.client);\n      case 'sequelize':\n        return this.client.connectionManager.getConnection();\n      case 'knex':\n        return this.client.client.acquireConnection();\n      case 'typeorm':\n        return Promise.resolve(this.client.driver.master);\n      default:\n        return Promise.resolve(this.client);\n    }\n  }\n\n  _releaseConnection(conn) {\n    switch (this.clientType) {\n      case 'pool':\n        return true;\n      case 'sequelize':\n        return this.client.connectionManager.releaseConnection(conn);\n      case 'knex':\n        return this.client.client.releaseConnection(conn);\n      case 'typeorm':\n        return true;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   * @private\n   */\n  _createTable() {\n    return new Promise((resolve, reject) => {\n      this._query({\n        text: this._getCreateTableStmt(),\n      })\n        .then(() => {\n          resolve();\n        })\n        .catch((err) => {\n          if (err.code === '23505') {\n            // Error: duplicate key value violates unique constraint \"pg_type_typname_nsp_index\"\n            // Postgres doesn't handle concurrent table creation\n            // It is supposed, that table is created by another worker\n            resolve();\n          } else {\n            reject(err);\n          }\n        });\n    });\n  }\n\n  _getCreateTableStmt() {\n    return `CREATE TABLE IF NOT EXISTS ${this.tableName} ( \n      key varchar(255) PRIMARY KEY,\n      points integer NOT NULL DEFAULT 0,\n      expire bigint\n    );`;\n  }\n\n  get clientType() {\n    return this._clientType;\n  }\n\n  set clientType(value) {\n    const constructorName = this.client.constructor.name;\n\n    if (typeof value === 'undefined') {\n      if (constructorName === 'Client') {\n        value = 'client';\n      } else if (\n        constructorName === 'Pool' ||\n        constructorName === 'BoundPool'\n      ) {\n        value = 'pool';\n      } else if (constructorName === 'Sequelize') {\n        value = 'sequelize';\n      } else {\n        throw new Error('storeType is not defined');\n      }\n    }\n\n    this._clientType = value.toLowerCase();\n  }\n\n  get tableName() {\n    return this._tableName;\n  }\n\n  set tableName(value) {\n    this._tableName = typeof value === 'undefined' ? this.keyPrefix : value;\n  }\n\n  get tableCreated() {\n    return this._tableCreated\n  }\n\n  set tableCreated(value) {\n    this._tableCreated = typeof value === 'undefined' ? false : !!value;\n  }\n\n  get clearExpiredByTimeout() {\n    return this._clearExpiredByTimeout;\n  }\n\n  set clearExpiredByTimeout(value) {\n    this._clearExpiredByTimeout = typeof value === 'undefined' ? true : Boolean(value);\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    const row = result.rows[0];\n\n    res.isFirstInDuration = changedPoints === row.points;\n    res.consumedPoints = res.isFirstInDuration ? changedPoints : row.points;\n\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = row.expire\n      ? Math.max(row.expire - Date.now(), 0)\n      : -1;\n\n    return res;\n  }\n\n  _query(q) {\n    const prefix = this.tableName.toLowerCase();\n    const queryObj = { name: `${prefix}:${q.name}`, text: q.text, values: q.values };\n    return new Promise((resolve, reject) => {\n      this._getConnection()\n        .then((conn) => {\n          conn.query(queryObj)\n            .then((res) => {\n              resolve(res);\n              this._releaseConnection(conn);\n            })\n            .catch((err) => {\n              reject(err);\n              this._releaseConnection(conn);\n            });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _upsert(key, points, msDuration, forceExpire = false) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    const newExpire = msDuration > 0 ? Date.now() + msDuration : null;\n    const expireQ = forceExpire\n      ? ' $3 '\n      : ` CASE\n             WHEN ${this.tableName}.expire <= $4 THEN $3\n             ELSE ${this.tableName}.expire\n            END `;\n\n    return this._query({\n      name: forceExpire ? 'rlflx-upsert-force' : 'rlflx-upsert',\n      text: `\n            INSERT INTO ${this.tableName} VALUES ($1, $2, $3)\n              ON CONFLICT(key) DO UPDATE SET\n                points = CASE\n                          WHEN (${this.tableName}.expire <= $4 OR 1=${forceExpire ? 1 : 0}) THEN $2\n                          ELSE ${this.tableName}.points + ($2)\n                         END,\n                expire = ${expireQ}\n            RETURNING points, expire;`,\n      values: [key, points, newExpire, Date.now()],\n    });\n  }\n\n  _get(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return new Promise((resolve, reject) => {\n      this._query({\n        name: 'rlflx-get',\n        text: `\n            SELECT points, expire FROM ${this.tableName} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,\n        values: [rlKey, Date.now()],\n      })\n        .then((res) => {\n          if (res.rowCount === 0) {\n            res = null;\n          }\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  _delete(rlKey) {\n    if (!this.tableCreated) {\n      return Promise.reject(Error('Table is not created yet'));\n    }\n\n    return this._query({\n      name: 'rlflx-delete',\n      text: `DELETE FROM ${this.tableName} WHERE key = $1`,\n      values: [rlKey],\n    })\n      .then(res => res.rowCount > 0);\n  }\n}\n\nmodule.exports = RateLimiterPostgres;\n","const RateLimiterQueueError = require('./component/RateLimiterQueueError')\nconst MAX_QUEUE_SIZE = 4294967295;\nconst KEY_DEFAULT = 'limiter';\n\nmodule.exports = class RateLimiterQueue {\n  constructor(limiterFlexible, opts = {\n    maxQueueSize: MAX_QUEUE_SIZE,\n  }) {\n    this._queueLimiters = {\n      KEY_DEFAULT: new RateLimiterQueueInternal(limiterFlexible, opts)\n    };\n    this._limiterFlexible = limiterFlexible;\n    this._maxQueueSize = opts.maxQueueSize\n  }\n\n  getTokensRemaining(key = KEY_DEFAULT) {\n    if (this._queueLimiters[key]) {\n      return this._queueLimiters[key].getTokensRemaining()\n    } else {\n      return Promise.resolve(this._limiterFlexible.points)\n    }\n  }\n\n  removeTokens(tokens, key = KEY_DEFAULT) {\n    if (!this._queueLimiters[key]) {\n      this._queueLimiters[key] = new RateLimiterQueueInternal(\n        this._limiterFlexible, {\n          key,\n          maxQueueSize: this._maxQueueSize,\n        })\n    }\n\n    return this._queueLimiters[key].removeTokens(tokens)\n  }\n};\n\nclass RateLimiterQueueInternal {\n\n  constructor(limiterFlexible, opts = {\n    maxQueueSize: MAX_QUEUE_SIZE,\n    key: KEY_DEFAULT,\n  }) {\n    this._key = opts.key;\n    this._waitTimeout = null;\n    this._queue = [];\n    this._limiterFlexible = limiterFlexible;\n\n    this._maxQueueSize = opts.maxQueueSize\n  }\n\n  getTokensRemaining() {\n    return this._limiterFlexible.get(this._key)\n      .then((rlRes) => {\n        return rlRes !== null ? rlRes.remainingPoints : this._limiterFlexible.points;\n      })\n  }\n\n  removeTokens(tokens) {\n    const _this = this;\n\n    return new Promise((resolve, reject) => {\n      if (tokens > _this._limiterFlexible.points) {\n        reject(new RateLimiterQueueError(`Requested tokens ${tokens} exceeds maximum ${_this._limiterFlexible.points} tokens per interval`));\n        return\n      }\n\n      if (_this._queue.length > 0) {\n        _this._queueRequest.call(_this, resolve, reject, tokens);\n      } else {\n        _this._limiterFlexible.consume(_this._key, tokens)\n          .then((res) => {\n            resolve(res.remainingPoints);\n          })\n          .catch((rej) => {\n            if (rej instanceof Error) {\n              reject(rej);\n            } else {\n              _this._queueRequest.call(_this, resolve, reject, tokens);\n              if (_this._waitTimeout === null) {\n                _this._waitTimeout = setTimeout(_this._processFIFO.bind(_this), rej.msBeforeNext);\n              }\n            }\n          });\n      }\n    })\n  }\n\n  _queueRequest(resolve, reject, tokens) {\n    const _this = this;\n    if (_this._queue.length < _this._maxQueueSize) {\n      _this._queue.push({resolve, reject, tokens});\n    } else {\n      reject(new RateLimiterQueueError(`Number of requests reached it's maximum ${_this._maxQueueSize}`))\n    }\n  }\n\n  _processFIFO() {\n    const _this = this;\n\n    if (_this._waitTimeout !== null) {\n      clearTimeout(_this._waitTimeout);\n      _this._waitTimeout = null;\n    }\n\n    if (_this._queue.length === 0) {\n      return;\n    }\n\n    const item = _this._queue.shift();\n    _this._limiterFlexible.consume(_this._key, item.tokens)\n      .then((res) => {\n        item.resolve(res.remainingPoints);\n        _this._processFIFO.call(_this);\n      })\n      .catch((rej) => {\n        if (rej instanceof Error) {\n          item.reject(rej);\n          _this._processFIFO.call(_this);\n        } else {\n          _this._queue.unshift(item);\n          if (_this._waitTimeout === null) {\n            _this._waitTimeout = setTimeout(_this._processFIFO.bind(_this), rej.msBeforeNext);\n          }\n        }\n      });\n  }\n}\n","const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nconst incrTtlLuaScript = `redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') \\\nlocal consumed = redis.call('incrby', KEYS[1], ARGV[1]) \\\nlocal ttl = redis.call('pttl', KEYS[1]) \\\nif ttl == -1 then \\\n  redis.call('expire', KEYS[1], ARGV[2]) \\\n  ttl = 1000 * ARGV[2] \\\nend \\\nreturn {consumed, ttl} \\\n`;\n\nclass RateLimiterRedis extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   redis: RedisClient\n   *   rejectIfRedisNotReady: boolean = false - reject / invoke insuranceLimiter immediately when redis connection is not \"ready\"\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n    if (opts.redis) {\n      this.client = opts.redis;\n    } else {\n      this.client = opts.storeClient;\n    }\n\n    this._rejectIfRedisNotReady = !!opts.rejectIfRedisNotReady;\n\n    if (typeof this.client.defineCommand === 'function') {\n      this.client.defineCommand(\"rlflxIncr\", {\n        numberOfKeys: 1,\n        lua: incrTtlLuaScript,\n      });\n    }\n  }\n\n  /**\n   * Prevent actual redis call if redis connection is not ready\n   * Because of different connection state checks for ioredis and node-redis, only this clients would be actually checked.\n   * For any other clients all the requests would be passed directly to redis client\n   * @return {boolean}\n   * @private\n   */\n  _isRedisReady() {\n    if (!this._rejectIfRedisNotReady) {\n      return true;\n    }\n    // ioredis client\n    if (this.client.status && this.client.status !== 'ready') {\n      return false;\n    }\n    // node-redis client\n    if (typeof this.client.isReady === 'function' && !this.client.isReady()) {\n      return false;\n    }\n    return true;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    let [consumed, resTtlMs] = result;\n    // Support ioredis results format\n    if (Array.isArray(consumed)) {\n      [, consumed] = consumed;\n      [, resTtlMs] = resTtlMs;\n    }\n\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(consumed);\n    res.isFirstInDuration = res.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = resTtlMs;\n\n    return res;\n  }\n\n  _upsert(rlKey, points, msDuration, forceExpire = false) {\n    return new Promise((resolve, reject) => {\n      if (!this._isRedisReady()) {\n        return reject(new Error('Redis connection is not ready'));\n      }\n\n      const secDuration = Math.floor(msDuration / 1000);\n      const multi = this.client.multi();\n      if (forceExpire) {\n        if (secDuration > 0) {\n          multi.set(rlKey, points, 'EX', secDuration);\n        } else {\n          multi.set(rlKey, points);\n        }\n\n        multi.pttl(rlKey)\n          .exec((err, res) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve(res);\n          });\n      } else {\n        if (secDuration > 0) {\n          const incrCallback = function(err, result) {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve(result);\n          };\n\n          if (typeof this.client.rlflxIncr === 'function') {\n            this.client.rlflxIncr(rlKey, points, secDuration, incrCallback);\n          } else {\n            this.client.eval(incrTtlLuaScript, 1, rlKey, points, secDuration, incrCallback);\n          }\n        } else {\n          multi.incrby(rlKey, points)\n            .pttl(rlKey)\n            .exec((err, res) => {\n              if (err) {\n                return reject(err);\n              }\n\n              return resolve(res);\n            });\n        }\n      }\n    });\n  }\n\n  _get(rlKey) {\n    return new Promise((resolve, reject) => {\n      if (!this._isRedisReady()) {\n        return reject(new Error('Redis connection is not ready'));\n      }\n\n      this.client\n        .multi()\n        .get(rlKey)\n        .pttl(rlKey)\n        .exec((err, res) => {\n          if (err) {\n            reject(err);\n          } else {\n            const [points] = res;\n            if (points === null) {\n              return resolve(null)\n            }\n\n            resolve(res);\n          }\n        });\n    });\n  }\n\n  _delete(rlKey) {\n    return new Promise((resolve, reject) => {\n      this.client.del(rlKey, (err, res) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(res > 0);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = RateLimiterRedis;\n","module.exports = class RateLimiterRes {\n  constructor(remainingPoints, msBeforeNext, consumedPoints, isFirstInDuration) {\n    this.remainingPoints = typeof remainingPoints === 'undefined' ? 0 : remainingPoints; // Remaining points in current duration\n    this.msBeforeNext = typeof msBeforeNext === 'undefined' ? 0 : msBeforeNext; // Milliseconds before next action\n    this.consumedPoints = typeof consumedPoints === 'undefined' ? 0 : consumedPoints; // Consumed points in current duration\n    this.isFirstInDuration = typeof isFirstInDuration === 'undefined' ? false : isFirstInDuration;\n  }\n\n  get msBeforeNext() {\n    return this._msBeforeNext;\n  }\n\n  set msBeforeNext(ms) {\n    this._msBeforeNext = ms;\n    return this;\n  }\n\n  get remainingPoints() {\n    return this._remainingPoints;\n  }\n\n  set remainingPoints(p) {\n    this._remainingPoints = p;\n    return this;\n  }\n\n  get consumedPoints() {\n    return this._consumedPoints;\n  }\n\n  set consumedPoints(p) {\n    this._consumedPoints = p;\n    return this;\n  }\n\n  get isFirstInDuration() {\n    return this._isFirstInDuration;\n  }\n\n  set isFirstInDuration(value) {\n    this._isFirstInDuration = Boolean(value);\n  }\n\n  _getDecoratedProperties() {\n    return {\n      remainingPoints: this.remainingPoints,\n      msBeforeNext: this.msBeforeNext,\n      consumedPoints: this.consumedPoints,\n      isFirstInDuration: this.isFirstInDuration,\n    };\n  }\n\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    return this._getDecoratedProperties();\n  }\n\n  toString() {\n    return JSON.stringify(this._getDecoratedProperties());\n  }\n\n  toJSON() {\n    return this._getDecoratedProperties();\n  }\n};\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\nconst BlockedKeys = require('./component/BlockedKeys');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RateLimiterStoreAbstract extends RateLimiterAbstract {\n  /**\n   *\n   * @param opts Object Defaults {\n   *   ... see other in RateLimiterAbstract\n   *\n   *   inMemoryBlockOnConsumed: 40, // Number of points when key is blocked\n   *   inMemoryBlockDuration: 10, // Block duration in seconds\n   *   insuranceLimiter: RateLimiterAbstract\n   * }\n   */\n  constructor(opts = {}) {\n    super(opts);\n\n    this.inMemoryBlockOnConsumed = opts.inMemoryBlockOnConsumed || opts.inmemoryBlockOnConsumed;\n    this.inMemoryBlockDuration = opts.inMemoryBlockDuration || opts.inmemoryBlockDuration;\n    this.insuranceLimiter = opts.insuranceLimiter;\n    this._inMemoryBlockedKeys = new BlockedKeys();\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  set client(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('storeClient is not set');\n    }\n    this._client = value;\n  }\n\n  /**\n   * Have to be launched after consume\n   * It blocks key and execute evenly depending on result from store\n   *\n   * It uses _getRateLimiterRes function to prepare RateLimiterRes from store result\n   *\n   * @param resolve\n   * @param reject\n   * @param rlKey\n   * @param changedPoints\n   * @param storeResult\n   * @param {Object} options\n   * @private\n   */\n  _afterConsume(resolve, reject, rlKey, changedPoints, storeResult, options = {}) {\n    const res = this._getRateLimiterRes(rlKey, changedPoints, storeResult);\n\n    if (this.inMemoryBlockOnConsumed > 0 && !(this.inMemoryBlockDuration > 0)\n      && res.consumedPoints >= this.inMemoryBlockOnConsumed\n    ) {\n      this._inMemoryBlockedKeys.addMs(rlKey, res.msBeforeNext);\n      if (res.consumedPoints > this.points) {\n        return reject(res);\n      } else {\n        return resolve(res)\n      }\n    } else if (res.consumedPoints > this.points) {\n      let blockPromise = Promise.resolve();\n      // Block only first time when consumed more than points\n      if (this.blockDuration > 0 && res.consumedPoints <= (this.points + changedPoints)) {\n        res.msBeforeNext = this.msBlockDuration;\n        blockPromise = this._block(rlKey, res.consumedPoints, this.msBlockDuration, options);\n      }\n\n      if (this.inMemoryBlockOnConsumed > 0 && res.consumedPoints >= this.inMemoryBlockOnConsumed) {\n        // Block key for this.inMemoryBlockDuration seconds\n        this._inMemoryBlockedKeys.add(rlKey, this.inMemoryBlockDuration);\n        res.msBeforeNext = this.msInMemoryBlockDuration;\n      }\n\n      blockPromise\n        .then(() => {\n          reject(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    } else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n      let delay = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2));\n      if (delay < this.execEvenlyMinDelayMs) {\n        delay = res.consumedPoints * this.execEvenlyMinDelayMs;\n      }\n\n      setTimeout(resolve, delay, res);\n    } else {\n      resolve(res);\n    }\n  }\n\n  _handleError(err, funcName, resolve, reject, key, data = false, options = {}) {\n    if (!(this.insuranceLimiter instanceof RateLimiterAbstract)) {\n      reject(err);\n    } else {\n      this.insuranceLimiter[funcName](key, data, options)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((res) => {\n          reject(res);\n        });\n    }\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @returns {BlockedKeys}\n   * @private\n   */\n  get _inmemoryBlockedKeys() {\n    return this._inMemoryBlockedKeys\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @param rlKey\n   * @returns {number}\n   */\n  getInmemoryBlockMsBeforeExpire(rlKey) {\n    return this.getInMemoryBlockMsBeforeExpire(rlKey)\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @returns {number|number}\n   */\n  get inmemoryBlockOnConsumed() {\n    return this.inMemoryBlockOnConsumed;\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @param value\n   */\n  set inmemoryBlockOnConsumed(value) {\n    this.inMemoryBlockOnConsumed = value;\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @returns {number|number}\n   */\n  get inmemoryBlockDuration() {\n    return this.inMemoryBlockDuration;\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @param value\n   */\n  set inmemoryBlockDuration(value) {\n    this.inMemoryBlockDuration = value\n  }\n\n  /**\n   * @deprecated Use camelCase version\n   * @returns {number}\n   */\n  get msInmemoryBlockDuration() {\n    return this.inMemoryBlockDuration * 1000;\n  }\n\n  getInMemoryBlockMsBeforeExpire(rlKey) {\n    if (this.inMemoryBlockOnConsumed > 0) {\n      return this._inMemoryBlockedKeys.msBeforeExpire(rlKey);\n    }\n\n    return 0;\n  }\n\n  get inMemoryBlockOnConsumed() {\n    return this._inMemoryBlockOnConsumed;\n  }\n\n  set inMemoryBlockOnConsumed(value) {\n    this._inMemoryBlockOnConsumed = value ? parseInt(value) : 0;\n    if (this.inMemoryBlockOnConsumed > 0 && this.points > this.inMemoryBlockOnConsumed) {\n      throw new Error('inMemoryBlockOnConsumed option must be greater or equal \"points\" option');\n    }\n  }\n\n  get inMemoryBlockDuration() {\n    return this._inMemoryBlockDuration;\n  }\n\n  set inMemoryBlockDuration(value) {\n    this._inMemoryBlockDuration = value ? parseInt(value) : 0;\n    if (this.inMemoryBlockDuration > 0 && this.inMemoryBlockOnConsumed === 0) {\n      throw new Error('inMemoryBlockOnConsumed option must be set up');\n    }\n  }\n\n  get msInMemoryBlockDuration() {\n    return this._inMemoryBlockDuration * 1000;\n  }\n\n  get insuranceLimiter() {\n    return this._insuranceLimiter;\n  }\n\n  set insuranceLimiter(value) {\n    if (typeof value !== 'undefined' && !(value instanceof RateLimiterAbstract)) {\n      throw new Error('insuranceLimiter must be instance of RateLimiterAbstract');\n    }\n    this._insuranceLimiter = value;\n    if (this._insuranceLimiter) {\n      this._insuranceLimiter.blockDuration = this.blockDuration;\n      this._insuranceLimiter.execEvenly = this.execEvenly;\n    }\n  }\n\n  /**\n   * Block any key for secDuration seconds\n   *\n   * @param key\n   * @param secDuration\n   * @param {Object} options\n   *\n   * @return Promise<RateLimiterRes>\n   */\n  block(key, secDuration, options = {}) {\n    const msDuration = secDuration * 1000;\n    return this._block(this.getKey(key), this.points + 1, msDuration, options);\n  }\n\n  /**\n   * Set points by key for any duration\n   *\n   * @param key\n   * @param points\n   * @param secDuration\n   * @param {Object} options\n   *\n   * @return Promise<RateLimiterRes>\n   */\n  set(key, points, secDuration, options = {}) {\n    const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n    return this._block(this.getKey(key), points, msDuration, options);\n  }\n\n  /**\n   *\n   * @param key\n   * @param pointsToConsume\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return new Promise((resolve, reject) => {\n      const rlKey = this.getKey(key);\n\n      const inMemoryBlockMsBeforeExpire = this.getInMemoryBlockMsBeforeExpire(rlKey);\n      if (inMemoryBlockMsBeforeExpire > 0) {\n        return reject(new RateLimiterRes(0, inMemoryBlockMsBeforeExpire));\n      }\n\n      this._upsert(rlKey, pointsToConsume, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          this._afterConsume(resolve, reject, rlKey, pointsToConsume, res);\n        })\n        .catch((err) => {\n          this._handleError(err, 'consume', resolve, reject, key, pointsToConsume, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param points\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  penalty(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, points, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          resolve(this._getRateLimiterRes(rlKey, points, res));\n        })\n        .catch((err) => {\n          this._handleError(err, 'penalty', resolve, reject, key, points, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param points\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>\n   */\n  reward(key, points = 1, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, -points, this._getKeySecDuration(options) * 1000, false, options)\n        .then((res) => {\n          resolve(this._getRateLimiterRes(rlKey, -points, res));\n        })\n        .catch((err) => {\n          this._handleError(err, 'reward', resolve, reject, key, points, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param {Object} options\n   * @returns Promise<RateLimiterRes>|null\n   */\n  get(key, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._get(rlKey, options)\n        .then((res) => {\n          if (res === null || typeof res === 'undefined') {\n            resolve(null);\n          } else {\n            resolve(this._getRateLimiterRes(rlKey, 0, res));\n          }\n        })\n        .catch((err) => {\n          this._handleError(err, 'get', resolve, reject, key, options);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param key\n   * @param {Object} options\n   * @returns Promise<boolean>\n   */\n  delete(key, options = {}) {\n    const rlKey = this.getKey(key);\n    return new Promise((resolve, reject) => {\n      this._delete(rlKey, options)\n        .then((res) => {\n          this._inMemoryBlockedKeys.delete(rlKey);\n          resolve(res);\n        })\n        .catch((err) => {\n          this._handleError(err, 'delete', resolve, reject, key, options);\n        });\n    });\n  }\n\n  /**\n   * Cleanup keys no-matter expired or not.\n   */\n  deleteInMemoryBlockedAll() {\n    this._inMemoryBlockedKeys.delete();\n  }\n\n  /**\n   * Get RateLimiterRes object filled depending on storeResult, which specific for exact store\n   *\n   * @param rlKey\n   * @param changedPoints\n   * @param storeResult\n   * @private\n   */\n  _getRateLimiterRes(rlKey, changedPoints, storeResult) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_getRateLimiterRes'!\");\n  }\n\n  /**\n   * Block key for this.msBlockDuration milliseconds\n   * Usually, it just prolongs lifetime of key\n   *\n   * @param rlKey\n   * @param initPoints\n   * @param msDuration\n   * @param {Object} options\n   *\n   * @return Promise<any>\n   */\n  _block(rlKey, initPoints, msDuration, options = {}) {\n    return new Promise((resolve, reject) => {\n      this._upsert(rlKey, initPoints, msDuration, true, options)\n        .then(() => {\n          resolve(new RateLimiterRes(0, msDuration > 0 ? msDuration : -1, initPoints));\n        })\n        .catch((err) => {\n          this._handleError(err, 'block', resolve, reject, this.parseKey(rlKey), msDuration / 1000, options);\n        });\n    });\n  }\n\n  /**\n   * Have to be implemented in every limiter\n   * Resolve with raw result from Store OR null if rlKey is not set\n   * or Reject with error\n   *\n   * @param rlKey\n   * @param {Object} options\n   * @private\n   *\n   * @return Promise<any>\n   */\n  _get(rlKey, options = {}) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_get'!\");\n  }\n\n  /**\n   * Have to be implemented\n   * Resolve with true OR false if rlKey doesn't exist\n   * or Reject with error\n   *\n   * @param rlKey\n   * @param {Object} options\n   * @private\n   *\n   * @return Promise<any>\n   */\n  _delete(rlKey, options = {}) { // eslint-disable-line no-unused-vars\n    throw new Error(\"You have to implement the method '_delete'!\");\n  }\n\n  /**\n   * Have to be implemented\n   * Resolve with object used for {@link _getRateLimiterRes} to generate {@link RateLimiterRes}\n   *\n   * @param {string} rlKey\n   * @param {number} points\n   * @param {number} msDuration\n   * @param {boolean} forceExpire\n   * @param {Object} options\n   * @abstract\n   *\n   * @return Promise<Object>\n   */\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    throw new Error(\"You have to implement the method '_upsert'!\");\n  }\n};\n","const RateLimiterAbstract = require('./RateLimiterAbstract');\n\nmodule.exports = class RateLimiterUnion {\n  constructor(...limiters) {\n    if (limiters.length < 1) {\n      throw new Error('RateLimiterUnion: at least one limiter have to be passed');\n    }\n    limiters.forEach((limiter) => {\n      if (!(limiter instanceof RateLimiterAbstract)) {\n        throw new Error('RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract');\n      }\n    });\n\n    this._limiters = limiters;\n  }\n\n  consume(key, points = 1) {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      this._limiters.forEach((limiter) => {\n        promises.push(limiter.consume(key, points).catch(rej => ({ rejected: true, rej })));\n      });\n\n      Promise.all(promises)\n        .then((res) => {\n          const resObj = {};\n          let rejected = false;\n\n          res.forEach((item) => {\n            if (item.rejected === true) {\n              rejected = true;\n            }\n          });\n\n          for (let i = 0; i < res.length; i++) {\n            if (rejected && res[i].rejected === true) {\n              resObj[this._limiters[i].keyPrefix] = res[i].rej;\n            } else if (!rejected) {\n              resObj[this._limiters[i].keyPrefix] = res[i];\n            }\n          }\n\n          if (rejected) {\n            reject(resObj);\n          } else {\n            resolve(resObj);\n          }\n        });\n    });\n  }\n};\n","module.exports = class BlockedKeys {\n  constructor() {\n    this._keys = {}; // {'key': 1526279430331}\n    this._addedKeysAmount = 0;\n  }\n\n  collectExpired() {\n    const now = Date.now();\n\n    Object.keys(this._keys).forEach((key) => {\n      if (this._keys[key] <= now) {\n        delete this._keys[key];\n      }\n    });\n\n    this._addedKeysAmount = Object.keys(this._keys).length;\n  }\n\n  /**\n   * Add new blocked key\n   *\n   * @param key String\n   * @param sec Number\n   */\n  add(key, sec) {\n    this.addMs(key, sec * 1000);\n  }\n\n  /**\n   * Add new blocked key for ms\n   *\n   * @param key String\n   * @param ms Number\n   */\n  addMs(key, ms) {\n    this._keys[key] = Date.now() + ms;\n    this._addedKeysAmount++;\n    if (this._addedKeysAmount > 999) {\n      this.collectExpired();\n    }\n  }\n\n  /**\n   * 0 means not blocked\n   *\n   * @param key\n   * @returns {number}\n   */\n  msBeforeExpire(key) {\n    const expire = this._keys[key];\n\n    if (expire && expire >= Date.now()) {\n      this.collectExpired();\n      const now = Date.now();\n      return expire >= now ? expire - now : 0;\n    }\n\n    return 0;\n  }\n\n  /**\n   * If key is not given, delete all data in memory\n   * \n   * @param {string|undefined} key\n   */\n  delete(key) {\n    if (key) {\n      delete this._keys[key];\n    } else {\n      Object.keys(this._keys).forEach((key) => {\n        delete this._keys[key];\n      });\n    }\n  }\n};\n","const BlockedKeys = require('./BlockedKeys');\n\nmodule.exports = BlockedKeys;\n","const Record = require('./Record');\nconst RateLimiterRes = require('../../RateLimiterRes');\n\nmodule.exports = class MemoryStorage {\n  constructor() {\n    /**\n     * @type {Object.<string, Record>}\n     * @private\n     */\n    this._storage = {};\n  }\n\n  incrby(key, value, durationSec) {\n    if (this._storage[key]) {\n      const msBeforeExpires = this._storage[key].expiresAt\n        ? this._storage[key].expiresAt.getTime() - new Date().getTime()\n        : -1;\n      if (msBeforeExpires !== 0) {\n        // Change value\n        this._storage[key].value = this._storage[key].value + value;\n\n        return new RateLimiterRes(0, msBeforeExpires, this._storage[key].value, false);\n      }\n\n      return this.set(key, value, durationSec);\n    }\n    return this.set(key, value, durationSec);\n  }\n\n  set(key, value, durationSec) {\n    const durationMs = durationSec * 1000;\n\n    if (this._storage[key] && this._storage[key].timeoutId) {\n      clearTimeout(this._storage[key].timeoutId);\n    }\n\n    this._storage[key] = new Record(\n      value,\n      durationMs > 0 ? new Date(Date.now() + durationMs) : null\n    );\n    if (durationMs > 0) {\n      this._storage[key].timeoutId = setTimeout(() => {\n        delete this._storage[key];\n      }, durationMs);\n      if (this._storage[key].timeoutId.unref) {\n        this._storage[key].timeoutId.unref();\n      }\n    }\n\n    return new RateLimiterRes(0, durationMs === 0 ? -1 : durationMs, this._storage[key].value, true);\n  }\n\n  /**\n   *\n   * @param key\n   * @returns {*}\n   */\n  get(key) {\n    if (this._storage[key]) {\n      const msBeforeExpires = this._storage[key].expiresAt\n        ? this._storage[key].expiresAt.getTime() - new Date().getTime()\n        : -1;\n      return new RateLimiterRes(0, msBeforeExpires, this._storage[key].value, false);\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param key\n   * @returns {boolean}\n   */\n  delete(key) {\n    if (this._storage[key]) {\n      if (this._storage[key].timeoutId) {\n        clearTimeout(this._storage[key].timeoutId);\n      }\n      delete this._storage[key];\n      return true;\n    }\n    return false;\n  }\n};\n","module.exports = class Record {\n  /**\n   *\n   * @param value int\n   * @param expiresAt Date|int\n   * @param timeoutId\n   */\n  constructor(value, expiresAt, timeoutId = null) {\n    this.value = value;\n    this.expiresAt = expiresAt;\n    this.timeoutId = timeoutId;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = parseInt(value);\n  }\n\n  get expiresAt() {\n    return this._expiresAt;\n  }\n\n  set expiresAt(value) {\n    if (!(value instanceof Date) && Number.isInteger(value)) {\n      value = new Date(value);\n    }\n    this._expiresAt = value;\n  }\n\n  get timeoutId() {\n    return this._timeoutId;\n  }\n\n  set timeoutId(value) {\n    this._timeoutId = value;\n  }\n};\n","module.exports = class RateLimiterQueueError extends Error {\n  constructor(message, extra) {\n    super();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.name = 'CustomError';\n    this.message = message;\n    if (extra) {\n      this.extra = extra;\n    }\n  }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableWebToNodeStream = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\n/**\n * Converts a Web-API stream into Node stream.Readable class\n * Node stream readable: https://nodejs.org/api/stream.html#stream_readable_streams\n * Web API readable-stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n * Node readable stream: https://nodejs.org/api/stream.html#stream_readable_streams\n */\nclass ReadableWebToNodeStream extends readable_stream_1.Readable {\n    /**\n     *\n     * @param stream Readable​Stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n     */\n    constructor(stream) {\n        super();\n        this.bytesRead = 0;\n        this.released = false;\n        this.reader = stream.getReader();\n    }\n    /**\n     * Implementation of readable._read(size).\n     * When readable._read() is called, if data is available from the resource,\n     * the implementation should begin pushing that data into the read queue\n     * https://nodejs.org/api/stream.html#stream_readable_read_size_1\n     */\n    async _read() {\n        // Should start pushing data into the queue\n        // Read data from the underlying Web-API-readable-stream\n        if (this.released) {\n            this.push(null); // Signal EOF\n            return;\n        }\n        this.pendingRead = this.reader.read();\n        const data = await this.pendingRead;\n        // clear the promise before pushing pushing new data to the queue and allow sequential calls to _read()\n        delete this.pendingRead;\n        if (data.done || this.released) {\n            this.push(null); // Signal EOF\n        }\n        else {\n            this.bytesRead += data.value.length;\n            this.push(data.value); // Push new data to the queue\n        }\n    }\n    /**\n     * If there is no unresolved read call to Web-API Readable​Stream immediately returns;\n     * otherwise will wait until the read is resolved.\n     */\n    async waitForReadToComplete() {\n        if (this.pendingRead) {\n            await this.pendingRead;\n        }\n    }\n    /**\n     * Close wrapper\n     */\n    async close() {\n        await this.syncAndRelease();\n    }\n    async syncAndRelease() {\n        this.released = true;\n        await this.waitForReadToComplete();\n        await this.reader.releaseLock();\n    }\n}\nexports.ReadableWebToNodeStream = ReadableWebToNodeStream;\n//# sourceMappingURL=index.js.map","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict'\n\nmodule.exports = Receptacle\nvar toMS = require('ms')\nvar cache = Receptacle.prototype\nvar counter = new Date() % 1e9\n\nfunction getUID () { return (Math.random() * 1e9 >>> 0) + (counter++) }\n\n/**\n * Creates a cache with a maximum key size.\n *\n * @constructor\n * @param {Object} options\n * @param {Number} [options.max=Infinity] the maximum number of keys allowed in the cache (lru).\n * @param {Array} [options.items=[]] the default items in the cache.\n */\nfunction Receptacle (options) {\n  options = options || {}\n  this.id = options.id || getUID()\n  this.max = options.max || Infinity\n  this.items = options.items || []\n  this._lookup = {}\n  this.size = this.items.length\n  this.lastModified = new Date(options.lastModified || new Date())\n\n  // Setup initial timers and indexes for the cache.\n  for (var item, ttl, i = this.items.length; i--;) {\n    item = this.items[i]\n    ttl = new Date(item.expires) - new Date()\n    this._lookup[item.key] = item\n    if (ttl > 0) this.expire(item.key, ttl)\n    else if (ttl <= 0) this.delete(item.key)\n  }\n}\n\n/**\n * Tests if a key is currently in the cache.\n * Does not check if slot is empty.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {Boolean}\n */\ncache.has = function (key) {\n  return key in this._lookup\n}\n\n/**\n * Retrieves a key from the cache and marks it as recently used.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {*}\n */\ncache.get = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  // Update expiry for \"refresh\" keys\n  if (record.refresh) this.expire(key, record.refresh)\n  // Move to front of the line.\n  this.items.splice(this.items.indexOf(record), 1)\n  this.items.push(record)\n  return record.value\n}\n\n/**\n * Retrieves user meta data for a cached item.\n *\n * @param {String} key - the key to retrieve meta data from the cache.\n * @return {*}\n */\ncache.meta = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  if (!('meta' in record)) return null\n  return record.meta\n}\n\n/**\n * Puts a key into the cache with an optional expiry time.\n *\n * @param {String} key - the key for the value in the cache.\n * @param {*} value - the value to place at the key.\n * @param {Number} [options.ttl] - a time after which the key will be removed.\n * @return {Receptacle}\n */\ncache.set = function (key, value, options) {\n  var oldRecord = this._lookup[key]\n  var record = this._lookup[key] = { key: key, value: value }\n  // Mark cache as modified.\n  this.lastModified = new Date()\n\n  if (oldRecord) {\n    // Replace an old key.\n    clearTimeout(oldRecord.timeout)\n    this.items.splice(this.items.indexOf(oldRecord), 1, record)\n  } else {\n    // Remove least used item if needed.\n    if (this.size >= this.max) this.delete(this.items[0].key)\n    // Add a new key.\n    this.items.push(record)\n    this.size++\n  }\n\n  if (options) {\n    // Setup key expiry.\n    if ('ttl' in options) this.expire(key, options.ttl)\n    // Store user options in the record.\n    if ('meta' in options) record.meta = options.meta\n    // Mark a auto refresh key.\n    if (options.refresh) record.refresh = options.ttl\n  }\n\n  return this\n}\n\n/**\n * Deletes an item from the cache.\n *\n * @param {String} key - the key to remove.\n * @return {Receptacle}\n */\ncache.delete = function (key) {\n  var record = this._lookup[key]\n  if (!record) return false\n  this.lastModified = new Date()\n  this.items.splice(this.items.indexOf(record), 1)\n  clearTimeout(record.timeout)\n  delete this._lookup[key]\n  this.size--\n  return this\n}\n\n/**\n * Utility to register a key that will be removed after some time.\n *\n * @param {String} key - the key to remove.\n * @param {Number} [ms] - the timeout before removal.\n * @return {Receptacle}\n */\ncache.expire = function (key, ttl) {\n  var ms = ttl || 0\n  var record = this._lookup[key]\n  if (!record) return this\n  if (typeof ms === 'string') ms = toMS(ttl)\n  if (typeof ms !== 'number') throw new TypeError('Expiration time must be a string or number.')\n  clearTimeout(record.timeout)\n  record.timeout = setTimeout(this.delete.bind(this, record.key), ms)\n  record.expires = Number(new Date()) + ms\n  return this\n}\n\n/**\n * Deletes all items from the cache.\n * @return {Receptacle}\n */\ncache.clear = function () {\n  for (var i = this.items.length; i--;) this.delete(this.items[i].key)\n  return this\n}\n\n/**\n * Fixes serialization issues in polyfilled environments.\n * Ensures non-cyclical serialized object.\n */\ncache.toJSON = function () {\n  var items = new Array(this.items.length)\n  var item\n  for (var i = items.length; i--;) {\n    item = this.items[i]\n    items[i] = {\n      key: item.key,\n      meta: item.meta,\n      value: item.value,\n      expires: item.expires,\n      refresh: item.refresh\n    }\n  }\n\n  return {\n    id: this.id,\n    max: isFinite(this.max) ? this.max : undefined,\n    lastModified: this.lastModified,\n    items: items\n  }\n}\n","'use strict'\n\nconst getTime = require('./time')\n\nclass Retimer {\n  constructor (callback, timeout, args) {\n    const that = this\n\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._args = args\n    this._triggered = false\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started)\n        that._schedule(that._scheduled)\n      } else {\n        that._triggered = true\n        callback.apply(null, that._args)\n      }\n    }\n\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  reschedule (timeout) {\n    if (!timeout) {\n      timeout = this._scheduled\n    }\n    const now = getTime()\n    if ((now + timeout) - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer)\n      this._schedule(timeout)\n    } else if (!this._triggered) {\n      this._started = now\n      this._rescheduled = timeout\n    } else {\n      this._schedule(timeout)\n    }\n  }\n\n  _schedule (timeout) {\n    this._triggered = false\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  clear () {\n    clearTimeout(this._timer)\n  }\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  let args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    /* eslint-disable no-var */\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n","'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","/*! run-parallel-limit. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallelLimit\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  let results, len, pending, keys, isErrored\n  let isSync = true\n  let next\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      let key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  }\n\n  isSync = false\n}\n","import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n});\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.currentObservers = null;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function (value) {\n        var _this = this;\n        errorContext(function () {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                if (!_this.currentObservers) {\n                    _this.currentObservers = Array.from(_this.observers);\n                }\n                try {\n                    for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var observer = _c.value;\n                        observer.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function (err) {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function () {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function () {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function (subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function (subscriber) {\n        var _this = this;\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(function () {\n            _this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    };\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, (this._value = value));\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","export var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind: kind,\n        value: value,\n        error: error,\n    };\n}\n//# sourceMappingURL=NotificationFactories.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { Observable } from '../Observable';\nexport var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period, scheduler) {\n    if (period === void 0) { period = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n//# sourceMappingURL=interval.js.map","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable(function (subscriber) {\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        var n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n//# sourceMappingURL=timer.js.map","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var concurrent = popNumber(args, Infinity);\n    var sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n//# sourceMappingURL=merge.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n//# sourceMappingURL=of.js.map","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n}\n//# sourceMappingURL=throwError.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate(function (source, subscriber) {\n        var innerSub = null;\n        var syncUnsub = false;\n        var handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n//# sourceMappingURL=catchError.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function (a, i) { return map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom(project(a, i))); }, concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate(function (source, subscriber) { return mergeInternals(source, subscriber, project, concurrent); });\n}\n//# sourceMappingURL=mergeMap.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function () {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n    var doInnerSub = function (value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, function () {\n            innerComplete = true;\n        }, undefined, function () {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function () {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while (buffer.length && active < concurrent) {\n                        _loop_1();\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function () {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n//# sourceMappingURL=mergeInternals.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport var TimeoutError = createErrorClass(function (_super) {\n    return function TimeoutErrorImpl(info) {\n        if (info === void 0) { info = null; }\n        _super(this);\n        this.message = 'Timeout has occurred';\n        this.name = 'TimeoutError';\n        this.info = info;\n    };\n});\nexport function timeout(config, schedulerArg) {\n    var _a = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config), first = _a.first, each = _a.each, _b = _a.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler : _c, _d = _a.meta, meta = _d === void 0 ? null : _d;\n    if (first == null && each == null) {\n        throw new TypeError('No timeout provided.');\n    }\n    return operate(function (source, subscriber) {\n        var originalSourceSubscription;\n        var timerSubscription;\n        var lastValue = null;\n        var seen = 0;\n        var startTimer = function (delay) {\n            timerSubscription = executeSchedule(subscriber, scheduler, function () {\n                try {\n                    originalSourceSubscription.unsubscribe();\n                    innerFrom(_with({\n                        meta: meta,\n                        lastValue: lastValue,\n                        seen: seen,\n                    })).subscribe(subscriber);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }, delay);\n        };\n        originalSourceSubscription = source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            seen++;\n            subscriber.next((lastValue = value));\n            each > 0 && startTimer(each);\n        }, undefined, undefined, function () {\n            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\n                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            }\n            lastValue = null;\n        }));\n        !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);\n    });\n}\nfunction timeoutErrorFactory(info) {\n    throw new TimeoutError(info);\n}\n//# sourceMappingURL=timeout.js.map","import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n    setInterval: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = intervalProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearInterval: function (handle) {\n        var delegate = intervalProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=intervalProvider.js.map","import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        var _a;\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map","export var dateTimestampProvider = {\n    now: function () {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=dateTimestampProvider.js.map","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar Scheduler = (function () {\n    function Scheduler(schedulerActionCtor, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    };\n    Scheduler.now = dateTimestampProvider.now;\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var asyncScheduler = new AsyncScheduler(AsyncAction);\nexport var async = asyncScheduler;\n//# sourceMappingURL=async.js.map","import { __extends } from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        var _this = _super.call(this, SchedulerAction, now) || this;\n        _this.actions = [];\n        _this._active = false;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n//# sourceMappingURL=args.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n//# sourceMappingURL=isDate.js.map","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n//# sourceMappingURL=isScheduler.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n","'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict'\n\nconst { AbortController } = globalThis\n\n// @ts-expect-error no types\nconst retimer = require('retimer')\n\nclass TimeoutController extends AbortController {\n  /**\n   * @constructor\n   * @param {number} ms milliseconds\n   */\n  constructor (ms) {\n    super()\n    this._ms = ms\n    this._timer = retimer(() => this.abort(), ms)\n    // Patch for safari not supported extending built in classes\n    Object.setPrototypeOf(this, TimeoutController.prototype)\n  }\n\n  /**\n   * Aborts the controller and clears the timer\n   */\n  abort () {\n    this._timer.clear()\n    return super.abort()\n  }\n\n  /**\n   * Clears the timer\n   */\n  clear () {\n    this._timer.clear()\n  }\n\n  /**\n   * Resets the timer\n   */\n  reset () {\n    this._timer.clear()\n    this._timer = retimer(() => this.abort(), this._ms)\n  }\n}\n\nmodule.exports = {\n  TimeoutController\n}\n","'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = require(\"utf8-byte-length/browser\");\nmodule.exports = truncate.bind(null, getLength);\n","'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict'\n\nconst varint = require('varint')\n\nmodule.exports = (buf) => {\n  if (!(buf instanceof Uint8Array)) {\n    throw new Error('arg needs to be a Uint8Array')\n  }\n\n  const result = []\n\n  while (buf.length > 0) {\n    const num = varint.decode(buf)\n    result.push(num)\n    buf = buf.slice(varint.decode.bytes)\n  }\n\n  return result\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","var Timestamp=function(){\"undefined\"!=typeof module&&(module.exports=d);var l=86400,s=3200,T=146097*s/400,e=l*T,f=1e3*e,c=864e13,g=4294967296,h=1e6,u=\"000000000\",m=Math.trunc||function(n){var t=n-n%1;return 0==t&&(n<0||0===n&&1/n!=1/0)?-0:t},n=d.prototype,o=(d.fromDate=function(n){return new d(+n)},d.fromInt64BE=r(0,1,2,3,0,4),d.fromInt64LE=r(3,2,1,0,4,0),d.fromString=function(n){var e,r=new d,n=(n+=\"\").replace(/^\\s*[+\\-]?\\d+/,function(n){var n=+n,t=1970+(n-1970)%400;return r.year=n-t,t}).replace(/(?:Z|([+\\-]\\d{2}):?(\\d{2}))$/,function(n,t,r){return t<0&&(r*=-1),e=6e4*(60*+t+ +r),\"\"}).replace(/\\.\\d+$/,function(n){return r.nano=+(n+u).substr(1,9),\"\"}).split(/\\D+/);1<n.length?n[1]--:n[1]=0;if(r.time=e=Date.UTC.apply(Date,n)-(e||0),isNaN(e))throw new TypeError(\"Invalid Date\");return p(r)},d.fromTimeT=function(n){return y(n,0)},n.year=0,n.time=0,n.nano=0,n.addNano=function(n){return this.nano+=+n||0,this},n.getNano=function(){var n=p(this);return(n.time%1e3*h+ +n.nano+1e9)%1e9},n.getTimeT=function(){var n=p(this),t=Math.floor(n.time/1e3),n=n.year;n&&(t+=n*T*l/s);return t},n.getYear=function(){return this.toDate().getUTCFullYear()+this.year},n.toDate=function(){return M(p(this).time)},n.toJSON=function(){return this.toString().replace(/0{1,6}Z$/,\"Z\")},n.toString=function(n){var t=this,r=t.toDate(),u={H:function(){return C(r.getUTCHours())},L:function(){return D(r.getUTCMilliseconds(),3)},M:function(){return C(r.getUTCMinutes())},N:function(){return D(t.getNano(),9)},S:function(){return C(r.getUTCSeconds())},Y:function(){var n=t.getYear();return 999999<n?\"+\"+n:9999<n?\"+\"+D(n,6):0<=n?D(n,4):-999999<=n?\"-\"+D(-n,6):n},a:function(){return a[r.getUTCDay()]},b:function(){return i[r.getUTCMonth()]},d:function(){return C(r.getUTCDate())},e:function(){return function(n){return(9<n?\"\":\" \")+(0|n)}(r.getUTCDate())},m:function(){return C(r.getUTCMonth()+1)}};return function e(n){return n.replace(/%./g,function(n){var t=n[1],r=v[t],t=u[t];return r?e(r):t?t():n})}(n||o)},n.writeInt64BE=t(0,1,2,3,0,4),n.writeInt64LE=t(3,2,1,0,4,0),\"%Y-%m-%dT%H:%M:%S.%NZ\"),i=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],a=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],v={\"%\":\"%\",F:\"%Y-%m-%d\",n:\"\\n\",R:\"%H:%M\",T:\"%H:%M:%S\",t:\"\\t\",X:\"%T\",Z:\"GMT\",z:\"+0000\"};return d;function d(n,t,r){var e=this;if(!(e instanceof d))return new d(n,t,r);e.time=+n||0,e.nano=+t||0,e.year=+r||0,p(e)}function p(n){var t,r,e,u=n.year,o=n.time,i=n.nano,a=((i<0||h<=i)&&(i-=(r=Math.floor(i/h))*h,o+=r,r=1),u%s);return(o<-c||c<o||a)&&((t=m(o/f))&&(u+=t*s,o-=t*f),(e=M(o)).setUTCFullYear(a+e.getUTCFullYear()),e=(o=+e)+(t=m((u-=a)/s))*f,t&&-c<=e&&e<=c&&(u-=t*s,o=e),r=1),r&&(n.year=u,n.time=o,n.nano=i),n}function M(n){var t=new Date(0);return t.setTime(n),t}function y(n,t){n=+n||0;var r=m((t=(t|0)*g)/e)+m(n/e),t=t%e+n%e,n=m(t/e);return n&&(r+=n,t-=n*e),new d(1e3*t,0,r*s)}function t(e,u,o,i,a,f){return function(n,t){var r=p(this);n=n||new Array(8);w(n,t|=0);var e=Math.floor(r.time/1e3),r=r.year*(T*l/s),u=m(r/g)+m(e/g),r=r%g+e%g,e=Math.floor(r/g);e&&(u+=e,r-=e*g);return c(n,t+a,u),c(n,t+f,r),n};function c(n,t,r){n[t+e]=r>>24&255,n[t+u]=r>>16&255,n[t+o]=r>>8&255,n[t+i]=255&r}}function r(r,e,u,o,i,a){return function(n,t){w(n,t|=0);var r=f(n,t+i);return y(f(n,t+a),r)};function f(n,t){return 16777216*n[t+r]+(n[t+e]<<16|n[t+u]<<8|n[t+o])}}function w(n,t){n=n&&n.length;if(null==n)throw new TypeError(\"Invalid Buffer\");if(n<t+8)throw new RangeError(\"Out of range\")}function C(n){return(9<n?\"\":\"0\")+(0|n)}function D(n,t){return(u+(0|n)).substr(-t)}}();","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const QUICV1 = and(UDP, base('quic-v1'));\nconst _WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSockets = or(and(_WebSockets, base('p2p')), _WebSockets);\nconst _WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')), and(TCP, base('tls'), base('ws')), and(DNS, base('tls'), base('ws')));\nexport const WebSocketsSecure = or(and(_WebSocketsSecure, base('p2p')), _WebSocketsSecure);\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nconst _WebRTCDirect = and(UDP, base('webrtc-direct'), base('certhash'));\nexport const WebRTCDirect = or(and(_WebRTCDirect, base('p2p')), _WebRTCDirect);\nconst _WebTransport = and(QUICV1, base('webtransport'), base('certhash'), base('certhash'));\nexport const WebTransport = or(and(_WebTransport, base('p2p')), _WebTransport);\n/**\n * @deprecated\n */\nexport const P2PWebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\n/**\n * @deprecated\n */\nexport const P2PWebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(_WebSockets, _WebSocketsSecure, HTTP, HTTPS, P2PWebRTCStar, P2PWebRTCDirect, TCP, UTP, QUIC, DNS, WebRTCDirect, WebTransport);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), P2PWebRTCStar, P2PWebRTCDirect, WebRTCDirect, WebTransport, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\nexport const WebRTC = or(and(Circuit, base('webrtc'), base('p2p')), and(Circuit, base('webrtc')), and(Reliable, base('webrtc'), base('p2p')), and(Reliable, base('webrtc')), base('webrtc'));\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const out = partialMatch(ma.protoNames());\n        if (out === null) {\n            return false;\n        }\n        if (out === true || out === false) {\n            return out;\n        }\n        return out.length === 0;\n    }\n    return matches;\n}\nfunction and(...args) {\n    function partialMatch(a) {\n        if (a.length < args.length) {\n            return null;\n        }\n        let out = a;\n        args.some((arg) => {\n            out = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (Array.isArray(out)) {\n                a = out;\n            }\n            if (out === null) {\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    return {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n}\nfunction or(...args) {\n    function partialMatch(a) {\n        let out = null;\n        args.some((arg) => {\n            const res = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (res != null) {\n                out = res;\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    const result = {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n    return result;\n}\nfunction base(n) {\n    const name = n;\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const pnames = ma.protoNames();\n        if (pnames.length === 1 && pnames[0] === name) {\n            return true;\n        }\n        return false;\n    }\n    function partialMatch(protos) {\n        if (protos.length === 0) {\n            return null;\n        }\n        if (protos[0] === name) {\n            return protos.slice(1);\n        }\n        return null;\n    }\n    return {\n        toString: function () { return name; },\n        matches,\n        partialMatch\n    };\n}\n//# sourceMappingURL=index.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","/**\n * @packageDocumentation\n *\n * This module exports various matchers that can be used to infer the type of a\n * passed multiaddr.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org')\n *\n * DNS.matches(ma) // true - this is a multiaddr with a DNS address at the start\n * ```\n *\n * @example\n *\n * The default matching behaviour ignores any subsequent tuples in the multiaddr.\n * If you want stricter matching you can use `.exactMatch`:\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS, Circuit } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org/p2p/QmFoo/p2p-circuit/p2p/QmBar')\n *\n * DNS.exactMatch(ma) // false - this address has extra tuples after the DNS component\n * Circuit.matches(ma) // true\n * Circuit.exactMatch(ma) // true - the extra tuples are circuit relay related\n * ```\n */\nimport { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport {} from '@multiformats/multiaddr';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64url } from 'multiformats/bases/base64';\n/**\n * Split a multiaddr into path components\n */\nconst toParts = (ma) => {\n    return ma.toString().split('/').slice(1);\n};\nconst func = (fn) => {\n    return {\n        match: (vals) => {\n            if (vals.length < 1) {\n                return false;\n            }\n            if (fn(vals[0])) {\n                return vals.slice(1);\n            }\n            return false;\n        },\n        pattern: 'fn'\n    };\n};\nconst literal = (str) => {\n    return {\n        match: (vals) => func((val) => val === str).match(vals),\n        pattern: str\n    };\n};\nconst string = () => {\n    return {\n        match: (vals) => func((val) => typeof val === 'string').match(vals),\n        pattern: '{string}'\n    };\n};\nconst number = () => {\n    return {\n        match: (vals) => func((val) => !isNaN(parseInt(val))).match(vals),\n        pattern: '{number}'\n    };\n};\nconst peerId = () => {\n    return {\n        match: (vals) => {\n            if (vals.length < 2) {\n                return false;\n            }\n            if (vals[0] !== 'p2p' && vals[0] !== 'ipfs') {\n                return false;\n            }\n            // Q is RSA, 1 is Ed25519 or Secp256k1\n            if (vals[1].startsWith('Q') || vals[1].startsWith('1')) {\n                try {\n                    base58btc.decode(`z${vals[1]}`);\n                }\n                catch (err) {\n                    return false;\n                }\n            }\n            else {\n                return false;\n            }\n            return vals.slice(2);\n        },\n        pattern: '/p2p/{peerid}'\n    };\n};\nconst certhash = () => {\n    return {\n        match: (vals) => {\n            if (vals.length < 2) {\n                return false;\n            }\n            if (vals[0] !== 'certhash') {\n                return false;\n            }\n            try {\n                base64url.decode(vals[1]);\n            }\n            catch {\n                return false;\n            }\n            return vals.slice(2);\n        },\n        pattern: '/certhash/{certhash}'\n    };\n};\nconst optional = (matcher) => {\n    return {\n        match: (vals) => {\n            const result = matcher.match(vals);\n            if (result === false) {\n                return vals;\n            }\n            return result;\n        },\n        pattern: `optional(${matcher.pattern})`\n    };\n};\nconst or = (...matchers) => {\n    return {\n        match: (vals) => {\n            let matches;\n            for (const matcher of matchers) {\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    continue;\n                }\n                // choose greediest matcher\n                if (matches == null || result.length < matches.length) {\n                    matches = result;\n                }\n            }\n            if (matches == null) {\n                return false;\n            }\n            return matches;\n        },\n        pattern: `or(${matchers.map(m => m.pattern).join(', ')})`\n    };\n};\nconst and = (...matchers) => {\n    return {\n        match: (vals) => {\n            for (const matcher of matchers) {\n                // pass what's left of the array\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    return false;\n                }\n                vals = result;\n            }\n            return vals;\n        },\n        pattern: `and(${matchers.map(m => m.pattern).join(', ')})`\n    };\n};\nfunction fmt(...matchers) {\n    function match(ma) {\n        let parts = toParts(ma);\n        for (const matcher of matchers) {\n            const result = matcher.match(parts);\n            if (result === false) {\n                return false;\n            }\n            parts = result;\n        }\n        return parts;\n    }\n    function matches(ma) {\n        const result = match(ma);\n        return result !== false;\n    }\n    function exactMatch(ma) {\n        const result = match(ma);\n        if (result === false) {\n            return false;\n        }\n        return result.length === 0;\n    }\n    return {\n        matches,\n        exactMatch\n    };\n}\n/**\n * DNS matchers\n */\nconst _DNS4 = and(literal('dns4'), string());\nconst _DNS6 = and(literal('dns6'), string());\nconst _DNSADDR = and(literal('dnsaddr'), string());\nconst _DNS = and(literal('dns'), string());\n/**\n * Matches dns4 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS4 } from '@multiformats/multiaddr-matcher'\n *\n * DNS4.matches(multiaddr('/dns4/example.org')) // true\n * ```\n */\nexport const DNS4 = fmt(_DNS4);\n/**\n * Matches dns6 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS6 } from '@multiformats/multiaddr-matcher'\n *\n * DNS6.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS6 = fmt(_DNS6);\n/**\n * Matches dnsaddr addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNSADDR } from '@multiformats/multiaddr-matcher'\n *\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org')) // true\n * ```\n */\nexport const DNSADDR = fmt(_DNSADDR);\n/**\n * Matches any dns address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * DNS.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNS.matches(multiaddr('/dns4/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS = fmt(or(_DNS, _DNSADDR, _DNS4, _DNS6));\nconst _IP4 = and(literal('ip4'), func(isIPv4));\nconst _IP6 = and(literal('ip6'), func(isIPv6));\nconst _IP = or(_IP4, _IP6);\nconst IP_OR_DOMAIN = or(_IP, _DNS, _DNS4, _DNS6, _DNSADDR);\n/**\n * Matches ip4 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP4 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip4/123.123.123.123')\n *\n * IP4.matches(ma) // true\n * ```\n */\nexport const IP4 = fmt(_IP4);\n/**\n * Matches ip6 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP6 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')\n *\n * IP6.matches(ma) // true\n * ```\n */\nexport const IP6 = fmt(_IP6);\n/**\n * Matches ip4 or ip6 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP } from '@multiformats/multiaddr-matcher'\n *\n * IP.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP.matches(multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')) // true\n * ```\n */\nexport const IP = fmt(_IP);\nconst _TCP = and(IP_OR_DOMAIN, literal('tcp'), number());\nconst _UDP = and(IP_OR_DOMAIN, literal('udp'), number());\nconst TCP_OR_UDP = or(_TCP, _UDP);\n/**\n * Matches TCP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { TCP } from '@multiformats/multiaddr-matcher'\n *\n * TCP.matches(multiaddr('/ip4/123.123.123.123/tcp/1234')) // true\n * ```\n */\nexport const TCP = fmt(_TCP);\n/**\n * Matches UDP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { UDP } from '@multiformats/multiaddr-matcher'\n *\n * UDP.matches(multiaddr('/ip4/123.123.123.123/udp/1234')) // true\n * ```\n */\nexport const UDP = fmt(_UDP);\nconst _QUIC = and(_UDP, literal('quic'));\nconst _QUICV1 = and(_UDP, literal('quic-v1'));\nconst QUIC_V0_OR_V1 = or(_QUIC, _QUICV1);\n/**\n * Matches QUIC addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC } from '@multiformats/multiaddr-matcher'\n *\n * QUIC.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic')) // true\n * ```\n */\nexport const QUIC = fmt(_QUIC);\n/**\n * Matches QUICv1 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUICV1 } from '@multiformats/multiaddr-matcher'\n *\n * QUICV1.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1')) // true\n * ```\n */\nexport const QUICV1 = fmt(_QUICV1);\nconst _WEB = or(IP_OR_DOMAIN, _TCP, _UDP, _QUIC, _QUICV1);\nconst _WebSockets = or(and(_WEB, literal('ws'), optional(peerId())));\n/**\n * Matches WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSockets } from '@multiformats/multiaddr-matcher'\n *\n * WebSockets.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/ws')) // true\n * ```\n */\nexport const WebSockets = fmt(_WebSockets);\nconst _WebSocketsSecure = or(and(_WEB, literal('wss'), optional(peerId())), and(_WEB, literal('tls'), literal('ws'), optional(peerId())));\n/**\n * Matches secure WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSocketsSecure } from '@multiformats/multiaddr-matcher'\n *\n * WebSocketsSecure.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/wss')) // true\n * ```\n */\nexport const WebSocketsSecure = fmt(_WebSocketsSecure);\nconst _WebRTCDirect = and(TCP_OR_UDP, literal('webrtc-direct'), certhash(), optional(certhash()), optional(peerId()));\n/**\n * Matches WebRTC-direct addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo/webrtc-direct/certhash/u....')) // true\n * ```\n */\nexport const WebRTCDirect = fmt(_WebRTCDirect);\nconst _WebTransport = and(_QUICV1, literal('webtransport'), certhash(), certhash(), optional(peerId()));\n/**\n * Matches WebTransport addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1/webtransport/certhash/u..../certhash/u..../p2p/QmFoo')) // true\n * ```\n */\nexport const WebTransport = fmt(_WebTransport);\nconst _P2P = or(_WebSockets, _WebSocketsSecure, and(_TCP, optional(peerId())), and(QUIC_V0_OR_V1, optional(peerId())), and(IP_OR_DOMAIN, optional(peerId())), _WebRTCDirect, _WebTransport, peerId());\n/**\n * Matches peer addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { P2P } from '@multiformats/multiaddr-matcher'\n *\n * P2P.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo')) // true\n * ```\n */\nexport const P2P = fmt(_P2P);\nconst _Circuit = and(_P2P, literal('p2p-circuit'), peerId());\n/**\n * Matches circuit relay addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Circuit } from '@multiformats/multiaddr-matcher'\n *\n * Circuit.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/p2p/QmTarget')) // true\n * ```\n */\nexport const Circuit = fmt(_Circuit);\nconst _WebRTC = or(and(_P2P, literal('p2p-circuit'), literal('webrtc'), peerId()), and(_P2P, literal('webrtc'), optional(peerId())), literal('webrtc'));\n/**\n * Matches WebRTC addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n *\n * WebRTC.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/webrtc/p2p/QmTarget')) // true\n * ```\n */\nexport const WebRTC = fmt(_WebRTC);\n//# sourceMappingURL=index.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { IpNet } from '@chainsafe/netmask';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\nconst reduceValue = (_, v) => v;\nconst tcpUri = (str, port, parts, opts) => {\n    // return tcp when explicitly requested\n    if ((opts != null) && opts.assumeHttp === false)\n        return `tcp://${str}:${port}`;\n    // check if tcp is the last protocol in multiaddr\n    let protocol = 'tcp';\n    let explicitPort = `:${port}`;\n    const last = parts[parts.length - 1];\n    if (last.protocol === 'tcp') {\n        // assume http and produce clean urls\n        protocol = port === '443' ? 'https' : 'http';\n        explicitPort = port === '443' || port === '80' ? '' : explicitPort;\n    }\n    return `${protocol}://${str}${explicitPort}`;\n};\nconst Reducers = {\n    ip4: reduceValue,\n    ip6: (str, content, i, parts) => (parts.length === 1 && parts[0].protocol === 'ip6'\n        ? content\n        : `[${content}]`),\n    tcp: (str, content, i, parts, opts) => (parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n        ? `${str}:${content}`\n        : tcpUri(str, content, parts, opts)),\n    udp: (str, content) => `udp://${str}:${content}`,\n    dnsaddr: reduceValue,\n    dns4: reduceValue,\n    dns6: reduceValue,\n    ipfs: (str, content) => `${str}/ipfs/${content}`,\n    p2p: (str, content) => `${str}/p2p/${content}`,\n    http: str => `http://${str}`,\n    https: str => `https://${str}`,\n    ws: str => `ws://${str}`,\n    wss: str => `wss://${str}`,\n    'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n    'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n    'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n};\nexport function multiaddrToUri(input, opts) {\n    const ma = multiaddr(input);\n    const parts = ma.toString().split('/').slice(1);\n    return ma\n        .tuples()\n        .map(tuple => ({\n        protocol: parts.shift() ?? '',\n        content: (tuple[1] != null) ? parts.shift() ?? '' : ''\n    }))\n        .reduce((str, part, i, parts) => {\n        const reduce = Reducers[part.protocol];\n        if (reduce == null) {\n            throw new Error(`Unsupported protocol ${part.protocol}`);\n        }\n        return reduce(str, part.content, i, parts, opts);\n    }, '');\n}\n//# sourceMappingURL=index.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nimport { CID } from 'multiformats/cid';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport * as Digest from 'multiformats/hashes/digest';\nimport varint from 'varint';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nimport varint from 'varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, convertToBytes(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, convertToString(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr);\n        return size + (varint.decode.bytes ?? 0);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.decode.bytes ?? 0;\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nexport function bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nexport function fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nexport function validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nexport function isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nexport function protoFromTuple(tup) {\n    const proto = getProtocol(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\nimport * as codec from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errCode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = codec.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = codec.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, codec.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint.decode(buf, i);\n            const n = varint.decode.bytes ?? 0;\n            const p = getProtocol(code);\n            const size = codec.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, codec.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, codec.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = getProtocol(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${codec.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc'],\n    [281, 0, 'webrtc-w3c'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","import dns from 'dns-over-http-resolver';\nexport default dns;\n//# sourceMappingURL=dns.browser.js.map","/**\n * @packageDocumentation\n *\n * Provides strategies for resolving multiaddrs.\n */\nimport { getProtocol } from '../protocols-table.js';\nimport Resolver from './dns.js';\nconst { code: dnsaddrCode } = getProtocol('dnsaddr');\n/**\n * Resolver for dnsaddr addresses.\n *\n * @example\n *\n * ```typescript\n * import { dnsaddrResolver } from '@multiformats/multiaddr/resolvers'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n * const addresses = await dnsaddrResolver(ma)\n *\n * console.info(addresses)\n * //[\n * //  '/dnsaddr/am6.bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n * //  '/dnsaddr/ny5.bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n * //  '/dnsaddr/sg1.bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n * //  '/dnsaddr/sv15.bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN'\n * //]\n * ```\n */\nexport async function dnsaddrResolver(addr, options = {}) {\n    const resolver = new Resolver();\n    if (options.signal != null) {\n        options.signal.addEventListener('abort', () => {\n            resolver.cancel();\n        });\n    }\n    const peerId = addr.getPeerId();\n    const [, hostname] = addr.stringTuples().find(([proto]) => proto === dnsaddrCode) ?? [];\n    if (hostname == null) {\n        throw new Error('No hostname found in multiaddr');\n    }\n    const records = await resolver.resolveTxt(`_dnsaddr.${hostname}`);\n    let addresses = records.flat().map((a) => a.split('=')[1]).filter(Boolean);\n    if (peerId != null) {\n        addresses = addresses.filter((entry) => entry.includes(peerId));\n    }\n    return addresses;\n}\n//# sourceMappingURL=index.js.map","import { from } from 'multiformats/hashes/hasher'\nimport { bytes } from 'multiformats'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","/* eslint-env browser */\n\nimport * as API from './interface.js'\n\n/**\n * Gets cluster version\n *\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<string>}\n */\nexport const version = async (cluster, { signal } = {}) => {\n  const result = await request(cluster, 'version', {\n    method: 'GET',\n    signal\n  })\n\n  if (typeof result.version !== 'string') {\n    throw new Error(\n      `failed to parse version from response the body: ${JSON.stringify(\n        result,\n        null,\n        2\n      )}`\n    )\n  }\n\n  return result.version\n}\n\n/**\n * Gets cluster information\n *\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.ClusterInfo>}\n */\nexport const info = async (cluster, { signal } = {}) => {\n  const result = await request(cluster, 'id', {\n    method: 'GET',\n    signal\n  })\n\n  const failure = result.error || result.ipfs?.error || ''\n  if (failure.length > 0) {\n    throw new Error(\n      `cluster id response has failure: ${JSON.stringify(result, null, 2)}`\n    )\n  }\n\n  return toClusterInfo(result)\n}\n\n/**\n * Import a file to the cluster. First argument must be a `File` or `Blob`.\n * Note: by default this module uses v1 CIDs and raw leaves enabled.\n *\n * @param {API.Config} cluster\n * @param {File|Blob} file\n * @param {API.AddParams} [options]\n * @returns {Promise<API.AddResponse>}\n */\nexport const add = async (cluster, file, options = {}) => {\n  if (!(file instanceof File) && !(file instanceof Blob)) {\n    throw new Error('invalid file')\n  }\n\n  const body = new FormData()\n  body.append('file', file, getName(file))\n\n  const params = encodeAddParams(options)\n\n  try {\n    const result = await request(cluster, 'add', {\n      params,\n      method: 'POST',\n      body,\n      signal: options.signal\n    })\n    const data = params['stream-channels'] ? result : result[0]\n    return { ...data, cid: data.cid }\n  } catch (err) {\n    const error = /** @type {Error & {response?:Response}}  */ (err)\n    if (error.response?.ok) {\n      throw new Error(\n        `failed to parse response body from cluster add ${error.stack}`\n      )\n    } else {\n      throw error\n    }\n  }\n}\n\n/**\n * @param {API.Config} cluster\n * @param {Iterable<File|Blob>} files\n * @param {API.PinOptions} [options]\n * @returns {Promise<API.AddDirectoryResponse>}\n */\nexport const addDirectory = async (cluster, files, options = {}) => {\n  const body = new FormData()\n\n  for (const f of files) {\n    if (!(f instanceof File) && !(f instanceof Blob)) {\n      throw new Error('invalid file')\n    }\n    body.append('file', f, getName(f))\n  }\n\n  const results = await request(cluster, 'add', {\n    params: {\n      ...encodeAddParams(options),\n      'stream-channels': false,\n      'wrap-with-directory': true\n    },\n    method: 'POST',\n    body,\n    signal: options.signal\n  })\n\n  return results\n}\n\n/**\n * @param {API.Config} cluster\n * @param {Blob} car\n * @param {API.AddParams} [options]\n * @returns {Promise<API.AddResponse>}\n */\nexport const addCAR = (cluster, car, options = {}) =>\n  add(cluster, car, { ...options, format: 'car' })\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid CID or IPFS/IPNS path to pin to the cluster.\n * @param {API.PinOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const pin = async (cluster, cid, options = {}) => {\n  const path = cid.startsWith('/') ? `pins${cid}` : `pins/${cid}`\n\n  const data = await request(cluster, path, {\n    params: encodePinOptions(options),\n    method: 'POST',\n    signal: options.signal\n  })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid CID or IPFS/IPNS path to unpin from the cluster.\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const unpin = async (cluster, cid, { signal } = {}) => {\n  const path = cid.startsWith('/') ? `pins${cid}` : `pins/${cid}`\n  const data = await request(cluster, path, {\n    method: 'DELETE',\n    signal\n  })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.StatusOptions} [options]\n * @returns {Promise<API.StatusResponse>}\n */\nexport const status = async (cluster, cid, { local, signal } = {}) => {\n  const path = `pins/${encodeURIComponent(cid)}`\n\n  const data = await request(cluster, path, {\n    params: local != null ? { local } : undefined,\n    signal\n  })\n\n  return toStatusResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {API.StatusAllOptions} [options]\n * @returns {Promise<API.StatusResponse[]>}\n */\nexport const statusAll = async (\n  cluster,\n  { local, filter, cids, signal } = {}\n) => {\n  const stream = streamRequest(cluster, 'pins', {\n    params: {\n      local,\n      filter: filter ? String(filter) : null,\n      cids: cids ? String(cids) : null\n    },\n    signal\n  })\n  const statuses = []\n  for await (const d of stream) {\n    statuses.push(toStatusResponse(d))\n  }\n  return statuses\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.PinResponse>}\n */\nexport const allocation = async (cluster, cid, { signal } = {}) => {\n  const path = `allocations/${encodeURIComponent(cid)}`\n  const data = await request(cluster, path, { signal })\n\n  return toPinResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} cid The CID to get pin status information for.\n * @param {API.RecoverOptions} [options]\n * @returns {Promise<API.StatusResponse>}\n */\nexport const recover = async (cluster, cid, { local, signal } = {}) => {\n  const path = `pins/${encodeURIComponent(cid)}/recover`\n\n  const data = await request(cluster, path, {\n    method: 'POST',\n    params: local != null ? { local } : undefined,\n    signal\n  })\n\n  return toStatusResponse(data)\n}\n\n/**\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<string[]>}\n */\nexport const metricNames = (cluster, { signal } = {}) =>\n  request(cluster, 'monitor/metrics', { signal })\n\n/**\n * @param {API.Config} cluster\n * @param {API.RequestOptions} [options]\n * @returns {Promise<API.ClusterInfo[]>}\n */\nexport const peerList = async (cluster, options = {}) => {\n  const stream = streamRequest(cluster, 'peers', { signal: options.signal })\n  const infos = []\n  for await (const d of stream) {\n    infos.push(toClusterInfo(d))\n  }\n  return infos\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} path\n * @param {Object} [options]\n * @param {string} [options.method]\n * @param {Record<string, string|number|boolean|null|undefined>} [options.params]\n * @param {BodyInit} [options.body]\n * @param {AbortSignal} [options.signal]\n */\nconst request = async (\n  { url, headers },\n  path,\n  { method, params, body, signal }\n) => {\n  const endpoint = new URL(path, url)\n  for (const [key, value] of Object.entries(params || {})) {\n    if (value != null) {\n      endpoint.searchParams.set(key, String(value))\n    }\n  }\n\n  const response = await fetch(endpoint.href, {\n    method: method || 'GET',\n    headers,\n    body,\n    signal\n  })\n\n  if (response.ok) {\n    return await response.json()\n  } else {\n    throw Object.assign(\n      new Error(`${response.status}: ${response.statusText}`),\n      { response }\n    )\n  }\n}\n\n/**\n * @param {API.Config} cluster\n * @param {string} path\n * @param {Object} init\n * @param {string} [init.method]\n * @param {Record<string, string|number|boolean|null|undefined>} [init.params]\n * @param {BodyInit} [init.body]\n * @param {AbortSignal} [init.signal]\n */\nconst streamRequest = async function* (\n  { url, headers },\n  path,\n  { method, params, body, signal }\n) {\n  const endpoint = new URL(path, url)\n  for (const [key, value] of Object.entries(params || {})) {\n    if (value != null) {\n      endpoint.searchParams.set(key, String(value))\n    }\n  }\n\n  method = method || 'GET'\n  const res = await fetch(endpoint.href, { method, headers, body, signal })\n\n  if (!res.ok) {\n    const msg = `${res.status}: ${res.statusText}`\n    throw Object.assign(new Error(msg), { response: res })\n  }\n\n  if (!res.body) {\n    throw Object.assign(new Error('Missing response body'), { response: res })\n  }\n\n  yield* ndjsonParse(res.body)\n}\n\nexport class Cluster {\n  /**\n   * Create a new instance of the cluster client.\n   * @param {URL|string} url Cluster HTTP API root URL.\n   * @param {{ headers?: Record<string, string> }} [options]\n   */\n  constructor(url, { headers } = {}) {\n    /**\n     * @readonly\n     */\n    this.url = new URL(url)\n    /**\n     * @readonly\n     */\n    this.headers = headers\n  }\n\n  /**\n   * Get Cluster version.\n   * @param {API.RequestOptions} [options]\n   */\n  version(options) {\n    return version(this, options)\n  }\n\n  /**\n   * Get Cluster peer information.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.ClusterInfo>}\n   */\n  info(options) {\n    return info(this, options)\n  }\n\n  /**\n   * Imports a file to the cluster. First argument must be a `File` or `Blob`.\n   * Note: by default this module uses v1 CIDs and raw leaves enabled.\n   * @param {File|Blob} file\n   * @param {API.AddParams} [options]\n   */\n  add(file, options) {\n    return add(this, file, options)\n  }\n\n  /**\n   * Imports multiple files to the cluster. First argument must be an array of\n   * `File` or `Blob`. Note: by default this module uses v1 CIDs and raw leaves\n   * enabled.\n   * @param {Iterable<File|Blob>} files\n   * @param {API.PinOptions} [options]\n   * @returns {Promise<API.AddDirectoryResponse>}\n   */\n  addDirectory(files, options) {\n    return addDirectory(this, files, options)\n  }\n\n  /**\n   * Imports blocks encoded in the given CAR file and pins them (similarly to\n   * ipfs dag import). At the moment only CAR files MUST have only one root (the\n   * one that will be pinned). . CAR files allow adding arbitrary IPLD-DAGs\n   * through the Cluster API.\n   * @param {Blob} car\n   * @param {API.AddParams} [options]\n   * @returns {Promise<API.AddResponse>}\n   */\n  addCAR(car, options = {}) {\n    return addCAR(this, car, { ...options, format: 'car' })\n  }\n\n  /**\n   * Tracks a CID with the given replication factor and a name for\n   * human-friendliness.\n   * @param {string} cid CID or IPFS/IPNS path to pin to the cluster.\n   * @param {API.PinOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  pin(cid, options) {\n    return pin(this, cid, options)\n  }\n\n  /**\n   * Untracks a CID from cluster.\n   * @param {string} cid CID or IPFS/IPNS path to unpin from the cluster.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  unpin(cid, options) {\n    return unpin(this, cid, options)\n  }\n\n  /**\n   * Returns the current IPFS state for a given CID.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.StatusOptions} [options]\n   * @returns {Promise<API.StatusResponse>}\n   */\n  status(cid, options) {\n    return status(this, cid, options)\n  }\n\n  /**\n   * Status of all tracked CIDs. Note: this is an expensive operation. Use the optional filters when possible.\n   * @param {API.StatusAllOptions} [options]\n   * @returns {Promise<API.StatusResponse[]>}\n   */\n  statusAll(options) {\n    return statusAll(this, options)\n  }\n\n  /**\n   * Returns the current allocation for a given CID.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.PinResponse>}\n   */\n  allocation(cid, options) {\n    return allocation(this, cid, options)\n  }\n\n  /**\n   * Re-triggers pin or unpin IPFS operations for a CID in error state.\n   * @param {string} cid The CID to get pin status information for.\n   * @param {API.RecoverOptions} [options]\n   * @returns {Promise<API.StatusResponse>}\n   */\n  recover(cid, options) {\n    return recover(this, cid, options)\n  }\n\n  /**\n   * Get a list of metric types known to the peer.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<string[]>}\n   */\n  metricNames(options) {\n    return metricNames(this, options)\n  }\n\n  /**\n   * Get a list of Cluster peer info.\n   * @param {API.RequestOptions} [options]\n   * @returns {Promise<API.ClusterInfo[]>}\n   */\n  peerList(options) {\n    return peerList(this, options)\n  }\n}\n\n/**\n * @param {API.AddParams} options\n */\nconst encodeAddParams = (options = {}) =>\n  encodeParams({\n    ...encodePinOptions(options),\n    local: options.local,\n    recursive: options.recursive,\n    hidden: options.hidden,\n    wrap: options.wrap,\n    shard: options.shard,\n    // stream-channels=false means buffer entire response in cluster before returning.\n    // MAY avoid weird edge-cases with prematurely closed streams\n    // see: https://github.com/web3-storage/web3.storage/issues/323\n    'stream-channels':\n      options.streamChannels != null ? options.streamChannels : false,\n    format: options.format,\n    // IPFSAddParams\n    layout: options.layout,\n\n    chunker: options.chunker,\n    'raw-leaves': options.rawLeaves != null ? options.rawLeaves : true,\n    progress: options.progress,\n    'cid-version': options.cidVersion != null ? options.cidVersion : 1,\n    hash: options.hashFun,\n    'no-copy': options.noCopy\n  })\n\n/**\n * @param {API.PinOptions} options\n */\nconst encodePinOptions = (options = {}) =>\n  encodeParams({\n    name: options.name,\n    mode: options.mode,\n    'replication-min': options.replicationFactorMin,\n    'replication-max': options.replicationFactorMax,\n    'shard-size': options.shardSize,\n    'user-allocations': options.userAllocations?.join(','),\n    'expire-at': options.expireAt?.toISOString(),\n    'pin-update': options.pinUpdate,\n    origins: options.origins?.join(','),\n    ...encodeMetadata(options.metadata || {})\n  })\n\n/**\n *\n * @param {Record<string, string>} metadata\n */\nconst encodeMetadata = (metadata = {}) =>\n  Object.fromEntries(Object.entries(metadata).map(([k, v]) => [`meta-${k}`, v]))\n\n/**\n * @template {Object} T\n * @param {T} options\n * @returns {{[K in keyof T]: Exclude<T[K], undefined>}}\n */\nconst encodeParams = (options) =>\n  // @ts-ignore - it can't infer this\n  Object.fromEntries(Object.entries(options).filter(([, v]) => v != null))\n\n/**\n * @param {any} data\n * @returns {API.PinResponse}\n */\nconst toPinResponse = (data) => {\n  return {\n    replicationFactorMin: data.replication_factor_min,\n    replicationFactorMax: data.replication_factor_max,\n    name: data.name,\n    mode: data.mode,\n    shardSize: data.shard_size,\n    userAllocations: data.user_allocations,\n    expireAt: new Date(data.expire_at),\n    metadata: data.metadata,\n    pinUpdate: data.pin_update,\n    cid: data.cid,\n    type: data.type,\n    allocations: data.allocations,\n    maxDepth: data.max_depth,\n    reference: data.reference\n  }\n}\n\n/**\n * @param {any} data\n * @returns {API.StatusResponse}\n */\nconst toStatusResponse = (data) => {\n  let peerMap = data.peer_map\n  if (peerMap) {\n    peerMap = Object.fromEntries(\n      Object.entries(peerMap).map(([k, v]) => [\n        k,\n        {\n          peerName: v.peername,\n          ipfsPeerId: v.ipfs_peer_id,\n          status: v.status,\n          timestamp: new Date(v.timestamp),\n          error: v.error\n        }\n      ])\n    )\n  }\n  return { cid: data.cid, name: data.name, peerMap }\n}\n\n/**\n * @param {any} data\n * @returns {API.ClusterInfo}\n */\nconst toClusterInfo = ({\n  id,\n  addresses,\n  version,\n  commit,\n  peername: peerName,\n  rpc_protocol_version: rpcProtocolVersion,\n  cluster_peers: clusterPeers,\n  cluster_peers_addresses: clusterPeersAddresses,\n  ipfs,\n  error\n}) => ({\n  id,\n  addresses,\n  version,\n  commit,\n  peerName,\n  rpcProtocolVersion,\n  clusterPeers,\n  clusterPeersAddresses,\n  ipfs,\n  error\n})\n\n/**\n * @param {File|(Blob&{name?:string})} file\n */\nconst getName = (file) => file.name\n\n/**\n * @param {ReadableStream<Uint8Array>} stream\n */\nconst ndjsonParse = async function* (stream) {\n  const reader = stream.getReader()\n  const matcher = /\\r?\\n/\n  const decoder = new TextDecoder('utf8')\n  let buffer = ''\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        break\n      }\n\n      buffer += decoder.decode(result.value, { stream: true })\n      const parts = buffer.split(matcher)\n      buffer = parts.pop() || ''\n      for (const part of parts) yield JSON.parse(part)\n    }\n  } finally {\n    reader.cancel()\n    reader.releaseLock()\n  }\n  buffer += decoder.decode(undefined, { stream: false })\n  if (buffer) yield JSON.parse(buffer)\n}\n\nexport const PinTypeBad = 1\nexport const PinTypeData = 2\nexport const PinTypeMeta = 3\nexport const PinTypeClusterDag = 4\nexport const PinTypeShard = 5\n\nexport const TrackerStatusUndefined = 'undefined'\nexport const TrackerStatusClusterError = 'cluster_error'\nexport const TrackerStatusPinError = 'pin_error'\nexport const TrackerStatusUnpinError = 'unpin_error'\nexport const TrackerStatusPinned = 'pinned'\nexport const TrackerStatusPinning = 'pinning'\nexport const TrackerStatusUnpinning = 'unpinning'\nexport const TrackerStatusUnpinned = 'unpinned'\nexport const TrackerStatusRemote = 'remote'\nexport const TrackerStatusPinQueued = 'pin_queued'\nexport const TrackerStatusUnpinQueued = 'unpin_queued'\nexport const TrackerStatusSharded = 'sharded'\nexport const TrackerStatusUnexpectedlyUnpinned = 'unexpectedly_unpinned'\n\nexport { API }\n","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new Error('options must be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function ensureBytes(b, len) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    if (typeof len === 'number')\n        if (b.length !== len)\n            throw new Error(`Uint8Array length ${len} expected`);\n}\n// Constant-time equality\nexport function equalBytes(a, b) {\n    // Should not happen\n    if (a.length !== b.length)\n        throw new Error('equalBytes: Different size of Uint8Arrays');\n    let isSame = true;\n    for (let i = 0; i < a.length; i++)\n        isSame && (isSame = a[i] === b[i]); // Lets hope JIT won't optimize away.\n    return isSame;\n}\n// For runtime check if class implements interface\nexport class Hash {\n}\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n//# sourceMappingURL=utils.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","import { toBytes, ensureBytes } from './utils.js';\nimport assert from './_assert.js';\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a, i) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 {\n    constructor(key) {\n        this.blockLen = 16;\n        this.outputLen = 16;\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.pos = 0;\n        this.finished = false;\n        key = toBytes(key);\n        ensureBytes(key, 32);\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n    }\n    update(data) {\n        assert.exists(this);\n        const { buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        this.h.fill(0);\n        this.r.fill(0);\n        this.buffer.fill(0);\n        this.pad.fill(0);\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            // buffer.subarray(pos).fill(0);\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nexport function wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(32));\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n//# sourceMappingURL=_poly1305.js.map","// Basic utils for salsa-like ciphers\n// Check out _micro.ts for descriptive documentation.\nimport assert from './_assert.js';\nimport { u32, utf8ToBytes, checkOpts } from './utils.js';\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- Original papers don't allow mutating counters\n- Counter overflow is undefined: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n- 3rd-party library stablelib implementation uses an approach where you can provide\n  nonce and counter instead of just nonce - and it will re-use it\n- We could have did something similar, but ChaCha has different counter position\n  (counter | nonce), which is not composable with XChaCha, because full counter\n  is (nonce16 | counter | nonce16). Stablelib doesn't support in-place counter for XChaCha.\n- We could separate nonce & counter and provide separate API for counter re-use, but\n  there are different counter sizes depending on an algorithm.\n- Salsa & ChaCha also differ in structures of key / sigma:\n\n    salsa:     c0 | k(4) | c1 | nonce(2) | ctr(2) | c2 | k(4) | c4\n    chacha:    c(4) | k(8) | ctr(1) | nonce(3)\n    chachaDJB: c(4) | k(8) | ctr(2) | nonce(2)\n- Creating function such as `setSalsaState(key, nonce, sigma, data)` won't work,\n  because we can't re-use counter array\n- 32-bit nonce is `2 ** 32 * 64` = 256GB with 32-bit counter\n- JS does not allow UintArrays bigger than 4GB, so supporting 64-bit counters doesn't matter\n\nStructure is as following:\n\nkey=16 -> sigma16, k=key|key\nkey=32 -> sigma32, k=key\n\nnonces:\nsalsa20:      8   (8-byte counter)\nchacha20djb:  8   (8-byte counter)\nchacha20tls:  12  (4-byte counter)\nxsalsa:       24  (16 -> hsalsa, 8 -> old nonce)\nxchacha:      24  (16 -> hchacha, 8 -> old nonce)\n\nhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\nUse the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n*/\nconst sigma16 = utf8ToBytes('expand 16-byte k');\nconst sigma32 = utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\n// Is byte array aligned to 4 byte offset (u32)?\nconst isAligned32 = (b) => !(b.byteOffset % 4);\nexport const salsaBasic = (opts) => {\n    const { core, rounds, counterRight, counterLen, allow128bitKeys, extendNonceFn, blockLen } = checkOpts({ rounds: 20, counterRight: false, counterLen: 8, allow128bitKeys: true, blockLen: 64 }, opts);\n    assert.number(counterLen);\n    assert.number(rounds);\n    assert.number(blockLen);\n    assert.bool(counterRight);\n    assert.bool(allow128bitKeys);\n    const blockLen32 = blockLen / 4;\n    if (blockLen % 4 !== 0)\n        throw new Error('Salsa/ChaCha: blockLen must be aligned to 4 bytes');\n    return (key, nonce, data, output, counter = 0) => {\n        assert.bytes(key);\n        assert.bytes(nonce);\n        assert.bytes(data);\n        if (!output)\n            output = new Uint8Array(data.length);\n        assert.bytes(output);\n        assert.number(counter);\n        // > new Uint32Array([2**32])\n        // Uint32Array(1) [ 0 ]\n        // > new Uint32Array([2**32-1])\n        // Uint32Array(1) [ 4294967295 ]\n        if (counter < 0 || counter >= 2 ** 32 - 1)\n            throw new Error('Salsa/ChaCha: counter overflow');\n        if (output.length < data.length) {\n            throw new Error(`Salsa/ChaCha: output (${output.length}) is shorter than data (${data.length})`);\n        }\n        const toClean = [];\n        let k, sigma;\n        // Handle 128 byte keys\n        if (key.length === 32) {\n            if (isAligned32(key))\n                k = key;\n            else {\n                // Align key to 4 bytes\n                k = key.slice();\n                toClean.push(k);\n            }\n            sigma = sigma32_32;\n        }\n        else if (key.length === 16 && allow128bitKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else\n            throw new Error(`Salsa/ChaCha: invalid 32-byte key, got length=${key.length}`);\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce)) {\n            nonce = nonce.slice();\n            toClean.push(nonce);\n        }\n        // Handle extended nonce (HChaCha/HSalsa)\n        if (extendNonceFn) {\n            if (nonce.length <= 16)\n                throw new Error(`Salsa/ChaCha: extended nonce must be bigger than 16 bytes`);\n            k = extendNonceFn(sigma, k, nonce.subarray(0, 16), new Uint8Array(32));\n            toClean.push(k);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceLen = 16 - counterLen;\n        if (nonce.length !== nonceLen)\n            throw new Error(`Salsa/ChaCha: nonce must be ${nonceLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            toClean.push((nonce = nc));\n        }\n        // Counter positions\n        const block = new Uint8Array(blockLen);\n        // Cast to Uint32Array for speed\n        const b32 = u32(block);\n        const k32 = u32(k);\n        const n32 = u32(nonce);\n        // Make sure that buffers aligned to 4 bytes\n        const d32 = isAligned32(data) && u32(data);\n        const o32 = isAligned32(output) && u32(output);\n        toClean.push(b32);\n        const len = data.length;\n        for (let pos = 0, ctr = counter; pos < len; ctr++) {\n            core(sigma, k32, n32, b32, ctr, rounds);\n            if (ctr >= 2 ** 32 - 1)\n                throw new Error('Salsa/ChaCha: counter overflow');\n            const take = Math.min(blockLen, len - pos);\n            // full block && aligned to 4 bytes\n            if (take === blockLen && o32 && d32) {\n                const pos32 = pos / 4;\n                if (pos % 4 !== 0)\n                    throw new Error('Salsa/ChaCha: invalid block position');\n                for (let j = 0; j < blockLen32; j++)\n                    o32[pos32 + j] = d32[pos32 + j] ^ b32[j];\n                pos += blockLen;\n                continue;\n            }\n            for (let j = 0; j < take; j++)\n                output[pos + j] = data[pos + j] ^ block[j];\n            pos += take;\n        }\n        for (let i = 0; i < toClean.length; i++)\n            toClean[i].fill(0);\n        return output;\n    };\n};\n//# sourceMappingURL=_salsa.js.map","import { createView, ensureBytes, equalBytes, setBigUint64, u32, } from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { salsaBasic } from './_salsa.js';\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(c, k, n, out, cnt, rounds = 20) {\n    let y00 = c[0], y01 = c[1], y02 = c[2], y03 = c[3]; // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    let y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3]; // Key      Key     Key     Key\n    let y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7]; // Key      Key     Key     Key\n    let y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop\n    for (let i = 0; i < rounds; i += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(c, key, src, out) {\n    const k32 = u32(key);\n    const i32 = u32(src);\n    const o32 = u32(out);\n    let x00 = c[0], x01 = c[1], x02 = c[2], x03 = c[3];\n    let x04 = k32[0], x05 = k32[1], x06 = k32[2], x07 = k32[3];\n    let x08 = k32[4], x09 = k32[5], x10 = k32[6], x11 = k32[7];\n    let x12 = i32[0], x13 = i32[1], x14 = i32[2], x15 = i32[3];\n    for (let i = 0; i < 20; i += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    o32[0] = x00;\n    o32[1] = x01;\n    o32[2] = x02;\n    o32[3] = x03;\n    o32[4] = x12;\n    o32[5] = x13;\n    o32[6] = x14;\n    o32[7] = x15;\n    return out;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ salsaBasic({\n    core: chachaCore,\n    counterRight: false,\n    counterLen: 8,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ salsaBasic({\n    core: chachaCore,\n    counterRight: false,\n    counterLen: 4,\n    allow128bitKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ salsaBasic({\n    core: chachaCore,\n    counterRight: false,\n    counterLen: 8,\n    extendNonceFn: hchacha,\n    allow128bitKeys: false,\n});\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ salsaBasic({\n    core: chachaCore,\n    counterRight: false,\n    counterLen: 4,\n    rounds: 8,\n});\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ salsaBasic({\n    core: chachaCore,\n    counterRight: false,\n    counterLen: 4,\n    rounds: 12,\n});\nconst ZERO = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const left = msg.length % 16;\n    if (left)\n        h.update(ZERO.subarray(left));\n};\nconst computeTag = (fn, key, nonce, data, AAD) => {\n    const authKey = fn(key, nonce, new Uint8Array(32));\n    const h = poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(data.length), true);\n    h.update(num);\n    const res = h.digest();\n    authKey.fill(0);\n    return res;\n};\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    ensureBytes(key, 32);\n    ensureBytes(nonce);\n    return {\n        tagLength,\n        encrypt: (plaintext, output) => {\n            const plength = plaintext.length;\n            const clength = plength + tagLength;\n            if (output) {\n                ensureBytes(output, clength);\n            }\n            else {\n                output = new Uint8Array(clength);\n            }\n            xorStream(key, nonce, plaintext, output, 1);\n            const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n            output.set(tag, plength); // append tag\n            return output;\n        },\n        decrypt: (ciphertext, output) => {\n            const clength = ciphertext.length;\n            const plength = clength - tagLength;\n            if (clength < tagLength)\n                throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n            if (output) {\n                ensureBytes(output, plength);\n            }\n            else {\n                output = new Uint8Array(plength);\n            }\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!equalBytes(passedTag, tag))\n                throw new Error('invalid tag');\n            xorStream(key, nonce, data, output, 1);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ _poly1305_aead(chacha20);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ _poly1305_aead(xchacha20);\n//# sourceMappingURL=chacha.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _8n = BigInt(8);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.BASE;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        let p = this.multiplyUnsafe(CURVE.l / _2n).double();\n        if (CURVE.l % _2n)\n            p = p.add(this);\n        return p.equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(ExtendedPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","import { bytes as binary, CID } from './index.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\nfunction readonly ({ enumerable = true, configurable = false } = {}) {\n  return { enumerable, configurable, writable: false }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<[string, CID]>}\n */\nfunction * linksWithin (path, value) {\n  if (value != null && typeof value === 'object') {\n    if (Array.isArray(value)) {\n      for (const [index, element] of value.entries()) {\n        const elementPath = [...path, index]\n        const cid = CID.asCID(element)\n        if (cid) {\n          yield [elementPath.join('/'), cid]\n        } else if (typeof element === 'object') {\n          yield * links(element, elementPath)\n        }\n      }\n    } else {\n      const cid = CID.asCID(value)\n      if (cid) {\n        yield [path.join('/'), cid]\n      } else {\n        yield * links(value, path)\n      }\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<[string, CID]>}\n */\nfunction * links (source, base) {\n  if (source == null || source instanceof Uint8Array) {\n    return\n  }\n  const cid = CID.asCID(source)\n  if (cid) {\n    yield [base.join('/'), cid]\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield * linksWithin(path, value)\n  }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<string>}\n */\nfunction * treeWithin (path, value) {\n  if (Array.isArray(value)) {\n    for (const [index, element] of value.entries()) {\n      const elementPath = [...path, index]\n      yield elementPath.join('/')\n      if (typeof element === 'object' && !CID.asCID(element)) {\n        yield * tree(element, elementPath)\n      }\n    }\n  } else {\n    yield * tree(value, path)\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<string>}\n */\nfunction * tree (source, base) {\n  if (source == null || typeof source !== 'object') {\n    return\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield path.join('/')\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      yield * treeWithin(path, value)\n    }\n  }\n}\n\n/**\n *\n * @template T\n * @param {T} source\n * @param {string[]} path\n * @returns {API.BlockCursorView<unknown>}\n */\nfunction get (source, path) {\n  let node = /** @type {Record<string, any>} */(source)\n  for (const [index, key] of path.entries()) {\n    node = node[key]\n    if (node == null) {\n      throw new Error(`Object has no property at ${path.slice(0, index + 1).map(part => `[${JSON.stringify(part)}]`).join('')}`)\n    }\n    const cid = CID.asCID(node)\n    if (cid) {\n      return { value: cid, remaining: path.slice(index + 1).join('/') }\n    }\n  }\n  return { value: node }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} C - multicodec code corresponding to codec used to encode the block\n * @template {number} A - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @implements {API.BlockView<T, C, A, V>}\n */\nclass Block {\n  /**\n   * @param {object} options\n   * @param {CID<T, C, A, V>} options.cid\n   * @param {API.ByteView<T>} options.bytes\n   * @param {T} options.value\n   */\n  constructor ({ cid, bytes, value }) {\n    if (!cid || !bytes || typeof value === 'undefined') { throw new Error('Missing required argument') }\n\n    this.cid = cid\n    this.bytes = bytes\n    this.value = value\n    this.asBlock = this\n\n    // Mark all the properties immutable\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    })\n  }\n\n  links () {\n    return links(this.value, [])\n  }\n\n  tree () {\n    return tree(this.value, [])\n  }\n\n  /**\n   *\n   * @param {string} [path]\n   * @returns {API.BlockCursorView<unknown>}\n   */\n  get (path = '/') {\n    return get(this.value, path.split('/').filter(Boolean))\n  }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {T} options.value\n * @param {API.BlockEncoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function encode ({ value, codec, hasher }) {\n  if (typeof value === 'undefined') throw new Error('Missing required argument \"value\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const bytes = codec.encode(value)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(\n    1,\n    codec.code,\n    hash\n  )\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function decode ({ bytes, codec, hasher }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(1, codec.code, hash)\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @typedef {object} RequiredCreateOptions\n * @property {CID} options.cid\n */\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {{ cid: API.Link<T, Code, Alg, V>, value:T, codec?: API.BlockDecoder<Code, T>, bytes: API.ByteView<T> }|{cid:API.Link<T, Code, Alg, V>, bytes:API.ByteView<T>, value?:void, codec:API.BlockDecoder<Code, T>}} options\n * @returns {API.BlockView<T, Code, Alg, V>}\n */\nfunction createUnsafe ({ bytes, cid, value: maybeValue, codec }) {\n  const value = maybeValue !== undefined\n    ? maybeValue\n    : (codec && codec.decode(bytes))\n\n  if (value === undefined) throw new Error('Missing required argument, must either provide \"value\" or \"codec\"')\n\n  return new Block({\n    // eslint-disable-next-line object-shorthand\n    cid: /** @type {CID<T, Code, Alg, V>} */ (cid),\n    bytes,\n    value\n  })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {object} options\n * @param {API.Link<T, Code, Alg, V>} options.cid\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg, V>>}\n */\nasync function create ({ bytes, cid, hasher, codec }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!hasher) throw new Error('Missing required argument \"hasher\"')\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes')\n  }\n\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  })\n}\n\nexport { encode, decode, create, createUnsafe, Block }\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { base58btc } from './bases/base58.js'\n\n/**\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./cid').CID<unknown, C, A, V>} CID\n */\n\n/**\n * @template [T=unknown] - Logical type of the data encoded in the block\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./block/interface.js').BlockView<T, C, A, V>} BlockView\n */\n\n/**\n * @param {object} options\n * @param {CID} options.cid\n * @param {(cid: CID) => Promise<BlockView|null>} options.load\n * @param {Set<string>} [options.seen]\n */\nconst walk = async ({ cid, load, seen }) => {\n  seen = seen || new Set()\n  const b58Cid = cid.toString(base58btc)\n  if (seen.has(b58Cid)) {\n    return\n  }\n\n  const block = await load(cid)\n  seen.add(b58Cid)\n\n  if (block === null) { // the loader signals with `null` that we should skip this block\n    return\n  }\n\n  for (const [, cid] of block.links()) {\n    await walk({ cid, load, seen })\n  }\n}\n\nexport { walk }\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","const events = {};\nconst observable = (worker) => {\n    worker.addEventListener('message', (event) => {\n        observable.dispatchEvent('message', worker, event);\n    });\n    if (worker.port != null) {\n        worker.port.addEventListener('message', (event) => {\n            observable.dispatchEvent('message', worker, event);\n        });\n    }\n};\nobservable.addEventListener = (type, fn) => {\n    if (events[type] == null) {\n        events[type] = [];\n    }\n    events[type].push(fn);\n};\nobservable.removeEventListener = (type, fn) => {\n    if (events[type] == null) {\n        return;\n    }\n    events[type] = events[type]\n        .filter(listener => listener === fn);\n};\nobservable.dispatchEvent = function (type, worker, event) {\n    if (events[type] == null) {\n        return;\n    }\n    events[type].forEach(fn => fn(worker, event));\n};\nexport default observable;\n//# sourceMappingURL=index.js.map","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.on || emitter.addListener || emitter.addEventListener;\n\tconst removeListener = emitter.off || emitter.removeListener || emitter.removeEventListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\trejectHandler(options.signal.reason);\n\t\t\t}, {once: true});\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, {milliseconds: options.timeout});\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]);\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\tcancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\tif (options.signal) {\n\t\toptions.signal.addEventListener('abort', () => {\n\t\t\trejectHandler(options.signal.reason);\n\t\t}, {once: true});\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pending, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_throwOnAbort, _PQueue_onEvent;\nimport EventEmitter from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pending.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\"),\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pending, (_b = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    // TODO: Use options.signal?.throwIfAborted() when targeting Node.js 18\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        throw new AbortError('The task was aborted.');\n                    }\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), options.timeout);\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_throwOnAbort).call(this, options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n                }\n            }, options);\n            this.emit('add');\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pending, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pending = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pending, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pending, (_a = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        this.emit('empty');\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0) {\n            this.emit('idle');\n        }\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_throwOnAbort = async function _PQueue_throwOnAbort(signal) {\n    return new Promise((_resolve, reject) => {\n        signal.addEventListener('abort', () => {\n            // TODO: Reject with signal.throwIfAborted() when targeting Node.js 18\n            // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n            reject(new AbortError('The task was aborted.'));\n        }, { once: true });\n    });\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\n","export default async function pReflect(promise) {\n\ttry {\n\t\tconst value = await promise;\n\n\t\treturn {\n\t\t\tstatus: 'fulfilled',\n\t\t\tvalue,\n\t\t\tisFulfilled: true,\n\t\t\tisRejected: false\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tstatus: 'rejected',\n\t\t\treason: error,\n\t\t\tisFulfilled: false,\n\t\t\tisRejected: true\n\t\t};\n\t}\n}\n\nexport function isFulfilled(promiseResult) {\n\treturn 'value' in promiseResult;\n}\n\nexport function isRejected(promiseResult) {\n\treturn 'reason' in promiseResult;\n}\n","/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n","import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n","import pReflect from 'p-reflect';\nimport pLimit from 'p-limit';\n\nexport default async function pSettle(array, options = {}) {\n\tconst {concurrency = Number.POSITIVE_INFINITY} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn Promise.all(array.map(element => {\n\t\tif (element && typeof element.then === 'function') {\n\t\t\treturn pReflect(element);\n\t\t}\n\n\t\tif (typeof element === 'function') {\n\t\t\treturn pReflect(limit(() => element()));\n\t\t}\n\n\t\treturn pReflect(Promise.resolve(element));\n\t}));\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ?\n\tnew AbortError(errorMessage) :\n\tnew DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined ?\n\t\tgetDOMException('This operation was aborted.') :\n\t\tsignal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, milliseconds, fallback, options) {\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = {\n\t\t\tcustomTimers: {setTimeout, clearTimeout},\n\t\t\t...options\n\t\t};\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = options.customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (typeof fallback === 'function') {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\toptions.customTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n    }\n}\n","import { Netmask } from 'netmask';\nimport ip_regex from 'ip-regex';\nimport { isIP } from '@chainsafe/is-ip';\nimport ipaddr from 'ipaddr.js';\nconst { isValid: is_valid, parse } = ipaddr;\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range));\nfunction ipv4_check(ip_addr) {\n    for (let r of NETMASK_RANGES) {\n        if (r.contains(ip_addr))\n            return true;\n    }\n    return false;\n}\nfunction ipv6_check(ip_addr) {\n    return /^::$/.test(ip_addr) ||\n        /^::1$/.test(ip_addr) ||\n        /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr);\n}\nexport default (ip) => {\n    if (is_valid(ip)) {\n        const parsed = parse(ip);\n        if (parsed.kind() === 'ipv4')\n            return ipv4_check(parsed.toNormalizedString());\n        else if (parsed.kind() === 'ipv6')\n            return ipv6_check(ip);\n    }\n    else if (isIP(ip) && ip_regex.v6().test(ip))\n        return ipv6_check(ip);\n    return undefined;\n};\n","'use strict'\n\nimport is_ip_private from './lib/index.js'\nexport default is_ip_private","/**\n * An implementation of the ProgressEvent interface, this is essentially\n * a typed `CustomEvent` with a `type` property that lets us disambiguate\n * events passed to `progress` callbacks.\n */\nexport class CustomProgressEvent extends Event {\n    constructor(type, detail) {\n        super(type);\n        this.detail = detail;\n    }\n}\n//# sourceMappingURL=index.js.map","// @ts-expect-error no types\nimport ReaderClass from 'protobufjs/src/reader.js';\n// @ts-expect-error no types\nimport ReaderBufferClass from 'protobufjs/src/reader_buffer.js';\n// @ts-expect-error no types\nimport util from 'protobufjs/src/util/minimal.js';\n// @ts-expect-error no types\nimport WriterClass from 'protobufjs/src/writer.js';\n// @ts-expect-error no types\nimport WriterBufferClass from 'protobufjs/src/writer_buffer.js';\nfunction configure() {\n    util._configure();\n    ReaderClass._configure(ReaderBufferClass);\n    WriterClass._configure(WriterBufferClass);\n}\n// Set up buffer utility according to the environment\nconfigure();\n// monkey patch the reader to add native bigint support\nconst methods = [\n    'uint64', 'int64', 'sint64', 'fixed64', 'sfixed64'\n];\nfunction patchReader(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function () {\n            return BigInt(original.call(this).toString());\n        };\n    }\n    return obj;\n}\nexport function reader(buf) {\n    return patchReader(new ReaderClass(buf));\n}\nfunction patchWriter(obj) {\n    for (const method of methods) {\n        if (obj[method] == null) {\n            continue;\n        }\n        const original = obj[method];\n        obj[method] = function (val) {\n            return original.call(this, val.toString());\n        };\n    }\n    return obj;\n}\nexport function writer() {\n    return patchWriter(WriterClass.create());\n}\n//# sourceMappingURL=utils.js.map","import { reader } from './utils.js';\nexport function decodeMessage(buf, codec) {\n    const r = reader(buf instanceof Uint8Array ? buf : buf.subarray());\n    return codec.decode(r);\n}\n//# sourceMappingURL=decode.js.map","import { writer } from './utils.js';\nexport function encodeMessage(message, codec) {\n    const w = writer();\n    codec.encode(message, w, {\n        lengthDelimited: false\n    });\n    return w.finish();\n}\n//# sourceMappingURL=encode.js.map","// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport var CODEC_TYPES;\n(function (CODEC_TYPES) {\n    CODEC_TYPES[CODEC_TYPES[\"VARINT\"] = 0] = \"VARINT\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT64\"] = 1] = \"BIT64\";\n    CODEC_TYPES[CODEC_TYPES[\"LENGTH_DELIMITED\"] = 2] = \"LENGTH_DELIMITED\";\n    CODEC_TYPES[CODEC_TYPES[\"START_GROUP\"] = 3] = \"START_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"END_GROUP\"] = 4] = \"END_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT32\"] = 5] = \"BIT32\";\n})(CODEC_TYPES || (CODEC_TYPES = {}));\nexport function createCodec(name, type, encode, decode) {\n    return {\n        name,\n        type,\n        encode,\n        decode\n    };\n}\n//# sourceMappingURL=codec.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n    function findValue(val) {\n        // Use the reverse mapping to look up the enum key for the stored value\n        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n        if (v[val.toString()] == null) {\n            throw new Error('Invalid enum value');\n        }\n        return v[val];\n    }\n    const encode = function enumEncode(val, writer) {\n        const enumValue = findValue(val);\n        writer.int32(enumValue);\n    };\n    const decode = function enumDecode(reader) {\n        const val = reader.int32();\n        return findValue(val);\n    };\n    // @ts-expect-error yeah yeah\n    return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}\n//# sourceMappingURL=enum.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n    return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}\n//# sourceMappingURL=message.js.map","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _arrayReduce(reducer, acc, list) {\n  var index = 0;\n  var length = list.length;\n\n  while (index < length) {\n    acc = reducer(acc, list[index]);\n    index += 1;\n  }\n\n  return acc;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = function _xmap(f) {\n  return function (xf) {\n    return new XMap(f, xf);\n  };\n};\n\nexport default _xmap;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _arrayReduce from \"./internal/_arrayReduce.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _arrayReduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\n\nexport default prop;","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","import _isArrayLike from \"./_isArrayLike.js\";\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _createReduce(arrayReduce, methodReduce, iterableReduce) {\n  return function _reduce(xf, acc, list) {\n    if (_isArrayLike(list)) {\n      return arrayReduce(xf, acc, list);\n    }\n\n    if (list == null) {\n      return acc;\n    }\n\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return methodReduce(xf, acc, list, 'fantasy-land/reduce');\n    }\n\n    if (list[symIterator] != null) {\n      return iterableReduce(xf, acc, list[symIterator]());\n    }\n\n    if (typeof list.next === 'function') {\n      return iterableReduce(xf, acc, list);\n    }\n\n    if (typeof list.reduce === 'function') {\n      return methodReduce(xf, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}","export default function _xArrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _createReduce from \"./_createReduce.js\";\nimport _xArrayReduce from \"./_xArrayReduce.js\";\nimport bind from \"../bind.js\";\n\nfunction _xIterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _xMethodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar _xReduce =\n/*#__PURE__*/\n_createReduce(_xArrayReduce, _xMethodReduce, _xIterableReduce);\n\nexport default _xReduce;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(function (xf, acc, list) {\n  return _xReduce(typeof xf === 'function' ? _xwrap(xf) : xf, acc, list);\n});\n\nexport default reduce;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, deep, map) {\n  map || (map = new _ObjectMap()); // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n\n  if (_isPrimitive(value)) {\n    return value;\n  }\n\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n\n    map.set(value, copiedValue);\n\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}\n\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\n\nvar _ObjectMap =\n/*#__PURE__*/\nfunction () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n\n    return hashedKey.join();\n  };\n\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n\n      return;\n    }\n\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      return;\n    }\n\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n\n  return _ObjectMap;\n}();","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}","import _clone from \"./_clone.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, _clone(this.valueAcc, false)];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nexport default function _xreduceBy(valueFn, valueAcc, keyFn) {\n  return function (xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  };\n}","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  var xf = _xwrap(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, false), elt);\n\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n\n    acc[key] = value;\n    return acc;\n  });\n\n  return _xReduce(xf, {}, list);\n}));\n\nexport default reduceBy;","import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy, R.collectBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\n\nexport default groupBy;","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = (f(a), a)\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _includesWith from \"./internal/_includesWith.js\";\nimport _xuniqWith from \"./internal/_xuniqWith.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqWith;","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"string\" || typeof payload[0] === \"number\"));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","import isPlainObject from 'is-plain-obj';\n\nexport default function sortKeys(object, options = {}) {\n\tif (!isPlainObject(object) && !Array.isArray(object)) {\n\t\tthrow new TypeError('Expected a plain object or array');\n\t}\n\n\tconst {deep, compare} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst deepSortArray = array => {\n\t\tconst seenIndex = seenInput.indexOf(array);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = [];\n\t\tseenInput.push(array);\n\t\tseenOutput.push(result);\n\n\t\tresult.push(...array.map(item => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn deepSortArray(item);\n\t\t\t}\n\n\t\t\tif (isPlainObject(item)) {\n\t\t\t\treturn _sortKeys(item);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t}));\n\n\t\treturn result;\n\t};\n\n\tconst _sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\t\t\tlet newValue;\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tnewValue = deepSortArray(value);\n\t\t\t} else {\n\t\t\t\tnewValue = deep && isPlainObject(value) ? _sortKeys(value) : value;\n\t\t\t}\n\n\t\t\tObject.defineProperty(result, key, {\n\t\t\t\t...Object.getOwnPropertyDescriptor(object, key),\n\t\t\t\tvalue: newValue\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tif (Array.isArray(object)) {\n\t\treturn deep ? deepSortArray(object) : object.slice();\n\t}\n\n\treturn _sortKeys(object);\n}\n","import { EndOfStreamError } from 'peek-readable';\nimport { Buffer } from 'node:buffer';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    constructor(fileInfo) {\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.numBuffer = new Uint8Array(8);\n        this.fileInfo = fileInfo ? fileInfo : {};\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = Buffer.alloc(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = Buffer.alloc(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        // empty\n    }\n    normalizeOptions(uint8Array, options) {\n        if (options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (options) {\n            return {\n                mayBeLess: options.mayBeLess === true,\n                offset: options.offset ? options.offset : 0,\n                length: options.length ? options.length : (uint8Array.length - (options.offset ? options.offset : 0)),\n                position: options.position ? options.position : this.position\n            };\n        }\n        return {\n            mayBeLess: false,\n            offset: 0,\n            length: uint8Array.length,\n            position: this.position\n        };\n    }\n}\n","import { EndOfStreamError } from 'peek-readable';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param fileInfo - Pass additional file information to the tokenizer\n     */\n    constructor(uint8Array, fileInfo) {\n        super(fileInfo);\n        this.uint8Array = uint8Array;\n        this.fileInfo.size = this.fileInfo.size ? this.fileInfo.size : uint8Array.length;\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options && options.position) {\n            if (options.position < this.position) {\n                throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n            }\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        else {\n            uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read), normOptions.offset);\n            return bytes2read;\n        }\n    }\n    async close() {\n        // empty\n    }\n}\n","import { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nexport { EndOfStreamError } from 'peek-readable';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param fileInfo - Pass the file information, like size and MIME-type of the corresponding stream.\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, fileInfo) {\n    fileInfo = fileInfo ? fileInfo : {};\n    return new ReadStreamTokenizer(stream, fileInfo);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param fileInfo - Pass additional file information to the tokenizer\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, fileInfo) {\n    return new BufferTokenizer(uint8Array, fileInfo);\n}\n","import * as ieee754 from 'ieee754';\nimport { Buffer } from 'node:buffer';\n// Primitive types\nfunction dv(array) {\n    return new DataView(array.buffer, array.byteOffset);\n}\n/**\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getUint8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getInt8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_LE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_BE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n    len: 2,\n    get(dataView, offset) {\n        return ieee754.read(dataView, offset, false, 10, this.len);\n    },\n    put(dataView, offset, value) {\n        ieee754.write(dataView, value, offset, false, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n    len: 2,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 10, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, false, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, false, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n    /**\n     * @param len number of bytes to ignore\n     */\n    constructor(len) {\n        this.len = len;\n    }\n    // ToDo: don't read, but skip data\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    get(array, off) {\n    }\n}\nexport class Uint8ArrayType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(array, offset) {\n        return array.subarray(offset, offset + this.len);\n    }\n}\nexport class BufferType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(uint8Array, off) {\n        return Buffer.from(uint8Array.subarray(off, off + this.len));\n    }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n */\nexport class StringType {\n    constructor(len, encoding) {\n        this.len = len;\n        this.encoding = encoding;\n    }\n    get(uint8Array, offset) {\n        return Buffer.from(uint8Array).toString(this.encoding, offset, offset + this.len);\n    }\n}\n/**\n * ANSI Latin 1 String\n * Using windows-1252 / ISO 8859-1 decoding\n */\nexport class AnsiStringType {\n    constructor(len) {\n        this.len = len;\n    }\n    static decode(buffer, offset, until) {\n        let str = '';\n        for (let i = offset; i < until; ++i) {\n            str += AnsiStringType.codePointToString(AnsiStringType.singleByteDecoder(buffer[i]));\n        }\n        return str;\n    }\n    static inRange(a, min, max) {\n        return min <= a && a <= max;\n    }\n    static codePointToString(cp) {\n        if (cp <= 0xFFFF) {\n            return String.fromCharCode(cp);\n        }\n        else {\n            cp -= 0x10000;\n            return String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n        }\n    }\n    static singleByteDecoder(bite) {\n        if (AnsiStringType.inRange(bite, 0x00, 0x7F)) {\n            return bite;\n        }\n        const codePoint = AnsiStringType.windows1252[bite - 0x80];\n        if (codePoint === null) {\n            throw Error('invaliding encoding');\n        }\n        return codePoint;\n    }\n    get(buffer, offset = 0) {\n        return AnsiStringType.decode(buffer, offset, offset + this.len);\n    }\n}\nAnsiStringType.windows1252 = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352,\n    8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732,\n    8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168,\n    169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184,\n    185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,\n    201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,\n    217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n    248, 249, 250, 251, 252, 253, 254, 255];\n","/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc';\nconst N1 = Math.pow(2, 7);\nconst N2 = Math.pow(2, 14);\nconst N3 = Math.pow(2, 21);\nconst N4 = Math.pow(2, 28);\nconst N5 = Math.pow(2, 35);\nconst N6 = Math.pow(2, 42);\nconst N7 = Math.pow(2, 49);\n/** Most significant bit of a byte */\nconst MSB = 0x80;\n/** Rest of the bits in a byte */\nconst REST = 0x7f;\nexport function encodingLength(value) {\n    if (value < N1) {\n        return 1;\n    }\n    if (value < N2) {\n        return 2;\n    }\n    if (value < N3) {\n        return 3;\n    }\n    if (value < N4) {\n        return 4;\n    }\n    if (value < N5) {\n        return 5;\n    }\n    if (value < N6) {\n        return 6;\n    }\n    if (value < N7) {\n        return 7;\n    }\n    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n        throw new RangeError('Could not encode varint');\n    }\n    return 8;\n}\nexport function encodeUint8Array(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 7: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 6: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 5: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 4: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 3: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 2: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 1: {\n            buf[offset++] = (value & 0xFF);\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function encodeUint8ArrayList(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 7: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 6: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 5: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 4: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 3: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 2: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 1: {\n            buf.set(offset++, (value & 0xFF));\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function decodeUint8Array(buf, offset) {\n    let b = buf[offset];\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 1];\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 2];\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 3];\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 4];\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 5];\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 6];\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 7];\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function decodeUint8ArrayList(buf, offset) {\n    let b = buf.get(offset);\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 1);\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 2);\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 3);\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 4);\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 5);\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 6);\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 7);\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function encode(value, buf, offset = 0) {\n    if (buf == null) {\n        buf = allocUnsafe(encodingLength(value));\n    }\n    if (buf instanceof Uint8Array) {\n        return encodeUint8Array(value, buf, offset);\n    }\n    else {\n        return encodeUint8ArrayList(value, buf, offset);\n    }\n}\nexport function decode(buf, offset = 0) {\n    if (buf instanceof Uint8Array) {\n        return decodeUint8Array(buf, offset);\n    }\n    else {\n        return decodeUint8ArrayList(buf, offset);\n    }\n}\n//# sourceMappingURL=index.js.map","import { concat } from 'uint8arrays/concat';\nimport { equals } from 'uint8arrays/equals';\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc';\nconst symbol = Symbol.for('@achingbrain/uint8arraylist');\nfunction findBufAndOffset(bufs, index) {\n    if (index == null || index < 0) {\n        throw new RangeError('index is out of bounds');\n    }\n    let offset = 0;\n    for (const buf of bufs) {\n        const bufEnd = offset + buf.byteLength;\n        if (index < bufEnd) {\n            return {\n                buf,\n                index: index - offset\n            };\n        }\n        offset = bufEnd;\n    }\n    throw new RangeError('index is out of bounds');\n}\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList(value) {\n    return Boolean(value?.[symbol]);\n}\nexport class Uint8ArrayList {\n    constructor(...data) {\n        // Define symbol\n        Object.defineProperty(this, symbol, { value: true });\n        this.bufs = [];\n        this.length = 0;\n        if (data.length > 0) {\n            this.appendAll(data);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this.bufs;\n    }\n    get byteLength() {\n        return this.length;\n    }\n    /**\n     * Add one or more `bufs` to the end of this Uint8ArrayList\n     */\n    append(...bufs) {\n        this.appendAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the end of this Uint8ArrayList\n     */\n    appendAll(bufs) {\n        let length = 0;\n        for (const buf of bufs) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.push(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.push(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Add one or more `bufs` to the start of this Uint8ArrayList\n     */\n    prepend(...bufs) {\n        this.prependAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the start of this Uint8ArrayList\n     */\n    prependAll(bufs) {\n        let length = 0;\n        for (const buf of bufs.reverse()) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.unshift(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.unshift(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Read the value at `index`\n     */\n    get(index) {\n        const res = findBufAndOffset(this.bufs, index);\n        return res.buf[res.index];\n    }\n    /**\n     * Set the value at `index` to `value`\n     */\n    set(index, value) {\n        const res = findBufAndOffset(this.bufs, index);\n        res.buf[res.index] = value;\n    }\n    /**\n     * Copy bytes from `buf` to the index specified by `offset`\n     */\n    write(buf, offset = 0) {\n        if (buf instanceof Uint8Array) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf[i]);\n            }\n        }\n        else if (isUint8ArrayList(buf)) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf.get(i));\n            }\n        }\n        else {\n            throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList');\n        }\n    }\n    /**\n     * Remove bytes from the front of the pool\n     */\n    consume(bytes) {\n        // first, normalize the argument, in accordance with how Buffer does it\n        bytes = Math.trunc(bytes);\n        // do nothing if not a positive number\n        if (Number.isNaN(bytes) || bytes <= 0) {\n            return;\n        }\n        // if consuming all bytes, skip iterating\n        if (bytes === this.byteLength) {\n            this.bufs = [];\n            this.length = 0;\n            return;\n        }\n        while (this.bufs.length > 0) {\n            if (bytes >= this.bufs[0].byteLength) {\n                bytes -= this.bufs[0].byteLength;\n                this.length -= this.bufs[0].byteLength;\n                this.bufs.shift();\n            }\n            else {\n                this.bufs[0] = this.bufs[0].subarray(bytes);\n                this.length -= bytes;\n                break;\n            }\n        }\n    }\n    /**\n     * Extracts a section of an array and returns a new array.\n     *\n     * This is a copy operation as it is with Uint8Arrays and Arrays\n     * - note this is different to the behaviour of Node Buffers.\n     */\n    slice(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a alloc from the given start and end element index.\n     *\n     * In the best case where the data extracted comes from a single Uint8Array\n     * internally this is a no-copy operation otherwise it is a copy operation.\n     */\n    subarray(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        if (bufs.length === 1) {\n            return bufs[0];\n        }\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a allocList from the given start and end element index.\n     *\n     * This is a no-copy operation.\n     */\n    sublist(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        const list = new Uint8ArrayList();\n        list.length = length;\n        // don't loop, just set the bufs\n        list.bufs = bufs;\n        return list;\n    }\n    _subList(beginInclusive, endExclusive) {\n        beginInclusive = beginInclusive ?? 0;\n        endExclusive = endExclusive ?? this.length;\n        if (beginInclusive < 0) {\n            beginInclusive = this.length + beginInclusive;\n        }\n        if (endExclusive < 0) {\n            endExclusive = this.length + endExclusive;\n        }\n        if (beginInclusive < 0 || endExclusive > this.length) {\n            throw new RangeError('index is out of bounds');\n        }\n        if (beginInclusive === endExclusive) {\n            return { bufs: [], length: 0 };\n        }\n        if (beginInclusive === 0 && endExclusive === this.length) {\n            return { bufs: [...this.bufs], length: this.length };\n        }\n        const bufs = [];\n        let offset = 0;\n        for (let i = 0; i < this.bufs.length; i++) {\n            const buf = this.bufs[i];\n            const bufStart = offset;\n            const bufEnd = bufStart + buf.byteLength;\n            // for next loop\n            offset = bufEnd;\n            if (beginInclusive >= bufEnd) {\n                // start after this buf\n                continue;\n            }\n            const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd;\n            const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd;\n            if (sliceStartInBuf && sliceEndsInBuf) {\n                // slice is wholly contained within this buffer\n                if (beginInclusive === bufStart && endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                const start = beginInclusive - bufStart;\n                bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)));\n                break;\n            }\n            if (sliceStartInBuf) {\n                // slice starts in this buffer\n                if (beginInclusive === 0) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    continue;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(beginInclusive - bufStart));\n                continue;\n            }\n            if (sliceEndsInBuf) {\n                if (endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(0, endExclusive - bufStart));\n                break;\n            }\n            // slice started before this buffer and ends after it\n            bufs.push(buf);\n        }\n        return { bufs, length: endExclusive - beginInclusive };\n    }\n    indexOf(search, offset = 0) {\n        if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n            throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array');\n        }\n        const needle = search instanceof Uint8Array ? search : search.subarray();\n        offset = Number(offset ?? 0);\n        if (isNaN(offset)) {\n            offset = 0;\n        }\n        if (offset < 0) {\n            offset = this.length + offset;\n        }\n        if (offset < 0) {\n            offset = 0;\n        }\n        if (search.length === 0) {\n            return offset > this.length ? this.length : offset;\n        }\n        // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n        const M = needle.byteLength;\n        if (M === 0) {\n            throw new TypeError('search must be at least 1 byte long');\n        }\n        // radix\n        const radix = 256;\n        const rightmostPositions = new Int32Array(radix);\n        // position of the rightmost occurrence of the byte c in the pattern\n        for (let c = 0; c < radix; c++) {\n            // -1 for bytes not in pattern\n            rightmostPositions[c] = -1;\n        }\n        for (let j = 0; j < M; j++) {\n            // rightmost position for bytes in pattern\n            rightmostPositions[needle[j]] = j;\n        }\n        // Return offset of first match, -1 if no match\n        const right = rightmostPositions;\n        const lastIndex = this.byteLength - needle.byteLength;\n        const lastPatIndex = needle.byteLength - 1;\n        let skip;\n        for (let i = offset; i <= lastIndex; i += skip) {\n            skip = 0;\n            for (let j = lastPatIndex; j >= 0; j--) {\n                const char = this.get(i + j);\n                if (needle[j] !== char) {\n                    skip = Math.max(1, j - right[char]);\n                    break;\n                }\n            }\n            if (skip === 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    getInt8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt8(0);\n    }\n    setInt8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getInt16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt16(0, littleEndian);\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getInt32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt32(0, littleEndian);\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigInt64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigInt64(0, littleEndian);\n    }\n    setBigInt64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigInt64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint8(0);\n    }\n    setUint8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getUint16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint16(0, littleEndian);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint32(0, littleEndian);\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigUint64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigUint64(0, littleEndian);\n    }\n    setBigUint64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigUint64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat32(0, littleEndian);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat64(0, littleEndian);\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        if (!(other instanceof Uint8ArrayList)) {\n            return false;\n        }\n        if (other.bufs.length !== this.bufs.length) {\n            return false;\n        }\n        for (let i = 0; i < this.bufs.length; i++) {\n            if (!equals(this.bufs[i], other.bufs[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n     * method if you know the total size of all the Uint8Arrays ahead of time.\n     */\n    static fromUint8Arrays(bufs, length) {\n        const list = new Uint8ArrayList();\n        list.bufs = bufs;\n        if (length == null) {\n            length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0);\n        }\n        list.length = length;\n        return list;\n    }\n}\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n//# sourceMappingURL=index.js.map","import { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return asUint8Array(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n */\nexport function compare(a, b) {\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] < b[i]) {\n            return -1;\n        }\n        if (a[i] > b[i]) {\n            return 1;\n        }\n    }\n    if (a.byteLength > b.byteLength) {\n        return 1;\n    }\n    if (a.byteLength < b.byteLength) {\n        return -1;\n    }\n    return 0;\n}\n//# sourceMappingURL=compare.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import bases from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns the xor distance between two arrays\n */\nexport function xor(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('Inputs should have the same length');\n    }\n    const result = allocUnsafe(a.length);\n    for (let i = 0; i < a.length; i++) {\n        result[i] = a[i] ^ b[i];\n    }\n    return asUint8Array(result);\n}\n//# sourceMappingURL=xor.js.map","import detectElectron from 'is-electron'\n\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nexport const isElectron = detectElectron()\n\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\nexport const isBrowser = isEnvWithDom && !isElectron\nexport const isElectronMain = isElectron && !isEnvWithDom\nexport const isElectronRenderer = isElectron && isEnvWithDom\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\n\n// defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test'\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n"],"names":["module","exports","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","psz","zeroes","size","b256","carry","it3","Error","it4","vch","encode","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","pbegin","pend","b58","it1","it2","str","repeat","decode","string","read","buf","offset","b","res","shift","counter","l","bytes","RangeError","REST","pow","MSB","num","out","Number","MAX_SAFE_INTEGER","oldOffset","INT","MSBALL","encodingLength","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","fn","ctx","params","arguments","index","pending","Promise","resolve","reject","err","apply","base64","p","n","ceil","b64","s64","start","end","t","parts","chunk","push","String","fromCharCode","slice","join","invalidEncoding","c","undefined","test","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","replace","Object","keys","e","alloc","SIZE","MAX","slab","call","utf8","len","write","c1","c2","Emitter","obj","key","mixin","addEventListener","event","_callbacks","once","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emitReserved","hasListeners","defineProperty","int_1","writeUint16BE","writeUint16LE","readInt32BE","array","readUint32BE","readInt32LE","readUint32LE","writeUint32BE","writeUint32LE","writeUint64BE","writeUint64LE","readInt16BE","readUint16BE","readInt16LE","readUint16LE","writeInt16BE","writeInt16LE","writeInt32BE","writeInt32LE","readInt64BE","readUint64BE","readInt64LE","readUint64LE","writeInt64BE","writeInt64LE","bitLength","result","mul","isSafeInteger","div","readFloat32BE","DataView","getFloat32","readFloat32LE","readFloat64BE","getFloat64","readFloat64LE","writeFloat32BE","setFloat32","writeFloat32LE","writeFloat64BE","setFloat64","writeFloat64LE","binary_1","wipe_1","ROUNDS","core","input","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","streamXOR","nonce","src","dst","nonceInplaceCounterLength","nc","counterLength","set","block","incrementCounter","wipe","stream","chacha_1","poly1305_1","constant_time_1","ZEROS","ChaCha20Poly1305","nonceLength","tagLength","_key","seal","plaintext","associatedData","authKey","resultLength","_authenticate","subarray","open","sealed","calculatedTag","equal","clean","tagOut","ciphertext","h","Poly1305","update","tag","digest","compare","a","select","subject","resultIfOne","resultIfZero","lessOrEqual","isSerializableHash","saveState","restoreState","cleanSavedState","hmac_1","HKDF","hash","salt","info","_counter","_hash","_info","okm","hmac","_hmac","HMAC","_buffer","digestLength","_bufpos","_fillBuffer","ctr","reset","finish","expand","hash_1","_finished","_inner","_outer","blockSize","pad","_innerKeyedState","_outerKeyedState","data","savedState","imul","al","bl","add","sub","rotl","rotr","isInteger","isFinite","DIGEST_LENGTH","_r","Uint16Array","_h","_pad","_leftover","_fin","t0","t1","t2","t3","t4","t5","t6","t7","_blocks","m","mpos","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","mask","f","g","want","oneTimeAuth","randomStringForEntropy","randomString","randomUint32","randomBytes","defaultRandomSource","system_1","prng","SystemRandomSource","ALPHANUMERIC","charset","charsLen","maxByte","randomByte","bits","BrowserRandomSource","constructor","isAvailable","isInstantiated","browserCrypto","self","crypto","msCrypto","getRandomValues","_crypto","min","NodeRandomSource","nodeCrypto","browser_1","node_1","name","_source","SHA256","_state","Int32Array","_temp","_bufferLength","_bytesHashed","_initState","dataLength","dataPos","hashBlocks","bytesHashed","left","bitLenHi","bitLenLo","padLength","state","bufferLength","K","w","v","d","u","random_1","gf","init","r","_9","_121665","car25519","o","sel25519","q","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","square","scalarMult","z","unpack25519","x32","x16","inp","inv25519","pack25519","scalarMultBase","generateKeyPairFromSeed","seed","secretKey","publicKey","mySecretKey","theirPublicKey","rejectZero","zeros","exp","timespan","ma","previousTime","ret","time","diff","sqrt","movingAverage","variance","deviation","forecast","s","y","plural","ms","msAbs","isPlural","options","type","match","exec","parseFloat","toLowerCase","parse","long","abs","fmtLong","fmtShort","JSON","stringify","root","library","_validBytes","_x86Multiply","_x86Rotl","_x86Fmix","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","x86","hash32","inputValidation","remainder","blocks","k1","hash128","k2","k3","k4","c3","c4","toString","x64","murmurHash3","globalThis","fetch","Headers","Request","Response","default","Netmask","atob","chr","chr0","chrA","chra","ip2long","long2ip","ip","ref","substring","base","dmax","net","split","indexOf","maskLong","error1","bitmask","parseInt","netLong","hostmask","first","last","broadcast","contains","next","count","forEach","lastLong","globalObject","window","getGlobal","forge","registerAlgorithm","mode","cipher","aes","Algorithm","startEncrypting","iv","output","_createCipher","decrypt","createEncryptionCipher","startDecrypting","createDecryptionCipher","initialize","encrypt","inBlock","outBlock","_updateBlock","_w","_init","tmp","util","createBuffer","putByte","getInt32","encryptOp","_expandKey","modes","ecb","cbc","cfb","ofb","gcm","sbox","isbox","rcon","mix","imix","Nb","xtime","e2","e4","e8","sx","sx2","me","ime","ei","temp","iNk","Nk","m0","m1","m2","m3","wnew","wi","a2","Nr","algorithm","toUpperCase","createDecipher","createCipher","ByteBuffer","asn1","_checkBufferLength","remaining","error","available","requested","Class","UNIVERSAL","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","Type","NONE","BOOLEAN","INTEGER","BITSTRING","OCTETSTRING","NULL","OID","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SEQUENCE","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","create","tagClass","constructed","composed","bitStringContents","original","copy","excludeBitStringContents","equals","obj1","obj2","includeBitStringContents","getBerValueLength","getByte","getInt","_fromDer","depth","longFormBytes","_getValueLength","strict","getBytes","decodeBitStrings","savedRead","savedRemaining","unused","used","tc","ex","getInt16","asn1Options","fromDer","parseAllBytes","byteCount","toDer","useBitStringContents","putBytes","putBuffer","putInt16","substr","lenBytes","oidToDer","oid","valueBytes","values","derToOid","utcTimeToDate","utc","date","Date","year","MM","DD","hh","mm","ss","setUTCFullYear","setUTCHours","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","setFullYear","setHours","dateToUtcTime","rval","format","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateToGeneralizedTime","integerToDer","putSignedInt","integer","derToInteger","getSignedInt","validate","capture","errors","optional","captureAsn1","captureBitStringContents","captureBitStringValue","_nonLatinRegex","prettyPrint","level","indentation","indent","IA5String","subvalues","pki","oids","bytesToHex","decodeUtf8","message","api","_reverseAlphabets","alphabet","maxline","digits","at","_encodeWithByteBuffer","regex","RegExp","table","k","Buffer","reverse","algorithms","getAlgorithm","BlockCipher","_finish","_input","_op","_decrypt","opts","compact","unpad","overflow","afterFinish","transformIV","ints","inc32","from64To32","_ints","_inBlock","_outBlock","putInt32","padding","fillWithByte","truncate","_prev","_iv","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","clear","_R","additionalData","_cipherLength","_tagLength","_tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","concat","_aDataLength","_s","lengths","multiply","z_i","v_i","lsb","tableMultiply","x_i","ah","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","des","_keys","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","iterations","shifts","right","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","usePureJavaScript","_md","_ipadding","_opadding","md","keylen","blockLength","inner","getMac","dbits","jsbn","BigInteger","fromNumber","fromString","nbi","am3","xl","xh","am","navigator","appName","DB","DM","DV","FV","F1","F2","rr","vv","BI_RM","BI_RC","int2char","intAt","nbv","fromInt","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","q3","ONE","dlShiftTo","mu","divide","convert","compareTo","revert","reduce","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","u0","clamp","drShiftTo","fromRadix","mi","sh","max","lShiftTo","bs","cbs","bm","ds","rShiftTo","pm","pt","ts","nsh","ys","y0","yt","qd","isEven","negate","toRadix","km","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","chunkSize","signum","cs","intValue","dMultiply","testBit","bitwiseTo","shiftLeft","isProbablePrime","nextBytes","op","changeBit","addTo","modInt","millerRabin","n1","subtract","getLowestSetBit","shiftRight","random","modPow","clone","byteValue","shortValue","toByteArray","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","divideAndRemainder","g2","is1","modInverse","ac","gcd","mgf","mgf1","generate","maskLen","_IN","id","_I_","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","sha512","encryptPrivateKeyInfo","password","saltSize","dkLen","encryptionAlgorithm","encryptedData","getBytesSync","countBytes","ivLen","encOid","cipherFn","dk","pkcs5","pbkdf2","hexToBytes","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encrypted","encryptedPrivateKeyToPem","epki","msg","body","pem","encryptedPrivateKeyFromPem","headerType","procType","encryptRsaPrivateKey","rsaKey","legacy","wrapRsaPrivateKey","privateKeyToAsn1","opensslDeriveBytes","version","dekInfo","parameters","decryptRsaPrivateKey","rc2","privateKeyFromAsn1","iter","sha1","passBuf","D","Slen","S","Plen","P","I","B","Inew","setAt","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","md5","digests","isNodejs","callback","pbkdf2Sync","hLen","prf","u_c","u_c1","int32ToBytes","xorBytes","outer","setImmediate","foldHeader","header","insertSpace","$1","candidate","insert","ltrim","contentDomain","headers","encode64","rMessage","rHeader","rCRLF","decode64","lines","li","line","nl","vi","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","label","mgf1Md","keyLength","maxLength","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","decode_rsa_oaep","em","expectedLength","maskedSeed","db","lHashPrime","in_ps","code","p7","pkcs7","_recipientFromAsn1","recipientInfoValidator","issuer","RDNAttributesAsArray","serialNumber","serial","toHex","encryptedContent","encAlgorithm","parameter","encParameter","content","encKey","_recipientsToAsn1","recipients","distinguishedNameToAsn1","attributes","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","signature","unauthenticatedAttributes","attrsAsn1","attr","_attributeToAsn1","contentType","messageDigest","signingTime","jan_1_1950","jan_1_2050","timestamp","_fromAsn1","validator","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","contentInfoValidator","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","contentInfo","signerInfos","signedDataValidator","certs","certificateFromAsn1","certificateToAsn1","addSigner","signer","certificate","cert","certificateFromPem","privateKeyFromPem","sha256","sha384","authenticatedAttributes","rsaEncryption","encodeUtf8","detached","detachedContent","mds","ai","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","verify","addCertificate","addCertificateRevokationList","crl","encryptedDataValidator","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","ec","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","keyLen","ciphFn","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","prime","GCD_30_DELTA","THIRTY","generateProbablePrime","rng","Worker","primeincFindPrimeWithoutWorkers","generateRandom","numWorkers","workers","workLoad","range","workerScript","estimateCores","cores","workerMessage","found","terminate","hex","target","postMessage","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","bits1","process","versions","plugin","reseeds","generated","keyBytes","pools","_reseedSync","messageLength","_seed","needed","collect","seedFileSync","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","globalScope","arr","entropy","Uint32Array","QuotaExceededError","pool","generateSync","increment","nextTick","seedFile","_reseed","collectInt","registerWorker","worker","listener","pss","saltLength","sLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","checkLen","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_ctx","document","_navBytes","mousemove","clientX","clientY","keypress","charCode","createInstance","piTable","rol","word","ror","expandKey","effKeyBits","L","T","T1","T8","TM","mixRound","mashRound","_output","getInt16Le","R","runPlan","plan","putInt16Le","ptr","rsa","privateKeyValidator","rsaPrivateKeyValidator","rsaPublicKeyValidator","publicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","pub","dP","dQ","qInv","xp","xq","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","ml","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","yhex","ed","expected","xhex","createKeyPairGenerationState","eInt","qBits","pBits","pqState","stepKeyPairGenerationState","total","p1","q1","phi","privateKey","setPrivateKey","setPublicKey","generateKeyPair","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","priv","publicKeyFromPem","generateKey","then","pair","exportKey","pkcs8","setRsaPublicKey","genOp","oncomplete","exportOp","onerror","keypair","generateKeyPairSync","getPrime","_generateKeyPair","scheme","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","sha224","setRsaPrivateKey","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","publicKeyFromAsn1","publicKeyOid","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","_initialized","_padding","fillString","fullMessageLength","messageLengthSize","messageLength64","int32s","encoding","_update","finalBlock","s2","_k","s0","maj","_states","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","baseN","_checkBitsParam","ByteStringBuffer","isArrayBuffer","isArrayBufferView","_constructedStringLength","browser","setTimeout","stopPropagation","MutationObserver","now","createElement","observe","oldSetImmediate","setAttribute","node","_optimizeConstructedString","isEmpty","putString","putInt24","putInt24Le","putInt32Le","putInt","getInt24","getInt24Le","getInt32Le","DataBuffer","readOffset","growSize","writeOffset","accommodate","amount","setUint8","view","binary","raw","text","utf16","setInt16","setInt8","setInt32","getInt8","getUint8","s1","s3","_base64","_base64Idx","_base58","chr1","chr2","chr3","enc1","enc2","enc3","enc4","unescape","encodeURIComponent","decodeURIComponent","escape","base58","deflate","inflate","_setStorageObject","removeItem","setItem","_getStorageObject","getItem","_setItem","_getItem","_removeItem","empty","prop","_clearItems","_callStorageFunction","func","location","done","exception","idx","localStorage","clearItems","hasOwnProperty","part","re","argi","lastIndex","formatNumber","number","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","bytesFromIPv4","bytesFromIPv6","blanks","filter","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","group","unshift","hardwareConcurrency","Blob","blobUrl","URL","createObjectURL","st","et","sample","samples","avg","revokeObjectURL","results","map","overlaps","overlap","_shortNames","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","rdn","si","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","extensions","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","_dnToAsn1","attrs","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","client","server","email","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","comment","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyToPem","publicKeyToRSAPublicKeyPem","getPublicKeyFingerprint","delimiter","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","siginfo","validity","notBefore","notAfter","getField","sn","addField","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","ext","tbsCertificate","getTBSCertificate","child","issued","expectedIssuer","actualIssuer","isIssuer","parent","iattr","sattr","verifySubjectKeyIdentifier","certVersion","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","_dateToAsn1","tbs","certificateExtensionsToAsn1","dn","createCaStore","caStore","getBySubject","ensureSubjectHasHash","getIssuer","hasCertificate","der1","listAllCertificates","certList","removeCertificate","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","chain","validityCheckDate","selfSigned","parents","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","vfd","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","isEncoding","actual","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","hexSliceLookupTable","checkOffset","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUIntLE","readUIntBE","readUint8","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readBigInt64LE","readBigInt64BE","writeUIntLE","writeUIntBE","writeUint8","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","E","sym","getMessage","Base","super","writable","configurable","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","base64clean","i16","BufferBigIntNotDefined","define","callBind","implementation","getPolyfill","shim","polyfill","is","keysShim","has","toStr","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","object","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","Fifo","defer","_waitingConsumers","promise","_consume","nextConsumer","nextChunk","deferred","prefix","Events","EE","context","addListener","emitter","_events","_eventsCount","clearEvent","__proto__","eventNames","events","names","getOwnPropertySymbols","handlers","ee","listenerCount","a1","a3","a4","a5","prefixed","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","matches","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","sym_buf","build_tree","desc","stree","heap_max","xbits","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","strm","data_type","block_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","crcTable","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","zero","slide_hash","wsize","w_size","hash_size","head","prev","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","old_flush","level_flags","hcrc","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","common","assign","sources","flattenChunks","chunks","STR_APPLY_UIA_OK","__","_utf8len","strings","string2buf","TextEncoder","m_pos","str_len","buf_len","buf2string","TextDecoder","utf16buf","c_len","buf2binstring","utf8border","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","opt","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","constants","BAD$1","inffast","_in","_out","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","incr","low","curr","drop","huff","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","check","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","pako","durationRE","_","unitRatio","nanosecond","ns","us","microsecond","millisecond","second","sec","minute","hour","hr","day","week","wk","month","yr","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","env","argv","prependListener","prependOnceListener","binding","cwd","chdir","umask","protobuf","configure","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","indexOutOfRange","reader","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skip","skipType","wireType","BufferReader_","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","requestCtor","responseCtor","request","asPromise","response","endedByRPC","toNumber","zzEncode","zeroHash","high","unsigned","toLong","fromHash","toHash","part0","part1","part2","ifNotSet","newError","CustomError","properties","captureStackTrace","isNode","global","emptyArray","freeze","emptyObject","isset","isSet","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","Op","State","writer","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","queueMicrotask","catch","instantiate","loadWebAssembly","imp","wasm","WebAssembly","Rabin","getRabin","async","windowSize","polynomial","compiled","asModule","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","pointer","processed","MAX_BYTES","MAX_UINT32","RateLimiterRedis","RateLimiterMongo","RateLimiterMySQL","RateLimiterPostgres","RateLimiterClusterMaster","RateLimiterClusterMasterPM2","RateLimiterCluster","RateLimiterMemory","RateLimiterMemcache","RLWrapperBlackAndWhite","RateLimiterUnion","RateLimiterQueue","BurstyRateLimiter","RateLimiterRes","rateLimiter","burstLimiter","_rateLimiter","_burstLimiter","_combineRes","rlRes","blRes","remainingPoints","msBeforeNext","consumedPoints","isFirstInDuration","consume","pointsToConsume","rlRej","blRej","all","points","limiter","blackList","whiteList","isBlackListed","isWhiteListed","runActionAnyway","_limiter","_runActionAnyway","_blackList","_isBlackListed","_whiteList","_isWhiteListed","isBlackListedSomewhere","isWhiteListedSomewhere","getBlackRes","getWhiteRes","rejectBlack","resolveBlack","resolveWhite","secDuration","penalty","reward","delete","duration","blockDuration","execEvenly","execEvenlyMinDelayMs","keyPrefix","_points","_duration","msDuration","_blockDuration","msBlockDuration","_execEvenly","_execEvenlyMinDelayMs","_keyPrefix","_getKeySecDuration","customDuration","getKey","parseKey","rlKey","cluster","RateLimiterAbstract","channel","masterInstance","masterSendToWorker","send","promiseId","workerWaitInit","payload","_initiated","_promises","workerSendToMaster","masterProcessMsg","_rateLimiters","rejRes","workerProcessMsg","timeoutId","getOpts","savePromise","hrtime","timeoutMs","setMaxListeners","pm2","launchBus","pm2Bus","packet","sendDataToProcessId","pm_id","topic","sendErr","msgData","pm2Message","_timeoutMs","RateLimiterStoreAbstract","storeClient","_getRateLimiterRes","changedPoints","_upsert","forceExpire","nowMs","errAddKey","createdNew","attemptNumber","nextOptions","resUpsert","errUpsert","errGetExpire","resGetExpireMs","expireMs","_get","_delete","del","errDelExpire","MemoryStorage","_memoryStorage","incrby","delay","initPoints","getDriverVersion","_client","topology","metadata","driver","_v","major","feature","patch","dbName","tableName","indexKeyPrefix","mongo","conn","_initCollection","_driverVersion","_dbName","getDbName","static","_tableName","_indexKeyPrefix","collection","createIndex","expire","expireAfterSeconds","unique","_collection","doc","getTime","docAttrs","where","upsertData","$set","$or","$gt","$eq","$setOnInsert","$inc","upsertOptions","upsert","returnDocument","returnOriginal","findOneAndUpdate","replaceWhere","$lte","replaceTo","errReplace","findOne","deleteOne","deletedCount","clientType","storeType","clearExpiredByTimeout","tableCreated","_clearExpiredHourAgo","_createDbAndTable","clearExpired","_getConnection","query","_releaseConnection","_clearExpiredTimeoutId","unref","getConnection","errConn","connectionManager","acquireConnection","release","releaseConnection","errDb","_getCreateTableStmt","_clientType","_tableCreated","_clearExpiredByTimeout","row","_upsertTransaction","errBegin","rollback","dateNow","newExpire","errSelect","affectedRows","_createTable","_query","master","constructorName","rows","queryObj","expireQ","rowCount","RateLimiterQueueError","MAX_QUEUE_SIZE","KEY_DEFAULT","limiterFlexible","maxQueueSize","_queueLimiters","RateLimiterQueueInternal","_limiterFlexible","_maxQueueSize","getTokensRemaining","removeTokens","tokens","_waitTimeout","_queue","_this","_queueRequest","rej","_processFIFO","item","incrTtlLuaScript","redis","_rejectIfRedisNotReady","rejectIfRedisNotReady","defineCommand","numberOfKeys","lua","_isRedisReady","isReady","consumed","resTtlMs","multi","pttl","incrCallback","rlflxIncr","_msBeforeNext","_remainingPoints","_consumedPoints","_isFirstInDuration","_getDecoratedProperties","for","BlockedKeys","inMemoryBlockOnConsumed","inmemoryBlockOnConsumed","inMemoryBlockDuration","inmemoryBlockDuration","insuranceLimiter","_inMemoryBlockedKeys","_afterConsume","storeResult","addMs","blockPromise","_block","msInMemoryBlockDuration","_handleError","funcName","_inmemoryBlockedKeys","getInmemoryBlockMsBeforeExpire","getInMemoryBlockMsBeforeExpire","msInmemoryBlockDuration","msBeforeExpire","_inMemoryBlockOnConsumed","_inMemoryBlockDuration","_insuranceLimiter","inMemoryBlockMsBeforeExpire","deleteInMemoryBlockedAll","limiters","_limiters","promises","rejected","resObj","_addedKeysAmount","collectExpired","Record","_storage","durationSec","msBeforeExpires","expiresAt","durationMs","_value","_expiresAt","_timeoutId","readable_stream_1","ReadableWebToNodeStream","Readable","bytesRead","released","getReader","pendingRead","syncAndRelease","waitForReadToComplete","releaseLock","createErrorType","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","oneOf","thing","determiner","search","this_len","endsWith","objectKeys","Duplex","Writable","allowHalfOpen","readable","onend","_writableState","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","ReadableState","EElistenerCount","Stream","OurUint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","destroy","_destroy","readableAddChunk","addToFront","skipChunkCheck","er","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","resume","nReadingNextTick","resume_","fromList","endReadable","endReadableNT","wState","finished","xs","nOrig","doRead","pipe","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","dests","asyncIterator","_fromList","iterable","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","_flush","prefinish","_write","err2","CorkedRequest","entry","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","Function","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","hint","prim","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","lastPromise","wrapForNext","_this2","_Object$create","iterator","ownKeys","enumerableOnly","symbols","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","called","_len","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","streams","pop","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","Receptacle","toMS","cache","items","_lookup","lastModified","ttl","expires","record","refresh","meta","oldRecord","Retimer","that","_started","_rescheduled","_scheduled","_args","_triggered","_timerWrapper","_schedule","_timer","reschedule","RetryOperation","operation","timeouts","forever","retries","maxRetryTime","factor","minTimeout","maxTimeout","randomize","createTimeout","sort","attempt","methods","retry","mainError","_originalTimeouts","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","stop","currentTime","timeoutOps","try","attempts","counts","mainErrorCount","tasks","isErrored","isSync","each","some","task","ObjectUnsubscribedError","_super","Subject","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","AnonymousSubject","_throwIfClosed","errorContext","e_1","_a","_b","_c","e_1_1","return","complete","unsubscribe","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","Subscription","arrRemove","asObservable","observable","Observable","destination","subscribe","BehaviorSubject","getValue","subscription","pipeFromArray","fns","identity","observerOrNext","Subscriber","isObserver","sink","promiseCtor","getPromiseCtor","operations","_i","toPromise","config","COMPLETE_NOTIFICATION","createNotification","kind","EMPTY_OBSERVER","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","context_1","reportUnhandledError","notification","onStoppedNotification","timeoutProvider","UnsubscriptionError","initialTeardown","_parentage","_finalizers","e_2","_parentage_1","_parentage_1_1","remove","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","teardown","_hasParent","_addParent","_removeParent","EMPTY","EMPTY_SUBSCRIPTION","isSubscription","onUnhandledError","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","observeOn","scheduler","executeSchedule","subscribeOn","schedule","scheduleAsyncIterable","scheduled","isInteropObservable","innerFrom","scheduleObservable","isArrayLike","scheduleArray","isPromise","schedulePromise","isAsyncIterable","isIterable","scheduleIterable","isReadableStreamLike","scheduleReadableStreamLike","obs","fromAsyncIterable","iterable_1","iterable_1_1","readableStream","asyncIterable","asyncIterable_1","asyncIterable_1_1","trys","sent","interval","period","dueTime","intervalOrScheduler","intervalDuration","isScheduler","due","timer","concurrent","mergeMap","mergeAll","of","throwError","errorOrErrorFactory","errorFactory","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","catchError","selector","handledResult","innerSub","syncUnsub","debounceTime","activeTask","lastValue","lastTime","emitWhenIdle","targetTime","predicate","project","resultSelector","ii","onBeforeNext","innerSubScheduler","additionalFinalizer","active","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","_loop_1","bufferedValue","mergeInternals","TimeoutError","schedulerArg","with","_with","timeoutErrorFactory","_d","originalSourceSubscription","timerSubscription","seen","startTimer","Action","intervalProvider","setInterval","handler","delegate","clearInterval","handle","AsyncAction","recycleAsyncId","requestAsyncId","_id","_scheduler","execute","_execute","_delay","errorValue","errored","actions","dateTimestampProvider","Scheduler","schedulerActionCtor","asyncScheduler","AsyncScheduler","SchedulerAction","_active","action","popScheduler","popNumber","defaultValue","createErrorClass","createImpl","ctorFunc","isRoot","errorThrown","captureError","parentSubscription","scheduleSubscription","isValidDate","readableStreamLikeToAsyncGenerator","operate","hasLift","liftedSource","createInvalidObservableTypeError","copyProps","SafeBuffer","SlowBuffer","illegalRe","controlRe","reservedRe","windowsReservedRe","windowsTrailingRe","sanitize","replacement","sanitized","intervals","Map","setDelayedInterval","_runPeriodically","clearDelayedInterval","popCountReduce","byte","popCount","sortInternal","valueOnly","elem","_bitArrays","_data","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","mapped","reducer","initialValue","acc","find","finder","noCreate","bytePos","_bytePosFor","bitPos","targetLength","randomIndex","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","utf8CheckExtraBytes","utf8CheckIncomplete","hexRegex","numRegex","consider","leadingZeros","decimalPoint","eNotation","trimmedStr","skipLike","numTrimmedByZeros","numStr","trimZeros","AbortController","retimer","TimeoutController","_ms","getLength","isHighSurrogate","isLowSurrogate","segment","charLength","curByteLength","extendStatics","__extends","__assign","__awaiter","_arguments","generator","fulfilled","step","__generator","ops","verb","__values","__read","ar","__spreadArray","pack","__await","__asyncGenerator","fulfill","settle","__asyncValues","prevCodePoint","warned","trace","warn","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","working","isDataViewToString","isDataView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","Set","WeakMap","isWeakMap","WeakSet","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","descriptors","formatRegExp","objects","isNull","noDeprecation","throwDeprecation","traceDeprecation","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","primitive","simple","isNumber","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","braces","toUTCString","formatProperty","formatArray","cur","numLinesEst","reduceToSingleString","objectToString","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","months","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","promiseResolve","promiseReject","callbackify","callbackified","maybeCb","varint","availableTypedArrays","callBound","gOPD","$toString","hasToStringTag","typedArrays","$slice","toStrTags","typedArray","toStringTag","superProto","foundName","getter","tryTypedArrays","trunc","fromDate","fromInt64BE","fromInt64LE","nano","UTC","fromTimeT","addNano","getNano","getTimeT","getYear","toDate","M","H","C","getUTCMilliseconds","N","Y","getUTCDay","F","X","Z","isV4","isV6","toBytes","sections","v4Buffer","getUint16","V","getProtocol","resolvable","path","createProtocol","convertToString","ipBuff","ipString","bytes2ip","bytes2str","bytes2port","address","bytes2mh","bytes2onion","bytes2mb","convertToBytes","ip2bytes","str2bytes","port2bytes","mh","base58btc","multihash","mh2bytes","addr","base32","port","portBuf","onion2bytes","onion32bytes","mbstr","mb","anybaseDecoder","mb2bytes","decoders","setUint16","addrBytes","portBytes","tuplesToStringTuples","tuples","tup","protoFromTuple","tuplesToBytes","fromBytes","sizeForAddr","bytesToTuples","ParseError","bytesToString","cleanPath","stringTuplesToString","stringToBytes","stringToStringTuples","validateBytes","_DefaultMultiaddr_string","_DefaultMultiaddr_tuples","_DefaultMultiaddr_stringTuples","__classPrivateFieldGet","receiver","__classPrivateFieldSet","DNS_CODES","resolvers","symbol","isMultiaddr","DefaultMultiaddr","toOptions","family","transport","host","zone","tcp","udp","ip4","ip6","dns6","ip6zone","stringTuples","protos","protoCodes","protoNames","encapsulate","decapsulate","addrString","decapsulateCode","getPeerId","tuple","ipfs","peerIdStr","getPath","resolvableProto","resolver","nodeAddress","isThinWaistAddress","DNS4","DNS6","DNSADDR","DNS","IP","TCP","UDP","UTP","QUIC","QUICV1","_WebSockets","WebSockets","_WebSocketsSecure","WebSocketsSecure","HTTP","HTTPS","_WebRTCDirect","WebRTCDirect","_WebTransport","WebTransport","P2PWebRTCStar","P2PWebRTCDirect","Reliable","_P2P","_Circuit","CircuitRecursive","Circuit","P2P","makeMatchesFunction","partialMatch","pnames","encode_1","REST$1","MSB$1","encodeTo","int","sizeOffset","digestOffset","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","ComposedDecoder","Codec","encoder","baseX","rfc4648","bitsPerChar","written","SyntaxError","base58flickr","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","asCID","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","Digest","createV1","other","unknown","link","encodeCID","cidSymbol","cid","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","coerce","digestBytes","digestSize","multihashCode","codec","initialBytes","parseCIDtoBytes","baseCache","base2","base8","base10","base16","base16upper","base36","base36upper","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","byts","char","byt","Hasher","sha","textEncoder","textDecoder","bases","uint8ArrayToString","CID","uint8ArrayEquals","errCode","vals","pattern","literal","peerId","startsWith","certhash","matcher","matchers","fmt","toParts","exactMatch","_DNS4","_DNS6","_DNSADDR","_DNS","_IP4","_IP6","_IP","IP_OR_DOMAIN","_TCP","_UDP","TCP_OR_UDP","_QUIC","_QUICV1","QUIC_V0_OR_V1","_WEB","WebRTC","reduceValue","Reducers","protocol","assumeHttp","explicitPort","tcpUri","dnsaddr","dns4","p2p","http","https","ws","wss","multiaddrToUri","fromNodeAddress","isName","multiaddr","dnsaddrCode","dnsaddrResolver","signal","cancel","hostname","addresses","resolveTxt","flat","fromNumberTo32BitBuf","murmur3128","file","File","FormData","append","getName","encodeAddParams","ok","url","endpoint","entries","searchParams","href","statusText","streamRequest","ndjsonParse","Cluster","toClusterInfo","addDirectory","files","addCAR","car","pin","encodePinOptions","toPinResponse","unpin","local","toStatusResponse","statusAll","cids","statuses","allocation","recover","metricNames","peerList","encodeParams","recursive","hidden","shard","streamChannels","layout","chunker","rawLeaves","progress","cidVersion","hashFun","noCopy","replicationFactorMin","replicationFactorMax","shardSize","userAllocations","expireAt","toISOString","pinUpdate","origins","encodeMetadata","fromEntries","replication_factor_min","replication_factor_max","shard_size","user_allocations","expire_at","pin_update","allocations","maxDepth","max_depth","reference","peerMap","peer_map","peerName","peername","ipfsPeerId","ipfs_peer_id","commit","rpc_protocol_version","rpcProtocolVersion","cluster_peers","clusterPeers","cluster_peers_addresses","clusterPeersAddresses","u8a","u32","checkOpts","defaults","ensureBytes","setBigUint64","isLE","_32n","_u32_max","wh","wl","setUint32","assert","outputLen","blockLen","exists","checkFinished","u8to16","isLast","finalize","take","digestInto","opos","poly1305","hashCons","hashC","wrapConstructorWithKey","sigma16","sigma32","sigma16_32","sigma32_32","isAligned32","salsaBasic","rounds","counterRight","counterLen","allow128bitKeys","extendNonceFn","blockLen32","toClean","sigma","nonceLen","b32","k32","n32","d32","o32","pos32","chachaCore","cnt","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","oi","chacha20","updatePadded","computeTag","AAD","_poly1305_aead","xorStream","plength","clength","isSame","equalBytes","chacha20poly1305","_0n","_1n","wNAF","constTimeNegate","condition","neg","W","windows","unsafeLadder","elm","precomputeWindow","precomputes","maxNumber","shiftBy","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","_WINDOW_SIZE","comp","validateBasic","curve","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","ORDER","_2n","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","FpSqrt","p1div4","eql","sqr","n2","nv","legendreC","Q","Q1div2","ge","tonelliShanks","isNegativeLE","FIELD_FIELDS","validateField","field","MASK","BYTES","BITS","nLength","_nBitLength","Field","bitLen","redef","sqrtP","bitMask","isValid","is0","isOdd","lhs","rhs","FpPow","sqrN","addN","subN","mulN","inv","invertBatch","lst","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","numberToBytesLE","numberToBytesBE","bytesToNumberLE","bytesToNumberBE","FpSqrtEven","getFieldBytesLength","fieldOrder","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","hexes","padStart","numberToHexUnpadded","hexToNumber","hexByte","numberToVarBytesBE","concatBytes","arrays","sum","bitGet","bitSet","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","gen","sl","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","validators","optValidators","checkField","fieldName","isOptional","checkVal","U32_MASK64","fromBig","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","roundClean","VERIFY_DEFAULT","zip215","twistedEdwards","curveDef","CURVE","adjustScalarBytes","domain","uvRatio","mapToCurve","validateOpts","CURVE_ORDER","prehash","cHash","cofactor","modP","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","Point","ey","ez","toAffine","toInv","fromAffine","_setWindowSize","assertValidity","X2","Y2","Z2","Z4","aX2","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","x1y1","G","X3","Y3","T3","Z3","T2","wnaf","normalizeZ","scalar","multiplyUnsafe","isSmallOrder","isTorsionFree","iz","ax","ay","zz","clearCofactor","normed","lastByte","y2","isXOdd","isLastByteOdd","getExtendedPublicKey","point","toRawBytes","modN","modN_LE","hashed","pointBytes","hashDomainToScalar","msgs","verifyOpts","getPublicKey","sig","SB","fromHex","ExtendedPoint","utils","randomPrivateKey","precompute","montgomery","montgomeryBits","powPminus2","Gu","montgomeryBytes","cswap","x_2","x_3","dummy","assertFieldElement","a24","encodeUCoordinate","pointU","uEnc","decodeUCoordinate","pu","x_1","sw","z_2","z_3","k_t","AA","BB","DA","CB","dacb","da_cb","z2","montgomeryLadder","decodeScalar","GuBytes","getSharedSecret","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","x25519","ELL2_C1","Maj","SHA256_K","IV","SHA256_W","W15","W2","iHash","oHash","_cloneInto","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_isCompressed","weierstrassEquation","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","k1neg","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","weierstrass","bits2int","bits2int_modN","lowS","compressedLen","uncompressedLen","invN","cat","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","fromPrivateKey","privateA","publicB","drbg","sg","_sig","fromDER","derError","fromCompact","getHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","POW_2_128","SHA2","padOffset","dataView","oview","outLen","createView","Hash","wrapConstructor","bytesLength","CU_O","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","toAffineBatch","assertExtPoint","affinePoint","normalizeScalar","P0","invZ","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","assertRstPoint","RistrettoPoint","ep","Ns","Ns_D_is_sq","s_","edIsNegative","Nt","W0","W1","W3","bytes255ToNumberLE","R1","calcElligatorRistrettoMap","R2","emsg","numberTo32BytesLE","u1_2","u2_2","invertSqrt","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","toX25519","u8","every","uint8a","numberTo32BytesBE","MAX_255B","pow_2_252_3","v7","modlLE","adjustBytes25519","checkPrivateKey","getKeyFromHash","_sha512Sync","prepareVerification","finishVerification","kA","web","TORSION_SUBGROUP","hashToPrivateScalar","createHash","cached","sha512Sync","groupLen","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","scratch","Z1Z1","Z2Z2","S1","S2","x1b","HH","HHH","iz1","iz2","iz3","isShort","bytesToNumber","isValidFieldElement","rt","isYOdd","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","normalizeSignature","truncateHash","rinv","numTo32bStr","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","parseDERSignature","HALF","sHex","rHex","sHexL","rHexL","rLen","numTo32b","truncateOnly","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","hmacSha256","hmacSync","checkSync","reseedSync","kmdToSig","kinv","normalizePublicKey","bits2octets","z1","initSigArgs","finalizeSig","recSig","der","recovered","canonical","vopts","sinv","TAGGED_HASH_PREFIXES","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","hashes","codecs","readonly","linksWithin","element","elementPath","links","treeWithin","Block","asBlock","createUnsafe","maybeValue","aa","bb","isBinary","toStringV0","toStringV1","codeOffset","hashOffset","walk","load","b58Cid","nanoid","dispatchEvent","pDefer","AbortError","getDOMException","errorMessage","DOMException","getAbortedReason","normalizeEmitter","pEventMultiple","returnValue","rejectionEvents","multiArgs","resolveImmediately","POSITIVE_INFINITY","throwIfAborted","onItem","arguments_","rejectHandler","rejectionEvent","milliseconds","fallback","customTimers","cancelablePromise","aborted","timeoutError","finally","pTimeout","pEvent","arrayPromise","_PriorityQueue_queue","PriorityQueue","enqueue","priority","comparator","it","lowerBound","dequeue","_PQueue_instances","_PQueue_carryoverConcurrencyCount","_PQueue_isIntervalIgnored","_PQueue_intervalCount","_PQueue_intervalCap","_PQueue_interval","_PQueue_intervalEnd","_PQueue_intervalId","_PQueue_timeoutId","_PQueue_queue","_PQueue_queueClass","_PQueue_pending","_PQueue_concurrency","_PQueue_isPaused","_PQueue_throwOnTimeout","_PQueue_doesIntervalAllowAnother_get","_PQueue_doesConcurrentAllowAnother_get","_PQueue_next","_PQueue_onResumeInterval","_PQueue_isIntervalPaused_get","_PQueue_tryToStartAnother","_PQueue_initializeIntervalIfNeeded","_PQueue_onInterval","_PQueue_processQueue","_PQueue_throwOnAbort","_PQueue_onEvent","PQueue","carryoverConcurrencyCount","intervalCap","concurrency","autoStart","queueClass","throwOnTimeout","newConcurrency","function_","race","functions","sizeBy","canInitializeInterval","job","_resolve","pReflect","isFulfilled","isRejected","Node","Queue","pLimit","activeCount","pendingCount","clearQueue","pSettle","is_valid","ipaddr","NETMASK_RANGES","ip_range","ipv6_check","ip_addr","ipv4_check","toNormalizedString","ip_regex","CustomProgressEvent","Event","detail","patchReader","patchWriter","decodeMessage","encodeMessage","lengthDelimited","CODEC_TYPES","createCodec","enumeration","findValue","VARINT","enumValue","LENGTH_DELIMITED","methodNames","transducerCreator","transducer","xf","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","nIdx","ks","checkArgsLength","functor","XMap","_xfBase","a0","a6","a7","a8","a9","combined","argsIdx","combinedIdx","_isPlaceholder","symIterator","_createReduce","arrayReduce","methodReduce","iterableReduce","_xArrayReduce","thisObj","_xIterableReduce","_xMethodReduce","methodName","XWrap","_pipe","methodname","fromIndex","toIndex","_clone","deep","_ObjectMap","param","_isPrimitive","copiedValue","cachedCopy","ignoreCase","multiline","sticky","unicode","dotAll","hashedKey","bucket","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xreduceBy","elt","_curry1","f1","_curry2","f2","_curry3","f3","toPairs","pairs","zipObj","withNativeArrayBuffer","withNativeBlob","withNativeFile","hasBinary","deconstructPacket","buffers","packetData","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","deconstruction","reviver","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","connect","connect_error","disconnect","disconnecting","newListener","Socket","io","connected","receiveBuffer","sendBuffer","_queueSeq","ids","acks","auth","_opts","_autoConnect","disconnected","subEvents","subs","onopen","onpacket","_readyState","fromQueue","volatile","_addToQueue","compress","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","setTimeoutFn","clearTimeoutFn","emitWithAck","withErr","tryCount","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","_lastOffset","description","sid","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","emitBuffered","subDestroy","close","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","jitter","rand","setMin","setMax","setJitter","Manager","uri","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","maybeReconnectOnOpen","_reconnecting","reconnect","socket","skipReconnect","openSubDestroy","errorSub","cleanup","autoUnref","onping","ondecoded","_close","encodedPackets","onreconnect","lookup","loc","sameNamespace","forceNew","multiplex","queryKey","isPlainObject","sortKeys","seenInput","seenOutput","deepSortArray","seenIndex","_sortKeys","newValue","fileInfo","position","numBuffer","token","uint8Array","readBuffer","peekBuffer","bytesLeft","normalizeOptions","mayBeLess","BufferTokenizer","normOptions","bytes2read","fromBuffer","dv","UINT8","UINT16_LE","UINT16_BE","UINT32_LE","UINT32_BE","INT32_BE","UINT64_LE","getBigUint64","StringType","AnsiStringType","until","codePointToString","singleByteDecoder","cp","bite","windows1252","encodeUint8Array","encodeUint8ArrayList","decodeUint8Array","decodeUint8ArrayList","findBufAndOffset","bufs","bufEnd","isUint8ArrayList","Uint8ArrayList","appendAll","prepend","prependAll","beginInclusive","endExclusive","_subList","sublist","bufStart","sliceStartInBuf","sliceEndsInBuf","needle","rightmostPositions","lastPatIndex","getBigInt64","setBigInt64","asUint8Array","ascii","BASES","latin1","isEnvWithDom","nodeType","isElectron","isBrowser","isElectronMain","isElectronRenderer","isWebWorker","importScripts","WorkerGlobalScope","isReactNative","product"],"sourceRoot":""}